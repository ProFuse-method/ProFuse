(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h76):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire [(2'h3):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire50;
  wire [(3'h6):(1'h0)] wire48;
  wire signed [(3'h7):(1'h0)] wire46;
  wire signed [(4'hb):(1'h0)] wire17;
  wire signed [(2'h3):(1'h0)] wire16;
  wire signed [(4'h8):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire8;
  wire signed [(2'h2):(1'h0)] wire7;
  wire [(3'h5):(1'h0)] wire6;
  wire [(2'h2):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire4;
  reg [(3'h6):(1'h0)] reg49 = (1'h0);
  reg [(3'h6):(1'h0)] reg14 = (1'h0);
  reg [(4'h8):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg12 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg11 = (1'h0);
  reg [(3'h7):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  assign y = {wire50,
                 wire48,
                 wire46,
                 wire17,
                 wire16,
                 wire15,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg49,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 (1'h0)};
  assign wire4 = (($unsigned((|wire2)) != ((wire3 * (8'haf)) || (+wire1))) ?
                     ($signed((wire3 | wire1)) & (^~(~&wire3))) : $signed((~|(wire2 == wire3))));
  assign wire5 = $unsigned($signed(wire3));
  assign wire6 = ($unsigned($unsigned((wire1 - wire0))) <= $signed(wire2[(1'h0):(1'h0)]));
  assign wire7 = (&(^~(~^$unsigned(wire3))));
  assign wire8 = (~^$unsigned((^~wire0)));
  always
    @(posedge clk) begin
      reg9 <= ({((~^wire1) ?
              (wire0 >> wire1) : $signed(wire6))} >= (~|wire6[(2'h3):(1'h0)]));
      if ({reg9})
        begin
          if ($signed({(&wire0[(3'h4):(1'h0)])}))
            begin
              reg10 <= {$signed(((~^wire6) ?
                      (^~wire8) : (wire0 ? wire6 : wire5)))};
            end
          else
            begin
              reg10 <= $unsigned($unsigned(wire8[(1'h0):(1'h0)]));
              reg11 <= (^~wire7);
              reg12 <= ((&(wire6 ?
                  wire3[(2'h3):(2'h2)] : (wire7 ?
                      reg9 : reg10))) + $unsigned($unsigned((+wire7))));
            end
          reg13 <= (~^{wire7});
          reg14 <= {{$unsigned((wire2 ? wire6 : reg10))}};
        end
      else
        begin
          reg10 <= wire1[(2'h2):(1'h0)];
          reg11 <= wire0[(2'h3):(2'h2)];
          reg12 <= $unsigned($unsigned((~((8'ha1) ? wire8 : (8'ha8)))));
        end
    end
  assign wire15 = {(({reg14} ? reg11 : $unsigned((8'ha4))) ?
                          ((reg10 == reg11) ?
                              $unsigned((8'h9d)) : (reg12 ?
                                  reg10 : reg12)) : $unsigned($unsigned(wire3)))};
  assign wire16 = $unsigned(($signed($signed(wire5)) || ($unsigned(wire5) ?
                      (8'h9d) : wire5[(1'h0):(1'h0)])));
  assign wire17 = ($unsigned((~&(^reg10))) == (({reg12} >= (wire8 ?
                          reg9 : wire8)) ?
                      ((wire15 ? wire15 : reg10) ?
                          ((8'ha1) | reg13) : $unsigned(reg14)) : {$signed(reg12)}));
  module18 #() modinst47 (wire46, clk, wire0, wire4, wire8, wire15);
  assign wire48 = (+(~|($signed((8'haa)) ? $signed((8'ha6)) : (8'ha1))));
  always
    @(posedge clk) begin
      reg49 <= ((wire1[(1'h0):(1'h0)] ? wire15 : (~&(^~wire15))) ?
          {$signed((reg13 ~^ (8'ha1)))} : wire17);
    end
  assign wire50 = $unsigned((reg10 ~^ ($unsigned(reg49) && reg11[(2'h3):(1'h0)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18
#(parameter param45 = {(((~&(8'ha4)) || ((8'h9e) | (8'haf))) ? ((~&(8'hae)) ? ((8'ha9) ^~ (8'ha7)) : (8'haa)) : (((8'hac) ? (8'haf) : (8'ha4)) ? ((8'ha5) & (8'ha7)) : {(8'hac)}))})
(y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h94):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire22;
  input wire [(4'ha):(1'h0)] wire21;
  input wire [(4'h9):(1'h0)] wire20;
  input wire signed [(2'h3):(1'h0)] wire19;
  wire signed [(3'h7):(1'h0)] wire42;
  wire signed [(3'h7):(1'h0)] wire31;
  wire [(3'h6):(1'h0)] wire30;
  wire [(4'hb):(1'h0)] wire27;
  wire signed [(3'h5):(1'h0)] wire26;
  wire [(4'ha):(1'h0)] wire25;
  wire [(3'h5):(1'h0)] wire24;
  wire [(4'ha):(1'h0)] wire23;
  reg signed [(2'h3):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg43 = (1'h0);
  reg [(4'h8):(1'h0)] reg41 = (1'h0);
  reg [(4'h9):(1'h0)] reg40 = (1'h0);
  reg [(3'h7):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg37 = (1'h0);
  reg [(2'h2):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg35 = (1'h0);
  reg [(2'h3):(1'h0)] reg34 = (1'h0);
  reg [(2'h2):(1'h0)] reg33 = (1'h0);
  reg [(4'hb):(1'h0)] reg32 = (1'h0);
  reg [(3'h7):(1'h0)] reg29 = (1'h0);
  reg [(4'h8):(1'h0)] reg28 = (1'h0);
  assign y = {wire42,
                 wire31,
                 wire30,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 reg44,
                 reg43,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg29,
                 reg28,
                 (1'h0)};
  assign wire23 = ($signed(wire22[(1'h1):(1'h1)]) ~^ wire19);
  assign wire24 = (-{wire19});
  assign wire25 = $signed($unsigned(wire23));
  assign wire26 = ((8'haa) ^~ $signed(($signed(wire21) ?
                      ((8'hae) ? wire23 : wire23) : $signed((8'ha9)))));
  assign wire27 = {{(wire26 ? wire26[(1'h0):(1'h0)] : wire26[(3'h5):(3'h4)])}};
  always
    @(posedge clk) begin
      reg28 <= ($unsigned({{wire22}}) ?
          wire22[(4'hb):(3'h5)] : $signed($unsigned(((8'ha8) >> wire24))));
      reg29 <= wire27[(3'h7):(3'h5)];
    end
  assign wire30 = wire27;
  assign wire31 = (~&(-(8'haf)));
  always
    @(posedge clk) begin
      if (wire24)
        begin
          reg32 <= $signed((-{(wire19 ? reg29 : wire31)}));
          reg33 <= {$unsigned(reg32[(1'h0):(1'h0)])};
          if (wire27[(4'h8):(2'h3)])
            begin
              reg34 <= $signed((($signed((8'haf)) ?
                      $unsigned((8'had)) : wire31) ?
                  ((reg29 == reg29) ?
                      wire26 : wire26) : ($unsigned((8'hab)) * wire19[(2'h3):(2'h3)])));
            end
          else
            begin
              reg34 <= $signed($signed((~^reg34[(2'h3):(1'h1)])));
              reg35 <= ((wire26[(2'h3):(2'h3)] & {(wire22 - (8'haf))}) && ((wire21[(4'h9):(1'h0)] || $signed(reg34)) | (wire23[(1'h0):(1'h0)] & wire25)));
              reg36 <= wire31;
            end
        end
      else
        begin
          reg32 <= $unsigned((+(wire20 ? $signed(wire21) : $unsigned(reg28))));
          reg33 <= $unsigned((|($signed(reg28) ?
              ((8'ha6) ? reg36 : wire20) : {reg36})));
        end
      if ($signed(($unsigned(reg34[(2'h3):(1'h1)]) ?
          ((&(8'hb0)) ^~ $unsigned(reg35)) : $signed((~&wire20)))))
        begin
          reg37 <= (-(((^wire20) ? (!(8'ha3)) : $signed(reg36)) ?
              $unsigned((^~wire20)) : (^reg28[(1'h0):(1'h0)])));
          if (reg36[(1'h0):(1'h0)])
            begin
              reg38 <= ({$signed((reg33 ? reg36 : reg36))} ?
                  (8'h9f) : $signed(((wire23 ? (8'hb0) : (8'h9f)) ?
                      (wire19 << wire21) : (wire30 + reg29))));
            end
          else
            begin
              reg38 <= reg33;
              reg39 <= $signed($signed(((reg33 ? wire22 : wire31) ?
                  $unsigned(reg37) : (~&(8'h9f)))));
            end
          reg40 <= {$signed($signed(reg39[(3'h7):(3'h7)]))};
        end
      else
        begin
          reg37 <= {reg36};
        end
      reg41 <= $signed((reg38 ?
          (reg36[(1'h0):(1'h0)] < (wire19 ?
              reg36 : reg36)) : $signed({wire25})));
    end
  assign wire42 = reg34;
  always
    @(posedge clk) begin
      reg43 <= wire30;
      reg44 <= $unsigned($unsigned((~$signed(wire23))));
    end
endmodule