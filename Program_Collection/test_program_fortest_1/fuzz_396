(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h8d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire0;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire3;
  wire [(3'h4):(1'h0)] wire68;
  wire [(2'h3):(1'h0)] wire67;
  wire signed [(2'h3):(1'h0)] wire66;
  wire signed [(2'h3):(1'h0)] wire4;
  wire [(3'h6):(1'h0)] wire8;
  wire signed [(3'h5):(1'h0)] wire9;
  wire signed [(4'h9):(1'h0)] wire10;
  wire [(4'hb):(1'h0)] wire56;
  reg [(4'h9):(1'h0)] reg73 = (1'h0);
  reg [(3'h4):(1'h0)] reg72 = (1'h0);
  reg [(2'h2):(1'h0)] reg71 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg70 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg69 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg65 = (1'h0);
  reg [(4'h9):(1'h0)] reg64 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg63 = (1'h0);
  reg [(3'h6):(1'h0)] reg62 = (1'h0);
  reg [(3'h5):(1'h0)] reg61 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg59 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg58 = (1'h0);
  reg [(4'h8):(1'h0)] reg5 = (1'h0);
  reg [(3'h7):(1'h0)] reg6 = (1'h0);
  reg [(2'h3):(1'h0)] reg7 = (1'h0);
  assign y = {wire68,
                 wire67,
                 wire66,
                 wire4,
                 wire8,
                 wire9,
                 wire10,
                 wire56,
                 reg73,
                 reg72,
                 reg71,
                 reg70,
                 reg69,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 reg58,
                 reg5,
                 reg6,
                 reg7,
                 (1'h0)};
  assign wire4 = ((((wire0 ? wire3 : wire2) <<< $signed(wire1)) ?
                     {$unsigned((8'h9f))} : {(~|wire1)}) ^~ {((wire3 < wire3) ?
                         (wire2 ? wire3 : wire0) : (+wire0))});
  always
    @(posedge clk) begin
      reg5 <= wire0[(1'h1):(1'h1)];
      reg6 <= {(~$signed($signed(wire1)))};
      reg7 <= (^$signed($signed((wire4 ? reg6 : (8'ha7)))));
    end
  assign wire8 = $unsigned(((&(wire0 - (8'haf))) <<< $signed($signed(wire0))));
  assign wire9 = reg5;
  assign wire10 = (~wire1);
  module11 #() modinst57 (.wire14(reg6), .y(wire56), .wire13(wire3), .wire15(wire0), .wire12(wire2), .clk(clk));
  always
    @(posedge clk) begin
      if (wire1)
        begin
          reg58 <= (-$signed(wire3[(4'h8):(1'h0)]));
          reg59 <= ($unsigned((wire56 ?
              $signed(reg58) : $signed(reg58))) ~^ $signed(({wire0} ?
              reg7 : wire56)));
          reg60 <= $signed($unsigned(wire9[(2'h3):(2'h3)]));
        end
      else
        begin
          reg58 <= $signed((wire10[(3'h7):(3'h4)] || $unsigned(wire8[(2'h2):(1'h0)])));
          if ($signed(reg5))
            begin
              reg59 <= $unsigned(wire10);
              reg60 <= ((wire56[(3'h4):(3'h4)] ?
                      (^~$unsigned(wire3)) : ((reg5 <= (8'hb0)) != $unsigned(reg59))) ?
                  ($signed(wire2) ?
                      $unsigned($signed(reg6)) : (^~(|wire4))) : ((~|(8'hb0)) ?
                      wire1 : ($unsigned(reg58) != {reg5})));
              reg61 <= $signed(reg58);
            end
          else
            begin
              reg59 <= $signed(wire9);
            end
          if ((({$signed(wire0)} >>> (8'had)) ?
              $unsigned((reg61 >> (reg60 == reg60))) : (~|wire1)))
            begin
              reg62 <= $unsigned(($unsigned((wire0 >>> wire4)) == wire2));
              reg63 <= $unsigned((-((~^(8'haf)) ? wire10 : $signed(reg61))));
            end
          else
            begin
              reg62 <= $unsigned((reg63[(3'h5):(2'h2)] != wire1));
              reg63 <= $signed((+wire10));
              reg64 <= wire0[(4'h9):(4'h8)];
            end
        end
      reg65 <= wire1;
    end
  assign wire66 = wire1[(3'h6):(3'h5)];
  assign wire67 = (~|(wire2[(3'h7):(3'h6)] || reg62[(3'h4):(2'h2)]));
  assign wire68 = {(($signed(reg59) >>> $unsigned((8'ha6))) ?
                          (wire1[(1'h0):(1'h0)] ?
                              (&wire10) : reg63[(1'h1):(1'h0)]) : ($unsigned(reg64) ?
                              reg63 : (wire3 ? wire1 : reg60)))};
  always
    @(posedge clk) begin
      reg69 <= wire67[(2'h3):(2'h2)];
      if ($unsigned(reg69[(2'h2):(1'h1)]))
        begin
          reg70 <= $signed({$unsigned(reg7[(2'h2):(2'h2)])});
        end
      else
        begin
          if (reg7[(1'h1):(1'h0)])
            begin
              reg70 <= wire10[(4'h8):(1'h1)];
              reg71 <= ((({(8'hb0)} < ((8'ha7) >> (8'hae))) < (wire10[(3'h6):(2'h2)] ?
                  {wire9} : $signed(reg61))) << wire67[(2'h2):(2'h2)]);
              reg72 <= ((wire8[(3'h5):(2'h3)] ?
                      $signed($signed(wire9)) : ((reg59 ?
                          reg70 : reg58) < {reg61})) ?
                  ($signed(reg6) ?
                      reg63 : reg7) : $signed((|reg63[(3'h5):(1'h1)])));
            end
          else
            begin
              reg70 <= (reg6 ?
                  $signed($signed((~wire67))) : $signed({reg71[(1'h0):(1'h0)]}));
            end
          reg73 <= $unsigned(reg69);
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h57):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire15;
  input wire [(3'h7):(1'h0)] wire14;
  input wire [(4'hb):(1'h0)] wire13;
  input wire [(3'h7):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire55;
  wire [(4'h9):(1'h0)] wire54;
  wire signed [(4'h9):(1'h0)] wire52;
  wire [(3'h7):(1'h0)] wire40;
  wire [(4'hb):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire38;
  wire [(4'h9):(1'h0)] wire36;
  wire [(3'h6):(1'h0)] wire19;
  wire signed [(4'h8):(1'h0)] wire18;
  wire signed [(3'h7):(1'h0)] wire17;
  wire signed [(3'h7):(1'h0)] wire16;
  assign y = {wire55,
                 wire54,
                 wire52,
                 wire40,
                 wire39,
                 wire38,
                 wire36,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 (1'h0)};
  assign wire16 = $signed(((-$signed(wire14)) ?
                      wire15 : $unsigned($signed(wire15))));
  assign wire17 = $signed($unsigned((wire14 ~^ $unsigned(wire16))));
  assign wire18 = $unsigned(wire17[(3'h5):(2'h3)]);
  assign wire19 = (+$unsigned($signed(wire13)));
  module20 #() modinst37 (.wire21(wire12), .wire22(wire15), .wire23(wire14), .clk(clk), .wire24(wire16), .y(wire36));
  assign wire38 = ((wire15[(2'h3):(1'h1)] ?
                      (8'had) : wire15[(2'h3):(2'h2)]) >= wire18[(2'h2):(1'h0)]);
  assign wire39 = $unsigned((!(~^{(8'ha0)})));
  assign wire40 = wire13[(4'ha):(1'h0)];
  module41 #() modinst53 (wire52, clk, wire36, wire17, wire38, wire39);
  assign wire54 = wire36;
  assign wire55 = (8'ha4);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module41  (y, clk, wire45, wire44, wire43, wire42);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire45;
  input wire signed [(3'h6):(1'h0)] wire44;
  input wire signed [(3'h5):(1'h0)] wire43;
  input wire [(4'hb):(1'h0)] wire42;
  wire signed [(4'h8):(1'h0)] wire51;
  wire signed [(2'h2):(1'h0)] wire50;
  wire signed [(3'h7):(1'h0)] wire49;
  wire [(4'hb):(1'h0)] wire48;
  wire [(4'h8):(1'h0)] wire47;
  wire [(4'hb):(1'h0)] wire46;
  assign y = {wire51, wire50, wire49, wire48, wire47, wire46, (1'h0)};
  assign wire46 = wire43[(2'h2):(2'h2)];
  assign wire47 = (wire46 == wire43[(2'h2):(1'h1)]);
  assign wire48 = (8'hb0);
  assign wire49 = (8'haf);
  assign wire50 = ((8'ha4) >> $unsigned(($signed(wire48) >>> wire44)));
  assign wire51 = $signed(wire42);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20  (y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire24;
  input wire signed [(2'h2):(1'h0)] wire23;
  input wire signed [(4'ha):(1'h0)] wire22;
  input wire [(3'h7):(1'h0)] wire21;
  wire [(3'h4):(1'h0)] wire35;
  wire [(4'h8):(1'h0)] wire34;
  wire [(3'h5):(1'h0)] wire33;
  wire [(4'hb):(1'h0)] wire32;
  wire signed [(3'h5):(1'h0)] wire31;
  wire [(4'h9):(1'h0)] wire30;
  wire [(2'h2):(1'h0)] wire27;
  wire [(2'h3):(1'h0)] wire26;
  wire [(4'h9):(1'h0)] wire25;
  reg [(2'h2):(1'h0)] reg29 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg28 = (1'h0);
  assign y = {wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire27,
                 wire26,
                 wire25,
                 reg29,
                 reg28,
                 (1'h0)};
  assign wire25 = {(wire21 ? $unsigned(wire22[(3'h6):(3'h5)]) : (!{(8'haa)}))};
  assign wire26 = $signed($signed(($unsigned(wire24) ?
                      wire23 : (wire24 || wire25))));
  assign wire27 = (($unsigned($unsigned(wire21)) ?
                      ($unsigned(wire22) ?
                          $unsigned(wire25) : $signed(wire26)) : $signed((wire23 ?
                          wire22 : wire26))) - $signed((|((8'haa) ?
                      wire24 : wire24))));
  always
    @(posedge clk) begin
      reg28 <= ((((-wire24) >>> (wire27 ?
          wire25 : wire22)) <= ($unsigned(wire21) ?
          {wire22} : {wire21})) + $signed({(~|wire21)}));
      reg29 <= wire27[(1'h1):(1'h0)];
    end
  assign wire30 = ((+$signed(wire24)) ?
                      {$unsigned((wire25 >> wire22))} : {reg29[(2'h2):(2'h2)]});
  assign wire31 = (wire27 ?
                      ($signed((!wire30)) ?
                          $unsigned((wire24 >= (8'haf))) : (&$signed(wire22))) : (wire24[(1'h0):(1'h0)] + ($unsigned(wire30) ?
                          (reg29 > wire30) : (wire23 ? reg29 : wire25))));
  assign wire32 = (8'ha8);
  assign wire33 = wire23[(2'h2):(1'h1)];
  assign wire34 = wire26[(1'h1):(1'h1)];
  assign wire35 = (wire33 ?
                      (wire34 ?
                          $signed(wire25[(4'h9):(1'h0)]) : wire26) : wire33[(2'h3):(2'h3)]);
endmodule