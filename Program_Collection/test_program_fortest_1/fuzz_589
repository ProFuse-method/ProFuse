(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire signed [(2'h3):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire7;
  wire [(3'h5):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire5;
  reg signed [(4'hb):(1'h0)] reg4 = (1'h0);
  assign y = {wire7, wire6, wire5, reg4, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= ((~(|$unsigned(wire1))) ?
          $unsigned((&$unsigned((8'hac)))) : ($unsigned($unsigned(wire0)) ?
              ($unsigned(wire0) ?
                  ((8'ha7) ^~ (8'h9f)) : (^wire2)) : $unsigned((wire3 || wire3))));
    end
  assign wire5 = wire1;
  assign wire6 = ($unsigned(reg4) && (wire1[(2'h3):(1'h0)] ?
                     ($signed(wire3) ?
                         $unsigned(wire2) : $unsigned(wire1)) : $signed((wire1 ?
                         reg4 : wire3))));
  assign wire7 = (wire1[(2'h2):(1'h0)] ?
                     $unsigned(($signed(wire2) ?
                         $signed(wire1) : wire2[(1'h0):(1'h0)])) : wire5);
endmodule