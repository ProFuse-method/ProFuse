(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire93;
  wire signed [(3'h4):(1'h0)] wire91;
  wire signed [(3'h4):(1'h0)] wire90;
  wire [(4'ha):(1'h0)] wire89;
  wire signed [(4'ha):(1'h0)] wire88;
  wire signed [(3'h7):(1'h0)] wire87;
  wire [(3'h4):(1'h0)] wire85;
  wire signed [(4'hb):(1'h0)] wire15;
  wire [(4'ha):(1'h0)] wire4;
  assign y = {wire93,
                 wire91,
                 wire90,
                 wire89,
                 wire88,
                 wire87,
                 wire85,
                 wire15,
                 wire4,
                 (1'h0)};
  assign wire4 = wire1[(3'h5):(1'h0)];
  module5 #() modinst16 (.wire6(wire1), .wire8(wire3), .y(wire15), .wire7(wire0), .clk(clk), .wire9(wire2));
  module17 #() modinst86 (wire85, clk, wire0, wire1, wire15, wire2);
  assign wire87 = ((!wire1[(3'h5):(1'h1)]) * wire85);
  assign wire88 = ((wire1 <= wire2) && (~$unsigned((wire87 ^~ (8'ha1)))));
  assign wire89 = $signed((+(^$signed(wire1))));
  assign wire90 = $unsigned((wire88[(1'h0):(1'h0)] ?
                      {wire15} : {(wire85 * wire0)}));
  module17 #() modinst92 (wire91, clk, wire15, wire0, wire2, wire88);
  assign wire93 = (wire1 != $unsigned($unsigned(wire87)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17
#(parameter param84 = (({{(8'ha6)}} != (+{(8'h9f)})) ? {(~&((8'hab) ^~ (8'hb0)))} : ({(&(8'h9d))} ? {((8'ha3) - (8'ha5))} : (8'ha5))))
(y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire21;
  input wire [(4'ha):(1'h0)] wire20;
  input wire [(4'hb):(1'h0)] wire19;
  input wire signed [(4'ha):(1'h0)] wire18;
  wire signed [(3'h4):(1'h0)] wire83;
  wire signed [(4'h9):(1'h0)] wire82;
  wire [(3'h6):(1'h0)] wire78;
  wire [(2'h3):(1'h0)] wire76;
  wire [(3'h7):(1'h0)] wire75;
  wire signed [(3'h6):(1'h0)] wire73;
  wire signed [(3'h5):(1'h0)] wire44;
  wire signed [(3'h7):(1'h0)] wire43;
  wire signed [(2'h2):(1'h0)] wire41;
  reg signed [(3'h4):(1'h0)] reg81 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg80 = (1'h0);
  reg [(3'h5):(1'h0)] reg79 = (1'h0);
  reg [(4'h9):(1'h0)] reg77 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg49 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg48 = (1'h0);
  reg [(3'h5):(1'h0)] reg47 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg46 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg45 = (1'h0);
  assign y = {wire83,
                 wire82,
                 wire78,
                 wire76,
                 wire75,
                 wire73,
                 wire44,
                 wire43,
                 wire41,
                 reg81,
                 reg80,
                 reg79,
                 reg77,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 (1'h0)};
  module22 #() modinst42 (wire41, clk, wire20, wire21, wire19, wire18);
  assign wire43 = (((~|(wire41 | wire41)) == $unsigned((~&wire41))) * $signed(({wire19} ?
                      (wire21 << wire41) : (wire20 ? wire19 : wire19))));
  assign wire44 = wire20[(2'h3):(1'h1)];
  always
    @(posedge clk) begin
      reg45 <= (~|$unsigned((+(-wire19))));
      reg46 <= ((~({reg45} ?
          (wire43 ?
              wire21 : (8'hae)) : (8'h9d))) < (($unsigned(wire19) <<< $unsigned((8'h9c))) || wire20));
      if ($unsigned(($unsigned((wire43 <= wire41)) <<< $unsigned($unsigned(reg45)))))
        begin
          if ((^$unsigned(($unsigned(wire43) ?
              ((8'ha4) ? wire41 : wire18) : (wire18 ~^ reg46)))))
            begin
              reg47 <= wire21[(1'h0):(1'h0)];
              reg48 <= ($unsigned((wire44[(2'h3):(2'h3)] <<< (reg47 ?
                  wire44 : (8'h9d)))) <= $unsigned({wire43[(1'h0):(1'h0)]}));
            end
          else
            begin
              reg47 <= (reg47 ? $unsigned(reg46[(1'h1):(1'h0)]) : wire41);
              reg48 <= (-wire20);
              reg49 <= ($signed((-((8'h9e) ? (8'ha2) : wire21))) != ({(wire18 ?
                      reg48 : wire21)} >= wire41[(1'h1):(1'h0)]));
            end
        end
      else
        begin
          reg47 <= $signed($signed(wire20));
          reg48 <= ((((wire44 ? reg48 : wire19) ?
                  $unsigned(wire19) : (~^(8'ha2))) ?
              ((^~reg47) || reg49[(1'h0):(1'h0)]) : $unsigned((~&(8'haa)))) == $signed((reg47 >> $signed(wire20))));
          reg49 <= $unsigned(({$unsigned(reg49)} ?
              {wire43} : ((wire21 <= wire43) ?
                  wire19[(1'h1):(1'h0)] : reg45[(3'h6):(1'h0)])));
        end
    end
  module50 #() modinst74 (wire73, clk, reg45, wire44, wire20, reg49);
  assign wire75 = $signed($signed(((8'ha3) ? wire21 : $signed(reg48))));
  assign wire76 = (+wire21[(4'h8):(4'h8)]);
  always
    @(posedge clk) begin
      reg77 <= (wire76 ?
          {((reg47 ?
                  wire75 : wire44) - wire21[(3'h5):(3'h4)])} : (wire19[(1'h1):(1'h0)] * wire21[(3'h4):(3'h4)]));
    end
  assign wire78 = ({$unsigned($unsigned(reg45))} ?
                      wire21[(3'h6):(2'h2)] : wire76);
  always
    @(posedge clk) begin
      reg79 <= wire19;
      reg80 <= ((($unsigned(reg49) ?
          {wire73} : (-reg77)) - reg77[(3'h4):(1'h1)]) + $unsigned(((-wire41) ^ (reg46 ~^ wire73))));
      reg81 <= {wire44[(3'h4):(3'h4)]};
    end
  assign wire82 = $signed(reg77[(4'h8):(3'h5)]);
  assign wire83 = reg79[(1'h0):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param14 = (-(({(8'hb0)} - ((8'hae) != (8'ha4))) ? (((8'ha2) <= (8'h9e)) ? (~|(8'ha5)) : ((8'ha3) ? (8'hab) : (8'ha9))) : (~|((8'ha3) > (8'had))))))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h18):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire9;
  input wire [(3'h7):(1'h0)] wire8;
  input wire signed [(3'h5):(1'h0)] wire7;
  input wire [(3'h7):(1'h0)] wire6;
  wire signed [(3'h5):(1'h0)] wire13;
  wire [(3'h7):(1'h0)] wire12;
  wire signed [(3'h5):(1'h0)] wire10;
  reg signed [(3'h6):(1'h0)] reg11 = (1'h0);
  assign y = {wire13, wire12, wire10, reg11, (1'h0)};
  assign wire10 = $unsigned($unsigned(wire8));
  always
    @(posedge clk) begin
      reg11 <= (8'ha3);
    end
  assign wire12 = (|reg11);
  assign wire13 = wire7[(3'h4):(1'h1)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module50  (y, clk, wire54, wire53, wire52, wire51);
  output wire [(32'h7a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire54;
  input wire signed [(3'h5):(1'h0)] wire53;
  input wire [(4'ha):(1'h0)] wire52;
  input wire [(3'h6):(1'h0)] wire51;
  wire signed [(4'h9):(1'h0)] wire72;
  wire signed [(4'h9):(1'h0)] wire70;
  wire signed [(3'h4):(1'h0)] wire69;
  wire [(3'h4):(1'h0)] wire68;
  wire signed [(3'h4):(1'h0)] wire67;
  wire [(3'h5):(1'h0)] wire66;
  wire [(3'h6):(1'h0)] wire57;
  wire signed [(3'h5):(1'h0)] wire56;
  wire signed [(3'h4):(1'h0)] wire55;
  reg signed [(4'h9):(1'h0)] reg71 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg64 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg63 = (1'h0);
  reg [(4'hb):(1'h0)] reg62 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg61 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg60 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg59 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg58 = (1'h0);
  assign y = {wire72,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire57,
                 wire56,
                 wire55,
                 reg71,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 reg58,
                 (1'h0)};
  assign wire55 = {wire52};
  assign wire56 = wire54[(3'h6):(2'h2)];
  assign wire57 = $unsigned((wire53[(1'h0):(1'h0)] || (&wire55)));
  always
    @(posedge clk) begin
      if ((8'ha0))
        begin
          reg58 <= wire52[(1'h1):(1'h0)];
          reg59 <= $signed({((+(8'ha9)) ?
                  (wire55 ? (8'haa) : wire52) : $unsigned(wire52))});
          reg60 <= (+(~^($unsigned(reg58) < wire51)));
        end
      else
        begin
          reg58 <= wire57;
          reg59 <= $unsigned($unsigned((&{wire57})));
          if ($signed(reg60[(1'h1):(1'h1)]))
            begin
              reg60 <= reg58[(2'h3):(2'h3)];
              reg61 <= (!wire57[(2'h2):(2'h2)]);
            end
          else
            begin
              reg60 <= (&(+($unsigned(reg60) <= $signed(wire51))));
              reg61 <= $signed(($signed(reg61) & (&reg61)));
            end
        end
      if (reg60)
        begin
          reg62 <= $unsigned(({(wire51 ? wire57 : reg61)} ?
              (~&$unsigned(reg58)) : $unsigned(wire55[(1'h0):(1'h0)])));
          reg63 <= ($signed((wire56 ? $signed(reg62) : $signed(wire57))) ?
              (8'h9c) : {$signed(wire56[(2'h2):(1'h0)])});
          reg64 <= (({$unsigned(wire54)} ?
                  $signed(wire54) : wire54[(2'h2):(2'h2)]) ?
              $unsigned($signed(reg62)) : (wire54 < $unsigned(wire52)));
        end
      else
        begin
          reg62 <= $unsigned($unsigned(((wire56 ? reg61 : wire54) ?
              $unsigned(wire55) : $signed(wire51))));
        end
      reg65 <= $signed((8'haa));
    end
  assign wire66 = ((~&$signed({reg60})) ?
                      (reg58[(3'h5):(2'h2)] ?
                          $signed((wire53 <= wire51)) : reg64) : reg60);
  assign wire67 = reg60[(1'h0):(1'h0)];
  assign wire68 = (($signed(reg59) ?
                          reg58[(4'h9):(2'h2)] : {(reg64 ? reg58 : wire54)}) ?
                      (~(wire57[(3'h4):(1'h0)] ?
                          $signed(wire52) : (|wire55))) : (((|wire67) << (reg59 && (8'ha4))) >> (^(wire57 | reg60))));
  assign wire69 = (reg58[(4'ha):(2'h2)] >> wire67);
  assign wire70 = wire56[(3'h5):(1'h0)];
  always
    @(posedge clk) begin
      reg71 <= (&(|{(reg62 - (8'ha6))}));
    end
  assign wire72 = (($signed((reg58 ? reg58 : wire54)) ?
                          (wire51[(3'h6):(3'h4)] ?
                              {wire57} : $unsigned(wire52)) : ((wire66 < reg59) ^ reg60)) ?
                      $unsigned((wire69[(2'h3):(1'h1)] ?
                          wire57 : ((8'ha2) ? wire56 : reg62))) : ((~(reg63 ?
                          reg58 : wire57)) == wire66[(3'h5):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module22  (y, clk, wire26, wire25, wire24, wire23);
  output wire [(32'h64):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire26;
  input wire signed [(3'h4):(1'h0)] wire25;
  input wire signed [(2'h3):(1'h0)] wire24;
  input wire [(3'h5):(1'h0)] wire23;
  wire signed [(4'ha):(1'h0)] wire40;
  wire signed [(4'h8):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire36;
  wire [(4'h9):(1'h0)] wire33;
  wire [(3'h7):(1'h0)] wire32;
  wire [(4'h8):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire30;
  wire [(4'ha):(1'h0)] wire29;
  wire [(2'h2):(1'h0)] wire28;
  reg [(3'h7):(1'h0)] reg39 = (1'h0);
  reg [(3'h5):(1'h0)] reg38 = (1'h0);
  reg [(3'h7):(1'h0)] reg35 = (1'h0);
  reg [(2'h2):(1'h0)] reg34 = (1'h0);
  reg [(3'h7):(1'h0)] reg27 = (1'h0);
  assign y = {wire40,
                 wire37,
                 wire36,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 reg39,
                 reg38,
                 reg35,
                 reg34,
                 reg27,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg27 <= wire26;
    end
  assign wire28 = $signed((((~wire26) >= wire25[(2'h3):(2'h2)]) ?
                      (~wire26[(3'h4):(1'h1)]) : wire24[(1'h1):(1'h0)]));
  assign wire29 = ($unsigned((wire26[(1'h1):(1'h1)] == wire24)) > (wire28[(1'h1):(1'h1)] ?
                      (|wire26) : $unsigned((reg27 ? (8'had) : (8'hab)))));
  assign wire30 = wire29[(3'h6):(1'h1)];
  assign wire31 = $signed($signed($unsigned(wire24)));
  assign wire32 = (&$unsigned($signed((&wire24))));
  assign wire33 = $unsigned(wire29);
  always
    @(posedge clk) begin
      reg34 <= {(~&{((8'h9d) ? wire32 : wire32)})};
      reg35 <= $unsigned(wire30[(3'h4):(2'h3)]);
    end
  assign wire36 = $signed((8'hae));
  assign wire37 = ((&{{wire33}}) != (-{(wire26 ? wire36 : wire26)}));
  always
    @(posedge clk) begin
      reg38 <= (~&(8'hac));
      reg39 <= $unsigned(((reg34[(1'h1):(1'h1)] & ((8'ha2) <= reg34)) < reg38));
    end
  assign wire40 = wire32[(3'h5):(3'h5)];
endmodule