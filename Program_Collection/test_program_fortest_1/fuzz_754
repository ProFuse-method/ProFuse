(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param81 = ((8'hac) ? (({(8'h9c)} ? ((8'h9d) ? (8'ha0) : (8'ha7)) : ((8'ha8) <= (8'h9c))) ? (((8'ha6) ? (8'ha6) : (8'ha4)) ? ((8'had) ? (8'ha4) : (8'hab)) : ((8'ha7) <<< (8'hae))) : (~(~(8'had)))) : ((!((8'ha8) > (8'ha5))) ? (~&(!(8'haf))) : (+((8'hac) & (8'ha0))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h31):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire79;
  wire signed [(4'hb):(1'h0)] wire8;
  wire signed [(3'h4):(1'h0)] wire4;
  reg signed [(2'h3):(1'h0)] reg7 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg6 = (1'h0);
  reg [(4'hb):(1'h0)] reg5 = (1'h0);
  assign y = {wire79, wire8, wire4, reg7, reg6, reg5, (1'h0)};
  assign wire4 = $signed(((!$unsigned(wire0)) * wire1));
  always
    @(posedge clk) begin
      reg5 <= ({wire2} ?
          (wire4[(1'h0):(1'h0)] ?
              ((wire4 >> wire3) ? (|wire0) : {wire4}) : ((|wire1) ?
                  $signed(wire4) : ((8'hae) ?
                      wire1 : wire2))) : ((~|(~^wire0)) ^ wire1[(2'h2):(1'h1)]));
      reg6 <= reg5[(3'h4):(1'h0)];
      reg7 <= $unsigned($unsigned($signed((reg6 ? wire2 : wire0))));
    end
  assign wire8 = reg6[(4'ha):(4'ha)];
  module9 #() modinst80 (wire79, clk, wire8, reg6, wire2, reg5);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param78 = ({({(8'ha1)} && (^(8'hae)))} ? (-(((8'hac) && (8'hb0)) < ((8'ha8) ? (8'hae) : (8'ha3)))) : {{(~(8'haa))}}))
(y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire13;
  input wire [(4'ha):(1'h0)] wire12;
  input wire signed [(4'h8):(1'h0)] wire11;
  input wire signed [(4'hb):(1'h0)] wire10;
  wire signed [(2'h2):(1'h0)] wire77;
  wire signed [(2'h3):(1'h0)] wire76;
  wire [(2'h3):(1'h0)] wire75;
  wire [(4'h8):(1'h0)] wire69;
  wire [(4'ha):(1'h0)] wire68;
  wire [(4'hb):(1'h0)] wire67;
  wire [(3'h6):(1'h0)] wire66;
  wire [(4'hb):(1'h0)] wire64;
  wire signed [(4'h8):(1'h0)] wire34;
  wire [(4'hb):(1'h0)] wire14;
  reg [(3'h6):(1'h0)] reg74 = (1'h0);
  reg [(3'h4):(1'h0)] reg73 = (1'h0);
  reg [(3'h7):(1'h0)] reg72 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg71 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg70 = (1'h0);
  assign y = {wire77,
                 wire76,
                 wire75,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire64,
                 wire34,
                 wire14,
                 reg74,
                 reg73,
                 reg72,
                 reg71,
                 reg70,
                 (1'h0)};
  assign wire14 = $signed(wire11);
  module15 #() modinst35 (wire34, clk, wire12, wire11, wire13, wire10);
  module36 #() modinst65 (wire64, clk, wire11, wire34, wire13, wire14);
  assign wire66 = $unsigned(($signed($signed(wire34)) + wire11));
  assign wire67 = (~^{$unsigned(((8'ha2) ? wire14 : (8'ha4)))});
  assign wire68 = (&(8'hab));
  assign wire69 = wire12[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      if (wire68[(1'h1):(1'h1)])
        begin
          if (wire12[(4'h9):(1'h1)])
            begin
              reg70 <= ({(!$unsigned(wire13))} ?
                  ((8'ha1) ?
                      $signed((8'ha0)) : $signed($unsigned(wire14))) : ((!(wire12 ?
                          wire34 : wire10)) ?
                      wire68[(1'h1):(1'h1)] : (|$unsigned(wire11))));
              reg71 <= reg70;
            end
          else
            begin
              reg70 <= (+wire10);
              reg71 <= (~&$signed(({wire13} > {reg71})));
            end
          reg72 <= {$unsigned($signed((wire12 == wire66)))};
          reg73 <= $unsigned($signed((~^(wire67 ? wire11 : reg71))));
        end
      else
        begin
          reg70 <= $signed(((^wire66) ?
              ($unsigned(wire69) != $signed(reg71)) : $signed((wire11 & reg70))));
        end
      reg74 <= $unsigned(wire64[(3'h4):(1'h1)]);
    end
  assign wire75 = reg73;
  assign wire76 = (|{(wire68[(3'h4):(2'h3)] != $unsigned((8'h9f)))});
  assign wire77 = (^wire64);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module36
#(parameter param63 = (8'haa))
(y, clk, wire40, wire39, wire38, wire37);
  output wire [(32'h9a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire40;
  input wire signed [(4'h8):(1'h0)] wire39;
  input wire signed [(4'hb):(1'h0)] wire38;
  input wire signed [(4'hb):(1'h0)] wire37;
  wire signed [(3'h5):(1'h0)] wire62;
  wire [(4'h8):(1'h0)] wire61;
  wire signed [(3'h4):(1'h0)] wire60;
  wire [(3'h7):(1'h0)] wire52;
  wire [(3'h5):(1'h0)] wire51;
  wire [(4'h8):(1'h0)] wire43;
  wire [(4'ha):(1'h0)] wire42;
  wire [(4'h9):(1'h0)] wire41;
  reg [(4'ha):(1'h0)] reg59 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg58 = (1'h0);
  reg [(3'h7):(1'h0)] reg57 = (1'h0);
  reg [(2'h2):(1'h0)] reg56 = (1'h0);
  reg [(2'h2):(1'h0)] reg55 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg54 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg50 = (1'h0);
  reg [(3'h5):(1'h0)] reg49 = (1'h0);
  reg [(4'hb):(1'h0)] reg48 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg47 = (1'h0);
  reg [(3'h5):(1'h0)] reg46 = (1'h0);
  reg [(4'hb):(1'h0)] reg45 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg44 = (1'h0);
  assign y = {wire62,
                 wire61,
                 wire60,
                 wire52,
                 wire51,
                 wire43,
                 wire42,
                 wire41,
                 reg59,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 (1'h0)};
  assign wire41 = wire39[(1'h1):(1'h1)];
  assign wire42 = wire38[(2'h2):(1'h1)];
  assign wire43 = $signed(((wire39 ?
                      (8'hae) : wire40[(1'h0):(1'h0)]) != ($signed(wire42) || (wire38 >> (8'haf)))));
  always
    @(posedge clk) begin
      if ((+($unsigned(wire43) ? wire40[(3'h6):(3'h6)] : (wire38 ^~ wire39))))
        begin
          reg44 <= (wire42[(4'ha):(2'h3)] > ($signed(wire43[(2'h2):(1'h0)]) < $unsigned((8'hae))));
          if ((($signed({wire38}) ?
                  $signed((wire42 ? wire41 : wire40)) : wire38[(4'h8):(4'h8)]) ?
              (wire38 == (~$signed(wire43))) : (|$signed($unsigned((8'ha8))))))
            begin
              reg45 <= (~^$unsigned(wire41));
            end
          else
            begin
              reg45 <= $unsigned(wire42);
              reg46 <= reg45;
            end
          if ($unsigned($unsigned($signed($unsigned(wire39)))))
            begin
              reg47 <= ($unsigned((~^wire37[(3'h6):(2'h3)])) * (~|$signed({(8'ha7)})));
              reg48 <= $signed($unsigned($unsigned(wire38)));
              reg49 <= ($signed((&reg45)) ? (^~reg45) : (&{wire39}));
            end
          else
            begin
              reg47 <= $unsigned($signed($signed((wire38 ? reg48 : reg44))));
              reg48 <= ({((~^wire42) ?
                          wire42[(2'h2):(1'h1)] : reg49[(1'h0):(1'h0)])} ?
                  (($signed(reg46) ?
                          (wire37 ? reg46 : reg48) : wire41[(2'h3):(1'h0)]) ?
                      {$signed(wire43)} : $unsigned($unsigned(reg44))) : (((~^reg48) ?
                      (wire41 | wire40) : reg46[(1'h0):(1'h0)]) >> (-(reg47 + wire41))));
            end
        end
      else
        begin
          reg44 <= (({(wire41 ?
                  reg46 : reg47)} & ((~&(8'ha6)) * wire41[(2'h3):(2'h3)])) || {reg44[(1'h0):(1'h0)]});
        end
      reg50 <= wire42;
    end
  assign wire51 = $signed(($signed(((8'ha1) ~^ wire37)) + ({wire42} ?
                      wire42 : (wire43 ? wire38 : reg47))));
  assign wire52 = ((reg45[(2'h2):(1'h1)] && wire41[(3'h6):(3'h4)]) ?
                      reg49[(1'h0):(1'h0)] : ({$signed(wire39)} ~^ $unsigned((wire51 ?
                          reg50 : wire42))));
  always
    @(posedge clk) begin
      reg53 <= wire37;
      reg54 <= $signed($signed($unsigned((reg53 <= wire39))));
      if ((reg44 == $signed((&reg48))))
        begin
          reg55 <= ($signed(wire42[(3'h4):(3'h4)]) ^ ({(8'ha1)} >> reg48[(1'h0):(1'h0)]));
          if ($unsigned((^{(reg48 ? reg53 : wire51)})))
            begin
              reg56 <= $unsigned($unsigned(wire37[(2'h3):(2'h2)]));
            end
          else
            begin
              reg56 <= (({reg56} ?
                      ($unsigned(wire38) ?
                          wire42[(3'h5):(2'h3)] : (reg44 & reg50)) : $signed($unsigned(wire39))) ?
                  wire52 : wire38);
              reg57 <= ($unsigned($unsigned(reg50)) ?
                  $unsigned((8'had)) : $unsigned((~|(+reg47))));
              reg58 <= {(&$signed(reg48))};
            end
          reg59 <= reg55[(1'h1):(1'h1)];
        end
      else
        begin
          reg55 <= ($signed(reg50) && (^reg53));
          reg56 <= reg47[(4'h8):(3'h4)];
        end
    end
  assign wire60 = {$unsigned((!$unsigned(wire42)))};
  assign wire61 = $signed($unsigned(wire39[(1'h1):(1'h1)]));
  assign wire62 = $signed({$unsigned(reg59)});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param33 = (({(8'h9f)} ? ({(8'ha8)} >>> ((8'ha8) & (8'hb0))) : (-{(8'ha5)})) >>> (!((8'ha3) != (8'haf)))))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h58):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire19;
  input wire [(2'h3):(1'h0)] wire18;
  input wire signed [(3'h6):(1'h0)] wire17;
  input wire signed [(4'hb):(1'h0)] wire16;
  wire signed [(3'h7):(1'h0)] wire31;
  wire signed [(2'h2):(1'h0)] wire30;
  wire signed [(3'h7):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire27;
  wire signed [(4'h9):(1'h0)] wire26;
  wire signed [(3'h4):(1'h0)] wire25;
  wire [(4'ha):(1'h0)] wire24;
  wire [(4'ha):(1'h0)] wire23;
  wire [(3'h6):(1'h0)] wire22;
  wire [(4'hb):(1'h0)] wire21;
  wire [(2'h2):(1'h0)] wire20;
  reg signed [(3'h6):(1'h0)] reg32 = (1'h0);
  assign y = {wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 reg32,
                 (1'h0)};
  assign wire20 = wire19;
  assign wire21 = ($unsigned((~&$unsigned(wire19))) ?
                      wire17 : $signed((((8'ha1) || wire19) ~^ $signed(wire19))));
  assign wire22 = wire20;
  assign wire23 = ((wire17 && (~&$unsigned(wire21))) * (-(((8'hae) ~^ wire18) ?
                      wire18[(2'h3):(2'h3)] : (wire20 ? wire16 : wire19))));
  assign wire24 = (~&{((+wire16) && (wire18 << wire21))});
  assign wire25 = $signed($unsigned(wire20));
  assign wire26 = ({wire18} ?
                      $signed((wire17 ?
                          (^wire18) : (8'ha9))) : (~&(wire19[(3'h6):(1'h0)] ?
                          (wire22 ~^ wire22) : $unsigned(wire20))));
  assign wire27 = $unsigned($signed($signed(wire24)));
  assign wire28 = (~|wire17);
  assign wire29 = wire17[(2'h3):(1'h1)];
  assign wire30 = (wire19 & ((~(wire22 & wire21)) ?
                      ((wire29 && wire20) >>> wire29[(1'h1):(1'h1)]) : ($unsigned(wire24) ?
                          (~^wire20) : $signed(wire23))));
  assign wire31 = (|(~$signed(wire24[(3'h6):(2'h3)])));
  always
    @(posedge clk) begin
      reg32 <= (wire27 ?
          $unsigned(({wire19} < $signed(wire30))) : ((wire27 * $unsigned(wire26)) <<< $signed((~^wire30))));
    end
endmodule