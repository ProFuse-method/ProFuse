(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire3;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire11;
  wire signed [(3'h6):(1'h0)] wire10;
  wire signed [(4'ha):(1'h0)] wire9;
  wire [(3'h6):(1'h0)] wire6;
  wire signed [(3'h6):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire4;
  reg [(3'h7):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg7 = (1'h0);
  assign y = {wire11, wire10, wire9, wire6, wire5, wire4, reg8, reg7, (1'h0)};
  assign wire4 = $unsigned(({$signed(wire0)} ?
                     ((wire3 ^~ wire1) & $unsigned(wire1)) : wire2[(3'h4):(1'h1)]));
  assign wire5 = wire2;
  assign wire6 = wire2[(3'h7):(3'h4)];
  always
    @(posedge clk) begin
      reg7 <= $signed((((wire1 == (8'hae)) ?
          $unsigned(wire0) : wire2[(3'h6):(1'h1)]) || wire5[(3'h4):(1'h0)]));
      reg8 <= (8'h9c);
    end
  assign wire9 = wire4;
  assign wire10 = ({wire9[(3'h4):(1'h1)]} ?
                      (((wire3 ? (8'ha1) : wire2) ?
                          $signed((8'ha4)) : ((8'h9d) ?
                              wire5 : wire6)) == {(-(8'ha6))}) : $signed($unsigned($signed(wire1))));
  assign wire11 = $unsigned((wire5[(2'h3):(2'h2)] - wire4));
endmodule