(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(3'h4):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire70;
  wire signed [(4'h9):(1'h0)] wire26;
  wire [(4'h8):(1'h0)] wire25;
  wire signed [(4'ha):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire23;
  wire signed [(3'h7):(1'h0)] wire21;
  wire signed [(4'h9):(1'h0)] wire7;
  wire [(3'h4):(1'h0)] wire6;
  wire signed [(2'h3):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  assign y = {wire70,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire21,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = wire2;
  assign wire5 = (~wire0[(2'h3):(2'h2)]);
  assign wire6 = $signed(wire4);
  assign wire7 = wire4;
  module8 #() modinst22 (.wire12(wire0), .clk(clk), .wire10(wire3), .y(wire21), .wire11(wire2), .wire9(wire4));
  assign wire23 = wire3[(3'h7):(3'h5)];
  assign wire24 = $signed((+wire6));
  assign wire25 = {$unsigned($signed($unsigned(wire24)))};
  assign wire26 = wire24[(3'h4):(3'h4)];
  module27 #() modinst71 (wire70, clk, wire3, wire0, wire25, wire4);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module27
#(parameter param69 = ({((^(8'haf)) + {(8'hb0)})} <= ((8'h9d) ? ((~(8'hb0)) ? ((8'ha3) ? (8'hac) : (8'h9f)) : {(8'hb0)}) : (~^((8'h9f) ~^ (8'h9f))))))
(y, clk, wire31, wire30, wire29, wire28);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire31;
  input wire [(4'ha):(1'h0)] wire30;
  input wire [(2'h2):(1'h0)] wire29;
  input wire [(3'h5):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire68;
  wire [(2'h2):(1'h0)] wire67;
  wire [(3'h7):(1'h0)] wire65;
  wire [(3'h6):(1'h0)] wire47;
  wire [(3'h7):(1'h0)] wire45;
  wire signed [(3'h4):(1'h0)] wire34;
  wire signed [(3'h7):(1'h0)] wire33;
  wire [(4'ha):(1'h0)] wire32;
  assign y = {wire68,
                 wire67,
                 wire65,
                 wire47,
                 wire45,
                 wire34,
                 wire33,
                 wire32,
                 (1'h0)};
  assign wire32 = wire31[(3'h5):(1'h0)];
  assign wire33 = (({wire30} ?
                          (wire32 ^~ (wire31 && wire29)) : $unsigned($signed(wire32))) ?
                      $signed((|$signed(wire31))) : $unsigned($signed(wire31)));
  assign wire34 = wire29;
  module35 #() modinst46 (wire45, clk, wire30, wire34, wire28, wire32);
  assign wire47 = wire33;
  module48 #() modinst66 (.wire50(wire45), .wire49(wire32), .clk(clk), .wire52(wire28), .wire51(wire31), .y(wire65));
  assign wire67 = $unsigned($signed((-wire47[(2'h2):(1'h0)])));
  assign wire68 = (|$signed(($unsigned(wire31) | wire33[(3'h5):(2'h3)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire12;
  input wire [(4'ha):(1'h0)] wire11;
  input wire signed [(4'h8):(1'h0)] wire10;
  input wire [(4'h9):(1'h0)] wire9;
  wire signed [(2'h3):(1'h0)] wire20;
  wire signed [(3'h4):(1'h0)] wire19;
  wire [(3'h5):(1'h0)] wire18;
  wire [(4'hb):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire16;
  wire [(3'h5):(1'h0)] wire13;
  reg [(3'h5):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg14 = (1'h0);
  assign y = {wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire13,
                 reg15,
                 reg14,
                 (1'h0)};
  assign wire13 = (wire9[(2'h2):(1'h0)] ~^ wire10);
  always
    @(posedge clk) begin
      if ({wire11})
        begin
          reg14 <= (^~((8'ha0) ? ((~^wire10) >>> (wire11 | (8'ha7))) : wire9));
        end
      else
        begin
          reg14 <= $unsigned((wire13 || wire9[(3'h6):(1'h0)]));
        end
    end
  always
    @(posedge clk) begin
      reg15 <= (~|$signed(({wire11} || $signed(wire12))));
    end
  assign wire16 = ($unsigned($signed((wire11 ? wire12 : reg15))) ?
                      (($unsigned(wire13) ~^ wire13) ^ ($unsigned(wire10) ?
                          reg14[(3'h4):(1'h0)] : $unsigned(wire12))) : (8'hb0));
  assign wire17 = wire9[(3'h7):(3'h7)];
  assign wire18 = ((wire16 ~^ (reg15 ~^ (wire17 ?
                      wire10 : reg14))) * (wire17[(4'h9):(3'h5)] + (^~{wire12})));
  assign wire19 = ($signed(wire12[(2'h3):(1'h1)]) + ((wire9[(3'h5):(2'h2)] ?
                      $unsigned(wire11) : reg14) ^~ $signed(wire10)));
  assign wire20 = (-(wire19[(2'h3):(2'h3)] || (~^(wire13 <= reg15))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module48
#(parameter param64 = (8'ha9))
(y, clk, wire52, wire51, wire50, wire49);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire52;
  input wire signed [(3'h7):(1'h0)] wire51;
  input wire [(3'h7):(1'h0)] wire50;
  input wire [(2'h3):(1'h0)] wire49;
  wire [(3'h6):(1'h0)] wire63;
  wire signed [(4'hb):(1'h0)] wire60;
  wire [(3'h5):(1'h0)] wire59;
  reg [(4'h9):(1'h0)] reg62 = (1'h0);
  reg [(4'h9):(1'h0)] reg61 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg58 = (1'h0);
  reg [(4'ha):(1'h0)] reg57 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg56 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg55 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg54 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg53 = (1'h0);
  assign y = {wire63,
                 wire60,
                 wire59,
                 reg62,
                 reg61,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ((~($signed($signed(wire51)) ^ {((8'haf) << wire49)})))
        begin
          if (($signed((!wire51[(3'h6):(2'h3)])) ?
              ($unsigned(wire50) ?
                  wire49 : $unsigned($signed(wire52))) : $signed(({wire51} != wire51))))
            begin
              reg53 <= $unsigned((wire51[(3'h7):(3'h5)] ^~ $signed((8'h9f))));
              reg54 <= wire52;
            end
          else
            begin
              reg53 <= (~&wire51[(1'h1):(1'h1)]);
            end
          reg55 <= ($signed((~|(wire49 * wire49))) ?
              (($signed(reg53) ? wire50[(3'h7):(1'h1)] : (wire52 < (8'ha5))) ?
                  (^wire52[(1'h1):(1'h0)]) : (8'ha2)) : wire52[(3'h4):(1'h1)]);
          reg56 <= (^$signed({{wire50}}));
        end
      else
        begin
          reg53 <= $unsigned($signed($unsigned($signed((8'hab)))));
        end
    end
  always
    @(posedge clk) begin
      reg57 <= reg54;
      reg58 <= ((~&(~|((8'h9e) || (8'ha0)))) ?
          $signed($unsigned((wire50 | reg55))) : {reg56[(2'h2):(2'h2)]});
    end
  assign wire59 = reg58;
  assign wire60 = (~|($unsigned((!wire49)) ?
                      ($unsigned(reg54) ?
                          $unsigned((8'haa)) : wire52[(3'h4):(1'h0)]) : reg54[(2'h2):(2'h2)]));
  always
    @(posedge clk) begin
      reg61 <= reg54;
      reg62 <= reg55;
    end
  assign wire63 = wire50;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module35
#(parameter param44 = ({(+((8'ha9) ^ (8'ha9)))} >>> ({((8'had) ? (8'ha9) : (8'ha4))} ? (!((8'hb0) & (8'h9f))) : {(~&(8'ha9))})))
(y, clk, wire39, wire38, wire37, wire36);
  output wire [(32'h25):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire39;
  input wire signed [(3'h4):(1'h0)] wire38;
  input wire [(3'h5):(1'h0)] wire37;
  input wire [(4'ha):(1'h0)] wire36;
  wire [(4'h8):(1'h0)] wire43;
  wire [(4'ha):(1'h0)] wire42;
  wire signed [(4'h8):(1'h0)] wire41;
  wire [(4'ha):(1'h0)] wire40;
  assign y = {wire43, wire42, wire41, wire40, (1'h0)};
  assign wire40 = ((~|($unsigned(wire38) | (~^wire36))) == $signed(((&wire38) ?
                      $signed(wire36) : (&wire37))));
  assign wire41 = ($signed(wire38) ? (~$signed($signed(wire39))) : wire37);
  assign wire42 = wire38[(1'h1):(1'h0)];
  assign wire43 = ($signed(((wire41 || wire37) ?
                      (!wire38) : (wire39 | wire40))) >>> wire38);
endmodule