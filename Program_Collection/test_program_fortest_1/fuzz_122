(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire67;
  wire signed [(3'h4):(1'h0)] wire66;
  wire signed [(3'h7):(1'h0)] wire65;
  wire [(4'h9):(1'h0)] wire64;
  wire signed [(4'h9):(1'h0)] wire62;
  wire signed [(4'h9):(1'h0)] wire61;
  wire [(4'hb):(1'h0)] wire60;
  wire [(2'h2):(1'h0)] wire51;
  wire signed [(4'hb):(1'h0)] wire53;
  wire [(3'h5):(1'h0)] wire55;
  reg signed [(3'h5):(1'h0)] reg59 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg58 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg57 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg5 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg4 = (1'h0);
  assign y = {wire67,
                 wire66,
                 wire65,
                 wire64,
                 wire62,
                 wire61,
                 wire60,
                 wire51,
                 wire53,
                 wire55,
                 reg59,
                 reg58,
                 reg57,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= $signed(wire2[(1'h1):(1'h0)]);
      reg5 <= $unsigned({($unsigned(wire0) == $signed(reg4))});
    end
  module6 #() modinst52 (.wire8(wire2), .wire9(reg4), .wire10(wire0), .wire7(wire1), .y(wire51), .clk(clk));
  module6 #() modinst54 (.wire8(reg4), .y(wire53), .wire7(wire0), .clk(clk), .wire10(reg5), .wire9(wire1));
  module12 #() modinst56 (.wire15(wire3), .clk(clk), .wire13(wire2), .wire14(reg5), .wire16(wire53), .y(wire55));
  always
    @(posedge clk) begin
      reg57 <= (^~wire2);
      reg58 <= ((!$signed((wire2 ? reg4 : (8'ha4)))) ?
          wire1 : $unsigned($unsigned(reg4)));
      reg59 <= wire2[(4'ha):(2'h2)];
    end
  assign wire60 = wire55;
  assign wire61 = $signed((~^reg5[(4'ha):(3'h6)]));
  module6 #() modinst63 (.wire7(reg58), .wire8(wire60), .wire10(reg4), .clk(clk), .y(wire62), .wire9(wire2));
  assign wire64 = $unsigned(($unsigned((wire2 ?
                      reg4 : wire60)) <<< wire53[(3'h6):(1'h0)]));
  assign wire65 = (~|$signed(($signed((8'hac)) - wire64)));
  assign wire66 = (({wire60[(2'h3):(2'h3)]} - ((wire61 ? wire64 : wire62) ?
                          (wire60 && (8'h9e)) : wire2)) ?
                      (^~{wire62[(1'h1):(1'h0)]}) : $signed(wire62[(3'h5):(2'h3)]));
  assign wire67 = $unsigned({({wire3} >= wire60)});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param50 = (((((8'ha0) <= (8'ha3)) ? {(8'ha5)} : (~&(8'ha1))) ^ {(^~(8'ha5))}) ? ((8'ha5) ~^ (((8'ha9) ? (8'h9c) : (8'h9c)) ? ((8'ha3) ? (8'ha1) : (8'hae)) : ((8'hac) ? (8'hab) : (8'ha2)))) : {((~(8'ha3)) ? ((8'ha7) + (8'ha7)) : ((8'ha9) == (8'haf)))}))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire10;
  input wire [(4'hb):(1'h0)] wire9;
  input wire [(4'hb):(1'h0)] wire8;
  input wire signed [(3'h7):(1'h0)] wire7;
  wire signed [(4'h9):(1'h0)] wire49;
  wire signed [(3'h7):(1'h0)] wire47;
  wire [(4'h8):(1'h0)] wire43;
  wire signed [(3'h4):(1'h0)] wire42;
  wire signed [(4'hb):(1'h0)] wire40;
  wire signed [(3'h5):(1'h0)] wire23;
  wire signed [(4'hb):(1'h0)] wire11;
  reg [(4'hb):(1'h0)] reg46 = (1'h0);
  reg [(3'h7):(1'h0)] reg45 = (1'h0);
  reg [(3'h5):(1'h0)] reg44 = (1'h0);
  assign y = {wire49,
                 wire47,
                 wire43,
                 wire42,
                 wire40,
                 wire23,
                 wire11,
                 reg46,
                 reg45,
                 reg44,
                 (1'h0)};
  assign wire11 = wire8[(3'h4):(2'h3)];
  module12 #() modinst24 (.wire14(wire7), .wire16(wire8), .clk(clk), .wire13(wire11), .y(wire23), .wire15(wire10));
  module25 #() modinst41 (wire40, clk, wire7, wire10, wire11, wire8);
  assign wire42 = $signed(((^((8'hac) ?
                      (8'ha0) : wire11)) << (wire8[(3'h5):(1'h0)] <<< {wire11})));
  assign wire43 = $signed(wire9[(2'h3):(2'h2)]);
  always
    @(posedge clk) begin
      reg44 <= (&wire11[(4'h8):(2'h3)]);
      reg45 <= (+{$unsigned({wire23})});
      reg46 <= $unsigned($unsigned($signed(wire40)));
    end
  module25 #() modinst48 (.wire28(reg46), .clk(clk), .wire26(reg44), .y(wire47), .wire29(wire8), .wire27(wire9));
  assign wire49 = (8'haf);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25
#(parameter param39 = (((((8'ha2) == (8'haf)) ^~ (8'haa)) ? (((8'h9c) ? (8'haa) : (8'ha1)) >= (~(8'ha5))) : ((^~(8'ha8)) || (|(8'hac)))) < ((~^((8'ha5) & (8'ha0))) >= ((8'ha6) || (~(8'h9f))))))
(y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire29;
  input wire signed [(4'hb):(1'h0)] wire28;
  input wire [(4'hb):(1'h0)] wire27;
  input wire [(3'h5):(1'h0)] wire26;
  wire [(3'h5):(1'h0)] wire38;
  wire [(3'h4):(1'h0)] wire37;
  wire signed [(3'h4):(1'h0)] wire36;
  wire signed [(4'h9):(1'h0)] wire35;
  wire signed [(3'h4):(1'h0)] wire34;
  wire signed [(4'h8):(1'h0)] wire33;
  wire signed [(4'h8):(1'h0)] wire32;
  wire signed [(2'h3):(1'h0)] wire31;
  wire [(3'h7):(1'h0)] wire30;
  assign y = {wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 (1'h0)};
  assign wire30 = (~{$unsigned($unsigned((8'haa)))});
  assign wire31 = (8'h9d);
  assign wire32 = ((+$signed((wire29 & wire31))) * wire29);
  assign wire33 = wire31[(1'h1):(1'h1)];
  assign wire34 = {$signed(($unsigned(wire30) << (8'h9d)))};
  assign wire35 = wire31[(2'h3):(1'h1)];
  assign wire36 = (|(((wire34 ^ wire35) ?
                      $unsigned(wire31) : (wire27 > wire34)) > $unsigned((~^wire27))));
  assign wire37 = wire32;
  assign wire38 = $signed(wire31[(2'h2):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire16;
  input wire [(4'h9):(1'h0)] wire15;
  input wire signed [(3'h5):(1'h0)] wire14;
  input wire [(2'h3):(1'h0)] wire13;
  wire [(2'h3):(1'h0)] wire22;
  wire [(4'h8):(1'h0)] wire21;
  wire signed [(4'hb):(1'h0)] wire20;
  wire signed [(4'hb):(1'h0)] wire19;
  wire signed [(3'h7):(1'h0)] wire18;
  wire [(3'h4):(1'h0)] wire17;
  assign y = {wire22, wire21, wire20, wire19, wire18, wire17, (1'h0)};
  assign wire17 = wire15;
  assign wire18 = $unsigned(wire15[(4'h9):(3'h4)]);
  assign wire19 = {{wire17}};
  assign wire20 = wire17[(1'h1):(1'h0)];
  assign wire21 = wire19[(4'hb):(3'h7)];
  assign wire22 = $signed(wire21);
endmodule