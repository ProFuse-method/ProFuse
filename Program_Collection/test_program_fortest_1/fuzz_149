(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire52;
  wire signed [(3'h5):(1'h0)] wire50;
  wire [(3'h6):(1'h0)] wire49;
  wire signed [(4'h9):(1'h0)] wire47;
  wire signed [(4'h9):(1'h0)] wire45;
  wire signed [(3'h4):(1'h0)] wire13;
  reg [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(4'h8):(1'h0)] reg48 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg12 = (1'h0);
  reg [(3'h4):(1'h0)] reg11 = (1'h0);
  reg [(4'h9):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg9 = (1'h0);
  reg [(4'h8):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg7 = (1'h0);
  reg [(2'h3):(1'h0)] reg6 = (1'h0);
  reg [(4'h9):(1'h0)] reg5 = (1'h0);
  reg [(2'h2):(1'h0)] reg4 = (1'h0);
  assign y = {wire52,
                 wire50,
                 wire49,
                 wire47,
                 wire45,
                 wire13,
                 reg51,
                 reg48,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (({({wire2} ? $unsigned(wire0) : (~^wire2))} ?
          {(wire1 ^ (&wire2))} : $unsigned(wire1)))
        begin
          reg4 <= (($unsigned(wire1[(1'h0):(1'h0)]) != $unsigned((wire0 ^~ wire0))) << wire0);
        end
      else
        begin
          if ($signed(wire2[(3'h5):(3'h4)]))
            begin
              reg4 <= ($unsigned((+wire1)) <<< wire3);
              reg5 <= ($unsigned($unsigned(wire2)) >>> wire2[(2'h3):(2'h3)]);
              reg6 <= (reg4 << ({wire1} ? $signed($signed(wire0)) : wire3));
            end
          else
            begin
              reg4 <= ({{(8'ha8)}} ?
                  (($signed(wire2) >> $signed(wire2)) ?
                      $unsigned($unsigned(reg5)) : wire0[(3'h4):(2'h3)]) : wire2);
              reg5 <= (8'hab);
              reg6 <= (wire3 ? wire2[(1'h0):(1'h0)] : wire1);
            end
          reg7 <= wire1;
          if (reg5[(4'h9):(4'h8)])
            begin
              reg8 <= reg6;
              reg9 <= $signed(($unsigned($unsigned(wire3)) || reg7));
              reg10 <= $unsigned((|wire0));
            end
          else
            begin
              reg8 <= $signed(reg4[(1'h1):(1'h0)]);
              reg9 <= (-(({reg4} ?
                  (reg8 | wire1) : (reg6 ?
                      reg5 : (8'ha4))) ~^ ((wire0 <<< wire3) ?
                  $signed(reg6) : reg10)));
            end
        end
      reg11 <= $signed((^~$signed(reg6[(1'h1):(1'h1)])));
      reg12 <= $signed(($signed($signed((8'ha0))) != (reg8[(2'h2):(2'h2)] <= (-reg9))));
    end
  assign wire13 = reg11;
  module14 #() modinst46 (wire45, clk, reg5, reg9, reg8, reg7);
  assign wire47 = wire1;
  always
    @(posedge clk) begin
      reg48 <= reg8;
    end
  assign wire49 = reg9;
  assign wire50 = reg6;
  always
    @(posedge clk) begin
      reg51 <= $signed({((&reg12) ? reg9 : wire13)});
    end
  assign wire52 = ((|(~(reg5 ?
                      reg4 : reg7))) <= ((~$unsigned(reg11)) | reg9[(2'h3):(1'h1)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param44 = ((+{{(8'haa)}}) | (~&((~|(8'h9d)) ? ((8'ha2) <= (8'ha3)) : {(8'ha3)}))))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire18;
  input wire signed [(3'h7):(1'h0)] wire17;
  input wire signed [(4'h8):(1'h0)] wire16;
  input wire [(4'h8):(1'h0)] wire15;
  wire signed [(3'h6):(1'h0)] wire42;
  wire signed [(4'h9):(1'h0)] wire23;
  wire [(4'ha):(1'h0)] wire22;
  wire [(3'h6):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  wire signed [(4'h9):(1'h0)] wire19;
  assign y = {wire42, wire23, wire22, wire21, wire20, wire19, (1'h0)};
  assign wire19 = $unsigned($unsigned((^~{(8'had)})));
  assign wire20 = wire18[(1'h0):(1'h0)];
  assign wire21 = wire20[(2'h3):(1'h0)];
  assign wire22 = ((((^wire16) & wire16) ? wire19 : (~^(+wire17))) ?
                      $signed(wire17[(3'h4):(2'h2)]) : (($unsigned((8'ha1)) ?
                          wire19[(3'h4):(1'h0)] : $unsigned(wire17)) * (~wire19[(4'h9):(3'h5)])));
  assign wire23 = (&($unsigned((^~wire16)) ?
                      (wire16 ?
                          wire21[(1'h0):(1'h0)] : (wire22 != wire15)) : (8'hab)));
  module24 #() modinst43 (.wire28(wire18), .wire26(wire17), .clk(clk), .y(wire42), .wire27(wire15), .wire25(wire19));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module24
#(parameter param41 = (((|((8'ha7) && (8'h9d))) - (((8'hae) ? (8'hac) : (8'ha3)) ? (^(8'hb0)) : {(8'ha6)})) ? ((((8'h9c) < (8'haf)) | ((8'h9c) > (8'h9d))) ? {(+(8'ha0))} : ({(8'h9e)} - ((8'ha7) ? (8'haa) : (8'ha9)))) : ((^~(!(8'ha4))) ~^ (((8'ha7) == (8'h9e)) ? (-(8'hab)) : (&(8'ha0))))))
(y, clk, wire28, wire27, wire26, wire25);
  output wire [(32'h3e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire28;
  input wire signed [(3'h6):(1'h0)] wire27;
  input wire signed [(3'h4):(1'h0)] wire26;
  input wire signed [(2'h3):(1'h0)] wire25;
  wire signed [(2'h3):(1'h0)] wire40;
  wire signed [(2'h2):(1'h0)] wire39;
  wire signed [(2'h2):(1'h0)] wire38;
  wire signed [(2'h2):(1'h0)] wire37;
  wire signed [(2'h3):(1'h0)] wire36;
  wire signed [(4'h9):(1'h0)] wire35;
  wire signed [(4'ha):(1'h0)] wire34;
  wire [(3'h4):(1'h0)] wire33;
  wire [(4'h9):(1'h0)] wire32;
  wire signed [(2'h2):(1'h0)] wire31;
  wire signed [(3'h6):(1'h0)] wire30;
  wire [(4'h9):(1'h0)] wire29;
  assign y = {wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 (1'h0)};
  assign wire29 = (wire26 ^~ wire28);
  assign wire30 = (8'ha5);
  assign wire31 = ($signed(($signed(wire27) ? (^wire29) : $signed(wire25))) ?
                      (+(~&(wire25 ?
                          wire25 : wire25))) : $signed(wire29[(2'h2):(1'h1)]));
  assign wire32 = {(!(wire26 | ((8'h9d) ? wire26 : wire31)))};
  assign wire33 = ($unsigned($unsigned(wire25[(1'h0):(1'h0)])) ?
                      wire27[(3'h5):(2'h3)] : $signed(((wire32 ?
                          wire29 : wire30) | wire25[(2'h3):(1'h0)])));
  assign wire34 = wire33[(3'h4):(3'h4)];
  assign wire35 = $unsigned($unsigned(wire29[(3'h6):(3'h6)]));
  assign wire36 = $signed($signed({$signed(wire30)}));
  assign wire37 = (8'haa);
  assign wire38 = (+($unsigned((wire32 == wire33)) ^~ {$signed((8'ha3))}));
  assign wire39 = wire25;
  assign wire40 = $unsigned((!(wire25[(1'h0):(1'h0)] < $unsigned(wire29))));
endmodule