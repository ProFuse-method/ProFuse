(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire50;
  wire signed [(4'hb):(1'h0)] wire49;
  wire [(3'h4):(1'h0)] wire48;
  wire [(3'h6):(1'h0)] wire47;
  wire signed [(3'h4):(1'h0)] wire46;
  wire signed [(4'h8):(1'h0)] wire44;
  assign y = {wire50, wire49, wire48, wire47, wire46, wire44, (1'h0)};
  module4 #() modinst45 (wire44, clk, wire3, wire0, wire2, wire1);
  assign wire46 = (~wire3);
  assign wire47 = $unsigned({$unsigned((wire46 == wire46))});
  assign wire48 = (+((wire44 > (wire46 ? (8'haf) : wire44)) ?
                      (~{(8'ha7)}) : wire1));
  assign wire49 = wire3[(3'h6):(2'h2)];
  assign wire50 = wire44[(2'h2):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire8;
  input wire [(3'h5):(1'h0)] wire7;
  input wire signed [(4'hb):(1'h0)] wire6;
  input wire signed [(3'h6):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire43;
  wire [(3'h4):(1'h0)] wire36;
  wire signed [(3'h4):(1'h0)] wire12;
  wire [(4'h8):(1'h0)] wire11;
  wire signed [(2'h2):(1'h0)] wire10;
  wire signed [(2'h2):(1'h0)] wire9;
  reg [(2'h3):(1'h0)] reg42 = (1'h0);
  reg [(3'h7):(1'h0)] reg41 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg38 = (1'h0);
  reg [(4'hb):(1'h0)] reg14 = (1'h0);
  reg [(3'h7):(1'h0)] reg13 = (1'h0);
  assign y = {wire43,
                 wire36,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg14,
                 reg13,
                 (1'h0)};
  assign wire9 = (~(((-wire7) ? wire7[(2'h2):(2'h2)] : $unsigned(wire7)) ?
                     (&(8'ha7)) : $signed($unsigned(wire8))));
  assign wire10 = (&$signed((|(wire8 ? wire5 : (8'ha9)))));
  assign wire11 = (~|$unsigned(wire8[(1'h0):(1'h0)]));
  assign wire12 = (((8'ha5) ?
                      $unsigned(wire5[(1'h1):(1'h1)]) : wire7) << wire8);
  always
    @(posedge clk) begin
      reg13 <= wire5;
      reg14 <= ((($signed(wire11) - (-wire9)) ^ (~^(8'ha2))) <= (reg13 ?
          ($signed(wire11) | (wire9 * wire9)) : wire9[(1'h1):(1'h1)]));
    end
  module15 #() modinst37 (.wire18(reg14), .wire16(reg13), .wire17(wire5), .y(wire36), .clk(clk), .wire19(wire11));
  always
    @(posedge clk) begin
      reg38 <= wire7;
    end
  always
    @(posedge clk) begin
      if ((wire36[(1'h1):(1'h1)] >= wire11))
        begin
          reg39 <= (~wire8[(1'h0):(1'h0)]);
        end
      else
        begin
          if ($unsigned((~&($unsigned(wire5) ?
              (wire10 ? wire9 : wire8) : $unsigned(reg38)))))
            begin
              reg39 <= (wire10[(1'h1):(1'h0)] ?
                  $unsigned($signed(wire8)) : (((reg14 >> wire6) ?
                      (reg13 ? wire10 : wire7) : $unsigned(wire12)) < reg13));
              reg40 <= $unsigned(($unsigned((wire8 ^~ wire36)) || ($signed(wire5) ?
                  wire5[(2'h3):(2'h2)] : (!wire8))));
            end
          else
            begin
              reg39 <= $unsigned(((!(+reg38)) == reg13[(3'h7):(2'h3)]));
            end
        end
      reg41 <= (wire8 >>> ($unsigned(wire6) > $signed({reg13})));
      reg42 <= reg41;
    end
  assign wire43 = wire8[(1'h1):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param35 = (~((((8'hb0) ^~ (8'h9c)) ~^ (~(8'ha0))) | (~|(-(8'h9f))))))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h5f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire19;
  input wire signed [(4'hb):(1'h0)] wire18;
  input wire signed [(3'h5):(1'h0)] wire17;
  input wire signed [(3'h7):(1'h0)] wire16;
  wire signed [(4'h8):(1'h0)] wire32;
  wire signed [(2'h2):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire30;
  wire [(4'hb):(1'h0)] wire29;
  wire [(2'h2):(1'h0)] wire28;
  wire signed [(4'h9):(1'h0)] wire27;
  wire [(2'h2):(1'h0)] wire23;
  wire signed [(3'h4):(1'h0)] wire22;
  reg [(2'h3):(1'h0)] reg34 = (1'h0);
  reg [(4'ha):(1'h0)] reg33 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg26 = (1'h0);
  reg [(4'h8):(1'h0)] reg25 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg24 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg21 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg20 = (1'h0);
  assign y = {wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire23,
                 wire22,
                 reg34,
                 reg33,
                 reg26,
                 reg25,
                 reg24,
                 reg21,
                 reg20,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg20 <= (wire16 >> (~&wire18));
      reg21 <= ($unsigned(wire19) <= reg20[(4'h8):(4'h8)]);
    end
  assign wire22 = (!{{wire19[(2'h3):(1'h0)]}});
  assign wire23 = (8'had);
  always
    @(posedge clk) begin
      reg24 <= $signed(wire16[(3'h7):(3'h6)]);
    end
  always
    @(posedge clk) begin
      reg25 <= $unsigned($signed(reg21[(4'h9):(1'h0)]));
      reg26 <= wire17[(1'h0):(1'h0)];
    end
  assign wire27 = ($signed($signed($signed(reg20))) ?
                      (($signed(wire18) ? wire19 : ((8'had) << reg25)) ?
                          ({wire18} ^ $signed((8'haf))) : $unsigned((8'had))) : ($unsigned($unsigned(wire17)) ?
                          wire22[(2'h2):(1'h0)] : wire19));
  assign wire28 = reg25;
  assign wire29 = (8'ha0);
  assign wire30 = wire16;
  assign wire31 = wire22[(3'h4):(2'h3)];
  assign wire32 = {(~&$signed(wire18))};
  always
    @(posedge clk) begin
      reg33 <= (~wire31[(1'h1):(1'h1)]);
      reg34 <= (((~(!(8'had))) && (!(+wire31))) ?
          (wire30[(1'h0):(1'h0)] ?
              wire22[(1'h1):(1'h0)] : $signed((wire22 ?
                  wire32 : reg24))) : (wire19 >>> wire30[(3'h6):(1'h0)]));
    end
endmodule