(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire37;
  wire [(4'ha):(1'h0)] wire36;
  wire signed [(2'h2):(1'h0)] wire32;
  reg [(4'hb):(1'h0)] reg35 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg34 = (1'h0);
  assign y = {wire37, wire36, wire32, reg35, reg34, (1'h0)};
  module4 #() modinst33 (wire32, clk, wire1, wire3, wire2, wire0);
  always
    @(posedge clk) begin
      reg34 <= (!wire1[(4'h9):(4'h9)]);
      reg35 <= $unsigned(($unsigned(wire3) > (&wire3[(1'h0):(1'h0)])));
    end
  assign wire36 = $unsigned((8'h9c));
  assign wire37 = wire32[(1'h1):(1'h1)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param31 = (-(((+(8'ha4)) ? ((8'haf) ? (8'ha8) : (8'ha1)) : ((8'ha8) * (8'ha9))) ^~ (8'h9e))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h42):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire [(3'h4):(1'h0)] wire7;
  input wire signed [(4'h9):(1'h0)] wire6;
  input wire signed [(3'h5):(1'h0)] wire5;
  wire signed [(3'h4):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire28;
  wire [(4'h8):(1'h0)] wire27;
  wire [(4'hb):(1'h0)] wire26;
  wire [(3'h6):(1'h0)] wire25;
  wire [(3'h5):(1'h0)] wire24;
  wire signed [(3'h4):(1'h0)] wire23;
  wire signed [(4'ha):(1'h0)] wire22;
  wire signed [(3'h6):(1'h0)] wire20;
  reg [(4'h9):(1'h0)] reg30 = (1'h0);
  assign y = {wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire20,
                 reg30,
                 (1'h0)};
  module9 #() modinst21 (wire20, clk, wire8, wire7, wire5, wire6);
  assign wire22 = (wire6 * wire8);
  assign wire23 = (8'h9d);
  assign wire24 = $signed($signed(($signed(wire20) * wire8[(2'h2):(2'h2)])));
  assign wire25 = (8'hae);
  assign wire26 = $signed($signed(({(8'h9d)} ? (wire25 * wire6) : (!wire20))));
  assign wire27 = (wire26 ^~ wire26[(4'h8):(3'h5)]);
  assign wire28 = wire27;
  assign wire29 = (~&$signed(wire22[(3'h5):(1'h1)]));
  always
    @(posedge clk) begin
      reg30 <= wire26;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param19 = {((^{(8'h9f)}) ? (((8'ha4) >= (8'ha7)) ? (8'h9e) : ((8'hab) ? (8'ha9) : (8'ha8))) : (~((8'haf) != (8'ha8))))})
(y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h1c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire13;
  input wire [(3'h4):(1'h0)] wire12;
  input wire signed [(3'h5):(1'h0)] wire11;
  input wire [(4'h8):(1'h0)] wire10;
  wire [(3'h6):(1'h0)] wire18;
  wire [(3'h7):(1'h0)] wire17;
  wire [(2'h2):(1'h0)] wire16;
  wire signed [(4'h9):(1'h0)] wire15;
  wire signed [(2'h3):(1'h0)] wire14;
  assign y = {wire18, wire17, wire16, wire15, wire14, (1'h0)};
  assign wire14 = wire13;
  assign wire15 = wire14[(1'h0):(1'h0)];
  assign wire16 = wire13;
  assign wire17 = {(((wire15 || wire10) ?
                              (wire12 - wire15) : (wire13 & (8'haf))) ?
                          ((~&wire16) ?
                              wire15[(3'h4):(2'h2)] : (+wire15)) : $signed($unsigned(wire10)))};
  assign wire18 = wire13;
endmodule