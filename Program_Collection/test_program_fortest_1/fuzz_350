(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h40):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire37;
  wire signed [(4'h8):(1'h0)] wire36;
  wire signed [(3'h4):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire34;
  wire [(4'h8):(1'h0)] wire33;
  wire [(2'h3):(1'h0)] wire32;
  wire signed [(3'h4):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire30;
  wire [(4'hb):(1'h0)] wire28;
  assign y = {wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire28,
                 (1'h0)};
  module4 #() modinst29 (wire28, clk, wire1, wire2, wire0, wire3);
  assign wire30 = $signed((wire0 > {wire1[(4'h9):(3'h6)]}));
  assign wire31 = (wire3 ?
                      (~&wire1[(3'h5):(2'h3)]) : (($signed(wire28) || (wire1 > wire2)) ?
                          $signed({(8'ha2)}) : $unsigned(wire30)));
  assign wire32 = {$unsigned($signed(wire1))};
  assign wire33 = wire28[(3'h7):(3'h7)];
  assign wire34 = wire1[(2'h2):(1'h1)];
  assign wire35 = (~|wire33);
  assign wire36 = {({$unsigned((8'had))} || (~|(wire31 ^~ wire3)))};
  assign wire37 = $signed(((^(8'ha3)) ?
                      $unsigned(wire35[(3'h4):(1'h1)]) : {wire3}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param27 = ((^{((8'ha3) ? (8'ha7) : (8'ha1))}) ^~ (((~|(8'haf)) && ((8'haa) ? (8'ha6) : (8'ha7))) >= (|((8'ha3) ^~ (8'hac))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h75):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire signed [(3'h4):(1'h0)] wire7;
  input wire signed [(3'h6):(1'h0)] wire6;
  input wire signed [(4'h8):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire12;
  wire signed [(2'h2):(1'h0)] wire11;
  wire signed [(4'h9):(1'h0)] wire10;
  wire [(4'ha):(1'h0)] wire9;
  reg [(3'h6):(1'h0)] reg25 = (1'h0);
  reg [(4'hb):(1'h0)] reg24 = (1'h0);
  reg [(4'h8):(1'h0)] reg23 = (1'h0);
  reg [(3'h4):(1'h0)] reg22 = (1'h0);
  reg [(3'h4):(1'h0)] reg21 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg20 = (1'h0);
  reg [(4'h9):(1'h0)] reg19 = (1'h0);
  reg [(2'h2):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg17 = (1'h0);
  reg [(4'h8):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg15 = (1'h0);
  reg [(3'h4):(1'h0)] reg14 = (1'h0);
  reg [(3'h7):(1'h0)] reg13 = (1'h0);
  assign y = {wire26,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 (1'h0)};
  assign wire9 = wire8;
  assign wire10 = wire9[(3'h5):(2'h2)];
  assign wire11 = (-(!$unsigned(wire5[(3'h4):(3'h4)])));
  assign wire12 = wire11[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      if ((!$signed($signed($unsigned(wire11)))))
        begin
          if ($unsigned(wire12[(2'h2):(2'h2)]))
            begin
              reg13 <= $signed($signed({wire5[(3'h5):(3'h5)]}));
            end
          else
            begin
              reg13 <= $signed((^~((wire9 ?
                  reg13 : wire12) ~^ $unsigned(wire11))));
              reg14 <= (wire7 ? (8'h9e) : (^$signed((|wire8))));
              reg15 <= (8'h9e);
            end
          if ((&wire8))
            begin
              reg16 <= wire6;
            end
          else
            begin
              reg16 <= (8'ha2);
              reg17 <= wire6;
              reg18 <= reg16[(3'h7):(3'h7)];
            end
          reg19 <= $unsigned(wire5[(2'h3):(1'h1)]);
        end
      else
        begin
          reg13 <= $signed((($unsigned(wire8) > (wire7 - reg15)) ?
              (reg14 ?
                  (wire12 + reg13) : $unsigned((8'h9f))) : (-$unsigned(reg13))));
          reg14 <= ($unsigned(wire11) ?
              $signed($signed((reg15 >>> (8'hab)))) : (reg19 ?
                  (~&reg15[(3'h6):(3'h6)]) : wire5));
          reg15 <= (8'ha6);
        end
      reg20 <= $signed($unsigned($unsigned((wire10 | wire6))));
    end
  always
    @(posedge clk) begin
      reg21 <= (($unsigned({wire8}) ?
              $unsigned(wire8[(3'h5):(1'h0)]) : $unsigned((wire8 ^~ wire10))) ?
          {({wire6} >> (reg13 - wire6))} : $signed(wire12[(2'h2):(1'h1)]));
      if ((!((^~$signed(reg21)) ?
          wire11[(1'h0):(1'h0)] : (|reg21[(2'h3):(2'h3)]))))
        begin
          reg22 <= ($signed({(wire5 ? wire12 : reg13)}) ?
              ((~reg15[(3'h7):(2'h2)]) ?
                  reg18 : $unsigned((wire12 ? (8'ha7) : wire6))) : reg20);
          reg23 <= (wire7 >> (|wire9[(3'h6):(3'h4)]));
        end
      else
        begin
          reg22 <= wire5;
        end
      reg24 <= (reg23 ~^ wire12);
    end
  always
    @(posedge clk) begin
      reg25 <= ($unsigned({$unsigned(wire10)}) ?
          (|$unsigned(wire5[(1'h1):(1'h1)])) : (~^reg18[(2'h2):(2'h2)]));
    end
  assign wire26 = {(~wire7)};
endmodule