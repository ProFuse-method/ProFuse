(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire [(3'h5):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire11;
  reg signed [(3'h7):(1'h0)] reg12 = (1'h0);
  reg [(2'h2):(1'h0)] reg10 = (1'h0);
  reg [(4'hb):(1'h0)] reg9 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg8 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg6 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg5 = (1'h0);
  reg [(3'h4):(1'h0)] reg4 = (1'h0);
  assign y = {wire11, reg12, reg10, reg9, reg8, reg7, reg6, reg5, reg4, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= ($signed($unsigned(wire2[(3'h5):(2'h3)])) ?
          (&$signed((8'hae))) : wire2[(2'h3):(2'h3)]);
    end
  always
    @(posedge clk) begin
      reg5 <= ($unsigned(wire2[(2'h2):(2'h2)]) ?
          wire3 : ($unsigned(wire2[(2'h3):(2'h2)]) ? wire1 : wire0));
      if (((reg5 ? $signed((wire3 >>> reg4)) : {$signed(wire1)}) ?
          $signed(((wire0 < reg4) <= wire1[(2'h3):(2'h2)])) : $unsigned(reg4)))
        begin
          reg6 <= $signed($signed(wire1[(2'h2):(1'h1)]));
          reg7 <= (wire1 ? $signed(reg6) : (8'hae));
        end
      else
        begin
          reg6 <= $signed((~^$signed($unsigned(reg6))));
          if ((($signed((wire1 ? reg6 : wire2)) < reg6) ?
              $signed(wire1[(1'h1):(1'h0)]) : reg6))
            begin
              reg7 <= (~$signed((~|reg4)));
              reg8 <= ({(+reg7[(2'h2):(2'h2)])} != {((wire2 ?
                      wire2 : reg5) ~^ (reg5 ? (8'hb0) : reg6))});
            end
          else
            begin
              reg7 <= $unsigned($unsigned(reg5[(2'h2):(1'h1)]));
              reg8 <= ((!$unsigned((~^wire0))) ?
                  (8'ha5) : $signed((reg8 ? (wire1 <<< wire0) : reg8)));
            end
          reg9 <= (-reg4);
        end
      reg10 <= reg7[(2'h2):(1'h1)];
    end
  assign wire11 = reg10;
  always
    @(posedge clk) begin
      reg12 <= (($signed(wire2) ?
              ((wire0 ? (8'ha6) : wire0) | $signed(wire11)) : {wire3}) ?
          (~$unsigned(reg7[(2'h2):(1'h0)])) : reg5);
    end
endmodule