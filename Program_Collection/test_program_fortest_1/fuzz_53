(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h78):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire75;
  wire signed [(4'hb):(1'h0)] wire69;
  wire signed [(4'h9):(1'h0)] wire68;
  wire signed [(4'hb):(1'h0)] wire67;
  wire signed [(3'h4):(1'h0)] wire65;
  wire signed [(3'h5):(1'h0)] wire64;
  wire signed [(4'ha):(1'h0)] wire63;
  wire signed [(4'h8):(1'h0)] wire61;
  wire signed [(4'h9):(1'h0)] wire5;
  wire [(3'h7):(1'h0)] wire4;
  reg signed [(3'h5):(1'h0)] reg74 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg73 = (1'h0);
  reg [(3'h6):(1'h0)] reg72 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg71 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg70 = (1'h0);
  assign y = {wire75,
                 wire69,
                 wire68,
                 wire67,
                 wire65,
                 wire64,
                 wire63,
                 wire61,
                 wire5,
                 wire4,
                 reg74,
                 reg73,
                 reg72,
                 reg71,
                 reg70,
                 (1'h0)};
  assign wire4 = ((wire3 ? wire0[(1'h1):(1'h1)] : $signed({wire3})) ?
                     {(~^$unsigned(wire1))} : $signed({$unsigned((8'hac))}));
  assign wire5 = $signed(wire3[(2'h2):(1'h0)]);
  module6 #() modinst62 (wire61, clk, wire4, wire3, wire1, wire5);
  assign wire63 = {$signed(wire2[(4'h8):(3'h5)])};
  assign wire64 = (~^{((8'h9f) >>> $signed(wire61))});
  module40 #() modinst66 (.wire44(wire5), .y(wire65), .wire42(wire63), .clk(clk), .wire41(wire64), .wire43(wire0));
  assign wire67 = wire1;
  assign wire68 = wire1[(3'h6):(3'h6)];
  assign wire69 = wire2[(3'h6):(3'h5)];
  always
    @(posedge clk) begin
      reg70 <= $signed(((wire1[(1'h1):(1'h0)] ? {wire63} : $signed((8'haa))) ?
          (((8'ha5) ^ wire2) ?
              (!wire65) : (wire2 ?
                  wire61 : (8'h9e))) : $unsigned($unsigned(wire68))));
      reg71 <= ({$unsigned(wire64[(3'h4):(2'h2)])} ? $signed(wire4) : (8'ha7));
    end
  always
    @(posedge clk) begin
      reg72 <= ($signed($unsigned({wire5})) ?
          $signed($signed($unsigned(reg70))) : wire68[(4'h9):(4'h9)]);
      reg73 <= $unsigned(wire3);
      if ($signed((|wire69)))
        begin
          reg74 <= $signed(wire68);
        end
      else
        begin
          reg74 <= wire68[(3'h6):(2'h3)];
        end
    end
  assign wire75 = ((wire63 & wire5) & $signed(wire68[(3'h7):(3'h4)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param60 = ((((~|(8'ha3)) ? ((8'ha4) * (8'ha1)) : ((8'h9d) ? (8'h9f) : (8'hae))) ^ (~&(+(8'had)))) && (~((!(8'hae)) ^~ {(8'ha1)}))))
(y, clk, wire7, wire8, wire9, wire10);
  output wire [(32'h74):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire7;
  input wire signed [(3'h5):(1'h0)] wire8;
  input wire signed [(3'h6):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire10;
  wire [(2'h2):(1'h0)] wire59;
  wire [(2'h3):(1'h0)] wire57;
  wire signed [(2'h3):(1'h0)] wire56;
  wire signed [(3'h4):(1'h0)] wire55;
  wire [(4'h8):(1'h0)] wire11;
  wire [(4'h9):(1'h0)] wire26;
  wire [(3'h5):(1'h0)] wire28;
  wire [(3'h5):(1'h0)] wire29;
  wire [(3'h7):(1'h0)] wire53;
  reg signed [(4'h8):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg31 = (1'h0);
  reg [(3'h7):(1'h0)] reg32 = (1'h0);
  reg [(3'h5):(1'h0)] reg33 = (1'h0);
  reg [(4'hb):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg36 = (1'h0);
  reg [(4'h9):(1'h0)] reg37 = (1'h0);
  reg [(3'h6):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg39 = (1'h0);
  assign y = {wire59,
                 wire57,
                 wire56,
                 wire55,
                 wire11,
                 wire26,
                 wire28,
                 wire29,
                 wire53,
                 reg30,
                 reg31,
                 reg32,
                 reg33,
                 reg34,
                 reg35,
                 reg36,
                 reg37,
                 reg38,
                 reg39,
                 (1'h0)};
  assign wire11 = (^wire9[(3'h6):(2'h2)]);
  module12 #() modinst27 (wire26, clk, wire9, wire7, wire11, wire10);
  assign wire28 = ({(wire9 ? (~wire11) : (wire7 ? wire7 : wire10))} ?
                      (((wire10 > (8'h9e)) == ((8'h9d) ? wire8 : wire9)) ?
                          {$signed((8'ha8))} : ((^(8'ha5)) ?
                              wire8 : wire11[(4'h8):(1'h0)])) : {$unsigned({wire10})});
  assign wire29 = wire10;
  always
    @(posedge clk) begin
      reg30 <= $signed($unsigned({wire11[(2'h2):(1'h0)]}));
      reg31 <= (&{reg30[(4'h8):(4'h8)]});
    end
  always
    @(posedge clk) begin
      if ((^wire29))
        begin
          if ($unsigned(({(reg30 * wire9)} << $unsigned(wire29[(3'h4):(1'h1)]))))
            begin
              reg32 <= (8'hb0);
            end
          else
            begin
              reg32 <= ((!$signed((~|reg31))) ^ (wire8[(1'h1):(1'h0)] ?
                  {$unsigned(wire29)} : $signed((wire28 <<< wire26))));
              reg33 <= wire7;
            end
          reg34 <= (|$unsigned($signed($unsigned((8'ha1)))));
        end
      else
        begin
          reg32 <= reg32[(3'h4):(2'h3)];
        end
      if ((($signed((|wire10)) != ((wire9 || reg30) << reg30)) ?
          reg30[(3'h7):(1'h0)] : ({wire9[(3'h4):(3'h4)]} & $signed({wire7}))))
        begin
          if (wire29[(2'h2):(1'h0)])
            begin
              reg35 <= $signed(((8'h9d) > $unsigned((^~wire11))));
              reg36 <= ({(wire28 ? reg31[(2'h3):(2'h3)] : $unsigned(reg33))} ?
                  $unsigned((wire26 >= $signed(reg30))) : wire9[(3'h6):(2'h2)]);
              reg37 <= ((wire10 <= $unsigned(reg30[(2'h2):(1'h1)])) ?
                  (wire26 + $signed(((8'ha1) ?
                      wire26 : wire28))) : ($signed((wire11 ?
                      reg34 : wire26)) ^~ (((8'ha1) & wire8) ?
                      (wire8 * reg36) : (reg31 <= wire10))));
            end
          else
            begin
              reg35 <= {reg37[(2'h3):(1'h1)]};
              reg36 <= $signed(((+(-wire28)) ?
                  wire9[(3'h5):(3'h4)] : {$signed(reg34)}));
              reg37 <= $unsigned((-$unsigned((wire8 << reg36))));
            end
          reg38 <= {(~^(~&reg33))};
          reg39 <= $unsigned(($signed($signed(reg37)) ^~ {(wire9 || wire11)}));
        end
      else
        begin
          if ($unsigned($unsigned(($signed(wire9) ?
              $signed(reg35) : (wire10 + reg38)))))
            begin
              reg35 <= $signed(({(|reg35)} > ((reg39 * wire9) >= (reg37 ?
                  wire26 : reg33))));
              reg36 <= ($signed({(reg31 ?
                      reg38 : reg36)}) == $signed((~&wire7)));
            end
          else
            begin
              reg35 <= reg30;
              reg36 <= ($unsigned((-((8'h9f) & reg34))) & $unsigned($signed(reg31[(1'h1):(1'h1)])));
              reg37 <= wire10;
            end
        end
    end
  module40 #() modinst54 (.y(wire53), .wire42(wire11), .clk(clk), .wire43(reg32), .wire41(reg39), .wire44(reg38));
  assign wire55 = reg38;
  assign wire56 = wire29;
  module40 #() modinst58 (wire57, clk, wire8, reg31, wire26, reg33);
  assign wire59 = (~^({(wire7 ? reg35 : reg36)} ? (~|{reg33}) : (-(^~reg34))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module40  (y, clk, wire44, wire43, wire42, wire41);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire44;
  input wire [(3'h7):(1'h0)] wire43;
  input wire [(3'h7):(1'h0)] wire42;
  input wire [(3'h5):(1'h0)] wire41;
  wire [(4'h9):(1'h0)] wire52;
  wire [(3'h5):(1'h0)] wire51;
  wire [(4'ha):(1'h0)] wire50;
  wire signed [(4'h8):(1'h0)] wire49;
  wire signed [(4'h9):(1'h0)] wire48;
  wire signed [(2'h2):(1'h0)] wire47;
  wire [(4'h9):(1'h0)] wire46;
  wire signed [(4'ha):(1'h0)] wire45;
  assign y = {wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 (1'h0)};
  assign wire45 = $signed((wire42[(3'h6):(2'h2)] ?
                      wire44 : $unsigned((wire41 >> wire44))));
  assign wire46 = $signed((wire43[(3'h6):(1'h1)] ?
                      (!(!wire41)) : $unsigned((wire44 > wire41))));
  assign wire47 = wire42;
  assign wire48 = $signed($unsigned((~(wire46 ^ wire47))));
  assign wire49 = wire43;
  assign wire50 = ((+($unsigned(wire45) - (wire49 ?
                      wire47 : (8'haa)))) ^~ ($unsigned($signed((8'ha8))) ?
                      (wire45[(4'h9):(3'h4)] & wire48[(3'h6):(3'h4)]) : {$unsigned(wire44)}));
  assign wire51 = {wire44[(2'h3):(1'h0)]};
  assign wire52 = {$signed(($signed(wire45) ?
                          (wire49 ? wire45 : wire49) : ((8'ha3) * wire50)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire16;
  input wire signed [(3'h7):(1'h0)] wire15;
  input wire [(4'h8):(1'h0)] wire14;
  input wire [(4'h9):(1'h0)] wire13;
  wire [(3'h6):(1'h0)] wire25;
  wire signed [(3'h7):(1'h0)] wire24;
  wire signed [(4'hb):(1'h0)] wire23;
  wire [(2'h2):(1'h0)] wire22;
  wire signed [(3'h5):(1'h0)] wire21;
  wire [(3'h5):(1'h0)] wire18;
  wire [(4'h8):(1'h0)] wire17;
  reg signed [(3'h5):(1'h0)] reg20 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg19 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire18,
                 wire17,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire17 = $unsigned((~|$signed({(8'ha5)})));
  assign wire18 = wire16;
  always
    @(posedge clk) begin
      reg19 <= $unsigned(wire18);
      reg20 <= wire15;
    end
  assign wire21 = $unsigned((~&$unsigned(wire14)));
  assign wire22 = $signed({($unsigned(wire16) & $signed(reg20))});
  assign wire23 = (|wire13);
  assign wire24 = wire13;
  assign wire25 = (!(8'haa));
endmodule