(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param65 = {(&{(^~(8'ha9))})})
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h58):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire0;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire3;
  wire [(4'ha):(1'h0)] wire4;
  wire [(3'h4):(1'h0)] wire50;
  wire signed [(4'h8):(1'h0)] wire52;
  wire signed [(3'h7):(1'h0)] wire53;
  wire [(2'h2):(1'h0)] wire54;
  wire [(2'h2):(1'h0)] wire58;
  wire [(4'h8):(1'h0)] wire62;
  wire signed [(2'h2):(1'h0)] wire63;
  reg signed [(2'h3):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg57 = (1'h0);
  reg [(4'h9):(1'h0)] reg59 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg60 = (1'h0);
  reg [(3'h7):(1'h0)] reg61 = (1'h0);
  assign y = {wire4,
                 wire50,
                 wire52,
                 wire53,
                 wire54,
                 wire58,
                 wire62,
                 wire63,
                 reg55,
                 reg56,
                 reg57,
                 reg59,
                 reg60,
                 reg61,
                 (1'h0)};
  assign wire4 = (~|$signed((~&wire1[(2'h2):(1'h1)])));
  module5 #() modinst51 (.y(wire50), .wire8(wire2), .wire9(wire3), .wire6(wire1), .clk(clk), .wire7(wire4));
  assign wire52 = $unsigned((wire3 ~^ ((wire0 ?
                      wire4 : wire2) >> $signed((8'haa)))));
  assign wire53 = {$signed((-(wire1 << wire2)))};
  assign wire54 = wire53[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      if ((~&$signed((&(+wire52)))))
        begin
          if ((~&$signed((~&$signed((8'ha9))))))
            begin
              reg55 <= wire54;
              reg56 <= ((($unsigned(wire1) ~^ (wire2 * reg55)) ?
                      wire1 : {reg55}) ?
                  wire4 : (|wire3));
              reg57 <= $unsigned((^wire54[(1'h0):(1'h0)]));
            end
          else
            begin
              reg55 <= $signed($unsigned($unsigned(wire50)));
              reg56 <= $unsigned($signed(((wire4 && wire0) | (reg56 >>> wire54))));
              reg57 <= (($signed(wire1[(3'h6):(3'h4)]) || (^(wire3 ?
                      wire1 : (8'h9d)))) ?
                  (&(~|$signed(wire2))) : (wire50[(2'h3):(1'h0)] ?
                      (&(8'had)) : ($signed((8'hb0)) ?
                          $signed(wire1) : (wire1 ? reg57 : wire3))));
            end
        end
      else
        begin
          if ((^($unsigned(wire3[(1'h1):(1'h0)]) ?
              ($signed(wire3) ? (+(8'had)) : wire0) : ((8'ha5) ?
                  $signed(wire52) : (wire54 & wire4)))))
            begin
              reg55 <= $signed({((wire50 >>> wire54) * wire53)});
              reg56 <= ((~(~|(+(8'ha1)))) ?
                  ({wire54} ?
                      ($signed(wire50) ^ (wire54 >> wire1)) : {$signed(reg55)}) : (wire0[(1'h1):(1'h1)] + wire50[(2'h3):(2'h2)]));
            end
          else
            begin
              reg55 <= {(reg56 ? $signed({(8'haa)}) : wire52[(3'h6):(1'h1)])};
              reg56 <= ({(-$unsigned(wire3))} ~^ (~$signed((reg55 ?
                  wire54 : reg55))));
            end
        end
    end
  assign wire58 = $signed((~{(|(8'hac))}));
  always
    @(posedge clk) begin
      reg59 <= $signed(wire1[(3'h4):(2'h3)]);
      reg60 <= {$unsigned(wire58[(2'h2):(1'h0)])};
      reg61 <= $unsigned(($unsigned((wire58 >>> reg60)) ?
          $unsigned($unsigned(wire4)) : ($unsigned(reg55) & (&reg57))));
    end
  assign wire62 = ({$unsigned($unsigned(wire0))} ? wire2 : wire53);
  module28 #() modinst64 (.clk(clk), .wire29(reg56), .wire30(reg61), .wire31(wire1), .wire32(reg57), .y(wire63));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param49 = (((((8'ha3) ? (8'ha9) : (8'h9f)) >> ((8'ha1) ? (8'hab) : (8'ha1))) >= {{(8'hab)}}) ? ((((8'hb0) && (8'ha6)) + (^~(8'hae))) ? (-((8'haf) >> (8'ha0))) : (^~(~&(8'ha4)))) : (((8'hb0) ? ((8'ha4) || (8'hb0)) : ((8'h9f) ? (8'ha2) : (8'ha1))) ? (-((8'h9c) ? (8'ha0) : (8'had))) : (-((8'hae) ^ (8'ha8))))))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire7;
  input wire signed [(3'h5):(1'h0)] wire6;
  wire signed [(4'h8):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire46;
  wire [(4'h8):(1'h0)] wire26;
  wire [(3'h7):(1'h0)] wire11;
  wire signed [(4'hb):(1'h0)] wire10;
  assign y = {wire48, wire46, wire26, wire11, wire10, (1'h0)};
  assign wire10 = ($unsigned((!wire7)) | ($unsigned($unsigned(wire9)) * wire7));
  assign wire11 = (wire8[(3'h5):(1'h1)] >>> (^wire9));
  module12 #() modinst27 (wire26, clk, wire11, wire6, wire8, wire9);
  module28 #() modinst47 (wire46, clk, wire6, wire11, wire8, wire10);
  assign wire48 = $unsigned($unsigned({(wire46 ~^ wire10)}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module28
#(parameter param45 = {(~^(((8'ha0) > (8'ha4)) - (8'haf)))})
(y, clk, wire32, wire31, wire30, wire29);
  output wire [(32'h58):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire32;
  input wire [(3'h4):(1'h0)] wire31;
  input wire signed [(3'h7):(1'h0)] wire30;
  input wire [(2'h2):(1'h0)] wire29;
  wire signed [(3'h5):(1'h0)] wire44;
  wire signed [(3'h6):(1'h0)] wire43;
  wire [(4'h8):(1'h0)] wire42;
  wire [(4'hb):(1'h0)] wire41;
  wire signed [(4'h8):(1'h0)] wire40;
  wire [(4'h9):(1'h0)] wire39;
  wire signed [(2'h2):(1'h0)] wire38;
  wire [(3'h4):(1'h0)] wire33;
  reg signed [(3'h6):(1'h0)] reg37 = (1'h0);
  reg [(4'hb):(1'h0)] reg36 = (1'h0);
  reg [(4'ha):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg34 = (1'h0);
  assign y = {wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire33,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 (1'h0)};
  assign wire33 = $unsigned($signed((~&$unsigned(wire30))));
  always
    @(posedge clk) begin
      if ({(^~(~wire30[(3'h6):(2'h3)]))})
        begin
          reg34 <= wire29;
        end
      else
        begin
          if (wire32)
            begin
              reg34 <= wire32[(1'h0):(1'h0)];
            end
          else
            begin
              reg34 <= ($unsigned(wire32[(2'h2):(1'h1)]) ?
                  ({(reg34 < reg34)} ?
                      wire31[(2'h2):(1'h0)] : $signed(wire33[(3'h4):(1'h1)])) : wire32[(2'h2):(2'h2)]);
            end
          reg35 <= (8'ha2);
        end
      reg36 <= $signed((~&(wire30[(3'h5):(2'h2)] ? $unsigned(reg34) : wire30)));
      reg37 <= ((|reg35[(2'h2):(1'h0)]) == $signed({(^~reg34)}));
    end
  assign wire38 = (^~$unsigned({(reg36 ? reg37 : wire31)}));
  assign wire39 = (~|$signed(wire32));
  assign wire40 = $unsigned((-{wire32[(1'h0):(1'h0)]}));
  assign wire41 = (~($signed($unsigned(wire40)) == $unsigned($signed(reg36))));
  assign wire42 = (((8'ha3) ?
                          (+(wire29 ?
                              wire41 : wire31)) : {wire40[(1'h1):(1'h0)]}) ?
                      (8'h9e) : (&$unsigned(wire38)));
  assign wire43 = ((((reg37 ? reg36 : wire29) ^ {wire42}) ?
                          reg36 : $unsigned((wire29 ? (8'ha7) : wire30))) ?
                      wire29 : reg37);
  assign wire44 = wire40;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param25 = (((8'hac) == (^((8'h9d) ? (8'had) : (8'hab)))) ^ ((^~(8'ha1)) ? ((&(8'h9e)) * ((8'hae) ? (8'ha4) : (8'ha8))) : (!((8'ha4) ? (8'h9e) : (8'h9c))))))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire16;
  input wire signed [(3'h5):(1'h0)] wire15;
  input wire [(4'ha):(1'h0)] wire14;
  input wire signed [(3'h7):(1'h0)] wire13;
  wire [(3'h6):(1'h0)] wire24;
  wire [(3'h6):(1'h0)] wire21;
  wire [(3'h4):(1'h0)] wire20;
  wire [(4'ha):(1'h0)] wire19;
  wire signed [(2'h3):(1'h0)] wire18;
  wire [(3'h4):(1'h0)] wire17;
  reg [(3'h4):(1'h0)] reg23 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg22 = (1'h0);
  assign y = {wire24,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire17 = $unsigned(wire13[(1'h0):(1'h0)]);
  assign wire18 = $unsigned((~^{(wire15 ? (8'haf) : wire17)}));
  assign wire19 = $unsigned($unsigned(({wire16} <= wire13[(3'h7):(3'h5)])));
  assign wire20 = wire16;
  assign wire21 = $signed(wire14[(2'h3):(1'h1)]);
  always
    @(posedge clk) begin
      if ((^wire21[(2'h2):(1'h0)]))
        begin
          reg22 <= wire20[(1'h1):(1'h0)];
        end
      else
        begin
          reg22 <= $signed((|(wire14[(1'h1):(1'h0)] ?
              wire19[(2'h2):(1'h1)] : (8'ha3))));
        end
      reg23 <= (wire21[(3'h4):(1'h1)] * (^wire13));
    end
  assign wire24 = ((reg22 ?
                          wire17[(1'h0):(1'h0)] : $unsigned(((8'ha7) ?
                              wire13 : wire20))) ?
                      $unsigned($unsigned(wire13)) : ($signed((~|wire21)) ?
                          wire14[(4'h9):(2'h2)] : $signed((^(8'ha9)))));
endmodule