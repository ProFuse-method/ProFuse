(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param13 = ((((&(8'ha2)) ^ ((8'ha5) ? (8'ha8) : (8'ha1))) ? {((8'hae) ^~ (8'ha5))} : (&((8'ha8) < (8'hab)))) <= {(((8'ha1) + (8'hae)) ? ((8'h9e) ~^ (8'hac)) : {(8'ha6)})}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire12;
  wire signed [(4'h9):(1'h0)] wire11;
  wire [(3'h6):(1'h0)] wire10;
  wire signed [(3'h7):(1'h0)] wire9;
  wire signed [(4'hb):(1'h0)] wire8;
  wire [(4'ha):(1'h0)] wire7;
  wire [(4'h9):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire5;
  reg signed [(3'h7):(1'h0)] reg4 = (1'h0);
  assign y = {wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= (~|$signed((-wire3[(3'h6):(3'h5)])));
    end
  assign wire5 = wire3;
  assign wire6 = (wire2[(3'h6):(2'h2)] < wire3);
  assign wire7 = $signed(($unsigned((^~wire2)) == wire2[(2'h3):(1'h0)]));
  assign wire8 = $unsigned(wire5[(1'h1):(1'h1)]);
  assign wire9 = ($signed(wire2[(3'h6):(1'h0)]) ^ wire5[(3'h6):(3'h4)]);
  assign wire10 = (|(wire6 ?
                      $unsigned((|wire2)) : ((~^reg4) ?
                          (wire3 ? wire5 : wire3) : (~^reg4))));
  assign wire11 = ((!$unsigned(wire1)) ^~ ($signed(wire8[(4'h9):(3'h6)]) || wire0));
  assign wire12 = ($unsigned($signed((wire9 != wire11))) | ((wire11 ?
                          (~reg4) : $unsigned(wire7)) ?
                      ((~^wire7) + $signed(wire6)) : (((8'haa) || (8'hac)) ?
                          (wire2 ? wire11 : wire0) : $unsigned(wire5))));
endmodule