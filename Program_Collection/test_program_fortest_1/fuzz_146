(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire45;
  wire [(4'h8):(1'h0)] wire41;
  wire signed [(4'ha):(1'h0)] wire40;
  wire [(4'ha):(1'h0)] wire39;
  wire signed [(4'h9):(1'h0)] wire37;
  wire [(3'h5):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire34;
  wire signed [(2'h3):(1'h0)] wire33;
  wire signed [(3'h4):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire4;
  reg [(3'h5):(1'h0)] reg44 = (1'h0);
  reg [(3'h7):(1'h0)] reg43 = (1'h0);
  reg [(2'h2):(1'h0)] reg42 = (1'h0);
  assign y = {wire45,
                 wire41,
                 wire40,
                 wire39,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire31,
                 wire4,
                 reg44,
                 reg43,
                 reg42,
                 (1'h0)};
  assign wire4 = ((^(~&(^wire3))) || {wire3});
  module5 #() modinst32 (wire31, clk, wire1, wire0, wire4, wire3);
  assign wire33 = $unsigned($unsigned($unsigned(wire3[(1'h0):(1'h0)])));
  assign wire34 = $signed({((wire2 ? wire31 : wire4) * (!wire3))});
  assign wire35 = (wire2 ?
                      $signed(wire33[(1'h1):(1'h1)]) : wire2[(1'h1):(1'h1)]);
  assign wire36 = {wire3[(2'h2):(1'h1)]};
  module16 #() modinst38 (.y(wire37), .wire20(wire0), .wire18(wire3), .wire19(wire2), .clk(clk), .wire17(wire36));
  assign wire39 = ($unsigned(((wire1 ~^ wire4) | {(8'hae)})) ?
                      wire4[(1'h1):(1'h0)] : wire31);
  assign wire40 = $unsigned((|(!$signed(wire31))));
  assign wire41 = $unsigned($unsigned({$signed((8'ha7))}));
  always
    @(posedge clk) begin
      reg42 <= (~($unsigned(((8'h9f) ? wire3 : wire39)) ?
          $signed((~&wire2)) : $signed(wire33[(2'h3):(2'h2)])));
      reg43 <= $signed($unsigned(((reg42 ^ wire3) ?
          (wire37 & wire40) : (~&wire2))));
      reg44 <= $unsigned(wire4);
    end
  assign wire45 = $unsigned(((~$unsigned(wire33)) ^~ ((wire37 ?
                          wire3 : (8'ha9)) ?
                      ((8'hac) ? wire2 : wire35) : $signed((8'ha2)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire6, wire7, wire8, wire9);
  output wire [(32'h25):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire6;
  input wire signed [(4'hb):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire8;
  input wire signed [(3'h5):(1'h0)] wire9;
  wire signed [(2'h3):(1'h0)] wire10;
  wire signed [(3'h4):(1'h0)] wire11;
  wire signed [(3'h4):(1'h0)] wire15;
  wire [(2'h2):(1'h0)] wire29;
  reg [(4'hb):(1'h0)] reg12 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg13 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg14 = (1'h0);
  assign y = {wire10, wire11, wire15, wire29, reg12, reg13, reg14, (1'h0)};
  assign wire10 = wire6;
  assign wire11 = wire7;
  always
    @(posedge clk) begin
      reg12 <= wire10[(2'h3):(1'h1)];
    end
  always
    @(posedge clk) begin
      reg13 <= (wire9 ? wire6 : $unsigned($signed((reg12 ? wire8 : wire10))));
      reg14 <= $signed((reg12[(2'h2):(2'h2)] ^ (wire7 ?
          {wire7} : (wire7 <<< (8'haf)))));
    end
  assign wire15 = reg12[(2'h2):(2'h2)];
  module16 #() modinst30 (wire29, clk, wire7, reg14, wire11, wire8);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire20;
  input wire [(3'h5):(1'h0)] wire19;
  input wire [(3'h4):(1'h0)] wire18;
  input wire [(3'h4):(1'h0)] wire17;
  wire [(4'ha):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire24;
  wire [(3'h7):(1'h0)] wire23;
  wire [(4'ha):(1'h0)] wire22;
  wire [(4'h9):(1'h0)] wire21;
  reg [(3'h4):(1'h0)] reg28 = (1'h0);
  reg [(4'ha):(1'h0)] reg27 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg26 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 reg28,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire21 = wire20[(1'h0):(1'h0)];
  assign wire22 = $unsigned($signed((^~(|wire21))));
  assign wire23 = {({(wire19 + wire20)} ?
                          wire22 : ($signed(wire20) ?
                              (wire21 ? wire22 : wire17) : (|wire18)))};
  assign wire24 = $unsigned({$unsigned((wire17 & wire20))});
  assign wire25 = wire17[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      reg26 <= wire22[(3'h7):(3'h7)];
      if (wire18)
        begin
          reg27 <= (~|$signed({$signed((8'had))}));
          reg28 <= (8'ha2);
        end
      else
        begin
          reg27 <= wire18[(2'h2):(1'h1)];
          reg28 <= (wire19[(3'h4):(1'h0)] ?
              {$unsigned((wire21 ? wire19 : wire18))} : $unsigned(wire19));
        end
    end
endmodule