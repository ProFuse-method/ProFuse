(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param15 = ((8'ha8) & ((((8'h9f) ~^ (8'ha8)) ? {(8'hae)} : (~|(8'ha4))) ? {((8'ha8) > (8'ha7))} : ((^~(8'h9d)) ? ((8'h9c) >> (8'hab)) : (-(8'ha9))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(2'h2):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire11;
  wire [(3'h4):(1'h0)] wire10;
  wire signed [(4'h8):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire6;
  wire [(3'h6):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire4;
  reg [(4'h9):(1'h0)] reg14 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg8 = (1'h0);
  reg [(3'h7):(1'h0)] reg7 = (1'h0);
  assign y = {wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire6,
                 wire5,
                 wire4,
                 reg14,
                 reg13,
                 reg8,
                 reg7,
                 (1'h0)};
  assign wire4 = $unsigned((wire2[(4'ha):(2'h3)] < (wire1 << $signed(wire1))));
  assign wire5 = (^~wire4[(1'h0):(1'h0)]);
  assign wire6 = $unsigned($unsigned($unsigned({wire0})));
  always
    @(posedge clk) begin
      reg7 <= $signed($unsigned(wire6));
      reg8 <= $unsigned(wire0[(1'h1):(1'h1)]);
    end
  assign wire9 = $unsigned(wire0);
  assign wire10 = $signed(wire6);
  assign wire11 = $signed(((~^(wire9 == (8'ha6))) * wire3));
  assign wire12 = ((-wire5[(3'h6):(1'h0)]) ?
                      wire11[(3'h5):(3'h4)] : (reg8[(1'h0):(1'h0)] > ((~&(8'hab)) && $unsigned(reg7))));
  always
    @(posedge clk) begin
      reg13 <= wire10;
      reg14 <= (wire12 ?
          wire10 : ($unsigned({(8'haf)}) ? (~(wire1 >= wire10)) : (+wire3)));
    end
endmodule