(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h74):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire0;
  input wire [(2'h2):(1'h0)] wire1;
  input wire signed [(2'h2):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire3;
  wire [(4'h9):(1'h0)] wire81;
  wire [(3'h7):(1'h0)] wire79;
  wire signed [(3'h7):(1'h0)] wire28;
  wire [(4'ha):(1'h0)] wire27;
  wire [(3'h6):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire12;
  wire signed [(2'h3):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire25;
  reg signed [(4'h9):(1'h0)] reg4 = (1'h0);
  reg [(2'h2):(1'h0)] reg6 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg7 = (1'h0);
  reg [(4'ha):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg10 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg11 = (1'h0);
  assign y = {wire81,
                 wire79,
                 wire28,
                 wire27,
                 wire5,
                 wire12,
                 wire13,
                 wire25,
                 reg4,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 reg11,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= ((wire3 ?
          $unsigned($unsigned(wire3)) : (wire1 == $unsigned(wire2))) ^ wire2[(1'h1):(1'h1)]);
    end
  assign wire5 = wire0;
  always
    @(posedge clk) begin
      reg6 <= ({wire3} ~^ wire2[(1'h1):(1'h1)]);
      reg7 <= (&wire3);
      if ($unsigned({$signed($unsigned(wire3))}))
        begin
          reg8 <= {$signed($unsigned((&wire0)))};
          if ((wire5 ~^ (~&($signed(reg8) || (+wire1)))))
            begin
              reg9 <= $signed({wire0});
              reg10 <= $signed(reg9[(2'h2):(2'h2)]);
              reg11 <= {$unsigned(wire2[(1'h1):(1'h1)])};
            end
          else
            begin
              reg9 <= wire5;
              reg10 <= wire5;
              reg11 <= $signed(((!(wire5 ? (8'ha3) : wire5)) || {{reg9}}));
            end
        end
      else
        begin
          reg8 <= reg10[(1'h1):(1'h0)];
          reg9 <= $signed((((~|reg9) != (|reg9)) <= (wire5 ?
              (|(8'haf)) : wire2)));
        end
    end
  assign wire12 = (&$unsigned($signed((8'ha7))));
  assign wire13 = $signed($unsigned((^reg6)));
  module14 #() modinst26 (.wire16(reg8), .clk(clk), .wire18(wire0), .wire15(reg11), .wire17(reg7), .y(wire25));
  assign wire27 = (wire12[(1'h1):(1'h1)] ~^ $unsigned(((wire0 | wire0) ~^ wire5)));
  assign wire28 = reg11;
  module29 #() modinst80 (.wire31(reg8), .wire33(reg4), .wire32(wire3), .wire30(wire5), .clk(clk), .y(wire79));
  assign wire81 = (($signed($unsigned(reg6)) ?
                      wire13[(2'h3):(2'h2)] : wire3[(1'h0):(1'h0)]) >> $unsigned($signed($signed(wire27))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module29
#(parameter param78 = (-({{(8'ha8)}} < ((8'ha9) != ((8'ha7) ? (8'ha1) : (8'ha4))))))
(y, clk, wire30, wire31, wire32, wire33);
  output wire [(32'h65):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire30;
  input wire signed [(3'h5):(1'h0)] wire31;
  input wire [(3'h5):(1'h0)] wire32;
  input wire [(4'h9):(1'h0)] wire33;
  wire signed [(2'h2):(1'h0)] wire77;
  wire [(3'h7):(1'h0)] wire76;
  wire [(4'hb):(1'h0)] wire74;
  wire signed [(4'h8):(1'h0)] wire63;
  wire signed [(4'ha):(1'h0)] wire61;
  wire [(4'ha):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire59;
  reg signed [(4'ha):(1'h0)] reg62 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg34 = (1'h0);
  assign y = {wire77,
                 wire76,
                 wire74,
                 wire63,
                 wire61,
                 wire35,
                 wire36,
                 wire37,
                 wire59,
                 reg62,
                 reg34,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg34 <= wire33[(3'h7):(2'h2)];
    end
  assign wire35 = {(wire32 ^ (wire31[(3'h4):(2'h3)] >= wire30))};
  assign wire36 = $unsigned((&((8'ha1) <= wire30[(1'h0):(1'h0)])));
  assign wire37 = wire32;
  module38 #() modinst60 (wire59, clk, wire36, wire35, reg34, wire32);
  assign wire61 = ($unsigned((-$signed(wire37))) >>> $signed($unsigned($unsigned(wire37))));
  always
    @(posedge clk) begin
      reg62 <= wire32[(2'h3):(1'h0)];
    end
  assign wire63 = (reg34[(2'h2):(1'h1)] ?
                      ((-(wire31 != (8'haa))) ~^ wire30) : (8'ha8));
  module64 #() modinst75 (wire74, clk, wire59, wire61, wire36, wire33);
  assign wire76 = (($signed(((8'ha3) > wire31)) >> wire37) - wire37[(1'h0):(1'h0)]);
  assign wire77 = $unsigned(wire59);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h29):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire18;
  input wire [(2'h3):(1'h0)] wire17;
  input wire [(4'ha):(1'h0)] wire16;
  input wire signed [(3'h7):(1'h0)] wire15;
  wire [(2'h3):(1'h0)] wire24;
  wire [(2'h3):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire22;
  wire signed [(3'h6):(1'h0)] wire21;
  wire [(3'h6):(1'h0)] wire20;
  wire signed [(4'hb):(1'h0)] wire19;
  assign y = {wire24, wire23, wire22, wire21, wire20, wire19, (1'h0)};
  assign wire19 = (($signed((wire15 < wire15)) ?
                          (~&(wire15 ?
                              wire17 : wire17)) : $unsigned((!wire15))) ?
                      wire15 : ((&(8'hab)) ?
                          $signed((wire17 ?
                              wire15 : (8'hb0))) : wire17[(1'h0):(1'h0)]));
  assign wire20 = wire17[(1'h1):(1'h0)];
  assign wire21 = wire17;
  assign wire22 = ($signed($unsigned($signed(wire15))) <<< (^~{wire19}));
  assign wire23 = {(~|$unsigned(wire15[(3'h5):(3'h5)]))};
  assign wire24 = (~wire17);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module64  (y, clk, wire68, wire67, wire66, wire65);
  output wire [(32'h21):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire68;
  input wire [(4'ha):(1'h0)] wire67;
  input wire signed [(4'hb):(1'h0)] wire66;
  input wire [(2'h2):(1'h0)] wire65;
  wire [(3'h7):(1'h0)] wire73;
  wire signed [(4'ha):(1'h0)] wire72;
  wire [(3'h6):(1'h0)] wire71;
  wire [(3'h6):(1'h0)] wire70;
  wire [(2'h3):(1'h0)] wire69;
  assign y = {wire73, wire72, wire71, wire70, wire69, (1'h0)};
  assign wire69 = $unsigned(wire68[(3'h4):(3'h4)]);
  assign wire70 = ({(8'hac)} ? {$signed(wire69)} : wire66[(3'h7):(3'h5)]);
  assign wire71 = $signed($signed(((^~wire69) <= wire70[(1'h1):(1'h0)])));
  assign wire72 = ((-$unsigned((&wire67))) && $unsigned($signed($unsigned((8'haa)))));
  assign wire73 = wire67;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module38  (y, clk, wire42, wire41, wire40, wire39);
  output wire [(32'h63):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire42;
  input wire [(3'h7):(1'h0)] wire41;
  input wire signed [(4'hb):(1'h0)] wire40;
  input wire signed [(3'h4):(1'h0)] wire39;
  wire signed [(4'hb):(1'h0)] wire58;
  wire signed [(3'h7):(1'h0)] wire57;
  wire signed [(3'h6):(1'h0)] wire56;
  wire [(2'h3):(1'h0)] wire55;
  wire [(4'h9):(1'h0)] wire54;
  wire signed [(3'h7):(1'h0)] wire52;
  wire signed [(3'h6):(1'h0)] wire51;
  wire [(2'h2):(1'h0)] wire44;
  wire [(3'h5):(1'h0)] wire43;
  reg [(4'hb):(1'h0)] reg53 = (1'h0);
  reg [(4'h8):(1'h0)] reg50 = (1'h0);
  reg [(3'h4):(1'h0)] reg49 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg48 = (1'h0);
  reg [(3'h4):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg45 = (1'h0);
  assign y = {wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire52,
                 wire51,
                 wire44,
                 wire43,
                 reg53,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 (1'h0)};
  assign wire43 = $signed((((wire41 ^~ wire42) ?
                      wire39 : $unsigned(wire40)) >> $unsigned($unsigned(wire40))));
  assign wire44 = (-(!$signed(wire39[(2'h2):(1'h1)])));
  always
    @(posedge clk) begin
      reg45 <= $unsigned($signed($unsigned($signed(wire40))));
      reg46 <= wire41[(3'h6):(3'h5)];
      if ((wire41[(3'h4):(3'h4)] ?
          $signed((wire41 ?
              wire44[(1'h0):(1'h0)] : wire42[(1'h1):(1'h1)])) : (-reg46)))
        begin
          reg47 <= (!reg45);
          reg48 <= (($signed((!reg46)) >>> (~|(!reg46))) & $unsigned($signed((~wire44))));
          reg49 <= (~&$signed($signed($unsigned(reg48))));
        end
      else
        begin
          reg47 <= (8'h9e);
          reg48 <= {wire39};
        end
    end
  always
    @(posedge clk) begin
      reg50 <= ((+$signed(((8'had) == reg45))) ?
          ({reg47[(2'h2):(1'h0)]} ?
              ((~&(8'ha3)) >> wire42) : wire40[(4'ha):(2'h2)]) : wire42[(1'h1):(1'h1)]);
    end
  assign wire51 = $signed((((wire43 > reg49) ? $signed(wire40) : wire44) ?
                      (&{(8'h9d)}) : ((|wire42) ?
                          (-reg50) : $unsigned((8'h9d)))));
  assign wire52 = ({reg49} + (wire44 ? {wire39[(2'h3):(1'h1)]} : reg50));
  always
    @(posedge clk) begin
      reg53 <= ((~&reg45[(3'h4):(2'h3)]) ?
          (reg49[(2'h2):(2'h2)] ?
              (((8'ha6) ^ (8'h9f)) < (reg49 ?
                  wire42 : (8'h9d))) : $unsigned($unsigned(reg45))) : wire51);
    end
  assign wire54 = ($signed(wire51) * {reg49});
  assign wire55 = wire40[(3'h5):(1'h1)];
  assign wire56 = (|wire55);
  assign wire57 = $unsigned($signed((^~{wire43})));
  assign wire58 = ((~reg48[(1'h1):(1'h0)]) >= $unsigned(wire40[(4'h8):(3'h4)]));
endmodule