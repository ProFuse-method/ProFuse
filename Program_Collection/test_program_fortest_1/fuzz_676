(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire67;
  wire signed [(4'ha):(1'h0)] wire66;
  wire [(3'h6):(1'h0)] wire65;
  wire signed [(3'h5):(1'h0)] wire63;
  wire signed [(3'h6):(1'h0)] wire62;
  wire [(4'h8):(1'h0)] wire61;
  wire [(4'hb):(1'h0)] wire59;
  wire [(3'h7):(1'h0)] wire4;
  assign y = {wire67,
                 wire66,
                 wire65,
                 wire63,
                 wire62,
                 wire61,
                 wire59,
                 wire4,
                 (1'h0)};
  assign wire4 = $signed($signed((8'ha5)));
  module5 #() modinst60 (.y(wire59), .clk(clk), .wire9(wire1), .wire8(wire3), .wire6(wire4), .wire7(wire0));
  assign wire61 = wire0[(3'h6):(2'h2)];
  assign wire62 = wire2[(3'h4):(2'h2)];
  module5 #() modinst64 (.y(wire63), .wire9(wire3), .wire7(wire61), .wire6(wire0), .clk(clk), .wire8(wire2));
  assign wire65 = ((((wire59 ? wire61 : wire3) != (wire63 > (8'hb0))) ?
                      $signed({wire1}) : {wire61}) >>> $unsigned(($signed((8'hae)) ?
                      wire4[(2'h3):(1'h1)] : (&wire4))));
  assign wire66 = (({{wire59}} ?
                          $signed((~|(8'ha7))) : {wire65[(3'h6):(2'h3)]}) ?
                      (&wire4) : (~^$unsigned((wire4 <= wire63))));
  assign wire67 = $signed({{(~wire66)}});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire9;
  input wire [(3'h7):(1'h0)] wire8;
  input wire [(4'h8):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire6;
  wire [(3'h6):(1'h0)] wire58;
  wire [(4'hb):(1'h0)] wire56;
  wire [(3'h6):(1'h0)] wire54;
  wire [(4'h8):(1'h0)] wire33;
  wire signed [(3'h7):(1'h0)] wire32;
  wire [(3'h4):(1'h0)] wire31;
  wire [(3'h7):(1'h0)] wire30;
  wire signed [(3'h4):(1'h0)] wire29;
  wire [(4'hb):(1'h0)] wire28;
  wire [(4'hb):(1'h0)] wire26;
  assign y = {wire58,
                 wire56,
                 wire54,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire26,
                 (1'h0)};
  module10 #() modinst27 (.wire12(wire9), .y(wire26), .wire14(wire6), .clk(clk), .wire13(wire7), .wire11(wire8));
  assign wire28 = wire7;
  assign wire29 = $unsigned(wire7[(2'h2):(2'h2)]);
  assign wire30 = ((^~(~&$unsigned(wire7))) << wire26[(4'h9):(2'h2)]);
  assign wire31 = $signed({(wire6 && (wire9 < (8'ha7)))});
  assign wire32 = {(wire29 ? {(+(8'hae))} : {(~^wire31)})};
  assign wire33 = ((({wire9} < $signed((8'haf))) ?
                      $unsigned((^wire29)) : ((wire7 ?
                          wire28 : wire31) >>> wire26)) + ((8'h9e) ?
                      $signed({wire32}) : (wire8 + (-wire31))));
  module34 #() modinst55 (.wire36(wire33), .clk(clk), .wire37(wire29), .y(wire54), .wire38(wire28), .wire35(wire9));
  module10 #() modinst57 (wire56, clk, wire30, wire26, wire33, wire8);
  assign wire58 = wire9;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34
#(parameter param53 = (-(!(|{(8'ha8)}))))
(y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h6f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire38;
  input wire [(3'h4):(1'h0)] wire37;
  input wire signed [(2'h3):(1'h0)] wire36;
  input wire [(3'h4):(1'h0)] wire35;
  wire signed [(3'h6):(1'h0)] wire48;
  wire [(3'h7):(1'h0)] wire47;
  wire [(3'h7):(1'h0)] wire46;
  wire [(4'h8):(1'h0)] wire45;
  wire signed [(2'h3):(1'h0)] wire44;
  wire [(4'hb):(1'h0)] wire43;
  wire signed [(4'h8):(1'h0)] wire42;
  wire [(4'hb):(1'h0)] wire41;
  wire [(4'hb):(1'h0)] wire40;
  wire signed [(2'h3):(1'h0)] wire39;
  reg [(3'h7):(1'h0)] reg52 = (1'h0);
  reg [(4'h8):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg50 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg49 = (1'h0);
  assign y = {wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 (1'h0)};
  assign wire39 = (^~(~wire35));
  assign wire40 = $signed((((wire38 ?
                          wire37 : wire39) == wire38[(3'h7):(3'h5)]) ?
                      wire37 : ((wire36 ? (8'hab) : wire35) ?
                          (wire39 ? wire37 : wire36) : {(8'ha5)})));
  assign wire41 = $signed(wire38);
  assign wire42 = (((|wire37[(1'h0):(1'h0)]) || $unsigned(wire35[(2'h2):(2'h2)])) ?
                      (8'h9f) : (+wire38[(3'h6):(2'h2)]));
  assign wire43 = wire39[(1'h1):(1'h0)];
  assign wire44 = $unsigned(($signed(wire37) != $unsigned((wire40 ?
                      wire36 : (8'hb0)))));
  assign wire45 = $unsigned(wire39);
  assign wire46 = {(wire39[(1'h0):(1'h0)] >= $unsigned(wire35[(1'h0):(1'h0)]))};
  assign wire47 = wire41;
  assign wire48 = (&wire37);
  always
    @(posedge clk) begin
      if ((((wire43 < (!wire48)) ?
              (wire43 ? {wire38} : (^~wire48)) : ((wire41 ? wire38 : (8'ha7)) ?
                  $signed(wire43) : (8'ha4))) ?
          {(^(~|wire37))} : (~$signed($unsigned(wire45)))))
        begin
          reg49 <= wire46[(1'h0):(1'h0)];
          reg50 <= $signed(($unsigned({wire44}) ?
              wire41[(2'h3):(2'h2)] : ((+wire42) << (~wire41))));
          reg51 <= ((({reg50} ? (wire35 ? wire39 : wire40) : $signed(wire47)) ?
                  (~(wire37 && reg50)) : {wire35}) ?
              $unsigned(((-wire38) ?
                  wire44[(1'h0):(1'h0)] : $unsigned((8'h9e)))) : reg49[(3'h4):(3'h4)]);
        end
      else
        begin
          reg49 <= ((~^(~$unsigned(wire42))) ?
              {(~$unsigned((8'h9c)))} : {(wire39[(1'h0):(1'h0)] ?
                      wire37 : (reg49 && wire43))});
        end
      reg52 <= wire43;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire14;
  input wire signed [(4'h8):(1'h0)] wire13;
  input wire signed [(4'h8):(1'h0)] wire12;
  input wire [(3'h7):(1'h0)] wire11;
  wire [(3'h6):(1'h0)] wire25;
  wire signed [(2'h2):(1'h0)] wire24;
  wire [(4'h8):(1'h0)] wire23;
  wire signed [(4'hb):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire20;
  wire [(4'ha):(1'h0)] wire19;
  wire signed [(4'h9):(1'h0)] wire18;
  wire [(3'h4):(1'h0)] wire17;
  wire [(2'h3):(1'h0)] wire15;
  reg signed [(4'ha):(1'h0)] reg16 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire15,
                 reg16,
                 (1'h0)};
  assign wire15 = wire14[(2'h3):(1'h0)];
  always
    @(posedge clk) begin
      reg16 <= (wire12 - ((wire13 ?
          (&wire14) : (wire12 - wire14)) || $unsigned(wire13)));
    end
  assign wire17 = ($signed({(wire11 + wire11)}) << $signed(($signed(wire11) || wire14)));
  assign wire18 = $signed(wire13[(1'h0):(1'h0)]);
  assign wire19 = $unsigned(wire11);
  assign wire20 = wire11;
  assign wire21 = (({wire12} ?
                      ({reg16} >= wire19[(3'h5):(2'h2)]) : (8'haf)) >>> $unsigned((8'ha3)));
  assign wire22 = {$signed({(wire18 ? (8'ha7) : wire21)})};
  assign wire23 = ($unsigned((!$signed((8'h9e)))) <<< reg16);
  assign wire24 = $signed((&wire13[(3'h7):(3'h7)]));
  assign wire25 = ($signed(wire14) ?
                      $signed($unsigned((~wire15))) : (((reg16 | reg16) > $unsigned(wire20)) && ($unsigned(wire11) ?
                          $signed(wire13) : (wire19 ? wire14 : wire11))));
endmodule