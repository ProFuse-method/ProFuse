(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param311 = {(!(({(8'ha9), (8'hb9)} ? {(7'h42)} : (+(8'hb9))) - (((8'hb8) ? (8'hb2) : (8'h9d)) & ((8'ha6) ~^ (8'ha1)))))})
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h162):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire0;
  input wire signed [(4'he):(1'h0)] wire1;
  input wire [(4'hd):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire3;
  wire [(4'hb):(1'h0)] wire310;
  wire signed [(3'h7):(1'h0)] wire309;
  wire signed [(5'h15):(1'h0)] wire27;
  wire [(4'hb):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire29;
  wire signed [(4'hb):(1'h0)] wire30;
  wire [(5'h14):(1'h0)] wire31;
  wire signed [(5'h10):(1'h0)] wire307;
  reg [(5'h14):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg25 = (1'h0);
  reg [(4'hd):(1'h0)] reg22 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg21 = (1'h0);
  reg [(5'h11):(1'h0)] reg16 = (1'h0);
  reg [(3'h4):(1'h0)] reg15 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg10 = (1'h0);
  reg [(4'hd):(1'h0)] reg8 = (1'h0);
  reg [(5'h13):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg6 = (1'h0);
  reg [(4'hb):(1'h0)] reg24 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg23 = (1'h0);
  reg [(3'h6):(1'h0)] reg20 = (1'h0);
  reg [(5'h10):(1'h0)] reg19 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar18 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg17 = (1'h0);
  reg [(3'h6):(1'h0)] forvar14 = (1'h0);
  reg [(4'he):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  reg [(2'h2):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar5 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg4 = (1'h0);
  assign y = {wire310,
                 wire309,
                 wire27,
                 wire28,
                 wire29,
                 wire30,
                 wire31,
                 wire307,
                 reg26,
                 reg25,
                 reg22,
                 reg21,
                 reg16,
                 reg15,
                 reg12,
                 reg10,
                 reg8,
                 reg7,
                 reg6,
                 reg24,
                 reg23,
                 reg20,
                 reg19,
                 forvar18,
                 reg17,
                 forvar14,
                 reg13,
                 reg11,
                 reg9,
                 forvar5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 = (8'h9d);
      if ({$unsigned((wire1[(3'h7):(3'h7)] ?
              ((reg4 != reg4) ?
                  (reg4 >> reg4) : $signed(wire2)) : (wire1[(3'h6):(3'h4)] >> (|wire0)))),
          (^$unsigned(wire2))})
        begin
          for (forvar5 = (1'h0); (forvar5 < (2'h2)); forvar5 = (forvar5 + (1'h1)))
            begin
              reg6 <= wire2[(3'h4):(2'h3)];
            end
          if ((($unsigned($unsigned((reg4 ?
              reg4 : (8'ha8)))) < $unsigned((~^reg6[(1'h0):(1'h0)]))) == $signed((forvar5[(3'h4):(1'h0)] <= $signed((wire3 ^~ wire2))))))
            begin
              reg7 <= wire3;
              reg8 <= $unsigned((((+$unsigned(reg4)) >> wire2) * (((^(8'h9d)) >> $signed(wire0)) ?
                  $signed($unsigned(reg7)) : (7'h42))));
              reg9 = wire2;
              reg10 <= (|$signed(wire1));
            end
          else
            begin
              reg7 <= wire3[(3'h4):(1'h0)];
              reg8 <= {(&wire1)};
              reg9 = $signed($unsigned($unsigned(wire3[(3'h4):(2'h3)])));
            end
        end
      else
        begin
          for (forvar5 = (1'h0); (forvar5 < (3'h4)); forvar5 = (forvar5 + (1'h1)))
            begin
              reg9 = (~&forvar5[(1'h0):(1'h0)]);
              reg11 = $unsigned((!{$signed(reg7), reg6}));
              reg12 <= ($signed(reg4) ~^ (|$signed(wire1[(3'h7):(3'h6)])));
            end
          reg13 = {$signed(wire3),
              (reg11[(3'h7):(1'h0)] ?
                  $signed($signed(((8'hb6) && reg12))) : reg6[(1'h1):(1'h0)])};
          for (forvar14 = (1'h0); (forvar14 < (2'h3)); forvar14 = (forvar14 + (1'h1)))
            begin
              reg15 <= (({$unsigned($unsigned(forvar14))} ?
                      {(&reg13[(3'h7):(3'h5)])} : (reg7 ?
                          ((~wire2) > ((8'ha0) ?
                              reg8 : (8'hab))) : $signed(wire0))) ?
                  reg13[(3'h4):(3'h4)] : $signed($unsigned(reg6)));
              reg16 <= ($unsigned(reg7[(4'h9):(4'h9)]) || ((8'hac) + forvar5[(3'h4):(1'h1)]));
              reg17 = reg4[(3'h5):(1'h0)];
            end
          for (forvar18 = (1'h0); (forvar18 < (2'h3)); forvar18 = (forvar18 + (1'h1)))
            begin
              reg19 = (wire1 * wire1[(3'h4):(1'h0)]);
              reg20 = forvar5;
            end
          if ({$unsigned((reg15 >= ((wire2 < wire2) ?
                  reg10[(2'h3):(1'h1)] : reg10))),
              reg11})
            begin
              reg21 <= (&reg4);
              reg22 <= wire1;
              reg23 = reg10[(2'h3):(2'h3)];
            end
          else
            begin
              reg21 <= (reg19[(1'h0):(1'h0)] > $signed({reg6}));
              reg23 = reg23;
              reg24 = {(-$signed(reg12)),
                  $unsigned((((7'h42) ? (forvar14 < reg15) : $unsigned(reg22)) ?
                      $unsigned((reg9 - reg8)) : reg15))};
            end
        end
      reg25 <= ($unsigned(forvar18) ?
          $unsigned((wire1 - {(forvar18 || reg17),
              $unsigned(reg6)})) : ({{reg7[(3'h5):(2'h3)]}} ?
              {$unsigned(reg20),
                  $signed((7'h41))} : $signed(reg8[(3'h5):(3'h5)])));
      reg26 <= $signed((+reg7[(4'h9):(3'h5)]));
    end
  assign wire27 = $signed({($signed((reg6 <= reg15)) ?
                          (reg26[(2'h2):(2'h2)] ^ reg22) : $signed((reg21 ?
                              wire2 : reg8))),
                      wire1});
  assign wire28 = ($signed(((8'ha0) ?
                      ($signed(wire3) | reg26) : (reg10 >> (&wire3)))) <= ($unsigned((7'h43)) <= ($unsigned(reg6[(3'h4):(1'h0)]) ?
                      $signed(reg10) : (~|$signed(reg21)))));
  assign wire29 = $unsigned(reg6);
  assign wire30 = (~&$unsigned(reg6));
  assign wire31 = (reg22[(3'h7):(2'h3)] ^~ ((&$unsigned((8'ha5))) != $unsigned(reg12)));
  module32 #() modinst308 (wire307, clk, reg16, reg25, reg6, reg7, wire30);
  assign wire309 = ((8'hb7) ^~ (^wire307[(3'h4):(1'h1)]));
  assign wire310 = (reg12 ?
                       ($unsigned(reg22[(3'h7):(3'h5)]) + $unsigned((wire0[(3'h4):(3'h4)] - (reg22 <= wire309)))) : (reg22 ?
                           {{wire28[(4'h8):(3'h4)]},
                               {$unsigned(reg10)}} : (8'hbe)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module32
#(parameter param306 = (!(~(|(|((8'hbd) ? (8'haf) : (8'ha3)))))))
(y, clk, wire37, wire36, wire35, wire34, wire33);
  output wire [(32'h3e1):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h11):(1'h0)] wire37;
  input wire signed [(2'h3):(1'h0)] wire36;
  input wire [(2'h2):(1'h0)] wire35;
  input wire [(5'h13):(1'h0)] wire34;
  input wire signed [(4'hb):(1'h0)] wire33;
  wire [(3'h7):(1'h0)] wire305;
  wire signed [(5'h14):(1'h0)] wire175;
  wire signed [(5'h10):(1'h0)] wire107;
  wire [(4'h9):(1'h0)] wire106;
  wire [(5'h10):(1'h0)] wire39;
  wire [(5'h15):(1'h0)] wire38;
  wire signed [(3'h4):(1'h0)] wire177;
  wire [(2'h2):(1'h0)] wire237;
  wire signed [(5'h15):(1'h0)] wire239;
  wire signed [(5'h12):(1'h0)] wire240;
  wire signed [(5'h12):(1'h0)] wire241;
  wire signed [(4'ha):(1'h0)] wire303;
  reg signed [(5'h14):(1'h0)] reg42 = (1'h0);
  reg [(3'h4):(1'h0)] reg43 = (1'h0);
  reg [(5'h10):(1'h0)] reg46 = (1'h0);
  reg [(3'h6):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg50 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg53 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg57 = (1'h0);
  reg [(5'h11):(1'h0)] reg58 = (1'h0);
  reg [(4'hf):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg66 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg68 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg69 = (1'h0);
  reg [(5'h15):(1'h0)] reg72 = (1'h0);
  reg [(4'hf):(1'h0)] reg73 = (1'h0);
  reg [(5'h11):(1'h0)] reg74 = (1'h0);
  reg [(5'h13):(1'h0)] reg78 = (1'h0);
  reg [(3'h7):(1'h0)] reg79 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg80 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg82 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg89 = (1'h0);
  reg [(4'h8):(1'h0)] reg92 = (1'h0);
  reg [(5'h14):(1'h0)] reg95 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg104 = (1'h0);
  reg [(5'h15):(1'h0)] reg105 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar103 = (1'h0);
  reg [(4'hb):(1'h0)] reg102 = (1'h0);
  reg [(5'h11):(1'h0)] reg101 = (1'h0);
  reg [(5'h14):(1'h0)] forvar100 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg99 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar98 = (1'h0);
  reg [(4'hb):(1'h0)] reg97 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg96 = (1'h0);
  reg [(2'h2):(1'h0)] reg94 = (1'h0);
  reg [(4'he):(1'h0)] reg93 = (1'h0);
  reg [(4'hd):(1'h0)] reg91 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar90 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg88 = (1'h0);
  reg [(4'he):(1'h0)] reg87 = (1'h0);
  reg [(4'h9):(1'h0)] reg86 = (1'h0);
  reg [(4'hd):(1'h0)] reg85 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar84 = (1'h0);
  reg [(4'h8):(1'h0)] reg83 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar81 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar77 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar76 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg75 = (1'h0);
  reg [(5'h12):(1'h0)] reg71 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar70 = (1'h0);
  reg [(5'h11):(1'h0)] reg67 = (1'h0);
  reg [(5'h15):(1'h0)] forvar65 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar64 = (1'h0);
  reg [(4'h8):(1'h0)] reg63 = (1'h0);
  reg [(5'h13):(1'h0)] reg62 = (1'h0);
  reg [(3'h5):(1'h0)] reg61 = (1'h0);
  reg [(2'h3):(1'h0)] forvar59 = (1'h0);
  reg [(4'hc):(1'h0)] reg56 = (1'h0);
  reg [(4'h9):(1'h0)] forvar55 = (1'h0);
  reg [(5'h10):(1'h0)] reg54 = (1'h0);
  reg [(5'h13):(1'h0)] forvar52 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar47 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg45 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg44 = (1'h0);
  reg [(4'hf):(1'h0)] forvar41 = (1'h0);
  reg [(5'h10):(1'h0)] forvar40 = (1'h0);
  assign y = {wire305,
                 wire175,
                 wire107,
                 wire106,
                 wire39,
                 wire38,
                 wire177,
                 wire237,
                 wire239,
                 wire240,
                 wire241,
                 wire303,
                 reg42,
                 reg43,
                 reg46,
                 reg48,
                 reg50,
                 reg51,
                 reg53,
                 reg57,
                 reg58,
                 reg60,
                 reg66,
                 reg68,
                 reg69,
                 reg72,
                 reg73,
                 reg74,
                 reg78,
                 reg79,
                 reg80,
                 reg82,
                 reg89,
                 reg92,
                 reg95,
                 reg104,
                 reg105,
                 forvar103,
                 reg102,
                 reg101,
                 forvar100,
                 reg99,
                 forvar98,
                 reg97,
                 reg96,
                 reg94,
                 reg93,
                 reg91,
                 forvar90,
                 reg88,
                 reg87,
                 reg86,
                 reg85,
                 forvar84,
                 reg83,
                 forvar81,
                 forvar77,
                 forvar76,
                 reg75,
                 reg71,
                 forvar70,
                 reg67,
                 forvar65,
                 forvar64,
                 reg63,
                 reg62,
                 reg61,
                 forvar59,
                 reg56,
                 forvar55,
                 reg54,
                 forvar52,
                 reg49,
                 forvar47,
                 reg45,
                 reg44,
                 forvar41,
                 forvar40,
                 (1'h0)};
  assign wire38 = wire34[(2'h3):(2'h2)];
  assign wire39 = ($unsigned($unsigned(wire35)) ^ wire36);
  always
    @(posedge clk) begin
      for (forvar40 = (1'h0); (forvar40 < (1'h1)); forvar40 = (forvar40 + (1'h1)))
        begin
          for (forvar41 = (1'h0); (forvar41 < (3'h4)); forvar41 = (forvar41 + (1'h1)))
            begin
              reg42 <= ((-wire38) ?
                  $signed($unsigned((!(wire38 ?
                      wire39 : forvar40)))) : ($unsigned($signed($signed(wire33))) <= wire38[(4'h8):(3'h7)]));
              reg43 <= (~&(8'hb2));
              reg44 = $unsigned((~^wire34));
              reg45 = {(~^$signed($signed(forvar41[(4'h9):(1'h1)])))};
              reg46 <= (~$signed(((wire34[(4'hf):(3'h4)] ?
                  $unsigned(forvar41) : (+wire38)) ~^ {$signed(wire35)})));
            end
          for (forvar47 = (1'h0); (forvar47 < (2'h2)); forvar47 = (forvar47 + (1'h1)))
            begin
              reg48 <= $signed((forvar40 ?
                  (-wire39[(4'h9):(2'h2)]) : {wire39}));
              reg49 = ((~(({wire38,
                      wire33} >= {reg42}) | wire34[(1'h0):(1'h0)])) ?
                  $signed((((~^forvar47) == {reg42}) - $signed((reg44 << reg42)))) : ($unsigned(((wire36 ^~ wire39) + reg46[(4'h9):(4'h9)])) | reg42[(4'he):(4'hc)]));
              reg50 <= wire33;
              reg51 <= (~&$unsigned(wire36));
            end
          for (forvar52 = (1'h0); (forvar52 < (2'h2)); forvar52 = (forvar52 + (1'h1)))
            begin
              reg53 <= (&(!$signed(forvar41)));
              reg54 = (~^{(|reg49[(4'h8):(2'h3)])});
            end
          for (forvar55 = (1'h0); (forvar55 < (3'h4)); forvar55 = (forvar55 + (1'h1)))
            begin
              reg56 = ($unsigned((^(reg46 >= $signed(forvar40)))) ?
                  {reg54, reg48} : (~$signed(forvar55)));
              reg57 <= {{(((forvar52 ? reg56 : wire39) ?
                          wire33 : {wire38}) >> forvar55)}};
              reg58 <= (({(^~(reg53 != wire35)), (8'hac)} ?
                  ($signed(reg48) >>> ($unsigned(wire39) != (forvar41 ?
                      wire33 : reg57))) : forvar40) > $signed((forvar41 ?
                  (~^(reg51 ? wire39 : reg43)) : forvar47[(1'h0):(1'h0)])));
            end
          for (forvar59 = (1'h0); (forvar59 < (2'h3)); forvar59 = (forvar59 + (1'h1)))
            begin
              reg60 <= $signed((8'ha3));
              reg61 = (({(wire37 ?
                          (reg57 << (8'hb1)) : $signed(reg56))} || $signed(((reg54 ?
                      (8'hbb) : (8'hb7)) < forvar52[(3'h4):(2'h3)]))) ?
                  ((8'ha6) >>> reg44[(4'ha):(4'ha)]) : ((wire37 ?
                          {(^~(8'ha6)), (reg54 << forvar47)} : wire39) ?
                      $signed(reg43) : ($unsigned(((8'hb9) ?
                          (8'hac) : forvar59)) + $signed((forvar47 ?
                          forvar52 : reg50)))));
              reg62 = reg60;
              reg63 = reg56[(4'ha):(1'h1)];
            end
        end
      for (forvar64 = (1'h0); (forvar64 < (2'h3)); forvar64 = (forvar64 + (1'h1)))
        begin
          for (forvar65 = (1'h0); (forvar65 < (1'h1)); forvar65 = (forvar65 + (1'h1)))
            begin
              reg66 <= $signed($unsigned(($signed(reg44[(3'h4):(2'h2)]) * (+wire36))));
              reg67 = (reg44 >>> (8'hb9));
              reg68 <= (^~{reg57, reg44});
              reg69 <= $unsigned(((~((reg49 ?
                      (8'hb1) : reg42) <= reg60[(4'hf):(4'h9)])) ?
                  reg54[(3'h7):(3'h4)] : {wire38[(3'h7):(1'h0)],
                      {(~forvar55), {reg56, forvar40}}}));
            end
          for (forvar70 = (1'h0); (forvar70 < (3'h4)); forvar70 = (forvar70 + (1'h1)))
            begin
              reg71 = (~^(^$signed({(~|reg68)})));
              reg72 <= ($unsigned((8'hb1)) > {$unsigned((8'hb4)),
                  $unsigned($signed(((8'hbf) ? forvar64 : (7'h43))))});
              reg73 <= reg56[(3'h4):(2'h2)];
            end
          reg74 <= reg43[(1'h1):(1'h0)];
          reg75 = reg63;
        end
      for (forvar76 = (1'h0); (forvar76 < (2'h3)); forvar76 = (forvar76 + (1'h1)))
        begin
          for (forvar77 = (1'h0); (forvar77 < (1'h0)); forvar77 = (forvar77 + (1'h1)))
            begin
              reg78 <= (&({$unsigned((reg60 < reg61)),
                  wire37} >> ($unsigned((forvar77 ?
                  reg66 : wire35)) | (^~$signed(wire36)))));
              reg79 <= {($unsigned(reg50[(2'h2):(2'h2)]) & (!$signed($signed((8'ha7))))),
                  (!(-forvar52))};
            end
          reg80 <= (&reg43);
          for (forvar81 = (1'h0); (forvar81 < (1'h0)); forvar81 = (forvar81 + (1'h1)))
            begin
              reg82 <= ((forvar47 << (&reg61)) | reg54[(4'hc):(4'h9)]);
              reg83 = (|reg62);
            end
          for (forvar84 = (1'h0); (forvar84 < (3'h4)); forvar84 = (forvar84 + (1'h1)))
            begin
              reg85 = reg82;
              reg86 = reg58;
              reg87 = $unsigned($unsigned((|((~&reg66) ?
                  forvar40 : {reg86, reg72}))));
              reg88 = forvar52;
              reg89 <= forvar52;
            end
        end
      for (forvar90 = (1'h0); (forvar90 < (2'h3)); forvar90 = (forvar90 + (1'h1)))
        begin
          if (((&$signed(reg49)) == (|{reg53[(3'h5):(3'h5)]})))
            begin
              reg91 = (^~$unsigned(wire33));
              reg92 <= ($signed((!{(|wire33)})) ?
                  $signed({$unsigned((!reg69)),
                      (^~((8'haf) ? forvar55 : wire33))}) : reg74);
              reg93 = (~&(8'ha6));
              reg94 = $unsigned($unsigned((reg68[(2'h2):(1'h1)] | (-(forvar84 ?
                  (8'hb3) : reg69)))));
            end
          else
            begin
              reg91 = forvar59[(2'h2):(1'h0)];
              reg92 <= reg85[(1'h0):(1'h0)];
              reg95 <= (~^reg88);
              reg96 = $signed(reg86);
            end
          reg97 = {(~|(reg69 <= $signed($unsigned(reg51))))};
          for (forvar98 = (1'h0); (forvar98 < (1'h1)); forvar98 = (forvar98 + (1'h1)))
            begin
              reg99 = ($unsigned(reg88[(3'h6):(3'h4)]) ?
                  (((^reg45) ?
                          (forvar81[(3'h5):(2'h2)] ?
                              {reg74} : wire33) : ((reg49 ?
                              reg73 : forvar76) | {reg71})) ?
                      $unsigned(reg69[(2'h3):(2'h3)]) : $unsigned((|(reg68 ?
                          reg78 : reg82)))) : reg42);
            end
          for (forvar100 = (1'h0); (forvar100 < (1'h0)); forvar100 = (forvar100 + (1'h1)))
            begin
              reg101 = $unsigned(reg50);
              reg102 = reg83[(3'h7):(2'h2)];
            end
          for (forvar103 = (1'h0); (forvar103 < (2'h3)); forvar103 = (forvar103 + (1'h1)))
            begin
              reg104 <= $unsigned((~(8'hab)));
              reg105 = ({(((~^(8'ha0)) ? $signed(reg66) : (reg50 | forvar55)) ?
                      (((8'ha0) ? reg58 : reg93) ?
                          (+reg48) : $unsigned(wire33)) : ((forvar40 <= reg82) >= (forvar65 | forvar52))),
                  $signed({{reg88}})} <= forvar52);
            end
        end
    end
  assign wire106 = $unsigned((reg42 != $unsigned((~&$signed(wire34)))));
  assign wire107 = ($signed(({reg89, reg43} ?
                           reg48 : $signed($signed(reg72)))) ?
                       {reg104[(4'hc):(4'hb)]} : (^~(((reg78 <<< reg50) ?
                           $signed(reg82) : (~|reg82)) || $unsigned(reg74))));
  module108 #() modinst176 (wire175, clk, wire37, reg92, reg50, reg57, reg53);
  assign wire177 = (!(reg51[(1'h1):(1'h0)] <<< ($signed(wire39) >> $signed(reg48[(3'h6):(3'h6)]))));
  module178 #() modinst238 (wire237, clk, reg73, reg78, reg89, reg80);
  assign wire239 = reg78[(2'h2):(2'h2)];
  assign wire240 = reg57;
  assign wire241 = ((~|wire237[(2'h2):(2'h2)]) || {($signed($signed(reg80)) << reg78)});
  module242 #() modinst304 (.wire246(reg104), .clk(clk), .wire243(wire240), .wire245(reg42), .wire244(reg68), .y(wire303));
  assign wire305 = reg89;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module242
#(parameter param302 = (({(((8'ha5) <= (8'hb1)) < ((8'ha0) >>> (8'hbf))), (^~{(8'ha5), (8'h9e)})} == {(~&((7'h41) < (8'hb0))), (^((8'ha7) ? (8'hac) : (8'ha7)))}) - (8'hb6)))
(y, clk, wire246, wire245, wire244, wire243);
  output wire [(32'h28d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire246;
  input wire signed [(3'h5):(1'h0)] wire245;
  input wire signed [(5'h10):(1'h0)] wire244;
  input wire [(5'h12):(1'h0)] wire243;
  wire signed [(2'h3):(1'h0)] wire301;
  wire signed [(4'h9):(1'h0)] wire300;
  wire signed [(4'hb):(1'h0)] wire299;
  wire [(4'hd):(1'h0)] wire298;
  wire signed [(4'hf):(1'h0)] wire297;
  wire [(4'h8):(1'h0)] wire296;
  wire [(3'h6):(1'h0)] wire293;
  wire signed [(2'h2):(1'h0)] wire292;
  wire [(3'h6):(1'h0)] wire291;
  wire [(3'h7):(1'h0)] wire290;
  wire [(2'h2):(1'h0)] wire253;
  wire [(4'hd):(1'h0)] wire252;
  wire signed [(3'h4):(1'h0)] wire251;
  wire [(5'h15):(1'h0)] wire250;
  wire signed [(4'hf):(1'h0)] wire249;
  wire signed [(5'h13):(1'h0)] wire248;
  wire [(5'h14):(1'h0)] wire247;
  reg signed [(4'hc):(1'h0)] reg295 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg294 = (1'h0);
  reg [(3'h6):(1'h0)] reg289 = (1'h0);
  reg [(4'he):(1'h0)] reg288 = (1'h0);
  reg [(4'hb):(1'h0)] reg287 = (1'h0);
  reg [(2'h3):(1'h0)] reg285 = (1'h0);
  reg [(5'h14):(1'h0)] reg284 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg282 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg278 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg277 = (1'h0);
  reg [(5'h15):(1'h0)] reg274 = (1'h0);
  reg [(4'h9):(1'h0)] reg273 = (1'h0);
  reg [(5'h11):(1'h0)] reg272 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg270 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg268 = (1'h0);
  reg [(4'he):(1'h0)] reg263 = (1'h0);
  reg [(4'he):(1'h0)] reg262 = (1'h0);
  reg [(4'ha):(1'h0)] reg259 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg258 = (1'h0);
  reg [(5'h15):(1'h0)] reg256 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar286 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg283 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg281 = (1'h0);
  reg [(3'h7):(1'h0)] reg280 = (1'h0);
  reg [(3'h4):(1'h0)] forvar279 = (1'h0);
  reg [(5'h13):(1'h0)] forvar276 = (1'h0);
  reg [(4'hd):(1'h0)] forvar275 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg271 = (1'h0);
  reg [(5'h11):(1'h0)] forvar269 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg267 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg266 = (1'h0);
  reg signed [(4'he):(1'h0)] reg265 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar264 = (1'h0);
  reg [(4'hc):(1'h0)] forvar261 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar260 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar257 = (1'h0);
  reg [(4'he):(1'h0)] forvar255 = (1'h0);
  reg [(5'h14):(1'h0)] forvar254 = (1'h0);
  assign y = {wire301,
                 wire300,
                 wire299,
                 wire298,
                 wire297,
                 wire296,
                 wire293,
                 wire292,
                 wire291,
                 wire290,
                 wire253,
                 wire252,
                 wire251,
                 wire250,
                 wire249,
                 wire248,
                 wire247,
                 reg295,
                 reg294,
                 reg289,
                 reg288,
                 reg287,
                 reg285,
                 reg284,
                 reg282,
                 reg278,
                 reg277,
                 reg274,
                 reg273,
                 reg272,
                 reg270,
                 reg268,
                 reg263,
                 reg262,
                 reg259,
                 reg258,
                 reg256,
                 forvar286,
                 reg283,
                 reg281,
                 reg280,
                 forvar279,
                 forvar276,
                 forvar275,
                 reg271,
                 forvar269,
                 reg267,
                 reg266,
                 reg265,
                 forvar264,
                 forvar261,
                 forvar260,
                 forvar257,
                 forvar255,
                 forvar254,
                 (1'h0)};
  assign wire247 = wire245[(3'h4):(2'h3)];
  assign wire248 = {{wire244,
                           (((^~wire245) & wire247) <<< {$unsigned((8'hb5)),
                               $unsigned(wire246)})},
                       (-$signed((wire245[(1'h0):(1'h0)] || (-wire243))))};
  assign wire249 = ($signed(wire246) * $signed((|$unsigned(((7'h43) ?
                       wire244 : (8'ha4))))));
  assign wire250 = (^~{$unsigned($unsigned($unsigned(wire243))),
                       wire249[(4'ha):(3'h6)]});
  assign wire251 = wire249;
  assign wire252 = $signed({wire245[(2'h3):(2'h2)]});
  assign wire253 = $signed((^wire251[(1'h1):(1'h1)]));
  always
    @(posedge clk) begin
      for (forvar254 = (1'h0); (forvar254 < (2'h3)); forvar254 = (forvar254 + (1'h1)))
        begin
          for (forvar255 = (1'h0); (forvar255 < (1'h1)); forvar255 = (forvar255 + (1'h1)))
            begin
              reg256 <= $signed(((~|((&wire245) ?
                      $unsigned(wire251) : wire247[(2'h3):(1'h0)])) ?
                  $unsigned(wire243) : $unsigned((((8'hae) ?
                      wire249 : (8'ha4)) >= (~|(8'hbd))))));
            end
        end
      for (forvar257 = (1'h0); (forvar257 < (3'h4)); forvar257 = (forvar257 + (1'h1)))
        begin
          reg258 <= ((~&forvar255[(3'h6):(2'h2)]) ?
              (wire249 ~^ wire252[(4'ha):(2'h3)]) : (8'hbf));
          reg259 <= ((wire247 && $signed(wire249[(4'hb):(1'h1)])) == $unsigned($signed($unsigned((+wire251)))));
        end
      for (forvar260 = (1'h0); (forvar260 < (2'h2)); forvar260 = (forvar260 + (1'h1)))
        begin
          for (forvar261 = (1'h0); (forvar261 < (2'h3)); forvar261 = (forvar261 + (1'h1)))
            begin
              reg262 <= wire249;
              reg263 <= (($signed({(-(8'h9c)),
                  (forvar255 ~^ forvar254)}) * (-{(~|wire252),
                  (-wire245)})) & $signed(({wire253[(2'h2):(1'h0)],
                      (reg259 + reg256)} ?
                  {$signed(reg259)} : $signed((~|(8'ha1))))));
            end
          for (forvar264 = (1'h0); (forvar264 < (3'h4)); forvar264 = (forvar264 + (1'h1)))
            begin
              reg265 = (^$unsigned((!$unsigned($signed(wire244)))));
              reg266 = wire243;
            end
          if ($signed({(((-wire243) ? wire247 : {wire245, reg265}) ?
                  $signed($unsigned((8'hb5))) : (((8'ha4) & wire252) ?
                      forvar261 : $signed(forvar255))),
              $signed($signed((wire248 || wire248)))}))
            begin
              reg267 = $signed(wire247[(3'h6):(3'h4)]);
              reg268 <= (~&$unsigned((!$unsigned(forvar257[(4'ha):(3'h6)]))));
            end
          else
            begin
              reg268 <= ($unsigned(wire249[(1'h1):(1'h1)]) ?
                  $unsigned($unsigned(reg263[(3'h6):(2'h3)])) : $signed(forvar257));
            end
          for (forvar269 = (1'h0); (forvar269 < (2'h3)); forvar269 = (forvar269 + (1'h1)))
            begin
              reg270 <= $signed({$unsigned(($unsigned(reg266) ?
                      (forvar257 && wire250) : (wire247 ?
                          (8'hbf) : wire244)))});
              reg271 = (-wire245);
              reg272 <= (+(~|reg262[(4'ha):(4'h8)]));
              reg273 <= reg270[(2'h2):(2'h2)];
              reg274 <= wire243[(2'h3):(2'h2)];
            end
        end
    end
  always
    @(posedge clk) begin
      for (forvar275 = (1'h0); (forvar275 < (1'h1)); forvar275 = (forvar275 + (1'h1)))
        begin
          for (forvar276 = (1'h0); (forvar276 < (2'h2)); forvar276 = (forvar276 + (1'h1)))
            begin
              reg277 <= reg272[(1'h0):(1'h0)];
            end
          reg278 <= (+(8'hb5));
          for (forvar279 = (1'h0); (forvar279 < (3'h4)); forvar279 = (forvar279 + (1'h1)))
            begin
              reg280 = wire250;
              reg281 = (((|$signed(wire250[(4'h9):(1'h1)])) ?
                  $signed(((^~reg259) == (|wire246))) : wire243[(1'h0):(1'h0)]) && wire244[(4'hb):(3'h5)]);
              reg282 <= (wire252[(3'h6):(3'h6)] ~^ {((~^forvar279) ?
                      (|{reg263}) : ({(8'had)} ?
                          (wire243 <= (8'hbd)) : (reg270 << wire252)))});
              reg283 = {$signed(reg268)};
              reg284 <= (({(7'h40),
                      (reg270 ?
                          $signed(reg277) : $unsigned(reg258))} <= (wire251[(2'h2):(1'h1)] <= (8'h9e))) ?
                  $signed(($signed(reg281[(3'h6):(1'h1)]) ?
                      (|wire250) : wire248[(5'h12):(1'h1)])) : wire250[(3'h6):(3'h4)]);
            end
          reg285 <= (forvar279[(2'h2):(1'h0)] * ((~&($unsigned(wire251) ?
                  $signed(wire244) : (reg258 ? reg272 : wire249))) ?
              (~^wire248) : wire243[(1'h0):(1'h0)]));
        end
      for (forvar286 = (1'h0); (forvar286 < (2'h3)); forvar286 = (forvar286 + (1'h1)))
        begin
          reg287 <= reg272;
          reg288 <= $signed(reg282);
        end
      reg289 <= reg287[(4'hb):(4'hb)];
    end
  assign wire290 = reg288;
  assign wire291 = ($unsigned((reg278 + {$signed((8'haa))})) ?
                       (^~((~^(reg277 & reg288)) ?
                           ($unsigned(reg270) ?
                               (reg258 ? reg287 : wire243) : (reg277 ?
                                   reg259 : reg277)) : (reg262 - (~(8'hbb))))) : (^$signed((reg258[(4'h8):(3'h5)] + wire246[(2'h3):(2'h3)]))));
  assign wire292 = (((($unsigned(reg270) ? (+reg285) : $signed((8'hb8))) ?
                               (wire253 < $signed(wire248)) : (^~(8'hb2))) ?
                           reg287[(3'h4):(2'h2)] : (&$signed($unsigned(wire251)))) ?
                       reg285 : wire249[(3'h7):(3'h4)]);
  assign wire293 = (($unsigned($signed({wire250})) ?
                           reg262[(4'ha):(4'ha)] : $signed(((|reg273) < reg270))) ?
                       ({(((8'hb4) ? wire243 : wire253) ?
                                   $signed(wire252) : $signed(reg256)),
                               (wire290[(1'h1):(1'h0)] & $unsigned(reg258))} ?
                           ($unsigned($unsigned((7'h43))) * wire291[(1'h0):(1'h0)]) : ((reg258 ?
                                   $signed(wire249) : (~^reg263)) ?
                               (-$unsigned(wire250)) : $signed(reg282))) : {$signed((!reg289)),
                           ((|$unsigned(wire290)) * $unsigned((~&reg259)))});
  always
    @(posedge clk) begin
      reg294 <= $signed(((~&(wire251 ?
              (reg285 ? wire245 : (8'h9f)) : $unsigned(reg274))) ?
          (-reg289) : reg268[(1'h0):(1'h0)]));
      reg295 <= reg285;
    end
  assign wire296 = ($signed((reg285[(1'h1):(1'h0)] ~^ $signed($unsigned(reg270)))) ?
                       wire290 : reg285);
  assign wire297 = (wire243[(3'h7):(3'h4)] <= (~|(wire296 ?
                       reg289[(3'h5):(2'h3)] : (wire247 | (^~wire245)))));
  assign wire298 = $unsigned($unsigned(($signed($unsigned(reg273)) ?
                       {reg277[(2'h3):(2'h2)],
                           $signed(reg288)} : wire248[(3'h5):(2'h3)])));
  assign wire299 = (($unsigned($unsigned(wire252[(3'h6):(3'h5)])) ?
                       reg263 : (~&((|(8'hbf)) >= (wire251 ?
                           reg278 : reg294)))) | ((|$unsigned((8'h9f))) >= $unsigned($signed({reg258,
                       wire249}))));
  assign wire300 = reg289;
  assign wire301 = (^~$signed(reg288[(2'h3):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module178  (y, clk, wire182, wire181, wire180, wire179);
  output wire [(32'h271):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hd):(1'h0)] wire182;
  input wire [(5'h13):(1'h0)] wire181;
  input wire [(4'h9):(1'h0)] wire180;
  input wire [(4'he):(1'h0)] wire179;
  wire signed [(5'h15):(1'h0)] wire236;
  wire [(5'h10):(1'h0)] wire235;
  wire [(4'hf):(1'h0)] wire234;
  wire signed [(2'h3):(1'h0)] wire233;
  wire [(4'he):(1'h0)] wire232;
  wire [(5'h10):(1'h0)] wire231;
  wire signed [(2'h2):(1'h0)] wire230;
  wire [(2'h3):(1'h0)] wire212;
  wire signed [(3'h5):(1'h0)] wire211;
  wire [(2'h2):(1'h0)] wire194;
  wire signed [(5'h10):(1'h0)] wire193;
  wire [(3'h6):(1'h0)] wire192;
  wire [(4'h8):(1'h0)] wire191;
  wire signed [(3'h4):(1'h0)] wire190;
  wire signed [(4'ha):(1'h0)] wire189;
  wire signed [(4'he):(1'h0)] wire188;
  wire [(2'h2):(1'h0)] wire187;
  wire [(5'h15):(1'h0)] wire186;
  wire signed [(4'hd):(1'h0)] wire185;
  wire signed [(4'he):(1'h0)] wire184;
  wire [(4'hc):(1'h0)] wire183;
  reg signed [(4'h8):(1'h0)] reg229 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg228 = (1'h0);
  reg [(4'h9):(1'h0)] reg227 = (1'h0);
  reg [(5'h10):(1'h0)] reg226 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg225 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg221 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg220 = (1'h0);
  reg [(4'hf):(1'h0)] reg219 = (1'h0);
  reg [(4'hb):(1'h0)] reg217 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg215 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg210 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg209 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg208 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg206 = (1'h0);
  reg [(5'h15):(1'h0)] reg204 = (1'h0);
  reg [(5'h10):(1'h0)] reg203 = (1'h0);
  reg [(5'h15):(1'h0)] reg197 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar224 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar223 = (1'h0);
  reg [(3'h4):(1'h0)] reg222 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar218 = (1'h0);
  reg [(4'hb):(1'h0)] reg216 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar214 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar213 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg207 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar205 = (1'h0);
  reg [(3'h4):(1'h0)] forvar202 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg201 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar200 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg199 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar198 = (1'h0);
  reg [(4'hd):(1'h0)] forvar196 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg195 = (1'h0);
  assign y = {wire236,
                 wire235,
                 wire234,
                 wire233,
                 wire232,
                 wire231,
                 wire230,
                 wire212,
                 wire211,
                 wire194,
                 wire193,
                 wire192,
                 wire191,
                 wire190,
                 wire189,
                 wire188,
                 wire187,
                 wire186,
                 wire185,
                 wire184,
                 wire183,
                 reg229,
                 reg228,
                 reg227,
                 reg226,
                 reg225,
                 reg221,
                 reg220,
                 reg219,
                 reg217,
                 reg215,
                 reg210,
                 reg209,
                 reg208,
                 reg206,
                 reg204,
                 reg203,
                 reg197,
                 forvar224,
                 forvar223,
                 reg222,
                 forvar218,
                 reg216,
                 forvar214,
                 forvar213,
                 reg207,
                 forvar205,
                 forvar202,
                 reg201,
                 forvar200,
                 reg199,
                 forvar198,
                 forvar196,
                 reg195,
                 (1'h0)};
  assign wire183 = $signed($unsigned(wire180));
  assign wire184 = ((+$signed(wire183[(3'h4):(1'h1)])) ?
                       wire180[(1'h1):(1'h1)] : $signed($signed(wire180[(3'h4):(1'h1)])));
  assign wire185 = (~wire184);
  assign wire186 = ($signed(wire184) >= (~$signed((wire181[(3'h5):(3'h5)] ?
                       $unsigned(wire179) : $unsigned(wire179)))));
  assign wire187 = {wire183[(1'h1):(1'h1)],
                       $signed({(wire183[(3'h5):(3'h5)] == $unsigned(wire185)),
                           $signed((wire182 >>> wire179))})};
  assign wire188 = ($signed((|$signed((wire181 == wire181)))) > (wire184 ?
                       wire183[(4'hc):(1'h0)] : $signed({$unsigned(wire187)})));
  assign wire189 = wire187;
  assign wire190 = (wire181 ^~ wire185);
  assign wire191 = wire179[(4'h9):(3'h5)];
  assign wire192 = (wire184[(4'hc):(4'h9)] ?
                       (((&(&wire188)) < $signed(wire188[(4'he):(4'hd)])) ?
                           wire190 : ($signed({wire187}) ?
                               ($unsigned(wire181) != $unsigned(wire181)) : $signed(wire187))) : $signed({$unsigned($unsigned(wire191)),
                           ((7'h40) == wire187)}));
  assign wire193 = ($signed(wire192) ?
                       (8'hab) : ($signed(((wire185 >>> wire188) > wire181[(4'he):(3'h6)])) | ($unsigned((8'hae)) ?
                           ((wire183 ? wire188 : wire181) ?
                               wire187[(2'h2):(2'h2)] : $unsigned(wire179)) : wire191)));
  assign wire194 = ({$signed($unsigned(wire182)),
                           (~((wire193 - wire188) ? wire180 : (~wire184)))} ?
                       $signed((~^((wire180 ?
                           wire184 : wire182) <<< (wire184 >>> wire189)))) : $signed(wire185[(3'h5):(2'h3)]));
  always
    @(posedge clk) begin
      reg195 = $signed({wire192});
      for (forvar196 = (1'h0); (forvar196 < (1'h1)); forvar196 = (forvar196 + (1'h1)))
        begin
          reg197 <= $signed($unsigned($signed(wire183)));
        end
      for (forvar198 = (1'h0); (forvar198 < (1'h0)); forvar198 = (forvar198 + (1'h1)))
        begin
          reg199 = ((((-(wire180 && (8'hbb))) ?
                  (forvar196 ?
                      $unsigned(wire182) : (wire180 ?
                          wire179 : wire190)) : ((wire188 | wire185) ?
                      wire182 : $unsigned(wire194))) >> (((~^(7'h43)) ~^ wire189[(4'h8):(2'h3)]) ?
                  reg195 : $signed((wire187 < (8'had))))) ?
              $signed($signed({(~^wire181),
                  wire192})) : $unsigned((~wire188[(4'he):(4'hb)])));
          for (forvar200 = (1'h0); (forvar200 < (3'h4)); forvar200 = (forvar200 + (1'h1)))
            begin
              reg201 = (forvar200 ?
                  $unsigned(wire191) : (-($signed(wire183) < ($signed(wire180) > (wire179 ?
                      (8'hac) : wire188)))));
            end
        end
      for (forvar202 = (1'h0); (forvar202 < (3'h4)); forvar202 = (forvar202 + (1'h1)))
        begin
          reg203 <= {(~$signed(((wire189 <<< wire194) ?
                  reg199 : $unsigned(wire180)))),
              reg195[(2'h3):(2'h2)]};
          reg204 <= {$unsigned($unsigned((((8'haa) ? wire194 : forvar200) ?
                  wire182 : $signed(wire194))))};
          for (forvar205 = (1'h0); (forvar205 < (1'h0)); forvar205 = (forvar205 + (1'h1)))
            begin
              reg206 <= (wire180 | forvar202[(2'h2):(1'h1)]);
              reg207 = $unsigned(forvar200[(2'h2):(2'h2)]);
              reg208 <= wire189[(3'h4):(3'h4)];
              reg209 <= reg195;
              reg210 <= wire184;
            end
        end
    end
  assign wire211 = wire186[(4'hb):(2'h2)];
  assign wire212 = {{$unsigned(((+wire188) ?
                               (wire185 ~^ wire188) : $unsigned(wire179))),
                           wire192},
                       $unsigned(wire180[(1'h0):(1'h0)])};
  always
    @(posedge clk) begin
      for (forvar213 = (1'h0); (forvar213 < (2'h3)); forvar213 = (forvar213 + (1'h1)))
        begin
          for (forvar214 = (1'h0); (forvar214 < (2'h3)); forvar214 = (forvar214 + (1'h1)))
            begin
              reg215 <= $unsigned({wire212[(2'h2):(1'h1)]});
              reg216 = wire179[(4'hb):(3'h5)];
              reg217 <= (($unsigned(wire192) ?
                      $signed((reg203 ?
                          ((7'h43) ?
                              (8'haf) : wire189) : wire181[(3'h4):(1'h1)])) : (reg208 == $signed(reg203[(1'h1):(1'h0)]))) ?
                  $unsigned($signed(forvar214)) : $unsigned($unsigned((~|{forvar213}))));
            end
          for (forvar218 = (1'h0); (forvar218 < (1'h1)); forvar218 = (forvar218 + (1'h1)))
            begin
              reg219 <= (8'hb1);
              reg220 <= wire212;
              reg221 <= forvar214;
            end
        end
      reg222 = reg197;
      for (forvar223 = (1'h0); (forvar223 < (1'h0)); forvar223 = (forvar223 + (1'h1)))
        begin
          for (forvar224 = (1'h0); (forvar224 < (1'h1)); forvar224 = (forvar224 + (1'h1)))
            begin
              reg225 <= ($signed((reg204[(5'h13):(1'h1)] ?
                      reg215[(2'h2):(2'h2)] : {reg210[(5'h13):(4'hc)]})) ?
                  wire189 : reg204);
              reg226 <= reg225;
              reg227 <= $signed((+(~&$unsigned(reg217))));
              reg228 <= wire192;
              reg229 <= (~&$signed(reg228[(3'h7):(2'h3)]));
            end
        end
    end
  assign wire230 = $unsigned($signed(wire184));
  assign wire231 = (reg204[(4'hf):(4'hf)] & wire184[(3'h6):(3'h5)]);
  assign wire232 = ($unsigned($signed((wire179 ?
                       {wire211, wire192} : (~reg215)))) > wire194);
  assign wire233 = (~^wire189);
  assign wire234 = (~&$unsigned({reg204[(3'h5):(2'h3)],
                       {(reg206 ? wire194 : wire191)}}));
  assign wire235 = ((&reg206) * ($signed((wire191[(2'h3):(1'h0)] ?
                       $signed((8'hbb)) : $signed(wire194))) <= (-(reg197 >> wire193[(4'hc):(3'h5)]))));
  assign wire236 = {(reg226[(3'h4):(3'h4)] ? reg215 : reg220), (8'ha9)};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module108
#(parameter param173 = (^({(((8'h9f) - (8'ha4)) ? (~^(8'hb6)) : (^(8'h9c)))} - ((|((8'h9c) <<< (8'ha6))) && {(-(8'hbd))}))), 
parameter param174 = (~|{param173, ((|(^param173)) != param173)}))
(y, clk, wire113, wire112, wire111, wire110, wire109);
  output wire [(32'h2a6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire113;
  input wire [(3'h5):(1'h0)] wire112;
  input wire [(2'h3):(1'h0)] wire111;
  input wire [(4'h9):(1'h0)] wire110;
  input wire signed [(4'ha):(1'h0)] wire109;
  wire [(5'h11):(1'h0)] wire172;
  wire signed [(4'h8):(1'h0)] wire171;
  wire [(4'hb):(1'h0)] wire170;
  wire signed [(4'hc):(1'h0)] wire169;
  wire [(4'h9):(1'h0)] wire168;
  wire [(5'h12):(1'h0)] wire167;
  wire signed [(4'h9):(1'h0)] wire166;
  wire [(5'h10):(1'h0)] wire165;
  wire signed [(3'h4):(1'h0)] wire164;
  wire [(5'h15):(1'h0)] wire154;
  wire [(3'h7):(1'h0)] wire153;
  wire [(4'hd):(1'h0)] wire152;
  wire [(3'h7):(1'h0)] wire151;
  wire [(3'h6):(1'h0)] wire150;
  wire signed [(3'h7):(1'h0)] wire149;
  wire [(5'h13):(1'h0)] wire148;
  wire signed [(5'h10):(1'h0)] wire147;
  wire [(4'ha):(1'h0)] wire115;
  wire [(2'h2):(1'h0)] wire114;
  reg signed [(4'h9):(1'h0)] reg163 = (1'h0);
  reg [(4'hc):(1'h0)] reg157 = (1'h0);
  reg [(5'h10):(1'h0)] reg146 = (1'h0);
  reg [(3'h7):(1'h0)] reg142 = (1'h0);
  reg [(4'hd):(1'h0)] reg141 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg138 = (1'h0);
  reg [(5'h11):(1'h0)] reg135 = (1'h0);
  reg [(4'h9):(1'h0)] reg134 = (1'h0);
  reg [(5'h13):(1'h0)] reg131 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg129 = (1'h0);
  reg [(4'ha):(1'h0)] reg128 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg125 = (1'h0);
  reg [(4'h9):(1'h0)] reg123 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg162 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg161 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg160 = (1'h0);
  reg [(3'h6):(1'h0)] reg159 = (1'h0);
  reg [(5'h10):(1'h0)] reg158 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar156 = (1'h0);
  reg [(3'h4):(1'h0)] forvar155 = (1'h0);
  reg signed [(4'he):(1'h0)] reg145 = (1'h0);
  reg [(3'h6):(1'h0)] forvar144 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar143 = (1'h0);
  reg [(4'hd):(1'h0)] reg140 = (1'h0);
  reg [(4'hc):(1'h0)] forvar139 = (1'h0);
  reg [(5'h15):(1'h0)] reg137 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar136 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg133 = (1'h0);
  reg [(4'h9):(1'h0)] reg132 = (1'h0);
  reg [(4'he):(1'h0)] forvar130 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg127 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar126 = (1'h0);
  reg [(5'h11):(1'h0)] reg124 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg122 = (1'h0);
  reg [(5'h14):(1'h0)] reg121 = (1'h0);
  reg [(4'hb):(1'h0)] forvar120 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar119 = (1'h0);
  reg [(3'h7):(1'h0)] reg118 = (1'h0);
  reg [(2'h3):(1'h0)] reg117 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar116 = (1'h0);
  assign y = {wire172,
                 wire171,
                 wire170,
                 wire169,
                 wire168,
                 wire167,
                 wire166,
                 wire165,
                 wire164,
                 wire154,
                 wire153,
                 wire152,
                 wire151,
                 wire150,
                 wire149,
                 wire148,
                 wire147,
                 wire115,
                 wire114,
                 reg163,
                 reg157,
                 reg146,
                 reg142,
                 reg141,
                 reg138,
                 reg135,
                 reg134,
                 reg131,
                 reg129,
                 reg128,
                 reg125,
                 reg123,
                 reg162,
                 reg161,
                 reg160,
                 reg159,
                 reg158,
                 forvar156,
                 forvar155,
                 reg145,
                 forvar144,
                 forvar143,
                 reg140,
                 forvar139,
                 reg137,
                 forvar136,
                 reg133,
                 reg132,
                 forvar130,
                 reg127,
                 forvar126,
                 reg124,
                 reg122,
                 reg121,
                 forvar120,
                 forvar119,
                 reg118,
                 reg117,
                 forvar116,
                 (1'h0)};
  assign wire114 = $signed({wire110[(4'h9):(3'h7)],
                       $signed(((wire112 > wire109) ?
                           (8'hb8) : $signed(wire113)))});
  assign wire115 = wire114[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      for (forvar116 = (1'h0); (forvar116 < (3'h4)); forvar116 = (forvar116 + (1'h1)))
        begin
          reg117 = (~|(&$signed($unsigned($signed(wire115)))));
          reg118 = $signed((!wire110));
        end
      for (forvar119 = (1'h0); (forvar119 < (1'h0)); forvar119 = (forvar119 + (1'h1)))
        begin
          for (forvar120 = (1'h0); (forvar120 < (1'h0)); forvar120 = (forvar120 + (1'h1)))
            begin
              reg121 = ((|$unsigned(((wire110 ? wire115 : forvar116) ?
                      (wire111 ? wire114 : wire111) : $unsigned((8'hb0))))) ?
                  $signed(((8'hbf) ?
                      (wire109[(3'h7):(1'h0)] + $unsigned((8'hbc))) : $unsigned($unsigned(wire109)))) : $unsigned((&$unsigned($unsigned((8'ha6))))));
              reg122 = {{(forvar120[(4'h8):(2'h3)] ?
                          (8'hb9) : $unsigned(wire114[(1'h1):(1'h0)])),
                      reg118[(3'h4):(3'h4)]}};
              reg123 <= $unsigned(((~^$unsigned((wire115 ?
                  wire109 : forvar116))) - reg118[(3'h7):(3'h7)]));
              reg124 = {$signed(wire115), (|reg121[(1'h1):(1'h0)])};
              reg125 <= reg124;
            end
          for (forvar126 = (1'h0); (forvar126 < (1'h1)); forvar126 = (forvar126 + (1'h1)))
            begin
              reg127 = forvar119;
              reg128 <= (^~$signed({wire115}));
            end
          reg129 <= $signed(reg123[(2'h2):(1'h0)]);
          for (forvar130 = (1'h0); (forvar130 < (1'h0)); forvar130 = (forvar130 + (1'h1)))
            begin
              reg131 <= {(wire115[(2'h3):(1'h1)] == ($unsigned(wire113) || ({wire114,
                      reg123} && $unsigned(reg122)))),
                  $unsigned(reg124)};
              reg132 = forvar119[(2'h2):(2'h2)];
              reg133 = ($signed(reg121[(2'h2):(2'h2)]) ?
                  $signed(((~^(+reg118)) ?
                      forvar120[(4'h8):(1'h1)] : (8'ha9))) : forvar119[(3'h5):(3'h4)]);
              reg134 <= ($signed({$unsigned((~^(8'ha7))),
                  reg118}) ^ $unsigned(((forvar126 ?
                      (^~wire115) : ((8'ha7) * reg117)) ?
                  ((reg121 < forvar119) == reg117[(2'h3):(1'h0)]) : ($signed(forvar116) ?
                      reg125[(1'h0):(1'h0)] : (^~reg118)))));
              reg135 <= $signed($unsigned((~&((^~wire112) >> (reg118 ?
                  forvar126 : (8'haa))))));
            end
        end
      for (forvar136 = (1'h0); (forvar136 < (1'h0)); forvar136 = (forvar136 + (1'h1)))
        begin
          reg137 = (~&wire110);
          reg138 <= $unsigned(reg122);
          for (forvar139 = (1'h0); (forvar139 < (2'h3)); forvar139 = (forvar139 + (1'h1)))
            begin
              reg140 = wire114;
              reg141 <= (|($signed($unsigned(forvar130[(3'h7):(1'h1)])) ?
                  (reg125 | $unsigned(((8'hbd) >> reg133))) : forvar136[(4'hc):(2'h3)]));
            end
          reg142 <= $signed({({forvar116[(3'h6):(3'h5)], (~(7'h44))} ?
                  ($signed((8'hb0)) >= $unsigned(forvar120)) : (reg127 ?
                      (^~(8'ha7)) : reg141[(4'h9):(4'h9)])),
              reg121});
        end
      for (forvar143 = (1'h0); (forvar143 < (2'h2)); forvar143 = (forvar143 + (1'h1)))
        begin
          for (forvar144 = (1'h0); (forvar144 < (1'h0)); forvar144 = (forvar144 + (1'h1)))
            begin
              reg145 = $signed((-(($unsigned(reg142) ?
                      (reg127 >= reg124) : $signed(reg124)) ?
                  $unsigned((reg131 ?
                      reg129 : reg134)) : $signed((wire113 & reg135)))));
              reg146 <= reg124;
            end
        end
    end
  assign wire147 = reg134[(3'h4):(3'h4)];
  assign wire148 = (^~$signed((8'ha1)));
  assign wire149 = wire109;
  assign wire150 = reg123;
  assign wire151 = reg131;
  assign wire152 = (($unsigned({(&wire111)}) <= ({(^wire111)} || reg142[(1'h0):(1'h0)])) ^ reg135);
  assign wire153 = (($unsigned(({(8'ha6), wire111} ?
                               $signed(reg142) : (reg146 ? reg123 : reg141))) ?
                           reg141 : wire115[(3'h4):(2'h2)]) ?
                       (wire110[(1'h0):(1'h0)] ?
                           (~(^wire115)) : wire148[(4'hc):(4'hb)]) : wire149);
  assign wire154 = (+(($unsigned($unsigned(wire147)) ?
                           ($unsigned(reg146) ?
                               wire147 : ((8'ha7) ?
                                   wire114 : wire151)) : (8'hb1)) ?
                       ((-wire150) ?
                           $unsigned($unsigned(reg123)) : (((8'hb0) ?
                                   reg138 : reg135) ?
                               reg125[(1'h0):(1'h0)] : $signed(reg129))) : reg135));
  always
    @(posedge clk) begin
      for (forvar155 = (1'h0); (forvar155 < (1'h0)); forvar155 = (forvar155 + (1'h1)))
        begin
          for (forvar156 = (1'h0); (forvar156 < (1'h1)); forvar156 = (forvar156 + (1'h1)))
            begin
              reg157 <= {(!wire150)};
              reg158 = (8'ha8);
              reg159 = ($unsigned(reg131[(5'h11):(1'h0)]) == $signed($signed(wire153[(2'h3):(2'h3)])));
              reg160 = $signed(reg125);
              reg161 = ($unsigned((!$signed(wire147[(4'he):(1'h0)]))) > ($signed($unsigned($signed(reg138))) ?
                  $signed(((&reg129) == (^~(8'hb1)))) : $signed(reg123)));
            end
          reg162 = wire153;
        end
      reg163 <= (|{(~^wire151[(1'h1):(1'h1)]), $signed(reg128)});
    end
  assign wire164 = $unsigned(((~(~reg131[(4'h8):(3'h6)])) - {{$signed(wire113)},
                       wire150[(3'h4):(2'h3)]}));
  assign wire165 = wire111;
  assign wire166 = {(({$signed((8'ha2))} <= wire152[(3'h5):(2'h2)]) ?
                           $signed($signed($unsigned((8'hb6)))) : (~|wire112[(3'h4):(1'h0)])),
                       ({($unsigned((8'ha6)) != $signed(wire109))} || (~^$unsigned((^wire110))))};
  assign wire167 = $signed(($unsigned($signed(wire153)) ?
                       (+reg138[(4'hf):(4'hf)]) : reg142[(2'h3):(2'h3)]));
  assign wire168 = ({wire166,
                       $signed(wire150[(1'h0):(1'h0)])} && $signed(wire109));
  assign wire169 = (($unsigned(wire113) ?
                       $unsigned((wire112[(1'h1):(1'h0)] <= (~|wire154))) : ((^{wire151,
                               wire113}) ?
                           $unsigned((wire147 & (8'h9c))) : $unsigned(wire167))) >> $signed((($unsigned(wire149) ?
                       reg129 : $signed(wire164)) ^ (reg131 == reg123[(2'h3):(1'h0)]))));
  assign wire170 = reg135[(4'hc):(2'h3)];
  assign wire171 = $signed({(reg138[(4'ha):(4'h9)] >= (((8'ha9) ?
                               (8'ha0) : (8'hb0)) ?
                           (wire153 & wire164) : $unsigned(wire166))),
                       ($unsigned(wire168[(4'h9):(4'h9)]) ?
                           ((reg138 ^ reg163) ?
                               $signed(wire153) : wire152[(4'hb):(4'hb)]) : (~|(~wire115)))});
  assign wire172 = (((~&$signed((wire114 * wire109))) ?
                           (wire148[(3'h6):(3'h4)] < (-$signed(reg125))) : $signed(wire153[(2'h2):(1'h1)])) ?
                       ($signed($unsigned((reg125 ?
                           wire166 : reg157))) & (wire150 ?
                           (wire147 ?
                               reg142 : wire153) : (wire153 >>> (7'h40)))) : $signed(($unsigned((wire165 ?
                               wire109 : reg138)) ?
                           $unsigned(((7'h40) ^~ wire164)) : (^reg142))));
endmodule