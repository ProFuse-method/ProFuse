(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h57):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire45;
  wire signed [(3'h5):(1'h0)] wire44;
  wire [(4'h8):(1'h0)] wire43;
  wire signed [(3'h4):(1'h0)] wire39;
  wire [(4'hb):(1'h0)] wire9;
  wire [(4'h9):(1'h0)] wire8;
  wire signed [(4'ha):(1'h0)] wire7;
  wire signed [(3'h7):(1'h0)] wire6;
  wire signed [(4'h8):(1'h0)] wire5;
  wire signed [(2'h3):(1'h0)] wire4;
  reg signed [(4'h8):(1'h0)] reg42 = (1'h0);
  reg [(4'ha):(1'h0)] reg41 = (1'h0);
  assign y = {wire45,
                 wire44,
                 wire43,
                 wire39,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg42,
                 reg41,
                 (1'h0)};
  assign wire4 = ($signed(((wire0 ? wire1 : wire2) ?
                         (wire1 + (8'ha7)) : $unsigned(wire2))) ?
                     ($unsigned(wire3[(1'h0):(1'h0)]) != {(wire0 ~^ wire1)}) : wire1);
  assign wire5 = ($unsigned($signed($signed(wire4))) <= ($unsigned($unsigned(wire0)) ?
                     wire2 : wire3[(2'h2):(1'h1)]));
  assign wire6 = (~|wire4[(2'h2):(1'h0)]);
  assign wire7 = ($unsigned(wire0[(3'h6):(3'h4)]) ?
                     ((~|wire0[(2'h2):(2'h2)]) ?
                         wire6 : $unsigned(wire1[(3'h6):(3'h6)])) : (~&((^~wire1) ?
                         $signed(wire2) : (8'ha8))));
  assign wire8 = wire7[(3'h7):(1'h0)];
  assign wire9 = ((((wire4 || (8'h9e)) ? (wire4 & wire7) : $signed(wire7)) ?
                     wire3[(2'h2):(1'h0)] : ($unsigned(wire8) ?
                         $signed(wire8) : $signed(wire6))) ^ $unsigned(($unsigned(wire5) > (wire3 | wire4))));
  module10 #() modinst40 (.wire14(wire2), .y(wire39), .clk(clk), .wire12(wire9), .wire11(wire3), .wire13(wire1));
  always
    @(posedge clk) begin
      reg41 <= {(wire4 << ($signed(wire9) || wire2))};
      reg42 <= ($signed($unsigned($signed((8'hac)))) - $signed(wire4[(1'h0):(1'h0)]));
    end
  assign wire43 = (wire3 ? wire2 : (|(8'h9c)));
  assign wire44 = wire43;
  assign wire45 = ((+wire4[(2'h3):(1'h1)]) ?
                      $unsigned(wire2[(3'h4):(2'h3)]) : (wire39[(1'h1):(1'h0)] ?
                          {(wire7 <<< wire39)} : $signed(((8'ha3) ?
                              wire5 : wire1))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire14;
  input wire signed [(4'ha):(1'h0)] wire13;
  input wire signed [(4'hb):(1'h0)] wire12;
  input wire [(4'h8):(1'h0)] wire11;
  wire signed [(4'hb):(1'h0)] wire37;
  wire signed [(4'ha):(1'h0)] wire17;
  wire signed [(2'h3):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire15;
  assign y = {wire37, wire17, wire16, wire15, (1'h0)};
  assign wire15 = $signed({((-wire11) ? wire11[(2'h3):(2'h2)] : wire12)});
  assign wire16 = (~&$unsigned({wire14}));
  assign wire17 = wire14[(2'h2):(1'h0)];
  module18 #() modinst38 (wire37, clk, wire17, wire15, wire13, wire16);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18
#(parameter param36 = (!({((8'h9c) ? (8'ha3) : (8'ha1))} ? {((8'hb0) < (8'ha5))} : (!((8'hac) * (8'h9d))))))
(y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire22;
  input wire [(4'ha):(1'h0)] wire21;
  input wire signed [(4'ha):(1'h0)] wire20;
  input wire [(2'h3):(1'h0)] wire19;
  wire [(3'h4):(1'h0)] wire35;
  wire [(4'h9):(1'h0)] wire32;
  wire [(2'h3):(1'h0)] wire31;
  wire signed [(4'h8):(1'h0)] wire30;
  wire signed [(2'h2):(1'h0)] wire29;
  wire [(2'h3):(1'h0)] wire26;
  wire signed [(3'h4):(1'h0)] wire25;
  wire [(2'h2):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire23;
  reg [(3'h6):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg33 = (1'h0);
  reg [(3'h4):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg27 = (1'h0);
  assign y = {wire35,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 reg34,
                 reg33,
                 reg28,
                 reg27,
                 (1'h0)};
  assign wire23 = ({(8'h9f)} ? wire19[(1'h0):(1'h0)] : wire21);
  assign wire24 = (8'had);
  assign wire25 = $signed((wire23[(3'h4):(1'h1)] ?
                      {wire23[(4'h9):(1'h0)]} : wire20));
  assign wire26 = (!(((wire21 ? wire21 : wire22) & wire24[(1'h1):(1'h1)]) ?
                      (((8'hae) < wire19) ?
                          $signed(wire22) : {wire19}) : (~|(^~wire23))));
  always
    @(posedge clk) begin
      reg27 <= wire24;
    end
  always
    @(posedge clk) begin
      reg28 <= wire26;
    end
  assign wire29 = (^~{($unsigned(wire24) <<< (wire24 - wire20))});
  assign wire30 = (~(8'haf));
  assign wire31 = (~&(wire21 == reg28[(2'h2):(1'h1)]));
  assign wire32 = (~($unsigned(wire22[(4'h9):(3'h4)]) << wire23[(3'h5):(1'h1)]));
  always
    @(posedge clk) begin
      if (wire30[(1'h0):(1'h0)])
        begin
          reg33 <= (~&$signed((wire26[(1'h1):(1'h0)] ?
              wire32[(2'h2):(1'h0)] : (~^(8'ha7)))));
        end
      else
        begin
          reg33 <= {$signed((wire31[(1'h1):(1'h1)] | $signed(wire24)))};
        end
      reg34 <= ($signed(($signed((8'ha0)) ?
              (reg33 ? (8'ha6) : wire19) : (wire22 ? wire32 : wire30))) ?
          ($unsigned((reg28 && (8'ha3))) ?
              $unsigned($unsigned(wire29)) : (~(8'h9d))) : (~&((wire24 ?
                  wire20 : wire21) ?
              wire21[(1'h1):(1'h1)] : (wire25 != wire26))));
    end
  assign wire35 = ($signed((+(reg34 ? wire20 : reg33))) ^~ $unsigned((8'ha6)));
endmodule