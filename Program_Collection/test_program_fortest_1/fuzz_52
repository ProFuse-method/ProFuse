(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param43 = ((8'ha1) ^~ ((((8'ha8) <= (8'ha6)) ~^ {(8'h9c)}) ^ {((8'hb0) + (8'hac))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(2'h3):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire42;
  wire signed [(4'hb):(1'h0)] wire40;
  wire signed [(4'h8):(1'h0)] wire39;
  wire [(3'h4):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire4;
  assign y = {wire42, wire40, wire39, wire37, wire36, wire34, wire4, (1'h0)};
  assign wire4 = wire1;
  module5 #() modinst35 (wire34, clk, wire2, wire3, wire4, wire0);
  assign wire36 = (wire2 > {{$signed((8'ha6))}});
  module20 #() modinst38 (wire37, clk, wire4, wire0, wire36, wire34);
  assign wire39 = ((^~wire37) ^~ (^(((8'h9d) <<< (8'h9c)) ?
                      (!(8'ha7)) : $unsigned(wire37))));
  module5 #() modinst41 (.y(wire40), .wire9(wire0), .wire7(wire39), .wire8(wire1), .clk(clk), .wire6(wire36));
  assign wire42 = {{((^wire40) ? (wire39 ? (8'h9d) : (8'ha1)) : (^~(8'hab)))}};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param33 = (~&((((8'ha1) ? (8'haa) : (8'h9f)) - {(8'hae)}) ? (!((8'hb0) >= (8'ha3))) : {((8'ha4) ? (8'ha2) : (8'had))})))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire9;
  input wire [(4'hb):(1'h0)] wire8;
  input wire [(3'h6):(1'h0)] wire7;
  input wire [(4'h9):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire30;
  wire signed [(4'h8):(1'h0)] wire19;
  wire signed [(4'h8):(1'h0)] wire18;
  wire signed [(3'h7):(1'h0)] wire17;
  wire signed [(4'ha):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire15;
  wire signed [(3'h5):(1'h0)] wire14;
  wire [(3'h4):(1'h0)] wire13;
  wire signed [(4'h9):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire11;
  wire [(3'h5):(1'h0)] wire10;
  reg [(3'h4):(1'h0)] reg32 = (1'h0);
  assign y = {wire30,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 reg32,
                 (1'h0)};
  assign wire10 = $unsigned(({(wire6 ?
                          wire7 : wire8)} > $signed(wire9[(2'h3):(1'h1)])));
  assign wire11 = {((~wire6[(4'h9):(1'h0)]) ?
                          wire8 : (wire8 ? wire9[(1'h1):(1'h1)] : (+wire10)))};
  assign wire12 = wire9[(1'h1):(1'h0)];
  assign wire13 = $unsigned($unsigned($signed((wire11 <<< wire12))));
  assign wire14 = ($unsigned(((-(8'ha5)) ?
                      $unsigned(wire6) : $signed(wire11))) * wire13[(2'h3):(1'h0)]);
  assign wire15 = (wire10[(1'h0):(1'h0)] ?
                      ((wire11 ?
                          (wire14 ^~ (8'ha4)) : $unsigned(wire11)) != (((8'hb0) != (8'ha4)) || (|wire9))) : ($unsigned($signed(wire13)) ?
                          $unsigned((wire10 ? wire11 : wire13)) : wire8));
  assign wire16 = (~^$signed((wire12[(3'h4):(3'h4)] << $unsigned(wire9))));
  assign wire17 = (8'ha1);
  assign wire18 = ((wire9[(1'h0):(1'h0)] >>> $signed((wire6 ?
                      wire6 : (8'haa)))) > (8'haa));
  assign wire19 = (~^(($unsigned((8'hab)) < wire17[(3'h6):(1'h0)]) > ({wire17} ?
                      $unsigned(wire11) : $signed(wire6))));
  module20 #() modinst31 (wire30, clk, wire12, wire7, wire18, wire15);
  always
    @(posedge clk) begin
      reg32 <= wire14[(3'h5):(3'h4)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param29 = (~|(({(8'hb0)} != ((8'h9f) ? (8'ha4) : (8'haa))) ^ ({(8'ha9)} - {(8'ha6)}))))
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h19):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire24;
  input wire signed [(3'h6):(1'h0)] wire23;
  input wire signed [(4'h8):(1'h0)] wire22;
  input wire signed [(4'hb):(1'h0)] wire21;
  wire signed [(2'h2):(1'h0)] wire28;
  wire [(4'h8):(1'h0)] wire27;
  wire [(3'h4):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire25;
  assign y = {wire28, wire27, wire26, wire25, (1'h0)};
  assign wire25 = {(&wire24)};
  assign wire26 = $signed(wire23[(1'h0):(1'h0)]);
  assign wire27 = (|$unsigned((~^(~(8'ha4)))));
  assign wire28 = (8'h9f);
endmodule