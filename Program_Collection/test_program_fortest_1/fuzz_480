(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire27;
  wire [(4'ha):(1'h0)] wire26;
  wire [(3'h5):(1'h0)] wire21;
  wire signed [(4'h9):(1'h0)] wire19;
  wire signed [(4'h8):(1'h0)] wire18;
  wire [(4'ha):(1'h0)] wire16;
  reg signed [(3'h6):(1'h0)] reg25 = (1'h0);
  reg [(2'h2):(1'h0)] reg24 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg23 = (1'h0);
  reg [(4'h9):(1'h0)] reg22 = (1'h0);
  reg [(4'h9):(1'h0)] reg20 = (1'h0);
  assign y = {wire27,
                 wire26,
                 wire21,
                 wire19,
                 wire18,
                 wire16,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg20,
                 (1'h0)};
  module4 #() modinst17 (wire16, clk, wire2, wire3, wire0, wire1);
  assign wire18 = $signed($unsigned(($unsigned(wire0) * (~|wire0))));
  assign wire19 = (8'ha3);
  always
    @(posedge clk) begin
      reg20 <= wire16[(2'h2):(1'h1)];
    end
  assign wire21 = (-(+(wire1 ^ (-wire1))));
  always
    @(posedge clk) begin
      if ((~$signed($unsigned(wire3))))
        begin
          if (wire19)
            begin
              reg22 <= ($signed($unsigned((8'ha4))) == (($unsigned(reg20) >= $unsigned(wire21)) ?
                  ($signed(reg20) >> $signed(wire21)) : $unsigned((wire21 - wire18))));
              reg23 <= $unsigned($signed(reg20));
            end
          else
            begin
              reg22 <= {$signed($unsigned($signed(wire3)))};
              reg23 <= $unsigned(wire3);
              reg24 <= ($signed(reg23[(4'h8):(1'h0)]) ?
                  (^(!$unsigned(wire0))) : reg22[(2'h3):(2'h3)]);
            end
        end
      else
        begin
          reg22 <= $unsigned(($unsigned($signed((8'h9f))) ?
              (wire0[(2'h2):(2'h2)] | (wire3 ?
                  wire1 : wire1)) : reg22[(4'h8):(1'h1)]));
          reg23 <= ((wire0 ^ ((wire0 <= wire21) >>> $signed(wire21))) ?
              wire3[(3'h5):(1'h0)] : (reg20[(1'h0):(1'h0)] ?
                  reg20[(2'h2):(1'h0)] : $signed($signed(wire2))));
        end
      reg25 <= ($signed($signed($unsigned((8'hac)))) ?
          (wire0 - $signed((^~wire3))) : wire3);
    end
  assign wire26 = $signed($unsigned($signed((^~wire18))));
  assign wire27 = wire0[(3'h5):(3'h5)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param15 = {{(|(^(8'haa)))}})
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h25):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire8;
  input wire [(2'h2):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire6;
  input wire signed [(3'h4):(1'h0)] wire5;
  wire signed [(2'h3):(1'h0)] wire14;
  wire signed [(3'h7):(1'h0)] wire13;
  wire signed [(2'h2):(1'h0)] wire12;
  wire signed [(3'h5):(1'h0)] wire11;
  wire signed [(4'h8):(1'h0)] wire10;
  wire [(4'hb):(1'h0)] wire9;
  assign y = {wire14, wire13, wire12, wire11, wire10, wire9, (1'h0)};
  assign wire9 = (wire8[(3'h4):(2'h3)] > (wire5 ?
                     (+wire8) : $signed((wire5 ? wire6 : (8'ha9)))));
  assign wire10 = wire8;
  assign wire11 = wire10[(2'h3):(1'h0)];
  assign wire12 = (8'hb0);
  assign wire13 = wire9;
  assign wire14 = (|wire8[(1'h0):(1'h0)]);
endmodule