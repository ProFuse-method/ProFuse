(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire0;
  input wire [(3'h6):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire3;
  wire signed [(3'h6):(1'h0)] wire25;
  wire [(3'h5):(1'h0)] wire24;
  wire signed [(4'hb):(1'h0)] wire23;
  wire [(4'ha):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire4;
  wire signed [(3'h7):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire7;
  wire [(2'h3):(1'h0)] wire8;
  wire signed [(3'h7):(1'h0)] wire9;
  wire signed [(2'h2):(1'h0)] wire19;
  reg signed [(4'hb):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg6 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire23,
                 wire21,
                 wire4,
                 wire5,
                 wire7,
                 wire8,
                 wire9,
                 wire19,
                 reg22,
                 reg6,
                 (1'h0)};
  assign wire4 = $unsigned({{(wire2 ? wire2 : wire0)}});
  assign wire5 = $signed(((wire3[(3'h5):(3'h4)] ?
                     wire0 : wire0) <<< $signed($unsigned(wire2))));
  always
    @(posedge clk) begin
      reg6 <= (8'haa);
    end
  assign wire7 = ((reg6[(2'h2):(2'h2)] - (&(~|wire1))) || {(((8'ha8) >> (8'hab)) ^~ (^wire3))});
  assign wire8 = (-wire4[(1'h0):(1'h0)]);
  assign wire9 = ((wire4[(1'h1):(1'h1)] ?
                         wire7 : ({wire8} | wire4[(1'h1):(1'h1)])) ?
                     ((-$unsigned(wire8)) ^ (-$signed(wire3))) : wire5[(1'h0):(1'h0)]);
  module10 #() modinst20 (.y(wire19), .wire13(wire7), .wire12(wire5), .wire11(reg6), .clk(clk), .wire14(wire4));
  assign wire21 = $signed(($signed((+wire1)) == (wire8[(2'h3):(1'h1)] ?
                      reg6 : (^wire8))));
  always
    @(posedge clk) begin
      reg22 <= (~&(~^$signed(wire7)));
    end
  assign wire23 = (wire0[(3'h4):(2'h3)] ?
                      {$unsigned((wire2 ?
                              (8'ha4) : wire1))} : ($signed($signed(wire2)) ?
                          {(+reg22)} : ((wire4 > wire4) ?
                              (wire19 <= (8'ha7)) : (~&wire9))));
  assign wire24 = $unsigned(wire5);
  assign wire25 = wire23;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h1a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire14;
  input wire signed [(4'ha):(1'h0)] wire13;
  input wire [(3'h7):(1'h0)] wire12;
  input wire signed [(3'h7):(1'h0)] wire11;
  wire [(3'h5):(1'h0)] wire18;
  wire [(4'h8):(1'h0)] wire17;
  wire signed [(2'h3):(1'h0)] wire16;
  wire [(4'h9):(1'h0)] wire15;
  assign y = {wire18, wire17, wire16, wire15, (1'h0)};
  assign wire15 = wire14;
  assign wire16 = {wire13};
  assign wire17 = ((((~^(8'h9c)) ? (wire12 + wire11) : (-wire13)) ?
                          wire14 : (+$signed(wire16))) ?
                      $signed((^(wire13 & wire12))) : wire12);
  assign wire18 = {wire15};
endmodule