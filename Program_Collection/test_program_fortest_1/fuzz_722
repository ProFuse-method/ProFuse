(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h31):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire10;
  wire [(3'h5):(1'h0)] wire9;
  wire [(3'h4):(1'h0)] wire8;
  wire [(3'h5):(1'h0)] wire7;
  reg signed [(3'h7):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg5 = (1'h0);
  reg [(3'h7):(1'h0)] reg4 = (1'h0);
  assign y = {wire10, wire9, wire8, wire7, reg6, reg5, reg4, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= (+wire3);
      reg5 <= (^~((^~wire2[(3'h5):(2'h3)]) ?
          $signed(((8'ha9) ? (8'ha5) : wire0)) : (|(reg4 ? (8'hae) : wire3))));
      reg6 <= ((wire2 ^~ ((|wire0) >= {wire2})) ~^ $unsigned(wire2));
    end
  assign wire7 = (~|$signed($unsigned($unsigned((8'hae)))));
  assign wire8 = ($signed(reg5) ?
                     $unsigned(((+reg6) ?
                         reg6 : (+(8'ha6)))) : ($unsigned(reg6) ?
                         $signed($signed((8'h9c))) : ({wire7} - (wire0 ?
                             reg5 : wire0))));
  assign wire9 = reg5[(3'h6):(3'h6)];
  assign wire10 = ((~^($signed(wire1) ? (~&wire9) : (reg6 >= (8'hb0)))) ?
                      reg6[(2'h2):(1'h1)] : (^~(reg5[(1'h1):(1'h0)] ?
                          (wire9 - reg4) : (+reg5))));
endmodule