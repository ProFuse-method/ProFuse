(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h34c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire0;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(4'he):(1'h0)] wire2;
  input wire signed [(5'h14):(1'h0)] wire3;
  wire signed [(4'hf):(1'h0)] wire129;
  wire signed [(3'h6):(1'h0)] wire128;
  wire [(3'h6):(1'h0)] wire127;
  wire [(4'h9):(1'h0)] wire4;
  wire signed [(4'hf):(1'h0)] wire5;
  wire signed [(5'h13):(1'h0)] wire6;
  wire [(4'hc):(1'h0)] wire7;
  wire [(5'h15):(1'h0)] wire8;
  wire [(4'hb):(1'h0)] wire9;
  wire [(2'h3):(1'h0)] wire32;
  wire signed [(4'ha):(1'h0)] wire72;
  wire [(4'hd):(1'h0)] wire73;
  wire [(4'ha):(1'h0)] wire125;
  reg [(4'hb):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg69 = (1'h0);
  reg [(3'h6):(1'h0)] reg66 = (1'h0);
  reg [(3'h5):(1'h0)] reg62 = (1'h0);
  reg [(5'h13):(1'h0)] reg58 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg56 = (1'h0);
  reg [(4'h8):(1'h0)] reg55 = (1'h0);
  reg [(5'h13):(1'h0)] reg53 = (1'h0);
  reg [(3'h4):(1'h0)] reg33 = (1'h0);
  reg [(4'hf):(1'h0)] reg50 = (1'h0);
  reg [(2'h2):(1'h0)] reg44 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg37 = (1'h0);
  reg [(5'h10):(1'h0)] reg36 = (1'h0);
  reg [(4'hd):(1'h0)] reg28 = (1'h0);
  reg [(4'he):(1'h0)] reg26 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg24 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg22 = (1'h0);
  reg [(5'h14):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg20 = (1'h0);
  reg [(4'hf):(1'h0)] reg19 = (1'h0);
  reg [(4'hd):(1'h0)] reg17 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg71 = (1'h0);
  reg [(2'h2):(1'h0)] reg70 = (1'h0);
  reg [(5'h15):(1'h0)] forvar68 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg67 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg65 = (1'h0);
  reg [(5'h14):(1'h0)] forvar64 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg63 = (1'h0);
  reg [(5'h11):(1'h0)] forvar61 = (1'h0);
  reg [(5'h11):(1'h0)] reg60 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg59 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg57 = (1'h0);
  reg [(4'h8):(1'h0)] forvar54 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar52 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg51 = (1'h0);
  reg [(5'h10):(1'h0)] reg49 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg48 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg47 = (1'h0);
  reg [(5'h10):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar45 = (1'h0);
  reg [(4'ha):(1'h0)] reg43 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg42 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar41 = (1'h0);
  reg [(3'h5):(1'h0)] reg40 = (1'h0);
  reg [(4'h8):(1'h0)] reg39 = (1'h0);
  reg [(4'ha):(1'h0)] reg38 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg34 = (1'h0);
  reg [(5'h15):(1'h0)] forvar33 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg31 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg30 = (1'h0);
  reg [(4'he):(1'h0)] reg29 = (1'h0);
  reg [(5'h14):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg25 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg23 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar18 = (1'h0);
  reg [(3'h5):(1'h0)] reg16 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar14 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg13 = (1'h0);
  reg [(3'h5):(1'h0)] reg12 = (1'h0);
  reg [(4'h9):(1'h0)] forvar11 = (1'h0);
  reg [(2'h2):(1'h0)] forvar10 = (1'h0);
  assign y = {wire129,
                 wire128,
                 wire127,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire8,
                 wire9,
                 wire32,
                 wire72,
                 wire73,
                 wire125,
                 reg68,
                 reg69,
                 reg66,
                 reg62,
                 reg58,
                 reg56,
                 reg55,
                 reg53,
                 reg33,
                 reg50,
                 reg44,
                 reg37,
                 reg36,
                 reg28,
                 reg26,
                 reg24,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg17,
                 reg15,
                 reg71,
                 reg70,
                 forvar68,
                 reg67,
                 reg65,
                 forvar64,
                 reg63,
                 forvar61,
                 reg60,
                 reg59,
                 reg57,
                 forvar54,
                 forvar52,
                 reg51,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 forvar45,
                 reg43,
                 reg42,
                 forvar41,
                 reg40,
                 reg39,
                 reg38,
                 reg35,
                 reg34,
                 forvar33,
                 reg31,
                 reg30,
                 reg29,
                 reg27,
                 reg25,
                 reg23,
                 forvar18,
                 reg16,
                 forvar14,
                 reg13,
                 reg12,
                 forvar11,
                 forvar10,
                 (1'h0)};
  assign wire4 = $unsigned(((8'ha5) ?
                     $unsigned(wire0) : $signed($signed((wire0 || wire3)))));
  assign wire5 = {(((((8'hab) ?
                             wire4 : wire2) == $signed(wire0)) == (!$unsigned(wire3))) ?
                         ({wire4[(3'h5):(1'h1)],
                             $unsigned(wire0)} && wire4) : (8'hb0))};
  assign wire6 = (wire1[(4'h8):(3'h4)] ?
                     ((wire2[(3'h5):(1'h0)] != ($unsigned(wire5) <<< {wire5,
                             wire1})) ?
                         (~&$signed((wire4 ? wire3 : wire1))) : {(^{(8'h9d)}),
                             wire2[(2'h2):(2'h2)]}) : $signed(($signed($signed(wire4)) & $signed((wire4 ?
                         wire1 : wire4)))));
  assign wire7 = $signed(($unsigned({wire6,
                     $signed(wire4)}) != ($signed(wire6) && $signed((wire0 <= wire0)))));
  assign wire8 = ($signed((^~$unsigned((wire4 <= wire7)))) > (($signed((wire1 ?
                         wire6 : wire1)) ~^ wire4[(1'h0):(1'h0)]) ?
                     $signed(wire6) : wire7));
  assign wire9 = (~^(({((8'hb7) <<< wire5)} & (8'hb4)) ?
                     $unsigned(wire2[(4'h8):(1'h1)]) : ($signed((wire3 ?
                         (8'ha1) : wire3)) || {$signed((7'h44))})));
  always
    @(posedge clk) begin
      for (forvar10 = (1'h0); (forvar10 < (2'h2)); forvar10 = (forvar10 + (1'h1)))
        begin
          for (forvar11 = (1'h0); (forvar11 < (1'h0)); forvar11 = (forvar11 + (1'h1)))
            begin
              reg12 = (~&$signed(wire4[(4'h8):(1'h0)]));
              reg13 = {$unsigned(reg12[(2'h3):(1'h1)]),
                  (!wire7[(4'ha):(3'h6)])};
            end
          for (forvar14 = (1'h0); (forvar14 < (1'h0)); forvar14 = (forvar14 + (1'h1)))
            begin
              reg15 <= $unsigned({forvar10[(2'h2):(2'h2)],
                  $signed($unsigned((reg13 + (8'hab))))});
              reg16 = $unsigned(($unsigned((~&reg12)) ?
                  wire7 : $signed($unsigned((forvar14 ? reg12 : (8'hba))))));
              reg17 <= ({{$signed($signed(reg16)),
                          ($unsigned(wire2) == $signed((8'hb5)))},
                      reg16} ?
                  $unsigned($signed((!reg15))) : (|(^~forvar14[(2'h3):(1'h1)])));
            end
          for (forvar18 = (1'h0); (forvar18 < (2'h2)); forvar18 = (forvar18 + (1'h1)))
            begin
              reg19 <= $unsigned((~&$unsigned((+$unsigned(wire3)))));
              reg20 <= ((wire5 ?
                      forvar14[(2'h3):(1'h0)] : wire9[(1'h1):(1'h1)]) ?
                  ({(8'hbe)} ?
                      $signed((~$signed(wire6))) : $unsigned({$signed((8'had)),
                          $unsigned(reg16)})) : {{(reg15[(4'he):(4'h8)] ?
                              $signed(wire3) : {reg17})},
                      (^((reg16 ? reg19 : (8'hb4)) ?
                          (!reg19) : {wire1, reg16}))});
              reg21 <= {({($unsigned(forvar18) ?
                          wire1 : (wire6 && wire5))} + (((!wire4) ^~ (~^reg19)) <= reg15[(3'h5):(3'h4)])),
                  {(($unsigned(forvar10) ^~ (+reg15)) ?
                          ((8'hbc) & $unsigned(wire3)) : ($signed((8'haf)) ?
                              $signed((8'ha8)) : (~reg13)))}};
              reg22 <= (wire1[(2'h3):(1'h0)] | ((7'h41) <<< wire0[(1'h1):(1'h0)]));
              reg23 = $signed((((reg20 << (reg22 ?
                      (8'hba) : reg15)) == reg21[(1'h0):(1'h0)]) ?
                  wire2 : wire3[(4'hb):(4'hb)]));
            end
          if ((!$signed((wire9[(3'h5):(3'h5)] ?
              $unsigned(wire3) : $signed($unsigned(wire8))))))
            begin
              reg24 <= $unsigned($signed($signed((~|wire8))));
              reg25 = $signed((^~((forvar18 < $signed((7'h44))) | $signed(reg12))));
              reg26 <= reg13[(1'h1):(1'h1)];
              reg27 = $unsigned(wire5);
              reg28 <= {{(8'hb4)},
                  ($signed({reg17[(4'h8):(4'h8)], (~(8'haa))}) ?
                      ((~^(wire1 + wire7)) - wire5) : $signed($signed((wire3 - wire3))))};
            end
          else
            begin
              reg25 = forvar10;
              reg27 = (|($unsigned(($signed((8'hbf)) ?
                  wire3 : {wire7})) > ((|(~|wire6)) ?
                  ($signed(wire1) ?
                      (forvar10 | wire1) : (reg15 && reg24)) : reg23)));
              reg29 = (wire5 ?
                  {wire2,
                      ((+$unsigned(reg19)) + $signed($unsigned(reg16)))} : ({reg20,
                          $unsigned($unsigned(reg26))} ?
                      reg28 : reg20));
              reg30 = reg13;
              reg31 = $signed((-$signed(({wire0} ?
                  (reg12 ? reg26 : reg24) : (reg12 ? wire0 : reg26)))));
            end
        end
    end
  assign wire32 = {{({$signed(reg15), wire3} ? $unsigned((-wire9)) : wire6)},
                      reg19[(4'ha):(1'h0)]};
  always
    @(posedge clk) begin
      if ((^~wire7))
        begin
          for (forvar33 = (1'h0); (forvar33 < (1'h1)); forvar33 = (forvar33 + (1'h1)))
            begin
              reg34 = reg24;
            end
          if (reg17[(3'h6):(3'h5)])
            begin
              reg35 = ((($signed($unsigned((8'ha4))) < ($unsigned(wire3) ?
                  (~|wire6) : (reg21 ?
                      reg17 : reg26))) | $signed({$signed(wire9),
                  $signed(reg22)})) != wire7[(2'h2):(1'h0)]);
              reg36 <= ({{reg15, (~(-(8'haf)))},
                  reg15[(4'he):(3'h6)]} != $unsigned((reg35[(1'h0):(1'h0)] ?
                  (~|(reg28 < forvar33)) : ((reg34 || reg19) ?
                      {(8'h9e)} : $signed(wire9)))));
              reg37 <= $unsigned((($signed((reg17 >> wire2)) & $unsigned(wire7[(3'h4):(2'h3)])) ?
                  ((~|(reg20 ?
                      reg35 : (8'h9e))) <<< (~^(^wire1))) : (($unsigned(wire8) ?
                          (~&(8'hb2)) : (wire8 < wire2)) ?
                      $signed($unsigned(wire7)) : (~^$unsigned(wire0)))));
            end
          else
            begin
              reg35 = (reg35[(4'he):(4'ha)] ? reg22 : wire1[(4'hb):(1'h1)]);
              reg38 = wire7[(3'h7):(3'h4)];
              reg39 = wire7[(1'h1):(1'h0)];
              reg40 = (($unsigned(wire7[(3'h5):(3'h5)]) ?
                  {($unsigned((8'ha2)) ? $unsigned(wire9) : (reg28 >>> reg22)),
                      (&(reg22 ?
                          reg21 : (8'hac)))} : (^(~$unsigned(wire7)))) <= (-{$signed((reg24 <<< (8'haf)))}));
            end
          for (forvar41 = (1'h0); (forvar41 < (2'h2)); forvar41 = (forvar41 + (1'h1)))
            begin
              reg42 = {reg34[(1'h0):(1'h0)],
                  (wire3[(1'h0):(1'h0)] ?
                      wire1[(2'h3):(1'h0)] : (reg24 ?
                          reg40[(2'h2):(1'h0)] : ($signed(reg26) ?
                              {reg15} : $unsigned(wire0))))};
              reg43 = {$signed(reg15)};
            end
          reg44 <= reg28[(2'h3):(1'h0)];
          for (forvar45 = (1'h0); (forvar45 < (1'h1)); forvar45 = (forvar45 + (1'h1)))
            begin
              reg46 = (!{wire8});
              reg47 = {(~(|$signed((~^reg40))))};
              reg48 = ((8'ha2) ~^ ((reg28 >>> reg40) ?
                  ($signed(wire5) ?
                      (wire6 <<< reg40) : (reg38[(4'ha):(4'ha)] ?
                          {reg21} : $unsigned(reg24))) : $signed($unsigned(((8'h9e) ^~ reg40)))));
              reg49 = reg17;
              reg50 <= reg39[(3'h7):(1'h1)];
            end
        end
      else
        begin
          reg33 <= (!$signed({wire8[(4'he):(1'h0)], $unsigned((+wire8))}));
        end
      reg51 = $unsigned((~&wire0));
      for (forvar52 = (1'h0); (forvar52 < (1'h1)); forvar52 = (forvar52 + (1'h1)))
        begin
          reg53 <= (((((reg38 <<< (7'h42)) ?
                      $signed(reg42) : reg43[(1'h1):(1'h1)]) ?
                  $unsigned((^reg17)) : (reg28 ?
                      $signed(reg34) : $signed(reg34))) ?
              (reg26[(4'he):(4'hb)] + (forvar41[(1'h0):(1'h0)] > (reg38 - wire7))) : wire9) << reg26[(3'h7):(3'h6)]);
          for (forvar54 = (1'h0); (forvar54 < (2'h2)); forvar54 = (forvar54 + (1'h1)))
            begin
              reg55 <= $signed(($unsigned((~^(~wire8))) >>> (~&forvar33)));
              reg56 <= reg21;
              reg57 = (wire2 <= $unsigned($unsigned(reg33)));
              reg58 <= reg28;
              reg59 = ($unsigned({wire7[(4'hc):(2'h3)]}) ?
                  reg58 : $unsigned($unsigned((^~{reg51, wire8}))));
            end
          reg60 = (({($unsigned(wire2) ?
                      reg38[(3'h4):(2'h3)] : {forvar41, reg26}),
                  (8'hbe)} <<< (($unsigned(reg51) ?
                      $signed((8'ha7)) : (reg51 >>> reg44)) ?
                  ($unsigned(reg53) ~^ wire5) : {$unsigned(reg51),
                      $signed(wire9)})) ?
              (~^wire32[(1'h1):(1'h1)]) : (~^(~^{(~^wire0),
                  (reg28 ? reg58 : (8'hac))})));
          for (forvar61 = (1'h0); (forvar61 < (1'h0)); forvar61 = (forvar61 + (1'h1)))
            begin
              reg62 <= wire5;
              reg63 = (+wire8[(5'h11):(4'ha)]);
            end
        end
      if (((8'h9d) > $signed({((-reg22) ^~ reg28), reg58})))
        begin
          for (forvar64 = (1'h0); (forvar64 < (1'h1)); forvar64 = (forvar64 + (1'h1)))
            begin
              reg65 = reg53[(4'h9):(1'h0)];
            end
          if ((((8'ha8) - ({(wire3 ~^ wire6), $signed(reg49)} ?
                  $signed(reg20[(2'h2):(1'h0)]) : {(reg37 ?
                          wire9 : (8'hba))})) ?
              {$unsigned(forvar41)} : {$signed(reg62[(3'h4):(3'h4)])}))
            begin
              reg66 <= reg21;
            end
          else
            begin
              reg66 <= reg49;
            end
          reg67 = ((~|wire3[(3'h4):(1'h1)]) != ($unsigned(forvar33[(4'hb):(3'h4)]) && (((reg48 > reg51) ?
                  reg36 : reg39) ?
              wire5 : reg43)));
          for (forvar68 = (1'h0); (forvar68 < (1'h1)); forvar68 = (forvar68 + (1'h1)))
            begin
              reg69 <= $unsigned(reg35);
              reg70 = $unsigned($unsigned($signed($signed($unsigned(reg24)))));
            end
        end
      else
        begin
          for (forvar64 = (1'h0); (forvar64 < (1'h0)); forvar64 = (forvar64 + (1'h1)))
            begin
              reg66 <= (reg46[(3'h5):(3'h4)] ? (8'had) : reg44[(1'h1):(1'h1)]);
              reg68 <= forvar45;
            end
        end
      reg71 = ((((reg28[(2'h2):(1'h1)] ?
                  {reg67, wire32} : (-reg49)) == reg62[(3'h5):(2'h3)]) ?
              $signed(((|wire0) ?
                  (wire4 ?
                      forvar54 : reg67) : (reg62 ^ wire9))) : $signed(reg26)) ?
          {($signed((wire7 ? reg20 : wire5)) ?
                  (&$unsigned(forvar45)) : ((&(7'h42)) ?
                      (reg57 <= reg48) : (reg28 || wire32)))} : (^~reg63));
    end
  assign wire72 = wire3[(1'h1):(1'h1)];
  assign wire73 = (|(&reg24[(3'h6):(2'h3)]));
  module74 #() modinst126 (wire125, clk, reg19, reg56, wire2, reg21, reg28);
  assign wire127 = reg19[(4'h8):(2'h2)];
  assign wire128 = reg20[(2'h2):(1'h1)];
  assign wire129 = wire0[(2'h3):(2'h3)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module74
#(parameter param124 = (!(~&((&((8'ha2) & (8'hac))) ? ((!(7'h41)) == (8'hb1)) : (|((8'hb4) ? (7'h43) : (8'haf)))))))
(y, clk, wire75, wire76, wire77, wire78, wire79);
  output wire [(32'h11d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire75;
  input wire [(4'hf):(1'h0)] wire76;
  input wire [(4'he):(1'h0)] wire77;
  input wire [(5'h14):(1'h0)] wire78;
  input wire [(4'hd):(1'h0)] wire79;
  wire signed [(4'hc):(1'h0)] wire123;
  wire [(4'hd):(1'h0)] wire122;
  wire [(4'h8):(1'h0)] wire121;
  wire [(4'h9):(1'h0)] wire120;
  wire signed [(4'hf):(1'h0)] wire119;
  wire [(3'h7):(1'h0)] wire118;
  wire signed [(4'hb):(1'h0)] wire117;
  wire signed [(4'ha):(1'h0)] wire116;
  wire [(5'h10):(1'h0)] wire114;
  reg signed [(5'h10):(1'h0)] reg90 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg89 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg88 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg87 = (1'h0);
  reg [(5'h13):(1'h0)] reg86 = (1'h0);
  reg [(5'h13):(1'h0)] reg84 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg83 = (1'h0);
  reg [(4'hd):(1'h0)] reg85 = (1'h0);
  reg [(5'h10):(1'h0)] reg82 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar81 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar80 = (1'h0);
  assign y = {wire123,
                 wire122,
                 wire121,
                 wire120,
                 wire119,
                 wire118,
                 wire117,
                 wire116,
                 wire114,
                 reg90,
                 reg89,
                 reg88,
                 reg87,
                 reg86,
                 reg84,
                 reg83,
                 reg85,
                 reg82,
                 forvar81,
                 forvar80,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar80 = (1'h0); (forvar80 < (2'h2)); forvar80 = (forvar80 + (1'h1)))
        begin
          for (forvar81 = (1'h0); (forvar81 < (2'h3)); forvar81 = (forvar81 + (1'h1)))
            begin
              reg82 = ((|$signed((+{forvar80}))) ?
                  (!wire78[(5'h13):(4'he)]) : $unsigned((^$signed(wire77[(3'h4):(2'h3)]))));
              reg83 <= wire78[(1'h1):(1'h1)];
              reg84 <= (8'ha6);
            end
          reg85 = $signed(reg82);
          reg86 <= reg85[(4'h9):(1'h0)];
          reg87 <= reg84;
        end
      reg88 <= ({reg86} || reg82[(4'hf):(4'hc)]);
      reg89 <= (((+($signed((8'hb3)) ?
                  (wire78 ? wire75 : reg82) : (wire76 ? wire77 : forvar81))) ?
              ((-(forvar81 ?
                  reg83 : forvar81)) | (~^(forvar81 * reg87))) : (8'ha1)) ?
          reg83[(1'h1):(1'h1)] : (8'hac));
      reg90 <= reg84;
    end
  module91 #() modinst115 (.wire96(reg90), .wire92(reg86), .wire94(reg87), .y(wire114), .wire95(wire77), .wire93(reg83), .clk(clk));
  assign wire116 = reg86[(5'h11):(2'h2)];
  assign wire117 = $signed($unsigned((wire75 ?
                       wire116[(3'h5):(1'h1)] : $unsigned($signed(wire116)))));
  assign wire118 = (wire75 ^ $unsigned($signed((((8'ha7) < (8'hb8)) ?
                       (wire114 >> wire77) : reg89))));
  assign wire119 = reg87[(4'hd):(1'h0)];
  assign wire120 = ($signed($unsigned($unsigned((~&(8'hbf))))) ?
                       wire77[(4'ha):(2'h2)] : ((|(wire78[(4'hf):(3'h4)] ?
                               ((8'hb0) <<< wire79) : (!reg83))) ?
                           wire118[(1'h0):(1'h0)] : (^~{wire118})));
  assign wire121 = ((+((wire78[(4'he):(4'ha)] << $signed(reg88)) ?
                           $signed($unsigned(wire78)) : $unsigned({wire117,
                               wire75}))) ?
                       (wire116 >> wire116[(4'h9):(3'h7)]) : ($signed((wire120[(2'h2):(1'h0)] ?
                               $unsigned(reg88) : (wire78 ? reg88 : reg88))) ?
                           $signed($unsigned((|(8'hb2)))) : ((!wire78[(1'h0):(1'h0)]) <<< reg90[(3'h5):(1'h1)])));
  assign wire122 = $signed(wire78[(2'h3):(1'h1)]);
  assign wire123 = $unsigned($signed(reg84[(3'h4):(2'h2)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module91
#(parameter param113 = ((~{({(8'ha9), (7'h40)} || ((8'hbb) >= (8'hac))), ((^(8'had)) * ((8'ha0) ? (8'hbc) : (8'hbc)))}) ? (+(8'haf)) : ((^~(~((8'hb2) ? (8'h9c) : (7'h43)))) ? {(((8'hb9) < (8'ha0)) ^ ((8'hb4) || (8'hbc))), {{(8'ha0), (8'had)}}} : (!(((8'hab) < (8'haf)) ? {(8'ha1), (8'hb4)} : ((7'h43) ? (8'hb5) : (8'hb6)))))))
(y, clk, wire96, wire95, wire94, wire93, wire92);
  output wire [(32'h94):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire96;
  input wire signed [(4'he):(1'h0)] wire95;
  input wire [(4'he):(1'h0)] wire94;
  input wire signed [(5'h15):(1'h0)] wire93;
  input wire [(5'h10):(1'h0)] wire92;
  wire signed [(3'h6):(1'h0)] wire112;
  wire [(4'hb):(1'h0)] wire111;
  wire signed [(3'h7):(1'h0)] wire110;
  wire signed [(4'hb):(1'h0)] wire109;
  wire signed [(4'hc):(1'h0)] wire108;
  wire signed [(4'h9):(1'h0)] wire107;
  wire [(3'h6):(1'h0)] wire106;
  wire signed [(3'h4):(1'h0)] wire105;
  wire [(4'h9):(1'h0)] wire104;
  wire [(5'h10):(1'h0)] wire103;
  wire signed [(5'h15):(1'h0)] wire102;
  wire [(4'hb):(1'h0)] wire101;
  wire [(3'h6):(1'h0)] wire100;
  wire [(3'h4):(1'h0)] wire99;
  wire [(2'h2):(1'h0)] wire98;
  wire [(4'hc):(1'h0)] wire97;
  assign y = {wire112,
                 wire111,
                 wire110,
                 wire109,
                 wire108,
                 wire107,
                 wire106,
                 wire105,
                 wire104,
                 wire103,
                 wire102,
                 wire101,
                 wire100,
                 wire99,
                 wire98,
                 wire97,
                 (1'h0)};
  assign wire97 = wire92[(4'h8):(3'h4)];
  assign wire98 = $signed((~^wire97));
  assign wire99 = ((+(!$unsigned($signed((8'hb2))))) ~^ ((^($unsigned((8'hbf)) ?
                          wire93[(2'h3):(2'h2)] : $unsigned(wire93))) ?
                      {wire97[(4'hc):(2'h2)],
                          {wire97[(4'ha):(3'h7)],
                              wire98}} : wire98[(1'h0):(1'h0)]));
  assign wire100 = (((&wire98[(1'h1):(1'h1)]) >> wire97) - (($signed((+wire96)) && (|(wire96 ?
                       wire92 : wire96))) >= ($signed((wire92 >= wire98)) * (8'hb1))));
  assign wire101 = wire93;
  assign wire102 = ($unsigned($signed(((wire95 & wire99) ?
                       $signed(wire99) : (wire100 >= wire95)))) >= wire101[(4'ha):(1'h1)]);
  assign wire103 = {$unsigned((!wire94[(1'h1):(1'h1)])),
                       (($signed((+wire101)) ?
                               wire94 : $unsigned(wire92[(4'hf):(3'h6)])) ?
                           wire98 : $unsigned(wire96[(1'h1):(1'h1)]))};
  assign wire104 = $unsigned((^~wire92[(5'h10):(4'ha)]));
  assign wire105 = (-(~|((~^(&(8'hb2))) ?
                       ($unsigned(wire93) ?
                           $unsigned(wire101) : $signed(wire101)) : $unsigned(((8'had) ?
                           wire93 : wire95)))));
  assign wire106 = (wire95[(1'h1):(1'h0)] ~^ wire101);
  assign wire107 = $signed(((-wire102) == {(~|(+wire92))}));
  assign wire108 = wire96;
  assign wire109 = ($signed((+$signed($unsigned(wire92)))) ?
                       wire100 : ($signed($signed($unsigned((7'h44)))) ?
                           ((~|$signed((8'hbb))) >> wire93) : wire95));
  assign wire110 = $signed({wire104, wire94[(2'h2):(1'h0)]});
  assign wire111 = ($unsigned((-($signed(wire99) >= ((8'hb1) ?
                           wire100 : wire95)))) ?
                       (8'hb2) : $signed(({$unsigned(wire108),
                           $unsigned(wire100)} ~^ $signed(wire110[(1'h0):(1'h0)]))));
  assign wire112 = (8'hbb);
endmodule