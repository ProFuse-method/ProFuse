(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param93 = (~|(~(+(-(8'ha0))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'hb0):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire83;
  wire signed [(3'h5):(1'h0)] wire82;
  wire signed [(3'h7):(1'h0)] wire80;
  wire signed [(2'h2):(1'h0)] wire65;
  wire [(2'h2):(1'h0)] wire4;
  reg [(3'h4):(1'h0)] reg92 = (1'h0);
  reg [(3'h7):(1'h0)] reg91 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg90 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg89 = (1'h0);
  reg [(3'h7):(1'h0)] reg88 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg87 = (1'h0);
  reg [(4'hb):(1'h0)] reg86 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg85 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg84 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg79 = (1'h0);
  reg [(3'h5):(1'h0)] reg78 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg77 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg76 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg75 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg74 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg73 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg72 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg71 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg70 = (1'h0);
  reg [(3'h4):(1'h0)] reg69 = (1'h0);
  reg [(3'h5):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg67 = (1'h0);
  assign y = {wire83,
                 wire82,
                 wire80,
                 wire65,
                 wire4,
                 reg92,
                 reg91,
                 reg90,
                 reg89,
                 reg88,
                 reg87,
                 reg86,
                 reg85,
                 reg84,
                 reg79,
                 reg78,
                 reg77,
                 reg76,
                 reg75,
                 reg74,
                 reg73,
                 reg72,
                 reg71,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 (1'h0)};
  assign wire4 = ($signed((~|wire3[(1'h1):(1'h0)])) ?
                     ($unsigned($unsigned(wire3)) ?
                         $signed($signed((8'ha3))) : ((wire0 && wire2) * $unsigned(wire0))) : $signed($signed((wire3 ?
                         (8'ha6) : wire3))));
  module5 #() modinst66 (.wire7(wire1), .clk(clk), .y(wire65), .wire8(wire2), .wire6(wire3), .wire9(wire0));
  always
    @(posedge clk) begin
      reg67 <= $signed($unsigned(({wire1} & wire0)));
      if (reg67[(1'h0):(1'h0)])
        begin
          if (((reg67[(2'h3):(1'h1)] != $unsigned(wire1)) + ($signed((8'ha2)) ?
              ((|wire2) >>> $signed((8'h9c))) : {(reg67 ? wire2 : wire2)})))
            begin
              reg68 <= wire65[(1'h1):(1'h1)];
              reg69 <= ({((~|wire0) == wire3)} - $signed($signed(wire1)));
              reg70 <= (!(($unsigned(reg69) ?
                  $signed(wire1) : (wire2 ?
                      reg67 : wire3)) == (!wire2[(1'h1):(1'h0)])));
            end
          else
            begin
              reg68 <= ($unsigned($signed($unsigned(wire4))) ?
                  wire1[(3'h7):(1'h0)] : $unsigned($unsigned({wire3})));
              reg69 <= {reg69};
            end
          reg71 <= ($unsigned(reg69[(1'h0):(1'h0)]) ?
              $unsigned(wire3[(1'h1):(1'h0)]) : {((~&reg69) ?
                      wire1 : $signed(wire1))});
        end
      else
        begin
          reg68 <= $signed($signed(((wire3 ? wire3 : reg69) ?
              $signed(reg68) : $signed(wire1))));
          if (reg68)
            begin
              reg69 <= reg68;
              reg70 <= reg68[(1'h1):(1'h0)];
            end
          else
            begin
              reg69 <= ((-{reg68[(1'h1):(1'h1)]}) ?
                  (8'ha4) : ({(!wire3)} >> $signed((~(8'hab)))));
              reg70 <= (($signed($signed(reg71)) ?
                      ($signed(reg67) - $signed(reg67)) : wire1) ?
                  $unsigned(((~^(8'ha8)) ?
                      (reg68 ?
                          wire2 : reg67) : (reg70 == wire2))) : ($signed((reg69 > wire1)) ?
                      ($signed((8'ha6)) ?
                          (-wire0) : {wire0}) : (-(wire4 >>> reg71))));
            end
          reg71 <= ({(~&$signed((8'haa)))} || $unsigned(reg69));
        end
    end
  always
    @(posedge clk) begin
      if ($signed((wire0[(3'h4):(3'h4)] ^~ ({wire65} ?
          wire2[(2'h2):(1'h1)] : $unsigned(wire0)))))
        begin
          reg72 <= ((!$unsigned((reg68 && wire4))) * $unsigned(reg71));
          reg73 <= reg69;
          reg74 <= {(8'hac)};
        end
      else
        begin
          reg72 <= ($unsigned($signed(reg67)) ?
              (wire65[(2'h2):(1'h1)] ?
                  {{reg74}} : $signed((+wire3))) : $signed(reg74));
        end
      if ((reg74 >= $signed($unsigned((reg67 ~^ wire0)))))
        begin
          reg75 <= (reg74[(1'h1):(1'h1)] ?
              $signed($unsigned((reg67 ? wire4 : reg68))) : $signed({(reg70 ?
                      reg69 : reg73)}));
          reg76 <= (~|reg71);
          reg77 <= wire1;
        end
      else
        begin
          if ((|$signed(wire65[(1'h0):(1'h0)])))
            begin
              reg75 <= (^~reg74);
              reg76 <= reg77;
            end
          else
            begin
              reg75 <= $unsigned($unsigned(reg72[(2'h3):(1'h0)]));
              reg76 <= (reg76 ?
                  (((reg70 ? reg69 : reg69) ? (reg77 ? wire0 : wire4) : reg74) ?
                      $signed((wire2 <= reg71)) : ({wire3} ?
                          $unsigned(reg72) : reg72)) : wire4[(2'h2):(2'h2)]);
              reg77 <= wire3[(1'h0):(1'h0)];
            end
          reg78 <= (~|($signed({wire2}) ? reg69[(2'h2):(2'h2)] : {{reg69}}));
          reg79 <= (~{wire0});
        end
    end
  module33 #() modinst81 (wire80, clk, reg69, reg76, reg79, reg70);
  assign wire82 = $signed(wire4);
  assign wire83 = $unsigned($signed($unsigned($signed(reg76))));
  always
    @(posedge clk) begin
      if (wire2)
        begin
          reg84 <= (!(&reg71));
          reg85 <= $signed((^~(reg79[(1'h1):(1'h0)] ? (~|wire0) : {reg75})));
          if ($signed({reg77}))
            begin
              reg86 <= reg73[(3'h6):(2'h3)];
              reg87 <= {reg74};
              reg88 <= (reg79 ?
                  ($signed((~&(8'ha4))) ?
                      $unsigned({wire3}) : $unsigned((!reg71))) : reg76[(4'ha):(4'h9)]);
            end
          else
            begin
              reg86 <= ($unsigned(reg84[(1'h1):(1'h0)]) ?
                  $unsigned($unsigned((8'ha4))) : reg72);
            end
        end
      else
        begin
          reg84 <= $signed((8'h9f));
          if ((^~({$unsigned(wire3)} ?
              ((reg79 <<< reg84) ?
                  $signed(reg67) : (&reg68)) : (reg75[(4'ha):(2'h3)] ?
                  wire4[(2'h2):(2'h2)] : (reg76 || reg86)))))
            begin
              reg85 <= ({$signed($unsigned(reg70))} | ($unsigned(((8'h9f) ?
                      reg67 : reg86)) ?
                  $unsigned((~reg71)) : $unsigned($unsigned(reg86))));
              reg86 <= (reg69 ?
                  $signed((reg88[(3'h5):(1'h0)] ?
                      $signed(wire65) : wire65[(1'h1):(1'h0)])) : (((wire1 ?
                      wire0 : reg67) == (+reg70)) * (^$signed(reg68))));
              reg87 <= (!(&(~|(reg77 | wire2))));
            end
          else
            begin
              reg85 <= $signed(((8'had) || (~|{reg72})));
              reg86 <= (8'haf);
              reg87 <= ({$unsigned($unsigned((8'ha0)))} ^~ reg79[(1'h0):(1'h0)]);
            end
        end
      reg89 <= (reg71 ?
          $signed(reg87) : $unsigned($unsigned($unsigned(reg77))));
      if (wire3[(1'h1):(1'h1)])
        begin
          if ((&$unsigned($signed((reg67 ? (8'hb0) : (8'ha0))))))
            begin
              reg90 <= {((reg77[(3'h4):(2'h2)] * (wire2 ?
                      reg86 : wire83)) ~^ $signed((^~(8'ha8))))};
              reg91 <= (($unsigned((wire4 ? (8'haf) : wire2)) ?
                      wire0[(3'h5):(3'h4)] : $unsigned($signed(reg84))) ?
                  (reg69 ?
                      $signed($unsigned((8'h9e))) : ((~|reg67) ?
                          (wire2 ?
                              reg76 : reg75) : reg86[(3'h4):(1'h1)])) : reg90);
            end
          else
            begin
              reg90 <= (wire2 & (((8'hae) ^~ wire83) ? $signed(reg68) : wire4));
              reg91 <= (^wire4[(2'h2):(1'h0)]);
              reg92 <= (reg75[(1'h0):(1'h0)] ?
                  $signed(reg68) : wire83[(3'h5):(3'h4)]);
            end
        end
      else
        begin
          reg90 <= $unsigned({(~^wire80)});
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h3d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire7;
  input wire signed [(2'h2):(1'h0)] wire6;
  wire signed [(2'h3):(1'h0)] wire64;
  wire signed [(3'h4):(1'h0)] wire63;
  wire [(3'h4):(1'h0)] wire62;
  wire [(2'h2):(1'h0)] wire61;
  wire signed [(2'h2):(1'h0)] wire60;
  wire signed [(4'h9):(1'h0)] wire58;
  wire signed [(4'h9):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire12;
  wire [(3'h5):(1'h0)] wire11;
  wire signed [(4'hb):(1'h0)] wire10;
  assign y = {wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire58,
                 wire31,
                 wire12,
                 wire11,
                 wire10,
                 (1'h0)};
  assign wire10 = (~^wire9[(3'h4):(2'h3)]);
  assign wire11 = (~($signed(wire7[(1'h1):(1'h0)]) ?
                      $unsigned((wire6 - wire9)) : ($signed(wire9) == $unsigned(wire9))));
  assign wire12 = wire11[(2'h2):(2'h2)];
  module13 #() modinst32 (wire31, clk, wire12, wire9, wire11, wire8);
  module33 #() modinst59 (wire58, clk, wire31, wire9, wire10, wire7);
  assign wire60 = ((({wire11} > wire58[(4'h8):(1'h0)]) * {(+(8'h9e))}) ?
                      ({{wire12}} ?
                          {(+wire12)} : wire58[(2'h2):(2'h2)]) : wire6[(1'h1):(1'h0)]);
  assign wire61 = wire12;
  assign wire62 = wire31[(3'h6):(1'h0)];
  assign wire63 = wire6[(2'h2):(2'h2)];
  assign wire64 = $unsigned(((8'ha2) == ($unsigned((8'ha9)) && wire7[(3'h7):(1'h0)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module33  (y, clk, wire37, wire36, wire35, wire34);
  output wire [(32'h94):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire37;
  input wire signed [(4'ha):(1'h0)] wire36;
  input wire [(2'h2):(1'h0)] wire35;
  input wire signed [(4'h9):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire57;
  wire signed [(4'ha):(1'h0)] wire56;
  wire signed [(4'hb):(1'h0)] wire50;
  wire signed [(3'h7):(1'h0)] wire49;
  wire signed [(4'h8):(1'h0)] wire40;
  wire [(3'h5):(1'h0)] wire39;
  wire [(3'h6):(1'h0)] wire38;
  reg [(4'hb):(1'h0)] reg55 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg54 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg52 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg48 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg47 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg46 = (1'h0);
  reg [(2'h3):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg44 = (1'h0);
  reg [(3'h6):(1'h0)] reg43 = (1'h0);
  reg [(4'h9):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg41 = (1'h0);
  assign y = {wire57,
                 wire56,
                 wire50,
                 wire49,
                 wire40,
                 wire39,
                 wire38,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 (1'h0)};
  assign wire38 = {wire37};
  assign wire39 = $signed($signed($unsigned({wire36})));
  assign wire40 = {{($signed(wire34) >> (wire38 ~^ (8'hae)))}};
  always
    @(posedge clk) begin
      reg41 <= (~^(~&({wire40} < wire35)));
      if ({wire34[(3'h5):(1'h0)]})
        begin
          if (wire38)
            begin
              reg42 <= $signed(wire38);
            end
          else
            begin
              reg42 <= reg42;
              reg43 <= wire36[(1'h0):(1'h0)];
            end
          reg44 <= ((wire35[(1'h0):(1'h0)] >> wire34) ?
              $unsigned({(wire34 ?
                      reg42 : reg41)}) : {$signed(reg42[(2'h3):(1'h0)])});
          if (({((wire34 ? wire34 : wire37) && $signed(wire35))} ^ reg42))
            begin
              reg45 <= reg44[(1'h1):(1'h1)];
              reg46 <= wire35;
              reg47 <= wire37[(1'h0):(1'h0)];
            end
          else
            begin
              reg45 <= ((^~$signed(reg43[(2'h2):(1'h0)])) ?
                  (8'ha6) : $unsigned($signed({reg45})));
              reg46 <= wire37[(2'h2):(1'h0)];
            end
        end
      else
        begin
          reg42 <= wire35;
          if (wire35)
            begin
              reg43 <= wire38[(1'h0):(1'h0)];
              reg44 <= $signed(reg45);
              reg45 <= $unsigned($unsigned((~&$unsigned(wire37))));
            end
          else
            begin
              reg43 <= $unsigned($signed(($unsigned(reg47) >> ((8'h9f) ?
                  wire35 : (8'hb0)))));
              reg44 <= $signed({$unsigned(((8'hb0) ? reg47 : wire34))});
              reg45 <= reg47;
            end
          reg46 <= $signed($unsigned(reg47));
        end
      reg48 <= reg44;
    end
  assign wire49 = (8'ha0);
  assign wire50 = $signed(({$unsigned(reg45)} ?
                      ($signed(wire34) == {reg42}) : {(wire35 * (8'ha6))}));
  always
    @(posedge clk) begin
      if ({(&$signed(reg41[(1'h0):(1'h0)]))})
        begin
          if (wire34[(3'h4):(3'h4)])
            begin
              reg51 <= {wire34};
              reg52 <= $signed($signed($signed($unsigned(reg51))));
            end
          else
            begin
              reg51 <= reg44[(3'h4):(2'h2)];
              reg52 <= reg42[(1'h1):(1'h1)];
              reg53 <= $signed($signed((reg52[(1'h0):(1'h0)] > $signed(wire49))));
            end
        end
      else
        begin
          if ((~|$signed((~$signed(wire35)))))
            begin
              reg51 <= (((~reg53[(3'h7):(1'h1)]) * ({reg46} ?
                      (~&reg52) : {wire49})) ?
                  $unsigned(($unsigned(reg53) ?
                      (reg45 ?
                          wire38 : reg51) : (reg44 << reg51))) : $signed($unsigned((reg43 ~^ reg48))));
            end
          else
            begin
              reg51 <= wire49;
            end
          if (wire38)
            begin
              reg52 <= ((&(~^((8'haf) ? wire35 : wire38))) ?
                  wire38 : wire50[(4'h8):(3'h7)]);
              reg53 <= wire50;
              reg54 <= wire37[(3'h4):(2'h2)];
            end
          else
            begin
              reg52 <= $unsigned((&(~&(reg42 == reg48))));
              reg53 <= (^{$unsigned(reg42)});
              reg54 <= (~&reg48);
            end
        end
      reg55 <= (&(wire39[(3'h5):(3'h4)] ?
          $unsigned((8'h9e)) : ($unsigned(reg54) | (reg48 ^ wire38))));
    end
  assign wire56 = ($unsigned(((reg48 ^~ (8'ha4)) ?
                          reg48 : reg51[(1'h1):(1'h1)])) ?
                      (($unsigned(reg46) ?
                              $signed(wire35) : reg51[(2'h2):(1'h1)]) ?
                          $unsigned($unsigned(reg52)) : (~|(wire39 >> reg44))) : (^~$unsigned($unsigned(reg52))));
  assign wire57 = reg45[(2'h3):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param30 = {(8'haa)})
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h5f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire17;
  input wire signed [(3'h7):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire15;
  input wire [(4'h9):(1'h0)] wire14;
  wire [(2'h2):(1'h0)] wire29;
  wire signed [(4'h9):(1'h0)] wire27;
  wire [(4'hb):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire25;
  wire signed [(4'ha):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  wire signed [(4'hb):(1'h0)] wire21;
  wire [(2'h3):(1'h0)] wire20;
  wire [(4'hb):(1'h0)] wire19;
  wire signed [(4'ha):(1'h0)] wire18;
  reg signed [(3'h5):(1'h0)] reg28 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg22 = (1'h0);
  assign y = {wire29,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 reg28,
                 reg22,
                 (1'h0)};
  assign wire18 = (~&((+((8'h9c) ? wire15 : wire14)) << wire15[(1'h1):(1'h0)]));
  assign wire19 = $signed(wire15);
  assign wire20 = ($signed({(wire17 < wire15)}) >>> wire15);
  assign wire21 = $unsigned(($unsigned({wire17}) > $unsigned((wire14 >>> wire16))));
  always
    @(posedge clk) begin
      reg22 <= (|$unsigned(wire15[(3'h4):(3'h4)]));
    end
  assign wire23 = (~|wire16);
  assign wire24 = $signed($unsigned(wire15));
  assign wire25 = (8'hab);
  assign wire26 = $unsigned((^((wire23 ? wire15 : wire20) ^~ wire25)));
  assign wire27 = ((&$unsigned((wire21 ?
                      wire23 : wire19))) <<< (~|wire26[(2'h2):(1'h0)]));
  always
    @(posedge clk) begin
      reg28 <= {(wire27 << wire20[(2'h2):(2'h2)])};
    end
  assign wire29 = wire20;
endmodule