(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param19 = ({(((8'ha1) ? (8'ha0) : (8'ha1)) ? ((8'ha0) ? (8'ha9) : (8'hb0)) : {(8'h9f)})} == ((|{(8'hab)}) + {((8'hb0) > (8'h9e))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h66):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(2'h2):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire18;
  wire [(4'ha):(1'h0)] wire17;
  wire signed [(4'h8):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire15;
  reg [(2'h2):(1'h0)] reg14 = (1'h0);
  reg [(4'h9):(1'h0)] reg13 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg10 = (1'h0);
  reg [(4'h8):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg8 = (1'h0);
  reg [(3'h4):(1'h0)] reg7 = (1'h0);
  reg [(3'h7):(1'h0)] reg6 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg5 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg4 = (1'h0);
  assign y = {wire18,
                 wire17,
                 wire16,
                 wire15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire3[(3'h6):(3'h4)])
        begin
          if (({wire3[(1'h0):(1'h0)]} ? (|wire3[(2'h3):(1'h0)]) : wire1))
            begin
              reg4 <= $signed((&($signed((8'hae)) + (&wire2))));
              reg5 <= $unsigned($signed($signed((wire2 ? wire0 : reg4))));
              reg6 <= wire0[(1'h1):(1'h0)];
            end
          else
            begin
              reg4 <= {{($signed(reg6) ? $signed(wire2) : (8'ha6))}};
              reg5 <= wire0[(2'h2):(1'h1)];
              reg6 <= (8'ha3);
            end
        end
      else
        begin
          reg4 <= $signed($unsigned($unsigned({wire3})));
          if ($unsigned($unsigned(wire3[(3'h6):(1'h0)])))
            begin
              reg5 <= (&{(!$unsigned(reg4))});
              reg6 <= $unsigned($unsigned((reg5[(3'h4):(2'h2)] <= reg5)));
            end
          else
            begin
              reg5 <= reg6[(3'h5):(3'h5)];
              reg6 <= $signed((wire1[(3'h6):(2'h2)] ?
                  ((8'hae) <= (reg6 ^~ wire1)) : wire2));
              reg7 <= ((~^{{reg4}}) >= ({wire1[(3'h6):(1'h1)]} < ($unsigned(wire2) << wire2)));
            end
        end
      if ((($unsigned(reg7) > reg7[(2'h2):(1'h0)]) ?
          ({wire3} >>> $signed((8'had))) : (~^reg6[(3'h5):(1'h0)])))
        begin
          reg8 <= ($signed(wire3) ^~ (^~{(wire2 << reg4)}));
          reg9 <= (^wire1);
        end
      else
        begin
          reg8 <= (~(((!wire3) ^~ $unsigned(reg4)) ?
              wire0[(1'h1):(1'h0)] : ($unsigned((8'ha6)) >= (wire3 + wire3))));
          if ({$signed(((^reg5) >>> (+reg8)))})
            begin
              reg9 <= reg5[(3'h5):(3'h5)];
            end
          else
            begin
              reg9 <= {($unsigned((wire1 ? reg6 : reg5)) ^~ reg5)};
              reg10 <= (wire2 < {((reg8 != wire3) ?
                      (reg4 <<< wire1) : ((8'ha9) && (8'hb0)))});
            end
        end
      if ((!$signed(($unsigned(reg10) - {wire0}))))
        begin
          reg11 <= $signed((wire3 >= (&reg9[(3'h5):(2'h3)])));
          reg12 <= reg8[(1'h1):(1'h0)];
        end
      else
        begin
          if ((reg7[(2'h3):(2'h3)] ?
              (({wire2} >= (reg8 ? reg6 : reg6)) ?
                  ((wire3 <<< wire2) ?
                      (reg8 <<< reg10) : $signed(wire3)) : reg12[(1'h0):(1'h0)]) : $signed(wire3[(1'h1):(1'h0)])))
            begin
              reg11 <= reg4[(2'h2):(1'h1)];
            end
          else
            begin
              reg11 <= $unsigned(($signed($signed(reg9)) ?
                  reg8 : ({reg10} < ((8'ha9) ? reg7 : reg6))));
              reg12 <= $unsigned($signed({reg9}));
              reg13 <= reg8;
            end
        end
    end
  always
    @(posedge clk) begin
      reg14 <= ($signed(reg13[(3'h5):(1'h1)]) ?
          (($unsigned(reg9) ? ((8'ha5) ~^ reg8) : $signed(wire3)) ?
              reg6 : {wire3}) : $unsigned(wire1));
    end
  assign wire15 = reg12[(2'h2):(2'h2)];
  assign wire16 = {{(|(reg10 ~^ reg14))}};
  assign wire17 = (reg4 ? reg14[(2'h2):(1'h0)] : wire3);
  assign wire18 = $unsigned($signed($signed($unsigned(reg12))));
endmodule