(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire [(3'h5):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire15;
  wire signed [(3'h5):(1'h0)] wire14;
  wire [(4'h8):(1'h0)] wire13;
  wire signed [(3'h5):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire4;
  reg [(2'h3):(1'h0)] reg16 = (1'h0);
  reg [(4'h8):(1'h0)] reg12 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg11 = (1'h0);
  reg [(3'h5):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg8 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg7 = (1'h0);
  reg [(3'h6):(1'h0)] reg6 = (1'h0);
  assign y = {wire15,
                 wire14,
                 wire13,
                 wire5,
                 wire4,
                 reg16,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = $unsigned(wire3);
  assign wire5 = wire2;
  always
    @(posedge clk) begin
      reg6 <= $signed(($unsigned($signed(wire3)) ?
          wire0 : ($signed(wire4) && (~|wire0))));
      reg7 <= (8'hab);
      if ($signed(reg7[(4'h8):(1'h1)]))
        begin
          reg8 <= ((+($unsigned(reg6) ? (reg7 & wire2) : $unsigned(reg6))) ?
              $unsigned((wire3 | (8'haa))) : $unsigned(wire2));
          if ($signed(wire2[(3'h4):(2'h3)]))
            begin
              reg9 <= (^~((^$signed((8'haf))) ~^ ({wire5} | (wire0 ?
                  wire0 : wire3))));
              reg10 <= $unsigned($signed({((8'ha8) * reg7)}));
              reg11 <= reg7;
            end
          else
            begin
              reg9 <= (($unsigned((-wire0)) << {(reg11 ? reg8 : reg11)}) ?
                  (-$unsigned((wire3 ? wire1 : reg7))) : $signed(((!wire1) ?
                      (wire5 - wire3) : (reg11 ? reg8 : wire3))));
              reg10 <= {(-$signed(wire1[(4'h9):(3'h7)]))};
              reg11 <= ($signed((~|reg6)) << ((reg7[(1'h1):(1'h1)] ~^ reg6) ?
                  $unsigned($unsigned((8'hb0))) : ($signed(wire1) + (|reg8))));
            end
          reg12 <= $signed((~^{reg11}));
        end
      else
        begin
          reg8 <= (~reg7[(3'h6):(3'h4)]);
        end
    end
  assign wire13 = (8'haa);
  assign wire14 = $signed(wire2);
  assign wire15 = $signed(reg12[(2'h2):(1'h1)]);
  always
    @(posedge clk) begin
      reg16 <= $signed({wire3});
    end
endmodule