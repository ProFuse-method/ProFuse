(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param37 = {((!(|(8'ha9))) <<< ((~^(8'ha8)) ? {(8'h9e)} : ((8'haa) <<< (8'ha9))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h66):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire36;
  wire signed [(3'h4):(1'h0)] wire34;
  wire [(4'ha):(1'h0)] wire13;
  wire [(4'h9):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg14 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg11 = (1'h0);
  reg [(4'h9):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg9 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg7 = (1'h0);
  assign y = {wire36,
                 wire34,
                 wire13,
                 wire12,
                 wire6,
                 wire5,
                 wire4,
                 reg14,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 (1'h0)};
  assign wire4 = $unsigned((~wire1[(3'h4):(2'h2)]));
  assign wire5 = (({$unsigned(wire3)} + (wire4 ?
                     (wire4 + wire4) : (8'ha9))) | $signed(wire0));
  assign wire6 = $unsigned($signed($signed(wire2[(1'h0):(1'h0)])));
  always
    @(posedge clk) begin
      reg7 <= (~^$unsigned(((+wire4) ?
          (wire1 ? (8'h9c) : (8'haa)) : (+wire6))));
      if ((wire6 + (!wire6)))
        begin
          if (wire5)
            begin
              reg8 <= $signed(($unsigned((~|wire4)) | (reg7[(1'h1):(1'h1)] > $signed(wire6))));
            end
          else
            begin
              reg8 <= (($unsigned((&wire4)) ? wire0 : (8'ha5)) ?
                  ((^((8'haf) <= wire6)) ?
                      $unsigned($signed(reg8)) : (8'hab)) : $signed(wire4));
            end
          if ($unsigned({$signed((wire6 ? reg8 : wire1))}))
            begin
              reg9 <= (~&(reg7 ?
                  $unsigned((~|reg8)) : (+(wire3 ? wire6 : wire5))));
              reg10 <= $unsigned((-(~&$signed((8'h9e)))));
            end
          else
            begin
              reg9 <= $unsigned((((^wire0) ^~ wire1) == $signed(wire2[(2'h3):(1'h1)])));
            end
          reg11 <= ($signed(((reg9 ? reg8 : wire1) ?
              (reg10 != reg10) : reg7[(1'h1):(1'h1)])) << reg8[(4'ha):(1'h1)]);
        end
      else
        begin
          reg8 <= {wire0[(3'h5):(3'h4)]};
        end
    end
  assign wire12 = ((reg10[(1'h1):(1'h1)] < (^reg10)) ?
                      (((~|wire4) >= wire0) ^~ $signed((reg8 ?
                          wire1 : reg7))) : $signed(({wire5} ^ {reg10})));
  assign wire13 = ((wire2[(2'h3):(1'h0)] & $unsigned((^wire0))) >>> reg10[(1'h1):(1'h1)]);
  always
    @(posedge clk) begin
      reg14 <= ({wire3} ?
          $unsigned(($unsigned(reg9) ?
              (!reg9) : wire0)) : (wire2 ~^ $signed((!wire13))));
    end
  module15 #() modinst35 (.wire19(wire12), .y(wire34), .clk(clk), .wire18(wire2), .wire17(wire5), .wire16(wire1));
  assign wire36 = ((~|wire0) == (reg10 >= $signed($signed(wire6))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param33 = {((~|((8'hac) ? (8'ha7) : (8'hab))) ? (~^(!(8'ha0))) : (&(~^(8'h9e))))})
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h3c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire19;
  input wire [(2'h2):(1'h0)] wire18;
  input wire [(3'h7):(1'h0)] wire17;
  input wire signed [(3'h4):(1'h0)] wire16;
  wire [(2'h2):(1'h0)] wire32;
  wire [(3'h6):(1'h0)] wire28;
  wire signed [(4'h8):(1'h0)] wire27;
  wire [(3'h7):(1'h0)] wire24;
  wire [(2'h3):(1'h0)] wire23;
  wire [(2'h3):(1'h0)] wire22;
  wire [(3'h5):(1'h0)] wire21;
  wire signed [(4'h8):(1'h0)] wire20;
  reg [(2'h2):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg30 = (1'h0);
  reg [(3'h4):(1'h0)] reg29 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg26 = (1'h0);
  reg [(3'h4):(1'h0)] reg25 = (1'h0);
  assign y = {wire32,
                 wire28,
                 wire27,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 reg31,
                 reg30,
                 reg29,
                 reg26,
                 reg25,
                 (1'h0)};
  assign wire20 = {$unsigned($unsigned((~&wire19)))};
  assign wire21 = {{{wire17[(1'h0):(1'h0)]}}};
  assign wire22 = ({$unsigned($signed(wire18))} ?
                      (wire19[(2'h2):(1'h1)] - (wire19 ?
                          ((8'had) ?
                              wire20 : wire19) : (~wire19))) : ($unsigned((^wire20)) + {((8'ha7) | wire17)}));
  assign wire23 = wire22;
  assign wire24 = ($signed($signed($unsigned(wire23))) >= {((8'hae) ?
                          wire20 : (wire17 & wire16))});
  always
    @(posedge clk) begin
      reg25 <= $signed($signed(wire17));
      reg26 <= {{(|$signed(wire24))}};
    end
  assign wire27 = ((({wire22} ?
                      (^wire18) : (reg25 ^~ wire23)) && $signed(wire20[(2'h2):(1'h1)])) <<< wire22);
  assign wire28 = (($signed((wire20 ? wire17 : wire20)) ?
                      wire21[(3'h5):(2'h3)] : $unsigned(wire21[(3'h4):(1'h0)])) || wire24);
  always
    @(posedge clk) begin
      reg29 <= (wire16 && (wire28[(1'h1):(1'h1)] ?
          (&(wire20 ? wire19 : wire19)) : (~(wire21 + wire24))));
      reg30 <= $unsigned($signed((&(wire18 == reg26))));
      reg31 <= wire20;
    end
  assign wire32 = ($unsigned((wire17 ? $signed(wire21) : (+reg26))) ?
                      (^~$unsigned((reg30 ?
                          reg29 : wire20))) : $unsigned((^~wire16[(2'h2):(1'h0)])));
endmodule