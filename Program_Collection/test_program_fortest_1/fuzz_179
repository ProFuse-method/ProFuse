(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param75 = (((((8'ha9) ? (8'haa) : (8'ha9)) ? {(8'haa)} : {(8'ha6)}) ? {((8'h9e) ? (8'haa) : (8'h9c))} : (!((8'ha4) ? (8'hac) : (8'haa)))) ? (8'ha7) : (^(!(^~(8'h9d))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire74;
  wire signed [(4'h8):(1'h0)] wire73;
  wire signed [(3'h5):(1'h0)] wire72;
  wire [(3'h4):(1'h0)] wire71;
  wire [(3'h6):(1'h0)] wire70;
  wire [(4'h8):(1'h0)] wire69;
  wire [(4'hb):(1'h0)] wire68;
  wire signed [(4'h8):(1'h0)] wire67;
  wire signed [(2'h3):(1'h0)] wire66;
  wire signed [(2'h3):(1'h0)] wire65;
  wire signed [(2'h2):(1'h0)] wire63;
  wire signed [(4'hb):(1'h0)] wire5;
  reg [(3'h7):(1'h0)] reg4 = (1'h0);
  assign y = {wire74,
                 wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire63,
                 wire5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= ($signed({(wire0 < wire0)}) >> $unsigned(wire3));
    end
  assign wire5 = wire0[(3'h5):(1'h1)];
  module6 #() modinst64 (wire63, clk, wire2, wire1, wire3, wire0);
  assign wire65 = (^$signed(((&wire2) ? (8'ha8) : {reg4})));
  assign wire66 = ((((+wire65) >>> $signed(wire63)) & (wire3[(1'h0):(1'h0)] >= (wire65 ?
                      wire1 : wire2))) == reg4);
  assign wire67 = wire3;
  assign wire68 = wire67;
  assign wire69 = ((^wire3[(1'h0):(1'h0)]) ?
                      {$signed((wire66 ?
                              (8'ha3) : wire66))} : {wire0[(3'h7):(1'h1)]});
  assign wire70 = {reg4[(2'h2):(2'h2)]};
  assign wire71 = $unsigned(reg4[(2'h3):(1'h0)]);
  assign wire72 = wire2[(4'h9):(1'h1)];
  assign wire73 = $unsigned(wire5);
  assign wire74 = (~&$signed($unsigned(((8'ha9) ? wire5 : (8'ha5)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h7a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire10;
  input wire [(4'h9):(1'h0)] wire9;
  input wire signed [(4'h8):(1'h0)] wire8;
  input wire signed [(4'h9):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire62;
  wire signed [(4'hb):(1'h0)] wire61;
  wire signed [(3'h6):(1'h0)] wire57;
  wire signed [(2'h3):(1'h0)] wire56;
  wire [(4'ha):(1'h0)] wire55;
  wire signed [(3'h7):(1'h0)] wire53;
  wire signed [(4'hb):(1'h0)] wire51;
  wire [(4'h9):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire33;
  wire signed [(4'h8):(1'h0)] wire12;
  wire [(4'hb):(1'h0)] wire11;
  reg signed [(3'h7):(1'h0)] reg60 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg59 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg58 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg36 = (1'h0);
  assign y = {wire62,
                 wire61,
                 wire57,
                 wire56,
                 wire55,
                 wire53,
                 wire51,
                 wire35,
                 wire33,
                 wire12,
                 wire11,
                 reg60,
                 reg59,
                 reg58,
                 reg36,
                 (1'h0)};
  assign wire11 = ($signed((((8'h9f) ? wire10 : wire10) ?
                      (wire7 ~^ wire10) : wire10)) - ($unsigned($unsigned((8'hac))) ?
                      wire8 : $unsigned($signed(wire7))));
  assign wire12 = wire11[(3'h4):(2'h2)];
  module13 #() modinst34 (wire33, clk, wire12, wire7, wire10, wire9);
  assign wire35 = (wire7[(4'h9):(3'h4)] ~^ wire12);
  always
    @(posedge clk) begin
      reg36 <= $unsigned(wire33);
    end
  module37 #() modinst52 (wire51, clk, wire11, wire35, wire12, wire33);
  module13 #() modinst54 (.y(wire53), .wire14(wire35), .wire16(wire7), .clk(clk), .wire17(wire33), .wire15(wire8));
  assign wire55 = wire33[(3'h5):(1'h1)];
  assign wire56 = wire10[(4'h8):(1'h0)];
  assign wire57 = ((8'had) ?
                      ((^~((8'h9f) + wire51)) | $signed($signed((8'ha6)))) : (~^{wire56}));
  always
    @(posedge clk) begin
      reg58 <= ({$unsigned((wire33 ?
              wire11 : wire53))} < $unsigned(wire10[(4'hb):(4'hb)]));
      reg59 <= (8'hae);
      reg60 <= (reg58 ?
          (|($unsigned(reg59) ? {(8'hb0)} : reg58)) : reg36[(1'h1):(1'h1)]);
    end
  assign wire61 = wire7;
  assign wire62 = reg59[(2'h2):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module37  (y, clk, wire41, wire40, wire39, wire38);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire41;
  input wire [(3'h7):(1'h0)] wire40;
  input wire [(4'h8):(1'h0)] wire39;
  input wire [(3'h6):(1'h0)] wire38;
  wire [(4'h9):(1'h0)] wire50;
  wire signed [(3'h7):(1'h0)] wire49;
  wire [(4'h9):(1'h0)] wire48;
  wire [(3'h5):(1'h0)] wire47;
  wire signed [(3'h7):(1'h0)] wire46;
  wire [(2'h3):(1'h0)] wire44;
  wire [(4'h8):(1'h0)] wire43;
  wire [(4'h9):(1'h0)] wire42;
  reg [(4'hb):(1'h0)] reg45 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire44,
                 wire43,
                 wire42,
                 reg45,
                 (1'h0)};
  assign wire42 = ($signed(wire38[(3'h5):(1'h1)]) ?
                      wire41 : ($signed(wire39) ?
                          wire39[(3'h6):(3'h4)] : {{wire39}}));
  assign wire43 = $signed((~wire41[(3'h5):(2'h3)]));
  assign wire44 = $signed(wire43[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      reg45 <= ((wire39 ? wire44[(2'h2):(1'h1)] : wire41[(4'h8):(1'h0)]) ?
          {($signed(wire40) < wire42)} : (8'ha2));
    end
  assign wire46 = ((^~(!$unsigned(reg45))) ?
                      ($signed(wire38) != $signed(reg45[(3'h7):(1'h0)])) : wire43[(3'h4):(2'h2)]);
  assign wire47 = (~($unsigned($unsigned(wire43)) ?
                      $unsigned({wire41}) : (|$unsigned((8'h9e)))));
  assign wire48 = wire42;
  assign wire49 = reg45;
  assign wire50 = (((wire38[(3'h6):(1'h1)] ?
                          wire46 : (8'hb0)) || $unsigned(wire44[(2'h3):(2'h3)])) ?
                      $signed((+(wire49 & wire42))) : $signed($unsigned({reg45})));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param32 = (8'haf))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire17;
  input wire [(4'h8):(1'h0)] wire16;
  input wire [(4'h8):(1'h0)] wire15;
  input wire signed [(4'h9):(1'h0)] wire14;
  wire signed [(3'h4):(1'h0)] wire31;
  wire [(3'h4):(1'h0)] wire30;
  wire [(3'h6):(1'h0)] wire28;
  wire [(2'h3):(1'h0)] wire27;
  wire [(2'h2):(1'h0)] wire26;
  wire signed [(3'h5):(1'h0)] wire22;
  wire [(3'h4):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire20;
  wire signed [(3'h6):(1'h0)] wire19;
  wire signed [(2'h3):(1'h0)] wire18;
  reg [(4'h8):(1'h0)] reg29 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg25 = (1'h0);
  reg [(4'hb):(1'h0)] reg24 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg23 = (1'h0);
  assign y = {wire31,
                 wire30,
                 wire28,
                 wire27,
                 wire26,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 reg29,
                 reg25,
                 reg24,
                 reg23,
                 (1'h0)};
  assign wire18 = ((((~(8'h9c)) > (~wire17)) ^ wire16[(3'h6):(2'h3)]) ?
                      ($unsigned(wire15[(3'h4):(1'h1)]) <<< wire16) : (&((^wire15) ?
                          (|(8'ha3)) : {wire15})));
  assign wire19 = wire14[(3'h4):(3'h4)];
  assign wire20 = (((~^(wire18 ? (8'ha6) : wire16)) < ((&(8'hb0)) > wire17)) ?
                      $signed(wire18[(2'h2):(1'h0)]) : (8'hab));
  assign wire21 = $unsigned(wire18[(2'h3):(2'h2)]);
  assign wire22 = wire14[(4'h9):(4'h8)];
  always
    @(posedge clk) begin
      reg23 <= ($signed(wire15) ?
          wire14 : {((wire15 && wire20) ?
                  $signed(wire22) : (wire18 << wire17))});
      reg24 <= {(|(reg23[(2'h3):(2'h3)] ? (-wire17) : {wire20}))};
      reg25 <= ({wire16[(3'h6):(3'h4)]} && $signed({(wire18 ^~ wire21)}));
    end
  assign wire26 = {wire21};
  assign wire27 = wire17;
  assign wire28 = {$signed(((wire18 ? (8'ha2) : (8'ha5)) ?
                          (wire17 ? wire18 : wire18) : (~|wire15)))};
  always
    @(posedge clk) begin
      reg29 <= ((^{$signed(wire22)}) ?
          wire20 : $unsigned(wire22[(3'h4):(1'h0)]));
    end
  assign wire30 = wire18[(1'h0):(1'h0)];
  assign wire31 = wire18[(1'h1):(1'h1)];
endmodule