(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param14 = ({(((8'hae) && (8'haf)) << {(8'h9e)})} ? ((((8'ha2) > (8'h9c)) ? (^~(8'ha7)) : {(8'hb0)}) * (~^((8'h9f) ? (8'haa) : (8'ha7)))) : (~|(!(~|(8'ha3))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire10;
  wire signed [(2'h2):(1'h0)] wire9;
  wire [(3'h7):(1'h0)] wire8;
  wire [(3'h4):(1'h0)] wire7;
  wire signed [(3'h4):(1'h0)] wire6;
  wire [(2'h2):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  assign y = {wire13,
                 wire12,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg11,
                 (1'h0)};
  assign wire4 = $unsigned((wire3[(3'h6):(2'h3)] ?
                     wire2[(1'h0):(1'h0)] : wire2[(2'h3):(2'h3)]));
  assign wire5 = ((wire2 ? wire3 : $unsigned(wire1[(2'h3):(2'h2)])) ?
                     wire2 : wire0);
  assign wire6 = wire3;
  assign wire7 = $unsigned(($signed((wire1 + wire5)) >>> $unsigned((wire6 ?
                     wire2 : (8'h9c)))));
  assign wire8 = {{wire6}};
  assign wire9 = wire4;
  assign wire10 = (wire2[(1'h1):(1'h1)] ?
                      $unsigned({(~&wire0)}) : $unsigned((wire0 ?
                          {(8'ha1)} : (^wire3))));
  always
    @(posedge clk) begin
      reg11 <= wire6[(1'h0):(1'h0)];
    end
  assign wire12 = wire1;
  assign wire13 = (&{((8'ha8) >> wire7[(1'h0):(1'h0)])});
endmodule