(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h27):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire38;
  wire signed [(4'ha):(1'h0)] wire37;
  wire signed [(4'hb):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire34;
  assign y = {wire38, wire37, wire36, wire34, (1'h0)};
  module4 #() modinst35 (.clk(clk), .wire7(wire1), .wire6(wire2), .y(wire34), .wire8(wire3), .wire5(wire0));
  assign wire36 = (^~wire3);
  assign wire37 = (($unsigned(wire34[(3'h6):(3'h5)]) & (wire1[(1'h1):(1'h1)] ?
                      ((8'haf) || (8'ha1)) : $signed(wire34))) <= $signed(wire2));
  module4 #() modinst39 (.clk(clk), .wire7(wire36), .y(wire38), .wire6(wire2), .wire5(wire3), .wire8(wire1));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param33 = ((+(|(&(8'ha9)))) & (&(~|(!(8'had))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire7;
  input wire signed [(4'hb):(1'h0)] wire6;
  input wire signed [(3'h5):(1'h0)] wire5;
  wire signed [(2'h2):(1'h0)] wire31;
  wire [(3'h6):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire11;
  wire [(4'ha):(1'h0)] wire10;
  wire [(3'h7):(1'h0)] wire9;
  assign y = {wire31, wire12, wire11, wire10, wire9, (1'h0)};
  assign wire9 = (wire5[(1'h0):(1'h0)] ~^ ($unsigned((+wire8)) ~^ wire8));
  assign wire10 = wire5[(3'h5):(1'h1)];
  assign wire11 = wire7[(3'h7):(3'h4)];
  assign wire12 = {($unsigned($signed((8'ha9))) ?
                          (wire11 - $unsigned(wire11)) : $signed($unsigned(wire9)))};
  module13 #() modinst32 (wire31, clk, wire10, wire5, wire11, wire6);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h6b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire17;
  input wire signed [(3'h4):(1'h0)] wire16;
  input wire signed [(3'h5):(1'h0)] wire15;
  input wire [(4'hb):(1'h0)] wire14;
  wire [(4'ha):(1'h0)] wire30;
  wire [(4'ha):(1'h0)] wire29;
  wire [(4'hb):(1'h0)] wire28;
  wire signed [(3'h7):(1'h0)] wire19;
  wire [(4'h9):(1'h0)] wire18;
  reg signed [(2'h2):(1'h0)] reg27 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg25 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg24 = (1'h0);
  reg [(4'h9):(1'h0)] reg23 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg22 = (1'h0);
  reg [(3'h5):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg20 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire19,
                 wire18,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  assign wire18 = (-({$unsigned((8'h9e))} < $unsigned({wire15})));
  assign wire19 = $unsigned(wire14);
  always
    @(posedge clk) begin
      if (wire19)
        begin
          if ((((wire14[(3'h4):(1'h1)] ?
                  $unsigned(wire16) : ((8'had) || (8'ha6))) ~^ ((!(8'hb0)) & {wire19})) ?
              $signed($unsigned((&wire14))) : ({(wire17 + wire15)} >= (^~$unsigned(wire16)))))
            begin
              reg20 <= $signed(wire17);
            end
          else
            begin
              reg20 <= (^~$signed(wire16[(1'h1):(1'h0)]));
            end
          reg21 <= $unsigned(wire16[(1'h1):(1'h1)]);
          reg22 <= ((wire16 ?
              $signed((8'ha1)) : wire16[(2'h3):(2'h2)]) >= $unsigned((~|$unsigned(wire16))));
        end
      else
        begin
          reg20 <= reg21[(3'h5):(1'h1)];
          if ((reg21[(1'h0):(1'h0)] >> wire18[(4'h8):(3'h6)]))
            begin
              reg21 <= ((((wire15 ? wire17 : (8'h9f)) ?
                  $signed(wire19) : (8'had)) > (((8'hae) & reg21) ?
                  (reg22 >>> reg20) : (8'ha0))) ~^ {$signed(reg22)});
              reg22 <= ((({reg22} ? $signed(wire14) : wire18) != {(wire17 ?
                      (8'h9d) : wire15)}) ^~ {{(!reg21)}});
              reg23 <= (~^reg21);
            end
          else
            begin
              reg21 <= reg20;
            end
          reg24 <= (&(reg21[(1'h0):(1'h0)] > $unsigned((8'ha5))));
        end
      reg25 <= wire17;
      if ((wire16[(1'h0):(1'h0)] > (8'ha1)))
        begin
          reg26 <= {wire18[(3'h7):(1'h1)]};
        end
      else
        begin
          reg26 <= (reg21 ? reg22[(4'ha):(3'h6)] : (+$signed((+reg24))));
          reg27 <= {$unsigned(reg25)};
        end
    end
  assign wire28 = $signed($signed(reg27[(2'h2):(1'h0)]));
  assign wire29 = $unsigned(($signed({wire17}) ?
                      reg22[(3'h7):(3'h6)] : (~^(8'haa))));
  assign wire30 = reg26;
endmodule