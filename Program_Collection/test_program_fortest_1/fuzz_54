(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire63;
  wire [(3'h7):(1'h0)] wire62;
  wire [(3'h7):(1'h0)] wire61;
  wire signed [(4'hb):(1'h0)] wire60;
  wire signed [(4'hb):(1'h0)] wire59;
  wire signed [(4'h9):(1'h0)] wire58;
  wire signed [(4'hb):(1'h0)] wire56;
  wire signed [(4'hb):(1'h0)] wire55;
  wire signed [(4'h8):(1'h0)] wire54;
  wire [(4'hb):(1'h0)] wire52;
  assign y = {wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire56,
                 wire55,
                 wire54,
                 wire52,
                 (1'h0)};
  module4 #() modinst53 (wire52, clk, wire2, wire3, wire1, wire0);
  assign wire54 = (~^({wire1} != $signed((wire3 >>> wire1))));
  assign wire55 = (&$unsigned(($signed(wire54) > wire1)));
  module4 #() modinst57 (.wire6(wire1), .wire5(wire2), .wire8(wire3), .clk(clk), .y(wire56), .wire7(wire55));
  assign wire58 = (^~$signed((8'ha5)));
  assign wire59 = ((~&wire1) & wire52);
  assign wire60 = (wire59[(2'h3):(2'h3)] <<< {((&wire56) <= {wire0})});
  assign wire61 = {wire55};
  assign wire62 = $signed((!(wire58[(3'h4):(2'h3)] < $signed(wire61))));
  assign wire63 = $signed((+($unsigned(wire59) ?
                      ((8'h9c) ? wire54 : (8'hb0)) : (wire60 ?
                          (8'h9c) : wire59))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h76):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(4'hb):(1'h0)] wire7;
  input wire [(3'h7):(1'h0)] wire6;
  input wire signed [(4'hb):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire48;
  wire signed [(4'ha):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire35;
  wire [(4'ha):(1'h0)] wire34;
  wire [(4'h9):(1'h0)] wire31;
  wire [(4'hb):(1'h0)] wire15;
  wire signed [(3'h6):(1'h0)] wire50;
  reg [(3'h4):(1'h0)] reg33 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg14 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg13 = (1'h0);
  reg [(4'ha):(1'h0)] reg12 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg11 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg10 = (1'h0);
  reg [(4'h8):(1'h0)] reg9 = (1'h0);
  assign y = {wire48,
                 wire36,
                 wire35,
                 wire34,
                 wire31,
                 wire15,
                 wire50,
                 reg33,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg9 <= $unsigned($signed(({(8'ha4)} * wire7)));
      if (wire5)
        begin
          if (((+wire8[(1'h1):(1'h1)]) == $unsigned($unsigned(wire5))))
            begin
              reg10 <= wire7[(3'h7):(3'h5)];
            end
          else
            begin
              reg10 <= ((reg9[(2'h3):(1'h0)] ?
                      ($unsigned(wire8) ?
                          wire6[(2'h2):(2'h2)] : (wire5 ?
                              wire8 : wire5)) : $signed(wire6)) ?
                  $unsigned(wire7[(3'h7):(3'h7)]) : ($unsigned(wire7[(4'h8):(3'h4)]) < $unsigned((reg9 + reg10))));
              reg11 <= $signed(((wire5 <= ((8'hae) ?
                  wire7 : wire6)) <<< ((reg10 ?
                  wire8 : wire6) <<< wire8[(3'h5):(3'h5)])));
            end
          if ((8'hac))
            begin
              reg12 <= {reg10[(2'h3):(1'h1)]};
              reg13 <= (($unsigned({(8'ha0)}) ?
                      {(wire7 && wire6)} : wire8[(2'h2):(1'h0)]) ?
                  $unsigned($signed($signed(wire6))) : reg11);
            end
          else
            begin
              reg12 <= (~$unsigned(((reg13 ^~ wire5) >= $signed((8'ha2)))));
              reg13 <= $unsigned(reg12[(1'h0):(1'h0)]);
            end
        end
      else
        begin
          reg10 <= ((reg13[(2'h2):(2'h2)] | wire5) ?
              {$unsigned((|(8'h9c)))} : (8'h9f));
          reg11 <= (~&({$unsigned(reg10)} == ($signed(reg10) <<< (|reg10))));
        end
      reg14 <= wire7;
    end
  assign wire15 = (reg10 ~^ (((~&wire6) >= $unsigned(wire7)) < ($unsigned(reg12) & (reg12 ~^ reg12))));
  module16 #() modinst32 (wire31, clk, wire15, reg10, reg12, wire8);
  always
    @(posedge clk) begin
      reg33 <= $unsigned((&((8'h9f) != (~&wire6))));
    end
  assign wire34 = reg13[(1'h1):(1'h0)];
  assign wire35 = wire31;
  assign wire36 = (8'haa);
  module37 #() modinst49 (wire48, clk, reg11, wire8, wire6, wire5);
  module37 #() modinst51 (wire50, clk, wire34, reg11, wire6, wire31);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module37  (y, clk, wire41, wire40, wire39, wire38);
  output wire [(32'h29):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire41;
  input wire [(4'h9):(1'h0)] wire40;
  input wire signed [(3'h7):(1'h0)] wire39;
  input wire signed [(2'h3):(1'h0)] wire38;
  wire [(3'h4):(1'h0)] wire47;
  wire signed [(4'ha):(1'h0)] wire46;
  wire [(4'hb):(1'h0)] wire45;
  reg [(3'h5):(1'h0)] reg44 = (1'h0);
  reg [(4'h8):(1'h0)] reg43 = (1'h0);
  reg [(2'h2):(1'h0)] reg42 = (1'h0);
  assign y = {wire47, wire46, wire45, reg44, reg43, reg42, (1'h0)};
  always
    @(posedge clk) begin
      if (wire39)
        begin
          if ((!(!((wire40 >>> wire41) > {wire39}))))
            begin
              reg42 <= (8'h9c);
              reg43 <= wire40;
            end
          else
            begin
              reg42 <= reg42;
              reg43 <= ($signed($signed((+wire40))) ?
                  (($unsigned((8'hac)) != $signed(wire41)) ?
                      (~&{reg42}) : (&(wire41 & wire41))) : (wire41[(2'h2):(1'h1)] ?
                      $signed((reg42 - wire41)) : $unsigned(reg42)));
              reg44 <= $signed($unsigned((+reg42)));
            end
        end
      else
        begin
          reg42 <= {(~&($unsigned(reg42) != wire39[(2'h3):(2'h2)]))};
        end
    end
  assign wire45 = (wire39[(1'h1):(1'h0)] ^~ $unsigned((wire39 ?
                      reg43 : (wire41 < wire38))));
  assign wire46 = {{(~^(wire40 ~^ wire39))}};
  assign wire47 = $unsigned((|wire40));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16
#(parameter param30 = (((~(^~(8'h9d))) >= (((8'ha4) ? (8'ha2) : (8'had)) ^~ (~^(8'hae)))) != ((|((8'hab) ? (8'h9c) : (8'hae))) >> (8'haf))))
(y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h3d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire20;
  input wire signed [(4'ha):(1'h0)] wire19;
  input wire [(4'ha):(1'h0)] wire18;
  input wire [(4'ha):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire28;
  wire [(2'h3):(1'h0)] wire27;
  wire [(3'h7):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire25;
  wire [(4'h9):(1'h0)] wire22;
  wire signed [(4'hb):(1'h0)] wire21;
  reg signed [(2'h3):(1'h0)] reg24 = (1'h0);
  reg [(3'h5):(1'h0)] reg23 = (1'h0);
  assign y = {wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire22,
                 wire21,
                 reg24,
                 reg23,
                 (1'h0)};
  assign wire21 = $unsigned($signed(wire20));
  assign wire22 = {$unsigned(($signed(wire21) * $unsigned(wire18)))};
  always
    @(posedge clk) begin
      reg23 <= (wire20[(1'h0):(1'h0)] < $unsigned(((wire17 == wire17) ?
          $signed(wire21) : (wire20 ? wire20 : wire19))));
      reg24 <= ((($signed(wire19) ?
          $unsigned(wire21) : reg23[(1'h0):(1'h0)]) << wire18) >= $signed(wire17));
    end
  assign wire25 = (-wire18);
  assign wire26 = ({wire19} ?
                      {(+wire20[(1'h0):(1'h0)])} : (wire22[(3'h6):(3'h6)] ?
                          $unsigned($unsigned(wire19)) : ($unsigned(wire20) ?
                              (~wire21) : wire18[(3'h6):(3'h5)])));
  assign wire27 = (({{(8'hb0)}} ?
                      {(8'hb0)} : wire18[(1'h0):(1'h0)]) + wire18[(1'h1):(1'h0)]);
  assign wire28 = (&({((8'ha4) ? (8'ha1) : wire22)} ?
                      (!(wire26 ? wire25 : reg23)) : wire26));
  assign wire29 = ((!(&((8'haa) ? reg23 : (8'ha1)))) ?
                      (((wire25 == reg23) > reg24) ^ ((wire21 | wire19) << $unsigned(reg24))) : ($signed({wire18}) ?
                          (8'ha8) : (^~wire22)));
endmodule