(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h8c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire0;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire3;
  wire [(3'h6):(1'h0)] wire97;
  wire [(3'h7):(1'h0)] wire96;
  wire [(2'h3):(1'h0)] wire95;
  wire signed [(3'h5):(1'h0)] wire94;
  wire signed [(2'h2):(1'h0)] wire4;
  wire signed [(3'h4):(1'h0)] wire17;
  wire signed [(4'h9):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire19;
  wire [(3'h7):(1'h0)] wire43;
  wire signed [(3'h7):(1'h0)] wire92;
  reg signed [(3'h6):(1'h0)] reg5 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg6 = (1'h0);
  reg [(4'h8):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg9 = (1'h0);
  reg [(4'hb):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg11 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg12 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg14 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg16 = (1'h0);
  assign y = {wire97,
                 wire96,
                 wire95,
                 wire94,
                 wire4,
                 wire17,
                 wire18,
                 wire19,
                 wire43,
                 wire92,
                 reg5,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 reg11,
                 reg12,
                 reg13,
                 reg14,
                 reg15,
                 reg16,
                 (1'h0)};
  assign wire4 = $unsigned(((~(^~wire1)) < (((8'haa) ?
                     (8'ha5) : wire2) ^~ $unsigned(wire1))));
  always
    @(posedge clk) begin
      if ((wire0[(3'h4):(2'h3)] ? wire4 : {$unsigned($signed((8'hae)))}))
        begin
          reg5 <= wire4[(2'h2):(1'h0)];
        end
      else
        begin
          reg5 <= $unsigned((wire4[(2'h2):(2'h2)] ?
              wire3[(1'h0):(1'h0)] : (~^$unsigned(wire4))));
          if (((!$signed((~wire0))) ?
              (^$unsigned(reg5)) : $unsigned($unsigned((wire3 | wire4)))))
            begin
              reg6 <= (wire3[(3'h5):(3'h5)] ?
                  ($unsigned((wire0 ^ reg5)) ^~ {{(8'ha4)}}) : (($unsigned(wire0) ?
                      {wire2} : $unsigned(wire0)) != $signed(wire4[(1'h0):(1'h0)])));
              reg7 <= (reg5 << $signed(((reg6 ^ wire1) ?
                  $unsigned(reg6) : $signed(wire2))));
              reg8 <= $signed($signed($signed($unsigned((8'had)))));
            end
          else
            begin
              reg6 <= {reg7};
            end
          reg9 <= (~|reg7);
        end
      reg10 <= {($signed($signed(reg9)) || ((reg9 * reg7) >>> (~^wire3)))};
      reg11 <= (reg9 ? wire4 : reg7);
    end
  always
    @(posedge clk) begin
      reg12 <= reg5[(1'h1):(1'h1)];
      reg13 <= (8'hb0);
    end
  always
    @(posedge clk) begin
      if ((8'hae))
        begin
          reg14 <= reg10;
          reg15 <= (wire1 ?
              $unsigned(({wire2} > {reg8})) : (^~(-(reg8 ? reg10 : reg11))));
          reg16 <= ($unsigned($signed((wire0 || (8'haf)))) == $signed(reg7));
        end
      else
        begin
          reg14 <= $unsigned(reg7);
          reg15 <= (8'hac);
        end
    end
  assign wire17 = (reg10[(1'h0):(1'h0)] <= ((reg11 != $signed(reg6)) ?
                      (+(&reg5)) : reg8[(3'h7):(1'h1)]));
  assign wire18 = reg6[(3'h5):(3'h4)];
  assign wire19 = reg9;
  module20 #() modinst44 (wire43, clk, wire1, reg14, reg6, wire18);
  module45 #() modinst93 (wire92, clk, reg14, reg10, reg6, wire43);
  assign wire94 = wire0[(3'h6):(2'h2)];
  assign wire95 = {reg16};
  assign wire96 = $signed(wire3[(3'h5):(3'h4)]);
  assign wire97 = ({(&wire0[(3'h6):(3'h4)])} <= (($signed(reg16) ?
                      (wire95 * reg10) : reg9) == wire92[(3'h4):(2'h2)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module45  (y, clk, wire49, wire48, wire47, wire46);
  output wire [(32'h38):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire49;
  input wire signed [(4'hb):(1'h0)] wire48;
  input wire [(4'h9):(1'h0)] wire47;
  input wire [(3'h7):(1'h0)] wire46;
  wire signed [(2'h2):(1'h0)] wire91;
  wire signed [(3'h7):(1'h0)] wire90;
  wire [(3'h5):(1'h0)] wire88;
  wire [(3'h4):(1'h0)] wire73;
  wire [(3'h7):(1'h0)] wire53;
  wire signed [(4'hb):(1'h0)] wire52;
  wire signed [(4'hb):(1'h0)] wire51;
  wire [(4'h8):(1'h0)] wire50;
  assign y = {wire91,
                 wire90,
                 wire88,
                 wire73,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 (1'h0)};
  assign wire50 = $signed(wire46[(2'h3):(1'h0)]);
  assign wire51 = {(-$unsigned($signed(wire47)))};
  assign wire52 = (&wire50[(1'h1):(1'h0)]);
  assign wire53 = ($unsigned($signed((wire52 ?
                      wire51 : wire49))) == wire51[(1'h1):(1'h0)]);
  module54 #() modinst74 (wire73, clk, wire49, wire51, wire52, wire47);
  module75 #() modinst89 (wire88, clk, wire53, wire50, wire73, wire47);
  assign wire90 = ((|wire46) && wire47[(3'h4):(1'h1)]);
  assign wire91 = (&(wire46 ?
                      (&$signed((8'ha0))) : ({wire48} <= wire52[(2'h3):(1'h0)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param42 = {((((8'ha1) ? (8'ha1) : (8'ha9)) ? {(8'h9d)} : (^(8'hb0))) ? ({(8'had)} ? {(8'h9f)} : ((8'hab) ? (8'hae) : (8'ha7))) : (((8'ha1) + (8'ha5)) & (+(8'ha7))))})
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h7c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire24;
  input wire [(3'h6):(1'h0)] wire23;
  input wire signed [(4'h8):(1'h0)] wire22;
  input wire signed [(4'h9):(1'h0)] wire21;
  wire [(3'h7):(1'h0)] wire41;
  wire [(4'ha):(1'h0)] wire33;
  wire signed [(4'ha):(1'h0)] wire32;
  wire [(3'h4):(1'h0)] wire31;
  wire signed [(4'h9):(1'h0)] wire30;
  wire signed [(3'h5):(1'h0)] wire29;
  wire signed [(3'h7):(1'h0)] wire28;
  wire [(4'hb):(1'h0)] wire27;
  wire signed [(4'hb):(1'h0)] wire25;
  reg signed [(3'h7):(1'h0)] reg40 = (1'h0);
  reg [(2'h2):(1'h0)] reg39 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg38 = (1'h0);
  reg [(3'h6):(1'h0)] reg37 = (1'h0);
  reg [(3'h4):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg34 = (1'h0);
  reg [(4'ha):(1'h0)] reg26 = (1'h0);
  assign y = {wire41,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire25,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg26,
                 (1'h0)};
  assign wire25 = wire24[(3'h6):(2'h2)];
  always
    @(posedge clk) begin
      reg26 <= $signed(wire23);
    end
  assign wire27 = $signed($signed(((reg26 ? wire25 : (8'hab)) || (|wire23))));
  assign wire28 = wire24[(3'h6):(1'h1)];
  assign wire29 = (8'h9d);
  assign wire30 = $unsigned((((!wire28) != (wire28 <= wire24)) <<< $unsigned($signed(wire24))));
  assign wire31 = ($signed((-((8'ha1) >> (8'ha0)))) ?
                      {$signed((wire24 ? wire23 : wire29))} : wire23);
  assign wire32 = (!$unsigned($unsigned($signed(wire25))));
  assign wire33 = ($unsigned(wire28) ?
                      ($signed($unsigned(wire22)) ?
                          $signed((wire29 + wire23)) : wire22[(1'h0):(1'h0)]) : $unsigned(wire28));
  always
    @(posedge clk) begin
      reg34 <= wire27;
      if ($signed(wire21[(4'h9):(2'h2)]))
        begin
          reg35 <= ((($unsigned((8'hac)) ?
              (!wire28) : {reg26}) ~^ $unsigned(wire27)) <= ($unsigned((wire31 ?
              (8'ha3) : wire30)) | $signed($signed((8'h9e)))));
          if ($signed({{{wire29}}}))
            begin
              reg36 <= (!(-(~|wire24[(2'h3):(1'h1)])));
              reg37 <= (+(wire25[(1'h0):(1'h0)] >>> ((wire29 + wire25) ~^ wire28[(2'h3):(2'h2)])));
            end
          else
            begin
              reg36 <= wire29[(3'h5):(2'h3)];
            end
          reg38 <= (^~wire21);
        end
      else
        begin
          if (wire29)
            begin
              reg35 <= $signed(((8'h9f) | $unsigned(reg34[(2'h3):(2'h3)])));
            end
          else
            begin
              reg35 <= (($unsigned((~&reg36)) ? $signed(wire24) : (8'ha1)) ?
                  $signed((wire29 ?
                      (reg34 ?
                          reg37 : wire22) : $signed(wire27))) : (|(8'ha1)));
            end
          reg36 <= $unsigned((($unsigned(wire30) ?
                  (~|reg34) : wire33[(4'ha):(3'h4)]) ?
              $unsigned((~wire27)) : (wire29 << (wire23 ~^ wire31))));
          if (wire27)
            begin
              reg37 <= reg36;
              reg38 <= (($unsigned((wire23 >> reg26)) != $signed(wire22[(3'h4):(3'h4)])) != (wire31[(2'h2):(2'h2)] ?
                  $unsigned($unsigned((8'h9e))) : $signed(wire23[(1'h1):(1'h0)])));
              reg39 <= $unsigned($signed((^~$signed((8'ha0)))));
            end
          else
            begin
              reg37 <= reg34[(2'h2):(1'h0)];
            end
        end
      reg40 <= $unsigned({($signed((8'ha6)) ?
              $signed(reg34) : ((8'haa) ? (8'h9d) : wire28))});
    end
  assign wire41 = $signed($signed((8'had)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module75
#(parameter param87 = {((!{(8'hae)}) ? ((-(8'had)) ? ((8'hae) ? (8'ha1) : (8'ha2)) : ((8'h9e) ? (8'ha8) : (8'ha4))) : ({(8'h9f)} ? ((8'ha3) ? (8'h9f) : (8'ha5)) : ((8'h9e) ? (8'h9f) : (8'ha3))))})
(y, clk, wire79, wire78, wire77, wire76);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire79;
  input wire [(4'h8):(1'h0)] wire78;
  input wire [(2'h2):(1'h0)] wire77;
  input wire signed [(2'h3):(1'h0)] wire76;
  wire [(3'h5):(1'h0)] wire86;
  wire signed [(3'h6):(1'h0)] wire85;
  wire [(3'h7):(1'h0)] wire84;
  wire [(4'hb):(1'h0)] wire83;
  wire signed [(3'h4):(1'h0)] wire82;
  wire signed [(3'h4):(1'h0)] wire81;
  wire signed [(4'ha):(1'h0)] wire80;
  assign y = {wire86, wire85, wire84, wire83, wire82, wire81, wire80, (1'h0)};
  assign wire80 = $unsigned($signed((^~$signed(wire76))));
  assign wire81 = wire80;
  assign wire82 = ($signed($unsigned((wire78 ^ (8'hb0)))) ?
                      ((-$signed(wire80)) ?
                          $signed(wire77) : $unsigned((wire77 != (8'ha1)))) : (8'ha9));
  assign wire83 = (|$signed((((8'ha8) - wire78) ?
                      {wire82} : ((8'hab) ? (8'hae) : wire76))));
  assign wire84 = $unsigned(((~(~wire78)) ?
                      $signed(wire80[(3'h6):(1'h1)]) : $signed({wire83})));
  assign wire85 = $unsigned(wire81);
  assign wire86 = (|wire81);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module54  (y, clk, wire58, wire57, wire56, wire55);
  output wire [(32'h5d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire58;
  input wire signed [(4'hb):(1'h0)] wire57;
  input wire [(4'ha):(1'h0)] wire56;
  input wire [(4'h9):(1'h0)] wire55;
  wire signed [(4'hb):(1'h0)] wire72;
  wire signed [(3'h6):(1'h0)] wire71;
  wire [(2'h3):(1'h0)] wire70;
  wire signed [(3'h5):(1'h0)] wire69;
  wire signed [(3'h5):(1'h0)] wire68;
  wire signed [(3'h7):(1'h0)] wire67;
  wire signed [(4'ha):(1'h0)] wire66;
  wire [(4'ha):(1'h0)] wire65;
  wire [(2'h3):(1'h0)] wire60;
  wire signed [(4'ha):(1'h0)] wire59;
  reg signed [(3'h5):(1'h0)] reg64 = (1'h0);
  reg [(3'h4):(1'h0)] reg63 = (1'h0);
  reg [(3'h5):(1'h0)] reg62 = (1'h0);
  reg [(4'h8):(1'h0)] reg61 = (1'h0);
  assign y = {wire72,
                 wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire60,
                 wire59,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 (1'h0)};
  assign wire59 = wire57[(3'h6):(2'h3)];
  assign wire60 = $unsigned(((+(wire57 ? (8'hab) : wire55)) << (wire58 ?
                      {wire59} : wire56[(4'h8):(3'h4)])));
  always
    @(posedge clk) begin
      if ((+wire59))
        begin
          reg61 <= (-wire55);
        end
      else
        begin
          reg61 <= $signed(($signed({wire60}) ?
              (~^$unsigned((8'ha2))) : (~&$unsigned(wire59))));
          reg62 <= ((wire57 >> reg61[(3'h6):(2'h3)]) ^~ ($unsigned($signed((8'ha0))) <<< wire58));
          reg63 <= wire60;
        end
      reg64 <= $unsigned($unsigned((reg63 > (wire58 != wire57))));
    end
  assign wire65 = reg61[(3'h7):(3'h7)];
  assign wire66 = $unsigned($unsigned((((8'h9f) ? wire58 : reg62) ?
                      wire58 : $signed(wire57))));
  assign wire67 = $unsigned({wire57});
  assign wire68 = reg61[(3'h7):(3'h6)];
  assign wire69 = ($unsigned($unsigned(reg61[(1'h1):(1'h0)])) ?
                      $signed((|wire68[(1'h1):(1'h1)])) : reg62[(3'h4):(1'h0)]);
  assign wire70 = reg64;
  assign wire71 = $signed((({wire67} ?
                          (wire60 ? wire69 : (8'h9d)) : ((8'ha9) != wire65)) ?
                      $signed((wire60 ?
                          reg63 : wire67)) : wire55[(3'h6):(1'h1)]));
  assign wire72 = $unsigned((~^{wire58}));
endmodule