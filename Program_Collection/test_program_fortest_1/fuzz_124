(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param69 = {((&{(8'ha8)}) ? (((8'haf) || (8'ha0)) ? ((8'h9c) ? (8'h9d) : (8'ha9)) : {(8'ha7)}) : ((&(8'hab)) ? ((8'h9d) >> (8'h9e)) : ((8'ha5) && (8'haa))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h64):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire68;
  wire signed [(3'h7):(1'h0)] wire67;
  wire [(4'h8):(1'h0)] wire66;
  wire [(4'hb):(1'h0)] wire64;
  wire [(3'h4):(1'h0)] wire63;
  wire [(4'hb):(1'h0)] wire62;
  wire [(4'h8):(1'h0)] wire61;
  wire [(4'hb):(1'h0)] wire60;
  wire signed [(3'h5):(1'h0)] wire59;
  wire [(4'ha):(1'h0)] wire57;
  wire [(4'ha):(1'h0)] wire4;
  reg signed [(4'hb):(1'h0)] reg65 = (1'h0);
  assign y = {wire68,
                 wire67,
                 wire66,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire57,
                 wire4,
                 reg65,
                 (1'h0)};
  assign wire4 = $unsigned(wire0[(3'h6):(1'h0)]);
  module5 #() modinst58 (.wire9(wire0), .wire6(wire3), .y(wire57), .clk(clk), .wire8(wire2), .wire7(wire4));
  assign wire59 = wire3[(4'ha):(4'h8)];
  assign wire60 = ((((^wire57) <<< $signed(wire3)) ?
                      $signed((wire1 >> wire59)) : {{wire3}}) || (~^((^wire0) ^ ((8'hac) ?
                      wire3 : wire59))));
  assign wire61 = ($unsigned($unsigned(wire0)) - {wire57});
  assign wire62 = ($signed((&(^~wire4))) || (wire4 ? (8'ha8) : wire4));
  assign wire63 = ($unsigned((wire0 ?
                      ((8'ha8) >>> wire4) : (-wire1))) ^~ $unsigned($signed((~wire60))));
  assign wire64 = (&$unsigned($signed({wire57})));
  always
    @(posedge clk) begin
      reg65 <= $unsigned((^~wire64[(3'h4):(2'h2)]));
    end
  assign wire66 = {(~|(^(8'hb0)))};
  assign wire67 = (wire59[(2'h3):(1'h0)] != (wire0[(3'h7):(2'h3)] ?
                      wire60 : $unsigned((wire2 ? wire62 : reg65))));
  assign wire68 = ({(~^(wire60 + reg65))} ?
                      ($signed((8'ha9)) ?
                          (^wire2) : ($signed((8'ha7)) ?
                              wire59 : (wire63 * wire60))) : wire63[(1'h0):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param56 = (({(-(8'ha1))} < ({(8'haf)} != ((8'had) ? (8'hab) : (8'hac)))) ? ((((8'ha1) > (8'ha0)) > ((8'ha1) ? (8'ha8) : (8'ha3))) ? (!(^~(8'ha7))) : (^~((8'ha5) << (8'hab)))) : (((^(8'ha7)) * ((8'hac) || (8'haf))) ? ({(8'haa)} != (-(8'hb0))) : (((8'hb0) - (8'ha6)) << ((8'h9c) ~^ (8'ha2))))))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h1a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire9;
  input wire [(4'ha):(1'h0)] wire8;
  input wire signed [(4'ha):(1'h0)] wire7;
  input wire [(4'hb):(1'h0)] wire6;
  wire [(3'h6):(1'h0)] wire54;
  wire signed [(4'h8):(1'h0)] wire53;
  wire [(3'h7):(1'h0)] wire51;
  wire signed [(3'h4):(1'h0)] wire29;
  assign y = {wire54, wire53, wire51, wire29, (1'h0)};
  module10 #() modinst30 (wire29, clk, wire9, wire7, wire6, wire8);
  module31 #() modinst52 (wire51, clk, wire6, wire9, wire7, wire8);
  assign wire53 = $signed($signed($unsigned(wire51)));
  module10 #() modinst55 (.wire11(wire9), .clk(clk), .y(wire54), .wire14(wire29), .wire13(wire6), .wire12(wire51));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module31
#(parameter param50 = (((8'haa) ? (-(!(8'haf))) : (((8'ha5) & (8'ha7)) ^ {(8'h9f)})) ? ((((8'ha3) ? (8'ha7) : (8'h9c)) ? ((8'haa) || (8'h9c)) : ((8'had) ? (8'h9d) : (8'hae))) && (&((8'ha6) ? (8'ha1) : (8'ha4)))) : (|((~^(8'ha6)) - ((8'ha2) <= (8'hab))))))
(y, clk, wire35, wire34, wire33, wire32);
  output wire [(32'h66):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire35;
  input wire [(3'h6):(1'h0)] wire34;
  input wire signed [(4'ha):(1'h0)] wire33;
  input wire [(4'ha):(1'h0)] wire32;
  wire [(3'h5):(1'h0)] wire49;
  wire signed [(4'h9):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire47;
  wire [(3'h6):(1'h0)] wire46;
  wire signed [(4'h8):(1'h0)] wire45;
  wire signed [(4'hb):(1'h0)] wire44;
  wire [(3'h6):(1'h0)] wire42;
  wire [(2'h3):(1'h0)] wire41;
  wire [(3'h4):(1'h0)] wire37;
  wire [(3'h7):(1'h0)] wire36;
  reg signed [(4'ha):(1'h0)] reg43 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg40 = (1'h0);
  reg [(2'h2):(1'h0)] reg39 = (1'h0);
  reg [(4'ha):(1'h0)] reg38 = (1'h0);
  assign y = {wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire42,
                 wire41,
                 wire37,
                 wire36,
                 reg43,
                 reg40,
                 reg39,
                 reg38,
                 (1'h0)};
  assign wire36 = ($signed({wire34[(2'h3):(2'h2)]}) > (($signed(wire32) | $signed(wire32)) ^ $signed(wire34[(3'h4):(2'h2)])));
  assign wire37 = $signed(wire32[(4'ha):(1'h0)]);
  always
    @(posedge clk) begin
      reg38 <= $unsigned($unsigned(((wire34 * wire34) <<< $signed(wire32))));
      reg39 <= ($unsigned(wire37[(3'h4):(2'h3)]) ?
          (^~((wire35 ?
              wire32 : wire36) <<< $unsigned(wire36))) : $unsigned($signed(((8'ha0) ^~ wire35))));
      reg40 <= $unsigned($unsigned(wire36));
    end
  assign wire41 = ($signed($signed($signed((8'ha2)))) ?
                      reg39[(1'h1):(1'h0)] : (|({(8'ha4)} ?
                          (^~wire34) : (8'ha7))));
  assign wire42 = wire35[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg43 <= wire42;
    end
  assign wire44 = (~&{$signed(reg43)});
  assign wire45 = $signed({wire33});
  assign wire46 = (~^($signed(wire41) ? $signed(wire34) : (~|$signed(wire37))));
  assign wire47 = reg40;
  assign wire48 = $signed(wire46);
  assign wire49 = $unsigned((wire34 || (8'ha8)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h61):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire14;
  input wire [(4'h9):(1'h0)] wire13;
  input wire signed [(2'h3):(1'h0)] wire12;
  input wire [(3'h5):(1'h0)] wire11;
  wire signed [(4'ha):(1'h0)] wire28;
  wire [(2'h2):(1'h0)] wire27;
  wire signed [(4'h8):(1'h0)] wire26;
  wire [(4'ha):(1'h0)] wire25;
  wire signed [(4'ha):(1'h0)] wire24;
  wire [(3'h7):(1'h0)] wire21;
  wire signed [(4'h8):(1'h0)] wire20;
  wire [(4'h8):(1'h0)] wire16;
  wire [(4'h9):(1'h0)] wire15;
  reg signed [(2'h2):(1'h0)] reg23 = (1'h0);
  reg [(3'h6):(1'h0)] reg22 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg17 = (1'h0);
  assign y = {wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire21,
                 wire20,
                 wire16,
                 wire15,
                 reg23,
                 reg22,
                 reg19,
                 reg18,
                 reg17,
                 (1'h0)};
  assign wire15 = (((8'ha0) ?
                      wire13 : ((|(8'ha4)) * wire14[(2'h3):(2'h2)])) && ($signed(wire14) ^~ (~^(~wire14))));
  assign wire16 = ((8'hae) - $signed(({wire15} ~^ $signed(wire12))));
  always
    @(posedge clk) begin
      reg17 <= {(~&(!(+wire12)))};
      reg18 <= ((wire12[(2'h3):(2'h3)] ?
          (~&wire15) : wire13[(4'h9):(4'h9)]) * wire14[(1'h0):(1'h0)]);
      reg19 <= $signed(wire11[(2'h2):(1'h0)]);
    end
  assign wire20 = reg18;
  assign wire21 = (((wire11[(1'h1):(1'h1)] ?
                          (wire20 >>> wire14) : $unsigned((8'haf))) < $unsigned($signed(wire16))) ?
                      wire12[(2'h3):(2'h2)] : reg19[(4'h8):(2'h2)]);
  always
    @(posedge clk) begin
      reg22 <= (~^{((&reg18) ? $signed((8'hb0)) : (!wire14))});
      reg23 <= (reg18[(1'h0):(1'h0)] ?
          $signed(wire12) : (reg19 ?
              ((wire15 ? reg18 : (8'h9e)) ?
                  wire20 : ((8'h9e) | reg19)) : wire21[(2'h2):(1'h0)]));
    end
  assign wire24 = reg19;
  assign wire25 = $unsigned(wire14[(1'h1):(1'h0)]);
  assign wire26 = (8'hb0);
  assign wire27 = $unsigned(wire26[(3'h5):(3'h5)]);
  assign wire28 = $signed($unsigned((^~$unsigned((8'h9d)))));
endmodule