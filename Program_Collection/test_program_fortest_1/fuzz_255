(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param71 = (&({(8'had)} == (((8'ha0) || (8'h9e)) != ((8'ha0) >>> (8'ha0))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h83):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire62;
  wire signed [(3'h7):(1'h0)] wire61;
  wire signed [(4'hb):(1'h0)] wire57;
  wire signed [(4'hb):(1'h0)] wire56;
  wire signed [(2'h3):(1'h0)] wire55;
  wire signed [(3'h7):(1'h0)] wire54;
  wire signed [(4'h9):(1'h0)] wire53;
  wire [(3'h7):(1'h0)] wire52;
  wire [(4'hb):(1'h0)] wire51;
  wire [(4'h9):(1'h0)] wire49;
  wire signed [(3'h4):(1'h0)] wire47;
  reg [(2'h3):(1'h0)] reg70 = (1'h0);
  reg [(3'h6):(1'h0)] reg69 = (1'h0);
  reg [(4'h9):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg67 = (1'h0);
  reg [(2'h2):(1'h0)] reg66 = (1'h0);
  reg [(3'h7):(1'h0)] reg65 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg64 = (1'h0);
  reg [(2'h3):(1'h0)] reg63 = (1'h0);
  reg [(3'h6):(1'h0)] reg60 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg59 = (1'h0);
  assign y = {wire62,
                 wire61,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire49,
                 wire47,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 reg64,
                 reg63,
                 reg60,
                 reg59,
                 (1'h0)};
  module4 #() modinst48 (wire47, clk, wire0, wire1, wire3, wire2);
  module27 #() modinst50 (wire49, clk, wire47, wire2, wire1, wire0);
  assign wire51 = $unsigned($unsigned(wire1));
  assign wire52 = $unsigned($unsigned(($signed(wire1) <= wire49)));
  assign wire53 = {(+wire0)};
  assign wire54 = wire49[(3'h5):(2'h3)];
  assign wire55 = ({wire47[(2'h2):(2'h2)]} ?
                      $signed({{wire53}}) : $unsigned($signed((wire2 ?
                          wire51 : wire47))));
  assign wire56 = $signed($unsigned({{wire1}}));
  module4 #() modinst58 (.wire8(wire3), .wire6(wire0), .wire5(wire2), .y(wire57), .wire7(wire49), .clk(clk));
  always
    @(posedge clk) begin
      reg59 <= (~$signed(wire53));
      reg60 <= $unsigned(reg59[(1'h0):(1'h0)]);
    end
  assign wire61 = wire47;
  assign wire62 = ({wire57} >= $unsigned(wire53[(1'h0):(1'h0)]));
  always
    @(posedge clk) begin
      reg63 <= wire52;
      reg64 <= (^~$unsigned((8'h9c)));
      if (wire1[(1'h0):(1'h0)])
        begin
          if ($signed($signed(wire52)))
            begin
              reg65 <= reg60[(2'h3):(2'h2)];
            end
          else
            begin
              reg65 <= ({reg64} != $signed($signed(wire56)));
              reg66 <= reg60[(3'h4):(3'h4)];
            end
          if (((!$unsigned((~^wire3))) + {$unsigned($unsigned(reg64))}))
            begin
              reg67 <= ((wire2 ^~ (^~$signed(wire51))) <= {(wire52 * (wire0 ?
                      wire52 : wire53))});
            end
          else
            begin
              reg67 <= $signed($unsigned(wire53[(2'h3):(1'h0)]));
              reg68 <= ((~reg59[(2'h3):(2'h2)]) ?
                  (!(wire1 * (|reg64))) : ($signed($signed(reg67)) ?
                      wire62 : $unsigned((^~(8'ha8)))));
              reg69 <= wire0;
            end
          reg70 <= $signed((reg67 < {$unsigned(wire2)}));
        end
      else
        begin
          reg65 <= ((~^$signed({reg60})) == (~&$signed($unsigned(reg69))));
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param46 = {(~{((8'hab) ? (8'h9f) : (8'hab))})})
(y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire5;
  input wire signed [(3'h5):(1'h0)] wire6;
  input wire [(4'h8):(1'h0)] wire7;
  input wire [(3'h4):(1'h0)] wire8;
  wire signed [(2'h2):(1'h0)] wire44;
  wire [(3'h7):(1'h0)] wire26;
  wire signed [(2'h3):(1'h0)] wire25;
  wire signed [(4'h9):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire20;
  reg signed [(2'h3):(1'h0)] reg9 = (1'h0);
  assign y = {wire44,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire20,
                 reg9,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg9 <= (&wire5[(1'h0):(1'h0)]);
    end
  module10 #() modinst21 (.wire12(wire5), .clk(clk), .y(wire20), .wire13(wire6), .wire14(reg9), .wire11(wire7));
  assign wire22 = (~&(reg9 ? wire7 : $unsigned(reg9)));
  assign wire23 = wire6;
  assign wire24 = wire6[(2'h3):(2'h3)];
  assign wire25 = wire5[(3'h6):(3'h4)];
  assign wire26 = ($signed($unsigned(((8'h9f) < wire6))) | wire22);
  module27 #() modinst45 (.wire29(wire7), .wire31(wire8), .y(wire44), .wire28(wire25), .wire30(wire24), .clk(clk));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module27
#(parameter param43 = (-((((8'ha4) <= (8'ha1)) < (~|(8'had))) ? (((8'haa) ^ (8'ha4)) ? ((8'haf) < (8'ha3)) : (&(8'ha1))) : (8'ha7))))
(y, clk, wire31, wire30, wire29, wire28);
  output wire [(32'h43):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire31;
  input wire signed [(3'h7):(1'h0)] wire30;
  input wire [(3'h7):(1'h0)] wire29;
  input wire [(2'h3):(1'h0)] wire28;
  wire signed [(2'h2):(1'h0)] wire42;
  wire signed [(2'h3):(1'h0)] wire41;
  wire [(3'h4):(1'h0)] wire40;
  wire signed [(4'ha):(1'h0)] wire39;
  wire signed [(4'hb):(1'h0)] wire38;
  wire [(4'ha):(1'h0)] wire37;
  wire signed [(3'h7):(1'h0)] wire36;
  wire [(2'h3):(1'h0)] wire35;
  wire [(4'h9):(1'h0)] wire34;
  wire [(3'h4):(1'h0)] wire33;
  wire signed [(2'h3):(1'h0)] wire32;
  assign y = {wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 (1'h0)};
  assign wire32 = $signed(wire31[(2'h3):(1'h0)]);
  assign wire33 = $signed((wire31 * wire31[(1'h1):(1'h0)]));
  assign wire34 = $unsigned((8'hab));
  assign wire35 = (wire31[(1'h1):(1'h1)] ?
                      $signed(wire29[(3'h5):(3'h4)]) : wire30);
  assign wire36 = wire32[(1'h1):(1'h0)];
  assign wire37 = $signed($unsigned(((wire30 ? wire29 : wire28) ?
                      (wire30 + wire33) : $unsigned(wire28))));
  assign wire38 = wire37[(4'ha):(1'h0)];
  assign wire39 = wire34;
  assign wire40 = (8'haf);
  assign wire41 = $signed($signed($unsigned((8'hab))));
  assign wire42 = $unsigned(((+wire37) ?
                      $unsigned($unsigned(wire36)) : wire39));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire14;
  input wire signed [(3'h5):(1'h0)] wire13;
  input wire [(3'h4):(1'h0)] wire12;
  input wire [(4'h8):(1'h0)] wire11;
  wire [(4'h8):(1'h0)] wire19;
  wire [(2'h3):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire17;
  wire signed [(4'h9):(1'h0)] wire16;
  wire signed [(4'h8):(1'h0)] wire15;
  assign y = {wire19, wire18, wire17, wire16, wire15, (1'h0)};
  assign wire15 = wire11[(1'h1):(1'h1)];
  assign wire16 = $signed(wire14[(1'h0):(1'h0)]);
  assign wire17 = (((|(wire16 >>> (8'ha9))) > (~(wire16 ?
                      wire14 : wire14))) && wire14[(1'h1):(1'h0)]);
  assign wire18 = wire17;
  assign wire19 = (+($signed($unsigned((8'haa))) ?
                      (^$signed(wire12)) : wire13));
endmodule