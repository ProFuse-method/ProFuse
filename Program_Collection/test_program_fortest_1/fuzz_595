(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param26 = (((^~((8'hac) || (8'ha9))) ? ({(8'h9f)} && ((8'hab) >>> (8'hb0))) : ((~(8'hb0)) ? ((8'hac) ^~ (8'ha8)) : ((8'hab) * (8'ha3)))) >>> ({(8'haf)} && {(|(8'hb0))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire [(3'h5):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire23;
  wire [(4'h9):(1'h0)] wire22;
  wire signed [(2'h2):(1'h0)] wire21;
  wire signed [(3'h7):(1'h0)] wire20;
  wire signed [(4'ha):(1'h0)] wire19;
  wire signed [(4'h8):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire14;
  reg signed [(4'h9):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg24 = (1'h0);
  reg [(2'h2):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg16 = (1'h0);
  assign y = {wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire14,
                 reg25,
                 reg24,
                 reg17,
                 reg16,
                 (1'h0)};
  module4 #() modinst15 (.wire5(wire1), .wire8(wire0), .y(wire14), .wire7(wire3), .clk(clk), .wire6(wire2));
  always
    @(posedge clk) begin
      if ($signed((wire2 && ((wire1 >> (8'ha6)) ?
          wire1[(1'h0):(1'h0)] : $signed(wire2)))))
        begin
          reg16 <= $signed($unsigned({wire1[(2'h2):(2'h2)]}));
        end
      else
        begin
          reg16 <= wire2;
        end
      reg17 <= (((wire14[(3'h5):(2'h2)] ?
          $unsigned(wire3) : $signed((8'haf))) >> $unsigned($signed(wire1))) | reg16);
    end
  assign wire18 = wire2[(4'hb):(1'h0)];
  assign wire19 = $signed(({(~^wire2)} ?
                      (wire3[(1'h0):(1'h0)] > $unsigned(wire2)) : $unsigned($signed(wire14))));
  assign wire20 = $unsigned(wire3[(1'h0):(1'h0)]);
  assign wire21 = (wire14[(3'h7):(2'h2)] ?
                      ((wire18[(2'h2):(1'h0)] == (wire1 ?
                          wire19 : wire14)) * wire0[(3'h4):(1'h1)]) : ($unsigned($unsigned(wire2)) ^ (~|((8'ha9) ?
                          wire0 : reg16))));
  assign wire22 = ($signed(($unsigned(reg16) ?
                          reg17[(1'h0):(1'h0)] : (wire14 ? wire0 : wire18))) ?
                      wire3 : (((~wire20) & (wire19 ?
                          wire14 : wire20)) == (~^(wire3 * wire21))));
  assign wire23 = reg16;
  always
    @(posedge clk) begin
      reg24 <= (^({$signed(wire14)} ?
          {(wire21 + (8'ha3))} : $signed(reg17[(1'h1):(1'h1)])));
      reg25 <= (~$signed($unsigned((wire1 ? wire23 : wire21))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire8;
  input wire signed [(3'h7):(1'h0)] wire7;
  input wire signed [(4'h8):(1'h0)] wire6;
  input wire [(2'h2):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire13;
  wire signed [(3'h4):(1'h0)] wire12;
  wire [(4'ha):(1'h0)] wire11;
  reg signed [(4'ha):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg9 = (1'h0);
  assign y = {wire13, wire12, wire11, reg10, reg9, (1'h0)};
  always
    @(posedge clk) begin
      reg9 <= wire8[(1'h1):(1'h0)];
      reg10 <= $signed($signed((~$signed(reg9))));
    end
  assign wire11 = (((~&wire6[(2'h3):(1'h0)]) == (reg10[(1'h0):(1'h0)] <= $signed(wire5))) + $unsigned($signed($signed((8'hab)))));
  assign wire12 = ((|{(&wire11)}) ?
                      {($signed((8'ha5)) ? (~|wire5) : (^~wire8))} : (wire7 ?
                          $unsigned((^~wire6)) : $unsigned(((8'h9c) ^~ reg9))));
  assign wire13 = $unsigned(wire11);
endmodule