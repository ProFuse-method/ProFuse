(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(2'h2):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire53;
  wire [(3'h6):(1'h0)] wire52;
  wire signed [(2'h3):(1'h0)] wire51;
  wire signed [(4'h9):(1'h0)] wire50;
  wire [(3'h6):(1'h0)] wire49;
  wire signed [(3'h7):(1'h0)] wire47;
  wire [(2'h2):(1'h0)] wire45;
  wire signed [(4'ha):(1'h0)] wire4;
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  assign y = {wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire47,
                 wire45,
                 wire4,
                 reg48,
                 (1'h0)};
  assign wire4 = ((wire3[(1'h0):(1'h0)] ?
                         ((wire2 <<< wire1) && (^wire1)) : $signed((wire3 >> wire0))) ?
                     wire0[(1'h1):(1'h0)] : $signed(wire2));
  module5 #() modinst46 (.y(wire45), .wire9(wire1), .wire6(wire4), .clk(clk), .wire8(wire2), .wire7(wire3));
  assign wire47 = $unsigned((wire1 == (8'ha4)));
  always
    @(posedge clk) begin
      reg48 <= {(wire45[(1'h1):(1'h1)] ?
              $signed(wire2[(3'h5):(3'h4)]) : wire3[(2'h2):(1'h1)])};
    end
  assign wire49 = {wire4};
  assign wire50 = wire2[(2'h3):(1'h1)];
  assign wire51 = {((-reg48) != wire2)};
  assign wire52 = ($signed($unsigned((wire4 >> wire45))) ^ ($signed($unsigned(wire47)) ?
                      reg48 : {(wire50 >>> wire3)}));
  assign wire53 = $unsigned(wire2[(3'h7):(2'h2)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param44 = (~&(8'h9e)))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire9;
  input wire signed [(4'h8):(1'h0)] wire8;
  input wire [(3'h4):(1'h0)] wire7;
  input wire [(2'h2):(1'h0)] wire6;
  wire signed [(2'h3):(1'h0)] wire42;
  wire signed [(3'h5):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire12;
  wire [(4'hb):(1'h0)] wire11;
  wire [(4'ha):(1'h0)] wire10;
  assign y = {wire42, wire13, wire12, wire11, wire10, (1'h0)};
  assign wire10 = wire8[(2'h2):(2'h2)];
  assign wire11 = wire8[(1'h0):(1'h0)];
  assign wire12 = (wire6[(2'h2):(1'h0)] ^~ {($signed(wire9) - (wire7 ?
                          (8'h9d) : wire9))});
  assign wire13 = {wire7[(2'h2):(2'h2)]};
  module14 #() modinst43 (.y(wire42), .wire15(wire12), .wire17(wire9), .clk(clk), .wire18(wire8), .wire16(wire10));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param41 = ((~((~^(8'ha5)) == (^~(8'haf)))) | (((8'had) ? ((8'ha6) <<< (8'h9f)) : (~^(8'ha8))) ? ((~^(8'ha3)) - ((8'ha6) ^ (8'ha2))) : {(&(8'ha8))})))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h83):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire18;
  input wire [(3'h7):(1'h0)] wire17;
  input wire signed [(3'h6):(1'h0)] wire16;
  input wire [(4'ha):(1'h0)] wire15;
  wire [(3'h4):(1'h0)] wire37;
  wire signed [(4'hb):(1'h0)] wire34;
  wire [(4'h9):(1'h0)] wire26;
  wire signed [(3'h6):(1'h0)] wire25;
  wire [(4'ha):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire23;
  wire signed [(3'h7):(1'h0)] wire22;
  wire signed [(3'h4):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  wire [(2'h2):(1'h0)] wire19;
  reg [(2'h2):(1'h0)] reg40 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg39 = (1'h0);
  reg [(3'h6):(1'h0)] reg38 = (1'h0);
  reg [(3'h4):(1'h0)] reg36 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg33 = (1'h0);
  reg [(3'h5):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg31 = (1'h0);
  reg [(2'h2):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg29 = (1'h0);
  reg [(4'h9):(1'h0)] reg28 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg27 = (1'h0);
  assign y = {wire37,
                 wire34,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 reg40,
                 reg39,
                 reg38,
                 reg36,
                 reg35,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 (1'h0)};
  assign wire19 = {($unsigned($unsigned(wire17)) ?
                          wire17[(2'h3):(1'h0)] : {wire18[(3'h6):(3'h6)]})};
  assign wire20 = {(((8'ha6) ?
                              wire15[(3'h6):(3'h4)] : ((8'haa) ?
                                  wire16 : wire19)) ?
                          (wire16[(1'h1):(1'h0)] ?
                              wire16 : wire17[(2'h3):(2'h2)]) : (-$unsigned((8'hb0))))};
  assign wire21 = $unsigned(($signed(wire19) <= $signed($unsigned(wire20))));
  assign wire22 = (+(wire15 <= wire18));
  assign wire23 = wire17[(2'h2):(1'h0)];
  assign wire24 = $unsigned($signed(((wire17 + wire23) ?
                      wire20[(1'h0):(1'h0)] : wire22)));
  assign wire25 = {(wire23[(4'h9):(2'h3)] ?
                          wire15 : ($signed((8'h9e)) == (wire21 >= wire19)))};
  assign wire26 = $unsigned(wire21);
  always
    @(posedge clk) begin
      if ((8'had))
        begin
          reg27 <= $unsigned(wire23[(3'h7):(2'h2)]);
          reg28 <= wire18[(3'h6):(1'h0)];
          reg29 <= ($signed((~$unsigned(wire25))) ?
              wire17 : {wire24[(2'h2):(1'h1)]});
        end
      else
        begin
          reg27 <= ($signed((!(8'ha9))) ? reg28[(3'h6):(3'h6)] : wire19);
        end
      if ((($unsigned(wire25[(2'h2):(2'h2)]) != (wire22 ?
              $signed(wire15) : (reg27 ? wire25 : (8'hab)))) ?
          {(wire26 ? wire25 : (wire24 ? wire23 : wire16))} : ((^reg29) ?
              ({wire17} ?
                  wire23 : (wire19 ? reg28 : wire15)) : wire20[(3'h5):(2'h3)])))
        begin
          reg30 <= (((~^$unsigned(reg27)) & ((wire22 - wire19) >>> ((8'hab) - wire25))) - (~^$signed($unsigned(wire18))));
          reg31 <= reg29;
          reg32 <= ((wire24[(1'h0):(1'h0)] ?
              $signed((^wire15)) : (wire22[(3'h6):(1'h0)] & $unsigned(wire20))) || (8'had));
        end
      else
        begin
          reg30 <= (~|$unsigned((~|$unsigned(wire25))));
        end
      reg33 <= $unsigned($unsigned($unsigned($unsigned(wire19))));
    end
  assign wire34 = reg28;
  always
    @(posedge clk) begin
      reg35 <= $unsigned($signed($signed((~|wire18))));
      reg36 <= $unsigned((^~({reg31} ? (wire21 & wire19) : $unsigned(wire22))));
    end
  assign wire37 = {$unsigned(reg36[(3'h4):(2'h3)])};
  always
    @(posedge clk) begin
      if (({wire20} ? wire25[(2'h2):(1'h0)] : wire23))
        begin
          reg38 <= ($unsigned($unsigned(wire22[(2'h2):(1'h1)])) ^ (|$signed(wire17[(3'h6):(2'h2)])));
        end
      else
        begin
          reg38 <= {($unsigned($unsigned(wire25)) - wire17[(1'h0):(1'h0)])};
          reg39 <= $signed($signed(((wire19 || reg27) ?
              (~^reg30) : wire16[(2'h3):(2'h2)])));
          reg40 <= (((~&$signed((8'hb0))) ?
              $signed(reg38[(1'h1):(1'h1)]) : $signed(wire19)) || $signed(reg36));
        end
    end
endmodule