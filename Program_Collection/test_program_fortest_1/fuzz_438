(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire1;
  input wire [(2'h2):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire8;
  wire signed [(3'h6):(1'h0)] wire7;
  wire signed [(3'h6):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire4;
  reg signed [(3'h4):(1'h0)] reg6 = (1'h0);
  assign y = {wire8, wire7, wire5, wire4, reg6, (1'h0)};
  assign wire4 = $unsigned((((-wire0) ?
                     (8'ha4) : {(8'ha6)}) + (wire2 >= (wire1 ?
                     wire1 : wire3))));
  assign wire5 = $unsigned((wire3[(2'h2):(1'h1)] ?
                     ((wire1 * (8'ha5)) ?
                         wire0[(1'h0):(1'h0)] : $unsigned((8'ha5))) : {wire3[(1'h0):(1'h0)]}));
  always
    @(posedge clk) begin
      reg6 <= ($signed((8'ha1)) * $unsigned((wire1[(2'h3):(1'h0)] ^ (!wire3))));
    end
  assign wire7 = wire3;
  assign wire8 = wire4[(1'h1):(1'h1)];
endmodule