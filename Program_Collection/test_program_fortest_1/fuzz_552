(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h81):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire23;
  wire signed [(3'h7):(1'h0)] wire11;
  wire [(4'ha):(1'h0)] wire7;
  wire [(3'h6):(1'h0)] wire4;
  reg [(4'hb):(1'h0)] reg22 = (1'h0);
  reg [(2'h2):(1'h0)] reg21 = (1'h0);
  reg [(2'h2):(1'h0)] reg20 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg16 = (1'h0);
  reg [(4'h9):(1'h0)] reg15 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg14 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg13 = (1'h0);
  reg [(3'h5):(1'h0)] reg12 = (1'h0);
  reg [(3'h4):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg9 = (1'h0);
  reg [(3'h5):(1'h0)] reg8 = (1'h0);
  reg [(3'h6):(1'h0)] reg6 = (1'h0);
  reg [(3'h4):(1'h0)] reg5 = (1'h0);
  assign y = {wire23,
                 wire11,
                 wire7,
                 wire4,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg10,
                 reg9,
                 reg8,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = (^~$unsigned((wire2[(4'h8):(3'h6)] || (wire2 ?
                     (8'ha8) : wire2))));
  always
    @(posedge clk) begin
      reg5 <= $signed(wire0);
      reg6 <= ((((reg5 ? (8'hac) : wire4) ?
                  (wire3 ? wire2 : wire0) : wire2[(3'h5):(1'h0)]) ?
              ($signed((8'haa)) <<< $unsigned(wire3)) : ((~^wire4) | {wire4})) ?
          {wire3[(3'h6):(1'h1)]} : wire1[(1'h1):(1'h0)]);
    end
  assign wire7 = {wire0};
  always
    @(posedge clk) begin
      if ($unsigned(({wire3[(3'h6):(1'h0)]} ?
          (wire3[(1'h1):(1'h1)] < $signed(wire2)) : (~{reg6}))))
        begin
          reg8 <= (($unsigned(reg5) ?
              (^~wire7) : (|(wire7 <= wire1))) >> (({wire0} ?
                  $unsigned(reg6) : $unsigned(reg5)) ?
              (^wire3[(3'h4):(2'h2)]) : (8'ha4)));
        end
      else
        begin
          reg8 <= ($signed(($unsigned(wire2) ?
              ((8'haa) > wire2) : wire4)) > (~wire0[(3'h6):(1'h0)]));
          reg9 <= wire4;
          reg10 <= wire7;
        end
    end
  assign wire11 = (reg5 ? wire3 : reg6);
  always
    @(posedge clk) begin
      if ((($signed((~|(8'h9d))) ?
          wire0 : $signed({(8'ha3)})) << ($signed((reg5 ? wire3 : wire1)) ?
          ((wire1 >= reg10) ? {(8'h9c)} : wire1[(2'h2):(2'h2)]) : reg10)))
        begin
          reg12 <= wire7[(4'h9):(2'h2)];
        end
      else
        begin
          reg12 <= $signed($signed(wire1[(2'h3):(2'h2)]));
          if ((~|(wire0 ?
              $signed($signed(wire3)) : ((~&(8'ha1)) == (wire4 < wire7)))))
            begin
              reg13 <= $unsigned(reg8[(3'h4):(3'h4)]);
              reg14 <= ((((|wire0) ?
                      (reg9 == wire0) : $unsigned(wire0)) > (((8'hb0) ?
                      reg13 : wire11) >> wire7)) ?
                  $unsigned($signed((wire3 > wire3))) : wire1[(4'h8):(1'h1)]);
              reg15 <= ($unsigned(wire3[(1'h0):(1'h0)]) ?
                  $unsigned($unsigned(wire2)) : $unsigned((wire7[(3'h4):(2'h2)] * reg10)));
            end
          else
            begin
              reg13 <= reg10;
              reg14 <= (^~($unsigned(reg6) == (&(reg12 + (8'ha4)))));
            end
          reg16 <= reg9;
        end
      if ($unsigned((((!reg9) || (wire0 != reg13)) ?
          reg9 : $unsigned($unsigned(reg15)))))
        begin
          reg17 <= ((8'ha3) ?
              ($signed((!wire1)) | ((~^wire1) ?
                  {reg13} : reg9[(2'h2):(2'h2)])) : ($unsigned((8'ha8)) * reg9));
        end
      else
        begin
          if (wire11)
            begin
              reg17 <= $unsigned((~|wire2[(3'h5):(1'h1)]));
              reg18 <= (reg16[(3'h6):(3'h5)] ?
                  (((~|reg17) ? {wire0} : {reg10}) ?
                      wire0[(1'h1):(1'h1)] : ((wire2 <<< wire3) ^~ $signed(reg8))) : reg9[(2'h3):(1'h0)]);
              reg19 <= (~^(wire7[(3'h4):(3'h4)] + reg16));
            end
          else
            begin
              reg17 <= (~reg5[(2'h3):(2'h2)]);
              reg18 <= $unsigned($unsigned(wire1));
              reg19 <= (^$unsigned($unsigned($signed((8'haa)))));
            end
          reg20 <= $unsigned(reg15[(3'h4):(1'h1)]);
          reg21 <= $unsigned(reg14[(3'h4):(2'h3)]);
        end
      reg22 <= $signed({(8'ha4)});
    end
  assign wire23 = ((~$signed($signed(wire3))) ?
                      (reg8[(1'h0):(1'h0)] ?
                          (wire2 + wire11) : ({reg19} ?
                              wire1 : $unsigned((8'ha9)))) : (reg17 ?
                          {$signed(reg12)} : ($signed(reg14) ~^ (wire1 ?
                              reg21 : wire2))));
endmodule