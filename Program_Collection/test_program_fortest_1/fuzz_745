(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h72):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire0;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire3;
  wire signed [(2'h3):(1'h0)] wire21;
  wire signed [(2'h2):(1'h0)] wire24;
  wire signed [(3'h6):(1'h0)] wire34;
  wire signed [(4'h9):(1'h0)] wire35;
  wire [(4'ha):(1'h0)] wire36;
  wire [(3'h4):(1'h0)] wire37;
  wire [(2'h3):(1'h0)] wire59;
  reg [(3'h6):(1'h0)] reg23 = (1'h0);
  reg [(4'ha):(1'h0)] reg25 = (1'h0);
  reg [(4'h9):(1'h0)] reg26 = (1'h0);
  reg [(3'h7):(1'h0)] reg27 = (1'h0);
  reg [(4'h9):(1'h0)] reg28 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg29 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg32 = (1'h0);
  reg [(4'h8):(1'h0)] reg33 = (1'h0);
  assign y = {wire21,
                 wire24,
                 wire34,
                 wire35,
                 wire36,
                 wire37,
                 wire59,
                 reg23,
                 reg25,
                 reg26,
                 reg27,
                 reg28,
                 reg29,
                 reg30,
                 reg31,
                 reg32,
                 reg33,
                 (1'h0)};
  module4 #() modinst22 (wire21, clk, wire1, wire2, wire0, wire3);
  always
    @(posedge clk) begin
      reg23 <= (({(wire0 + wire1)} + wire3[(2'h2):(2'h2)]) << $signed((+(wire2 ?
          wire21 : wire3))));
    end
  assign wire24 = $signed($signed((^~(~^wire3))));
  always
    @(posedge clk) begin
      reg25 <= $signed(wire24);
      if ((|{reg23[(3'h6):(1'h1)]}))
        begin
          reg26 <= (wire2[(1'h1):(1'h0)] ~^ $signed(((~^wire24) ?
              $signed(wire24) : wire24)));
        end
      else
        begin
          reg26 <= ((^$signed(reg26[(3'h5):(1'h0)])) || wire24[(2'h2):(1'h1)]);
          if ($unsigned(reg25))
            begin
              reg27 <= ($unsigned($unsigned(wire21[(1'h0):(1'h0)])) ?
                  ($unsigned((wire2 >= reg23)) ~^ (8'ha0)) : reg23);
            end
          else
            begin
              reg27 <= $unsigned(reg26);
              reg28 <= (|$signed((^reg25[(3'h6):(3'h4)])));
              reg29 <= {reg27};
            end
          if ({$signed((-$unsigned(reg28)))})
            begin
              reg30 <= $signed((&wire24[(1'h0):(1'h0)]));
            end
          else
            begin
              reg30 <= (&(!wire3[(3'h7):(2'h2)]));
              reg31 <= $unsigned($signed($signed(wire0[(2'h2):(2'h2)])));
              reg32 <= (({(wire3 < (8'ha5))} ?
                  $signed((&reg25)) : reg28[(3'h7):(3'h4)]) ^~ {reg26[(2'h2):(1'h1)]});
            end
        end
      reg33 <= {$unsigned((^~(&reg25)))};
    end
  assign wire34 = wire24;
  assign wire35 = (reg29[(3'h7):(3'h7)] ^~ (^(8'ha4)));
  assign wire36 = wire0[(2'h3):(1'h1)];
  assign wire37 = reg30;
  module38 #() modinst60 (wire59, clk, reg32, reg33, wire0, reg30);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module38  (y, clk, wire42, wire41, wire40, wire39);
  output wire [(32'h63):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire42;
  input wire [(3'h4):(1'h0)] wire41;
  input wire [(3'h6):(1'h0)] wire40;
  input wire [(4'hb):(1'h0)] wire39;
  wire signed [(3'h4):(1'h0)] wire55;
  wire signed [(2'h2):(1'h0)] wire54;
  wire signed [(4'h9):(1'h0)] wire53;
  wire signed [(3'h5):(1'h0)] wire46;
  wire signed [(4'h8):(1'h0)] wire45;
  wire [(4'h9):(1'h0)] wire44;
  reg [(4'hb):(1'h0)] reg58 = (1'h0);
  reg [(4'ha):(1'h0)] reg57 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg56 = (1'h0);
  reg [(3'h6):(1'h0)] reg52 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg47 = (1'h0);
  reg [(4'hb):(1'h0)] reg43 = (1'h0);
  assign y = {wire55,
                 wire54,
                 wire53,
                 wire46,
                 wire45,
                 wire44,
                 reg58,
                 reg57,
                 reg56,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg43,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg43 <= (^~wire40);
    end
  assign wire44 = (&({reg43} ? {(^~wire40)} : (+(~|wire41))));
  assign wire45 = (+(wire42[(2'h3):(1'h1)] ?
                      ($unsigned((8'ha3)) ?
                          wire41[(1'h0):(1'h0)] : (|wire41)) : $unsigned({wire41})));
  assign wire46 = $unsigned($signed(wire39[(1'h1):(1'h1)]));
  always
    @(posedge clk) begin
      reg47 <= $signed(reg43[(4'hb):(2'h3)]);
      if ($signed($unsigned((8'ha5))))
        begin
          if (wire41)
            begin
              reg48 <= ($signed(reg47) ?
                  (^(~&(wire41 ?
                      wire42 : wire45))) : (wire40 > wire46[(3'h5):(2'h3)]));
              reg49 <= $signed(($signed($unsigned(wire40)) ?
                  ($signed((8'h9e)) ? wire46 : reg43[(4'hb):(1'h1)]) : wire41));
            end
          else
            begin
              reg48 <= $signed({wire46});
            end
          reg50 <= reg47;
          reg51 <= reg50;
        end
      else
        begin
          reg48 <= {{$unsigned($signed((8'haa)))}};
          reg49 <= $unsigned(wire40[(3'h5):(3'h4)]);
          reg50 <= $signed(((-(wire40 ?
              wire42 : reg47)) * $unsigned(reg50[(2'h2):(1'h1)])));
        end
      reg52 <= reg50;
    end
  assign wire53 = (~|{$unsigned($unsigned((8'hac)))});
  assign wire54 = reg50;
  assign wire55 = (!$signed(($unsigned(reg51) ?
                      (wire54 ? (8'hac) : reg49) : (^~wire45))));
  always
    @(posedge clk) begin
      reg56 <= (((wire46 ?
          (reg48 ?
              reg47 : wire42) : $unsigned(wire53)) ^ $unsigned({wire41})) ^~ reg48[(1'h0):(1'h0)]);
      reg57 <= wire40;
      reg58 <= ((^~(((8'ha5) >> reg57) != wire40[(2'h2):(2'h2)])) ^~ ({((8'hb0) ?
                  reg52 : reg57)} ?
          $signed((8'hae)) : reg43[(2'h3):(1'h0)]));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire8;
  input wire signed [(3'h4):(1'h0)] wire7;
  input wire signed [(2'h2):(1'h0)] wire6;
  input wire [(3'h7):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire20;
  wire [(4'h8):(1'h0)] wire19;
  wire signed [(2'h3):(1'h0)] wire18;
  wire [(2'h2):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire16;
  wire [(4'h8):(1'h0)] wire15;
  wire signed [(2'h3):(1'h0)] wire14;
  wire [(3'h5):(1'h0)] wire9;
  reg signed [(4'ha):(1'h0)] reg13 = (1'h0);
  reg [(2'h3):(1'h0)] reg12 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg10 = (1'h0);
  assign y = {wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire9,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 (1'h0)};
  assign wire9 = ($signed({(wire7 ? wire6 : wire7)}) << $signed(wire6));
  always
    @(posedge clk) begin
      reg10 <= wire9[(1'h1):(1'h0)];
      if ({(wire6 ?
              ($unsigned(wire8) ?
                  reg10[(1'h0):(1'h0)] : (reg10 * wire7)) : $signed((~&wire7)))})
        begin
          reg11 <= (+($unsigned((~|reg10)) ?
              wire8 : $signed((reg10 ^ (8'ha5)))));
        end
      else
        begin
          reg11 <= $signed($signed((wire7 ?
              reg11[(3'h5):(3'h4)] : (|(8'ha3)))));
          reg12 <= reg11;
        end
      reg13 <= (reg12 ~^ ({reg12} ?
          (reg11 >>> (wire6 == reg10)) : $signed(reg10)));
    end
  assign wire14 = (((!wire7) ? reg13[(3'h4):(2'h2)] : reg12) ?
                      {$unsigned(reg11)} : reg10[(3'h4):(1'h0)]);
  assign wire15 = wire6;
  assign wire16 = (^~$unsigned(wire14[(2'h2):(1'h0)]));
  assign wire17 = wire16;
  assign wire18 = ({(!$signed(reg10))} ?
                      (^$signed((reg12 ? wire9 : reg12))) : reg11);
  assign wire19 = wire17;
  assign wire20 = $signed(wire7);
endmodule