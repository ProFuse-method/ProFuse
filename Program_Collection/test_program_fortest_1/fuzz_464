(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param62 = ((8'h9d) <= (|(((8'ha2) ? (8'ha1) : (8'ha5)) ? ((8'ha8) ? (8'ha6) : (8'ha4)) : ((8'ha7) && (8'ha8))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire61;
  wire [(4'h9):(1'h0)] wire60;
  wire signed [(4'hb):(1'h0)] wire59;
  wire signed [(2'h2):(1'h0)] wire58;
  wire signed [(4'h9):(1'h0)] wire57;
  wire signed [(3'h5):(1'h0)] wire49;
  wire [(4'ha):(1'h0)] wire47;
  wire signed [(4'ha):(1'h0)] wire4;
  reg signed [(2'h2):(1'h0)] reg56 = (1'h0);
  reg [(3'h6):(1'h0)] reg55 = (1'h0);
  reg [(3'h5):(1'h0)] reg54 = (1'h0);
  reg [(2'h3):(1'h0)] reg53 = (1'h0);
  reg [(4'ha):(1'h0)] reg52 = (1'h0);
  reg [(2'h3):(1'h0)] reg51 = (1'h0);
  assign y = {wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire49,
                 wire47,
                 wire4,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 (1'h0)};
  assign wire4 = (($unsigned($signed(wire3)) ?
                         wire1 : $signed((wire2 >>> wire0))) ?
                     (8'ha7) : wire0[(3'h7):(3'h4)]);
  module5 #() modinst48 (.wire7(wire4), .wire9(wire1), .wire8(wire3), .clk(clk), .wire6(wire0), .y(wire47));
  module5 #() modinst50 (.wire8(wire3), .wire6(wire2), .clk(clk), .wire9(wire0), .y(wire49), .wire7(wire47));
  always
    @(posedge clk) begin
      reg51 <= (!$signed({wire49[(2'h2):(1'h1)]}));
      if ($signed(((~$unsigned(wire1)) >= {wire49[(3'h5):(1'h1)]})))
        begin
          reg52 <= (~^($signed(wire49[(2'h3):(1'h1)]) * (wire0[(4'h9):(2'h2)] ?
              (-wire4) : $unsigned((8'ha7)))));
          reg53 <= wire47[(3'h5):(1'h0)];
          reg54 <= (wire2 ?
              ($signed({wire3}) ?
                  $signed(wire3) : $unsigned(reg52)) : $signed((wire3[(4'h8):(4'h8)] <= ((8'ha1) ?
                  wire2 : reg52))));
        end
      else
        begin
          reg52 <= {$signed(($unsigned(wire3) ?
                  reg54[(3'h4):(1'h1)] : reg51[(2'h2):(2'h2)]))};
          if ((((~(wire1 ? wire1 : (8'ha2))) ?
              $signed($signed((8'h9d))) : $signed(wire3)) || ($unsigned((|wire49)) < (8'ha9))))
            begin
              reg53 <= wire2[(3'h7):(3'h5)];
              reg54 <= $unsigned($signed(reg51[(1'h0):(1'h0)]));
              reg55 <= {$signed(reg54)};
            end
          else
            begin
              reg53 <= wire4[(1'h1):(1'h1)];
              reg54 <= ($unsigned(reg55) | $unsigned($unsigned($signed(reg54))));
            end
        end
      reg56 <= (^~(reg51 ^ $unsigned($signed(wire3))));
    end
  assign wire57 = wire4;
  assign wire58 = $unsigned($unsigned((&reg52[(2'h3):(2'h2)])));
  assign wire59 = $signed((wire47 >>> (8'ha6)));
  assign wire60 = (wire3[(4'ha):(3'h4)] == (($signed(reg55) ?
                      wire1 : (8'h9f)) & wire58[(2'h2):(2'h2)]));
  assign wire61 = ($unsigned((&wire57)) == ({$unsigned((8'ha1))} & $unsigned($signed(wire60))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire signed [(4'ha):(1'h0)] wire7;
  input wire signed [(4'h9):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire46;
  wire signed [(3'h6):(1'h0)] wire45;
  wire signed [(3'h6):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire43;
  wire [(4'h9):(1'h0)] wire41;
  wire [(3'h6):(1'h0)] wire40;
  wire signed [(3'h4):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire25;
  reg [(4'ha):(1'h0)] reg42 = (1'h0);
  assign y = {wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire41,
                 wire40,
                 wire38,
                 wire25,
                 reg42,
                 (1'h0)};
  module10 #() modinst26 (wire25, clk, wire6, wire9, wire8, wire7);
  module27 #() modinst39 (.wire29(wire7), .y(wire38), .wire31(wire6), .wire30(wire25), .wire28(wire8), .clk(clk));
  assign wire40 = ((wire8[(3'h5):(1'h0)] + wire7[(4'h8):(2'h3)]) ?
                      (((wire6 & wire25) * (wire7 ^~ (8'h9d))) ?
                          (-wire25[(1'h1):(1'h0)]) : (+((8'ha9) >> wire9))) : (wire7[(3'h7):(3'h5)] ?
                          $unsigned((~^wire6)) : ((wire9 ?
                              wire6 : wire6) >>> (|wire8))));
  assign wire41 = $signed($unsigned(((-wire38) ? wire9 : {wire9})));
  always
    @(posedge clk) begin
      reg42 <= wire6[(2'h2):(2'h2)];
    end
  assign wire43 = $unsigned((8'ha2));
  assign wire44 = (wire43 ?
                      wire9 : $signed((reg42 ? wire38 : (wire41 == reg42))));
  assign wire45 = ($unsigned((-wire44[(3'h5):(3'h4)])) | wire9);
  assign wire46 = {$unsigned(({wire6} ~^ (|wire6)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module27
#(parameter param37 = {{(~^((8'ha1) >>> (8'ha4)))}})
(y, clk, wire31, wire30, wire29, wire28);
  output wire [(32'h1d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire31;
  input wire signed [(2'h3):(1'h0)] wire30;
  input wire signed [(4'h9):(1'h0)] wire29;
  input wire [(4'ha):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire36;
  wire signed [(2'h2):(1'h0)] wire35;
  wire signed [(2'h2):(1'h0)] wire34;
  wire [(4'ha):(1'h0)] wire33;
  wire signed [(3'h4):(1'h0)] wire32;
  assign y = {wire36, wire35, wire34, wire33, wire32, (1'h0)};
  assign wire32 = $signed($unsigned(wire31[(1'h0):(1'h0)]));
  assign wire33 = wire28[(2'h2):(1'h1)];
  assign wire34 = (|wire28);
  assign wire35 = ($unsigned(($unsigned(wire31) <<< $unsigned(wire32))) ^~ $unsigned(((^wire31) <= (wire28 <= (8'h9c)))));
  assign wire36 = (8'had);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h3c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire14;
  input wire signed [(2'h3):(1'h0)] wire13;
  input wire signed [(2'h3):(1'h0)] wire12;
  input wire [(2'h2):(1'h0)] wire11;
  wire signed [(3'h7):(1'h0)] wire24;
  wire [(3'h6):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire20;
  wire [(4'h9):(1'h0)] wire19;
  wire signed [(4'h9):(1'h0)] wire18;
  wire [(3'h6):(1'h0)] wire17;
  wire signed [(2'h3):(1'h0)] wire16;
  wire [(3'h7):(1'h0)] wire15;
  reg signed [(3'h5):(1'h0)] reg23 = (1'h0);
  reg [(3'h4):(1'h0)] reg22 = (1'h0);
  assign y = {wire24,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire15 = wire13;
  assign wire16 = $unsigned($unsigned(wire15[(1'h1):(1'h1)]));
  assign wire17 = (^~(wire13[(2'h3):(2'h2)] >> $unsigned(wire16)));
  assign wire18 = wire14[(4'h8):(2'h2)];
  assign wire19 = ((($unsigned(wire18) | (wire13 + wire12)) <= $unsigned(wire15)) << wire14[(1'h1):(1'h1)]);
  assign wire20 = $unsigned(wire19[(2'h2):(2'h2)]);
  assign wire21 = $unsigned(((wire18[(2'h3):(2'h3)] ?
                      (&wire18) : {wire19}) & $unsigned((wire15 - wire19))));
  always
    @(posedge clk) begin
      reg22 <= (($signed(wire11[(2'h2):(2'h2)]) | wire15[(3'h6):(3'h5)]) < (~&(|((8'ha0) ?
          wire12 : wire12))));
      reg23 <= $unsigned(wire16);
    end
  assign wire24 = ((!(((8'ha5) ? wire19 : reg23) ?
                      {wire13} : {wire12})) ~^ wire16);
endmodule