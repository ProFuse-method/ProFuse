(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire48;
  wire signed [(3'h6):(1'h0)] wire47;
  wire [(2'h3):(1'h0)] wire46;
  wire signed [(3'h6):(1'h0)] wire45;
  wire signed [(4'h9):(1'h0)] wire44;
  wire signed [(4'h8):(1'h0)] wire43;
  wire signed [(4'ha):(1'h0)] wire42;
  wire [(2'h3):(1'h0)] wire41;
  wire signed [(2'h2):(1'h0)] wire38;
  reg [(4'h8):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg50 = (1'h0);
  reg [(4'ha):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  assign y = {wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire38,
                 reg51,
                 reg50,
                 reg49,
                 reg40,
                 (1'h0)};
  module4 #() modinst39 (wire38, clk, wire3, wire1, wire0, wire2);
  always
    @(posedge clk) begin
      reg40 <= ((($unsigned(wire38) | (-wire3)) ^~ (|wire3[(3'h7):(3'h5)])) || (wire3 ?
          ($unsigned(wire38) ?
              $unsigned(wire1) : wire3[(3'h7):(1'h0)]) : wire3[(3'h5):(1'h1)]));
    end
  assign wire41 = $unsigned($signed((wire0 ?
                      $signed(wire3) : (wire1 ? wire2 : wire1))));
  assign wire42 = $unsigned($unsigned({(~|wire41)}));
  assign wire43 = wire41[(2'h3):(1'h1)];
  assign wire44 = (8'hab);
  assign wire45 = {($unsigned((^wire38)) ?
                          (~(~(8'ha5))) : (^~(wire41 << wire43)))};
  assign wire46 = (($signed((wire41 ? wire44 : wire1)) ?
                      wire38[(2'h2):(2'h2)] : (wire1[(2'h3):(2'h2)] ?
                          $unsigned(reg40) : $unsigned(wire44))) | wire43[(3'h4):(1'h1)]);
  assign wire47 = {(wire38 ? {(~&wire43)} : wire1)};
  assign wire48 = (-({$unsigned((8'haa))} ?
                      ($unsigned(wire45) ?
                          (wire3 ? wire2 : wire1) : ((8'haa) ?
                              wire3 : (8'ha0))) : $unsigned((wire47 ?
                          wire44 : wire3))));
  always
    @(posedge clk) begin
      if ($signed((8'haa)))
        begin
          reg49 <= $unsigned(((reg40 * (~(8'hb0))) - $signed({wire43})));
          reg50 <= (~^$unsigned($unsigned($signed(wire47))));
        end
      else
        begin
          reg49 <= ((8'hb0) != $signed(((reg49 ? wire48 : reg49) - wire41)));
        end
      reg51 <= ($unsigned(wire38) && wire43[(3'h5):(3'h4)]);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param37 = (({((8'hae) ? (8'ha9) : (8'hae))} ~^ ((8'ha4) == (^(8'ha3)))) ? (|((8'haf) <= ((8'ha2) ? (8'had) : (8'ha7)))) : (^(^~(~&(8'ha7))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h32):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire8;
  input wire [(3'h4):(1'h0)] wire7;
  input wire signed [(3'h6):(1'h0)] wire6;
  input wire [(3'h4):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire36;
  wire signed [(2'h3):(1'h0)] wire35;
  wire [(4'h9):(1'h0)] wire33;
  wire [(4'h8):(1'h0)] wire13;
  wire [(3'h7):(1'h0)] wire12;
  wire [(2'h3):(1'h0)] wire11;
  wire signed [(4'h9):(1'h0)] wire10;
  wire signed [(3'h7):(1'h0)] wire9;
  assign y = {wire36,
                 wire35,
                 wire33,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 (1'h0)};
  assign wire9 = $signed((((wire5 << (8'ha6)) ?
                         (wire5 ? (8'h9c) : wire8) : wire5) ?
                     wire7[(2'h3):(1'h1)] : $signed((+wire6))));
  assign wire10 = {(+(~(wire7 && (8'ha8))))};
  assign wire11 = (wire10 || wire5[(1'h1):(1'h0)]);
  assign wire12 = wire11[(1'h1):(1'h0)];
  assign wire13 = wire12[(3'h6):(3'h6)];
  module14 #() modinst34 (.wire18(wire12), .wire15(wire7), .wire16(wire13), .y(wire33), .wire17(wire9), .clk(clk));
  assign wire35 = (|((8'ha3) ?
                      ((wire9 ?
                          wire7 : wire7) >>> $signed(wire7)) : $signed(wire12)));
  assign wire36 = ($signed(($unsigned(wire8) ? wire6 : $signed((8'ha3)))) ?
                      (($unsigned(wire5) ? (~|wire7) : wire12[(3'h7):(3'h6)]) ?
                          (wire8[(1'h0):(1'h0)] < ((8'ha9) ?
                              wire8 : wire10)) : ((~wire35) ?
                              (wire7 && wire8) : wire7[(2'h3):(1'h0)])) : $unsigned($signed((~|wire8))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param32 = (((-(&(8'ha4))) ? (!{(8'had)}) : (((8'hb0) >>> (8'hac)) ? ((8'haa) ? (8'hab) : (8'ha0)) : (!(8'ha8)))) ? (({(8'hae)} && ((8'ha3) + (8'h9f))) ? ((~&(8'hab)) || (+(8'ha9))) : (8'ha2)) : ((((8'hae) != (8'hb0)) || ((8'hac) ? (8'hae) : (8'h9d))) ? ((8'h9d) >= {(8'h9c)}) : (((8'hae) & (8'h9c)) ? ((8'hae) ? (8'ha6) : (8'h9f)) : (~(8'h9c))))))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h4d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire18;
  input wire [(3'h5):(1'h0)] wire17;
  input wire signed [(4'h8):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire15;
  wire [(3'h5):(1'h0)] wire31;
  wire signed [(3'h6):(1'h0)] wire30;
  wire [(3'h6):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire27;
  wire signed [(2'h2):(1'h0)] wire26;
  wire [(4'h8):(1'h0)] wire25;
  wire signed [(2'h2):(1'h0)] wire24;
  wire [(2'h3):(1'h0)] wire23;
  wire [(4'h9):(1'h0)] wire22;
  wire [(4'h9):(1'h0)] wire21;
  wire [(4'h9):(1'h0)] wire20;
  wire signed [(3'h4):(1'h0)] wire19;
  assign y = {wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 (1'h0)};
  assign wire19 = (($unsigned((wire18 ? wire16 : wire15)) ?
                          $signed((-wire18)) : ((-(8'ha3)) << (8'ha5))) ?
                      wire18[(2'h3):(2'h3)] : ((wire17 ?
                          {(8'h9d)} : (wire17 < wire17)) ~^ $unsigned(wire16[(1'h0):(1'h0)])));
  assign wire20 = (~&wire19);
  assign wire21 = ((~^wire17) ? {$unsigned((!wire16))} : wire16);
  assign wire22 = $signed(($unsigned((^~wire18)) | wire17[(3'h4):(1'h0)]));
  assign wire23 = $signed(($signed((wire20 ^ wire21)) - wire15));
  assign wire24 = $unsigned(({(wire15 >> wire23)} <= $unsigned((wire19 + wire17))));
  assign wire25 = {({wire18} ?
                          ($signed((8'h9e)) != (~^wire18)) : {$unsigned(wire23)})};
  assign wire26 = $signed(($unsigned((8'hb0)) ?
                      wire21[(3'h6):(3'h5)] : $unsigned($signed(wire17))));
  assign wire27 = {{wire18[(1'h1):(1'h0)]}};
  assign wire28 = ((-((~|wire20) ? $unsigned(wire20) : (wire22 ~^ wire25))) ?
                      ($signed($unsigned(wire22)) ?
                          wire15[(1'h1):(1'h1)] : wire16[(4'h8):(2'h2)]) : wire26[(2'h2):(1'h0)]);
  assign wire29 = wire22[(1'h0):(1'h0)];
  assign wire30 = (~&wire24[(1'h1):(1'h0)]);
  assign wire31 = (~|$signed($signed($unsigned(wire15))));
endmodule