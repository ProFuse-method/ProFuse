(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param66 = ((^(~^(~&(8'ha6)))) - ({((8'ha0) ^ (8'hb0))} ? ((8'ha3) ? ((8'hac) ? (8'haa) : (8'ha2)) : ((8'ha6) ? (8'haf) : (8'ha6))) : (((8'hac) ? (8'ha4) : (8'ha3)) ? {(8'ha6)} : ((8'haa) ? (8'h9d) : (8'ha3))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h42):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire65;
  wire signed [(2'h2):(1'h0)] wire64;
  wire signed [(4'h9):(1'h0)] wire63;
  wire signed [(4'h9):(1'h0)] wire62;
  wire [(4'h9):(1'h0)] wire58;
  wire signed [(3'h4):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  reg signed [(4'hb):(1'h0)] reg61 = (1'h0);
  reg [(2'h2):(1'h0)] reg60 = (1'h0);
  assign y = {wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire58,
                 wire5,
                 wire4,
                 reg61,
                 reg60,
                 (1'h0)};
  assign wire4 = wire3[(1'h0):(1'h0)];
  assign wire5 = wire1[(1'h1):(1'h1)];
  module6 #() modinst59 (wire58, clk, wire1, wire3, wire0, wire4);
  always
    @(posedge clk) begin
      reg60 <= wire0[(1'h1):(1'h1)];
      reg61 <= {$unsigned(((wire5 ? wire0 : wire4) ?
              (wire2 ? wire58 : reg60) : (wire2 * wire2)))};
    end
  assign wire62 = (~wire2[(4'ha):(4'ha)]);
  assign wire63 = $unsigned($signed(wire3[(3'h6):(3'h5)]));
  assign wire64 = wire5;
  assign wire65 = (({(8'ha5)} ?
                          ((8'ha7) ?
                              (wire1 ?
                                  wire0 : wire3) : {wire1}) : {$unsigned(wire0)}) ?
                      (reg60 ? wire64 : reg60) : wire0);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire10;
  input wire signed [(3'h6):(1'h0)] wire9;
  input wire signed [(3'h5):(1'h0)] wire8;
  input wire signed [(4'ha):(1'h0)] wire7;
  wire signed [(4'h8):(1'h0)] wire56;
  wire [(4'h9):(1'h0)] wire36;
  wire signed [(3'h5):(1'h0)] wire17;
  reg signed [(4'h9):(1'h0)] reg16 = (1'h0);
  reg [(2'h2):(1'h0)] reg15 = (1'h0);
  reg [(4'h9):(1'h0)] reg14 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg13 = (1'h0);
  reg [(4'ha):(1'h0)] reg12 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg11 = (1'h0);
  assign y = {wire56,
                 wire36,
                 wire17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg11 <= (^wire8);
      if ($signed(({wire7} ? wire10[(2'h2):(1'h0)] : (|wire10[(3'h7):(1'h0)]))))
        begin
          reg12 <= ((wire8 ? $unsigned((wire8 ? (8'ha2) : (8'ha1))) : (8'ha2)) ?
              {{(wire7 != wire8)}} : {reg11});
        end
      else
        begin
          if ({wire7})
            begin
              reg12 <= $signed((~$unsigned(wire8[(2'h3):(1'h1)])));
            end
          else
            begin
              reg12 <= (~|(-reg12[(2'h2):(1'h0)]));
              reg13 <= wire7;
            end
          if (wire8[(2'h2):(1'h0)])
            begin
              reg14 <= reg13[(2'h3):(1'h1)];
              reg15 <= {wire7};
            end
          else
            begin
              reg14 <= ((reg15 ?
                  wire10[(1'h1):(1'h1)] : $signed((wire8 ?
                      wire8 : reg14))) & ($signed((wire8 > wire10)) ?
                  reg14[(1'h0):(1'h0)] : $unsigned($unsigned((8'ha9)))));
              reg15 <= (8'h9f);
              reg16 <= ($signed((8'ha2)) ^ $signed(reg15));
            end
        end
    end
  assign wire17 = ($unsigned((~^(~|reg12))) ?
                      (($signed((8'hac)) <= (^reg14)) ?
                          $unsigned($unsigned(reg15)) : ({reg11} > (-wire7))) : ((((8'haa) ?
                                  reg14 : wire10) ?
                              wire7 : (reg12 ? (8'hab) : wire8)) ?
                          ((~(8'h9e)) || $signed(wire7)) : (~$unsigned(wire10))));
  module18 #() modinst37 (wire36, clk, reg11, wire7, wire9, reg12);
  module38 #() modinst57 (.wire39(reg12), .wire41(reg14), .y(wire56), .clk(clk), .wire42(reg13), .wire40(reg16));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module38
#(parameter param55 = (((((8'hb0) ? (8'had) : (8'ha3)) ? ((8'hac) | (8'haf)) : ((8'haf) ~^ (8'hae))) ? (~(~(8'haa))) : ((~(8'hab)) <<< (~(8'haa)))) ? {(((8'haf) > (8'haf)) ? (~&(8'ha1)) : ((8'ha2) >= (8'hb0)))} : ({((8'h9f) ? (8'h9f) : (8'hab))} ? (((8'ha7) > (8'ha8)) >= ((8'hac) >>> (8'ha7))) : (((8'ha0) ? (8'ha5) : (8'hab)) - (^~(8'hae))))))
(y, clk, wire42, wire41, wire40, wire39);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire42;
  input wire signed [(4'h9):(1'h0)] wire41;
  input wire [(4'h9):(1'h0)] wire40;
  input wire signed [(3'h4):(1'h0)] wire39;
  wire [(4'h9):(1'h0)] wire54;
  wire signed [(3'h5):(1'h0)] wire53;
  wire signed [(3'h4):(1'h0)] wire52;
  wire [(2'h2):(1'h0)] wire51;
  wire [(3'h6):(1'h0)] wire50;
  wire signed [(4'hb):(1'h0)] wire49;
  wire signed [(4'ha):(1'h0)] wire48;
  wire signed [(4'h9):(1'h0)] wire44;
  wire signed [(3'h7):(1'h0)] wire43;
  reg signed [(3'h7):(1'h0)] reg47 = (1'h0);
  reg [(4'h8):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg45 = (1'h0);
  assign y = {wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire44,
                 wire43,
                 reg47,
                 reg46,
                 reg45,
                 (1'h0)};
  assign wire43 = {wire41[(4'h9):(3'h7)]};
  assign wire44 = ({wire40[(2'h2):(2'h2)]} ?
                      (($signed(wire40) ?
                          $signed(wire43) : $signed(wire42)) ~^ (+wire42)) : {{wire42[(3'h7):(3'h6)]}});
  always
    @(posedge clk) begin
      reg45 <= (^~wire39);
      reg46 <= (($unsigned($signed(wire43)) ?
          $signed((-wire43)) : $unsigned(wire44)) > $signed((^(wire41 ?
          reg45 : (8'h9c)))));
      reg47 <= (~reg45);
    end
  assign wire48 = wire39[(1'h0):(1'h0)];
  assign wire49 = $unsigned((wire43[(1'h1):(1'h0)] | wire41[(3'h5):(3'h5)]));
  assign wire50 = wire43;
  assign wire51 = ((&wire49[(3'h4):(1'h0)]) ?
                      (wire42[(3'h6):(2'h2)] ?
                          reg46[(2'h2):(1'h0)] : $unsigned($signed(wire42))) : reg45);
  assign wire52 = ((wire44 ? wire40 : (~^(wire41 + reg45))) ?
                      $signed(wire39) : (+reg47[(3'h6):(1'h0)]));
  assign wire53 = (wire51 << ($signed((!wire51)) <<< (~$unsigned(wire50))));
  assign wire54 = (($signed((-(8'ha6))) != (((8'hac) ? wire48 : wire43) ?
                      ((8'haa) >> wire40) : wire41)) >>> $unsigned((~^((8'had) ?
                      wire43 : wire50))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18
#(parameter param35 = {((!(~(8'h9e))) < (!((8'h9c) | (8'had))))})
(y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire22;
  input wire signed [(3'h5):(1'h0)] wire21;
  input wire signed [(2'h3):(1'h0)] wire20;
  input wire [(4'ha):(1'h0)] wire19;
  wire [(4'h8):(1'h0)] wire34;
  wire signed [(2'h3):(1'h0)] wire33;
  wire [(3'h4):(1'h0)] wire32;
  wire signed [(3'h7):(1'h0)] wire31;
  wire signed [(2'h2):(1'h0)] wire30;
  wire signed [(3'h4):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire28;
  wire [(4'ha):(1'h0)] wire27;
  wire [(3'h4):(1'h0)] wire26;
  wire [(2'h2):(1'h0)] wire25;
  reg signed [(3'h7):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg23 = (1'h0);
  assign y = {wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 reg24,
                 reg23,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg23 <= (~|(wire21 ? $signed((-(8'hab))) : (!$signed(wire21))));
      reg24 <= ($signed((wire19[(2'h2):(1'h0)] == {wire22})) <= {(reg23 == wire20[(2'h3):(1'h1)])});
    end
  assign wire25 = reg23;
  assign wire26 = $signed((|(^wire25[(2'h2):(1'h0)])));
  assign wire27 = wire25[(2'h2):(2'h2)];
  assign wire28 = $signed(wire22);
  assign wire29 = $unsigned(reg24);
  assign wire30 = wire29;
  assign wire31 = (~&$signed(((~&wire21) >= (~&(8'hb0)))));
  assign wire32 = wire30[(1'h0):(1'h0)];
  assign wire33 = wire19;
  assign wire34 = {wire19};
endmodule