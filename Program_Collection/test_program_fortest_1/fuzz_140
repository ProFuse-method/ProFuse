(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h31):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire57;
  wire signed [(4'hb):(1'h0)] wire56;
  wire [(3'h4):(1'h0)] wire54;
  wire [(3'h5):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire4;
  assign y = {wire57, wire56, wire54, wire6, wire5, wire4, (1'h0)};
  assign wire4 = wire1[(2'h3):(1'h1)];
  assign wire5 = $signed(((wire4[(2'h2):(2'h2)] ?
                         wire3[(3'h7):(3'h7)] : (wire1 & wire1)) ?
                     $unsigned(wire0) : {(wire1 ^ wire4)}));
  assign wire6 = (wire5[(3'h4):(1'h1)] != {$unsigned((wire5 ?
                         wire4 : (8'h9f)))});
  module7 #() modinst55 (wire54, clk, wire0, wire4, wire3, wire2);
  assign wire56 = $signed($unsigned(({(8'hb0)} ?
                      (wire0 ? wire6 : (8'h9d)) : $unsigned((8'ha7)))));
  assign wire57 = $signed((^$unsigned((wire4 && (8'ha3)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire11;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire [(3'h6):(1'h0)] wire9;
  input wire [(3'h6):(1'h0)] wire8;
  wire signed [(4'hb):(1'h0)] wire52;
  wire signed [(3'h6):(1'h0)] wire50;
  wire [(4'h8):(1'h0)] wire37;
  wire signed [(4'h9):(1'h0)] wire36;
  wire signed [(4'ha):(1'h0)] wire35;
  wire signed [(3'h7):(1'h0)] wire34;
  wire [(4'h8):(1'h0)] wire32;
  wire [(4'hb):(1'h0)] wire12;
  assign y = {wire52,
                 wire50,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire32,
                 wire12,
                 (1'h0)};
  assign wire12 = (^{(^wire11[(2'h2):(1'h0)])});
  module13 #() modinst33 (.wire17(wire8), .wire15(wire10), .wire16(wire9), .y(wire32), .clk(clk), .wire14(wire11));
  assign wire34 = wire12[(4'h8):(2'h3)];
  assign wire35 = wire9[(3'h4):(2'h2)];
  assign wire36 = wire35;
  assign wire37 = ((+wire32) ?
                      $signed($signed((wire8 ?
                          (8'h9e) : wire35))) : $signed(($unsigned(wire34) ?
                          wire32 : {wire9})));
  module38 #() modinst51 (wire50, clk, wire10, wire34, wire11, wire37);
  module13 #() modinst53 (wire52, clk, wire50, wire35, wire10, wire36);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module38  (y, clk, wire42, wire41, wire40, wire39);
  output wire [(32'h1e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire42;
  input wire signed [(3'h6):(1'h0)] wire41;
  input wire [(3'h7):(1'h0)] wire40;
  input wire signed [(3'h4):(1'h0)] wire39;
  wire [(2'h2):(1'h0)] wire49;
  wire [(3'h7):(1'h0)] wire48;
  wire [(4'h8):(1'h0)] wire47;
  wire [(2'h2):(1'h0)] wire46;
  wire signed [(2'h3):(1'h0)] wire45;
  wire signed [(3'h4):(1'h0)] wire44;
  wire [(2'h3):(1'h0)] wire43;
  assign y = {wire49, wire48, wire47, wire46, wire45, wire44, wire43, (1'h0)};
  assign wire43 = $unsigned(wire40[(3'h6):(1'h0)]);
  assign wire44 = (wire41[(1'h1):(1'h1)] ?
                      $unsigned(wire41[(1'h1):(1'h0)]) : (~^wire43));
  assign wire45 = (8'h9c);
  assign wire46 = $unsigned($unsigned($signed((wire43 && wire41))));
  assign wire47 = $signed(((~(-wire41)) | ((+wire41) + $unsigned(wire45))));
  assign wire48 = $signed((wire45 ?
                      (wire41 <= ((8'ha5) ? wire45 : wire42)) : (-{wire40})));
  assign wire49 = $signed(wire47);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param31 = (((^~((8'h9c) ? (8'hab) : (8'hb0))) && (~&(~&(8'haf)))) ? ((((8'h9c) != (8'h9c)) ~^ {(8'h9d)}) ? (((8'ha6) || (8'ha0)) ? ((8'ha5) < (8'ha6)) : (~|(8'hac))) : (((8'h9c) && (8'ha1)) ~^ ((8'h9c) ? (8'hab) : (8'h9c)))) : ((((8'haa) ? (8'ha4) : (8'ha4)) ? ((8'hac) ? (8'ha2) : (8'ha6)) : ((8'ha1) ? (8'ha9) : (8'haf))) ? (((8'ha4) ~^ (8'h9d)) ~^ {(8'haf)}) : ((+(8'h9c)) ? (~&(8'hab)) : (^(8'h9c))))))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h57):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire17;
  input wire signed [(3'h5):(1'h0)] wire16;
  input wire [(3'h7):(1'h0)] wire15;
  input wire signed [(4'h9):(1'h0)] wire14;
  wire [(2'h3):(1'h0)] wire30;
  wire [(2'h2):(1'h0)] wire29;
  wire [(4'h9):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire27;
  wire signed [(2'h3):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire18;
  reg [(3'h4):(1'h0)] reg26 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg25 = (1'h0);
  reg [(2'h2):(1'h0)] reg24 = (1'h0);
  reg [(4'ha):(1'h0)] reg23 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg22 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg19 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire21,
                 wire18,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire18 = {wire14[(3'h4):(3'h4)]};
  always
    @(posedge clk) begin
      reg19 <= (($signed(wire16) ~^ ((wire17 ? wire14 : wire18) | (~&wire14))) ?
          $unsigned(((~wire17) >> (wire15 ^~ wire17))) : ($unsigned((wire18 ~^ wire14)) ?
              {(+wire17)} : ((+(8'ha1)) ? $unsigned(wire16) : (~^wire16))));
      reg20 <= wire18;
    end
  assign wire21 = ((-{wire18}) ?
                      (~|($signed(reg19) && {wire18})) : wire15[(3'h4):(3'h4)]);
  always
    @(posedge clk) begin
      reg22 <= (|($unsigned((wire16 >> (8'ha7))) == ($signed(wire16) ?
          ((8'ha3) + (8'ha1)) : wire14)));
      if ((~|reg20))
        begin
          reg23 <= ($unsigned({$unsigned((8'ha6))}) & $unsigned(((reg22 >>> wire18) ?
              $signed(wire16) : (reg20 ? reg19 : wire21))));
          reg24 <= reg19[(1'h1):(1'h1)];
        end
      else
        begin
          reg23 <= (wire17[(3'h6):(2'h3)] ^~ (!(|(^~wire16))));
          reg24 <= wire14[(3'h7):(1'h0)];
          reg25 <= reg20;
        end
      reg26 <= ($signed($unsigned($signed(wire17))) ?
          $unsigned({(wire14 && reg22)}) : ($signed((-wire17)) ?
              ($signed(wire16) ?
                  $signed(reg23) : reg24) : $unsigned($unsigned(reg23))));
    end
  assign wire27 = (((reg26 - (wire21 - wire15)) * $signed($unsigned(reg19))) >= $signed((~|$unsigned(reg22))));
  assign wire28 = ((($signed(reg22) ^ (wire14 ?
                          reg22 : wire27)) != $unsigned((~&wire17))) ?
                      $unsigned((reg22[(4'hb):(3'h6)] ^ (~wire18))) : (|(wire27 > reg26[(3'h4):(1'h1)])));
  assign wire29 = (~&(~&((reg20 && wire27) ^~ $signed(reg23))));
  assign wire30 = $signed($signed({$unsigned(reg23)}));
endmodule