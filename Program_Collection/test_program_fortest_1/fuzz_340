(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire23;
  wire [(4'h9):(1'h0)] wire22;
  wire [(4'h9):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire16;
  wire [(4'hb):(1'h0)] wire15;
  wire [(2'h2):(1'h0)] wire13;
  reg [(4'h9):(1'h0)] reg21 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg19 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg18 = (1'h0);
  assign y = {wire23,
                 wire22,
                 wire17,
                 wire16,
                 wire15,
                 wire13,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 (1'h0)};
  module4 #() modinst14 (.clk(clk), .wire5(wire1), .y(wire13), .wire6(wire3), .wire8(wire0), .wire7(wire2));
  assign wire15 = wire13[(1'h0):(1'h0)];
  assign wire16 = wire3[(1'h1):(1'h0)];
  assign wire17 = (wire16[(3'h5):(2'h2)] >= ((wire0 > $unsigned(wire13)) ?
                      wire15 : ($signed(wire3) ?
                          wire0[(3'h6):(3'h4)] : $unsigned(wire16))));
  always
    @(posedge clk) begin
      if (wire2[(2'h3):(2'h3)])
        begin
          reg18 <= (($unsigned((wire3 ?
              wire15 : wire17)) && (~&wire3[(3'h5):(2'h2)])) >>> $unsigned((wire15 <= (wire16 ?
              wire2 : wire13))));
        end
      else
        begin
          reg18 <= wire15;
          reg19 <= (wire15[(4'hb):(1'h0)] <= ($signed(wire16) * wire13));
        end
      reg20 <= (($unsigned((wire0 ? wire0 : wire1)) ?
              ($signed(wire13) ? wire13[(1'h1):(1'h0)] : wire2) : (~|(reg19 ?
                  wire13 : wire16))) ?
          wire1[(1'h1):(1'h0)] : {((wire2 < wire13) <<< wire0[(2'h3):(2'h2)])});
      reg21 <= (~^wire13);
    end
  assign wire22 = ({{$unsigned(wire0)}} ?
                      $unsigned(wire13) : {((wire2 ? wire17 : wire3) ?
                              wire3 : (8'h9c))});
  assign wire23 = reg19;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire8;
  input wire signed [(3'h6):(1'h0)] wire7;
  input wire [(3'h4):(1'h0)] wire6;
  input wire [(4'h9):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire12;
  wire signed [(4'ha):(1'h0)] wire11;
  wire [(3'h6):(1'h0)] wire10;
  wire [(4'hb):(1'h0)] wire9;
  assign y = {wire12, wire11, wire10, wire9, (1'h0)};
  assign wire9 = wire5[(3'h6):(3'h6)];
  assign wire10 = ((($signed(wire7) ? $signed(wire5) : $signed(wire8)) ?
                          wire6[(1'h1):(1'h0)] : wire6[(2'h3):(2'h2)]) ?
                      ({wire5[(3'h7):(1'h1)]} ?
                          wire8 : $unsigned($signed(wire7))) : ({wire7[(2'h3):(1'h0)]} + wire8));
  assign wire11 = wire8;
  assign wire12 = wire7[(3'h5):(1'h1)];
endmodule