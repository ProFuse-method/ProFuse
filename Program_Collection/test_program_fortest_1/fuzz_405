(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param98 = {(8'ha8)})
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h58):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire0;
  input wire [(4'hb):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire3;
  wire signed [(3'h6):(1'h0)] wire96;
  wire [(3'h4):(1'h0)] wire95;
  wire [(2'h2):(1'h0)] wire93;
  wire signed [(4'hb):(1'h0)] wire4;
  wire [(3'h7):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire6;
  wire [(3'h6):(1'h0)] wire9;
  wire [(4'h8):(1'h0)] wire34;
  reg signed [(3'h7):(1'h0)] reg97 = (1'h0);
  reg [(3'h6):(1'h0)] reg36 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg8 = (1'h0);
  assign y = {wire96,
                 wire95,
                 wire93,
                 wire4,
                 wire5,
                 wire6,
                 wire9,
                 wire34,
                 reg97,
                 reg36,
                 reg7,
                 reg8,
                 (1'h0)};
  assign wire4 = (-$unsigned($signed($unsigned(wire0))));
  assign wire5 = wire2[(3'h7):(3'h6)];
  assign wire6 = (wire2 ?
                     {((~^wire1) <<< (wire3 - wire2))} : wire1[(3'h4):(3'h4)]);
  always
    @(posedge clk) begin
      if ((~wire5[(1'h1):(1'h1)]))
        begin
          reg7 <= (($signed(wire0[(2'h2):(1'h0)]) ?
                  wire4[(4'hb):(2'h2)] : $unsigned($signed(wire0))) ?
              wire2 : (wire6 >= wire5[(1'h1):(1'h0)]));
          reg8 <= $unsigned(((|{wire5}) ?
              wire3[(2'h2):(1'h1)] : wire0[(3'h4):(1'h1)]));
        end
      else
        begin
          if ($unsigned(wire3[(1'h1):(1'h1)]))
            begin
              reg7 <= (({reg8} ? (wire6 * $signed(wire3)) : wire1) ?
                  wire1[(4'hb):(4'ha)] : $signed($signed((reg7 || wire0))));
            end
          else
            begin
              reg7 <= ({{(&wire3)}} ?
                  $unsigned(wire0[(1'h1):(1'h1)]) : wire0[(3'h4):(1'h0)]);
            end
        end
    end
  assign wire9 = (wire0[(3'h4):(2'h2)] >>> wire1[(3'h6):(2'h2)]);
  module10 #() modinst35 (wire34, clk, wire5, wire3, reg8, wire9);
  always
    @(posedge clk) begin
      reg36 <= wire5[(3'h4):(3'h4)];
    end
  module37 #() modinst94 (.wire41(reg8), .wire40(reg7), .clk(clk), .wire39(wire0), .y(wire93), .wire38(wire4));
  assign wire95 = wire34[(4'h8):(2'h3)];
  assign wire96 = (-wire0);
  always
    @(posedge clk) begin
      reg97 <= (-($signed(wire5) ? (8'ha5) : $signed($unsigned((8'hac)))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module37  (y, clk, wire41, wire40, wire39, wire38);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire41;
  input wire signed [(4'h8):(1'h0)] wire40;
  input wire signed [(4'h9):(1'h0)] wire39;
  input wire [(4'hb):(1'h0)] wire38;
  wire signed [(4'h9):(1'h0)] wire92;
  wire [(3'h7):(1'h0)] wire91;
  wire [(3'h4):(1'h0)] wire89;
  wire signed [(3'h7):(1'h0)] wire87;
  wire signed [(2'h2):(1'h0)] wire86;
  wire [(4'hb):(1'h0)] wire85;
  wire [(3'h6):(1'h0)] wire84;
  wire signed [(3'h4):(1'h0)] wire83;
  wire [(3'h7):(1'h0)] wire81;
  wire signed [(3'h5):(1'h0)] wire67;
  reg [(4'ha):(1'h0)] reg90 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg88 = (1'h0);
  assign y = {wire92,
                 wire91,
                 wire89,
                 wire87,
                 wire86,
                 wire85,
                 wire84,
                 wire83,
                 wire81,
                 wire67,
                 reg90,
                 reg88,
                 (1'h0)};
  module42 #() modinst68 (.wire44(wire40), .y(wire67), .wire43(wire39), .wire45(wire41), .wire46(wire38), .clk(clk));
  module69 #() modinst82 (.clk(clk), .y(wire81), .wire73(wire39), .wire71(wire38), .wire72(wire40), .wire70(wire41));
  assign wire83 = $signed($signed((!(~wire81))));
  assign wire84 = (^wire67);
  assign wire85 = wire38[(3'h5):(2'h3)];
  assign wire86 = wire40[(1'h1):(1'h1)];
  assign wire87 = wire41;
  always
    @(posedge clk) begin
      reg88 <= ($unsigned(((|wire81) ? wire41 : {(8'hab)})) ?
          (($signed(wire86) ^~ (^wire84)) ?
              (&$signed(wire85)) : $unsigned((wire39 ?
                  wire87 : wire87))) : (wire84[(3'h6):(3'h6)] ?
              ($unsigned(wire87) > (wire83 ? wire41 : wire85)) : (8'ha6)));
    end
  assign wire89 = $unsigned($signed($signed((wire40 ? wire40 : wire84))));
  always
    @(posedge clk) begin
      reg90 <= wire85;
    end
  assign wire91 = (wire86[(2'h2):(1'h1)] != {wire67[(3'h5):(3'h5)]});
  assign wire92 = $signed(wire83[(2'h2):(2'h2)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h71):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire14;
  input wire signed [(2'h3):(1'h0)] wire13;
  input wire [(4'h8):(1'h0)] wire12;
  input wire signed [(2'h3):(1'h0)] wire11;
  wire [(4'ha):(1'h0)] wire33;
  wire signed [(4'h9):(1'h0)] wire32;
  wire signed [(4'hb):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire29;
  wire [(4'h9):(1'h0)] wire28;
  reg signed [(2'h3):(1'h0)] reg30 = (1'h0);
  reg [(2'h2):(1'h0)] reg27 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg25 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg24 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg21 = (1'h0);
  reg [(3'h5):(1'h0)] reg20 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg19 = (1'h0);
  reg [(2'h2):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg17 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg16 = (1'h0);
  reg [(2'h3):(1'h0)] reg15 = (1'h0);
  assign y = {wire33,
                 wire32,
                 wire31,
                 wire29,
                 wire28,
                 reg30,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire12[(4'h8):(1'h0)])
        begin
          reg15 <= (&wire11[(1'h1):(1'h0)]);
          if ((-{(^wire13[(1'h1):(1'h0)])}))
            begin
              reg16 <= wire14;
            end
          else
            begin
              reg16 <= (^(&{reg16[(2'h2):(2'h2)]}));
              reg17 <= $unsigned(((wire14 ~^ (wire13 ? (8'haf) : wire11)) ?
                  (wire13 ? reg16 : $signed(reg16)) : $unsigned((reg15 ?
                      reg15 : wire13))));
            end
          reg18 <= reg16;
        end
      else
        begin
          reg15 <= $signed((reg17[(1'h0):(1'h0)] ?
              wire11[(2'h3):(1'h0)] : $signed(reg15)));
          reg16 <= $signed((reg16 + ($signed(wire14) && $signed((8'h9e)))));
        end
      reg19 <= (|(reg18[(2'h2):(1'h0)] ?
          ($signed((8'ha3)) ? wire14[(2'h2):(1'h0)] : {reg16}) : (+wire12)));
    end
  always
    @(posedge clk) begin
      reg20 <= (reg18[(2'h2):(2'h2)] + $signed((reg17[(2'h3):(1'h1)] ?
          (8'ha1) : {wire12})));
      if (wire14)
        begin
          reg21 <= wire12;
        end
      else
        begin
          if ($unsigned(wire12[(1'h0):(1'h0)]))
            begin
              reg21 <= wire11[(2'h3):(2'h3)];
              reg22 <= $unsigned((!(-reg18)));
            end
          else
            begin
              reg21 <= reg19[(2'h3):(2'h3)];
            end
          reg23 <= $unsigned(reg22[(2'h3):(1'h0)]);
          if (((($unsigned(reg18) == $unsigned(reg20)) > (~^(wire12 ?
                  reg23 : reg15))) ?
              wire12 : reg16[(2'h3):(2'h2)]))
            begin
              reg24 <= ($unsigned(reg19) != $signed((8'ha8)));
              reg25 <= (-reg17);
              reg26 <= reg16;
            end
          else
            begin
              reg24 <= reg20;
            end
        end
      reg27 <= reg18;
    end
  assign wire28 = wire14[(1'h0):(1'h0)];
  assign wire29 = (wire14 ?
                      reg19[(3'h5):(1'h0)] : (reg27[(2'h2):(2'h2)] ?
                          $signed(wire11) : (reg25[(2'h3):(2'h3)] ^ (wire11 <<< reg23))));
  always
    @(posedge clk) begin
      reg30 <= $unsigned($signed(($unsigned(wire28) == (reg24 ~^ wire11))));
    end
  assign wire31 = reg26[(1'h0):(1'h0)];
  assign wire32 = ((~^wire29) ? reg20[(2'h3):(1'h0)] : reg27);
  assign wire33 = (~^wire11);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module69
#(parameter param80 = ((!(((8'ha1) + (8'h9f)) ? ((8'h9f) ? (8'hab) : (8'ha7)) : ((8'hb0) == (8'hb0)))) ? ({((8'hb0) ? (8'hb0) : (8'h9e))} ? (8'ha0) : (((8'hab) ~^ (8'had)) ? ((8'ha6) | (8'ha8)) : ((8'h9d) != (8'h9e)))) : ((((8'h9c) ? (8'h9c) : (8'ha3)) ? {(8'ha0)} : ((8'hae) ? (8'h9c) : (8'ha3))) ? {(!(8'ha7))} : {(8'ha2)})))
(y, clk, wire73, wire72, wire71, wire70);
  output wire [(32'h29):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire73;
  input wire [(3'h7):(1'h0)] wire72;
  input wire [(3'h4):(1'h0)] wire71;
  input wire signed [(2'h3):(1'h0)] wire70;
  wire [(2'h3):(1'h0)] wire79;
  wire [(4'hb):(1'h0)] wire78;
  wire signed [(3'h4):(1'h0)] wire77;
  wire signed [(4'h9):(1'h0)] wire76;
  wire [(3'h7):(1'h0)] wire75;
  wire [(3'h6):(1'h0)] wire74;
  assign y = {wire79, wire78, wire77, wire76, wire75, wire74, (1'h0)};
  assign wire74 = ($unsigned(((wire70 >> wire73) ? $signed(wire73) : wire70)) ?
                      ($unsigned(wire72) == ({wire71} ^~ {wire73})) : $signed((8'ha7)));
  assign wire75 = $unsigned(((wire71 ? $unsigned(wire72) : (!(8'h9c))) ?
                      $signed((^wire72)) : $unsigned({(8'h9c)})));
  assign wire76 = wire74[(3'h6):(1'h1)];
  assign wire77 = $unsigned(wire76[(3'h6):(1'h0)]);
  assign wire78 = ((~(wire70[(2'h3):(2'h2)] ?
                      $unsigned(wire76) : $unsigned(wire76))) >>> wire72);
  assign wire79 = $signed($unsigned((wire70 || (wire73 && (8'h9f)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module42
#(parameter param66 = {(&(((8'ha3) ? (8'hab) : (8'ha1)) - {(8'h9c)}))})
(y, clk, wire46, wire45, wire44, wire43);
  output wire [(32'h5f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire46;
  input wire signed [(3'h5):(1'h0)] wire45;
  input wire signed [(4'h8):(1'h0)] wire44;
  input wire [(4'h9):(1'h0)] wire43;
  wire [(2'h2):(1'h0)] wire65;
  wire signed [(2'h3):(1'h0)] wire64;
  wire signed [(4'hb):(1'h0)] wire63;
  wire [(2'h2):(1'h0)] wire62;
  wire [(3'h5):(1'h0)] wire51;
  wire [(3'h4):(1'h0)] wire50;
  wire signed [(3'h7):(1'h0)] wire49;
  wire [(2'h2):(1'h0)] wire48;
  wire signed [(3'h5):(1'h0)] wire47;
  reg signed [(2'h2):(1'h0)] reg61 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg60 = (1'h0);
  reg [(3'h6):(1'h0)] reg59 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg58 = (1'h0);
  reg [(4'hb):(1'h0)] reg57 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg56 = (1'h0);
  reg [(2'h3):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg54 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg53 = (1'h0);
  reg [(2'h3):(1'h0)] reg52 = (1'h0);
  assign y = {wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 reg61,
                 reg60,
                 reg59,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 (1'h0)};
  assign wire47 = (~&(((wire46 ? wire43 : wire46) == (wire44 ?
                      wire45 : wire43)) + (~|$signed((8'hb0)))));
  assign wire48 = (8'h9c);
  assign wire49 = wire45[(2'h3):(2'h3)];
  assign wire50 = $unsigned(((wire43[(1'h0):(1'h0)] ?
                      $unsigned(wire46) : $unsigned(wire45)) >>> wire44[(3'h7):(3'h7)]));
  assign wire51 = $signed(($signed((wire47 ? wire48 : wire44)) ?
                      $signed(wire47[(2'h2):(2'h2)]) : {(^~wire45)}));
  always
    @(posedge clk) begin
      if ($unsigned(wire45[(1'h1):(1'h1)]))
        begin
          reg52 <= (^$unsigned(wire46[(3'h7):(3'h5)]));
          if (wire46)
            begin
              reg53 <= $signed($unsigned((+$unsigned((8'h9e)))));
            end
          else
            begin
              reg53 <= $signed(wire50);
              reg54 <= (8'h9f);
            end
        end
      else
        begin
          reg52 <= $unsigned($signed($signed($signed(wire48))));
          reg53 <= $signed($signed($unsigned((wire43 ? wire50 : reg53))));
          reg54 <= {$unsigned(wire47[(1'h1):(1'h1)])};
        end
      reg55 <= reg54[(3'h4):(2'h3)];
    end
  always
    @(posedge clk) begin
      reg56 <= $unsigned((wire48[(1'h0):(1'h0)] & $signed({(8'hb0)})));
      if ($signed((($unsigned(reg54) > reg54) ? (8'hab) : $signed(wire46))))
        begin
          reg57 <= {reg56};
          if ((reg55[(1'h0):(1'h0)] >> $unsigned({$signed(reg56)})))
            begin
              reg58 <= (!((8'haf) ?
                  $signed((wire44 <= reg52)) : $signed((wire46 ?
                      reg53 : wire43))));
            end
          else
            begin
              reg58 <= ($signed((reg58[(2'h2):(1'h1)] < wire47[(1'h1):(1'h1)])) && wire50[(2'h2):(1'h1)]);
              reg59 <= {reg58};
              reg60 <= (($unsigned(wire47) ?
                      ((wire48 | reg59) > wire44) : ((~wire44) ?
                          (wire50 ?
                              (8'hb0) : wire46) : wire43[(3'h5):(2'h3)])) ?
                  reg56 : (reg56 ? {(|wire43)} : $unsigned($unsigned(reg53))));
            end
        end
      else
        begin
          reg57 <= (~((~(wire49 ? (8'haa) : reg58)) ?
              reg53 : $signed(wire46[(3'h6):(2'h2)])));
          reg58 <= (8'ha4);
          if ((reg58[(2'h2):(2'h2)] ?
              ($signed((reg59 ? wire51 : wire45)) == wire50) : (wire48 ?
                  $signed(wire47) : (~(wire50 - (8'haa))))))
            begin
              reg59 <= $unsigned(wire47[(2'h3):(2'h2)]);
              reg60 <= ($signed(wire44[(3'h4):(2'h3)]) ?
                  ($signed((~&wire43)) ?
                      ($signed(wire44) & $unsigned((8'haa))) : (wire50 ?
                          (wire51 ^ reg52) : (wire43 ?
                              wire46 : (8'hb0)))) : reg60);
              reg61 <= wire47;
            end
          else
            begin
              reg59 <= $unsigned((!reg59));
            end
        end
    end
  assign wire62 = wire47;
  assign wire63 = $signed($signed((-(^~reg57))));
  assign wire64 = wire49[(2'h2):(2'h2)];
  assign wire65 = $unsigned((((8'hab) << {reg52}) * wire46));
endmodule