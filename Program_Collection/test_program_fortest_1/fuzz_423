(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param39 = ((~&(((8'hae) | (8'h9e)) != ((8'ha2) ? (8'ha0) : (8'ha2)))) ? ({(!(8'hae))} << (((8'h9d) ~^ (8'ha4)) ? (&(8'ha0)) : ((8'ha4) < (8'hb0)))) : ((^((8'ha5) ~^ (8'h9c))) ? (((8'ha6) || (8'ha6)) - ((8'ha7) ? (8'ha4) : (8'ha4))) : {(~^(8'ha6))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h74):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire38;
  wire [(2'h3):(1'h0)] wire37;
  wire signed [(3'h7):(1'h0)] wire34;
  wire signed [(4'h8):(1'h0)] wire33;
  wire signed [(3'h5):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire27;
  wire signed [(4'h8):(1'h0)] wire26;
  wire [(3'h5):(1'h0)] wire24;
  wire signed [(3'h6):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  reg [(4'hb):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg35 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg31 = (1'h0);
  reg [(3'h5):(1'h0)] reg30 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg29 = (1'h0);
  reg [(3'h7):(1'h0)] reg28 = (1'h0);
  assign y = {wire38,
                 wire37,
                 wire34,
                 wire33,
                 wire32,
                 wire27,
                 wire26,
                 wire24,
                 wire5,
                 wire4,
                 reg36,
                 reg35,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 (1'h0)};
  assign wire4 = (8'ha2);
  assign wire5 = $unsigned((wire3[(4'h9):(1'h1)] ?
                     (wire0 << (^~(8'ha4))) : ((wire2 <<< wire4) ?
                         wire0 : wire1)));
  module6 #() modinst25 (wire24, clk, wire5, wire4, wire3, wire1);
  assign wire26 = (-(((wire5 ? (8'h9c) : wire5) ?
                      (wire2 >> wire4) : $signed(wire0)) * {$signed(wire0)}));
  assign wire27 = $signed((($unsigned(wire4) ?
                      {wire4} : wire3) != $signed(wire3)));
  always
    @(posedge clk) begin
      reg28 <= $signed(($signed($unsigned(wire4)) << wire27));
      if ($unsigned(wire2[(3'h4):(2'h3)]))
        begin
          if (wire2[(2'h3):(2'h3)])
            begin
              reg29 <= $unsigned((8'had));
            end
          else
            begin
              reg29 <= (^~reg29);
              reg30 <= (~(~wire26[(2'h3):(2'h2)]));
              reg31 <= ($signed($unsigned(wire26[(4'h8):(3'h5)])) & $signed($unsigned($unsigned((8'ha2)))));
            end
        end
      else
        begin
          if ($signed((&{wire3[(2'h3):(1'h0)]})))
            begin
              reg29 <= (wire3[(1'h0):(1'h0)] > ((wire24[(1'h1):(1'h1)] ?
                  $signed(wire27) : $unsigned(wire0)) <= (((8'haf) == reg29) || (reg31 == wire5))));
              reg30 <= $unsigned(reg28[(1'h0):(1'h0)]);
              reg31 <= reg28;
            end
          else
            begin
              reg29 <= (|wire24);
              reg30 <= wire4[(4'h8):(3'h7)];
              reg31 <= wire26;
            end
        end
    end
  assign wire32 = reg30;
  assign wire33 = ((reg28[(1'h1):(1'h0)] ^~ reg31[(3'h4):(3'h4)]) ?
                      (-$unsigned(wire4[(1'h1):(1'h0)])) : ($unsigned($signed(wire1)) <= ($unsigned(wire32) ?
                          (wire32 ? wire27 : wire5) : (^~wire3))));
  assign wire34 = $unsigned($signed($unsigned(((8'ha6) ? wire33 : wire32))));
  always
    @(posedge clk) begin
      reg35 <= ((reg29 & ($signed(wire2) ?
          (+wire24) : (+wire1))) > (&((-wire3) ?
          wire2[(1'h0):(1'h0)] : {wire34})));
      reg36 <= wire32;
    end
  assign wire37 = $signed(((^~(~|reg29)) & $signed({wire4})));
  assign wire38 = ({($unsigned((8'ha2)) ?
                          (wire2 >>> wire32) : (wire26 && (8'hab)))} - $unsigned($signed(((8'h9e) ?
                      wire33 : reg29))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param23 = (({((8'h9c) << (8'ha1))} <<< (((8'ha0) <= (8'h9f)) ^~ (^~(8'h9d)))) ^ (^((&(8'haf)) ? ((8'h9d) ? (8'ha1) : (8'ha3)) : ((8'h9c) ? (8'hb0) : (8'hae))))))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h4d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire10;
  input wire signed [(4'ha):(1'h0)] wire9;
  input wire [(3'h5):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire7;
  wire [(3'h4):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire21;
  wire signed [(4'h8):(1'h0)] wire20;
  wire [(3'h6):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire18;
  wire [(2'h2):(1'h0)] wire17;
  wire [(3'h4):(1'h0)] wire16;
  wire [(3'h6):(1'h0)] wire15;
  reg signed [(3'h4):(1'h0)] reg14 = (1'h0);
  reg [(3'h5):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg12 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg11 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg11 <= (wire9[(3'h7):(1'h1)] < {((+wire7) | ((8'hac) ?
              wire10 : wire7))});
      reg12 <= wire7;
    end
  always
    @(posedge clk) begin
      reg13 <= wire10[(2'h3):(1'h0)];
      reg14 <= ((($signed(reg12) ?
              $unsigned(wire7) : (reg12 <= wire10)) >= ((wire9 ?
                  reg12 : reg12) ?
              $unsigned((8'ha5)) : ((8'haf) ? (8'ha9) : wire7))) ?
          $signed((((8'haf) && reg12) ?
              reg12[(3'h4):(1'h0)] : $signed(reg11))) : $signed(reg12));
    end
  assign wire15 = ((~^wire7) ? reg13[(3'h5):(2'h2)] : wire9[(4'ha):(3'h7)]);
  assign wire16 = reg12[(3'h6):(3'h4)];
  assign wire17 = $signed({{(reg11 ? (8'h9e) : wire7)}});
  assign wire18 = {(-{{reg14}})};
  assign wire19 = $signed($unsigned(($unsigned((8'h9f)) > {wire8})));
  assign wire20 = $signed((wire16 <<< reg11[(4'hb):(3'h5)]));
  assign wire21 = $unsigned(($signed($unsigned((8'hb0))) | (^wire18)));
  assign wire22 = (+wire20[(3'h4):(2'h2)]);
endmodule