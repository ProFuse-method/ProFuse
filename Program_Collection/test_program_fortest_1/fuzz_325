(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h8e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire94;
  wire [(4'ha):(1'h0)] wire93;
  wire signed [(4'hb):(1'h0)] wire86;
  wire [(3'h5):(1'h0)] wire85;
  wire [(2'h3):(1'h0)] wire84;
  wire signed [(4'hb):(1'h0)] wire82;
  wire signed [(4'h9):(1'h0)] wire80;
  wire signed [(4'hb):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg92 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg91 = (1'h0);
  reg [(3'h4):(1'h0)] reg90 = (1'h0);
  reg [(3'h6):(1'h0)] reg89 = (1'h0);
  reg [(3'h7):(1'h0)] reg88 = (1'h0);
  reg [(4'hb):(1'h0)] reg87 = (1'h0);
  assign y = {wire94,
                 wire93,
                 wire86,
                 wire85,
                 wire84,
                 wire82,
                 wire80,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg92,
                 reg91,
                 reg90,
                 reg89,
                 reg88,
                 reg87,
                 (1'h0)};
  assign wire4 = (^~wire2);
  assign wire5 = {wire0[(1'h1):(1'h1)]};
  assign wire6 = $signed((8'ha2));
  assign wire7 = (~&$unsigned(wire3[(2'h2):(1'h1)]));
  module8 #() modinst81 (wire80, clk, wire0, wire6, wire5, wire2);
  module36 #() modinst83 (.y(wire82), .wire40(wire3), .wire38(wire5), .clk(clk), .wire37(wire1), .wire39(wire2));
  assign wire84 = $unsigned(wire2);
  assign wire85 = (~&$unsigned({(~&wire4)}));
  assign wire86 = $unsigned((^(((8'hac) ? wire4 : wire7) || (8'h9d))));
  always
    @(posedge clk) begin
      reg87 <= ({$unsigned(wire5)} ^~ (wire3 <<< $signed((^~wire85))));
      reg88 <= wire7;
      if (($unsigned(wire82[(3'h6):(3'h5)]) ?
          (8'ha6) : ($signed({wire1}) ?
              (wire84[(1'h0):(1'h0)] ?
                  wire4 : ((8'ha6) ? (8'h9c) : wire3)) : {$signed(reg87)})))
        begin
          if ((8'hab))
            begin
              reg89 <= {($unsigned((&wire6)) ?
                      (~^reg88[(2'h3):(2'h2)]) : (wire80[(3'h4):(2'h3)] | (~^wire2)))};
            end
          else
            begin
              reg89 <= wire0;
            end
        end
      else
        begin
          reg89 <= (wire5[(3'h4):(1'h1)] ?
              ((~^wire82) & (^(~|wire3))) : (&wire1[(2'h2):(1'h1)]));
          if ($unsigned(reg89))
            begin
              reg90 <= $unsigned(reg88[(2'h3):(2'h3)]);
              reg91 <= wire7;
            end
          else
            begin
              reg90 <= (~(~^wire1[(3'h6):(2'h3)]));
            end
          reg92 <= wire7[(4'h8):(2'h2)];
        end
    end
  assign wire93 = $signed($unsigned($signed(wire1[(2'h3):(2'h2)])));
  assign wire94 = {(8'hae)};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param79 = (((((8'h9e) ? (8'ha0) : (8'h9d)) >= ((8'hb0) ? (8'hab) : (8'ha2))) ? (((8'hab) > (8'ha4)) | ((8'hae) << (8'h9c))) : (((8'ha5) ? (8'hae) : (8'hb0)) & (&(8'h9d)))) << (({(8'ha7)} ? ((8'haf) ? (8'had) : (8'hae)) : ((8'ha1) > (8'hab))) << ({(8'ha9)} ? ((8'hb0) ? (8'ha7) : (8'h9d)) : (~|(8'ha4))))))
(y, clk, wire9, wire10, wire11, wire12);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire10;
  input wire signed [(3'h7):(1'h0)] wire11;
  input wire signed [(3'h4):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire77;
  wire signed [(3'h4):(1'h0)] wire13;
  wire signed [(2'h2):(1'h0)] wire14;
  wire signed [(4'hb):(1'h0)] wire15;
  wire signed [(3'h6):(1'h0)] wire16;
  wire [(4'h8):(1'h0)] wire32;
  wire [(4'ha):(1'h0)] wire34;
  wire signed [(4'h8):(1'h0)] wire35;
  wire signed [(3'h4):(1'h0)] wire70;
  wire [(2'h3):(1'h0)] wire72;
  wire [(3'h6):(1'h0)] wire75;
  reg signed [(4'h8):(1'h0)] reg78 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg73 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg74 = (1'h0);
  assign y = {wire77,
                 wire13,
                 wire14,
                 wire15,
                 wire16,
                 wire32,
                 wire34,
                 wire35,
                 wire70,
                 wire72,
                 wire75,
                 reg78,
                 reg73,
                 reg74,
                 (1'h0)};
  assign wire13 = (|(+($signed(wire9) ? (wire9 >= wire12) : (~|wire9))));
  assign wire14 = (8'ha2);
  assign wire15 = $unsigned((wire9 + ($signed(wire9) ?
                      wire14 : $unsigned(wire12))));
  assign wire16 = $signed(wire13[(1'h1):(1'h1)]);
  module17 #() modinst33 (wire32, clk, wire11, wire10, wire16, wire15);
  assign wire34 = (|(!(wire12 && (wire10 ? wire10 : (8'hab)))));
  assign wire35 = $signed(wire14[(1'h1):(1'h1)]);
  module36 #() modinst71 (wire70, clk, wire34, wire9, wire35, wire13);
  assign wire72 = (($unsigned((wire15 ? wire32 : wire9)) < {$signed((8'ha5))}) ?
                      $signed(((8'ha9) ?
                          (wire12 ?
                              wire15 : wire35) : (~&wire10))) : ((^$signed(wire15)) << ((wire11 & wire15) ?
                          (wire9 && wire70) : $signed(wire11))));
  always
    @(posedge clk) begin
      reg73 <= $signed($signed($signed(wire11)));
      reg74 <= (-wire12);
    end
  module36 #() modinst76 (.y(wire75), .wire39(wire15), .clk(clk), .wire37(wire12), .wire40(wire13), .wire38(reg73));
  assign wire77 = {(wire34[(4'ha):(1'h0)] > wire72)};
  always
    @(posedge clk) begin
      reg78 <= (~(($signed(wire10) ? wire11 : (~&(8'had))) ?
          wire75[(3'h5):(2'h3)] : $unsigned($unsigned(wire72))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module36
#(parameter param69 = ({(((8'ha1) && (8'hac)) ? (^(8'hab)) : ((8'ha7) < (8'hae)))} ~^ ({((8'ha5) <= (8'h9e))} ? (((8'ha1) == (8'h9f)) ^ {(8'hb0)}) : (((8'ha5) ? (8'ha0) : (8'haf)) >= {(8'ha8)}))))
(y, clk, wire40, wire39, wire38, wire37);
  output wire [(32'hc4):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire40;
  input wire [(4'hb):(1'h0)] wire39;
  input wire signed [(4'h8):(1'h0)] wire38;
  input wire [(3'h4):(1'h0)] wire37;
  wire signed [(4'h9):(1'h0)] wire68;
  wire [(3'h5):(1'h0)] wire67;
  wire [(2'h2):(1'h0)] wire66;
  wire [(4'h8):(1'h0)] wire65;
  wire [(4'h9):(1'h0)] wire58;
  wire [(3'h4):(1'h0)] wire57;
  wire [(3'h6):(1'h0)] wire56;
  wire signed [(4'ha):(1'h0)] wire50;
  wire [(2'h2):(1'h0)] wire49;
  reg [(3'h4):(1'h0)] reg64 = (1'h0);
  reg [(3'h6):(1'h0)] reg63 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg62 = (1'h0);
  reg [(4'h8):(1'h0)] reg61 = (1'h0);
  reg [(2'h3):(1'h0)] reg60 = (1'h0);
  reg [(4'h9):(1'h0)] reg59 = (1'h0);
  reg [(4'ha):(1'h0)] reg55 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg54 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg52 = (1'h0);
  reg [(3'h5):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg47 = (1'h0);
  reg [(4'ha):(1'h0)] reg46 = (1'h0);
  reg [(3'h4):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg44 = (1'h0);
  reg [(4'h8):(1'h0)] reg43 = (1'h0);
  reg [(4'ha):(1'h0)] reg42 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg41 = (1'h0);
  assign y = {wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire58,
                 wire57,
                 wire56,
                 wire50,
                 wire49,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (((|{wire39}) ?
          wire39 : ((wire37 ~^ $unsigned(wire38)) ~^ (&(wire39 ?
              wire39 : wire37)))))
        begin
          if (wire38)
            begin
              reg41 <= $unsigned({$unsigned(wire38)});
              reg42 <= $signed($unsigned(reg41[(2'h2):(2'h2)]));
              reg43 <= (^~wire38);
            end
          else
            begin
              reg41 <= $unsigned((reg42 ^~ wire39[(3'h4):(2'h2)]));
            end
          if ((8'ha1))
            begin
              reg44 <= (8'h9c);
              reg45 <= ($unsigned($signed(reg43)) ?
                  wire38 : wire40[(1'h1):(1'h1)]);
              reg46 <= ($unsigned({(reg42 <= reg45)}) ?
                  $unsigned(((&reg45) ?
                      $unsigned(wire38) : (reg45 < wire37))) : $unsigned(wire37));
            end
          else
            begin
              reg44 <= ((reg44[(3'h4):(2'h3)] - (!reg43[(2'h3):(1'h0)])) ~^ (~reg42[(4'ha):(3'h6)]));
              reg45 <= ($unsigned($unsigned(wire37)) || $unsigned(reg42[(4'ha):(2'h2)]));
              reg46 <= reg41;
            end
        end
      else
        begin
          reg41 <= ($unsigned(((reg42 ? (8'had) : reg46) != (^~reg46))) ?
              (wire37 ?
                  (~&reg42) : (wire37[(2'h2):(2'h2)] - reg45)) : reg41[(4'h8):(4'h8)]);
          if ((&(^~reg41[(1'h0):(1'h0)])))
            begin
              reg42 <= {wire37};
            end
          else
            begin
              reg42 <= $unsigned($signed($signed(reg46[(2'h3):(2'h2)])));
              reg43 <= wire39;
              reg44 <= wire38[(3'h5):(3'h5)];
            end
        end
    end
  always
    @(posedge clk) begin
      reg47 <= wire37[(2'h3):(2'h3)];
      reg48 <= reg45;
    end
  assign wire49 = {({(&reg43)} || ($signed(wire40) & reg43))};
  assign wire50 = ((~^((~(8'h9d)) ? (reg44 ? reg42 : reg48) : (|reg46))) ?
                      reg44[(1'h0):(1'h0)] : reg43[(3'h4):(1'h0)]);
  always
    @(posedge clk) begin
      reg51 <= ($unsigned(wire49) <<< (~^$unsigned(((8'ha3) ? reg43 : reg48))));
      reg52 <= ((&wire39[(4'h8):(3'h5)]) << ((reg51 >= $signed(reg51)) ?
          ($unsigned(wire38) << $unsigned(reg51)) : reg42[(3'h5):(1'h1)]));
      if ({(+reg48[(4'ha):(1'h0)])})
        begin
          reg53 <= reg41;
          reg54 <= ({(wire50[(1'h0):(1'h0)] ^ wire49)} ?
              $unsigned({(^~reg52)}) : (wire37[(1'h0):(1'h0)] ?
                  wire37[(3'h4):(1'h1)] : {(reg45 != wire37)}));
          reg55 <= reg52;
        end
      else
        begin
          if ({reg46[(3'h5):(2'h3)]})
            begin
              reg53 <= reg48[(1'h0):(1'h0)];
            end
          else
            begin
              reg53 <= (8'ha4);
            end
          reg54 <= reg44;
          reg55 <= ($signed((^$signed(reg55))) ?
              wire39[(4'ha):(4'h9)] : (wire40 * wire40[(2'h2):(1'h0)]));
        end
    end
  assign wire56 = ($unsigned((~^(reg55 ? reg53 : reg46))) ?
                      $signed($signed((wire50 + (8'ha9)))) : (reg41[(3'h4):(2'h3)] ?
                          (^(wire38 >= reg52)) : ((reg43 < reg53) ?
                              {wire40} : $unsigned(reg48))));
  assign wire57 = $signed(wire50[(3'h4):(2'h2)]);
  assign wire58 = (^wire57[(2'h2):(2'h2)]);
  always
    @(posedge clk) begin
      reg59 <= $signed((+(wire57 >= {reg43})));
      if ((wire56 | (reg44 <<< {(wire58 < reg55)})))
        begin
          reg60 <= reg51[(2'h2):(1'h0)];
        end
      else
        begin
          reg60 <= (reg47 - (((reg44 || reg42) ?
              ((8'hab) ^ reg59) : (~^reg48)) > reg42[(1'h0):(1'h0)]));
          reg61 <= wire58;
          if ($unsigned($unsigned((^reg42[(4'h8):(2'h3)]))))
            begin
              reg62 <= (^(8'ha2));
              reg63 <= {wire57[(3'h4):(1'h1)]};
              reg64 <= ($signed($signed((reg48 >>> reg62))) >= (((&wire39) && {(8'hae)}) ?
                  reg52[(3'h7):(3'h6)] : $signed((reg48 ? (8'ha2) : (8'ha4)))));
            end
          else
            begin
              reg62 <= (~|reg52[(2'h3):(2'h2)]);
            end
        end
    end
  assign wire65 = reg62;
  assign wire66 = (|$signed($signed($signed(reg46))));
  assign wire67 = (^~$signed(($unsigned((8'ha5)) ?
                      reg47[(2'h2):(1'h0)] : (reg43 ? reg43 : wire37))));
  assign wire68 = ({wire66} || $signed((^~reg48[(4'hb):(3'h6)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17  (y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire21;
  input wire [(4'h9):(1'h0)] wire20;
  input wire [(3'h6):(1'h0)] wire19;
  input wire [(4'ha):(1'h0)] wire18;
  wire signed [(4'hb):(1'h0)] wire31;
  wire [(3'h5):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire29;
  wire signed [(4'hb):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire27;
  wire [(2'h3):(1'h0)] wire26;
  wire [(4'hb):(1'h0)] wire25;
  reg [(4'ha):(1'h0)] reg24 = (1'h0);
  reg [(4'ha):(1'h0)] reg23 = (1'h0);
  reg [(3'h6):(1'h0)] reg22 = (1'h0);
  assign y = {wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg22 <= ({(~&$unsigned(wire18))} << wire21);
      reg23 <= (((~^reg22) ? (~(wire19 ? wire21 : (8'h9c))) : wire18) - wire21);
      reg24 <= reg23[(1'h0):(1'h0)];
    end
  assign wire25 = $signed((((reg22 ^ reg24) <<< $unsigned((8'hac))) == reg22));
  assign wire26 = reg23[(3'h4):(2'h2)];
  assign wire27 = $unsigned(wire25[(4'hb):(1'h0)]);
  assign wire28 = {(wire27 << (8'ha9))};
  assign wire29 = (^reg24[(2'h3):(2'h3)]);
  assign wire30 = wire20;
  assign wire31 = (wire30[(1'h1):(1'h0)] | $signed(($unsigned(wire28) | $unsigned(wire29))));
endmodule