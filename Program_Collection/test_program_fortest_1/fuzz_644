(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param55 = {((((8'hac) << (8'haf)) ~^ ((8'h9e) <= (8'ha8))) ? (((8'ha9) >>> (8'ha2)) << ((8'ha7) ? (8'h9e) : (8'hac))) : (|(^(8'h9c))))})
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h7d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire0;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire3;
  wire [(4'h8):(1'h0)] wire54;
  wire signed [(3'h4):(1'h0)] wire53;
  wire signed [(4'ha):(1'h0)] wire52;
  wire [(2'h3):(1'h0)] wire48;
  wire signed [(3'h7):(1'h0)] wire47;
  wire signed [(3'h4):(1'h0)] wire7;
  wire signed [(3'h4):(1'h0)] wire40;
  wire signed [(4'h9):(1'h0)] wire50;
  reg signed [(4'ha):(1'h0)] reg46 = (1'h0);
  reg [(2'h3):(1'h0)] reg45 = (1'h0);
  reg [(4'ha):(1'h0)] reg44 = (1'h0);
  reg [(4'h9):(1'h0)] reg43 = (1'h0);
  reg [(3'h5):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg4 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg5 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg6 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg8 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg9 = (1'h0);
  assign y = {wire54,
                 wire53,
                 wire52,
                 wire48,
                 wire47,
                 wire7,
                 wire40,
                 wire50,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg4,
                 reg5,
                 reg6,
                 reg8,
                 reg9,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= (((8'haf) && $unsigned((8'hb0))) ~^ (~|wire2[(2'h3):(1'h0)]));
      reg5 <= $unsigned({{(-wire0)}});
      reg6 <= {(reg5 ? $unsigned({wire3}) : wire1)};
    end
  assign wire7 = $unsigned(((~^(^reg6)) ?
                     $unsigned($unsigned(wire2)) : (^(wire3 ?
                         reg6 : (8'ha5)))));
  always
    @(posedge clk) begin
      reg8 <= wire1[(2'h3):(1'h0)];
      reg9 <= (8'ha9);
    end
  module10 #() modinst41 (wire40, clk, reg4, wire2, reg9, reg8);
  always
    @(posedge clk) begin
      reg42 <= (~&reg4);
      if ($signed({(+{reg5})}))
        begin
          if (reg42)
            begin
              reg43 <= {(wire3[(3'h4):(1'h0)] && $unsigned($signed(wire3)))};
              reg44 <= ((($unsigned(wire40) <= wire40) <<< (~^(reg6 ?
                      reg5 : reg4))) ?
                  $signed((~|wire3)) : $unsigned($unsigned($signed(wire2))));
              reg45 <= (^((^(wire1 <= wire7)) << ((&wire3) - wire0)));
            end
          else
            begin
              reg43 <= wire40;
            end
        end
      else
        begin
          if ((reg44 ? reg42 : {(8'haa)}))
            begin
              reg43 <= $unsigned($signed({(~|reg43)}));
            end
          else
            begin
              reg43 <= wire3;
              reg44 <= reg45;
              reg45 <= reg44[(3'h5):(1'h0)];
            end
        end
    end
  always
    @(posedge clk) begin
      reg46 <= $signed($unsigned(((^~(8'hab)) & $signed(wire40))));
    end
  assign wire47 = reg46[(3'h6):(3'h6)];
  module10 #() modinst49 (.clk(clk), .wire14(reg4), .wire12(reg46), .wire11(reg44), .wire13(wire47), .y(wire48));
  module10 #() modinst51 (wire50, clk, reg42, reg9, wire0, reg44);
  assign wire52 = reg45;
  assign wire53 = reg46[(4'h8):(4'h8)];
  assign wire54 = reg5;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire14;
  input wire [(3'h7):(1'h0)] wire13;
  input wire signed [(4'ha):(1'h0)] wire12;
  input wire signed [(4'ha):(1'h0)] wire11;
  wire [(3'h7):(1'h0)] wire39;
  wire signed [(4'h8):(1'h0)] wire38;
  wire [(4'h8):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire20;
  wire [(4'hb):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire18;
  wire signed [(4'ha):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire16;
  wire [(3'h6):(1'h0)] wire15;
  assign y = {wire39,
                 wire38,
                 wire36,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 (1'h0)};
  assign wire15 = ((&wire12) ?
                      $unsigned((wire12 >>> (wire11 ?
                          wire12 : wire12))) : $unsigned(wire11));
  assign wire16 = $signed((($signed(wire13) ? wire12 : (~^wire14)) ?
                      wire13[(2'h3):(2'h3)] : wire12[(2'h3):(2'h2)]));
  assign wire17 = wire16[(2'h3):(1'h0)];
  assign wire18 = $unsigned($unsigned(wire16[(3'h6):(2'h3)]));
  assign wire19 = $signed((wire18 > wire11[(1'h0):(1'h0)]));
  assign wire20 = ($unsigned(wire18) < ($signed($unsigned(wire19)) + ((wire12 > wire17) ^~ (^(8'h9c)))));
  module21 #() modinst37 (wire36, clk, wire12, wire11, wire18, wire17);
  assign wire38 = wire15[(2'h3):(2'h2)];
  assign wire39 = wire20;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21  (y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h49):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire25;
  input wire [(4'ha):(1'h0)] wire24;
  input wire signed [(4'hb):(1'h0)] wire23;
  input wire signed [(4'ha):(1'h0)] wire22;
  wire signed [(3'h4):(1'h0)] wire35;
  wire signed [(4'ha):(1'h0)] wire34;
  wire signed [(2'h2):(1'h0)] wire33;
  wire signed [(3'h7):(1'h0)] wire32;
  wire [(4'hb):(1'h0)] wire30;
  wire signed [(4'h8):(1'h0)] wire29;
  wire signed [(3'h4):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire27;
  wire signed [(3'h6):(1'h0)] wire26;
  reg signed [(4'hb):(1'h0)] reg31 = (1'h0);
  assign y = {wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 reg31,
                 (1'h0)};
  assign wire26 = (^~$signed((wire22[(3'h7):(3'h4)] - wire24)));
  assign wire27 = wire25[(1'h1):(1'h0)];
  assign wire28 = (($signed((wire23 & wire23)) >= (wire27[(3'h4):(2'h2)] ?
                      wire25 : (wire24 ?
                          wire25 : wire25))) ~^ $signed(wire22[(4'ha):(2'h2)]));
  assign wire29 = wire28[(2'h2):(1'h0)];
  assign wire30 = (-$signed((~&$signed(wire22))));
  always
    @(posedge clk) begin
      reg31 <= (wire25[(1'h0):(1'h0)] < $unsigned(($unsigned(wire26) | $signed((8'h9c)))));
    end
  assign wire32 = $signed((~^wire23));
  assign wire33 = wire25;
  assign wire34 = reg31[(2'h3):(1'h1)];
  assign wire35 = (8'hab);
endmodule