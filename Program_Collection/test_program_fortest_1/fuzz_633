(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire22;
  wire signed [(3'h6):(1'h0)] wire20;
  wire signed [(4'h8):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire4;
  assign y = {wire22, wire20, wire5, wire4, (1'h0)};
  assign wire4 = wire3[(3'h4):(1'h0)];
  assign wire5 = wire4;
  module6 #() modinst21 (wire20, clk, wire0, wire5, wire2, wire1);
  assign wire22 = {$unsigned((wire1[(3'h6):(1'h1)] ?
                          $unsigned(wire1) : (wire2 ? wire20 : wire3)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h49):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire10;
  input wire signed [(3'h4):(1'h0)] wire9;
  input wire signed [(3'h4):(1'h0)] wire8;
  input wire [(4'h8):(1'h0)] wire7;
  wire signed [(3'h7):(1'h0)] wire19;
  wire signed [(4'ha):(1'h0)] wire18;
  wire [(4'hb):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire12;
  wire [(4'h8):(1'h0)] wire11;
  reg [(3'h6):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg16 = (1'h0);
  reg [(3'h5):(1'h0)] reg15 = (1'h0);
  reg [(4'h9):(1'h0)] reg14 = (1'h0);
  assign y = {wire19,
                 wire18,
                 wire13,
                 wire12,
                 wire11,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 (1'h0)};
  assign wire11 = $unsigned((&(^~(wire8 - (8'ha9)))));
  assign wire12 = $signed($signed($signed(((8'ha3) || wire8))));
  assign wire13 = ($signed(wire10[(3'h6):(3'h6)]) ^ $unsigned((~&(wire12 && wire10))));
  always
    @(posedge clk) begin
      if (wire8)
        begin
          reg14 <= wire13[(4'h9):(1'h1)];
        end
      else
        begin
          if (wire13)
            begin
              reg14 <= ($unsigned((!(wire7 * (8'ha4)))) || (($unsigned(wire10) ^ (wire7 ?
                  wire12 : wire8)) * reg14[(1'h1):(1'h1)]));
            end
          else
            begin
              reg14 <= (^$signed(wire12[(3'h5):(3'h4)]));
              reg15 <= $unsigned((wire7 * $unsigned($signed((8'h9c)))));
              reg16 <= (!reg14[(3'h5):(1'h0)]);
            end
        end
      reg17 <= $signed(($signed($signed(wire7)) >> $unsigned(reg14)));
    end
  assign wire18 = wire11;
  assign wire19 = $unsigned(wire13);
endmodule