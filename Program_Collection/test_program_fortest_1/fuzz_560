(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire26;
  wire signed [(2'h3):(1'h0)] wire25;
  wire [(4'hb):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire19;
  reg [(3'h7):(1'h0)] reg23 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg22 = (1'h0);
  reg [(4'h9):(1'h0)] reg21 = (1'h0);
  assign y = {wire26, wire25, wire24, wire19, reg23, reg22, reg21, (1'h0)};
  module4 #() modinst20 (.y(wire19), .clk(clk), .wire8(wire1), .wire6(wire0), .wire5(wire3), .wire7(wire2));
  always
    @(posedge clk) begin
      reg21 <= wire2;
      reg22 <= wire3;
      reg23 <= wire1;
    end
  assign wire24 = $signed(wire2);
  assign wire25 = (~(((^~wire3) != (-reg23)) ?
                      $signed((~|(8'ha9))) : (+$signed(reg23))));
  assign wire26 = ((|$signed($signed((8'hac)))) >= reg21[(3'h4):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h3c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire8;
  input wire signed [(4'ha):(1'h0)] wire7;
  input wire signed [(2'h2):(1'h0)] wire6;
  input wire signed [(2'h2):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire17;
  reg [(2'h2):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg15 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg14 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg11 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg10 = (1'h0);
  reg [(4'h9):(1'h0)] reg9 = (1'h0);
  assign y = {wire18,
                 wire17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ({(+(~^(wire7 ? wire8 : (8'ha9))))})
        begin
          reg9 <= {(-$unsigned(wire6[(1'h1):(1'h1)]))};
          reg10 <= $signed(wire7[(4'h8):(3'h4)]);
        end
      else
        begin
          if ($unsigned(reg10[(2'h3):(1'h0)]))
            begin
              reg9 <= {$unsigned(((wire8 != (8'had)) > {wire5}))};
              reg10 <= reg10[(1'h0):(1'h0)];
              reg11 <= reg9;
            end
          else
            begin
              reg9 <= reg10[(1'h1):(1'h1)];
              reg10 <= wire8;
              reg11 <= reg10[(1'h0):(1'h0)];
            end
          reg12 <= $unsigned(wire7[(2'h3):(1'h0)]);
        end
      reg13 <= $signed((!wire7[(4'h9):(4'h9)]));
    end
  always
    @(posedge clk) begin
      reg14 <= (-(((reg13 ? wire8 : (8'ha7)) && (wire7 > (8'ha9))) ?
          wire8[(1'h1):(1'h1)] : ({wire8} ? {wire7} : (!reg12))));
      reg15 <= ((reg9 ? reg14 : $signed((~^(8'h9c)))) ^ $signed(wire7));
      reg16 <= (reg10 ? (|(wire8 ^~ (wire7 ? reg13 : reg15))) : {wire7});
    end
  assign wire17 = $signed($unsigned(reg11[(3'h5):(2'h3)]));
  assign wire18 = $signed(wire17);
endmodule