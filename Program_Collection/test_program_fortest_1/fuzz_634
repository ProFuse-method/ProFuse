(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire0;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire3;
  wire signed [(4'hb):(1'h0)] wire62;
  wire [(4'h8):(1'h0)] wire16;
  wire signed [(4'ha):(1'h0)] wire18;
  wire signed [(3'h5):(1'h0)] wire19;
  wire signed [(3'h6):(1'h0)] wire20;
  wire signed [(2'h3):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire22;
  wire signed [(4'h8):(1'h0)] wire60;
  reg signed [(3'h7):(1'h0)] reg23 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg24 = (1'h0);
  assign y = {wire62,
                 wire16,
                 wire18,
                 wire19,
                 wire20,
                 wire21,
                 wire22,
                 wire60,
                 reg23,
                 reg24,
                 (1'h0)};
  module4 #() modinst17 (.clk(clk), .wire5(wire1), .wire8(wire0), .y(wire16), .wire6(wire2), .wire7(wire3));
  assign wire18 = ($signed(wire3) ?
                      wire16[(2'h2):(1'h0)] : ($signed({wire0}) >> $unsigned(wire1[(1'h0):(1'h0)])));
  assign wire19 = ($unsigned(((wire1 ? wire3 : (8'ha6)) ?
                      (wire0 ? wire16 : wire3) : (wire18 ?
                          (8'ha6) : wire16))) | $signed($unsigned((+wire16))));
  assign wire20 = wire2[(3'h5):(2'h3)];
  assign wire21 = wire3[(2'h2):(1'h0)];
  assign wire22 = (^~(($unsigned(wire18) & $unsigned(wire2)) ?
                      wire1[(1'h1):(1'h1)] : $unsigned($unsigned(wire3))));
  always
    @(posedge clk) begin
      reg23 <= (!((-(wire0 ? wire0 : wire0)) | $signed((wire3 ?
          wire0 : (8'ha4)))));
      reg24 <= (^((wire16 || wire21[(1'h0):(1'h0)]) + ($unsigned((8'ha8)) != $signed(wire19))));
    end
  module25 #() modinst61 (.clk(clk), .wire28(wire2), .wire29(wire1), .y(wire60), .wire27(reg24), .wire26(wire0));
  assign wire62 = reg24[(4'h8):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25  (y, clk, wire26, wire27, wire28, wire29);
  output wire [(32'h2b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire26;
  input wire signed [(4'ha):(1'h0)] wire27;
  input wire [(3'h5):(1'h0)] wire28;
  input wire [(3'h6):(1'h0)] wire29;
  wire signed [(3'h4):(1'h0)] wire59;
  wire signed [(3'h7):(1'h0)] wire58;
  wire signed [(3'h5):(1'h0)] wire30;
  wire [(4'h8):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire56;
  reg [(4'h8):(1'h0)] reg32 = (1'h0);
  assign y = {wire59, wire58, wire30, wire31, wire56, reg32, (1'h0)};
  assign wire30 = $signed($signed(wire26));
  assign wire31 = ($signed($signed(wire30[(2'h3):(2'h2)])) ?
                      wire26[(3'h4):(2'h3)] : (((wire30 ? wire29 : wire26) ?
                              $unsigned(wire28) : ((8'h9e) ? wire30 : wire27)) ?
                          {(~wire29)} : $signed((&(8'ha7)))));
  always
    @(posedge clk) begin
      if ({wire27})
        begin
          reg32 <= wire31[(3'h4):(2'h3)];
        end
      else
        begin
          reg32 <= (+wire28[(3'h5):(3'h4)]);
        end
    end
  module33 #() modinst57 (wire56, clk, wire26, reg32, wire30, wire27);
  assign wire58 = (wire27 ~^ $unsigned($signed(wire31[(3'h4):(2'h3)])));
  assign wire59 = (!$unsigned($unsigned((wire26 ? wire56 : wire30))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h3d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire8;
  input wire signed [(4'h9):(1'h0)] wire7;
  input wire [(4'ha):(1'h0)] wire6;
  input wire signed [(2'h2):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire15;
  wire [(4'h9):(1'h0)] wire14;
  wire [(3'h4):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire12;
  wire signed [(4'h9):(1'h0)] wire11;
  wire signed [(4'ha):(1'h0)] wire9;
  reg [(4'ha):(1'h0)] reg10 = (1'h0);
  assign y = {wire15, wire14, wire13, wire12, wire11, wire9, reg10, (1'h0)};
  assign wire9 = wire6;
  always
    @(posedge clk) begin
      reg10 <= $signed($unsigned(wire9[(4'h9):(3'h4)]));
    end
  assign wire11 = wire8[(1'h0):(1'h0)];
  assign wire12 = {wire7[(3'h4):(3'h4)]};
  assign wire13 = $signed((-wire6));
  assign wire14 = (wire5[(2'h2):(1'h1)] <= $unsigned(((-wire8) > (wire13 ?
                      wire5 : wire13))));
  assign wire15 = $signed($unsigned(wire14));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module33
#(parameter param55 = (&(~|((-(8'ha9)) ? {(8'hb0)} : ((8'hab) ? (8'hae) : (8'ha5))))))
(y, clk, wire37, wire36, wire35, wire34);
  output wire [(32'h75):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire37;
  input wire [(4'h8):(1'h0)] wire36;
  input wire signed [(2'h3):(1'h0)] wire35;
  input wire [(4'ha):(1'h0)] wire34;
  wire [(2'h3):(1'h0)] wire51;
  wire [(2'h2):(1'h0)] wire45;
  wire signed [(4'h8):(1'h0)] wire44;
  wire [(2'h2):(1'h0)] wire43;
  wire signed [(4'ha):(1'h0)] wire42;
  wire [(3'h5):(1'h0)] wire41;
  wire [(3'h4):(1'h0)] wire38;
  reg signed [(4'hb):(1'h0)] reg54 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg53 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg52 = (1'h0);
  reg [(3'h6):(1'h0)] reg50 = (1'h0);
  reg [(4'h9):(1'h0)] reg49 = (1'h0);
  reg [(4'h8):(1'h0)] reg48 = (1'h0);
  reg [(4'ha):(1'h0)] reg47 = (1'h0);
  reg [(4'ha):(1'h0)] reg46 = (1'h0);
  reg [(4'h8):(1'h0)] reg40 = (1'h0);
  reg [(4'h8):(1'h0)] reg39 = (1'h0);
  assign y = {wire51,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire38,
                 reg54,
                 reg53,
                 reg52,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg40,
                 reg39,
                 (1'h0)};
  assign wire38 = $unsigned(((8'h9c) << wire34));
  always
    @(posedge clk) begin
      reg39 <= $unsigned(((wire35[(2'h2):(1'h1)] ?
          $unsigned(wire36) : $signed(wire34)) && wire34[(1'h1):(1'h1)]));
      reg40 <= ($signed(($unsigned(wire38) >> wire36)) ?
          $signed(wire36) : {$unsigned(wire37)});
    end
  assign wire41 = $unsigned((wire35 << $unsigned($signed(wire34))));
  assign wire42 = $unsigned(($signed($signed(reg39)) & reg39));
  assign wire43 = (~reg39);
  assign wire44 = $signed($unsigned($signed($signed((8'ha8)))));
  assign wire45 = (!($unsigned({wire36}) < ({wire36} << wire41)));
  always
    @(posedge clk) begin
      reg46 <= wire41;
      if (($signed($unsigned((wire41 ?
          wire44 : wire36))) >>> (-($signed(wire37) | (wire45 == (8'ha5))))))
        begin
          if ({({(wire34 ? reg39 : wire38)} ?
                  ((reg39 >>> wire37) || $signed(wire41)) : ((^wire36) >>> $unsigned(wire42)))})
            begin
              reg47 <= ($unsigned(($unsigned(wire41) ^ $signed((8'hb0)))) == wire37);
              reg48 <= (|($signed($signed(wire42)) ?
                  {(8'h9c)} : reg47[(3'h7):(1'h1)]));
            end
          else
            begin
              reg47 <= $unsigned((!($signed((8'ha5)) << ((8'had) == (8'h9e)))));
              reg48 <= $unsigned((&($unsigned(wire44) ?
                  reg47[(2'h2):(2'h2)] : (^wire44))));
            end
          reg49 <= (($signed(reg39[(3'h5):(2'h3)]) ?
              (-$signed(wire36)) : ({reg40} ?
                  $signed(wire35) : (wire38 <= reg46))) >> (reg48 ?
              $unsigned((reg46 ? wire45 : wire34)) : reg39[(3'h7):(3'h4)]));
          reg50 <= ((8'h9f) ?
              ($unsigned((+wire37)) ?
                  $signed((reg39 ?
                      (8'had) : wire45)) : wire36[(1'h1):(1'h0)]) : $unsigned({$signed((8'haf))}));
        end
      else
        begin
          reg47 <= reg48[(3'h4):(1'h0)];
        end
    end
  assign wire51 = ((-wire42) ? $unsigned(wire38[(3'h4):(1'h0)]) : (~&wire38));
  always
    @(posedge clk) begin
      if ((reg48 + $unsigned(({reg47} ^ (!reg50)))))
        begin
          reg52 <= $unsigned(wire36[(1'h0):(1'h0)]);
          reg53 <= reg40;
        end
      else
        begin
          if ($unsigned(((((8'ha3) ? (8'hb0) : wire38) ?
                  ((8'hb0) ? (8'ha7) : wire43) : ((8'hae) ? reg46 : wire35)) ?
              reg53[(3'h7):(1'h0)] : ((wire41 <= reg47) ^ (wire35 ?
                  reg46 : reg52)))))
            begin
              reg52 <= ((8'ha8) ~^ {(reg46[(3'h6):(1'h0)] + $signed(wire35))});
            end
          else
            begin
              reg52 <= ({$signed(reg40)} <<< wire42);
            end
          reg53 <= reg52[(1'h0):(1'h0)];
          if ((^(-(~(wire36 ? reg46 : (8'ha9))))))
            begin
              reg54 <= reg39[(2'h3):(1'h0)];
            end
          else
            begin
              reg54 <= $signed(($unsigned($unsigned(wire37)) - ((reg46 ?
                      reg46 : wire45) ?
                  $unsigned(wire41) : $unsigned(wire42))));
            end
        end
    end
endmodule