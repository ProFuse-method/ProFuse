(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param48 = (~&((|((8'haa) ^ (8'ha5))) != ({(8'ha1)} ? ((8'haa) <<< (8'ha4)) : (~|(8'h9e))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire46;
  wire [(4'hb):(1'h0)] wire44;
  wire signed [(4'hb):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire4;
  assign y = {wire46, wire44, wire6, wire5, wire4, (1'h0)};
  assign wire4 = {wire3};
  assign wire5 = {wire1[(2'h3):(1'h0)]};
  assign wire6 = (|$signed($signed({(8'hab)})));
  module7 #() modinst45 (.y(wire44), .wire10(wire5), .wire11(wire4), .clk(clk), .wire9(wire3), .wire8(wire2));
  module7 #() modinst47 (.y(wire46), .clk(clk), .wire11(wire6), .wire9(wire2), .wire10(wire3), .wire8(wire44));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param43 = (|(~((~^(8'ha4)) ? ((8'h9f) != (8'ha8)) : (|(8'ha7))))))
(y, clk, wire8, wire9, wire10, wire11);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire signed [(4'h8):(1'h0)] wire9;
  input wire [(4'hb):(1'h0)] wire10;
  input wire [(4'hb):(1'h0)] wire11;
  wire signed [(3'h7):(1'h0)] wire42;
  wire [(4'h8):(1'h0)] wire12;
  wire signed [(4'hb):(1'h0)] wire16;
  wire signed [(4'ha):(1'h0)] wire17;
  wire signed [(4'h8):(1'h0)] wire37;
  reg signed [(4'hb):(1'h0)] reg41 = (1'h0);
  reg [(3'h6):(1'h0)] reg40 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg39 = (1'h0);
  reg [(4'ha):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg14 = (1'h0);
  reg [(4'hb):(1'h0)] reg15 = (1'h0);
  assign y = {wire42,
                 wire12,
                 wire16,
                 wire17,
                 wire37,
                 reg41,
                 reg40,
                 reg39,
                 reg13,
                 reg14,
                 reg15,
                 (1'h0)};
  assign wire12 = wire8;
  always
    @(posedge clk) begin
      if ({(wire11 ?
              ($unsigned(wire11) ?
                  $unsigned((8'ha9)) : (wire9 ? (8'had) : wire9)) : wire9)})
        begin
          reg13 <= ((^(-wire10[(3'h4):(1'h1)])) ?
              (+(-$unsigned(wire10))) : {$signed((wire9 + (8'hb0)))});
        end
      else
        begin
          reg13 <= $signed(({reg13[(4'h8):(3'h4)]} <= reg13[(2'h3):(2'h2)]));
          reg14 <= ({(!(wire12 ?
                  wire9 : wire10))} * $unsigned((wire12 == wire8[(4'hb):(4'ha)])));
        end
      reg15 <= wire8;
    end
  assign wire16 = reg13;
  assign wire17 = (~&wire10);
  module18 #() modinst38 (.clk(clk), .wire21(wire16), .wire19(wire9), .y(wire37), .wire22(wire17), .wire20(reg14));
  always
    @(posedge clk) begin
      if (reg15[(3'h4):(2'h3)])
        begin
          reg39 <= {{(&(reg14 ? wire17 : reg13))}};
          reg40 <= wire9[(2'h2):(2'h2)];
        end
      else
        begin
          reg39 <= wire8[(1'h1):(1'h0)];
          if ($unsigned(($unsigned((reg14 <= wire17)) ?
              $signed((reg14 ?
                  wire9 : wire37)) : ($unsigned(reg14) && (wire37 - reg13)))))
            begin
              reg40 <= $signed(({$signed(wire17)} + reg40[(1'h0):(1'h0)]));
            end
          else
            begin
              reg40 <= ((^(+(reg13 == wire17))) < wire10);
            end
          reg41 <= (|(8'h9e));
        end
    end
  assign wire42 = wire37;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18  (y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire22;
  input wire signed [(3'h4):(1'h0)] wire21;
  input wire signed [(2'h3):(1'h0)] wire20;
  input wire [(4'h8):(1'h0)] wire19;
  wire signed [(4'h9):(1'h0)] wire34;
  wire signed [(3'h5):(1'h0)] wire27;
  wire signed [(2'h2):(1'h0)] wire26;
  wire [(4'ha):(1'h0)] wire25;
  wire signed [(2'h3):(1'h0)] wire24;
  reg [(2'h2):(1'h0)] reg36 = (1'h0);
  reg [(3'h6):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg33 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg32 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg31 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg29 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg23 = (1'h0);
  assign y = {wire34,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 reg36,
                 reg35,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg23,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($signed((((wire19 ? wire19 : (8'haf)) * wire19) ?
          $unsigned($signed(wire21)) : $unsigned(wire22))))
        begin
          reg23 <= (~&(wire19[(3'h5):(2'h3)] ?
              wire19[(3'h4):(2'h3)] : $unsigned(wire22[(3'h5):(3'h5)])));
        end
      else
        begin
          reg23 <= $signed(($signed((8'ha0)) ?
              ({wire21} ?
                  $signed(reg23) : (~^(8'ha0))) : wire21[(1'h0):(1'h0)]));
        end
    end
  assign wire24 = (8'ha0);
  assign wire25 = $signed($unsigned((8'h9d)));
  assign wire26 = wire21[(1'h0):(1'h0)];
  assign wire27 = (&({{wire19}} ? wire24 : reg23[(2'h3):(2'h2)]));
  always
    @(posedge clk) begin
      reg28 <= ($signed((&$unsigned(wire26))) ?
          wire22[(4'h9):(3'h6)] : (($signed((8'ha8)) ~^ $unsigned(wire19)) ?
              wire24 : $unsigned((+wire20))));
    end
  always
    @(posedge clk) begin
      reg29 <= {reg23[(3'h4):(2'h3)]};
    end
  always
    @(posedge clk) begin
      if ($signed($signed($signed((^~wire24)))))
        begin
          reg30 <= (|($unsigned({wire19}) ?
              wire19[(2'h3):(1'h0)] : wire24[(1'h0):(1'h0)]));
        end
      else
        begin
          reg30 <= (8'h9e);
          reg31 <= (wire22[(1'h0):(1'h0)] <= wire21[(1'h1):(1'h0)]);
        end
      reg32 <= (~(($signed(reg23) * $signed(reg23)) >= {wire22[(3'h5):(2'h3)]}));
      reg33 <= $signed($unsigned((reg28 ?
          (reg32 | reg29) : reg29[(3'h5):(1'h0)])));
    end
  assign wire34 = reg32[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg35 <= $unsigned($signed((reg32[(3'h5):(3'h5)] && wire22[(3'h5):(3'h4)])));
      reg36 <= $unsigned(wire22[(3'h4):(3'h4)]);
    end
endmodule