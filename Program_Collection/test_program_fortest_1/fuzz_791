(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire78;
  wire signed [(4'h8):(1'h0)] wire77;
  wire signed [(4'h8):(1'h0)] wire76;
  wire signed [(3'h5):(1'h0)] wire75;
  wire [(2'h3):(1'h0)] wire73;
  wire signed [(4'h8):(1'h0)] wire71;
  wire signed [(4'hb):(1'h0)] wire69;
  wire signed [(4'ha):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire4;
  assign y = {wire78,
                 wire77,
                 wire76,
                 wire75,
                 wire73,
                 wire71,
                 wire69,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = ((+{$unsigned(wire3)}) ?
                     (wire1[(1'h0):(1'h0)] <= (8'haa)) : (wire2 ^ wire0[(1'h1):(1'h0)]));
  assign wire5 = $unsigned((&(wire4[(2'h3):(1'h0)] ? (^wire3) : wire2)));
  module6 #() modinst70 (.wire8(wire0), .wire7(wire3), .y(wire69), .clk(clk), .wire9(wire1), .wire10(wire4));
  module6 #() modinst72 (.wire9(wire0), .y(wire71), .wire10(wire1), .wire7(wire2), .clk(clk), .wire8(wire69));
  module13 #() modinst74 (wire73, clk, wire5, wire71, wire3, wire69);
  assign wire75 = $signed(wire3[(3'h5):(2'h3)]);
  assign wire76 = (^~(~^wire69));
  assign wire77 = (~(!$unsigned((&wire4))));
  assign wire78 = ((~^wire4[(3'h6):(2'h2)]) ?
                      $signed($signed(wire4[(1'h0):(1'h0)])) : $signed((~(~^wire69))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param68 = ((~{((8'hac) ? (8'h9f) : (8'h9f))}) < ((&((8'ha8) * (8'h9e))) + ((8'h9f) || ((8'h9d) ~^ (8'hb0))))))
(y, clk, wire7, wire8, wire9, wire10);
  output wire [(32'h78):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire7;
  input wire [(4'h8):(1'h0)] wire8;
  input wire signed [(3'h7):(1'h0)] wire9;
  input wire [(3'h4):(1'h0)] wire10;
  wire [(4'h8):(1'h0)] wire67;
  wire [(4'h8):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire24;
  wire [(3'h5):(1'h0)] wire26;
  wire signed [(4'h8):(1'h0)] wire27;
  wire signed [(3'h5):(1'h0)] wire32;
  wire signed [(4'hb):(1'h0)] wire62;
  wire signed [(3'h6):(1'h0)] wire64;
  wire signed [(4'h9):(1'h0)] wire65;
  reg signed [(3'h5):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg29 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg30 = (1'h0);
  reg [(4'h9):(1'h0)] reg31 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg33 = (1'h0);
  assign y = {wire67,
                 wire11,
                 wire12,
                 wire24,
                 wire26,
                 wire27,
                 wire32,
                 wire62,
                 wire64,
                 wire65,
                 reg28,
                 reg29,
                 reg30,
                 reg31,
                 reg33,
                 (1'h0)};
  assign wire11 = ($unsigned($signed(((8'hab) != (8'hab)))) ?
                      ({wire10[(1'h0):(1'h0)]} ?
                          $unsigned((|wire7)) : $signed($signed(wire8))) : wire7);
  assign wire12 = (&wire9[(3'h4):(3'h4)]);
  module13 #() modinst25 (.wire17(wire10), .y(wire24), .wire14(wire12), .wire16(wire11), .clk(clk), .wire15(wire9));
  assign wire26 = $signed((8'ha4));
  assign wire27 = (wire26[(2'h3):(1'h1)] ?
                      (~|(8'ha8)) : ((8'ha4) ?
                          $unsigned((8'ha9)) : {(wire12 ^ wire10)}));
  always
    @(posedge clk) begin
      if (($signed($unsigned(wire26[(3'h5):(3'h5)])) ?
          ({$signed(wire27)} | $signed($unsigned(wire12))) : wire10[(2'h2):(1'h1)]))
        begin
          reg28 <= ($unsigned((+(wire24 ? wire12 : wire26))) ?
              $signed({wire26[(1'h1):(1'h1)]}) : (~wire7));
          reg29 <= (^$unsigned((~&((8'hae) && (8'ha2)))));
          reg30 <= (($signed(wire8[(3'h5):(1'h1)]) ?
                  (~((8'ha6) ? reg29 : wire7)) : (8'ha2)) ?
              ($signed((wire11 >= wire8)) << wire10) : (($signed(reg28) ?
                  (wire24 ?
                      reg29 : (8'haa)) : $unsigned(wire10)) == ($unsigned(wire7) ?
                  (^~wire9) : ((8'ha4) != wire10))));
        end
      else
        begin
          reg28 <= ($signed($signed($signed(wire11))) ?
              wire27[(3'h7):(3'h6)] : ($signed(wire11) ~^ (wire7[(2'h2):(1'h0)] ?
                  {wire10} : $unsigned(wire11))));
        end
      reg31 <= ($unsigned((8'ha3)) ?
          ($unsigned(wire26) ?
              wire9 : $signed($unsigned(wire26))) : $unsigned({(wire12 ?
                  wire26 : wire10)}));
    end
  assign wire32 = ((($unsigned(wire9) >>> $unsigned(wire26)) ?
                      {(~wire26)} : reg28[(2'h2):(2'h2)]) << (&$unsigned((wire11 ?
                      reg31 : (8'haf)))));
  always
    @(posedge clk) begin
      reg33 <= (&wire26[(2'h3):(2'h3)]);
    end
  module34 #() modinst63 (wire62, clk, wire9, wire12, wire7, wire24);
  assign wire64 = wire12[(3'h4):(1'h1)];
  module13 #() modinst66 (wire65, clk, wire27, wire8, reg31, wire62);
  assign wire67 = (-((wire10[(2'h2):(1'h0)] <<< wire11) ?
                      (^wire64) : $signed((wire7 ? (8'ha6) : (8'ha1)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34  (y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h9f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire38;
  input wire [(4'h8):(1'h0)] wire37;
  input wire signed [(3'h5):(1'h0)] wire36;
  input wire [(3'h5):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire61;
  wire signed [(3'h5):(1'h0)] wire60;
  wire signed [(4'h8):(1'h0)] wire59;
  wire [(3'h6):(1'h0)] wire58;
  wire signed [(3'h5):(1'h0)] wire48;
  wire [(3'h7):(1'h0)] wire47;
  wire [(2'h2):(1'h0)] wire40;
  wire [(3'h7):(1'h0)] wire39;
  reg signed [(3'h5):(1'h0)] reg57 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg54 = (1'h0);
  reg [(3'h6):(1'h0)] reg53 = (1'h0);
  reg [(4'h9):(1'h0)] reg52 = (1'h0);
  reg [(4'hb):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg50 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg49 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg45 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg43 = (1'h0);
  reg [(3'h7):(1'h0)] reg42 = (1'h0);
  reg [(2'h2):(1'h0)] reg41 = (1'h0);
  assign y = {wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire48,
                 wire47,
                 wire40,
                 wire39,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 (1'h0)};
  assign wire39 = $unsigned($signed($signed($signed(wire38))));
  assign wire40 = ((($signed(wire37) == wire35) ?
                          $signed(wire37) : ($signed(wire37) ?
                              wire36[(1'h1):(1'h1)] : wire36[(2'h2):(1'h1)])) ?
                      {wire38[(3'h6):(3'h4)]} : wire37);
  always
    @(posedge clk) begin
      if (wire39)
        begin
          reg41 <= $signed(wire39[(3'h7):(2'h2)]);
        end
      else
        begin
          reg41 <= $signed(($signed($unsigned(reg41)) > (((8'hab) - wire38) ?
              $signed((8'ha8)) : $signed((8'ha9)))));
          if ($signed((((reg41 ~^ reg41) ?
              $signed(wire36) : wire39[(2'h3):(2'h3)]) ^ {$signed(wire40)})))
            begin
              reg42 <= wire36[(1'h1):(1'h0)];
              reg43 <= $unsigned(wire35[(1'h0):(1'h0)]);
            end
          else
            begin
              reg42 <= wire37[(3'h6):(2'h3)];
            end
          reg44 <= reg43;
        end
      reg45 <= $unsigned(reg44);
      reg46 <= reg41;
    end
  assign wire47 = (8'haa);
  assign wire48 = ((&reg45[(2'h2):(1'h1)]) && $signed((^$unsigned(reg46))));
  always
    @(posedge clk) begin
      if (wire48[(1'h1):(1'h1)])
        begin
          if ((^~wire37[(3'h6):(3'h4)]))
            begin
              reg49 <= reg41[(1'h1):(1'h1)];
            end
          else
            begin
              reg49 <= $unsigned(wire37);
              reg50 <= (^~$signed($signed((~&reg49))));
            end
        end
      else
        begin
          if ($signed(reg49))
            begin
              reg49 <= reg45;
              reg50 <= ((|wire36[(2'h3):(1'h0)]) != (-reg49));
            end
          else
            begin
              reg49 <= wire36;
              reg50 <= $unsigned(reg46);
              reg51 <= wire36[(2'h2):(1'h0)];
            end
          if (({(!$signed(reg46))} ?
              (wire36[(2'h2):(2'h2)] >>> $unsigned((reg43 >= wire35))) : (^(+wire37))))
            begin
              reg52 <= reg51;
              reg53 <= ($unsigned(({reg41} ?
                  wire48[(3'h5):(2'h3)] : wire38)) || $signed(wire39));
            end
          else
            begin
              reg52 <= reg49[(3'h7):(3'h7)];
              reg53 <= $unsigned($unsigned(($unsigned((8'hab)) ?
                  (~|(8'hac)) : wire37)));
            end
          reg54 <= reg43[(4'h9):(2'h3)];
        end
      if ((&{$unsigned($signed(wire37))}))
        begin
          reg55 <= (($unsigned(wire47[(3'h6):(2'h2)]) >> ((~&wire48) ?
              wire37[(4'h8):(3'h4)] : reg45[(1'h1):(1'h1)])) & (((reg42 <<< reg50) ?
                  (wire37 >> reg49) : $unsigned(wire38)) ?
              (reg44 ?
                  (wire35 >= (8'ha1)) : wire39) : ($signed(wire36) == $unsigned(wire40))));
          reg56 <= ($unsigned(reg50[(2'h2):(1'h1)]) ?
              reg44[(3'h5):(3'h4)] : (reg42 >> (~|{(8'h9e)})));
        end
      else
        begin
          if ({(8'ha0)})
            begin
              reg55 <= $signed((^$unsigned((-(8'h9c)))));
            end
          else
            begin
              reg55 <= wire35[(2'h3):(2'h3)];
            end
        end
      reg57 <= reg46;
    end
  assign wire58 = $signed(reg43[(2'h2):(2'h2)]);
  assign wire59 = (reg46[(4'h8):(2'h3)] ?
                      {$signed(reg46[(2'h2):(1'h0)])} : (8'had));
  assign wire60 = reg54[(2'h2):(1'h0)];
  assign wire61 = reg57[(1'h0):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param23 = ((-{((8'ha4) ? (8'ha9) : (8'ha8))}) ? ((((8'ha5) * (8'haf)) >> ((8'h9c) >= (8'haf))) ? {(~|(8'had))} : (((8'ha2) ? (8'ha1) : (8'hac)) ? ((8'haf) == (8'hb0)) : ((8'ha6) && (8'ha8)))) : ((((8'ha4) ? (8'ha9) : (8'ha3)) << ((8'h9d) < (8'ha8))) > ((^(8'ha1)) << (8'haa)))))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h1c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire17;
  input wire signed [(4'h8):(1'h0)] wire16;
  input wire [(3'h7):(1'h0)] wire15;
  input wire signed [(4'hb):(1'h0)] wire14;
  wire [(3'h5):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire19;
  wire signed [(3'h4):(1'h0)] wire18;
  reg [(4'h8):(1'h0)] reg21 = (1'h0);
  reg [(2'h3):(1'h0)] reg20 = (1'h0);
  assign y = {wire22, wire19, wire18, reg21, reg20, (1'h0)};
  assign wire18 = {(8'hb0)};
  assign wire19 = wire14[(4'hb):(3'h4)];
  always
    @(posedge clk) begin
      reg20 <= wire19[(2'h2):(1'h1)];
      reg21 <= (wire15 ? reg20 : wire18);
    end
  assign wire22 = wire16[(3'h7):(3'h7)];
endmodule