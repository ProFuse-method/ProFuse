(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire0;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire3;
  wire [(3'h6):(1'h0)] wire50;
  wire [(2'h3):(1'h0)] wire49;
  wire signed [(3'h7):(1'h0)] wire4;
  wire [(4'ha):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire6;
  wire signed [(3'h7):(1'h0)] wire38;
  wire [(4'ha):(1'h0)] wire41;
  wire signed [(4'ha):(1'h0)] wire43;
  wire [(3'h6):(1'h0)] wire44;
  wire [(4'ha):(1'h0)] wire46;
  wire signed [(4'hb):(1'h0)] wire47;
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg42 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire4,
                 wire5,
                 wire6,
                 wire38,
                 wire41,
                 wire43,
                 wire44,
                 wire46,
                 wire47,
                 reg40,
                 reg42,
                 (1'h0)};
  assign wire4 = (|(^~wire3[(1'h1):(1'h0)]));
  assign wire5 = wire2;
  assign wire6 = wire3;
  module7 #() modinst39 (wire38, clk, wire0, wire2, wire1, wire3);
  always
    @(posedge clk) begin
      reg40 <= (~(~^(+wire6)));
    end
  assign wire41 = $unsigned(({$signed(wire0)} && ((8'ha3) ^ (!reg40))));
  always
    @(posedge clk) begin
      reg42 <= $signed(wire3[(3'h5):(1'h1)]);
    end
  assign wire43 = $unsigned({wire6[(3'h4):(1'h0)]});
  module7 #() modinst45 (wire44, clk, wire1, wire2, wire0, wire5);
  assign wire46 = (-(wire6 != {((8'ha5) ? (8'ha0) : (8'ha0))}));
  module7 #() modinst48 (wire47, clk, reg40, wire2, wire43, wire46);
  assign wire49 = wire41;
  assign wire50 = $signed($signed($unsigned(wire1)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param37 = ({((^(8'hab)) == (~&(8'ha0)))} - ((!((8'ha6) ? (8'h9f) : (8'ha1))) ^ {((8'h9e) ? (8'hab) : (8'hab))})))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire11;
  input wire signed [(2'h3):(1'h0)] wire10;
  input wire [(4'ha):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire8;
  wire signed [(2'h2):(1'h0)] wire36;
  wire signed [(4'hb):(1'h0)] wire35;
  wire signed [(3'h4):(1'h0)] wire34;
  wire signed [(2'h3):(1'h0)] wire33;
  wire [(3'h5):(1'h0)] wire32;
  wire signed [(3'h7):(1'h0)] wire31;
  wire [(3'h4):(1'h0)] wire29;
  wire [(2'h2):(1'h0)] wire14;
  wire [(3'h4):(1'h0)] wire13;
  wire [(4'h8):(1'h0)] wire12;
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire29,
                 wire14,
                 wire13,
                 wire12,
                 (1'h0)};
  assign wire12 = (&$signed($unsigned((wire8 >>> wire10))));
  assign wire13 = wire12;
  assign wire14 = $unsigned({(wire12 ? $unsigned(wire13) : (8'hb0))});
  module15 #() modinst30 (wire29, clk, wire10, wire11, wire8, wire12);
  assign wire31 = (((-wire12) - ($signed((8'haf)) ?
                          {wire13} : ((8'ha4) - wire29))) ?
                      wire8 : {(~(wire14 < wire29))});
  assign wire32 = (~$unsigned($signed($unsigned(wire11))));
  assign wire33 = ($signed($unsigned((wire32 ? wire9 : wire14))) ?
                      wire32 : {$unsigned((8'had))});
  assign wire34 = $signed(((wire13 >> wire31[(1'h0):(1'h0)]) <= wire14));
  assign wire35 = {wire11};
  assign wire36 = ({((^wire11) ?
                              (wire13 ?
                                  wire14 : wire31) : (wire14 >>> wire34))} ?
                      (((~|wire29) ?
                          (wire29 ?
                              wire29 : wire29) : wire34[(1'h0):(1'h0)]) ~^ (wire11[(3'h6):(1'h0)] ?
                          wire34[(1'h1):(1'h0)] : (wire31 & wire33))) : $signed((~&wire12)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param28 = (-((8'ha6) != (&((8'hab) ? (8'haa) : (8'ha0))))))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h27):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire19;
  input wire [(3'h6):(1'h0)] wire18;
  input wire [(4'h9):(1'h0)] wire17;
  input wire signed [(4'h8):(1'h0)] wire16;
  wire signed [(2'h3):(1'h0)] wire27;
  wire [(2'h3):(1'h0)] wire26;
  wire [(2'h2):(1'h0)] wire25;
  wire signed [(3'h7):(1'h0)] wire24;
  wire [(2'h3):(1'h0)] wire23;
  wire [(2'h3):(1'h0)] wire22;
  wire signed [(4'ha):(1'h0)] wire21;
  wire [(3'h7):(1'h0)] wire20;
  assign y = {wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 (1'h0)};
  assign wire20 = ($signed(($unsigned(wire18) >> $signed(wire19))) ?
                      wire16 : wire19);
  assign wire21 = wire17[(3'h5):(2'h3)];
  assign wire22 = wire19;
  assign wire23 = ((!(wire18 ~^ ((8'h9f) << wire16))) ?
                      (~&wire22) : (^~wire20));
  assign wire24 = $unsigned($unsigned($signed((~&wire18))));
  assign wire25 = {wire24[(2'h3):(1'h1)]};
  assign wire26 = wire18[(2'h3):(1'h1)];
  assign wire27 = $signed((($unsigned(wire26) ^~ (~wire19)) | wire24));
endmodule