(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param25 = {((~|(+(8'hae))) >>> ((&(8'hb0)) ? {(8'h9c)} : {(8'haa)}))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  wire signed [(3'h4):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire21;
  wire signed [(4'hb):(1'h0)] wire19;
  assign y = {wire24, wire23, wire22, wire21, wire19, (1'h0)};
  module4 #() modinst20 (.y(wire19), .wire8(wire3), .wire6(wire2), .wire5(wire0), .wire7(wire1), .clk(clk));
  assign wire21 = wire1[(3'h4):(2'h2)];
  assign wire22 = wire3;
  assign wire23 = (^~{$signed((8'ha7))});
  assign wire24 = (+$unsigned(wire22[(2'h2):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param18 = ((^((~&(8'ha6)) ~^ ((8'hae) ~^ (8'haf)))) >> ((((8'ha3) ~^ (8'haf)) << ((8'ha1) ? (8'h9d) : (8'h9c))) > ((|(8'h9e)) ? (~|(8'ha6)) : ((8'ha2) ? (8'ha8) : (8'ha4))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h38):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire [(4'ha):(1'h0)] wire7;
  input wire signed [(3'h6):(1'h0)] wire6;
  input wire [(3'h6):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire14;
  wire [(3'h5):(1'h0)] wire13;
  wire [(3'h4):(1'h0)] wire12;
  wire [(3'h5):(1'h0)] wire11;
  wire [(3'h7):(1'h0)] wire10;
  wire [(3'h4):(1'h0)] wire9;
  reg signed [(4'ha):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg15 = (1'h0);
  assign y = {wire17,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 reg16,
                 reg15,
                 (1'h0)};
  assign wire9 = (|wire6);
  assign wire10 = wire7;
  assign wire11 = $signed((wire8[(4'h8):(2'h2)] ?
                      $unsigned(wire8[(3'h6):(1'h1)]) : {$signed(wire10)}));
  assign wire12 = ($unsigned(($unsigned(wire5) ?
                      (wire5 ?
                          wire10 : wire7) : wire10[(2'h3):(2'h3)])) || $unsigned(wire8));
  assign wire13 = $signed(((-$unsigned(wire10)) >> ({wire9} ?
                      ((8'ha9) != wire11) : (8'h9e))));
  assign wire14 = (8'hae);
  always
    @(posedge clk) begin
      reg15 <= $signed(((-wire11) < wire14));
      reg16 <= ({$unsigned($signed(reg15))} << (reg15[(1'h0):(1'h0)] ?
          $unsigned($unsigned(reg15)) : wire7[(3'h7):(1'h1)]));
    end
  assign wire17 = wire6;
endmodule