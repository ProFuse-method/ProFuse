(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param111 = ((((~|(&(8'hae))) ? ({(8'hb7)} <<< ((8'haf) ~^ (8'ha8))) : (8'had)) ? (-(^(^(8'hb5)))) : (({(8'h9f)} ? {(7'h40)} : {(8'ha8)}) <= ({(8'ha7), (8'had)} != (^~(8'h9c))))) ? ((((^~(8'haf)) + {(8'hb5), (7'h41)}) <<< ((^~(8'hab)) < ((8'h9d) ~^ (8'hb5)))) >>> (~&{(^~(8'hb4))})) : (((((8'ha8) < (8'hb1)) << (8'had)) ? (-((7'h42) >> (8'hbb))) : ({(8'ha5), (8'hac)} ? (!(8'ha2)) : ((8'h9d) != (8'ha0)))) >>> (((!(7'h44)) << (~(8'ha0))) ? (((8'h9d) ? (8'hae) : (8'haf)) ? (|(8'ha3)) : (8'ha8)) : (~&((8'h9c) ? (8'hb3) : (8'hb5)))))), 
parameter param112 = param111)
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'hb9):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h14):(1'h0)] wire3;
  input wire [(5'h10):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(5'h13):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire110;
  wire [(4'hf):(1'h0)] wire109;
  wire [(3'h7):(1'h0)] wire108;
  wire signed [(3'h6):(1'h0)] wire107;
  wire [(5'h11):(1'h0)] wire106;
  wire [(5'h14):(1'h0)] wire104;
  wire [(5'h14):(1'h0)] wire103;
  wire [(5'h15):(1'h0)] wire102;
  wire [(5'h11):(1'h0)] wire100;
  wire signed [(2'h3):(1'h0)] wire7;
  wire [(3'h7):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire4;
  reg signed [(4'ha):(1'h0)] reg105 = (1'h0);
  reg [(5'h15):(1'h0)] reg6 = (1'h0);
  assign y = {wire110,
                 wire109,
                 wire108,
                 wire107,
                 wire106,
                 wire104,
                 wire103,
                 wire102,
                 wire100,
                 wire7,
                 wire5,
                 wire4,
                 reg105,
                 reg6,
                 (1'h0)};
  assign wire4 = wire3[(1'h1):(1'h0)];
  assign wire5 = $signed($unsigned($signed($signed({wire4}))));
  always
    @(posedge clk) begin
      reg6 = {($signed(wire5[(3'h4):(3'h4)]) ?
              (-((wire5 ? wire1 : (8'ha6)) << (~^wire3))) : ($signed((|wire0)) ?
                  {(&(7'h41))} : ((8'ha7) ?
                      {wire5} : (wire1 ? wire1 : wire5)))),
          wire5};
    end
  assign wire7 = wire2[(4'hf):(4'ha)];
  module8 #() modinst101 (.y(wire100), .wire10(wire4), .wire11(wire5), .clk(clk), .wire9(wire1), .wire12(wire3));
  assign wire102 = {(^~((wire0[(4'h9):(3'h7)] >>> wire4) ?
                           {wire3[(3'h4):(1'h1)]} : $signed((wire7 ?
                               wire3 : wire5))))};
  assign wire103 = $unsigned((wire100 ?
                       $signed((+(~^wire1))) : $unsigned((8'hb7))));
  assign wire104 = {(&(wire103 || $unsigned(wire100))),
                       {(wire103 ~^ wire1[(2'h3):(1'h0)]),
                           ($unsigned(wire4) ?
                               wire103[(1'h1):(1'h0)] : (wire7 ?
                                   {wire4, (8'hbd)} : (~|(8'hb0))))}};
  always
    @(posedge clk) begin
      reg105 <= $signed(wire1);
    end
  assign wire106 = {wire103};
  assign wire107 = wire7;
  assign wire108 = $signed(wire102);
  assign wire109 = $signed(reg105[(4'h8):(1'h0)]);
  assign wire110 = $signed($signed((~&(wire0[(2'h2):(1'h0)] || (wire0 ?
                       wire109 : wire103)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param98 = (!(({((8'ha9) ? (8'hba) : (8'ha8))} ^~ {(~^(7'h42))}) ? (({(7'h40), (8'ha8)} ? {(8'hbb), (8'haa)} : (-(7'h42))) ? {((8'hae) ? (8'hb2) : (8'hb7)), ((8'ha7) ? (7'h43) : (8'h9c))} : (((8'ha8) * (8'hbf)) - {(7'h43), (8'hbc)})) : (!(!{(8'hab), (8'ha6)})))), 
parameter param99 = (((((param98 ? param98 : param98) >= param98) ~^ (~|(param98 ? param98 : param98))) ? ({{param98, (7'h40)}} >>> {{(8'hbd), param98}}) : (&param98)) ? (|((8'hb4) ? param98 : (~|(param98 ^~ param98)))) : (&(&param98))))
(y, clk, wire9, wire10, wire11, wire12);
  output wire [(32'h217):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire10;
  input wire [(3'h7):(1'h0)] wire11;
  input wire signed [(5'h13):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire97;
  wire signed [(2'h3):(1'h0)] wire96;
  wire signed [(4'he):(1'h0)] wire55;
  wire signed [(3'h7):(1'h0)] wire94;
  reg [(5'h13):(1'h0)] reg54 = (1'h0);
  reg [(5'h12):(1'h0)] reg53 = (1'h0);
  reg [(5'h15):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg47 = (1'h0);
  reg signed [(4'he):(1'h0)] reg45 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg44 = (1'h0);
  reg [(5'h13):(1'h0)] reg35 = (1'h0);
  reg [(5'h14):(1'h0)] reg34 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg28 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg26 = (1'h0);
  reg [(2'h3):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg22 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg20 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg18 = (1'h0);
  reg [(3'h4):(1'h0)] reg16 = (1'h0);
  reg [(4'he):(1'h0)] reg15 = (1'h0);
  reg [(2'h2):(1'h0)] reg52 = (1'h0);
  reg [(4'hb):(1'h0)] reg50 = (1'h0);
  reg [(3'h6):(1'h0)] forvar48 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg46 = (1'h0);
  reg [(4'ha):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar42 = (1'h0);
  reg [(3'h7):(1'h0)] reg41 = (1'h0);
  reg [(5'h11):(1'h0)] reg40 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg39 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar38 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar37 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg36 = (1'h0);
  reg [(4'hf):(1'h0)] reg33 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg32 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar31 = (1'h0);
  reg [(4'he):(1'h0)] reg30 = (1'h0);
  reg [(5'h14):(1'h0)] reg29 = (1'h0);
  reg [(5'h14):(1'h0)] forvar27 = (1'h0);
  reg [(5'h13):(1'h0)] forvar25 = (1'h0);
  reg [(4'hd):(1'h0)] forvar23 = (1'h0);
  reg [(5'h11):(1'h0)] forvar21 = (1'h0);
  reg [(4'hb):(1'h0)] forvar19 = (1'h0);
  reg [(4'he):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar14 = (1'h0);
  reg [(2'h3):(1'h0)] forvar13 = (1'h0);
  assign y = {wire97,
                 wire96,
                 wire55,
                 wire94,
                 reg54,
                 reg53,
                 reg51,
                 reg49,
                 reg47,
                 reg45,
                 reg44,
                 reg35,
                 reg34,
                 reg28,
                 reg26,
                 reg24,
                 reg22,
                 reg20,
                 reg18,
                 reg16,
                 reg15,
                 reg52,
                 reg50,
                 forvar48,
                 reg46,
                 reg43,
                 forvar42,
                 reg41,
                 reg40,
                 reg39,
                 forvar38,
                 forvar37,
                 reg36,
                 reg33,
                 reg32,
                 forvar31,
                 reg30,
                 reg29,
                 forvar27,
                 forvar25,
                 forvar23,
                 forvar21,
                 forvar19,
                 reg17,
                 forvar14,
                 forvar13,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar13 = (1'h0); (forvar13 < (2'h2)); forvar13 = (forvar13 + (1'h1)))
        begin
          for (forvar14 = (1'h0); (forvar14 < (3'h4)); forvar14 = (forvar14 + (1'h1)))
            begin
              reg15 <= (|$signed((~^$signed(forvar14))));
              reg16 <= $unsigned($unsigned($signed($unsigned($unsigned((8'ha7))))));
              reg17 = ((wire9[(4'hb):(4'h9)] >> reg16) || $signed({((-forvar14) ?
                      (wire11 ? wire12 : reg16) : $signed(reg15))}));
              reg18 <= forvar14;
            end
          for (forvar19 = (1'h0); (forvar19 < (3'h4)); forvar19 = (forvar19 + (1'h1)))
            begin
              reg20 <= (~&reg18);
            end
          for (forvar21 = (1'h0); (forvar21 < (2'h2)); forvar21 = (forvar21 + (1'h1)))
            begin
              reg22 <= (^($signed({{forvar19},
                  wire10[(3'h6):(2'h3)]}) * $signed(wire10[(2'h2):(1'h0)])));
            end
          for (forvar23 = (1'h0); (forvar23 < (2'h2)); forvar23 = (forvar23 + (1'h1)))
            begin
              reg24 <= (~^$signed({((wire9 >= reg22) ?
                      forvar14[(1'h1):(1'h0)] : forvar13),
                  (reg18[(5'h13):(3'h7)] <= (!reg17))}));
            end
        end
      for (forvar25 = (1'h0); (forvar25 < (2'h3)); forvar25 = (forvar25 + (1'h1)))
        begin
          reg26 <= $unsigned(reg18);
          for (forvar27 = (1'h0); (forvar27 < (3'h4)); forvar27 = (forvar27 + (1'h1)))
            begin
              reg28 <= $unsigned($unsigned(forvar21[(4'h9):(2'h3)]));
              reg29 = (^($unsigned($unsigned((&forvar13))) ?
                  (~|$signed(forvar23[(4'hc):(2'h2)])) : (forvar23 ?
                      (forvar25[(4'h9):(2'h3)] <<< $signed(forvar19)) : reg28[(4'h9):(2'h2)])));
              reg30 = ($unsigned($signed(((forvar27 ~^ (8'haf)) + (forvar27 - forvar14)))) ?
                  reg24 : reg18[(5'h15):(2'h2)]);
            end
        end
    end
  always
    @(posedge clk) begin
      for (forvar31 = (1'h0); (forvar31 < (3'h4)); forvar31 = (forvar31 + (1'h1)))
        begin
          reg32 = reg16[(1'h1):(1'h0)];
          if (wire11)
            begin
              reg33 = (|(8'hb3));
              reg34 <= ((^reg26) ?
                  reg26 : (~|$signed(($signed(wire11) && {(7'h42), reg20}))));
              reg35 <= ((($signed((!wire9)) < (8'ha1)) + reg20) ?
                  reg24[(2'h3):(1'h0)] : reg34);
              reg36 = reg15[(4'hb):(3'h6)];
            end
          else
            begin
              reg33 = ($signed((|(reg15 ?
                  reg36 : wire9[(4'h8):(3'h6)]))) != $unsigned((~^$unsigned($signed(reg34)))));
            end
        end
      for (forvar37 = (1'h0); (forvar37 < (1'h0)); forvar37 = (forvar37 + (1'h1)))
        begin
          for (forvar38 = (1'h0); (forvar38 < (2'h3)); forvar38 = (forvar38 + (1'h1)))
            begin
              reg39 = ($unsigned(((reg20[(2'h3):(2'h2)] ?
                      (reg24 < (8'hb5)) : (reg34 ? reg16 : forvar31)) ?
                  reg28 : (8'ha1))) & (((wire10[(4'h8):(1'h0)] ?
                      $signed(reg24) : reg18[(4'h9):(2'h3)]) || {$unsigned(reg34),
                      forvar31[(3'h6):(3'h4)]}) ?
                  {{{reg24, wire10}, (|(8'hbc))}} : ((8'ha7) ~^ wire9)));
              reg40 = {{(reg18 ? $signed((!reg18)) : (&$signed(reg26)))}};
              reg41 = $unsigned(reg32[(3'h7):(1'h0)]);
            end
          for (forvar42 = (1'h0); (forvar42 < (1'h0)); forvar42 = (forvar42 + (1'h1)))
            begin
              reg43 = reg40;
              reg44 <= (^(({reg34[(3'h6):(1'h1)]} ?
                      ($signed(reg16) ?
                          reg43[(1'h1):(1'h1)] : ((8'haa) ^~ reg20)) : ((^wire11) ?
                          (reg20 & wire9) : $unsigned(reg35))) ?
                  {reg15,
                      (+$unsigned(reg39))} : $signed(reg16[(3'h4):(1'h0)])));
              reg45 <= (reg28[(3'h6):(2'h3)] ^~ ((8'hb9) & $unsigned($unsigned((~^reg33)))));
              reg46 = (($signed($signed((8'hb8))) ?
                      (~|reg32[(1'h0):(1'h0)]) : ((reg44[(2'h2):(1'h0)] <= $signed(reg16)) ?
                          $signed({(8'h9f)}) : (^$unsigned(reg16)))) ?
                  (-{$signed(forvar37), reg18[(5'h10):(1'h1)]}) : (reg43 ?
                      $signed($unsigned((-reg20))) : ($unsigned((reg16 > reg26)) * {(reg16 * (8'hb9)),
                          (forvar31 > reg32)})));
              reg47 <= $unsigned(reg18[(5'h11):(1'h0)]);
            end
          for (forvar48 = (1'h0); (forvar48 < (1'h1)); forvar48 = (forvar48 + (1'h1)))
            begin
              reg49 <= forvar38;
              reg50 = (|reg45);
              reg51 <= {$signed({($unsigned(reg44) ?
                          forvar48 : {forvar31, reg47}),
                      ($signed(wire12) ?
                          {(8'hbc), reg33} : (forvar38 <<< (8'hac)))})};
              reg52 = $unsigned($signed($unsigned((-$unsigned(forvar31)))));
            end
        end
      reg53 <= {$unsigned((wire9[(4'h8):(3'h6)] ?
              forvar38[(4'he):(3'h5)] : ((wire11 | reg33) >= (forvar37 >= forvar42)))),
          ($unsigned($signed((^~reg44))) ?
              $signed($unsigned((forvar48 ?
                  reg24 : reg47))) : ({reg43[(4'h9):(1'h0)],
                  (wire11 ? reg46 : reg39)} ^~ (~|(8'h9c))))};
      reg54 <= ({((|$signed(reg35)) ?
              $signed((reg36 + forvar48)) : ($unsigned(reg15) <= {reg32}))} >> ((~&wire12) ?
          $signed(reg36[(1'h1):(1'h0)]) : reg45));
    end
  assign wire55 = {$unsigned($signed(reg53[(3'h6):(2'h2)])), (7'h44)};
  module56 #() modinst95 (wire94, clk, reg51, reg34, wire55, reg20, reg54);
  assign wire96 = reg47;
  assign wire97 = reg22[(1'h0):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module56
#(parameter param93 = {((~|((&(8'ha9)) ? ((7'h44) ? (8'hb7) : (8'hab)) : ((8'hbc) * (7'h41)))) | {(|((8'ha7) ? (8'ha7) : (8'ha3))), ((8'hb1) + (~^(8'hbd)))}), (((^(^~(8'ha2))) ? (^((8'hb2) < (8'hb3))) : ((^~(8'hb6)) ? ((8'hba) <<< (8'hb2)) : {(8'ha0), (8'h9f)})) ? (~^(~(~&(8'hb5)))) : ((8'hbf) ? ((~&(8'hb8)) & (&(8'hb6))) : ((~^(8'hbd)) ? ((8'hab) ? (8'ha9) : (8'ha6)) : ((8'hb1) ^ (8'hbb)))))})
(y, clk, wire61, wire60, wire59, wire58, wire57);
  output wire [(32'h16f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h15):(1'h0)] wire61;
  input wire signed [(5'h14):(1'h0)] wire60;
  input wire [(4'he):(1'h0)] wire59;
  input wire [(4'h9):(1'h0)] wire58;
  input wire [(5'h13):(1'h0)] wire57;
  wire signed [(5'h11):(1'h0)] wire92;
  wire signed [(4'h9):(1'h0)] wire91;
  wire signed [(4'hf):(1'h0)] wire90;
  wire [(3'h7):(1'h0)] wire89;
  wire signed [(5'h13):(1'h0)] wire88;
  wire [(4'he):(1'h0)] wire87;
  wire [(3'h4):(1'h0)] wire82;
  wire signed [(3'h5):(1'h0)] wire63;
  wire signed [(3'h7):(1'h0)] wire62;
  reg [(5'h12):(1'h0)] reg86 = (1'h0);
  reg signed [(4'he):(1'h0)] reg85 = (1'h0);
  reg [(4'hc):(1'h0)] reg79 = (1'h0);
  reg [(3'h7):(1'h0)] reg78 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg77 = (1'h0);
  reg signed [(4'he):(1'h0)] reg76 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg74 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg73 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg70 = (1'h0);
  reg [(5'h10):(1'h0)] reg68 = (1'h0);
  reg [(4'hf):(1'h0)] reg67 = (1'h0);
  reg signed [(4'he):(1'h0)] reg65 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar84 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar83 = (1'h0);
  reg [(4'h8):(1'h0)] reg81 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar80 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar75 = (1'h0);
  reg [(4'hf):(1'h0)] reg72 = (1'h0);
  reg [(4'he):(1'h0)] reg71 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar69 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar66 = (1'h0);
  reg [(4'hb):(1'h0)] forvar64 = (1'h0);
  assign y = {wire92,
                 wire91,
                 wire90,
                 wire89,
                 wire88,
                 wire87,
                 wire82,
                 wire63,
                 wire62,
                 reg86,
                 reg85,
                 reg79,
                 reg78,
                 reg77,
                 reg76,
                 reg74,
                 reg73,
                 reg70,
                 reg68,
                 reg67,
                 reg65,
                 forvar84,
                 forvar83,
                 reg81,
                 forvar80,
                 forvar75,
                 reg72,
                 reg71,
                 forvar69,
                 forvar66,
                 forvar64,
                 (1'h0)};
  assign wire62 = $signed(wire61[(5'h13):(5'h12)]);
  assign wire63 = (wire61[(4'h8):(3'h4)] ?
                      (8'hb3) : (((8'hbb) ?
                              {(!wire59)} : ($unsigned(wire59) ?
                                  (&wire57) : (~^(8'haa)))) ?
                          (((wire58 > wire57) ?
                                  (7'h41) : (wire59 ? wire58 : wire57)) ?
                              wire59 : $unsigned((~|wire60))) : {$signed($unsigned(wire62))}));
  always
    @(posedge clk) begin
      for (forvar64 = (1'h0); (forvar64 < (3'h4)); forvar64 = (forvar64 + (1'h1)))
        begin
          reg65 <= $signed($signed((($unsigned(wire60) ?
              wire63[(2'h2):(1'h0)] : ((8'ha9) ?
                  wire59 : wire57)) + (((7'h42) != wire62) ^~ wire61))));
          for (forvar66 = (1'h0); (forvar66 < (3'h4)); forvar66 = (forvar66 + (1'h1)))
            begin
              reg67 <= (&(~&$unsigned((^~(wire62 ? wire57 : (8'hbb))))));
              reg68 <= $unsigned($unsigned((&((wire58 + wire60) ?
                  forvar66 : (wire61 == forvar64)))));
            end
          for (forvar69 = (1'h0); (forvar69 < (2'h3)); forvar69 = (forvar69 + (1'h1)))
            begin
              reg70 <= ($unsigned($signed(($unsigned(reg67) ?
                      wire59[(4'hc):(3'h6)] : (forvar64 ?
                          forvar64 : wire62)))) ?
                  (wire59 <<< (((forvar66 ? (8'hbf) : (8'hbc)) ?
                      wire60[(3'h5):(3'h5)] : $signed((7'h40))) || reg67[(3'h5):(3'h5)])) : (&{(^~(wire63 << (8'hac))),
                      $signed(forvar64[(1'h1):(1'h1)])}));
              reg71 = ($signed($signed((~&reg68))) ?
                  wire59 : (&$signed(wire60)));
              reg72 = ($signed(((~$signed(reg67)) ?
                  $signed($signed(reg71)) : {(&reg70),
                      forvar69[(3'h5):(3'h5)]})) >>> $signed((((wire59 ?
                          forvar64 : reg71) ?
                      wire62 : {forvar69}) ?
                  $signed($unsigned(forvar69)) : (forvar66 != (+reg70)))));
              reg73 <= $signed(wire59);
              reg74 <= (((~|(8'h9c)) ?
                  $unsigned($unsigned((wire57 == forvar69))) : (reg73[(4'h9):(4'h8)] - {$signed(reg70)})) + $signed((reg71 ?
                  reg70[(2'h3):(2'h2)] : (~^wire59))));
            end
        end
      for (forvar75 = (1'h0); (forvar75 < (1'h0)); forvar75 = (forvar75 + (1'h1)))
        begin
          if ((&$signed({($unsigned(forvar64) ?
                  $unsigned(reg70) : forvar69[(4'ha):(3'h5)])})))
            begin
              reg76 <= (($unsigned((^(reg74 ?
                      reg70 : reg71))) <<< ((~&(forvar75 > reg67)) ?
                      reg71 : {forvar69[(1'h0):(1'h0)], $unsigned(wire58)})) ?
                  ((wire63 && {{wire57,
                          forvar69}}) - (~&wire62[(3'h4):(1'h0)])) : $unsigned($signed({$signed(reg72),
                      (reg68 || (8'hbb))})));
              reg77 <= {$signed(forvar69),
                  $signed(($signed(((8'hb7) >= forvar66)) | ({reg72} | (^(8'ha9)))))};
              reg78 <= (8'ha1);
              reg79 <= forvar64;
            end
          else
            begin
              reg76 <= $unsigned({((reg73[(2'h2):(1'h0)] >> (reg79 ?
                          reg65 : wire58)) ?
                      $unsigned($unsigned(wire61)) : ((reg79 ?
                          wire61 : reg68) >>> {forvar69, wire62})),
                  (wire62[(1'h1):(1'h1)] ?
                      ($unsigned(wire60) ?
                          (wire60 | reg70) : $unsigned(reg68)) : $unsigned($signed((8'hab))))});
              reg77 <= $signed(($signed(reg73[(4'h9):(3'h7)]) ?
                  $unsigned(wire57[(3'h7):(2'h3)]) : ((~&$signed(reg70)) << forvar75)));
              reg78 <= (~&$unsigned(($signed((reg65 ^~ (8'ha9))) >= wire57[(4'h9):(3'h7)])));
            end
          for (forvar80 = (1'h0); (forvar80 < (3'h4)); forvar80 = (forvar80 + (1'h1)))
            begin
              reg81 = ((reg72 >>> reg70) ?
                  reg68[(2'h3):(1'h1)] : reg78[(1'h0):(1'h0)]);
            end
        end
    end
  assign wire82 = wire57;
  always
    @(posedge clk) begin
      for (forvar83 = (1'h0); (forvar83 < (1'h1)); forvar83 = (forvar83 + (1'h1)))
        begin
          for (forvar84 = (1'h0); (forvar84 < (1'h0)); forvar84 = (forvar84 + (1'h1)))
            begin
              reg85 <= {$signed({reg70[(3'h5):(3'h4)], wire58[(4'h8):(3'h4)]}),
                  $signed($unsigned((^~(wire82 ^~ forvar83))))};
              reg86 <= $unsigned((8'ha6));
            end
        end
    end
  assign wire87 = (|($signed(wire58[(3'h4):(2'h3)]) || $signed($signed(reg86))));
  assign wire88 = $signed((((-(+wire59)) ?
                      (reg76[(4'hb):(3'h6)] >>> wire87) : $unsigned(wire63)) < $signed($unsigned((|(8'h9c))))));
  assign wire89 = (((((^wire62) >> (7'h44)) > wire87[(2'h3):(1'h1)]) ?
                          (+$signed(reg65)) : reg70[(1'h1):(1'h1)]) ?
                      (8'hbd) : reg70);
  assign wire90 = reg86;
  assign wire91 = wire58;
  assign wire92 = (~&(((wire82[(3'h4):(1'h1)] < reg73[(1'h0):(1'h0)]) ?
                      wire82 : (((8'ha8) ?
                          wire60 : reg78) && wire57)) && ((~&$signed((8'ha2))) + wire88[(5'h13):(2'h2)])));
endmodule