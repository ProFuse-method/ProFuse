(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire signed [(2'h2):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire15;
  wire [(2'h3):(1'h0)] wire14;
  wire [(4'h8):(1'h0)] wire13;
  wire signed [(3'h5):(1'h0)] wire4;
  reg [(3'h6):(1'h0)] reg12 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg11 = (1'h0);
  reg [(3'h6):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg8 = (1'h0);
  reg [(2'h3):(1'h0)] reg7 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg6 = (1'h0);
  reg [(2'h2):(1'h0)] reg5 = (1'h0);
  assign y = {wire15,
                 wire14,
                 wire13,
                 wire4,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = $signed($unsigned((-{(8'ha3)})));
  always
    @(posedge clk) begin
      if ($signed(wire3[(2'h3):(2'h2)]))
        begin
          reg5 <= wire4[(3'h5):(1'h0)];
        end
      else
        begin
          reg5 <= wire3;
          if ($signed(($signed($unsigned((8'hab))) ?
              $signed((wire3 && wire0)) : (wire0 >= (wire4 >>> wire4)))))
            begin
              reg6 <= wire1;
              reg7 <= ($unsigned($unsigned($unsigned(wire2))) ?
                  (^~($signed((8'h9c)) > $signed((8'hb0)))) : wire4[(1'h0):(1'h0)]);
            end
          else
            begin
              reg6 <= $signed(($signed($signed(wire3)) <<< ($unsigned((8'h9d)) ?
                  (~&reg7) : (wire3 ? wire3 : wire4))));
              reg7 <= wire2;
              reg8 <= $unsigned($unsigned((~|{(8'ha5)})));
            end
          if (reg7[(1'h0):(1'h0)])
            begin
              reg9 <= {(reg6[(1'h1):(1'h0)] <<< $unsigned((~wire0)))};
              reg10 <= reg7[(2'h3):(2'h2)];
              reg11 <= $unsigned($signed(({wire1} ? reg8 : (wire0 - reg5))));
            end
          else
            begin
              reg9 <= $signed((8'hb0));
            end
        end
      reg12 <= $unsigned(reg6[(1'h0):(1'h0)]);
    end
  assign wire13 = reg11;
  assign wire14 = {(((wire1 != reg12) ?
                          $unsigned(wire1) : $unsigned(wire0)) ~^ (~&wire1[(1'h0):(1'h0)]))};
  assign wire15 = $signed(wire2[(1'h1):(1'h1)]);
endmodule