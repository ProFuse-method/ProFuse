(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire87;
  wire [(2'h3):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire20;
  wire [(3'h7):(1'h0)] wire7;
  wire [(3'h5):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire4;
  reg signed [(2'h2):(1'h0)] reg9 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  assign y = {wire87,
                 wire22,
                 wire20,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg9,
                 reg8,
                 (1'h0)};
  assign wire4 = ($signed((((8'haa) ?
                     (8'h9d) : (8'h9e)) + $unsigned(wire1))) & (8'ha2));
  assign wire5 = (+(wire0[(2'h3):(2'h2)] ? wire4 : wire2[(3'h6):(1'h1)]));
  assign wire6 = ($signed(((wire0 ~^ wire3) != $signed(wire3))) >> (wire5 ?
                     $signed(wire2) : ((^~wire1) ?
                         wire4 : (wire3 ? wire0 : wire4))));
  assign wire7 = ((&wire4[(2'h2):(1'h1)]) ?
                     {(~|(wire2 || wire4))} : (~(((8'ha0) ? (8'ha2) : wire6) ?
                         (wire5 >> wire3) : wire5)));
  always
    @(posedge clk) begin
      reg8 <= wire1[(1'h0):(1'h0)];
      reg9 <= wire2[(1'h0):(1'h0)];
    end
  module10 #() modinst21 (wire20, clk, wire3, wire7, wire2, wire5);
  assign wire22 = wire0[(3'h5):(2'h2)];
  module23 #() modinst88 (.clk(clk), .y(wire87), .wire24(wire2), .wire25(wire5), .wire26(wire7), .wire27(wire3));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23
#(parameter param86 = ((!({(8'ha1)} ? {(8'hb0)} : (~&(8'ha1)))) ? ((8'hac) ? (((8'hac) ^ (8'ha8)) ? {(8'ha6)} : ((8'ha8) ? (8'h9c) : (8'ha6))) : {((8'ha8) ? (8'ha2) : (8'haa))}) : {(((8'haa) & (8'ha2)) ? ((8'ha0) <= (8'hab)) : ((8'had) & (8'ha6)))}))
(y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire27;
  input wire signed [(2'h3):(1'h0)] wire26;
  input wire signed [(4'hb):(1'h0)] wire25;
  input wire signed [(4'hb):(1'h0)] wire24;
  wire [(4'ha):(1'h0)] wire85;
  wire signed [(3'h6):(1'h0)] wire81;
  wire signed [(4'hb):(1'h0)] wire79;
  wire signed [(4'hb):(1'h0)] wire78;
  wire [(4'ha):(1'h0)] wire77;
  wire signed [(3'h5):(1'h0)] wire75;
  wire signed [(4'hb):(1'h0)] wire55;
  wire signed [(4'h9):(1'h0)] wire30;
  wire [(4'hb):(1'h0)] wire29;
  wire [(3'h4):(1'h0)] wire28;
  reg signed [(3'h6):(1'h0)] reg84 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg83 = (1'h0);
  reg [(2'h2):(1'h0)] reg82 = (1'h0);
  assign y = {wire85,
                 wire81,
                 wire79,
                 wire78,
                 wire77,
                 wire75,
                 wire55,
                 wire30,
                 wire29,
                 wire28,
                 reg84,
                 reg83,
                 reg82,
                 (1'h0)};
  assign wire28 = {$unsigned(({wire25} ? (|wire25) : $unsigned(wire24)))};
  assign wire29 = wire28;
  assign wire30 = wire29[(2'h3):(2'h2)];
  module31 #() modinst56 (wire55, clk, wire27, wire25, wire24, wire29);
  module57 #() modinst76 (.wire58(wire30), .wire60(wire25), .wire61(wire26), .y(wire75), .clk(clk), .wire59(wire24));
  assign wire77 = wire24;
  assign wire78 = (~|((|(~|wire24)) ?
                      (wire75[(3'h5):(1'h1)] ^ ((8'hb0) + (8'haa))) : (wire75[(1'h0):(1'h0)] ?
                          (wire27 >> wire55) : (wire30 & wire77))));
  module57 #() modinst80 (wire79, clk, wire25, wire55, wire24, wire30);
  assign wire81 = (wire27[(1'h0):(1'h0)] ~^ $signed(wire25));
  always
    @(posedge clk) begin
      reg82 <= wire79[(4'h8):(3'h6)];
      reg83 <= ((wire81[(2'h3):(1'h0)] ?
          wire75[(2'h3):(1'h0)] : $unsigned($unsigned(wire75))) < (^~$unsigned(wire24[(4'ha):(2'h2)])));
      reg84 <= (((&$signed((8'had))) != wire55[(1'h1):(1'h1)]) == (~^((wire28 ?
          wire26 : wire55) >> $signed(wire78))));
    end
  assign wire85 = $unsigned(wire29[(4'ha):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h1e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire14;
  input wire [(3'h7):(1'h0)] wire13;
  input wire signed [(4'h8):(1'h0)] wire12;
  input wire [(2'h2):(1'h0)] wire11;
  wire [(4'h9):(1'h0)] wire19;
  wire signed [(2'h2):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire15;
  reg signed [(4'ha):(1'h0)] reg16 = (1'h0);
  assign y = {wire19, wire18, wire17, wire15, reg16, (1'h0)};
  assign wire15 = (($signed(((8'ha0) ? wire12 : wire13)) ?
                          wire14[(4'hb):(2'h3)] : wire13[(3'h4):(1'h0)]) ?
                      wire13 : (wire12 ? $unsigned((^wire13)) : {{wire13}}));
  always
    @(posedge clk) begin
      reg16 <= $signed($signed($unsigned({wire15})));
    end
  assign wire17 = $unsigned($unsigned((&(wire12 >>> wire14))));
  assign wire18 = wire14[(3'h4):(2'h2)];
  assign wire19 = ($signed($signed((wire17 ? wire11 : wire14))) ?
                      (-($signed(wire12) ?
                          $signed(wire17) : $unsigned(wire12))) : $unsigned((|(wire11 & wire17))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module57
#(parameter param74 = ({{((8'ha3) <= (8'ha8))}} ? (~&(((8'ha6) ? (8'h9e) : (8'hb0)) ? ((8'h9d) >= (8'ha5)) : (8'ha5))) : ((~|(!(8'ha4))) | {((8'ha1) ? (8'h9e) : (8'ha0))})))
(y, clk, wire61, wire60, wire59, wire58);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire61;
  input wire signed [(4'hb):(1'h0)] wire60;
  input wire signed [(4'h9):(1'h0)] wire59;
  input wire signed [(3'h7):(1'h0)] wire58;
  wire [(3'h7):(1'h0)] wire73;
  wire signed [(4'h8):(1'h0)] wire72;
  wire [(3'h7):(1'h0)] wire71;
  wire [(4'hb):(1'h0)] wire70;
  wire signed [(4'h9):(1'h0)] wire69;
  wire signed [(2'h3):(1'h0)] wire68;
  wire signed [(4'h8):(1'h0)] wire67;
  wire [(3'h4):(1'h0)] wire66;
  wire signed [(4'ha):(1'h0)] wire65;
  wire signed [(4'h9):(1'h0)] wire64;
  wire signed [(3'h6):(1'h0)] wire63;
  wire [(2'h2):(1'h0)] wire62;
  assign y = {wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 (1'h0)};
  assign wire62 = (!wire60[(3'h5):(2'h3)]);
  assign wire63 = wire58;
  assign wire64 = wire59[(2'h2):(2'h2)];
  assign wire65 = $signed($unsigned(wire64));
  assign wire66 = $signed(wire58);
  assign wire67 = (+$unsigned($unsigned((!wire58))));
  assign wire68 = (8'h9c);
  assign wire69 = $signed(wire63);
  assign wire70 = (~|wire64);
  assign wire71 = $signed(($unsigned(wire68[(1'h1):(1'h1)]) ?
                      wire65[(4'h8):(2'h2)] : $unsigned(wire70)));
  assign wire72 = wire68[(2'h2):(1'h1)];
  assign wire73 = wire63;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module31  (y, clk, wire35, wire34, wire33, wire32);
  output wire [(32'h7c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire35;
  input wire [(2'h3):(1'h0)] wire34;
  input wire signed [(4'hb):(1'h0)] wire33;
  input wire [(3'h7):(1'h0)] wire32;
  wire [(3'h6):(1'h0)] wire54;
  wire signed [(4'h9):(1'h0)] wire53;
  wire [(2'h2):(1'h0)] wire52;
  wire [(2'h3):(1'h0)] wire45;
  wire [(4'ha):(1'h0)] wire44;
  wire signed [(4'h8):(1'h0)] wire43;
  wire signed [(3'h7):(1'h0)] wire36;
  reg signed [(4'hb):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg50 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg49 = (1'h0);
  reg [(4'h8):(1'h0)] reg48 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg46 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg42 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg41 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg40 = (1'h0);
  reg [(2'h2):(1'h0)] reg39 = (1'h0);
  reg [(4'h9):(1'h0)] reg38 = (1'h0);
  reg [(3'h6):(1'h0)] reg37 = (1'h0);
  assign y = {wire54,
                 wire53,
                 wire52,
                 wire45,
                 wire44,
                 wire43,
                 wire36,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 (1'h0)};
  assign wire36 = (!$unsigned((wire33 || (^wire32))));
  always
    @(posedge clk) begin
      reg37 <= $unsigned(wire36);
      if ({{$signed(((8'h9c) != wire35))}})
        begin
          reg38 <= reg37;
          reg39 <= ((reg38 < {reg37}) <= {($signed(wire33) ^~ $signed(reg37))});
        end
      else
        begin
          reg38 <= (wire35 >> $signed($unsigned(wire36)));
          reg39 <= wire33[(3'h7):(3'h7)];
          reg40 <= {reg38[(1'h0):(1'h0)]};
        end
    end
  always
    @(posedge clk) begin
      reg41 <= $unsigned($signed($signed((wire36 <= wire35))));
      reg42 <= $signed(((~^(wire32 ?
          (8'h9c) : wire35)) && wire34[(2'h2):(2'h2)]));
    end
  assign wire43 = ((!$signed(wire32[(1'h0):(1'h0)])) >= reg37);
  assign wire44 = (8'h9e);
  assign wire45 = reg42[(3'h6):(3'h4)];
  always
    @(posedge clk) begin
      reg46 <= reg38;
      if (reg39)
        begin
          reg47 <= $unsigned(wire36[(1'h0):(1'h0)]);
          reg48 <= reg37;
          if ((^~((((8'hb0) << wire33) ? $signed(wire43) : {reg46}) ?
              $unsigned($unsigned(wire33)) : $unsigned($unsigned(reg38)))))
            begin
              reg49 <= (~|(reg41[(1'h0):(1'h0)] ~^ (+$signed(reg41))));
              reg50 <= (($signed($unsigned(wire45)) ?
                      $signed((^~reg47)) : $unsigned({wire36})) ?
                  reg42[(3'h7):(1'h1)] : {(8'h9f)});
            end
          else
            begin
              reg49 <= reg42[(2'h2):(1'h1)];
              reg50 <= (8'ha0);
              reg51 <= $signed((~(&$unsigned(wire43))));
            end
        end
      else
        begin
          reg47 <= (+((!((8'hae) ^ wire32)) ? $unsigned(wire43) : {wire43}));
        end
    end
  assign wire52 = $signed(((~wire43[(2'h3):(1'h0)]) ?
                      $unsigned(wire44[(4'h8):(2'h2)]) : (~^$unsigned(reg42))));
  assign wire53 = $unsigned({{(wire34 * wire45)}});
  assign wire54 = (^~$signed(((+reg48) > wire35[(1'h1):(1'h1)])));
endmodule