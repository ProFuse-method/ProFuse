(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(2'h2):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire10;
  wire [(4'ha):(1'h0)] wire9;
  wire [(4'h9):(1'h0)] wire8;
  reg [(3'h4):(1'h0)] reg7 = (1'h0);
  reg [(4'ha):(1'h0)] reg6 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg5 = (1'h0);
  reg [(2'h2):(1'h0)] reg4 = (1'h0);
  assign y = {wire10, wire9, wire8, reg7, reg6, reg5, reg4, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= wire0;
      if ($signed(($unsigned($signed(wire3)) ?
          ($signed(reg4) >> (wire2 ? wire1 : reg4)) : wire3[(1'h1):(1'h1)])))
        begin
          if ($signed({$signed((wire3 ? reg4 : wire2))}))
            begin
              reg5 <= $signed(reg4);
            end
          else
            begin
              reg5 <= {reg4[(2'h2):(1'h0)]};
            end
          reg6 <= (wire0 | $unsigned((wire3[(3'h4):(2'h2)] * (+wire3))));
          reg7 <= $signed((!(-reg5[(4'h9):(3'h6)])));
        end
      else
        begin
          reg5 <= (($unsigned($signed(reg6)) << $signed((wire2 ~^ wire1))) ?
              {$unsigned((!reg7))} : ($signed($unsigned(wire0)) + (reg4[(2'h2):(2'h2)] ?
                  (reg7 ? reg7 : wire3) : ((8'h9d) ? (8'ha6) : reg6))));
          reg6 <= $signed(wire1);
          reg7 <= $signed((wire0[(4'h8):(3'h5)] & ($unsigned(wire3) >> (wire3 ?
              wire0 : reg6))));
        end
    end
  assign wire8 = wire2;
  assign wire9 = (+$unsigned({(wire8 < (8'ha1))}));
  assign wire10 = (~^(&$signed(reg7)));
endmodule