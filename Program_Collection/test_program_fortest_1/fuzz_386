(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h65):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire58;
  wire signed [(4'ha):(1'h0)] wire56;
  wire [(3'h6):(1'h0)] wire55;
  wire [(2'h2):(1'h0)] wire53;
  wire signed [(4'h8):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire12;
  wire [(3'h7):(1'h0)] wire11;
  wire [(4'h9):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire5;
  wire [(3'h4):(1'h0)] wire4;
  reg signed [(3'h5):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg7 = (1'h0);
  assign y = {wire58,
                 wire56,
                 wire55,
                 wire53,
                 wire13,
                 wire12,
                 wire11,
                 wire6,
                 wire5,
                 wire4,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 (1'h0)};
  assign wire4 = {(({wire3} ?
                         (wire2 ? wire2 : wire1) : $signed(wire2)) ~^ ((wire0 ?
                             wire2 : (8'hab)) ?
                         ((8'hb0) ? wire3 : wire0) : $signed(wire0)))};
  assign wire5 = $unsigned(wire4);
  assign wire6 = $unsigned((~($signed(wire2) - $signed(wire2))));
  always
    @(posedge clk) begin
      reg7 <= $unsigned(wire6);
      reg8 <= wire1;
    end
  always
    @(posedge clk) begin
      reg9 <= (!wire1[(3'h4):(1'h0)]);
      reg10 <= (reg7 ?
          (($unsigned(wire1) ?
              $signed(reg8) : (reg9 ?
                  wire6 : wire6)) + wire1) : (+wire3[(1'h1):(1'h1)]));
    end
  assign wire11 = reg7[(1'h0):(1'h0)];
  assign wire12 = (wire1 ?
                      {$signed($unsigned(wire2))} : ((!$signed(wire5)) - wire2[(1'h0):(1'h0)]));
  assign wire13 = reg9;
  module14 #() modinst54 (.wire16(wire1), .wire15(wire5), .wire18(wire13), .clk(clk), .y(wire53), .wire17(wire2));
  assign wire55 = $signed((+$signed(wire53[(1'h0):(1'h0)])));
  module28 #() modinst57 (.wire31(wire55), .wire30(wire12), .wire29(reg9), .wire32(reg7), .clk(clk), .y(wire56));
  assign wire58 = (($signed(wire11) ?
                          {reg9[(1'h0):(1'h0)]} : wire12[(4'ha):(4'ha)]) ?
                      (-($unsigned(wire55) ?
                          wire5 : $signed((8'hae)))) : ($unsigned((wire53 ?
                          wire3 : wire3)) < $signed(wire11)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param52 = ((((!(8'h9e)) ? ((8'ha7) ? (8'ha9) : (8'h9e)) : ((8'ha2) >> (8'ha9))) & (^~((8'hae) | (8'ha0)))) ? ((((8'ha5) && (8'haa)) <= ((8'ha9) << (8'h9c))) >>> (~&{(8'ha2)})) : ({{(8'h9d)}} ? ((8'ha4) ^ {(8'had)}) : (((8'ha8) ? (8'ha3) : (8'hab)) * {(8'ha5)}))))
(y, clk, wire15, wire16, wire17, wire18);
  output wire [(32'h8c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire15;
  input wire signed [(4'ha):(1'h0)] wire16;
  input wire signed [(3'h6):(1'h0)] wire17;
  input wire [(3'h4):(1'h0)] wire18;
  wire [(3'h4):(1'h0)] wire51;
  wire signed [(3'h4):(1'h0)] wire40;
  wire signed [(3'h6):(1'h0)] wire19;
  wire signed [(4'ha):(1'h0)] wire20;
  wire signed [(4'h8):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire26;
  wire [(4'h8):(1'h0)] wire27;
  wire [(3'h5):(1'h0)] wire38;
  reg [(2'h3):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg47 = (1'h0);
  reg [(2'h3):(1'h0)] reg46 = (1'h0);
  reg [(4'h9):(1'h0)] reg45 = (1'h0);
  reg [(3'h6):(1'h0)] reg44 = (1'h0);
  reg [(2'h2):(1'h0)] reg43 = (1'h0);
  reg [(2'h3):(1'h0)] reg42 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg41 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg23 = (1'h0);
  reg [(4'h9):(1'h0)] reg24 = (1'h0);
  reg [(3'h4):(1'h0)] reg25 = (1'h0);
  assign y = {wire51,
                 wire40,
                 wire19,
                 wire20,
                 wire21,
                 wire26,
                 wire27,
                 wire38,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg22,
                 reg23,
                 reg24,
                 reg25,
                 (1'h0)};
  assign wire19 = (~&$unsigned(($unsigned(wire16) | wire18)));
  assign wire20 = ((wire16[(2'h2):(2'h2)] ?
                          ($unsigned(wire17) == (wire19 ?
                              wire17 : wire18)) : ((^wire16) | (wire19 <= wire16))) ?
                      (($unsigned(wire16) ? (~^wire19) : (~^wire17)) ?
                          {(wire19 ?
                                  wire15 : (8'h9e))} : $unsigned((~wire19))) : ($signed(wire16[(2'h2):(1'h1)]) | wire19[(3'h5):(2'h3)]));
  assign wire21 = (wire16[(2'h2):(2'h2)] & {wire20});
  always
    @(posedge clk) begin
      reg22 <= (wire20 + {(wire19 ? wire19 : wire21[(1'h1):(1'h1)])});
      reg23 <= ($unsigned((8'h9d)) & (wire15[(2'h2):(2'h2)] ?
          (~|wire15[(1'h1):(1'h1)]) : (wire20 <= wire16)));
      if ($signed($unsigned((!(wire16 + wire18)))))
        begin
          reg24 <= (wire15[(3'h7):(2'h2)] ?
              $signed($unsigned({reg23})) : (reg23 ?
                  reg23[(1'h1):(1'h1)] : (wire16[(1'h1):(1'h1)] <<< (wire21 >= wire18))));
        end
      else
        begin
          reg24 <= (($unsigned($unsigned(wire17)) >>> {$unsigned(wire20)}) - (wire17 ?
              (~|(reg24 <= (8'h9f))) : ((wire15 ? wire18 : reg22) != (wire15 ?
                  reg22 : wire16))));
          if (($unsigned((wire16 ?
                  (wire16 ^~ reg22) : (wire20 ? wire16 : (8'ha7)))) ?
              $unsigned((8'had)) : $signed((~^{(8'ha5)}))))
            begin
              reg25 <= wire18;
            end
          else
            begin
              reg25 <= $unsigned({$signed($signed(reg22))});
            end
        end
    end
  assign wire26 = $unsigned(wire17[(2'h3):(1'h0)]);
  assign wire27 = $unsigned(((&((8'had) ? reg24 : wire16)) * reg23));
  module28 #() modinst39 (.wire32(wire20), .y(wire38), .wire31(reg23), .clk(clk), .wire30(wire16), .wire29(wire26));
  assign wire40 = (^~((&(wire38 ? wire18 : wire27)) ^~ wire17));
  always
    @(posedge clk) begin
      if (wire18[(2'h3):(2'h3)])
        begin
          reg41 <= $signed(({reg23} ?
              (+$unsigned(wire26)) : wire38[(3'h4):(1'h1)]));
        end
      else
        begin
          reg41 <= ({(|(~|wire21))} ?
              ((!wire38) ?
                  (reg22[(4'h9):(3'h6)] ?
                      wire26[(4'h8):(3'h5)] : wire40) : {$unsigned(wire16)}) : $unsigned(wire17[(2'h3):(2'h2)]));
          reg42 <= {wire18[(2'h3):(1'h1)]};
        end
      if ((~|reg25[(2'h3):(1'h1)]))
        begin
          if ((8'ha7))
            begin
              reg43 <= wire19[(2'h2):(1'h0)];
            end
          else
            begin
              reg43 <= $signed(((!reg23) ? reg42 : wire17[(1'h0):(1'h0)]));
              reg44 <= (~$signed((8'h9c)));
              reg45 <= $signed(($signed($signed(wire26)) ?
                  ((wire16 ?
                      (8'ha6) : (8'ha4)) <= (!(8'hab))) : $unsigned(reg25[(3'h4):(1'h0)])));
            end
          reg46 <= ((~|$signed(wire19)) & reg42[(2'h3):(2'h2)]);
          reg47 <= $signed($unsigned(wire19));
        end
      else
        begin
          if ((~|(({wire15} + {(8'h9d)}) | ({(8'ha2)} * wire19))))
            begin
              reg43 <= wire40[(3'h4):(3'h4)];
              reg44 <= ((wire17[(2'h2):(1'h1)] ~^ (8'haa)) ?
                  (reg47[(4'hb):(3'h4)] - $signed(wire27)) : {({(8'ha9)} >> wire21[(3'h7):(2'h3)])});
              reg45 <= $unsigned(wire38);
            end
          else
            begin
              reg43 <= ((8'ha5) ?
                  ($unsigned((wire27 | reg23)) ?
                      $signed((reg22 > (8'ha1))) : ((wire20 == wire20) ?
                          wire18[(1'h1):(1'h1)] : (~^wire21))) : (^~(wire40[(3'h4):(1'h0)] ?
                      $unsigned(wire18) : {reg22})));
            end
          reg46 <= (reg24 ?
              reg46[(1'h1):(1'h1)] : $signed($unsigned((wire40 ?
                  wire20 : reg46))));
          if ((wire38 ?
              (^~wire27[(3'h6):(1'h0)]) : $unsigned(wire40[(1'h0):(1'h0)])))
            begin
              reg47 <= (8'ha1);
              reg48 <= (reg46 ^ $signed(({(8'haf)} ?
                  (wire26 + (8'ha8)) : $signed((8'ha4)))));
              reg49 <= (^~$unsigned(((wire17 - reg47) ^~ (^(8'hb0)))));
            end
          else
            begin
              reg47 <= $unsigned($unsigned((^$unsigned(reg42))));
              reg48 <= wire16[(4'h9):(3'h7)];
            end
        end
      reg50 <= (&(&$signed(wire17)));
    end
  assign wire51 = ($unsigned(((!wire20) ? (~^wire18) : (|reg24))) ^~ (^wire15));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module28
#(parameter param37 = {(^(((8'ha0) != (8'ha4)) ? ((8'hb0) <= (8'hb0)) : (8'ha4)))})
(y, clk, wire32, wire31, wire30, wire29);
  output wire [(32'h16):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire32;
  input wire [(3'h6):(1'h0)] wire31;
  input wire [(4'ha):(1'h0)] wire30;
  input wire signed [(4'h8):(1'h0)] wire29;
  wire [(3'h7):(1'h0)] wire36;
  wire [(2'h2):(1'h0)] wire35;
  wire signed [(3'h5):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire33;
  assign y = {wire36, wire35, wire34, wire33, (1'h0)};
  assign wire33 = $unsigned($signed(wire30[(3'h5):(2'h3)]));
  assign wire34 = wire33;
  assign wire35 = wire31[(2'h3):(1'h1)];
  assign wire36 = $unsigned($signed($signed(wire30)));
endmodule