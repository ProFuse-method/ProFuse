(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h40):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire32;
  wire [(3'h7):(1'h0)] wire31;
  wire [(3'h7):(1'h0)] wire30;
  wire [(2'h2):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire9;
  wire [(4'h8):(1'h0)] wire8;
  wire signed [(4'ha):(1'h0)] wire7;
  wire signed [(3'h4):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire4;
  assign y = {wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire27,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = $signed($signed(($signed(wire1) < (wire2 ? wire0 : (8'h9f)))));
  assign wire5 = wire0[(2'h2):(1'h1)];
  assign wire6 = $signed($unsigned((^(&wire0))));
  assign wire7 = (wire3[(3'h4):(3'h4)] | {$signed($unsigned(wire2))});
  assign wire8 = $unsigned(wire7);
  assign wire9 = (~^wire5);
  module10 #() modinst28 (.clk(clk), .wire12(wire1), .wire13(wire2), .wire11(wire0), .y(wire27), .wire14(wire9));
  assign wire29 = wire1;
  assign wire30 = $signed({(8'h9c)});
  assign wire31 = ((~^($unsigned(wire2) ?
                          wire3[(2'h2):(1'h1)] : wire0[(2'h3):(1'h1)])) ?
                      ((~^(~wire6)) ?
                          ((wire7 >> wire4) ?
                              (wire9 * wire29) : wire1[(2'h2):(2'h2)]) : wire1[(1'h0):(1'h0)]) : ($signed(wire0) ?
                          (|$signed(wire1)) : wire3[(2'h2):(2'h2)]));
  assign wire32 = wire7[(1'h0):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param26 = {((((8'hae) ? (8'ha2) : (8'h9e)) | ((8'ha7) | (8'had))) * (((8'ha1) ? (8'had) : (8'ha4)) * (^(8'ha8))))})
(y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire14;
  input wire [(4'h9):(1'h0)] wire13;
  input wire [(4'h8):(1'h0)] wire12;
  input wire [(2'h2):(1'h0)] wire11;
  wire [(3'h4):(1'h0)] wire25;
  wire [(2'h3):(1'h0)] wire24;
  wire signed [(4'hb):(1'h0)] wire23;
  wire [(3'h7):(1'h0)] wire22;
  wire signed [(4'h9):(1'h0)] wire18;
  wire signed [(4'h9):(1'h0)] wire17;
  wire [(3'h6):(1'h0)] wire16;
  wire signed [(3'h6):(1'h0)] wire15;
  reg signed [(4'hb):(1'h0)] reg21 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg19 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 reg21,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire15 = wire14;
  assign wire16 = ($signed($signed(wire12[(2'h2):(1'h0)])) + wire13[(1'h1):(1'h1)]);
  assign wire17 = {{$signed((wire13 ^~ (8'hae)))}};
  assign wire18 = $signed(wire13);
  always
    @(posedge clk) begin
      reg19 <= (8'had);
      reg20 <= wire16[(1'h1):(1'h0)];
      reg21 <= reg19;
    end
  assign wire22 = (~&(({reg21} ?
                      {wire12} : $unsigned(wire16)) ~^ reg20[(1'h1):(1'h0)]));
  assign wire23 = wire11;
  assign wire24 = $signed((+wire17));
  assign wire25 = (!{$unsigned($signed(wire16))});
endmodule