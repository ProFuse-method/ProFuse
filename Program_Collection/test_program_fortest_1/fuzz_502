(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param61 = (-(^(((8'ha2) >> (8'ha2)) ? ((8'hae) - (8'h9c)) : (+(8'ha8))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire0;
  input wire [(4'hb):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire3;
  wire [(4'h9):(1'h0)] wire4;
  wire signed [(4'hb):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire6;
  wire signed [(2'h2):(1'h0)] wire7;
  wire [(3'h6):(1'h0)] wire11;
  wire signed [(3'h6):(1'h0)] wire12;
  wire signed [(4'hb):(1'h0)] wire13;
  wire signed [(4'hb):(1'h0)] wire14;
  wire signed [(4'ha):(1'h0)] wire37;
  wire signed [(4'h8):(1'h0)] wire59;
  reg [(2'h3):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg10 = (1'h0);
  assign y = {wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire11,
                 wire12,
                 wire13,
                 wire14,
                 wire37,
                 wire59,
                 reg8,
                 reg9,
                 reg10,
                 (1'h0)};
  assign wire4 = ((8'h9e) ?
                     (wire2[(3'h4):(1'h1)] ?
                         (~|$unsigned(wire3)) : $signed(wire3[(2'h2):(2'h2)])) : $signed(($signed(wire2) && (wire1 ?
                         wire0 : wire1))));
  assign wire5 = $signed(((~^(!wire0)) ?
                     (wire4[(3'h7):(1'h1)] ?
                         $unsigned((8'h9d)) : $signed(wire2)) : wire3[(1'h0):(1'h0)]));
  assign wire6 = $signed(wire5[(3'h4):(1'h1)]);
  assign wire7 = ({wire6} ?
                     (((wire1 || wire6) >= wire3) <<< (wire3 ?
                         $unsigned(wire2) : wire4[(4'h8):(4'h8)])) : wire0);
  always
    @(posedge clk) begin
      reg8 <= (-$signed(wire6[(1'h0):(1'h0)]));
      reg9 <= {wire2[(2'h3):(2'h2)]};
      reg10 <= wire4;
    end
  assign wire11 = $unsigned(reg9);
  assign wire12 = $signed((+wire2[(1'h1):(1'h1)]));
  assign wire13 = (^~$signed({(wire7 >>> wire5)}));
  assign wire14 = reg10;
  module15 #() modinst38 (.clk(clk), .wire19(wire0), .wire17(wire7), .wire18(wire13), .wire16(wire1), .y(wire37));
  module39 #() modinst60 (.wire43(wire13), .y(wire59), .wire40(reg8), .wire42(wire37), .wire41(wire3), .clk(clk));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module39  (y, clk, wire43, wire42, wire41, wire40);
  output wire [(32'h77):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire43;
  input wire [(3'h4):(1'h0)] wire42;
  input wire signed [(4'h9):(1'h0)] wire41;
  input wire signed [(2'h3):(1'h0)] wire40;
  wire [(4'hb):(1'h0)] wire58;
  wire [(3'h6):(1'h0)] wire57;
  wire signed [(3'h5):(1'h0)] wire53;
  wire signed [(3'h6):(1'h0)] wire52;
  wire [(4'hb):(1'h0)] wire51;
  wire signed [(3'h7):(1'h0)] wire50;
  wire signed [(3'h6):(1'h0)] wire49;
  wire signed [(4'ha):(1'h0)] wire48;
  wire [(4'h8):(1'h0)] wire47;
  wire [(4'hb):(1'h0)] wire46;
  wire [(3'h6):(1'h0)] wire44;
  reg [(3'h7):(1'h0)] reg56 = (1'h0);
  reg [(4'h9):(1'h0)] reg55 = (1'h0);
  reg [(3'h5):(1'h0)] reg54 = (1'h0);
  reg [(4'ha):(1'h0)] reg45 = (1'h0);
  assign y = {wire58,
                 wire57,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire44,
                 reg56,
                 reg55,
                 reg54,
                 reg45,
                 (1'h0)};
  assign wire44 = (wire43[(2'h2):(1'h1)] ^ $unsigned($unsigned((wire42 == wire43))));
  always
    @(posedge clk) begin
      reg45 <= wire42[(1'h1):(1'h0)];
    end
  assign wire46 = (wire41 - (wire41 << ($signed(wire40) > ((8'hab) > wire42))));
  assign wire47 = wire42;
  assign wire48 = (~&$unsigned(((~^wire44) == wire43)));
  assign wire49 = (!$unsigned(wire47));
  assign wire50 = $signed($signed((((8'ha1) < wire49) ?
                      wire46[(4'hb):(2'h3)] : $unsigned(reg45))));
  assign wire51 = ($unsigned(((wire50 ? wire50 : wire40) | wire44)) ?
                      (+((&wire46) || wire48[(3'h6):(3'h5)])) : ($unsigned((wire48 == wire47)) ?
                          ((^~wire42) ?
                              $unsigned(wire48) : $signed(wire43)) : {(wire48 ?
                                  (8'hab) : wire48)}));
  assign wire52 = {(8'haa)};
  assign wire53 = ($unsigned($unsigned($signed(wire47))) != $unsigned((wire43[(4'hb):(4'h9)] ?
                      $signed(wire44) : wire42[(1'h1):(1'h1)])));
  always
    @(posedge clk) begin
      reg54 <= (wire48 ?
          (wire53[(2'h2):(2'h2)] ?
              (8'ha0) : (-(wire40 && wire41))) : {($signed(wire51) ?
                  {wire41} : $signed(wire53))});
      reg55 <= (({wire50} | ({wire53} ? (wire42 | wire52) : $signed(wire53))) ?
          ({$signed(wire52)} >= ($signed(wire50) ?
              $unsigned(wire49) : (reg45 <= wire51))) : wire44);
      reg56 <= (((wire41[(3'h7):(3'h4)] >>> reg54) ?
          $signed((wire43 << reg45)) : wire46) >> $unsigned(reg55));
    end
  assign wire57 = $unsigned($signed(wire46));
  assign wire58 = $signed(($signed(reg55[(3'h5):(2'h2)]) <<< $unsigned((wire43 | wire40))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15  (y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h7e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire19;
  input wire signed [(2'h2):(1'h0)] wire18;
  input wire signed [(2'h2):(1'h0)] wire17;
  input wire signed [(3'h6):(1'h0)] wire16;
  wire [(4'h9):(1'h0)] wire36;
  wire signed [(3'h4):(1'h0)] wire32;
  wire signed [(2'h3):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire26;
  wire [(4'hb):(1'h0)] wire23;
  wire [(4'h9):(1'h0)] wire22;
  wire signed [(4'h8):(1'h0)] wire21;
  wire signed [(4'h9):(1'h0)] wire20;
  reg [(4'ha):(1'h0)] reg35 = (1'h0);
  reg [(4'h9):(1'h0)] reg34 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg33 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg31 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg30 = (1'h0);
  reg [(3'h5):(1'h0)] reg25 = (1'h0);
  reg [(4'h8):(1'h0)] reg24 = (1'h0);
  assign y = {wire36,
                 wire32,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 reg35,
                 reg34,
                 reg33,
                 reg31,
                 reg30,
                 reg25,
                 reg24,
                 (1'h0)};
  assign wire20 = $signed((^~(+wire17)));
  assign wire21 = (^~{wire20});
  assign wire22 = (wire21[(3'h4):(1'h0)] ?
                      ($unsigned(wire17[(2'h2):(1'h0)]) ?
                          wire20 : ((wire20 ~^ wire16) ?
                              ((8'h9e) ?
                                  wire17 : (8'ha9)) : $unsigned((8'h9f)))) : $signed((~^$unsigned(wire19))));
  assign wire23 = wire17[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg24 <= (($unsigned(wire23[(4'ha):(4'h8)]) == ((wire18 ?
              wire16 : (8'hb0)) < (~^wire19))) ?
          ($unsigned(wire16) ?
              $unsigned($unsigned(wire21)) : $signed($signed(wire21))) : ($signed(wire19[(1'h1):(1'h0)]) & $signed(wire23[(4'h8):(1'h0)])));
      reg25 <= $unsigned(wire23);
    end
  assign wire26 = $unsigned(reg25[(3'h4):(1'h1)]);
  assign wire27 = wire22[(1'h1):(1'h1)];
  assign wire28 = (wire22[(3'h6):(1'h1)] ?
                      wire26[(3'h4):(2'h2)] : ($signed(reg25[(1'h0):(1'h0)]) != ({wire16} ^ (~wire19))));
  assign wire29 = $signed($unsigned((^wire22[(2'h2):(1'h0)])));
  always
    @(posedge clk) begin
      reg30 <= wire23[(3'h6):(1'h0)];
      reg31 <= $signed($unsigned((^~$signed(wire22))));
    end
  assign wire32 = ((wire26[(4'h8):(3'h4)] || $unsigned((wire29 ?
                          wire20 : reg25))) ?
                      $unsigned(wire19[(3'h4):(2'h2)]) : {$signed((-wire26))});
  always
    @(posedge clk) begin
      reg33 <= $unsigned((-{{wire22}}));
      reg34 <= $unsigned($unsigned(((wire19 ?
          wire18 : wire23) * $unsigned((8'h9e)))));
      reg35 <= ((^((reg24 == wire16) ?
              wire19[(2'h2):(2'h2)] : wire29[(2'h3):(1'h1)])) ?
          (^(8'h9e)) : (^~((wire28 >>> wire32) != $unsigned(reg31))));
    end
  assign wire36 = $unsigned($signed((~|(8'ha8))));
endmodule