(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h79):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire52;
  wire signed [(3'h7):(1'h0)] wire51;
  wire signed [(3'h5):(1'h0)] wire49;
  wire signed [(4'hb):(1'h0)] wire48;
  wire [(4'h8):(1'h0)] wire47;
  wire [(2'h3):(1'h0)] wire40;
  wire signed [(4'h8):(1'h0)] wire39;
  wire [(3'h5):(1'h0)] wire38;
  wire signed [(3'h6):(1'h0)] wire36;
  wire signed [(3'h7):(1'h0)] wire34;
  wire [(4'hb):(1'h0)] wire33;
  wire signed [(3'h6):(1'h0)] wire31;
  reg [(3'h6):(1'h0)] reg46 = (1'h0);
  reg [(2'h3):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg43 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg42 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg41 = (1'h0);
  assign y = {wire52,
                 wire51,
                 wire49,
                 wire48,
                 wire47,
                 wire40,
                 wire39,
                 wire38,
                 wire36,
                 wire34,
                 wire33,
                 wire31,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 (1'h0)};
  module4 #() modinst32 (.wire5(wire0), .clk(clk), .y(wire31), .wire7(wire2), .wire8(wire1), .wire6(wire3));
  assign wire33 = $unsigned(($signed(wire31) ?
                      ((-wire1) ? $unsigned((8'hac)) : {wire2}) : (8'h9c)));
  module4 #() modinst35 (wire34, clk, wire31, wire1, wire3, wire33);
  module10 #() modinst37 (.wire13(wire3), .wire12(wire1), .clk(clk), .y(wire36), .wire11(wire33), .wire14(wire0));
  assign wire38 = $unsigned((($unsigned(wire33) >> $signed(wire33)) ?
                      $signed($unsigned(wire0)) : wire33[(2'h3):(2'h2)]));
  assign wire39 = ($signed($unsigned(wire38)) ~^ ($signed($signed(wire38)) ?
                      ({wire2} - wire1) : $signed($unsigned(wire2))));
  assign wire40 = (~&((wire3[(1'h0):(1'h0)] ?
                          wire2[(4'h8):(2'h2)] : {(8'ha8)}) ?
                      ((^~wire3) ^ wire33[(4'ha):(4'h8)]) : wire0));
  always
    @(posedge clk) begin
      if (((~&(!$signed(wire3))) << $signed((wire31[(1'h0):(1'h0)] != (~wire0)))))
        begin
          reg41 <= (~^($signed(wire3) - wire36[(1'h0):(1'h0)]));
          reg42 <= {wire38[(1'h1):(1'h0)]};
          reg43 <= $unsigned(wire0[(3'h4):(3'h4)]);
        end
      else
        begin
          reg41 <= ($signed((wire31[(2'h3):(2'h2)] ?
                  (-wire33) : $unsigned((8'hac)))) ?
              (((~&wire1) ? {wire1} : $unsigned((8'h9c))) ?
                  $unsigned($unsigned(wire2)) : $signed({wire1})) : reg42[(1'h1):(1'h0)]);
          reg42 <= $unsigned((^~(-$unsigned(reg41))));
          if (wire40[(1'h0):(1'h0)])
            begin
              reg43 <= (($unsigned(reg43) ?
                  wire0 : ((reg41 & wire31) << wire3[(4'h9):(1'h0)])) > (($signed(wire40) <= $signed(wire36)) ^~ (|$signed(wire39))));
              reg44 <= (8'ha0);
            end
          else
            begin
              reg43 <= {wire34};
              reg44 <= wire38[(2'h2):(1'h1)];
              reg45 <= wire33[(4'h8):(1'h0)];
            end
        end
      reg46 <= $signed(wire40[(1'h0):(1'h0)]);
    end
  assign wire47 = {$unsigned(($unsigned(wire33) < $unsigned((8'ha7))))};
  assign wire48 = (~&(((!reg43) ? $signed(wire47) : wire1[(2'h3):(1'h1)]) ?
                      $unsigned($unsigned((8'ha6))) : $unsigned($unsigned(wire47))));
  module10 #() modinst50 (.wire12(reg43), .wire14(wire2), .wire13(reg41), .wire11(wire3), .clk(clk), .y(wire49));
  assign wire51 = {((&$signed((8'ha9))) ? reg42 : wire49[(3'h4):(3'h4)])};
  assign wire52 = $signed($signed(wire39[(3'h7):(3'h6)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h25):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire8;
  input wire signed [(2'h3):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire6;
  input wire [(3'h6):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire29;
  wire [(3'h7):(1'h0)] wire25;
  wire [(3'h7):(1'h0)] wire9;
  reg signed [(3'h4):(1'h0)] reg30 = (1'h0);
  reg [(4'h8):(1'h0)] reg28 = (1'h0);
  reg [(3'h5):(1'h0)] reg27 = (1'h0);
  assign y = {wire29, wire25, wire9, reg30, reg28, reg27, (1'h0)};
  assign wire9 = (wire6[(1'h1):(1'h1)] ?
                     ($signed($signed((8'hb0))) == $unsigned((wire6 ~^ (8'haa)))) : $signed(wire5[(3'h4):(1'h0)]));
  module10 #() modinst26 (wire25, clk, wire9, wire7, wire6, wire8);
  always
    @(posedge clk) begin
      reg27 <= ((+(wire6[(3'h5):(3'h5)] ?
          (wire8 & wire6) : wire7)) > wire6[(3'h6):(1'h0)]);
      reg28 <= (wire5 || (8'ha3));
    end
  assign wire29 = (^(((reg28 * wire9) ?
                      $unsigned(reg27) : $signed(wire5)) - $signed($unsigned(wire6))));
  always
    @(posedge clk) begin
      reg30 <= wire25;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire14;
  input wire [(2'h3):(1'h0)] wire13;
  input wire signed [(3'h6):(1'h0)] wire12;
  input wire [(3'h6):(1'h0)] wire11;
  wire [(2'h2):(1'h0)] wire24;
  wire [(3'h4):(1'h0)] wire23;
  wire [(4'ha):(1'h0)] wire22;
  wire [(4'h8):(1'h0)] wire21;
  wire [(4'hb):(1'h0)] wire20;
  wire signed [(3'h4):(1'h0)] wire19;
  wire signed [(3'h4):(1'h0)] wire18;
  wire [(3'h6):(1'h0)] wire17;
  wire signed [(3'h5):(1'h0)] wire16;
  wire signed [(4'ha):(1'h0)] wire15;
  assign y = {wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 (1'h0)};
  assign wire15 = (~^(((wire14 ^~ wire12) ? (^~wire12) : (~|wire12)) ?
                      $unsigned($unsigned(wire11)) : $signed(((8'ha8) >= wire12))));
  assign wire16 = $signed(wire12);
  assign wire17 = {{{$unsigned(wire11)}}};
  assign wire18 = {(^~(wire13 * wire16))};
  assign wire19 = wire15[(3'h6):(2'h2)];
  assign wire20 = wire14[(2'h2):(2'h2)];
  assign wire21 = $unsigned($unsigned(($unsigned(wire14) ?
                      (wire18 << wire16) : $signed(wire20))));
  assign wire22 = $unsigned({wire17[(1'h0):(1'h0)]});
  assign wire23 = wire15;
  assign wire24 = wire12;
endmodule