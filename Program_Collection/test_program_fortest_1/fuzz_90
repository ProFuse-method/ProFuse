(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire4;
  assign y = {wire38, wire6, wire5, wire4, (1'h0)};
  assign wire4 = wire3;
  assign wire5 = (^wire1[(1'h0):(1'h0)]);
  assign wire6 = $unsigned(($signed(wire3[(2'h2):(1'h0)]) ? wire3 : wire2));
  module7 #() modinst39 (wire38, clk, wire4, wire2, wire0, wire6);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param37 = ((8'had) ? (!(!(|(8'hab)))) : ((!((8'ha3) | (8'hae))) ? (((8'hb0) ? (8'ha3) : (8'had)) <= ((8'ha7) ? (8'ha0) : (8'ha6))) : (|{(8'haf)}))))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire11;
  input wire [(4'hb):(1'h0)] wire10;
  input wire [(3'h4):(1'h0)] wire9;
  input wire signed [(2'h3):(1'h0)] wire8;
  wire signed [(3'h4):(1'h0)] wire36;
  wire [(3'h6):(1'h0)] wire34;
  wire signed [(4'ha):(1'h0)] wire22;
  wire [(2'h3):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  wire [(2'h3):(1'h0)] wire19;
  wire signed [(4'ha):(1'h0)] wire18;
  wire [(3'h7):(1'h0)] wire17;
  wire [(4'h8):(1'h0)] wire16;
  wire [(4'hb):(1'h0)] wire15;
  reg [(2'h3):(1'h0)] reg14 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg13 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg12 = (1'h0);
  assign y = {wire36,
                 wire34,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 reg14,
                 reg13,
                 reg12,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg12 <= ({($signed(wire10) ?
              (8'ha7) : wire9)} | ($unsigned(wire8) - {{(8'ha2)}}));
      reg13 <= (~&(wire11 <<< ($unsigned(reg12) ?
          (reg12 ? wire8 : wire10) : (wire10 ? wire8 : wire10))));
      reg14 <= wire8[(1'h1):(1'h1)];
    end
  assign wire15 = reg12[(2'h3):(1'h0)];
  assign wire16 = (&$unsigned(($unsigned(reg14) <= wire10)));
  assign wire17 = $unsigned($signed(($signed(reg12) ?
                      $signed(wire8) : wire10[(3'h4):(2'h3)])));
  assign wire18 = reg14;
  assign wire19 = (~&$signed($signed(wire10)));
  assign wire20 = (((((8'ha8) ? wire10 : wire16) ?
                          $signed(wire19) : wire9) | (+$unsigned(wire10))) ?
                      (8'hab) : $signed((^(wire17 ^~ (8'ha1)))));
  assign wire21 = {(reg12[(1'h0):(1'h0)] & wire15)};
  assign wire22 = $unsigned((reg14 + ((8'haa) ~^ {wire9})));
  module23 #() modinst35 (wire34, clk, wire18, wire15, wire11, wire17);
  assign wire36 = (8'ha7);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23
#(parameter param33 = (8'had))
(y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'h20):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire27;
  input wire signed [(4'hb):(1'h0)] wire26;
  input wire signed [(3'h4):(1'h0)] wire25;
  input wire signed [(3'h7):(1'h0)] wire24;
  wire signed [(3'h6):(1'h0)] wire32;
  wire [(3'h5):(1'h0)] wire31;
  wire [(2'h3):(1'h0)] wire30;
  wire signed [(4'h9):(1'h0)] wire29;
  wire [(4'h8):(1'h0)] wire28;
  assign y = {wire32, wire31, wire30, wire29, wire28, (1'h0)};
  assign wire28 = wire24;
  assign wire29 = wire25;
  assign wire30 = (wire27[(1'h1):(1'h1)] > $signed((+wire28)));
  assign wire31 = $signed($unsigned(wire27));
  assign wire32 = wire28;
endmodule