(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire64;
  wire signed [(4'ha):(1'h0)] wire62;
  wire [(3'h6):(1'h0)] wire61;
  wire [(2'h2):(1'h0)] wire60;
  wire [(3'h4):(1'h0)] wire54;
  wire [(3'h5):(1'h0)] wire53;
  wire [(4'h9):(1'h0)] wire51;
  reg [(3'h6):(1'h0)] reg59 = (1'h0);
  reg [(3'h5):(1'h0)] reg58 = (1'h0);
  reg [(4'hb):(1'h0)] reg57 = (1'h0);
  reg [(2'h2):(1'h0)] reg56 = (1'h0);
  reg [(3'h6):(1'h0)] reg55 = (1'h0);
  assign y = {wire64,
                 wire62,
                 wire61,
                 wire60,
                 wire54,
                 wire53,
                 wire51,
                 reg59,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 (1'h0)};
  module4 #() modinst52 (wire51, clk, wire3, wire2, wire0, wire1);
  assign wire53 = (wire3 >>> $signed({wire2[(3'h6):(1'h1)]}));
  assign wire54 = $unsigned((|{$unsigned(wire3)}));
  always
    @(posedge clk) begin
      reg55 <= wire53[(1'h0):(1'h0)];
      if (((^~$unsigned($unsigned(reg55))) ?
          wire51[(1'h0):(1'h0)] : ((&$signed(wire53)) > (reg55 ?
              $signed(reg55) : (wire3 ? wire54 : (8'ha6))))))
        begin
          reg56 <= (wire54[(3'h4):(2'h2)] ?
              $unsigned($signed((8'ha5))) : wire0[(3'h4):(1'h0)]);
          reg57 <= $unsigned((wire0[(1'h1):(1'h0)] ?
              wire0[(1'h0):(1'h0)] : $signed(wire3[(4'h9):(4'h8)])));
          if ($unsigned((!wire51[(3'h6):(3'h5)])))
            begin
              reg58 <= ({$unsigned((wire1 | wire3))} ?
                  {(^~$signed(wire1))} : (($unsigned(reg57) ?
                          wire2 : (^~wire0)) ?
                      ({wire3} >= {(8'h9e)}) : ((wire54 + (8'had)) ?
                          (wire2 ? wire51 : (8'ha1)) : $signed(wire2))));
            end
          else
            begin
              reg58 <= (wire1[(4'ha):(2'h2)] > $unsigned($unsigned((wire54 ?
                  reg55 : reg55))));
              reg59 <= ($signed($signed(((8'haa) < reg56))) >> reg55[(1'h0):(1'h0)]);
            end
        end
      else
        begin
          if ((~|(((reg55 ?
              wire1 : reg57) < (wire0 < wire53)) ^ $signed(reg57[(4'h9):(2'h2)]))))
            begin
              reg56 <= ((|($unsigned((8'ha8)) ^ (reg57 && reg59))) ^ (~^$unsigned($unsigned(reg57))));
              reg57 <= $signed($signed($unsigned({wire51})));
              reg58 <= ((!reg59[(3'h5):(3'h5)]) ?
                  ($unsigned((~^reg57)) ?
                      (8'hac) : wire51) : {($signed(reg55) >>> ((8'haf) >>> wire0))});
            end
          else
            begin
              reg56 <= reg56;
            end
          reg59 <= ((~&(~&(wire0 || wire53))) ?
              ((8'ha7) ?
                  $unsigned((|reg55)) : (wire1[(3'h7):(3'h4)] >> $signed(wire2))) : {($signed(wire3) ?
                      wire53 : $unsigned(wire51))});
        end
    end
  assign wire60 = wire0[(1'h1):(1'h0)];
  assign wire61 = wire3[(3'h7):(1'h1)];
  module4 #() modinst63 (wire62, clk, wire1, reg55, wire0, reg57);
  assign wire64 = (reg57 || ($signed(wire51[(4'h8):(2'h2)]) ?
                      $signed((wire53 ? wire1 : wire61)) : $signed((8'h9c))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param50 = (((8'ha9) >= (((8'ha0) >>> (8'h9d)) << ((8'ha6) - (8'h9d)))) == (&((^~(8'h9e)) ? ((8'ha6) == (8'h9c)) : (^(8'hb0))))))
(y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire5;
  input wire signed [(3'h6):(1'h0)] wire6;
  input wire signed [(3'h4):(1'h0)] wire7;
  input wire signed [(3'h5):(1'h0)] wire8;
  wire signed [(2'h2):(1'h0)] wire49;
  wire [(4'h8):(1'h0)] wire48;
  wire signed [(4'h8):(1'h0)] wire47;
  wire [(3'h5):(1'h0)] wire45;
  wire [(3'h6):(1'h0)] wire44;
  wire signed [(2'h2):(1'h0)] wire9;
  wire [(2'h3):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire42;
  reg signed [(3'h6):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg11 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg12 = (1'h0);
  assign y = {wire49,
                 wire48,
                 wire47,
                 wire45,
                 wire44,
                 wire9,
                 wire10,
                 wire42,
                 reg46,
                 reg11,
                 reg12,
                 (1'h0)};
  assign wire9 = wire6[(3'h4):(3'h4)];
  assign wire10 = (wire7[(2'h2):(1'h0)] ?
                      ({$signed(wire9)} >= ($unsigned(wire9) ?
                          wire9[(1'h1):(1'h0)] : (8'ha1))) : wire9);
  always
    @(posedge clk) begin
      reg11 <= ((~|{(~|wire6)}) > (~^(8'ha6)));
      reg12 <= (~|(&$signed((^~wire8))));
    end
  module13 #() modinst43 (.wire16(reg12), .clk(clk), .y(wire42), .wire14(wire5), .wire17(wire9), .wire15(wire6));
  assign wire44 = $unsigned(wire8[(3'h5):(2'h2)]);
  assign wire45 = wire9;
  always
    @(posedge clk) begin
      reg46 <= $unsigned(wire45);
    end
  assign wire47 = (wire44 ?
                      $signed((wire44 ?
                          $unsigned((8'haa)) : $signed(wire10))) : (^~$signed((wire8 ?
                          (8'haf) : wire42))));
  assign wire48 = ({(wire45 ? (&wire45) : (wire8 || wire10))} ?
                      wire6[(3'h4):(1'h0)] : (((reg11 ?
                          (8'h9d) : wire5) >> wire47[(2'h2):(2'h2)]) ^~ (&(wire5 ?
                          wire42 : wire44))));
  assign wire49 = $signed({(8'ha0)});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param41 = ((({(8'ha5)} && ((8'hab) > (8'ha2))) ? (8'ha9) : (|((8'h9e) ? (8'haa) : (8'hab)))) >>> (!(~((8'haa) ^~ (8'ha8))))))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h9f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire17;
  input wire [(4'ha):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire15;
  input wire signed [(4'ha):(1'h0)] wire14;
  wire [(3'h5):(1'h0)] wire40;
  wire [(4'ha):(1'h0)] wire39;
  wire [(3'h4):(1'h0)] wire38;
  wire [(3'h4):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire36;
  wire [(3'h6):(1'h0)] wire35;
  wire [(3'h5):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire20;
  wire [(3'h7):(1'h0)] wire19;
  wire signed [(4'h9):(1'h0)] wire18;
  reg [(4'h8):(1'h0)] reg34 = (1'h0);
  reg [(3'h7):(1'h0)] reg33 = (1'h0);
  reg [(3'h4):(1'h0)] reg32 = (1'h0);
  reg [(4'h9):(1'h0)] reg31 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg29 = (1'h0);
  reg [(3'h7):(1'h0)] reg28 = (1'h0);
  reg [(2'h2):(1'h0)] reg27 = (1'h0);
  reg [(4'hb):(1'h0)] reg26 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg25 = (1'h0);
  reg [(4'hb):(1'h0)] reg24 = (1'h0);
  reg [(3'h4):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg22 = (1'h0);
  assign y = {wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire18 = {($unsigned(wire14) ?
                          $unsigned({wire14}) : $unsigned((wire14 && wire14)))};
  assign wire19 = $unsigned((~|((wire14 * wire15) < {wire14})));
  assign wire20 = wire16[(3'h6):(3'h5)];
  assign wire21 = {wire16};
  always
    @(posedge clk) begin
      reg22 <= wire16[(3'h6):(3'h6)];
      reg23 <= wire18;
      if ((|$signed(reg23)))
        begin
          if ($signed($unsigned(((|(8'h9c)) ?
              (reg23 << wire17) : $unsigned(wire16)))))
            begin
              reg24 <= $signed($unsigned($unsigned((!wire14))));
              reg25 <= ($signed(wire15) ?
                  wire16[(1'h1):(1'h1)] : (-(reg22[(2'h2):(1'h1)] ?
                      wire19[(2'h2):(1'h1)] : reg22)));
              reg26 <= reg22[(1'h1):(1'h1)];
            end
          else
            begin
              reg24 <= (^wire20);
            end
          reg27 <= $unsigned((8'h9c));
        end
      else
        begin
          reg24 <= $signed({($unsigned(reg26) >> (wire16 >> (8'ha2)))});
          reg25 <= $signed(wire18);
          reg26 <= (^~(($unsigned(wire16) ?
              wire21 : ((8'ha2) ?
                  reg22 : reg22)) <<< ((^~wire17) && $unsigned((8'haf)))));
        end
    end
  always
    @(posedge clk) begin
      reg28 <= (wire14 + {wire21});
      reg29 <= ({((reg27 <= wire14) ? wire18 : (reg26 || wire18))} ?
          (wire20 >> $unsigned((wire16 - wire16))) : ((wire14[(3'h7):(1'h0)] ?
                  (reg27 ? wire16 : reg28) : $signed(wire17)) ?
              (8'had) : ((reg27 ? reg23 : wire21) ? (~^wire18) : {(8'ha3)})));
    end
  always
    @(posedge clk) begin
      reg30 <= ($signed(reg29[(2'h3):(1'h0)]) | reg26[(3'h7):(2'h3)]);
      if ((&$signed(wire20[(1'h0):(1'h0)])))
        begin
          if ((wire16[(4'h8):(2'h2)] ^ reg30))
            begin
              reg31 <= ($signed($unsigned((reg22 ^ reg25))) ?
                  reg22[(2'h3):(1'h0)] : ($unsigned({reg28}) ?
                      {(reg23 * wire18)} : $signed({reg27})));
            end
          else
            begin
              reg31 <= ((wire18[(2'h3):(1'h0)] ~^ $signed((8'ha1))) <<< reg23[(2'h3):(1'h0)]);
              reg32 <= reg31;
            end
          reg33 <= (((|$unsigned(reg25)) ?
                  ((reg30 ? (8'hae) : (8'had)) ^ (reg22 ?
                      wire19 : (8'haa))) : ($signed(wire14) << reg28)) ?
              ($signed($unsigned(reg22)) & $unsigned({reg29})) : reg29);
          reg34 <= reg32;
        end
      else
        begin
          reg31 <= wire14[(4'ha):(3'h7)];
          reg32 <= $signed({reg24});
        end
    end
  assign wire35 = wire21[(2'h3):(2'h3)];
  assign wire36 = reg23[(2'h2):(1'h0)];
  assign wire37 = $signed(reg31);
  assign wire38 = (8'ha7);
  assign wire39 = ($signed($signed(reg29[(3'h6):(3'h5)])) ?
                      reg23 : ((&wire17) ?
                          (&reg28) : $unsigned((wire18 ? wire16 : wire35))));
  assign wire40 = $unsigned((^~wire21[(2'h3):(1'h0)]));
endmodule