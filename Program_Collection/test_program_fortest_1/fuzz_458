(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param75 = (((((8'ha3) != (8'ha1)) < (8'ha4)) ^~ (8'had)) | ((^((8'ha7) || (8'hae))) * ({(8'ha1)} ? (!(8'hb0)) : (~&(8'ha5))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h27):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire0;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire3;
  wire signed [(4'h8):(1'h0)] wire4;
  wire signed [(2'h2):(1'h0)] wire7;
  wire signed [(3'h4):(1'h0)] wire8;
  wire signed [(2'h2):(1'h0)] wire72;
  reg signed [(4'h9):(1'h0)] reg74 = (1'h0);
  reg [(4'hb):(1'h0)] reg5 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg6 = (1'h0);
  assign y = {wire4, wire7, wire8, wire72, reg74, reg5, reg6, (1'h0)};
  assign wire4 = wire2[(2'h3):(2'h2)];
  always
    @(posedge clk) begin
      reg5 <= $unsigned((wire3 ?
          ($unsigned((8'haa)) ?
              ((8'hab) ? wire2 : wire2) : $unsigned(wire3)) : wire4));
      reg6 <= $signed($signed(((!reg5) > {wire0})));
    end
  assign wire7 = (8'hae);
  assign wire8 = {$signed((reg5 << $signed(wire7)))};
  module9 #() modinst73 (wire72, clk, reg5, wire1, wire3, wire2);
  always
    @(posedge clk) begin
      reg74 <= wire8[(2'h2):(1'h1)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param71 = (+(^(((8'ha4) ? (8'ha7) : (8'ha6)) != {(8'ha5)}))))
(y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h58):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire13;
  input wire signed [(4'h9):(1'h0)] wire12;
  input wire signed [(3'h5):(1'h0)] wire11;
  input wire [(3'h5):(1'h0)] wire10;
  wire signed [(3'h5):(1'h0)] wire69;
  wire signed [(3'h4):(1'h0)] wire54;
  wire [(4'h9):(1'h0)] wire53;
  wire [(3'h6):(1'h0)] wire51;
  wire [(4'h8):(1'h0)] wire17;
  wire [(3'h6):(1'h0)] wire16;
  wire signed [(2'h3):(1'h0)] wire15;
  wire signed [(2'h2):(1'h0)] wire14;
  reg [(2'h2):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg23 = (1'h0);
  reg [(4'ha):(1'h0)] reg22 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg20 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg19 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg18 = (1'h0);
  assign y = {wire69,
                 wire54,
                 wire53,
                 wire51,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 (1'h0)};
  assign wire14 = $unsigned(wire13);
  assign wire15 = $signed((!(!{wire11})));
  assign wire16 = $signed(((|(wire13 <= wire13)) ~^ wire11[(3'h5):(2'h3)]));
  assign wire17 = (+(~&wire10[(1'h0):(1'h0)]));
  always
    @(posedge clk) begin
      if (wire12)
        begin
          reg18 <= ((|(~&$unsigned(wire16))) <= wire17);
          reg19 <= $unsigned((wire12[(1'h0):(1'h0)] || wire14[(2'h2):(1'h0)]));
          if ($signed($unsigned(($signed(wire10) ?
              wire11 : (reg19 ? (8'ha8) : wire17)))))
            begin
              reg20 <= (reg19[(2'h3):(1'h0)] ?
                  (^~($unsigned(reg19) & $signed((8'ha0)))) : (reg19[(1'h1):(1'h0)] ?
                      $signed(reg19) : (reg19 ?
                          (wire12 ? wire10 : reg19) : (wire16 < wire15))));
              reg21 <= (((wire17 ? $unsigned(reg20) : wire10) ^~ ((wire11 ?
                  reg19 : wire14) <<< reg19[(1'h0):(1'h0)])) ~^ (((wire16 ?
                      wire11 : wire13) > $unsigned(reg19)) ?
                  (^{(8'haf)}) : $signed({wire13})));
              reg22 <= wire17;
            end
          else
            begin
              reg20 <= $signed((({wire10} <<< wire16) ?
                  ({wire13} ?
                      $signed(reg22) : $unsigned(wire13)) : reg19[(1'h0):(1'h0)]));
              reg21 <= (^~$unsigned($signed((~wire11))));
            end
        end
      else
        begin
          if ((wire11[(1'h1):(1'h0)] - (&reg18)))
            begin
              reg18 <= $unsigned(reg20);
              reg19 <= $signed(reg19[(2'h3):(2'h2)]);
            end
          else
            begin
              reg18 <= {$unsigned($unsigned((+reg19)))};
              reg19 <= $unsigned((-(~wire16)));
              reg20 <= ($signed($signed($signed(reg18))) ?
                  $unsigned((reg20 ?
                      reg21[(1'h0):(1'h0)] : (reg18 * wire11))) : (wire11[(2'h2):(2'h2)] ?
                      $signed($signed(reg20)) : ($signed(reg22) ?
                          wire14 : ((8'had) ? reg22 : reg22))));
            end
          if ({{({reg22} ? (+wire11) : $unsigned((8'ha8)))}})
            begin
              reg21 <= (^~{$signed($unsigned(reg20))});
              reg22 <= (wire14[(1'h1):(1'h1)] ? wire12 : {(|$signed((8'h9c)))});
              reg23 <= ((($signed(reg22) ?
                      (-wire11) : (!reg19)) ~^ wire13[(4'hb):(1'h0)]) ?
                  reg19[(2'h3):(2'h2)] : wire13);
            end
          else
            begin
              reg21 <= {((^~wire13[(4'h9):(1'h0)]) ?
                      $unsigned((wire15 >>> wire13)) : wire16)};
              reg22 <= $unsigned($signed($signed(wire14)));
            end
        end
    end
  always
    @(posedge clk) begin
      reg24 <= $signed(reg20);
    end
  module25 #() modinst52 (.clk(clk), .wire29(wire13), .wire27(reg19), .wire28(wire16), .y(wire51), .wire26(reg20));
  assign wire53 = $unsigned(((8'h9d) != ($unsigned(wire12) ?
                      (reg19 >>> (8'had)) : {reg24})));
  assign wire54 = (~&(($unsigned(reg20) ?
                      $signed(wire15) : {wire13}) && $unsigned((+reg21))));
  module55 #() modinst70 (.wire56(reg19), .wire58(reg21), .clk(clk), .wire57(wire12), .wire59(wire10), .y(wire69));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module55
#(parameter param68 = ((((|(8'hae)) >> {(8'ha4)}) << (((8'haf) ~^ (8'hac)) ^ ((8'h9d) ~^ (8'ha0)))) ? (((~&(8'ha7)) ? ((8'ha0) & (8'haa)) : {(8'haf)}) ? (|((8'h9e) >= (8'h9c))) : {((8'ha8) || (8'haa))}) : (~&(((8'h9e) ? (8'haf) : (8'h9d)) + (|(8'h9f))))))
(y, clk, wire59, wire58, wire57, wire56);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire59;
  input wire [(4'h8):(1'h0)] wire58;
  input wire signed [(4'h9):(1'h0)] wire57;
  input wire [(4'h8):(1'h0)] wire56;
  wire signed [(4'h8):(1'h0)] wire67;
  wire [(4'h8):(1'h0)] wire66;
  wire [(3'h7):(1'h0)] wire65;
  wire [(4'h9):(1'h0)] wire64;
  wire [(3'h5):(1'h0)] wire63;
  wire signed [(4'h9):(1'h0)] wire62;
  wire signed [(4'h9):(1'h0)] wire61;
  wire [(2'h2):(1'h0)] wire60;
  assign y = {wire67,
                 wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 (1'h0)};
  assign wire60 = $unsigned(wire57);
  assign wire61 = $unsigned(wire58[(2'h2):(2'h2)]);
  assign wire62 = {((^~wire56) ^~ {(8'ha3)})};
  assign wire63 = {$signed(wire56)};
  assign wire64 = wire58;
  assign wire65 = ((~^$unsigned((wire63 ^~ wire62))) >>> ({(wire58 ?
                          wire64 : wire60)} >= $signed($signed(wire61))));
  assign wire66 = $signed(wire65[(3'h7):(3'h7)]);
  assign wire67 = ((({(8'ha4)} - (wire59 >> wire63)) == wire64[(4'h8):(1'h0)]) ?
                      wire57 : $signed(wire56));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25
#(parameter param50 = {(((+(8'ha4)) && ((8'ha6) ^ (8'h9c))) ? (((8'had) ? (8'ha5) : (8'haf)) <<< ((8'hae) ? (8'hb0) : (8'ha8))) : (((8'hb0) <<< (8'ha9)) >= {(8'h9c)}))})
(y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h70):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire29;
  input wire [(2'h2):(1'h0)] wire28;
  input wire signed [(3'h4):(1'h0)] wire27;
  input wire [(3'h4):(1'h0)] wire26;
  wire [(4'h9):(1'h0)] wire49;
  wire [(3'h4):(1'h0)] wire48;
  wire [(3'h7):(1'h0)] wire47;
  wire [(2'h3):(1'h0)] wire46;
  wire signed [(2'h3):(1'h0)] wire45;
  wire [(3'h7):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire43;
  wire [(3'h4):(1'h0)] wire42;
  wire [(4'hb):(1'h0)] wire41;
  reg [(3'h6):(1'h0)] reg40 = (1'h0);
  reg [(3'h6):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg38 = (1'h0);
  reg [(3'h6):(1'h0)] reg37 = (1'h0);
  reg [(3'h5):(1'h0)] reg36 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg35 = (1'h0);
  reg [(3'h4):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg33 = (1'h0);
  reg [(2'h3):(1'h0)] reg32 = (1'h0);
  reg [(4'hb):(1'h0)] reg31 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg30 = (1'h0);
  assign y = {wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ((wire26[(2'h3):(2'h3)] - ($unsigned((wire28 ? wire27 : wire29)) ?
          {$unsigned(wire29)} : ((8'ha6) ?
              $unsigned(wire29) : $unsigned((8'hae))))))
        begin
          reg30 <= (({(wire27 ? (8'ha1) : (8'ha9))} ?
              ((wire28 ? wire26 : wire27) ?
                  wire27[(1'h1):(1'h1)] : {wire28}) : (wire27 <= {wire29})) <<< wire28[(1'h0):(1'h0)]);
        end
      else
        begin
          reg30 <= {$signed(($signed(wire27) ?
                  (reg30 << wire26) : reg30[(1'h1):(1'h1)]))};
          reg31 <= (8'ha8);
        end
      if ({($unsigned((wire27 ? wire29 : reg31)) ?
              (~&(~^wire28)) : wire26[(1'h0):(1'h0)])})
        begin
          reg32 <= $unsigned((((reg30 ^ wire26) && $signed(wire26)) ?
              wire27 : $signed((wire27 ? reg30 : reg31))));
          if (((wire28 > ($unsigned(wire26) | (!wire28))) ^~ ((^wire26) && wire29[(2'h2):(2'h2)])))
            begin
              reg33 <= $unsigned((((-reg31) ?
                  wire29[(2'h3):(2'h2)] : (!wire27)) + reg31[(2'h3):(2'h2)]));
            end
          else
            begin
              reg33 <= $unsigned((+((wire28 << wire29) ? reg30 : reg30)));
              reg34 <= (8'h9f);
              reg35 <= $signed($unsigned(((wire26 ? reg30 : (8'ha0)) ?
                  (wire28 ^~ reg34) : $unsigned(reg33))));
            end
          reg36 <= {reg30};
        end
      else
        begin
          reg32 <= (^(^((reg32 ? reg30 : reg36) || $unsigned(reg35))));
          reg33 <= (~&$signed({(~^reg35)}));
          if (reg35[(1'h0):(1'h0)])
            begin
              reg34 <= $signed((($signed(reg34) ^~ $signed(reg35)) ?
                  $unsigned($unsigned((8'haa))) : (8'h9d)));
              reg35 <= $unsigned($unsigned(wire26));
              reg36 <= ((-{(~&reg30)}) ?
                  $signed(((-reg30) == (reg31 ? reg33 : reg32))) : reg36);
            end
          else
            begin
              reg34 <= ((({reg35} ?
                      (reg31 ? (8'hae) : wire26) : $signed(reg31)) ?
                  wire26[(3'h4):(2'h3)] : wire28) && {(-wire29[(4'h8):(3'h6)])});
            end
        end
      reg37 <= $signed({$signed({wire28})});
    end
  always
    @(posedge clk) begin
      if (wire26[(1'h1):(1'h1)])
        begin
          if ((($unsigned((reg33 ? (8'h9e) : reg31)) ?
                  reg34[(1'h0):(1'h0)] : reg36) ?
              $unsigned($signed(reg37[(2'h2):(2'h2)])) : $unsigned(wire29)))
            begin
              reg38 <= (!{(((8'h9c) && wire27) ? {reg31} : (^reg34))});
            end
          else
            begin
              reg38 <= (^$signed(($signed(reg35) & (~^reg31))));
              reg39 <= (^reg31[(4'ha):(3'h5)]);
              reg40 <= $signed($signed($unsigned(reg31[(3'h4):(1'h0)])));
            end
        end
      else
        begin
          reg38 <= wire27[(3'h4):(2'h2)];
          reg39 <= reg40[(1'h1):(1'h0)];
          reg40 <= reg32[(1'h0):(1'h0)];
        end
    end
  assign wire41 = $unsigned(reg32);
  assign wire42 = $signed(reg38);
  assign wire43 = $unsigned({$signed(reg37)});
  assign wire44 = reg34[(1'h1):(1'h0)];
  assign wire45 = {((((8'ha8) ? (8'h9d) : reg31) >>> {wire44}) ?
                          (-(^reg36)) : $signed((^reg35)))};
  assign wire46 = (((^~(reg31 >> reg30)) ?
                      ($signed(wire45) ? {reg32} : $signed(wire26)) : (reg36 ?
                          wire42[(2'h2):(1'h1)] : wire44)) == $unsigned((reg31 ?
                      (wire45 ~^ reg40) : (wire44 ? wire29 : reg37))));
  assign wire47 = (8'haf);
  assign wire48 = ({wire27} <<< (^$unsigned($signed(reg40))));
  assign wire49 = $unsigned((8'ha4));
endmodule