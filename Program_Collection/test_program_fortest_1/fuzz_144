(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire18;
  wire signed [(2'h2):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire4;
  reg [(4'hb):(1'h0)] reg21 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg20 = (1'h0);
  assign y = {wire18, wire5, wire4, reg21, reg20, (1'h0)};
  assign wire4 = (8'hab);
  assign wire5 = {($signed($unsigned(wire4)) >> wire3)};
  module6 #() modinst19 (.wire7(wire2), .clk(clk), .y(wire18), .wire9(wire3), .wire10(wire1), .wire8(wire4));
  always
    @(posedge clk) begin
      if ((wire4 ?
          ((~$unsigned(wire3)) | wire3) : $unsigned($unsigned(wire0[(1'h0):(1'h0)]))))
        begin
          reg20 <= {wire0[(2'h3):(1'h1)]};
        end
      else
        begin
          reg20 <= $unsigned(wire1[(3'h4):(1'h0)]);
        end
      reg21 <= (~|(!$unsigned($unsigned(wire0))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire10;
  input wire signed [(4'h9):(1'h0)] wire9;
  input wire signed [(3'h6):(1'h0)] wire8;
  input wire signed [(3'h6):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire17;
  wire signed [(4'h8):(1'h0)] wire11;
  reg [(4'h9):(1'h0)] reg16 = (1'h0);
  reg [(3'h7):(1'h0)] reg15 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg14 = (1'h0);
  reg [(3'h7):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg12 = (1'h0);
  assign y = {wire17, wire11, reg16, reg15, reg14, reg13, reg12, (1'h0)};
  assign wire11 = {{{$signed(wire9)}}};
  always
    @(posedge clk) begin
      reg12 <= (^~(~&wire7[(3'h6):(2'h3)]));
    end
  always
    @(posedge clk) begin
      reg13 <= ($signed((wire8 ? $signed(wire8) : (wire9 ? wire8 : wire9))) ?
          {$signed((^(8'h9e)))} : (~^wire7[(1'h1):(1'h1)]));
      if (wire8)
        begin
          reg14 <= (-(-{(wire11 == reg12)}));
        end
      else
        begin
          reg14 <= ((((wire11 >> wire7) ? {wire10} : wire9) ?
                  (+wire9[(2'h3):(2'h3)]) : reg14[(1'h0):(1'h0)]) ?
              ({wire7[(3'h6):(2'h2)]} ?
                  reg14[(2'h2):(1'h1)] : (wire9 > (wire11 | reg14))) : {$signed((reg12 ~^ wire11))});
          reg15 <= (reg12[(2'h3):(2'h3)] ?
              (wire10[(1'h0):(1'h0)] ?
                  (wire10[(1'h1):(1'h0)] << (reg14 != wire10)) : (~{reg13})) : wire8[(1'h1):(1'h0)]);
          reg16 <= ($signed($unsigned(reg14)) ^ wire7[(3'h4):(2'h2)]);
        end
    end
  assign wire17 = $signed(reg12);
endmodule