(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param20 = ((~^(|((8'ha7) ? (8'ha7) : (8'had)))) ? ((((8'haa) ? (8'haa) : (8'hab)) ? {(8'ha9)} : ((8'ha6) >>> (8'hb0))) >= (^~((8'hb0) ? (8'h9f) : (8'haf)))) : {(^~((8'hb0) >>> (8'ha6)))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h72):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire19;
  wire signed [(3'h6):(1'h0)] wire18;
  wire signed [(3'h6):(1'h0)] wire17;
  wire signed [(3'h4):(1'h0)] wire16;
  wire [(3'h6):(1'h0)] wire6;
  wire [(4'h9):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire4;
  reg [(3'h4):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg14 = (1'h0);
  reg [(3'h7):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg12 = (1'h0);
  reg [(4'h9):(1'h0)] reg11 = (1'h0);
  reg [(4'hb):(1'h0)] reg10 = (1'h0);
  reg [(4'hb):(1'h0)] reg9 = (1'h0);
  reg [(4'h8):(1'h0)] reg8 = (1'h0);
  reg [(4'h8):(1'h0)] reg7 = (1'h0);
  assign y = {wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire6,
                 wire5,
                 wire4,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 (1'h0)};
  assign wire4 = wire1;
  assign wire5 = $signed({wire4[(3'h5):(3'h5)]});
  assign wire6 = $unsigned($signed($signed(wire1)));
  always
    @(posedge clk) begin
      reg7 <= wire3[(2'h3):(2'h3)];
      reg8 <= (~($signed(wire5) ^ ((~&wire0) & reg7)));
      if (wire6)
        begin
          if ({((reg7[(3'h4):(2'h2)] > {wire5}) ?
                  $signed((^~wire4)) : ((wire4 | reg7) ?
                      (wire1 >> wire2) : reg8[(3'h7):(3'h5)]))})
            begin
              reg9 <= ($signed((wire6[(3'h6):(3'h6)] >= {(8'h9e)})) ?
                  wire4[(1'h0):(1'h0)] : $unsigned($unsigned({(8'ha2)})));
              reg10 <= wire3[(2'h3):(2'h3)];
            end
          else
            begin
              reg9 <= wire1[(2'h2):(1'h1)];
              reg10 <= (!(~|(wire4 & wire5)));
              reg11 <= {$unsigned(($signed(wire3) * ((8'ha2) ?
                      reg9 : (8'ha7))))};
            end
          if ($unsigned(reg9[(4'ha):(4'h8)]))
            begin
              reg12 <= wire0[(3'h7):(3'h4)];
              reg13 <= ($signed((~&$signed((8'h9e)))) != reg7);
              reg14 <= $unsigned((^~reg13));
            end
          else
            begin
              reg12 <= (((8'h9c) << (wire0 && wire0)) ?
                  $signed({((8'ha4) ? reg11 : reg13)}) : wire1[(1'h1):(1'h1)]);
            end
          reg15 <= $unsigned(reg10);
        end
      else
        begin
          reg9 <= (+(|reg15));
          reg10 <= (^reg8);
          reg11 <= (~((((8'ha3) ? (8'h9e) : reg12) <= reg9) & ((wire2 ?
                  reg8 : reg13) ?
              {wire0} : (+reg9))));
        end
    end
  assign wire16 = (8'ha4);
  assign wire17 = (((&{wire0}) ?
                          ((reg7 ?
                              (8'ha4) : reg15) >> {wire5}) : ((reg8 >> (8'haa)) ?
                              (~|reg10) : {reg14})) ?
                      {(8'h9f)} : (($signed(wire16) ?
                          wire4[(4'h8):(3'h6)] : wire16) > (&$signed(wire16))));
  assign wire18 = {{((8'ha3) ?
                              ((8'h9c) ? (8'h9e) : wire3) : $signed((8'had)))}};
  assign wire19 = (~^((~^$signed(wire16)) ?
                      ((~&wire5) ?
                          $unsigned(reg14) : (reg15 ?
                              reg11 : wire18)) : $signed($unsigned(wire3))));
endmodule