(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param71 = (((8'h9d) >>> (+(|(8'ha8)))) ? (({(8'hac)} ? (~^(8'hab)) : ((8'ha6) ? (8'hac) : (8'hac))) || (~&((8'hae) & (8'h9d)))) : (~(((8'ha6) ? (8'ha4) : (8'hb0)) * (!(8'haf))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire70;
  wire [(2'h2):(1'h0)] wire68;
  wire signed [(3'h4):(1'h0)] wire8;
  wire [(3'h6):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire4;
  reg signed [(3'h5):(1'h0)] reg6 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg5 = (1'h0);
  assign y = {wire70, wire68, wire8, wire7, wire4, reg6, reg5, (1'h0)};
  assign wire4 = $signed($unsigned(($signed(wire0) <= $unsigned(wire0))));
  always
    @(posedge clk) begin
      reg5 <= $unsigned(($signed((wire2 + wire3)) > ((wire2 ?
          (8'ha6) : wire1) == wire3)));
      reg6 <= (~^(~$signed({wire4})));
    end
  assign wire7 = (~|(^~$unsigned((wire4 ? wire2 : (8'ha3)))));
  assign wire8 = $unsigned(wire3[(1'h1):(1'h1)]);
  module9 #() modinst69 (wire68, clk, wire2, reg5, wire0, reg6);
  assign wire70 = $unsigned($signed(wire68[(1'h1):(1'h1)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9  (y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire13;
  input wire [(4'hb):(1'h0)] wire12;
  input wire [(4'h8):(1'h0)] wire11;
  input wire [(3'h5):(1'h0)] wire10;
  wire signed [(3'h7):(1'h0)] wire67;
  wire signed [(2'h2):(1'h0)] wire66;
  wire [(2'h3):(1'h0)] wire64;
  wire signed [(3'h6):(1'h0)] wire63;
  wire signed [(2'h2):(1'h0)] wire62;
  wire signed [(4'hb):(1'h0)] wire61;
  wire [(3'h5):(1'h0)] wire60;
  wire signed [(4'ha):(1'h0)] wire59;
  wire signed [(3'h7):(1'h0)] wire57;
  wire signed [(3'h6):(1'h0)] wire35;
  wire [(3'h7):(1'h0)] wire34;
  wire [(3'h4):(1'h0)] wire32;
  assign y = {wire67,
                 wire66,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire57,
                 wire35,
                 wire34,
                 wire32,
                 (1'h0)};
  module14 #() modinst33 (.wire18(wire10), .wire17(wire12), .clk(clk), .y(wire32), .wire15(wire13), .wire16(wire11));
  assign wire34 = wire13[(1'h1):(1'h1)];
  assign wire35 = {$unsigned(wire10[(3'h5):(1'h1)])};
  module36 #() modinst58 (.clk(clk), .wire37(wire13), .wire40(wire11), .y(wire57), .wire39(wire32), .wire38(wire12));
  assign wire59 = (($unsigned((!wire34)) == (!(-(8'h9d)))) || $unsigned(wire10[(3'h5):(3'h5)]));
  assign wire60 = ($unsigned(({wire32} >>> (wire12 ~^ wire32))) && ((~(~|wire35)) + $unsigned(wire11[(1'h1):(1'h1)])));
  assign wire61 = {wire34[(3'h6):(2'h3)]};
  assign wire62 = wire13[(2'h3):(2'h3)];
  assign wire63 = $unsigned(wire61);
  module36 #() modinst65 (.wire38(wire60), .wire39(wire63), .y(wire64), .clk(clk), .wire37(wire11), .wire40(wire13));
  assign wire66 = (~&((~&(&wire13)) ?
                      wire34 : ($unsigned(wire57) ?
                          wire10 : wire35[(1'h0):(1'h0)])));
  assign wire67 = wire34[(1'h0):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module36  (y, clk, wire40, wire39, wire38, wire37);
  output wire [(32'h70):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire40;
  input wire [(2'h3):(1'h0)] wire39;
  input wire signed [(2'h3):(1'h0)] wire38;
  input wire [(3'h4):(1'h0)] wire37;
  wire [(3'h5):(1'h0)] wire56;
  wire signed [(3'h6):(1'h0)] wire55;
  wire signed [(2'h2):(1'h0)] wire51;
  wire signed [(3'h4):(1'h0)] wire50;
  reg [(4'ha):(1'h0)] reg54 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg53 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg52 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg49 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg48 = (1'h0);
  reg [(3'h5):(1'h0)] reg47 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg46 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg45 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg44 = (1'h0);
  reg [(4'hb):(1'h0)] reg43 = (1'h0);
  reg [(4'h8):(1'h0)] reg42 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg41 = (1'h0);
  assign y = {wire56,
                 wire55,
                 wire51,
                 wire50,
                 reg54,
                 reg53,
                 reg52,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($signed($unsigned((-(wire39 << wire40)))))
        begin
          reg41 <= (^~$signed(($unsigned((8'ha6)) | wire39[(1'h1):(1'h0)])));
          reg42 <= (^~$signed(($unsigned(wire40) ~^ (wire37 ?
              (8'haa) : wire38))));
          reg43 <= (~|(((reg42 >>> wire39) ? reg41 : (wire38 + reg41)) ?
              (wire37 ?
                  (^~wire38) : (reg42 ?
                      wire37 : (8'ha2))) : $unsigned($signed(wire40))));
        end
      else
        begin
          reg41 <= $unsigned(wire40);
          reg42 <= $signed((-($unsigned(wire37) ?
              (-(8'h9f)) : $unsigned(wire37))));
        end
      reg44 <= (~&reg42[(2'h2):(2'h2)]);
      if (wire37[(2'h2):(2'h2)])
        begin
          if (reg43)
            begin
              reg45 <= $signed($signed(wire39));
              reg46 <= reg41;
              reg47 <= (8'hb0);
            end
          else
            begin
              reg45 <= $signed({($signed(wire38) ?
                      ((8'haa) ? reg47 : (8'ha4)) : (~|wire39))});
              reg46 <= ($unsigned((~|(reg47 ? reg46 : reg44))) ?
                  {((^(8'haf)) ?
                          (~^wire39) : (&reg42))} : $signed(($signed(reg44) <<< {wire39})));
              reg47 <= ((reg43[(3'h4):(2'h3)] ? (8'h9c) : wire38) ?
                  ((reg42 | (+wire37)) | $unsigned(wire40[(3'h4):(2'h2)])) : $unsigned($signed(reg41[(4'h9):(3'h4)])));
            end
        end
      else
        begin
          reg45 <= (((^~(wire40 || reg46)) ~^ reg47) <<< $signed((|reg45[(1'h0):(1'h0)])));
          reg46 <= (((wire39 ? {reg44} : $signed(reg45)) != $signed((8'haa))) ?
              $signed((~^(&reg44))) : ($unsigned((wire39 ~^ wire40)) ^~ {$signed(reg41)}));
          reg47 <= ((|(reg42 * wire39[(1'h0):(1'h0)])) ?
              wire39[(1'h0):(1'h0)] : $signed($signed($unsigned(reg43))));
        end
    end
  always
    @(posedge clk) begin
      if (reg41[(3'h6):(1'h1)])
        begin
          reg48 <= (8'hab);
        end
      else
        begin
          reg48 <= (|$signed(reg46));
        end
      reg49 <= (!((~^(reg43 ? wire38 : reg43)) ^~ $signed((wire38 || wire38))));
    end
  assign wire50 = $signed(wire37);
  assign wire51 = reg42[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg52 <= $unsigned((($signed((8'ha9)) ?
          wire40[(4'h8):(1'h0)] : wire50) ~^ (reg45 ?
          $unsigned(reg41) : (-reg46))));
      reg53 <= reg45;
      reg54 <= $signed(wire39[(1'h1):(1'h0)]);
    end
  assign wire55 = (^((~{wire38}) ? reg42 : $unsigned((8'ha2))));
  assign wire56 = ($unsigned($unsigned((reg52 ?
                      reg46 : wire38))) >= ($signed((wire39 < (8'hab))) ?
                      (reg48 > reg52) : reg42[(2'h3):(2'h2)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire18;
  input wire [(3'h5):(1'h0)] wire17;
  input wire signed [(2'h2):(1'h0)] wire16;
  input wire [(2'h2):(1'h0)] wire15;
  wire signed [(4'hb):(1'h0)] wire31;
  wire signed [(2'h3):(1'h0)] wire27;
  wire signed [(3'h4):(1'h0)] wire26;
  wire signed [(4'hb):(1'h0)] wire25;
  wire signed [(4'h9):(1'h0)] wire24;
  wire [(4'ha):(1'h0)] wire23;
  wire [(2'h2):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire21;
  reg signed [(4'hb):(1'h0)] reg30 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg29 = (1'h0);
  reg [(3'h5):(1'h0)] reg28 = (1'h0);
  reg [(3'h7):(1'h0)] reg20 = (1'h0);
  reg [(4'hb):(1'h0)] reg19 = (1'h0);
  assign y = {wire31,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 reg30,
                 reg29,
                 reg28,
                 reg20,
                 reg19,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg19 <= {{$signed((wire17 ? wire15 : wire15))}};
      reg20 <= $signed(wire15[(2'h2):(2'h2)]);
    end
  assign wire21 = $signed(reg19[(4'ha):(2'h2)]);
  assign wire22 = $unsigned((reg20 ?
                      $signed((wire21 & wire21)) : ((reg19 ~^ wire17) ^ $signed(wire18))));
  assign wire23 = wire15;
  assign wire24 = ($signed({$signed(wire18)}) == (+wire18));
  assign wire25 = $signed(({$unsigned(wire22)} ?
                      (!{wire21}) : (~&(wire17 << wire23))));
  assign wire26 = $unsigned(((wire18[(1'h1):(1'h0)] - (wire15 | wire21)) >> ((wire24 ?
                      wire22 : wire23) >>> {wire15})));
  assign wire27 = (wire26 >> (^~(|reg20)));
  always
    @(posedge clk) begin
      if ($signed($unsigned(((~|(8'had)) | (wire26 ? wire16 : wire26)))))
        begin
          reg28 <= (-wire21[(1'h1):(1'h1)]);
        end
      else
        begin
          if ((&$unsigned((8'hac))))
            begin
              reg28 <= ({$unsigned($unsigned(wire24))} == (8'hae));
            end
          else
            begin
              reg28 <= wire18[(2'h3):(1'h1)];
            end
          reg29 <= $signed((~wire21[(1'h1):(1'h0)]));
          reg30 <= {(((wire25 < wire22) ^ {wire16}) ?
                  wire25 : ($signed((8'h9d)) && wire23[(4'ha):(3'h4)]))};
        end
    end
  assign wire31 = ($signed(wire18) >>> {(((8'ha3) ~^ wire17) && wire18[(3'h5):(2'h3)])});
endmodule