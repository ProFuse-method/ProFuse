(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h31):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire46;
  wire signed [(3'h5):(1'h0)] wire45;
  wire signed [(2'h2):(1'h0)] wire44;
  wire [(2'h2):(1'h0)] wire42;
  wire signed [(3'h4):(1'h0)] wire41;
  wire [(4'hb):(1'h0)] wire39;
  wire [(3'h6):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire4;
  assign y = {wire46,
                 wire45,
                 wire44,
                 wire42,
                 wire41,
                 wire39,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = {wire1[(1'h1):(1'h0)]};
  assign wire5 = $unsigned(wire0);
  module6 #() modinst40 (wire39, clk, wire1, wire4, wire0, wire2);
  assign wire41 = $unsigned($signed($unsigned((wire4 ? wire5 : (8'ha6)))));
  module6 #() modinst43 (.wire9(wire0), .clk(clk), .wire7(wire5), .y(wire42), .wire8(wire4), .wire10(wire1));
  assign wire44 = (wire39 ?
                      ($signed($signed(wire2)) ~^ wire41[(2'h3):(1'h0)]) : $signed((wire2 ?
                          wire41[(1'h0):(1'h0)] : (wire0 - wire4))));
  assign wire45 = (wire39 ?
                      $unsigned($signed(wire1[(1'h0):(1'h0)])) : (~^{(wire1 ?
                              wire3 : wire1)}));
  assign wire46 = ({({(8'ha1)} ? $unsigned(wire1) : $unsigned(wire44))} ?
                      ((!(wire3 ?
                          wire2 : wire44)) - $unsigned(wire45[(3'h4):(2'h2)])) : $unsigned($unsigned((-wire5))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire10;
  input wire signed [(3'h6):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire8;
  input wire [(3'h6):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire38;
  wire [(4'hb):(1'h0)] wire37;
  wire signed [(3'h5):(1'h0)] wire36;
  wire signed [(3'h6):(1'h0)] wire34;
  wire signed [(4'ha):(1'h0)] wire19;
  wire [(4'h9):(1'h0)] wire18;
  wire signed [(2'h3):(1'h0)] wire17;
  wire signed [(3'h6):(1'h0)] wire13;
  wire [(3'h7):(1'h0)] wire12;
  wire [(4'hb):(1'h0)] wire11;
  reg [(3'h4):(1'h0)] reg16 = (1'h0);
  reg [(4'h8):(1'h0)] reg15 = (1'h0);
  reg [(3'h4):(1'h0)] reg14 = (1'h0);
  assign y = {wire38,
                 wire37,
                 wire36,
                 wire34,
                 wire19,
                 wire18,
                 wire17,
                 wire13,
                 wire12,
                 wire11,
                 reg16,
                 reg15,
                 reg14,
                 (1'h0)};
  assign wire11 = $signed($unsigned((!{wire9})));
  assign wire12 = wire8;
  assign wire13 = wire8[(3'h5):(1'h0)];
  always
    @(posedge clk) begin
      reg14 <= (wire9 ?
          (wire7[(3'h5):(2'h3)] > $unsigned($signed(wire9))) : (-wire11[(4'h9):(2'h2)]));
      if (wire9)
        begin
          reg15 <= ({(~|(-wire11))} >>> wire11);
        end
      else
        begin
          reg15 <= reg15[(1'h0):(1'h0)];
        end
      reg16 <= $signed($signed($unsigned((-(8'h9e)))));
    end
  assign wire17 = reg16;
  assign wire18 = $unsigned((((reg16 >= wire13) ?
                      wire12 : reg14) <= wire13[(1'h0):(1'h0)]));
  assign wire19 = $signed(wire8);
  module20 #() modinst35 (wire34, clk, reg15, wire19, wire18, reg16);
  assign wire36 = (^~wire8[(2'h2):(2'h2)]);
  assign wire37 = (~&$signed(((wire8 >>> wire19) < (wire8 ^~ wire7))));
  assign wire38 = wire34;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20  (y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire24;
  input wire [(3'h5):(1'h0)] wire23;
  input wire signed [(4'h9):(1'h0)] wire22;
  input wire signed [(2'h3):(1'h0)] wire21;
  wire signed [(4'h8):(1'h0)] wire33;
  wire signed [(3'h4):(1'h0)] wire32;
  wire [(2'h2):(1'h0)] wire31;
  wire signed [(3'h4):(1'h0)] wire26;
  wire [(4'ha):(1'h0)] wire25;
  reg signed [(4'ha):(1'h0)] reg30 = (1'h0);
  reg [(2'h2):(1'h0)] reg29 = (1'h0);
  reg [(4'h9):(1'h0)] reg28 = (1'h0);
  reg [(3'h4):(1'h0)] reg27 = (1'h0);
  assign y = {wire33,
                 wire32,
                 wire31,
                 wire26,
                 wire25,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 (1'h0)};
  assign wire25 = ((-{wire22[(1'h0):(1'h0)]}) + {((+wire23) > wire22[(3'h6):(3'h5)])});
  assign wire26 = {(((8'ha8) <= wire22[(3'h7):(3'h7)]) ?
                          $signed({wire25}) : {wire25[(4'h9):(3'h7)]})};
  always
    @(posedge clk) begin
      reg27 <= $signed(wire24[(4'h8):(2'h3)]);
      if ($signed(wire24))
        begin
          reg28 <= ($unsigned($unsigned({wire21})) * $unsigned((!wire26)));
          reg29 <= $unsigned(($unsigned((wire23 ?
              wire26 : wire26)) ~^ ((wire24 ? wire23 : wire21) ?
              (wire22 ? (8'had) : wire22) : wire22[(4'h9):(2'h2)])));
          reg30 <= (8'ha8);
        end
      else
        begin
          reg28 <= reg28[(3'h5):(3'h5)];
          reg29 <= {($unsigned(wire23[(3'h5):(1'h0)]) ?
                  (reg28[(1'h0):(1'h0)] ?
                      reg27 : (wire26 >= wire23)) : reg29[(1'h1):(1'h1)])};
          reg30 <= ((wire23 + wire26) ?
              ({reg28[(3'h4):(2'h2)]} == $signed(reg28[(4'h8):(3'h6)])) : ($unsigned((reg30 ?
                      wire23 : (8'h9c))) ?
                  reg29[(1'h1):(1'h1)] : (8'ha0)));
        end
    end
  assign wire31 = wire21[(2'h2):(2'h2)];
  assign wire32 = wire23;
  assign wire33 = wire32[(1'h0):(1'h0)];
endmodule