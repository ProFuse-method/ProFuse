(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param37 = ({((^(8'haa)) || {(8'h9c)})} ? (8'h9e) : (^(8'ha0))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire0;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire3;
  wire [(3'h4):(1'h0)] wire36;
  wire [(3'h7):(1'h0)] wire35;
  wire signed [(3'h7):(1'h0)] wire34;
  wire [(4'hb):(1'h0)] wire33;
  wire [(4'ha):(1'h0)] wire32;
  wire signed [(4'ha):(1'h0)] wire4;
  wire signed [(4'h8):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire6;
  wire signed [(2'h3):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire30;
  reg [(4'h8):(1'h0)] reg8 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire30,
                 reg8,
                 (1'h0)};
  assign wire4 = wire1[(2'h3):(2'h2)];
  assign wire5 = (8'ha9);
  assign wire6 = (wire1 ?
                     $signed($signed((!wire0))) : (-$signed(wire4[(3'h7):(3'h6)])));
  assign wire7 = (+(~{{wire1}}));
  always
    @(posedge clk) begin
      reg8 <= $signed({($signed(wire2) ? $unsigned(wire7) : $signed((8'had)))});
    end
  module9 #() modinst31 (wire30, clk, wire1, reg8, wire2, wire6);
  assign wire32 = $unsigned(({$signed(wire7)} ?
                      {(wire1 <= wire5)} : {$signed(wire6)}));
  assign wire33 = {(^~wire30[(3'h6):(3'h4)])};
  assign wire34 = wire0;
  assign wire35 = $signed($unsigned((~&$unsigned(wire33))));
  assign wire36 = (8'h9f);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param29 = (((^(^(8'haa))) ? (((8'ha0) < (8'ha4)) ^~ {(8'haf)}) : ((^~(8'hb0)) << ((8'ha8) ? (8'ha4) : (8'hab)))) ? (^((^(8'ha4)) ? ((8'ha1) * (8'ha0)) : ((8'ha2) - (8'ha4)))) : (({(8'ha2)} << ((8'ha9) ? (8'ha2) : (8'hae))) ? (8'haa) : ({(8'hae)} ? {(8'hab)} : ((8'h9f) & (8'ha6))))))
(y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire13;
  input wire [(4'h8):(1'h0)] wire12;
  input wire signed [(4'ha):(1'h0)] wire11;
  input wire signed [(4'ha):(1'h0)] wire10;
  wire signed [(4'hb):(1'h0)] wire28;
  wire signed [(3'h6):(1'h0)] wire27;
  wire signed [(3'h5):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire25;
  wire signed [(4'h9):(1'h0)] wire23;
  assign y = {wire28, wire27, wire26, wire25, wire23, (1'h0)};
  module14 #() modinst24 (wire23, clk, wire13, wire11, wire10, wire12);
  assign wire25 = $signed($signed($signed(wire23[(2'h3):(2'h3)])));
  assign wire26 = wire23;
  assign wire27 = ((((wire12 || wire11) + $unsigned(wire25)) ?
                          ($unsigned(wire13) ?
                              {wire12} : {wire26}) : (&$unsigned(wire26))) ?
                      $signed(($signed(wire13) ?
                          $unsigned(wire11) : $signed(wire11))) : (($signed(wire13) | {wire25}) >= wire23));
  assign wire28 = $unsigned(($unsigned(wire13) ?
                      wire13[(3'h6):(2'h3)] : (8'hab)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h1d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire18;
  input wire [(3'h6):(1'h0)] wire17;
  input wire signed [(4'ha):(1'h0)] wire16;
  input wire [(2'h2):(1'h0)] wire15;
  wire [(4'h9):(1'h0)] wire22;
  wire [(4'ha):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire20;
  wire signed [(3'h6):(1'h0)] wire19;
  assign y = {wire22, wire21, wire20, wire19, (1'h0)};
  assign wire19 = {(wire18 ?
                          ((+(8'ha4)) | {wire16}) : (wire18 ?
                              wire18[(1'h0):(1'h0)] : wire16))};
  assign wire20 = wire17[(2'h2):(1'h1)];
  assign wire21 = ($signed(wire20[(1'h1):(1'h1)]) ?
                      ((8'ha8) ?
                          ($unsigned((8'ha8)) * {(8'haf)}) : wire18) : wire15);
  assign wire22 = {(($signed(wire20) + wire15) + wire16[(4'ha):(1'h0)])};
endmodule