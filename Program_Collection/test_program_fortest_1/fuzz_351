(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire8;
  wire signed [(3'h5):(1'h0)] wire7;
  wire [(4'ha):(1'h0)] wire4;
  reg [(2'h2):(1'h0)] reg6 = (1'h0);
  reg [(3'h5):(1'h0)] reg5 = (1'h0);
  assign y = {wire8, wire7, wire4, reg6, reg5, (1'h0)};
  assign wire4 = {({(wire3 ? wire1 : wire1)} ?
                         wire2[(1'h0):(1'h0)] : $unsigned(wire2[(3'h4):(1'h1)]))};
  always
    @(posedge clk) begin
      reg5 <= wire4;
      reg6 <= ($unsigned(wire4[(3'h6):(3'h4)]) | (wire2 ?
          wire3[(3'h5):(1'h0)] : (reg5[(1'h1):(1'h1)] <<< ((8'haf) ?
              wire4 : wire0))));
    end
  assign wire7 = $unsigned((wire0[(4'h8):(3'h7)] ?
                     ($unsigned(wire0) * (wire2 ?
                         reg6 : reg5)) : (~&wire3[(2'h3):(2'h3)])));
  assign wire8 = (~&$unsigned((reg5[(1'h0):(1'h0)] ?
                     $signed((8'haf)) : $unsigned(reg6))));
endmodule