(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire60;
  wire [(4'h8):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire9;
  wire [(2'h2):(1'h0)] wire8;
  wire signed [(3'h7):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire6;
  wire [(2'h2):(1'h0)] wire5;
  wire [(3'h7):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  reg [(3'h7):(1'h0)] reg10 = (1'h0);
  assign y = {wire60,
                 wire13,
                 wire12,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg11,
                 reg10,
                 (1'h0)};
  assign wire4 = (wire2[(2'h3):(2'h3)] ? (8'hab) : (^wire0));
  assign wire5 = (wire1 == $unsigned((-(wire1 <<< wire3))));
  assign wire6 = {$signed((+(|wire4)))};
  assign wire7 = wire4;
  assign wire8 = (&wire0);
  assign wire9 = wire4[(2'h2):(2'h2)];
  always
    @(posedge clk) begin
      reg10 <= (wire4[(3'h4):(1'h1)] - (+wire9));
    end
  always
    @(posedge clk) begin
      reg11 <= $signed(wire4);
    end
  assign wire12 = wire9;
  assign wire13 = wire7;
  module14 #() modinst61 (wire60, clk, wire3, wire2, wire1, wire6);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire18;
  input wire [(4'h8):(1'h0)] wire17;
  input wire [(4'ha):(1'h0)] wire16;
  input wire [(4'hb):(1'h0)] wire15;
  wire [(4'ha):(1'h0)] wire59;
  wire [(4'ha):(1'h0)] wire54;
  wire signed [(4'hb):(1'h0)] wire41;
  reg [(3'h7):(1'h0)] reg58 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg57 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg56 = (1'h0);
  assign y = {wire59, wire54, wire41, reg58, reg57, reg56, (1'h0)};
  module19 #() modinst42 (.wire20(wire18), .clk(clk), .wire22(wire16), .wire23(wire17), .wire21(wire15), .y(wire41));
  module43 #() modinst55 (wire54, clk, wire17, wire15, wire18, wire41);
  always
    @(posedge clk) begin
      reg56 <= (!$signed(wire54));
      reg57 <= $signed(wire15);
      reg58 <= (^(wire15 ? (~^$unsigned(reg57)) : {(&wire18)}));
    end
  assign wire59 = wire41;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module43
#(parameter param53 = {(-(~^(!(8'hac))))})
(y, clk, wire47, wire46, wire45, wire44);
  output wire [(32'h20):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire47;
  input wire [(4'hb):(1'h0)] wire46;
  input wire signed [(4'hb):(1'h0)] wire45;
  input wire signed [(2'h2):(1'h0)] wire44;
  wire signed [(4'ha):(1'h0)] wire49;
  wire signed [(4'hb):(1'h0)] wire48;
  reg signed [(2'h2):(1'h0)] reg52 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg51 = (1'h0);
  reg [(2'h3):(1'h0)] reg50 = (1'h0);
  assign y = {wire49, wire48, reg52, reg51, reg50, (1'h0)};
  assign wire48 = (+$unsigned(wire44));
  assign wire49 = {$unsigned((+$unsigned((8'ha5))))};
  always
    @(posedge clk) begin
      reg50 <= $unsigned(($signed({(8'ha4)}) ?
          $signed((wire46 * wire45)) : (!wire46)));
    end
  always
    @(posedge clk) begin
      reg51 <= (wire45 ?
          reg50 : (((wire46 ?
              (8'h9f) : wire44) | wire47[(3'h6):(3'h5)]) && $unsigned((^(8'h9e)))));
      reg52 <= (~&(($signed(wire48) ?
          $unsigned(reg50) : (wire48 ? reg50 : wire44)) <<< wire46));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module19  (y, clk, wire23, wire22, wire21, wire20);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire23;
  input wire signed [(2'h3):(1'h0)] wire22;
  input wire signed [(3'h5):(1'h0)] wire21;
  input wire signed [(2'h3):(1'h0)] wire20;
  wire signed [(3'h7):(1'h0)] wire37;
  wire signed [(4'hb):(1'h0)] wire36;
  wire signed [(3'h5):(1'h0)] wire34;
  wire signed [(4'h8):(1'h0)] wire33;
  wire signed [(2'h3):(1'h0)] wire32;
  wire [(4'h8):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire30;
  wire [(3'h4):(1'h0)] wire25;
  wire [(3'h6):(1'h0)] wire24;
  reg signed [(2'h3):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg39 = (1'h0);
  reg [(4'h8):(1'h0)] reg38 = (1'h0);
  reg [(3'h4):(1'h0)] reg35 = (1'h0);
  reg [(2'h3):(1'h0)] reg29 = (1'h0);
  reg [(3'h4):(1'h0)] reg28 = (1'h0);
  reg [(4'ha):(1'h0)] reg27 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg26 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire25,
                 wire24,
                 reg40,
                 reg39,
                 reg38,
                 reg35,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire24 = wire20[(2'h3):(1'h0)];
  assign wire25 = (~wire21[(1'h1):(1'h1)]);
  always
    @(posedge clk) begin
      if (wire25[(1'h1):(1'h0)])
        begin
          reg26 <= $signed(wire23);
        end
      else
        begin
          reg26 <= $unsigned((reg26[(1'h1):(1'h1)] ~^ $unsigned((wire25 ?
              (8'ha4) : (8'h9f)))));
          reg27 <= wire21;
          reg28 <= ($signed({wire25[(1'h1):(1'h0)]}) >>> (~&((&wire21) ~^ $signed(reg26))));
        end
      reg29 <= $signed(wire21[(2'h3):(1'h1)]);
    end
  assign wire30 = (reg29 | wire25[(1'h1):(1'h1)]);
  assign wire31 = {{$signed((wire30 + (8'h9e)))}};
  assign wire32 = $unsigned({wire20[(1'h1):(1'h0)]});
  assign wire33 = (+{$signed((wire25 ? reg27 : wire30))});
  assign wire34 = (!{(^$unsigned(wire32))});
  always
    @(posedge clk) begin
      reg35 <= $unsigned(wire20);
    end
  assign wire36 = $signed((-$signed($unsigned(wire32))));
  assign wire37 = wire23;
  always
    @(posedge clk) begin
      reg38 <= $signed(reg29[(1'h0):(1'h0)]);
      if (wire23)
        begin
          reg39 <= reg27[(1'h1):(1'h1)];
        end
      else
        begin
          reg39 <= reg26[(1'h1):(1'h0)];
        end
      reg40 <= (reg39 <= (((wire33 ? wire33 : reg35) ?
              reg28 : (reg28 | wire21)) ?
          ((~|reg35) ?
              wire21[(2'h3):(1'h0)] : $signed(reg35)) : (~&wire24[(2'h3):(1'h1)])));
    end
endmodule