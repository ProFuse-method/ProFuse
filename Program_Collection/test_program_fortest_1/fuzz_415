(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param77 = (&({(+(8'ha2))} ? (8'haf) : (-(+(8'had))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h72):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire76;
  wire signed [(2'h3):(1'h0)] wire75;
  wire [(4'hb):(1'h0)] wire73;
  wire signed [(4'h8):(1'h0)] wire72;
  wire [(4'h9):(1'h0)] wire71;
  wire [(4'hb):(1'h0)] wire70;
  wire [(4'h8):(1'h0)] wire66;
  wire signed [(4'h9):(1'h0)] wire65;
  wire signed [(3'h4):(1'h0)] wire64;
  wire signed [(4'h8):(1'h0)] wire63;
  wire signed [(4'ha):(1'h0)] wire61;
  wire signed [(4'ha):(1'h0)] wire59;
  reg signed [(4'h8):(1'h0)] reg69 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg67 = (1'h0);
  assign y = {wire76,
                 wire75,
                 wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire61,
                 wire59,
                 reg69,
                 reg68,
                 reg67,
                 (1'h0)};
  module4 #() modinst60 (.wire8(wire1), .clk(clk), .wire6(wire0), .wire7(wire3), .wire5(wire2), .y(wire59));
  module4 #() modinst62 (.wire8(wire1), .wire5(wire2), .wire6(wire3), .clk(clk), .y(wire61), .wire7(wire59));
  assign wire63 = (($unsigned((wire3 ~^ wire61)) - ((-wire3) ?
                      (+wire2) : $unsigned(wire0))) && (8'ha2));
  assign wire64 = wire2[(3'h5):(1'h0)];
  assign wire65 = (($signed((+wire0)) | {wire1[(2'h3):(2'h3)]}) ?
                      ({wire0[(4'ha):(1'h1)]} ?
                          (wire1[(4'hb):(3'h4)] >= $unsigned(wire0)) : wire1[(1'h0):(1'h0)]) : wire0[(3'h4):(3'h4)]);
  assign wire66 = ($signed(wire3) ? wire64[(3'h4):(1'h0)] : (|wire3));
  always
    @(posedge clk) begin
      reg67 <= wire3;
      reg68 <= $unsigned($unsigned(wire2));
      reg69 <= $signed($unsigned(((8'ha2) ~^ (~|wire0))));
    end
  assign wire70 = (((&$signed(wire1)) ?
                          $unsigned($signed(wire3)) : ((reg69 ?
                                  wire66 : wire0) ?
                              $unsigned(wire1) : (~|wire59))) ?
                      $signed($unsigned((wire61 >>> wire66))) : $signed($signed($signed(wire1))));
  assign wire71 = ($unsigned((wire65[(2'h3):(1'h1)] ?
                      wire63 : (&wire65))) ^~ (-(wire0[(1'h1):(1'h1)] ?
                      (8'ha1) : (!wire59))));
  assign wire72 = (!(!wire0));
  module9 #() modinst74 (.y(wire73), .wire10(wire63), .clk(clk), .wire13(wire72), .wire11(wire2), .wire12(wire0));
  assign wire75 = {(|wire61[(1'h1):(1'h0)])};
  assign wire76 = $signed($unsigned({((8'h9e) ? wire61 : wire0)}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h76):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire5;
  input wire signed [(4'ha):(1'h0)] wire6;
  input wire signed [(3'h7):(1'h0)] wire7;
  input wire [(4'hb):(1'h0)] wire8;
  wire signed [(4'h8):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire25;
  wire [(3'h6):(1'h0)] wire39;
  wire [(2'h2):(1'h0)] wire41;
  wire [(3'h4):(1'h0)] wire42;
  wire [(2'h3):(1'h0)] wire44;
  wire signed [(4'h9):(1'h0)] wire45;
  wire signed [(2'h2):(1'h0)] wire53;
  wire [(4'hb):(1'h0)] wire54;
  wire [(3'h6):(1'h0)] wire55;
  wire [(2'h3):(1'h0)] wire57;
  reg [(3'h7):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg47 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg48 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg49 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg50 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg52 = (1'h0);
  reg [(3'h4):(1'h0)] reg56 = (1'h0);
  assign y = {wire23,
                 wire25,
                 wire39,
                 wire41,
                 wire42,
                 wire44,
                 wire45,
                 wire53,
                 wire54,
                 wire55,
                 wire57,
                 reg46,
                 reg47,
                 reg48,
                 reg49,
                 reg50,
                 reg51,
                 reg52,
                 reg56,
                 (1'h0)};
  module9 #() modinst24 (wire23, clk, wire5, wire7, wire8, wire6);
  assign wire25 = (wire8 <<< wire8[(3'h5):(3'h5)]);
  module26 #() modinst40 (wire39, clk, wire5, wire7, wire6, wire8);
  assign wire41 = (wire6 * wire5);
  module26 #() modinst43 (wire42, clk, wire6, wire8, wire5, wire25);
  assign wire44 = ($signed((8'haf)) - ({wire41} - $unsigned((wire39 & wire41))));
  assign wire45 = $unsigned((wire41[(2'h2):(1'h1)] ?
                      wire25[(3'h6):(1'h1)] : ($signed((8'ha9)) ^~ (wire5 >>> wire8))));
  always
    @(posedge clk) begin
      if (wire42)
        begin
          reg46 <= (wire25[(3'h4):(1'h1)] ~^ {$unsigned($signed((8'ha9)))});
          if (($unsigned((8'ha5)) ? wire25[(3'h5):(3'h4)] : wire8))
            begin
              reg47 <= wire25[(3'h6):(1'h0)];
            end
          else
            begin
              reg47 <= (wire6 ?
                  wire5[(1'h0):(1'h0)] : $signed((reg47 ?
                      (wire41 < wire44) : wire8[(3'h5):(3'h5)])));
              reg48 <= (wire44 | (~&wire45[(3'h7):(3'h4)]));
            end
          if ($signed($unsigned({{wire25}})))
            begin
              reg49 <= reg46;
              reg50 <= (~|(8'haf));
              reg51 <= {wire6[(1'h1):(1'h0)]};
            end
          else
            begin
              reg49 <= $signed(($signed(((8'ha1) < reg51)) ?
                  ({wire23} == (reg48 ? wire45 : wire23)) : ((~wire45) ?
                      $signed(reg49) : wire39[(3'h6):(2'h3)])));
            end
        end
      else
        begin
          reg46 <= $signed((&$unsigned(reg51[(4'h8):(3'h5)])));
          reg47 <= ($unsigned(((&reg47) ?
              (wire41 >= (8'ha6)) : (wire7 << wire7))) <= ((reg47 ?
                  $signed(reg47) : wire23) ?
              ((reg48 & (8'ha5)) ?
                  (wire23 ? reg46 : (8'ha4)) : ((8'ha9) ?
                      wire6 : wire39)) : wire8));
          reg48 <= $unsigned((~&$signed((wire41 >= (8'had)))));
        end
      reg52 <= $signed(wire41);
    end
  assign wire53 = (+(reg49 ?
                      (wire44 >> wire44) : ((8'ha2) ?
                          (8'haa) : (wire8 >= wire44))));
  assign wire54 = wire39[(2'h3):(1'h0)];
  assign wire55 = $signed(((~&(!reg47)) & reg48[(3'h7):(1'h0)]));
  always
    @(posedge clk) begin
      reg56 <= {reg50};
    end
  module9 #() modinst58 (.y(wire57), .wire11(wire7), .wire12(reg51), .wire13(reg49), .wire10(reg48), .clk(clk));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module26
#(parameter param38 = (((((8'had) >> (8'ha4)) ? ((8'ha1) & (8'ha9)) : (~&(8'ha3))) & ((~|(8'ha9)) != ((8'hb0) >> (8'had)))) != ((((8'ha3) * (8'haf)) < (-(8'haa))) ? (((8'ha7) >> (8'ha5)) ? (~^(8'ha0)) : (&(8'h9e))) : ({(8'ha1)} && (|(8'h9c))))))
(y, clk, wire30, wire29, wire28, wire27);
  output wire [(32'h29):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire30;
  input wire signed [(3'h7):(1'h0)] wire29;
  input wire signed [(4'h8):(1'h0)] wire28;
  input wire [(4'hb):(1'h0)] wire27;
  wire signed [(4'h9):(1'h0)] wire37;
  wire signed [(3'h5):(1'h0)] wire36;
  wire [(2'h2):(1'h0)] wire32;
  wire [(3'h7):(1'h0)] wire31;
  reg [(3'h7):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg34 = (1'h0);
  reg [(3'h4):(1'h0)] reg33 = (1'h0);
  assign y = {wire37, wire36, wire32, wire31, reg35, reg34, reg33, (1'h0)};
  assign wire31 = $signed(wire28[(3'h5):(1'h0)]);
  assign wire32 = wire30;
  always
    @(posedge clk) begin
      reg33 <= $unsigned(wire28);
      reg34 <= {wire32[(1'h1):(1'h0)]};
      reg35 <= $unsigned(($unsigned(wire29) * ($unsigned(wire32) * (wire29 ?
          wire32 : wire30))));
    end
  assign wire36 = {$unsigned({$signed(wire31)})};
  assign wire37 = wire28;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9  (y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h49):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire13;
  input wire signed [(2'h2):(1'h0)] wire12;
  input wire [(2'h3):(1'h0)] wire11;
  input wire [(3'h7):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire22;
  wire signed [(4'hb):(1'h0)] wire21;
  wire signed [(4'ha):(1'h0)] wire20;
  wire [(4'h9):(1'h0)] wire16;
  wire [(4'h9):(1'h0)] wire15;
  wire [(3'h6):(1'h0)] wire14;
  reg [(4'hb):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg17 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire20,
                 wire16,
                 wire15,
                 wire14,
                 reg19,
                 reg18,
                 reg17,
                 (1'h0)};
  assign wire14 = $signed(wire13);
  assign wire15 = ($signed({$signed(wire13)}) ~^ wire14);
  assign wire16 = ((8'h9d) ^~ (wire10[(3'h7):(2'h2)] ?
                      ((wire11 ?
                          wire10 : (8'hb0)) & $signed(wire12)) : wire14));
  always
    @(posedge clk) begin
      reg17 <= wire11;
      reg18 <= ((-$signed(wire14)) ?
          {((wire13 ? (8'ha5) : reg17) ?
                  (wire15 ? wire12 : wire10) : $signed(wire13))} : wire12);
      reg19 <= (~^$unsigned(wire12));
    end
  assign wire20 = wire14[(3'h5):(1'h1)];
  assign wire21 = $signed(($signed({reg19}) >>> wire12));
  assign wire22 = (((wire13[(2'h3):(1'h0)] ?
                              (wire13 ? (8'ha8) : (8'h9c)) : $signed(wire12)) ?
                          $unsigned((wire16 ?
                              (8'hb0) : reg19)) : ($signed(wire11) ?
                              $signed(wire15) : (|wire12))) ?
                      ($signed($signed(reg18)) ?
                          reg19[(4'hb):(4'h9)] : (reg18[(1'h1):(1'h1)] - (~^wire12))) : {($unsigned(wire10) >>> reg17[(2'h2):(1'h1)])});
endmodule