(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h9a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire46;
  wire [(2'h3):(1'h0)] wire45;
  wire signed [(4'h9):(1'h0)] wire44;
  wire signed [(2'h2):(1'h0)] wire43;
  wire [(3'h6):(1'h0)] wire30;
  wire signed [(4'h8):(1'h0)] wire29;
  wire signed [(3'h6):(1'h0)] wire28;
  wire signed [(2'h3):(1'h0)] wire26;
  wire [(4'hb):(1'h0)] wire4;
  reg signed [(2'h3):(1'h0)] reg42 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg41 = (1'h0);
  reg [(4'h8):(1'h0)] reg40 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg39 = (1'h0);
  reg [(4'ha):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg36 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg33 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg32 = (1'h0);
  reg [(4'h8):(1'h0)] reg31 = (1'h0);
  assign y = {wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire30,
                 wire29,
                 wire28,
                 wire26,
                 wire4,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 (1'h0)};
  assign wire4 = wire2;
  module5 #() modinst27 (wire26, clk, wire0, wire2, wire1, wire4);
  assign wire28 = wire1;
  assign wire29 = {($signed($unsigned((8'had))) >> $signed((wire4 & wire1)))};
  assign wire30 = ($unsigned(wire0) ?
                      (((wire0 ? wire26 : wire29) <= (8'hae)) || ((~&wire26) ?
                          $unsigned(wire26) : ((8'had) ?
                              wire0 : wire4))) : (~$unsigned($signed(wire29))));
  always
    @(posedge clk) begin
      reg31 <= wire29[(3'h6):(3'h6)];
      if ((~|($unsigned((wire29 ? wire28 : (8'ha1))) ?
          (wire0[(3'h5):(1'h1)] ?
              (^wire26) : (wire0 <<< (8'haa))) : (-$unsigned(wire28)))))
        begin
          reg32 <= ((($signed(wire4) ? $signed(wire0) : wire26[(2'h3):(2'h3)]) ?
              wire29[(2'h2):(1'h1)] : (wire30[(2'h3):(2'h3)] ?
                  (wire28 ? wire30 : wire29) : $unsigned(wire0))) | reg31);
          if ((wire30[(3'h6):(2'h3)] ~^ (($unsigned(wire3) ~^ wire26) <= ($signed(reg31) * (reg31 ?
              (8'ha1) : wire1)))))
            begin
              reg33 <= wire3[(2'h2):(2'h2)];
              reg34 <= wire4;
            end
          else
            begin
              reg33 <= {$unsigned((reg31[(1'h1):(1'h0)] ?
                      ((8'ha8) ? wire0 : reg34) : wire30))};
              reg34 <= $unsigned(((8'ha2) ?
                  ($unsigned(wire29) ?
                      (wire30 + wire4) : wire2[(1'h0):(1'h0)]) : $unsigned($unsigned((8'h9d)))));
            end
          reg35 <= wire2[(1'h1):(1'h0)];
        end
      else
        begin
          reg32 <= $signed((8'ha8));
        end
    end
  always
    @(posedge clk) begin
      if ($signed($signed(reg35[(2'h2):(2'h2)])))
        begin
          reg36 <= $unsigned(($unsigned(wire30[(3'h6):(2'h3)]) ?
              $signed((~^reg32)) : $unsigned((-(8'h9f)))));
          reg37 <= ((|wire30[(2'h2):(1'h0)]) ?
              wire3 : $signed(wire0[(3'h7):(3'h7)]));
        end
      else
        begin
          if ({wire1[(3'h4):(1'h0)]})
            begin
              reg36 <= reg31[(3'h5):(3'h4)];
              reg37 <= (~^($unsigned(reg35) ~^ (8'ha9)));
            end
          else
            begin
              reg36 <= $signed($signed(({wire4} ? $signed((8'haa)) : (8'ha5))));
              reg37 <= $signed($signed($unsigned($unsigned(reg34))));
              reg38 <= reg37;
            end
          reg39 <= wire3[(3'h5):(1'h1)];
        end
    end
  always
    @(posedge clk) begin
      reg40 <= reg31[(3'h4):(2'h3)];
      reg41 <= (-$signed(({wire3} ?
          reg38[(1'h0):(1'h0)] : reg31[(2'h3):(2'h2)])));
      reg42 <= $signed(((^wire3[(2'h3):(1'h1)]) == (~&reg35)));
    end
  assign wire43 = $signed(reg40[(2'h3):(1'h1)]);
  assign wire44 = $signed((((^~reg36) ?
                      $unsigned(reg33) : $signed(wire3)) && {(8'ha3)}));
  assign wire45 = $unsigned((reg42 ? (+{wire30}) : wire43[(1'h0):(1'h0)]));
  assign wire46 = {reg35};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h6e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire9;
  input wire [(4'hb):(1'h0)] wire8;
  input wire signed [(3'h4):(1'h0)] wire7;
  input wire signed [(4'hb):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire25;
  wire [(3'h5):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire17;
  wire signed [(2'h2):(1'h0)] wire16;
  wire signed [(3'h5):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire11;
  wire signed [(4'ha):(1'h0)] wire10;
  reg signed [(3'h4):(1'h0)] reg24 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg23 = (1'h0);
  reg [(3'h5):(1'h0)] reg22 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg19 = (1'h0);
  reg [(4'h8):(1'h0)] reg18 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg14 = (1'h0);
  assign y = {wire25,
                 wire21,
                 wire17,
                 wire16,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 reg24,
                 reg23,
                 reg22,
                 reg20,
                 reg19,
                 reg18,
                 reg15,
                 reg14,
                 (1'h0)};
  assign wire10 = {wire6};
  assign wire11 = $signed((wire7 > ((wire9 ? wire9 : wire9) ?
                      (wire9 ^~ wire9) : $unsigned(wire10))));
  assign wire12 = ({(+(-wire11))} >>> $unsigned((^wire9[(1'h1):(1'h1)])));
  assign wire13 = wire9[(3'h5):(3'h5)];
  always
    @(posedge clk) begin
      reg14 <= wire8;
      reg15 <= {($unsigned(reg14[(2'h3):(1'h1)]) ? (&(~wire11)) : wire6)};
    end
  assign wire16 = (wire8 | (((wire9 ? wire9 : wire8) ?
                      $unsigned(wire7) : {wire6}) || $signed($signed((8'ha2)))));
  assign wire17 = $unsigned(((~^wire7[(1'h0):(1'h0)]) ?
                      (((8'ha6) ^~ wire9) ?
                          (8'ha4) : $unsigned(wire8)) : reg15));
  always
    @(posedge clk) begin
      reg18 <= $unsigned((&$signed((^~(8'ha1)))));
      reg19 <= $signed((~|(8'h9c)));
      reg20 <= ((~|{{wire6}}) - $signed($unsigned((8'h9e))));
    end
  assign wire21 = ($unsigned({$signed(reg14)}) ?
                      (|reg18) : $unsigned((wire13 ?
                          $unsigned(reg14) : wire8)));
  always
    @(posedge clk) begin
      reg22 <= ($unsigned(wire16) ?
          ($signed(wire7) << ($signed(wire13) ?
              wire7 : $unsigned((8'ha0)))) : reg18);
      reg23 <= $signed((~&wire12[(3'h4):(1'h0)]));
      reg24 <= $unsigned((wire8 | reg18));
    end
  assign wire25 = {$unsigned(((wire9 && wire8) << reg23[(3'h5):(1'h1)]))};
endmodule