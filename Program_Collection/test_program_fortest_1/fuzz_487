(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param52 = (((^(~|(8'ha2))) >> (((8'ha1) == (8'ha8)) + (^~(8'haf)))) ? (^~({(8'h9d)} ? {(8'ha8)} : (8'ha9))) : (-(((8'haa) ? (8'h9f) : (8'ha0)) ? {(8'ha0)} : ((8'hb0) < (8'ha8))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire44;
  wire signed [(3'h4):(1'h0)] wire43;
  wire [(3'h7):(1'h0)] wire41;
  wire [(3'h5):(1'h0)] wire4;
  reg [(3'h4):(1'h0)] reg51 = (1'h0);
  reg [(3'h6):(1'h0)] reg50 = (1'h0);
  reg [(4'h9):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg48 = (1'h0);
  reg [(4'ha):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg46 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg45 = (1'h0);
  assign y = {wire44,
                 wire43,
                 wire41,
                 wire4,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 (1'h0)};
  assign wire4 = $signed($unsigned(wire1[(2'h2):(1'h0)]));
  module5 #() modinst42 (.y(wire41), .clk(clk), .wire9(wire4), .wire8(wire0), .wire6(wire3), .wire7(wire2));
  assign wire43 = $unsigned($signed($signed((+wire3))));
  assign wire44 = (wire4[(1'h0):(1'h0)] ~^ wire1[(3'h6):(1'h1)]);
  always
    @(posedge clk) begin
      if ($signed(($signed($signed(wire0)) ? {wire0[(3'h5):(1'h0)]} : wire44)))
        begin
          reg45 <= (8'ha5);
        end
      else
        begin
          reg45 <= wire1;
          if (({((~wire44) >>> $signed(wire2))} || wire1))
            begin
              reg46 <= {(~|(wire4 << (+(8'ha5))))};
              reg47 <= wire3;
              reg48 <= (reg47[(3'h6):(1'h0)] ^ wire43);
            end
          else
            begin
              reg46 <= ((&$signed(wire44)) + ({{reg47}} - ((reg48 ?
                      (8'ha8) : reg46) ?
                  wire41[(1'h1):(1'h0)] : reg45[(4'h9):(4'h8)])));
              reg47 <= $signed($signed({$signed(wire0)}));
              reg48 <= $unsigned(wire2);
            end
          reg49 <= $unsigned($signed(reg48));
        end
      reg50 <= reg47[(2'h2):(1'h0)];
      reg51 <= $unsigned($signed(reg48));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param40 = (8'hac))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h7f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire9;
  input wire signed [(4'h9):(1'h0)] wire8;
  input wire [(3'h4):(1'h0)] wire7;
  input wire [(4'ha):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire25;
  wire [(3'h6):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire17;
  wire signed [(3'h6):(1'h0)] wire16;
  wire [(4'h8):(1'h0)] wire15;
  wire signed [(3'h7):(1'h0)] wire11;
  wire [(4'h8):(1'h0)] wire10;
  reg signed [(3'h7):(1'h0)] reg23 = (1'h0);
  reg [(4'ha):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg21 = (1'h0);
  reg [(4'ha):(1'h0)] reg20 = (1'h0);
  reg [(2'h3):(1'h0)] reg19 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg18 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg14 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg13 = (1'h0);
  reg [(4'h8):(1'h0)] reg12 = (1'h0);
  assign y = {wire38,
                 wire25,
                 wire24,
                 wire17,
                 wire16,
                 wire15,
                 wire11,
                 wire10,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg14,
                 reg13,
                 reg12,
                 (1'h0)};
  assign wire10 = (~(wire6 | $signed((+wire9))));
  assign wire11 = $signed((~|$signed((+wire6))));
  always
    @(posedge clk) begin
      reg12 <= {$unsigned({(wire10 + wire9)})};
      reg13 <= $unsigned($unsigned((wire10 ?
          reg12[(3'h5):(1'h0)] : (~^reg12))));
      reg14 <= (wire6[(3'h4):(2'h2)] ^~ (((wire11 << wire10) ?
              (wire11 ? wire7 : (8'ha0)) : (~^wire6)) ?
          reg13[(3'h7):(1'h1)] : {(wire10 >= wire10)}));
    end
  assign wire15 = $signed(wire10);
  assign wire16 = (+$unsigned($unsigned((+(8'ha7)))));
  assign wire17 = (~^$unsigned({wire11[(3'h6):(2'h2)]}));
  always
    @(posedge clk) begin
      reg18 <= $signed(wire9);
      if ({wire10})
        begin
          if (wire17)
            begin
              reg19 <= ((^$unsigned(wire16)) ?
                  (-($signed(reg12) ?
                      wire10 : $unsigned(wire17))) : $signed($unsigned((wire17 ?
                      wire17 : reg13))));
              reg20 <= (&(~|((wire16 - wire7) ?
                  (wire8 | wire10) : wire10[(3'h7):(2'h2)])));
              reg21 <= ($unsigned(reg13[(3'h4):(1'h0)]) ?
                  wire15 : (((8'haa) & (wire11 == wire16)) && wire7[(2'h2):(1'h0)]));
            end
          else
            begin
              reg19 <= wire15[(2'h2):(1'h0)];
            end
        end
      else
        begin
          if (reg20[(3'h7):(3'h4)])
            begin
              reg19 <= wire11[(1'h0):(1'h0)];
              reg20 <= wire10[(2'h3):(2'h2)];
              reg21 <= reg13;
            end
          else
            begin
              reg19 <= ((^~((reg18 >>> wire17) ?
                  wire6[(2'h3):(1'h1)] : $unsigned((8'ha0)))) != wire9);
              reg20 <= ($unsigned($unsigned((wire8 ? wire8 : wire16))) & reg13);
              reg21 <= $unsigned($signed(wire16));
            end
          reg22 <= ((8'haa) ^~ (!wire17));
        end
      reg23 <= reg12[(2'h2):(1'h1)];
    end
  assign wire24 = reg20;
  assign wire25 = (reg23 ?
                      (wire7[(2'h2):(1'h1)] ?
                          $unsigned(reg22) : (wire11[(3'h5):(2'h3)] >>> (^~wire6))) : ((+reg21) ?
                          wire16 : wire17[(4'h9):(3'h7)]));
  module26 #() modinst39 (wire38, clk, wire11, wire24, wire8, wire6);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module26
#(parameter param37 = (|({((8'ha9) >> (8'had))} < {(8'h9d)})))
(y, clk, wire30, wire29, wire28, wire27);
  output wire [(32'h2c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire30;
  input wire [(2'h2):(1'h0)] wire29;
  input wire [(4'h9):(1'h0)] wire28;
  input wire signed [(4'h9):(1'h0)] wire27;
  wire signed [(4'ha):(1'h0)] wire36;
  wire [(4'h8):(1'h0)] wire34;
  wire signed [(4'h9):(1'h0)] wire33;
  wire signed [(4'ha):(1'h0)] wire31;
  reg signed [(3'h4):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg32 = (1'h0);
  assign y = {wire36, wire34, wire33, wire31, reg35, reg32, (1'h0)};
  assign wire31 = wire30[(2'h2):(1'h1)];
  always
    @(posedge clk) begin
      reg32 <= ((!$signed($signed(wire30))) ?
          $unsigned((8'hac)) : {($unsigned(wire30) ?
                  (wire31 >= wire29) : $unsigned(wire31))});
    end
  assign wire33 = (($unsigned((wire30 ? wire27 : reg32)) ?
                          (+wire29[(1'h1):(1'h1)]) : reg32[(2'h2):(1'h0)]) ?
                      $signed($unsigned(wire28)) : (({wire27} ?
                              reg32[(2'h2):(1'h1)] : (wire31 ?
                                  wire28 : (8'ha6))) ?
                          ((reg32 || wire28) ?
                              (wire30 & (8'ha9)) : {wire28}) : (~&$unsigned(wire27))));
  assign wire34 = (wire31[(2'h2):(1'h1)] >= ($unsigned(wire33[(3'h4):(3'h4)]) ?
                      wire30[(1'h0):(1'h0)] : ($unsigned((8'haa)) ?
                          $signed(wire31) : wire28[(3'h6):(3'h4)])));
  always
    @(posedge clk) begin
      reg35 <= $signed($unsigned($signed((~|wire29))));
    end
  assign wire36 = (wire30[(3'h5):(3'h4)] ?
                      $signed(wire33[(2'h3):(1'h1)]) : ({$signed(reg32)} != $signed((+wire29))));
endmodule