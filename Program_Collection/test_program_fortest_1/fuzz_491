(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire51;
  wire [(3'h7):(1'h0)] wire47;
  wire signed [(3'h4):(1'h0)] wire45;
  reg signed [(4'hb):(1'h0)] reg50 = (1'h0);
  reg [(4'hb):(1'h0)] reg49 = (1'h0);
  reg [(4'hb):(1'h0)] reg48 = (1'h0);
  assign y = {wire51, wire47, wire45, reg50, reg49, reg48, (1'h0)};
  module4 #() modinst46 (.clk(clk), .y(wire45), .wire5(wire2), .wire8(wire3), .wire6(wire0), .wire7(wire1));
  assign wire47 = wire45[(2'h2):(1'h0)];
  always
    @(posedge clk) begin
      reg48 <= wire3;
      reg49 <= $unsigned(wire47[(3'h4):(2'h2)]);
      reg50 <= wire1[(1'h0):(1'h0)];
    end
  module18 #() modinst52 (wire51, clk, wire47, reg49, wire0, reg48);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param44 = (({(-(8'hab))} <= (((8'ha9) ? (8'ha7) : (8'ha7)) ? ((8'hab) ? (8'ha2) : (8'hb0)) : {(8'ha4)})) ? {(+((8'hab) ? (8'had) : (8'ha9)))} : ({(^(8'ha2))} ? (&((8'ha2) >= (8'ha4))) : (+(|(8'ha7))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h94):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire8;
  input wire signed [(3'h5):(1'h0)] wire7;
  input wire [(2'h2):(1'h0)] wire6;
  input wire [(4'h9):(1'h0)] wire5;
  wire signed [(2'h2):(1'h0)] wire40;
  wire signed [(2'h2):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire17;
  wire signed [(4'h9):(1'h0)] wire16;
  wire signed [(4'ha):(1'h0)] wire11;
  wire [(4'ha):(1'h0)] wire10;
  wire signed [(4'ha):(1'h0)] wire9;
  reg signed [(4'h8):(1'h0)] reg43 = (1'h0);
  reg [(2'h3):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg39 = (1'h0);
  reg [(3'h4):(1'h0)] reg38 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg37 = (1'h0);
  reg [(4'ha):(1'h0)] reg36 = (1'h0);
  reg [(3'h4):(1'h0)] reg35 = (1'h0);
  reg [(3'h5):(1'h0)] reg34 = (1'h0);
  reg [(3'h7):(1'h0)] reg15 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg14 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg13 = (1'h0);
  reg [(4'hb):(1'h0)] reg12 = (1'h0);
  assign y = {wire40,
                 wire32,
                 wire17,
                 wire16,
                 wire11,
                 wire10,
                 wire9,
                 reg43,
                 reg42,
                 reg41,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 (1'h0)};
  assign wire9 = $signed(($signed((wire7 ? wire6 : wire7)) >= {(wire5 ?
                         wire8 : wire8)}));
  assign wire10 = wire8;
  assign wire11 = $signed(wire9[(2'h2):(2'h2)]);
  always
    @(posedge clk) begin
      if (wire8)
        begin
          if (($signed($unsigned((8'ha3))) ^~ ((+$signed(wire10)) ?
              $signed($signed(wire11)) : wire9)))
            begin
              reg12 <= ($signed((~&wire6[(2'h2):(2'h2)])) ?
                  (!(((8'ha8) ? wire9 : (8'hab)) * (wire11 ?
                      wire10 : (8'ha2)))) : wire7[(1'h0):(1'h0)]);
            end
          else
            begin
              reg12 <= (($signed((wire11 ? wire7 : wire9)) ?
                  (-wire6[(2'h2):(2'h2)]) : (^(wire8 ?
                      wire9 : reg12))) ^~ ($unsigned((wire10 || wire8)) ?
                  wire11[(3'h4):(2'h2)] : wire7[(2'h2):(1'h1)]));
              reg13 <= ($signed($unsigned(wire8[(4'h8):(1'h0)])) * $signed({(wire6 ?
                      wire11 : wire5)}));
              reg14 <= $signed(({(~^reg12)} ?
                  ({(8'h9d)} * $signed(wire10)) : wire7[(3'h4):(3'h4)]));
            end
        end
      else
        begin
          reg12 <= $signed($unsigned((-$unsigned(wire11))));
          reg13 <= (wire8[(4'h8):(1'h1)] && wire6[(2'h2):(2'h2)]);
        end
      reg15 <= (+{$signed(wire8)});
    end
  assign wire16 = {(~|wire9[(3'h6):(3'h6)])};
  assign wire17 = {((!$signed(wire16)) && $signed(((8'haa) + wire5)))};
  module18 #() modinst33 (.y(wire32), .wire20(wire9), .wire21(reg14), .wire22(wire5), .clk(clk), .wire19(reg13));
  always
    @(posedge clk) begin
      reg34 <= {$signed(($unsigned(wire9) != wire6[(1'h1):(1'h0)]))};
      if (($signed($unsigned((+(8'hb0)))) <= $signed(reg14)))
        begin
          reg35 <= $unsigned(wire16[(4'h9):(3'h7)]);
          if ((&$unsigned({reg35})))
            begin
              reg36 <= (^(reg15 >>> (&(wire7 ? (8'haa) : reg35))));
              reg37 <= $signed($unsigned($signed({wire17})));
            end
          else
            begin
              reg36 <= (8'ha9);
              reg37 <= $signed($unsigned(((&wire17) ?
                  (&wire6) : wire17[(3'h7):(3'h6)])));
              reg38 <= (+reg37[(2'h3):(1'h0)]);
            end
        end
      else
        begin
          reg35 <= {$unsigned(((wire7 ?
                  wire7 : reg14) & reg35[(1'h1):(1'h0)]))};
        end
      reg39 <= reg14;
    end
  assign wire40 = wire11[(2'h3):(1'h0)];
  always
    @(posedge clk) begin
      reg41 <= $unsigned((($unsigned(wire32) ?
          $unsigned((8'hb0)) : reg13) * $signed($signed(wire17))));
      reg42 <= $signed(((^~$signed(reg13)) ?
          $unsigned((~&reg12)) : (reg15[(3'h5):(3'h5)] ~^ {(8'haa)})));
      reg43 <= $signed(((8'ha0) ?
          {$signed(wire10)} : $unsigned($signed((8'h9f)))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18  (y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h2c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire22;
  input wire signed [(4'hb):(1'h0)] wire21;
  input wire signed [(4'ha):(1'h0)] wire20;
  input wire [(4'hb):(1'h0)] wire19;
  wire [(3'h6):(1'h0)] wire31;
  wire [(3'h5):(1'h0)] wire30;
  wire signed [(3'h7):(1'h0)] wire29;
  wire [(3'h7):(1'h0)] wire28;
  wire [(3'h5):(1'h0)] wire27;
  wire [(3'h4):(1'h0)] wire26;
  wire signed [(2'h3):(1'h0)] wire25;
  wire [(2'h3):(1'h0)] wire24;
  wire signed [(2'h3):(1'h0)] wire23;
  assign y = {wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 (1'h0)};
  assign wire23 = wire19;
  assign wire24 = ((+wire21[(3'h7):(3'h4)]) ^~ wire20[(4'h8):(3'h4)]);
  assign wire25 = wire23;
  assign wire26 = (|$signed($signed({(8'hae)})));
  assign wire27 = (8'haa);
  assign wire28 = (-$signed((8'ha7)));
  assign wire29 = (wire26[(3'h4):(2'h2)] ?
                      $unsigned({$signed(wire26)}) : $signed($unsigned(wire22)));
  assign wire30 = ($unsigned($signed(wire27[(3'h5):(2'h3)])) ?
                      $unsigned(wire29) : $unsigned(wire23[(2'h2):(1'h1)]));
  assign wire31 = (&$unsigned(((wire26 ? wire28 : wire28) ?
                      (wire28 ? wire30 : wire30) : wire20[(3'h6):(1'h0)])));
endmodule