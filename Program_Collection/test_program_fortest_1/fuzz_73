(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param71 = (((8'ha6) <<< {((8'ha9) < (8'ha7))}) * {{(~^(8'hae))}}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire70;
  wire [(3'h7):(1'h0)] wire69;
  wire [(2'h3):(1'h0)] wire68;
  wire signed [(4'hb):(1'h0)] wire67;
  wire [(4'h9):(1'h0)] wire66;
  wire signed [(3'h5):(1'h0)] wire64;
  assign y = {wire70, wire69, wire68, wire67, wire66, wire64, (1'h0)};
  module4 #() modinst65 (wire64, clk, wire3, wire2, wire0, wire1);
  assign wire66 = wire0;
  assign wire67 = $unsigned({wire1});
  assign wire68 = wire1[(4'h8):(3'h4)];
  assign wire69 = $unsigned(((wire68[(2'h3):(2'h3)] << {(8'h9c)}) <<< ($unsigned(wire3) * wire3)));
  assign wire70 = (((8'ha4) << $signed(wire2)) | ($signed((wire3 ~^ (8'hae))) ?
                      $signed((~wire68)) : $signed(wire64)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h7d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire7;
  input wire [(4'ha):(1'h0)] wire6;
  input wire signed [(4'h8):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire63;
  wire signed [(4'h9):(1'h0)] wire55;
  wire signed [(2'h3):(1'h0)] wire54;
  wire [(2'h3):(1'h0)] wire53;
  wire signed [(4'h8):(1'h0)] wire52;
  wire [(4'h9):(1'h0)] wire26;
  wire [(3'h7):(1'h0)] wire9;
  wire [(3'h5):(1'h0)] wire28;
  wire [(3'h4):(1'h0)] wire29;
  wire [(3'h6):(1'h0)] wire50;
  reg [(2'h3):(1'h0)] reg62 = (1'h0);
  reg [(4'ha):(1'h0)] reg61 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg59 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg58 = (1'h0);
  reg [(2'h2):(1'h0)] reg57 = (1'h0);
  reg [(3'h5):(1'h0)] reg56 = (1'h0);
  reg [(4'hb):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg10 = (1'h0);
  assign y = {wire63,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire26,
                 wire9,
                 wire28,
                 wire29,
                 wire50,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 reg58,
                 reg57,
                 reg56,
                 reg11,
                 reg10,
                 (1'h0)};
  assign wire9 = (8'hae);
  always
    @(posedge clk) begin
      reg10 <= $unsigned((8'h9d));
      reg11 <= wire9[(2'h2):(1'h0)];
    end
  module12 #() modinst27 (.wire14(wire5), .clk(clk), .wire15(wire9), .y(wire26), .wire13(reg11), .wire16(wire6));
  assign wire28 = $unsigned(wire26[(3'h4):(3'h4)]);
  assign wire29 = {wire28[(1'h0):(1'h0)]};
  module30 #() modinst51 (wire50, clk, reg11, wire9, wire7, wire8);
  assign wire52 = $signed($unsigned($signed(reg10)));
  assign wire53 = {wire9[(2'h3):(2'h3)]};
  assign wire54 = (wire26 == wire9[(3'h6):(2'h3)]);
  assign wire55 = wire9[(3'h6):(3'h5)];
  always
    @(posedge clk) begin
      reg56 <= (^~{(8'hb0)});
      if ($signed((wire8 && $unsigned($signed(reg10)))))
        begin
          reg57 <= reg11[(4'ha):(1'h0)];
        end
      else
        begin
          reg57 <= $signed($signed(wire53));
          if (({reg10} ? {(8'ha2)} : {$unsigned($signed(reg10))}))
            begin
              reg58 <= $unsigned((8'ha4));
              reg59 <= reg56[(1'h0):(1'h0)];
              reg60 <= (wire5 + wire29);
            end
          else
            begin
              reg58 <= {wire7};
              reg59 <= {wire53};
              reg60 <= $signed(($unsigned($signed(wire52)) ?
                  $signed((^wire29)) : $unsigned((reg56 ? wire26 : wire28))));
            end
          reg61 <= wire29;
        end
      reg62 <= (~wire29[(1'h1):(1'h1)]);
    end
  assign wire63 = $unsigned(($signed((^reg59)) ?
                      {wire9} : ((~|reg56) ^~ ((8'ha7) ? wire7 : wire54))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module30
#(parameter param49 = ((((^~(8'haf)) ? (~|(8'hae)) : (^(8'h9e))) | {(~&(8'haa))}) * (8'hab)))
(y, clk, wire34, wire33, wire32, wire31);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire34;
  input wire [(3'h6):(1'h0)] wire33;
  input wire [(4'hb):(1'h0)] wire32;
  input wire [(4'h8):(1'h0)] wire31;
  wire signed [(3'h5):(1'h0)] wire48;
  wire signed [(3'h7):(1'h0)] wire47;
  wire [(4'h8):(1'h0)] wire46;
  wire signed [(4'h9):(1'h0)] wire45;
  wire signed [(4'h8):(1'h0)] wire38;
  wire signed [(3'h4):(1'h0)] wire37;
  wire [(4'h8):(1'h0)] wire36;
  wire [(4'h9):(1'h0)] wire35;
  reg [(4'ha):(1'h0)] reg44 = (1'h0);
  reg [(4'h9):(1'h0)] reg43 = (1'h0);
  reg [(3'h4):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg41 = (1'h0);
  reg [(3'h7):(1'h0)] reg40 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg39 = (1'h0);
  assign y = {wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 (1'h0)};
  assign wire35 = {wire34[(3'h4):(2'h3)]};
  assign wire36 = (wire32 ~^ (~|(8'ha9)));
  assign wire37 = {(~^(-$unsigned(wire36)))};
  assign wire38 = $signed($signed($signed((wire35 ? wire31 : wire36))));
  always
    @(posedge clk) begin
      if (wire37)
        begin
          reg39 <= (8'hb0);
          if (($signed(wire33) > {wire35}))
            begin
              reg40 <= $unsigned($signed({wire38[(3'h4):(3'h4)]}));
              reg41 <= wire32[(2'h2):(1'h0)];
              reg42 <= $signed(wire37[(2'h3):(1'h0)]);
            end
          else
            begin
              reg40 <= wire34;
            end
          reg43 <= reg39[(3'h5):(1'h0)];
        end
      else
        begin
          reg39 <= ((-(~$unsigned(reg41))) ?
              (!{wire35[(3'h7):(3'h4)]}) : $unsigned(wire34[(1'h0):(1'h0)]));
        end
      reg44 <= wire33[(1'h0):(1'h0)];
    end
  assign wire45 = $signed({reg40[(2'h3):(2'h3)]});
  assign wire46 = ((wire37[(2'h3):(2'h2)] ?
                      $signed(wire33) : $signed((reg44 >> reg42))) == wire31[(3'h7):(3'h6)]);
  assign wire47 = reg39;
  assign wire48 = (|$unsigned(wire33));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param25 = (((~((8'h9e) && (8'hac))) ? (~&(~|(8'ha4))) : (^~{(8'ha5)})) == {(~((8'hab) ? (8'ha5) : (8'ha1)))}))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h2a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire16;
  input wire signed [(3'h7):(1'h0)] wire15;
  input wire [(3'h6):(1'h0)] wire14;
  input wire signed [(4'h9):(1'h0)] wire13;
  wire [(3'h4):(1'h0)] wire24;
  wire [(2'h2):(1'h0)] wire23;
  wire signed [(3'h7):(1'h0)] wire22;
  wire signed [(4'hb):(1'h0)] wire21;
  wire [(3'h6):(1'h0)] wire20;
  wire [(3'h6):(1'h0)] wire19;
  wire [(2'h2):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire17;
  assign y = {wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 (1'h0)};
  assign wire17 = wire13[(1'h0):(1'h0)];
  assign wire18 = ((({wire14} ? $signed(wire14) : wire16[(1'h1):(1'h0)]) ?
                      $signed((&wire17)) : wire16[(3'h4):(3'h4)]) >> {((wire15 && wire17) ?
                          $unsigned(wire13) : $unsigned(wire16))});
  assign wire19 = (~$signed($unsigned((~|wire17))));
  assign wire20 = $unsigned(wire14);
  assign wire21 = wire16[(3'h5):(2'h3)];
  assign wire22 = $signed($unsigned(wire14[(2'h3):(2'h3)]));
  assign wire23 = wire18[(1'h0):(1'h0)];
  assign wire24 = (($signed((wire15 ? wire17 : (8'had))) - (^(wire16 ?
                          (8'h9e) : wire16))) ?
                      ((+$signed(wire20)) ?
                          {{wire19}} : ((wire19 ?
                              wire17 : wire14) - wire13)) : wire19);
endmodule