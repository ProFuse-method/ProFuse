(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param69 = (({(~&(8'haf))} >>> (&{(8'h9e)})) ? ({(~(8'hab))} || (((8'h9f) || (8'hae)) + ((8'hb0) ? (8'ha6) : (8'ha6)))) : ((+{(8'haf)}) ? (~|((8'hb0) ? (8'haf) : (8'hae))) : (-(~&(8'haa))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire68;
  wire [(3'h6):(1'h0)] wire67;
  wire [(3'h4):(1'h0)] wire65;
  wire signed [(4'h9):(1'h0)] wire63;
  wire signed [(4'h8):(1'h0)] wire61;
  wire signed [(4'h9):(1'h0)] wire6;
  wire [(2'h3):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire4;
  assign y = {wire68,
                 wire67,
                 wire65,
                 wire63,
                 wire61,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = (~&(!wire1));
  assign wire5 = $unsigned(wire1[(1'h0):(1'h0)]);
  assign wire6 = $signed((wire3 ?
                     wire0 : (wire1 ? $signed(wire0) : wire5[(2'h3):(1'h0)])));
  module7 #() modinst62 (wire61, clk, wire6, wire2, wire3, wire4);
  module7 #() modinst64 (wire63, clk, wire1, wire2, wire3, wire61);
  module34 #() modinst66 (wire65, clk, wire63, wire2, wire1, wire4);
  assign wire67 = $signed(wire4);
  assign wire68 = $unsigned($unsigned(({wire5} - wire0)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire11;
  input wire [(2'h3):(1'h0)] wire10;
  input wire [(4'h8):(1'h0)] wire9;
  input wire [(4'h8):(1'h0)] wire8;
  wire signed [(3'h7):(1'h0)] wire59;
  wire signed [(3'h5):(1'h0)] wire58;
  wire signed [(3'h4):(1'h0)] wire57;
  wire signed [(3'h4):(1'h0)] wire56;
  wire signed [(2'h2):(1'h0)] wire54;
  wire signed [(4'h8):(1'h0)] wire33;
  wire signed [(3'h4):(1'h0)] wire32;
  wire [(4'h9):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire30;
  wire signed [(3'h7):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire12;
  reg signed [(4'hb):(1'h0)] reg60 = (1'h0);
  assign y = {wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire54,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire28,
                 wire12,
                 reg60,
                 (1'h0)};
  assign wire12 = wire10[(1'h0):(1'h0)];
  module13 #() modinst29 (wire28, clk, wire11, wire12, wire10, wire8);
  assign wire30 = (~((wire9 ? wire28 : (+wire9)) <<< wire12[(3'h6):(1'h1)]));
  assign wire31 = (wire12[(2'h3):(1'h0)] == wire11);
  assign wire32 = wire31[(3'h6):(3'h6)];
  assign wire33 = (8'ha6);
  module34 #() modinst55 (wire54, clk, wire30, wire9, wire33, wire8);
  assign wire56 = wire54;
  assign wire57 = (^~wire11);
  assign wire58 = wire57[(3'h4):(3'h4)];
  assign wire59 = wire8[(4'h8):(3'h4)];
  always
    @(posedge clk) begin
      reg60 <= {$unsigned($signed(((8'ha1) ? wire59 : wire57)))};
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34  (y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h61):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire38;
  input wire [(4'h8):(1'h0)] wire37;
  input wire [(4'h8):(1'h0)] wire36;
  input wire [(4'h8):(1'h0)] wire35;
  wire signed [(3'h6):(1'h0)] wire53;
  wire [(3'h7):(1'h0)] wire48;
  wire [(4'h8):(1'h0)] wire39;
  reg [(3'h5):(1'h0)] reg52 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg51 = (1'h0);
  reg [(2'h2):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg47 = (1'h0);
  reg [(2'h3):(1'h0)] reg46 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg45 = (1'h0);
  reg [(4'h8):(1'h0)] reg44 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg42 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg41 = (1'h0);
  reg [(4'h8):(1'h0)] reg40 = (1'h0);
  assign y = {wire53,
                 wire48,
                 wire39,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 (1'h0)};
  assign wire39 = ($signed(wire37[(2'h3):(1'h1)]) ?
                      (~|{wire36[(3'h6):(3'h5)]}) : ((!wire38) ?
                          ($unsigned(wire38) == {wire37}) : {wire35[(2'h2):(1'h1)]}));
  always
    @(posedge clk) begin
      if ($signed(wire38[(1'h1):(1'h0)]))
        begin
          reg40 <= (wire37[(3'h5):(3'h4)] ?
              $signed(wire35) : (((8'hae) ?
                      $signed(wire39) : ((8'ha8) ^~ wire37)) ?
                  $unsigned((!wire38)) : ((wire38 ? wire38 : wire36) ?
                      wire37 : $signed(wire35))));
          reg41 <= (($signed((wire39 <= wire35)) + (wire38 ?
                  wire35 : $unsigned((8'ha9)))) ?
              (wire36 ?
                  ((wire37 ?
                      wire36 : wire36) && (&wire39)) : ($signed(reg40) - (wire36 ?
                      wire37 : wire38))) : ($signed($signed(wire38)) ?
                  ($signed(wire36) <<< (wire35 ?
                      wire38 : wire38)) : (!(^wire38))));
          reg42 <= {$unsigned($unsigned((wire36 - wire39)))};
        end
      else
        begin
          reg40 <= ($signed((~|(wire39 + reg42))) ?
              (reg42 & {(reg41 ?
                      (8'h9e) : wire39)}) : $unsigned($unsigned($unsigned(wire36))));
        end
      if ((reg42[(2'h2):(2'h2)] ? wire37[(3'h6):(1'h1)] : $unsigned((8'haf))))
        begin
          if (wire37[(3'h7):(2'h2)])
            begin
              reg43 <= ((~wire37[(1'h0):(1'h0)]) >>> (wire36[(4'h8):(1'h0)] <= wire38[(1'h0):(1'h0)]));
              reg44 <= (^reg41);
            end
          else
            begin
              reg43 <= $signed((~&$unsigned((reg41 ? wire38 : reg41))));
              reg44 <= ((!(-(reg44 < reg41))) ?
                  (^(^~$unsigned(reg40))) : ($unsigned(reg43) ?
                      reg43[(1'h1):(1'h0)] : wire38[(1'h0):(1'h0)]));
              reg45 <= (wire37[(1'h1):(1'h1)] == {$signed(wire35[(1'h0):(1'h0)])});
            end
          reg46 <= $unsigned((reg44[(1'h0):(1'h0)] ?
              (reg42[(1'h0):(1'h0)] + (-reg41)) : (~^reg43[(2'h2):(1'h1)])));
          reg47 <= ((^~$signed((8'hae))) ?
              (wire36 ? $unsigned(reg42) : $unsigned($signed(reg46))) : wire39);
        end
      else
        begin
          reg43 <= (wire39[(3'h5):(1'h1)] ^ ((|(-(8'ha7))) | wire38));
        end
    end
  assign wire48 = (((~|$signed(reg45)) ?
                      wire35[(4'h8):(3'h6)] : $signed((reg47 ?
                          reg42 : reg42))) != (8'ha7));
  always
    @(posedge clk) begin
      reg49 <= reg40[(1'h1):(1'h1)];
      if ({($unsigned(wire37) > (((8'ha3) <= reg47) <<< (~wire36)))})
        begin
          reg50 <= $unsigned((^~reg45[(1'h1):(1'h1)]));
        end
      else
        begin
          reg50 <= $unsigned((+$signed((!wire35))));
          reg51 <= $unsigned((reg50[(1'h1):(1'h0)] ?
              {(reg49 ? wire39 : reg44)} : $unsigned((reg44 || reg40))));
        end
      reg52 <= wire35;
    end
  assign wire53 = (+$signed({$signed(reg40)}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire17;
  input wire [(4'h9):(1'h0)] wire16;
  input wire signed [(2'h3):(1'h0)] wire15;
  input wire signed [(2'h2):(1'h0)] wire14;
  wire signed [(3'h7):(1'h0)] wire27;
  wire [(3'h4):(1'h0)] wire23;
  wire signed [(4'hb):(1'h0)] wire22;
  wire signed [(3'h6):(1'h0)] wire21;
  wire signed [(2'h2):(1'h0)] wire18;
  reg [(3'h5):(1'h0)] reg26 = (1'h0);
  reg [(3'h6):(1'h0)] reg25 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg19 = (1'h0);
  assign y = {wire27,
                 wire23,
                 wire22,
                 wire21,
                 wire18,
                 reg26,
                 reg25,
                 reg24,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire18 = (wire16 ? $unsigned((~^{(8'h9d)})) : $unsigned(wire14));
  always
    @(posedge clk) begin
      reg19 <= wire15;
      reg20 <= $unsigned(wire15[(2'h3):(1'h1)]);
    end
  assign wire21 = reg19;
  assign wire22 = (wire14 && {(((8'h9f) ? reg19 : (8'ha2)) ?
                          $signed(reg19) : wire14)});
  assign wire23 = (~(~|((wire22 ? (8'ha0) : reg20) ^~ (!wire22))));
  always
    @(posedge clk) begin
      reg24 <= (wire17[(1'h1):(1'h0)] || wire23);
      reg25 <= $unsigned(wire14);
      reg26 <= wire23[(1'h0):(1'h0)];
    end
  assign wire27 = reg20;
endmodule