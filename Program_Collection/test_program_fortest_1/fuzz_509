(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param12 = (&((^~((8'ha8) * (8'ha4))) < {{(8'hb0)}})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h43):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire10;
  wire [(3'h6):(1'h0)] wire7;
  wire [(3'h5):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire4;
  reg signed [(2'h3):(1'h0)] reg9 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg8 = (1'h0);
  assign y = {wire11, wire10, wire7, wire6, wire5, wire4, reg9, reg8, (1'h0)};
  assign wire4 = $unsigned(($unsigned((wire3 & wire3)) != ((^~wire0) << ((8'ha7) && wire3))));
  assign wire5 = $signed(({wire0[(2'h2):(2'h2)]} ?
                     (-((8'h9c) ? wire1 : wire0)) : ((wire1 >>> (8'ha6)) ?
                         $unsigned(wire0) : wire1)));
  assign wire6 = $signed((wire4[(1'h1):(1'h0)] ?
                     (^(wire4 ?
                         wire0 : wire5)) : $signed(wire5[(3'h5):(1'h0)])));
  assign wire7 = (~&({(wire3 || wire0)} && wire6[(3'h4):(2'h3)]));
  always
    @(posedge clk) begin
      reg8 <= (wire1[(1'h0):(1'h0)] && {wire3});
      reg9 <= (((~&(wire5 >= wire4)) ?
              (((8'h9e) ?
                  reg8 : reg8) > $signed(wire4)) : (~&(reg8 && (8'ha5)))) ?
          $signed((~|{wire7})) : (wire6 ?
              $signed(wire0) : $signed($unsigned(wire3))));
    end
  assign wire10 = (reg8[(1'h0):(1'h0)] ?
                      $unsigned($signed(((8'hae) ?
                          wire0 : wire7))) : (^((wire3 | reg8) <= (wire7 ?
                          reg9 : wire1))));
  assign wire11 = wire10[(2'h3):(1'h1)];
endmodule