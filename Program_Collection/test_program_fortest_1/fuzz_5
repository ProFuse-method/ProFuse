(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param70 = ((^~(~&(^~(8'ha9)))) - (-{((8'h9f) ? (8'had) : (8'h9f))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire69;
  wire signed [(4'h8):(1'h0)] wire68;
  wire signed [(4'h9):(1'h0)] wire67;
  wire [(3'h4):(1'h0)] wire66;
  wire signed [(4'ha):(1'h0)] wire64;
  wire signed [(3'h4):(1'h0)] wire63;
  wire signed [(4'hb):(1'h0)] wire62;
  wire signed [(4'ha):(1'h0)] wire60;
  wire [(4'ha):(1'h0)] wire4;
  reg [(3'h4):(1'h0)] reg65 = (1'h0);
  assign y = {wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire64,
                 wire63,
                 wire62,
                 wire60,
                 wire4,
                 reg65,
                 (1'h0)};
  assign wire4 = wire3[(3'h5):(1'h1)];
  module5 #() modinst61 (.wire7(wire3), .wire9(wire2), .wire8(wire0), .clk(clk), .wire6(wire4), .y(wire60));
  assign wire62 = (($unsigned(wire0[(1'h0):(1'h0)]) ?
                          $unsigned(((8'haa) + wire2)) : ((&wire4) ?
                              $unsigned(wire0) : ((8'ha0) ?
                                  (8'ha0) : (8'ha6)))) ?
                      $signed(wire1[(1'h0):(1'h0)]) : wire60[(3'h6):(1'h0)]);
  assign wire63 = (-(~&(&(-wire60))));
  assign wire64 = ({{{wire4}}} >>> $unsigned(({wire4} ?
                      $signed(wire4) : ((8'had) < (8'hab)))));
  always
    @(posedge clk) begin
      reg65 <= wire63[(2'h2):(1'h0)];
    end
  assign wire66 = (((~^wire60) ?
                          $unsigned((wire60 > wire0)) : (wire3 || (^~wire3))) ?
                      (^~$signed($unsigned(wire4))) : $unsigned($unsigned((wire4 ?
                          wire0 : (8'ha5)))));
  assign wire67 = ($signed((~|(wire62 ?
                      wire60 : wire1))) == (((~&wire64) - wire63[(1'h1):(1'h1)]) ?
                      (~&wire62) : $signed(wire3[(3'h6):(1'h1)])));
  assign wire68 = ($signed(($unsigned(wire63) ?
                      (-wire1) : (wire60 ^ reg65))) >> wire1);
  assign wire69 = wire63[(2'h2):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire6, wire7, wire8, wire9);
  output wire [(32'h85):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire6;
  input wire signed [(4'h8):(1'h0)] wire7;
  input wire signed [(3'h5):(1'h0)] wire8;
  input wire [(4'ha):(1'h0)] wire9;
  wire signed [(3'h4):(1'h0)] wire26;
  wire [(4'h9):(1'h0)] wire28;
  wire signed [(3'h5):(1'h0)] wire29;
  wire signed [(4'h9):(1'h0)] wire30;
  wire signed [(2'h3):(1'h0)] wire32;
  wire signed [(4'ha):(1'h0)] wire33;
  wire [(3'h6):(1'h0)] wire34;
  wire [(4'h9):(1'h0)] wire35;
  wire signed [(2'h2):(1'h0)] wire51;
  wire signed [(3'h5):(1'h0)] wire58;
  reg [(3'h5):(1'h0)] reg31 = (1'h0);
  reg [(3'h6):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg37 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg39 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg54 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg57 = (1'h0);
  assign y = {wire26,
                 wire28,
                 wire29,
                 wire30,
                 wire32,
                 wire33,
                 wire34,
                 wire35,
                 wire51,
                 wire58,
                 reg31,
                 reg36,
                 reg37,
                 reg38,
                 reg39,
                 reg40,
                 reg53,
                 reg54,
                 reg55,
                 reg56,
                 reg57,
                 (1'h0)};
  module10 #() modinst27 (.clk(clk), .wire12(wire6), .y(wire26), .wire14(wire7), .wire11(wire8), .wire13(wire9));
  assign wire28 = $unsigned(((wire8[(2'h2):(2'h2)] ?
                      (&(8'ha4)) : $signed((8'ha8))) ~^ ((wire6 ?
                          (8'hae) : (8'ha6)) ?
                      $unsigned(wire8) : (~wire26))));
  assign wire29 = wire8;
  assign wire30 = ($unsigned({((8'had) * wire9)}) >>> (~wire8));
  always
    @(posedge clk) begin
      reg31 <= wire8;
    end
  assign wire32 = reg31[(2'h3):(1'h1)];
  assign wire33 = (8'hac);
  assign wire34 = (wire28 != wire7);
  assign wire35 = $signed(wire9[(2'h2):(1'h0)]);
  always
    @(posedge clk) begin
      reg36 <= wire26;
      if ($signed(wire26))
        begin
          reg37 <= $signed(($unsigned((~reg31)) ?
              (&$unsigned(wire29)) : wire29));
          reg38 <= (^{{{(8'ha1)}}});
          reg39 <= {wire29[(1'h0):(1'h0)]};
        end
      else
        begin
          reg37 <= (($unsigned((reg37 - wire28)) ?
                  (wire32 != $unsigned((8'h9d))) : ({wire9} ?
                      reg38[(1'h0):(1'h0)] : $signed((8'ha7)))) ?
              ($signed($signed(reg36)) >= $signed((8'ha1))) : ($unsigned($signed(reg36)) + (8'h9f)));
          reg38 <= wire8[(2'h2):(1'h0)];
        end
      reg40 <= ({wire7} ^~ reg38[(4'h8):(2'h2)]);
    end
  module41 #() modinst52 (.wire43(wire6), .wire45(wire28), .clk(clk), .wire42(wire33), .wire44(wire30), .y(wire51));
  always
    @(posedge clk) begin
      if ($signed(($unsigned((reg38 >= (8'h9c))) ?
          $signed($unsigned(wire8)) : wire34[(3'h6):(3'h6)])))
        begin
          reg53 <= $unsigned((((wire8 >>> (8'ha1)) ?
              $unsigned(reg37) : $signed((8'ha0))) - $signed((reg38 ?
              reg31 : wire34))));
          if ({wire33})
            begin
              reg54 <= (~&$signed((wire8[(1'h0):(1'h0)] ?
                  wire34[(1'h0):(1'h0)] : reg53[(3'h6):(1'h0)])));
              reg55 <= $signed((wire26[(1'h1):(1'h1)] ?
                  (^{wire51}) : {(reg37 & wire7)}));
            end
          else
            begin
              reg54 <= $unsigned({(!reg54)});
              reg55 <= wire7;
              reg56 <= wire7;
            end
          if ({($signed($unsigned((8'ha8))) << (wire35 ?
                  wire34[(3'h6):(3'h5)] : $unsigned(wire29)))})
            begin
              reg57 <= (^~(((wire9 && wire30) ?
                  $signed(reg36) : reg36) != ($unsigned(wire28) ?
                  wire30 : {reg54})));
            end
          else
            begin
              reg57 <= $unsigned($unsigned({(&reg57)}));
            end
        end
      else
        begin
          reg53 <= ((-((wire8 ? reg54 : wire26) ?
                  (wire6 ~^ wire9) : $unsigned(wire32))) ?
              wire28[(3'h6):(2'h3)] : $signed(wire8[(1'h0):(1'h0)]));
          if ($unsigned($unsigned(wire51[(1'h0):(1'h0)])))
            begin
              reg54 <= ((8'ha0) != {reg55});
              reg55 <= {$signed(($signed(reg39) + (wire26 >>> wire7)))};
              reg56 <= $unsigned(($signed(reg56) > $signed((reg55 ?
                  wire6 : (8'ha5)))));
            end
          else
            begin
              reg54 <= $signed((~$signed(reg31[(1'h0):(1'h0)])));
              reg55 <= $unsigned(((^((8'haa) ? wire7 : wire9)) ?
                  wire34 : {(wire29 >>> reg55)}));
              reg56 <= wire33[(4'h8):(3'h4)];
            end
        end
    end
  module10 #() modinst59 (.clk(clk), .wire13(reg40), .wire11(reg53), .wire12(reg55), .y(wire58), .wire14(wire6));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module41  (y, clk, wire45, wire44, wire43, wire42);
  output wire [(32'h15):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire45;
  input wire [(4'h9):(1'h0)] wire44;
  input wire [(4'ha):(1'h0)] wire43;
  input wire signed [(3'h4):(1'h0)] wire42;
  wire signed [(3'h4):(1'h0)] wire47;
  wire signed [(3'h5):(1'h0)] wire46;
  reg [(2'h3):(1'h0)] reg50 = (1'h0);
  reg [(3'h6):(1'h0)] reg49 = (1'h0);
  reg [(2'h2):(1'h0)] reg48 = (1'h0);
  assign y = {wire47, wire46, reg50, reg49, reg48, (1'h0)};
  assign wire46 = ($signed(((wire44 ? (8'ha6) : wire42) > (wire43 ?
                      wire45 : wire43))) ^ ((~^$signed(wire42)) & ((wire43 ?
                          wire43 : wire43) ?
                      (+wire42) : wire45[(3'h5):(3'h4)])));
  assign wire47 = ({((~&wire46) ?
                          (wire45 ?
                              wire42 : wire44) : (!wire42))} != {wire46[(3'h4):(1'h1)]});
  always
    @(posedge clk) begin
      reg48 <= $signed(((~&$unsigned((8'ha6))) < (+wire46[(3'h4):(2'h2)])));
      reg49 <= wire45[(3'h6):(1'h1)];
    end
  always
    @(posedge clk) begin
      reg50 <= ({$unsigned($signed(wire47))} ?
          reg48 : $signed(reg49[(3'h4):(1'h1)]));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param25 = (({((8'h9e) ? (8'ha6) : (8'ha9))} & (((8'had) ? (8'h9e) : (8'ha3)) ? (~^(8'haf)) : {(8'ha3)})) - {(~|((8'hae) > (8'haa)))}))
(y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire14;
  input wire [(4'ha):(1'h0)] wire13;
  input wire [(3'h7):(1'h0)] wire12;
  input wire signed [(3'h4):(1'h0)] wire11;
  wire [(4'h8):(1'h0)] wire24;
  wire signed [(2'h3):(1'h0)] wire22;
  wire signed [(2'h2):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire20;
  wire [(2'h2):(1'h0)] wire19;
  wire [(4'ha):(1'h0)] wire18;
  wire signed [(2'h2):(1'h0)] wire15;
  reg signed [(4'h9):(1'h0)] reg23 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg17 = (1'h0);
  reg [(4'ha):(1'h0)] reg16 = (1'h0);
  assign y = {wire24,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire15,
                 reg23,
                 reg17,
                 reg16,
                 (1'h0)};
  assign wire15 = {wire12[(3'h4):(1'h0)]};
  always
    @(posedge clk) begin
      reg16 <= {(|((wire12 - wire15) && $signed(wire12)))};
      reg17 <= (|(wire12[(3'h6):(1'h0)] == $unsigned($signed(wire11))));
    end
  assign wire18 = {wire11[(2'h3):(1'h1)]};
  assign wire19 = (~&wire12[(3'h5):(3'h5)]);
  assign wire20 = (wire11[(2'h3):(1'h1)] << ({$unsigned(wire11)} ?
                      (~^{wire19}) : $unsigned(wire13)));
  assign wire21 = wire18;
  assign wire22 = ($unsigned($unsigned(wire12)) ?
                      (&{(wire18 & wire14)}) : reg17);
  always
    @(posedge clk) begin
      reg23 <= {(^~$unsigned((^wire15)))};
    end
  assign wire24 = wire15[(1'h1):(1'h1)];
endmodule