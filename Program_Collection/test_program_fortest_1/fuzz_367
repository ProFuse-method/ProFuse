(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param37 = ({({(8'h9d)} <= ((8'ha3) ? (8'h9d) : (8'ha7)))} <= ((~&((8'hae) ^ (8'hb0))) ? (((8'haf) ? (8'hab) : (8'ha6)) ? ((8'h9c) < (8'ha0)) : ((8'ha2) ? (8'ha2) : (8'ha6))) : (((8'ha0) ? (8'hac) : (8'ha3)) | ((8'h9d) ? (8'ha8) : (8'haf))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire36;
  wire signed [(2'h2):(1'h0)] wire35;
  wire signed [(4'h8):(1'h0)] wire34;
  wire [(3'h5):(1'h0)] wire33;
  wire [(3'h7):(1'h0)] wire31;
  wire signed [(3'h7):(1'h0)] wire11;
  wire signed [(3'h4):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg7 = (1'h0);
  reg [(4'h9):(1'h0)] reg6 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire31,
                 wire11,
                 wire5,
                 wire4,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = $signed(({(wire0 - wire3)} | ((+wire1) ?
                     {wire2} : $signed(wire2))));
  assign wire5 = {($signed($signed(wire0)) ?
                         $unsigned(wire0[(3'h5):(2'h2)]) : $signed(wire4))};
  always
    @(posedge clk) begin
      if ($signed(({wire3[(2'h2):(1'h1)]} ? wire5 : (~|$signed(wire2)))))
        begin
          reg6 <= {{(|(wire0 >= wire2))}};
        end
      else
        begin
          reg6 <= (wire1[(3'h7):(2'h3)] ?
              $signed($unsigned(wire4)) : $unsigned(((wire1 || wire3) ?
                  wire0 : (wire3 ? wire3 : (8'h9d)))));
          reg7 <= $unsigned(wire1[(4'ha):(2'h3)]);
          reg8 <= (8'hb0);
        end
      reg9 <= reg8[(2'h2):(1'h0)];
      reg10 <= {((reg7[(3'h5):(1'h1)] && $unsigned(reg8)) && reg6[(1'h1):(1'h1)])};
    end
  assign wire11 = $unsigned({wire1[(3'h4):(2'h2)]});
  module12 #() modinst32 (wire31, clk, wire11, reg7, reg10, wire0);
  assign wire33 = reg10;
  assign wire34 = {wire1};
  assign wire35 = wire1[(2'h2):(1'h0)];
  assign wire36 = ($unsigned($signed({(8'hb0)})) || $unsigned(wire3[(1'h0):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire16;
  input wire signed [(2'h2):(1'h0)] wire15;
  input wire signed [(2'h3):(1'h0)] wire14;
  input wire signed [(3'h7):(1'h0)] wire13;
  wire signed [(3'h6):(1'h0)] wire30;
  wire [(3'h5):(1'h0)] wire22;
  wire signed [(3'h4):(1'h0)] wire21;
  wire signed [(2'h2):(1'h0)] wire20;
  wire signed [(2'h3):(1'h0)] wire19;
  wire [(2'h2):(1'h0)] wire18;
  reg signed [(2'h2):(1'h0)] reg29 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg28 = (1'h0);
  reg [(4'h9):(1'h0)] reg27 = (1'h0);
  reg [(3'h5):(1'h0)] reg26 = (1'h0);
  reg [(2'h3):(1'h0)] reg25 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg24 = (1'h0);
  reg [(4'h9):(1'h0)] reg23 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg17 = (1'h0);
  assign y = {wire30,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg17,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg17 <= {$signed(wire14)};
    end
  assign wire18 = {(+($unsigned(wire16) ?
                          $unsigned((8'hac)) : reg17[(4'h9):(3'h5)]))};
  assign wire19 = (8'had);
  assign wire20 = wire14;
  assign wire21 = $signed(wire14);
  assign wire22 = ($signed(wire19) ?
                      (wire15[(1'h0):(1'h0)] ?
                          $unsigned(wire18) : ((wire13 ^ wire13) ?
                              wire13[(3'h6):(2'h3)] : (^~wire18))) : {(+(wire13 ?
                              (8'had) : reg17))});
  always
    @(posedge clk) begin
      if ((wire21[(3'h4):(3'h4)] ?
          ($unsigned((wire14 >> wire15)) ?
              (!$unsigned(wire16)) : (^wire18)) : (^(reg17 > {wire13}))))
        begin
          reg23 <= $signed(wire20);
          if ($signed((-((8'ha5) ? {wire16} : (reg17 > wire19)))))
            begin
              reg24 <= ($unsigned((reg17 && ((8'hab) ^ (8'ha7)))) ?
                  wire21 : wire19[(1'h0):(1'h0)]);
              reg25 <= (wire18[(1'h0):(1'h0)] ?
                  $unsigned((((8'ha9) ? wire21 : reg23) ?
                      (wire16 ?
                          wire22 : wire15) : (8'ha6))) : $unsigned(reg23[(2'h3):(1'h0)]));
              reg26 <= $signed($unsigned(($signed(wire22) & (~^(8'h9f)))));
            end
          else
            begin
              reg24 <= wire14[(1'h1):(1'h1)];
              reg25 <= wire16[(3'h6):(3'h4)];
            end
          if ($unsigned(wire22[(1'h0):(1'h0)]))
            begin
              reg27 <= $unsigned((((8'hae) ? $signed(reg24) : (~&wire14)) ?
                  (((8'hab) & wire22) ?
                      wire15[(1'h0):(1'h0)] : wire22) : $unsigned((-(8'ha4)))));
              reg28 <= (wire13[(1'h0):(1'h0)] <<< (-(wire18 ~^ (-wire19))));
            end
          else
            begin
              reg27 <= $signed(reg17[(3'h5):(3'h4)]);
            end
        end
      else
        begin
          if ($unsigned((reg17[(2'h2):(1'h1)] ? wire16 : {wire18})))
            begin
              reg23 <= wire14;
            end
          else
            begin
              reg23 <= {wire19};
              reg24 <= wire18[(1'h1):(1'h1)];
            end
          reg25 <= (reg17[(1'h0):(1'h0)] ?
              wire15[(2'h2):(2'h2)] : $unsigned(reg25));
          reg26 <= ((reg23[(3'h7):(3'h4)] ~^ wire13[(1'h1):(1'h0)]) + wire13);
        end
      reg29 <= ({$unsigned(((8'ha9) ? reg28 : reg26))} ?
          (8'ha1) : $unsigned(reg27));
    end
  assign wire30 = ((^reg26[(2'h2):(1'h1)]) ?
                      ($signed(wire20[(2'h2):(1'h0)]) ?
                          wire19[(2'h3):(1'h1)] : (~(wire16 ?
                              wire20 : wire15))) : (^$unsigned($signed(reg26))));
endmodule