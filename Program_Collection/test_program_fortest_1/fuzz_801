(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param652 = {{({{(8'hb5), (8'h9c)}, ((8'ha3) ? (7'h40) : (8'hba))} ? {((8'h9c) ^ (8'hbe)), (+(8'ha8))} : ((8'hb5) ? ((7'h44) <= (8'hbe)) : ((8'ha5) ? (8'h9c) : (7'h40))))}, (|(((-(8'hb2)) < ((7'h40) || (8'ha2))) && ((&(8'haa)) ? ((8'hb0) ? (8'h9d) : (8'hac)) : ((8'hba) ~^ (8'hbe)))))}, 
parameter param653 = {param652, param652})
(y, clk, wire0, wire1, wire2, wire3, wire4);
  output wire [(32'h3c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h13):(1'h0)] wire0;
  input wire signed [(5'h15):(1'h0)] wire1;
  input wire signed [(5'h12):(1'h0)] wire2;
  input wire [(4'he):(1'h0)] wire3;
  input wire [(5'h12):(1'h0)] wire4;
  wire signed [(5'h10):(1'h0)] wire651;
  wire [(2'h2):(1'h0)] wire650;
  wire [(5'h11):(1'h0)] wire5;
  wire [(5'h13):(1'h0)] wire6;
  wire signed [(3'h5):(1'h0)] wire648;
  assign y = {wire651, wire650, wire5, wire6, wire648, (1'h0)};
  assign wire5 = $signed($unsigned($signed({(wire2 + wire0),
                     $unsigned(wire0)})));
  assign wire6 = wire5;
  module7 #() modinst649 (.wire8(wire5), .wire12(wire6), .wire9(wire2), .wire10(wire3), .wire11(wire4), .clk(clk), .y(wire648));
  assign wire650 = {wire648[(3'h5):(1'h1)], wire5};
  assign wire651 = $unsigned((wire2[(4'hb):(4'hb)] ?
                       (~&(wire0[(4'hc):(3'h6)] ^~ (wire6 ?
                           wire648 : wire2))) : {((~wire3) <= wire2[(3'h4):(3'h4)]),
                           (~((8'hbd) ? wire3 : wire2))}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param646 = ({(((8'hb3) ? (~|(8'hb7)) : ((8'hbe) ? (8'hb5) : (7'h43))) | (7'h42))} && (7'h44)), 
parameter param647 = param646)
(y, clk, wire8, wire9, wire10, wire11, wire12);
  output wire [(32'h348):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h11):(1'h0)] wire8;
  input wire [(3'h7):(1'h0)] wire9;
  input wire signed [(4'he):(1'h0)] wire10;
  input wire signed [(4'h8):(1'h0)] wire11;
  input wire signed [(5'h13):(1'h0)] wire12;
  wire [(5'h10):(1'h0)] wire644;
  wire signed [(3'h6):(1'h0)] wire643;
  wire [(4'hf):(1'h0)] wire642;
  wire signed [(4'hb):(1'h0)] wire641;
  wire [(5'h10):(1'h0)] wire639;
  wire [(5'h11):(1'h0)] wire484;
  wire signed [(4'hb):(1'h0)] wire483;
  wire [(4'he):(1'h0)] wire482;
  wire [(5'h14):(1'h0)] wire301;
  wire signed [(4'hb):(1'h0)] wire164;
  wire signed [(4'hd):(1'h0)] wire162;
  wire signed [(4'he):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire14;
  wire signed [(4'he):(1'h0)] wire99;
  wire signed [(4'h8):(1'h0)] wire303;
  wire signed [(5'h10):(1'h0)] wire308;
  wire signed [(5'h14):(1'h0)] wire309;
  wire [(4'hb):(1'h0)] wire310;
  wire [(4'hb):(1'h0)] wire480;
  reg signed [(4'hb):(1'h0)] reg507 = (1'h0);
  reg [(4'ha):(1'h0)] reg506 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg505 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg504 = (1'h0);
  reg [(5'h13):(1'h0)] reg500 = (1'h0);
  reg [(5'h12):(1'h0)] reg499 = (1'h0);
  reg [(3'h6):(1'h0)] reg496 = (1'h0);
  reg [(3'h4):(1'h0)] reg493 = (1'h0);
  reg [(4'ha):(1'h0)] reg491 = (1'h0);
  reg [(4'hd):(1'h0)] reg489 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg488 = (1'h0);
  reg [(4'hc):(1'h0)] reg487 = (1'h0);
  reg [(4'h8):(1'h0)] reg17 = (1'h0);
  reg [(4'hc):(1'h0)] reg18 = (1'h0);
  reg [(4'hc):(1'h0)] reg19 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg24 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg26 = (1'h0);
  reg [(5'h14):(1'h0)] reg29 = (1'h0);
  reg [(4'ha):(1'h0)] reg32 = (1'h0);
  reg [(4'hf):(1'h0)] reg34 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg35 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg36 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg37 = (1'h0);
  reg [(4'hb):(1'h0)] reg307 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg508 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar503 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg502 = (1'h0);
  reg [(4'hd):(1'h0)] reg501 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg498 = (1'h0);
  reg [(5'h13):(1'h0)] forvar497 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg495 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar494 = (1'h0);
  reg [(2'h3):(1'h0)] forvar492 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg490 = (1'h0);
  reg [(5'h12):(1'h0)] forvar486 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar485 = (1'h0);
  reg [(4'h8):(1'h0)] reg306 = (1'h0);
  reg [(5'h11):(1'h0)] reg305 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar304 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg33 = (1'h0);
  reg [(2'h3):(1'h0)] reg31 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar30 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar28 = (1'h0);
  reg [(5'h12):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg25 = (1'h0);
  reg [(4'h9):(1'h0)] reg23 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar22 = (1'h0);
  reg [(2'h2):(1'h0)] forvar21 = (1'h0);
  reg [(3'h4):(1'h0)] reg20 = (1'h0);
  reg [(5'h15):(1'h0)] forvar16 = (1'h0);
  reg [(3'h4):(1'h0)] forvar15 = (1'h0);
  assign y = {wire644,
                 wire643,
                 wire642,
                 wire641,
                 wire639,
                 wire484,
                 wire483,
                 wire482,
                 wire301,
                 wire164,
                 wire162,
                 wire13,
                 wire14,
                 wire99,
                 wire303,
                 wire308,
                 wire309,
                 wire310,
                 wire480,
                 reg507,
                 reg506,
                 reg505,
                 reg504,
                 reg500,
                 reg499,
                 reg496,
                 reg493,
                 reg491,
                 reg489,
                 reg488,
                 reg487,
                 reg17,
                 reg18,
                 reg19,
                 reg24,
                 reg26,
                 reg29,
                 reg32,
                 reg34,
                 reg35,
                 reg36,
                 reg37,
                 reg307,
                 reg508,
                 forvar503,
                 reg502,
                 reg501,
                 reg498,
                 forvar497,
                 reg495,
                 forvar494,
                 forvar492,
                 reg490,
                 forvar486,
                 forvar485,
                 reg306,
                 reg305,
                 forvar304,
                 reg33,
                 reg31,
                 forvar30,
                 forvar28,
                 reg27,
                 reg25,
                 reg23,
                 forvar22,
                 forvar21,
                 reg20,
                 forvar16,
                 forvar15,
                 (1'h0)};
  assign wire13 = $signed(wire10[(4'h8):(3'h7)]);
  assign wire14 = ((~^$signed(((wire10 ? wire9 : wire9) ?
                          (^~wire11) : wire8))) ?
                      (+$signed($unsigned((wire13 && wire12)))) : {wire11[(3'h4):(3'h4)],
                          wire13});
  always
    @(posedge clk) begin
      for (forvar15 = (1'h0); (forvar15 < (1'h1)); forvar15 = (forvar15 + (1'h1)))
        begin
          for (forvar16 = (1'h0); (forvar16 < (2'h3)); forvar16 = (forvar16 + (1'h1)))
            begin
              reg17 <= wire9;
              reg18 <= ({forvar16, (|((wire9 << wire12) + wire13))} ?
                  wire11[(3'h4):(2'h2)] : (&(~^((forvar15 << forvar15) ?
                      (~^reg17) : wire9[(1'h0):(1'h0)]))));
            end
          reg19 <= reg18[(3'h6):(3'h6)];
        end
      reg20 = (8'hbf);
      for (forvar21 = (1'h0); (forvar21 < (1'h1)); forvar21 = (forvar21 + (1'h1)))
        begin
          for (forvar22 = (1'h0); (forvar22 < (2'h2)); forvar22 = (forvar22 + (1'h1)))
            begin
              reg23 = $signed(({forvar15, (8'ha8)} ?
                  (forvar15 ?
                      $unsigned({(8'hb9),
                          reg17}) : wire14) : {(+$unsigned(forvar22))}));
              reg24 <= reg20[(1'h1):(1'h0)];
              reg25 = $unsigned(wire13);
              reg26 <= wire13[(3'h6):(1'h1)];
            end
          reg27 = (($unsigned(wire10) == (((forvar21 << reg18) <<< reg25[(1'h0):(1'h0)]) ?
              $unsigned(wire9[(3'h6):(2'h3)]) : (8'haf))) == reg23);
          for (forvar28 = (1'h0); (forvar28 < (2'h2)); forvar28 = (forvar28 + (1'h1)))
            begin
              reg29 <= (&((((forvar16 ? wire8 : reg26) + {forvar16,
                      reg24}) ~^ $signed(wire12)) ?
                  (wire11 | (+forvar28[(4'hc):(1'h0)])) : ({reg17,
                          wire12[(1'h0):(1'h0)]} ?
                      {$unsigned(reg26)} : wire11[(4'h8):(3'h6)])));
            end
        end
      for (forvar30 = (1'h0); (forvar30 < (2'h3)); forvar30 = (forvar30 + (1'h1)))
        begin
          reg31 = (~&(-(8'hb0)));
          if (forvar21)
            begin
              reg32 <= {(+(wire14 ?
                      $unsigned(forvar28[(3'h4):(2'h3)]) : $unsigned((!wire10)))),
                  reg18};
              reg33 = $unsigned((((~^reg25) || (8'hb7)) || $signed($signed(wire12))));
              reg34 <= $unsigned(reg27);
            end
          else
            begin
              reg33 = (forvar30 ?
                  (($signed({wire9, wire11}) ~^ wire12[(1'h1):(1'h0)]) ?
                      (!($signed(reg27) ?
                          {reg33,
                              wire13} : forvar15)) : forvar15[(2'h2):(1'h1)]) : (reg18[(4'hc):(3'h5)] ?
                      (($signed(forvar16) < $unsigned(wire12)) ?
                          (wire11[(3'h5):(1'h0)] ?
                              (forvar16 ? reg24 : wire13) : (wire10 ?
                                  reg19 : reg25)) : $unsigned(reg20[(2'h2):(1'h1)])) : (reg18 != reg26)));
              reg34 <= (^~(8'ha8));
              reg35 <= ((wire14 ?
                  reg29[(2'h2):(1'h1)] : $signed(((|reg18) <= $signed(reg19)))) >> (-(~reg34[(4'h9):(1'h0)])));
              reg36 <= $unsigned(reg26);
              reg37 <= (~^(reg31[(1'h1):(1'h1)] >= {{reg31[(2'h3):(1'h1)]}}));
            end
        end
    end
  module38 #() modinst100 (wire99, clk, reg35, wire8, reg29, reg19);
  module101 #() modinst163 (wire162, clk, reg19, reg37, reg29, reg32);
  assign wire164 = wire9[(1'h1):(1'h1)];
  module165 #() modinst302 (.wire166(reg18), .wire169(reg32), .wire168(wire8), .clk(clk), .y(wire301), .wire167(reg35));
  assign wire303 = ({(wire9 ^ wire8[(4'hb):(2'h3)])} ?
                       ((reg34[(2'h2):(1'h1)] ^~ wire99) <<< ($signed((|reg35)) ?
                           $unsigned($unsigned(wire301)) : (~&(~|wire13)))) : (-wire11));
  always
    @(posedge clk) begin
      for (forvar304 = (1'h0); (forvar304 < (2'h2)); forvar304 = (forvar304 + (1'h1)))
        begin
          reg305 = forvar304[(3'h5):(2'h3)];
          reg306 = wire11;
        end
      reg307 <= $signed($unsigned({$unsigned($signed(reg32)),
          {(~&wire11), $unsigned(wire164)}}));
    end
  assign wire308 = (wire13[(4'hb):(4'ha)] ?
                       {{{((8'hbe) <<< reg17), $signed(reg26)}},
                           reg19} : reg18[(1'h0):(1'h0)]);
  assign wire309 = ((+(reg18[(4'h9):(1'h0)] ?
                       reg29 : $unsigned((~^wire12)))) >>> {($unsigned((~&reg37)) ?
                           wire308 : (((8'ha0) ? wire99 : reg307) ?
                               (reg34 ? reg37 : reg32) : $unsigned(wire13)))});
  assign wire310 = wire308;
  module311 #() modinst481 (wire480, clk, wire10, wire8, wire309, reg36);
  assign wire482 = (8'hbb);
  assign wire483 = {$signed($signed(wire309[(1'h0):(1'h0)])), (8'hbb)};
  assign wire484 = (^~$unsigned(wire310[(1'h1):(1'h0)]));
  always
    @(posedge clk) begin
      for (forvar485 = (1'h0); (forvar485 < (2'h2)); forvar485 = (forvar485 + (1'h1)))
        begin
          for (forvar486 = (1'h0); (forvar486 < (1'h0)); forvar486 = (forvar486 + (1'h1)))
            begin
              reg487 <= wire14[(2'h2):(1'h0)];
            end
          if (($signed($signed(($signed(forvar486) ?
              (wire301 || wire10) : (wire11 << wire11)))) * (~$signed(wire310[(2'h3):(1'h1)]))))
            begin
              reg488 <= $signed((($unsigned((|wire9)) && $unsigned((&reg19))) ?
                  $unsigned((wire13[(4'hd):(1'h0)] >>> reg307)) : {wire484}));
              reg489 <= (~((reg37 | reg37[(4'h9):(2'h2)]) ?
                  $signed(((forvar485 < reg307) <<< (reg29 + (8'hb2)))) : reg18));
              reg490 = (reg29[(2'h3):(2'h2)] > $signed(({reg29[(5'h13):(3'h5)],
                  $unsigned(wire303)} <<< wire9[(3'h7):(1'h0)])));
              reg491 <= {(&$unsigned($signed($signed(reg307)))), wire13};
            end
          else
            begin
              reg488 <= ({((~wire309[(5'h13):(3'h7)]) * {wire9[(2'h2):(2'h2)],
                      {wire303}}),
                  wire10} && (|wire12));
              reg489 <= reg36;
              reg490 = $signed((~|(8'hab)));
              reg491 <= (~$signed(reg18[(4'hb):(4'hb)]));
            end
          for (forvar492 = (1'h0); (forvar492 < (1'h1)); forvar492 = (forvar492 + (1'h1)))
            begin
              reg493 <= (&$unsigned($signed((forvar485[(1'h1):(1'h1)] ?
                  reg490 : ((7'h40) ? (8'hb1) : wire482)))));
            end
        end
      for (forvar494 = (1'h0); (forvar494 < (3'h4)); forvar494 = (forvar494 + (1'h1)))
        begin
          reg495 = $signed(wire11);
          reg496 <= $unsigned($unsigned(reg37));
          for (forvar497 = (1'h0); (forvar497 < (2'h3)); forvar497 = (forvar497 + (1'h1)))
            begin
              reg498 = wire301;
              reg499 <= wire9[(3'h6):(3'h5)];
              reg500 <= $unsigned({reg488,
                  (($unsigned(reg498) ? $signed(wire14) : (!(8'hae))) ?
                      $unsigned($unsigned(wire303)) : wire99)});
              reg501 = $signed({reg26, {wire13}});
              reg502 = (~&$unsigned(((~^(~&reg29)) | wire14)));
            end
          for (forvar503 = (1'h0); (forvar503 < (2'h2)); forvar503 = (forvar503 + (1'h1)))
            begin
              reg504 <= ((7'h43) || {{((reg502 ?
                          (8'hbf) : forvar486) >> {wire99}),
                      forvar497[(3'h4):(1'h0)]},
                  wire309[(4'h8):(3'h6)]});
              reg505 <= wire484;
              reg506 <= ($signed(($signed($signed(wire301)) ^~ (((8'h9d) ?
                      (8'h9f) : wire310) ^ $unsigned(wire484)))) ?
                  (!$unsigned(({reg504} > {reg35,
                      reg496}))) : ($unsigned((|(^reg36))) ?
                      (reg26[(4'hb):(3'h6)] <<< reg18) : {(&{reg498})}));
              reg507 <= forvar503[(3'h4):(2'h3)];
              reg508 = $unsigned(((+(((8'hbe) && wire309) ?
                  reg26[(1'h0):(1'h0)] : (~|(8'hbd)))) ~^ reg491[(4'ha):(4'h9)]));
            end
        end
    end
  module509 #() modinst640 (wire639, clk, reg307, wire309, reg506, wire12);
  assign wire641 = $signed(($signed($signed(((8'hab) | wire164))) ?
                       ($unsigned((^~reg29)) ?
                           (^~(wire164 >> reg499)) : wire13[(3'h5):(1'h0)]) : (^~(8'ha9))));
  assign wire642 = (($signed(reg19[(2'h3):(1'h1)]) << (-((wire11 ^~ reg505) <= (reg493 ?
                       wire12 : wire164)))) & $unsigned($unsigned(reg34)));
  assign wire643 = $signed(reg26[(1'h0):(1'h0)]);
  module311 #() modinst645 (.wire315(wire14), .wire313(wire12), .wire312(wire310), .clk(clk), .y(wire644), .wire314(wire301));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module509
#(parameter param638 = (-({{{(8'hb6)}}} ? (8'hb0) : (8'ha7))))
(y, clk, wire513, wire512, wire511, wire510);
  output wire [(32'h574):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire513;
  input wire signed [(5'h13):(1'h0)] wire512;
  input wire signed [(4'ha):(1'h0)] wire511;
  input wire [(4'hb):(1'h0)] wire510;
  wire signed [(4'hf):(1'h0)] wire637;
  wire [(5'h14):(1'h0)] wire636;
  wire [(5'h15):(1'h0)] wire629;
  wire [(4'h8):(1'h0)] wire628;
  wire [(2'h3):(1'h0)] wire627;
  wire signed [(2'h2):(1'h0)] wire626;
  wire [(4'h9):(1'h0)] wire625;
  wire signed [(5'h11):(1'h0)] wire624;
  wire signed [(2'h2):(1'h0)] wire623;
  wire signed [(5'h15):(1'h0)] wire518;
  wire signed [(5'h14):(1'h0)] wire517;
  wire [(4'ha):(1'h0)] wire516;
  wire [(2'h3):(1'h0)] wire515;
  wire [(4'hb):(1'h0)] wire514;
  reg [(4'ha):(1'h0)] reg634 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg631 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg622 = (1'h0);
  reg [(3'h4):(1'h0)] reg621 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg620 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg619 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg618 = (1'h0);
  reg [(3'h4):(1'h0)] reg613 = (1'h0);
  reg [(4'h9):(1'h0)] reg611 = (1'h0);
  reg [(4'h9):(1'h0)] reg608 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg607 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg606 = (1'h0);
  reg [(3'h6):(1'h0)] reg601 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg599 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg597 = (1'h0);
  reg [(5'h10):(1'h0)] reg596 = (1'h0);
  reg [(5'h14):(1'h0)] reg594 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg591 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg590 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg589 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg586 = (1'h0);
  reg signed [(4'he):(1'h0)] reg585 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg584 = (1'h0);
  reg [(5'h10):(1'h0)] reg581 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg580 = (1'h0);
  reg [(5'h13):(1'h0)] reg579 = (1'h0);
  reg [(4'h8):(1'h0)] reg578 = (1'h0);
  reg signed [(4'he):(1'h0)] reg577 = (1'h0);
  reg [(4'hc):(1'h0)] reg574 = (1'h0);
  reg [(5'h12):(1'h0)] reg571 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg570 = (1'h0);
  reg [(4'h8):(1'h0)] reg551 = (1'h0);
  reg [(4'hf):(1'h0)] reg567 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg565 = (1'h0);
  reg [(4'h8):(1'h0)] reg562 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg561 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg560 = (1'h0);
  reg [(4'ha):(1'h0)] reg559 = (1'h0);
  reg [(3'h4):(1'h0)] reg553 = (1'h0);
  reg [(5'h14):(1'h0)] reg552 = (1'h0);
  reg [(3'h6):(1'h0)] reg550 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg547 = (1'h0);
  reg [(5'h11):(1'h0)] reg544 = (1'h0);
  reg [(2'h2):(1'h0)] reg543 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg541 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg539 = (1'h0);
  reg [(4'hd):(1'h0)] reg534 = (1'h0);
  reg [(4'he):(1'h0)] reg532 = (1'h0);
  reg [(4'hd):(1'h0)] reg527 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg525 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg524 = (1'h0);
  reg [(3'h6):(1'h0)] reg522 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg521 = (1'h0);
  reg [(4'hf):(1'h0)] reg635 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg633 = (1'h0);
  reg [(3'h7):(1'h0)] forvar632 = (1'h0);
  reg [(2'h3):(1'h0)] forvar630 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg617 = (1'h0);
  reg [(4'h8):(1'h0)] forvar616 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg615 = (1'h0);
  reg [(5'h10):(1'h0)] reg614 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg612 = (1'h0);
  reg [(4'hd):(1'h0)] reg610 = (1'h0);
  reg [(4'hb):(1'h0)] forvar609 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar605 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar604 = (1'h0);
  reg [(3'h6):(1'h0)] reg603 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar602 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg600 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar598 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg595 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg593 = (1'h0);
  reg [(4'h9):(1'h0)] forvar592 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg588 = (1'h0);
  reg [(4'h8):(1'h0)] forvar587 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar583 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar582 = (1'h0);
  reg [(3'h5):(1'h0)] reg576 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar575 = (1'h0);
  reg [(5'h13):(1'h0)] reg573 = (1'h0);
  reg [(4'h9):(1'h0)] forvar572 = (1'h0);
  reg [(3'h4):(1'h0)] forvar569 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar568 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg566 = (1'h0);
  reg [(3'h7):(1'h0)] forvar564 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg563 = (1'h0);
  reg [(5'h10):(1'h0)] reg558 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar557 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg556 = (1'h0);
  reg [(4'he):(1'h0)] forvar555 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg554 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar551 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar549 = (1'h0);
  reg [(5'h13):(1'h0)] forvar548 = (1'h0);
  reg [(4'hc):(1'h0)] reg546 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar545 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg542 = (1'h0);
  reg [(4'h9):(1'h0)] forvar540 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg538 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar537 = (1'h0);
  reg [(4'hd):(1'h0)] forvar536 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg535 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar533 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg531 = (1'h0);
  reg [(4'hd):(1'h0)] forvar530 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar529 = (1'h0);
  reg [(5'h10):(1'h0)] reg528 = (1'h0);
  reg [(4'hb):(1'h0)] reg526 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar523 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar520 = (1'h0);
  reg [(5'h12):(1'h0)] forvar519 = (1'h0);
  assign y = {wire637,
                 wire636,
                 wire629,
                 wire628,
                 wire627,
                 wire626,
                 wire625,
                 wire624,
                 wire623,
                 wire518,
                 wire517,
                 wire516,
                 wire515,
                 wire514,
                 reg634,
                 reg631,
                 reg622,
                 reg621,
                 reg620,
                 reg619,
                 reg618,
                 reg613,
                 reg611,
                 reg608,
                 reg607,
                 reg606,
                 reg601,
                 reg599,
                 reg597,
                 reg596,
                 reg594,
                 reg591,
                 reg590,
                 reg589,
                 reg586,
                 reg585,
                 reg584,
                 reg581,
                 reg580,
                 reg579,
                 reg578,
                 reg577,
                 reg574,
                 reg571,
                 reg570,
                 reg551,
                 reg567,
                 reg565,
                 reg562,
                 reg561,
                 reg560,
                 reg559,
                 reg553,
                 reg552,
                 reg550,
                 reg547,
                 reg544,
                 reg543,
                 reg541,
                 reg539,
                 reg534,
                 reg532,
                 reg527,
                 reg525,
                 reg524,
                 reg522,
                 reg521,
                 reg635,
                 reg633,
                 forvar632,
                 forvar630,
                 reg617,
                 forvar616,
                 reg615,
                 reg614,
                 reg612,
                 reg610,
                 forvar609,
                 forvar605,
                 forvar604,
                 reg603,
                 forvar602,
                 reg600,
                 forvar598,
                 reg595,
                 reg593,
                 forvar592,
                 reg588,
                 forvar587,
                 forvar583,
                 forvar582,
                 reg576,
                 forvar575,
                 reg573,
                 forvar572,
                 forvar569,
                 forvar568,
                 reg566,
                 forvar564,
                 reg563,
                 reg558,
                 forvar557,
                 reg556,
                 forvar555,
                 reg554,
                 forvar551,
                 forvar549,
                 forvar548,
                 reg546,
                 forvar545,
                 reg542,
                 forvar540,
                 reg538,
                 forvar537,
                 forvar536,
                 reg535,
                 forvar533,
                 reg531,
                 forvar530,
                 forvar529,
                 reg528,
                 reg526,
                 forvar523,
                 forvar520,
                 forvar519,
                 (1'h0)};
  assign wire514 = ({(~&(((8'hb1) ?
                           wire513 : wire513) + $signed(wire513)))} >= $unsigned(($unsigned($unsigned(wire510)) ?
                       wire511 : wire512[(4'h9):(4'h8)])));
  assign wire515 = wire513[(4'ha):(4'h9)];
  assign wire516 = (wire513 || $unsigned((((^wire510) ^ (wire515 && (8'hb9))) ?
                       wire512[(4'h8):(3'h6)] : $signed((~&(7'h44))))));
  assign wire517 = $signed((-wire514[(3'h6):(3'h4)]));
  assign wire518 = wire516[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      for (forvar519 = (1'h0); (forvar519 < (1'h0)); forvar519 = (forvar519 + (1'h1)))
        begin
          for (forvar520 = (1'h0); (forvar520 < (2'h2)); forvar520 = (forvar520 + (1'h1)))
            begin
              reg521 <= ($signed(wire513[(2'h2):(1'h0)]) || (^~forvar519));
              reg522 <= $unsigned($signed((wire518[(5'h12):(4'hd)] ?
                  $unsigned($unsigned(wire518)) : ($unsigned(wire514) & wire512[(4'hf):(4'he)]))));
            end
          for (forvar523 = (1'h0); (forvar523 < (2'h2)); forvar523 = (forvar523 + (1'h1)))
            begin
              reg524 <= $signed(reg522);
              reg525 <= (((+wire518) ?
                  wire518 : $signed(wire510)) ^~ $unsigned($unsigned((8'h9f))));
              reg526 = {wire518};
              reg527 <= ({reg522,
                  $unsigned($unsigned($signed(forvar519)))} >> $unsigned($unsigned(wire515[(1'h0):(1'h0)])));
              reg528 = $signed(wire518[(3'h4):(2'h3)]);
            end
        end
      for (forvar529 = (1'h0); (forvar529 < (2'h2)); forvar529 = (forvar529 + (1'h1)))
        begin
          for (forvar530 = (1'h0); (forvar530 < (3'h4)); forvar530 = (forvar530 + (1'h1)))
            begin
              reg531 = reg526;
              reg532 <= (($unsigned({((8'ha1) && (8'hbc)), (!wire514)}) ?
                  wire517[(3'h5):(2'h2)] : (wire518[(4'hc):(3'h5)] ?
                      {wire518} : (~&(^wire516)))) < {((~^$signed(wire511)) ?
                      ({reg525} ?
                          (~^reg526) : (reg527 ?
                              wire518 : (8'haf))) : ((^reg531) == reg525[(1'h0):(1'h0)]))});
            end
          for (forvar533 = (1'h0); (forvar533 < (1'h1)); forvar533 = (forvar533 + (1'h1)))
            begin
              reg534 <= $signed($unsigned(reg527));
              reg535 = wire510[(3'h5):(1'h1)];
            end
        end
      for (forvar536 = (1'h0); (forvar536 < (1'h0)); forvar536 = (forvar536 + (1'h1)))
        begin
          for (forvar537 = (1'h0); (forvar537 < (1'h0)); forvar537 = (forvar537 + (1'h1)))
            begin
              reg538 = (wire513[(3'h6):(3'h6)] >= (|((^~(wire515 - wire511)) ?
                  (forvar529[(4'hc):(4'h8)] && wire514[(4'ha):(3'h4)]) : ((~|forvar523) ?
                      reg526[(2'h2):(2'h2)] : {wire514, (8'hb3)}))));
              reg539 <= forvar529;
            end
          for (forvar540 = (1'h0); (forvar540 < (3'h4)); forvar540 = (forvar540 + (1'h1)))
            begin
              reg541 <= {(&(^~(8'ha5))), forvar533[(3'h5):(2'h2)]};
              reg542 = ($signed(forvar533) ?
                  $signed(forvar519) : ((-$signed(wire516[(3'h6):(1'h0)])) ~^ (wire518[(5'h10):(4'he)] ~^ ((wire518 ?
                      forvar540 : wire511) ^ $unsigned(reg535)))));
              reg543 <= ($signed(wire515[(2'h2):(1'h1)]) + $signed({$signed(forvar523),
                  (-(forvar523 ? forvar536 : forvar533))}));
              reg544 <= (($signed((-{forvar519, reg526})) ?
                  ((reg525 - {forvar536, wire518}) ?
                      forvar520 : (forvar520[(5'h12):(4'he)] != $signed(wire511))) : wire512) ~^ ((8'hbb) || (&(!$unsigned(wire518)))));
            end
          for (forvar545 = (1'h0); (forvar545 < (3'h4)); forvar545 = (forvar545 + (1'h1)))
            begin
              reg546 = $signed($unsigned(reg526));
            end
          reg547 <= $signed($unsigned(reg543));
        end
      for (forvar548 = (1'h0); (forvar548 < (1'h1)); forvar548 = (forvar548 + (1'h1)))
        begin
          for (forvar549 = (1'h0); (forvar549 < (3'h4)); forvar549 = (forvar549 + (1'h1)))
            begin
              reg550 <= (wire512[(4'he):(3'h4)] | (^((8'ha2) ?
                  reg522 : (reg532 ? $unsigned(reg539) : (-(8'ha2))))));
            end
        end
      if ((reg538 ? $unsigned(reg522) : forvar549[(3'h5):(1'h1)]))
        begin
          for (forvar551 = (1'h0); (forvar551 < (2'h2)); forvar551 = (forvar551 + (1'h1)))
            begin
              reg552 <= $signed(reg547);
              reg553 <= ({forvar536, reg531} != wire514);
              reg554 = (8'hbb);
            end
          for (forvar555 = (1'h0); (forvar555 < (1'h0)); forvar555 = (forvar555 + (1'h1)))
            begin
              reg556 = forvar533[(3'h4):(2'h3)];
            end
          for (forvar557 = (1'h0); (forvar557 < (3'h4)); forvar557 = (forvar557 + (1'h1)))
            begin
              reg558 = (reg554 ?
                  (((~^((8'hae) >= reg535)) || {(~reg535), (-reg527)}) ?
                      reg531[(3'h4):(1'h0)] : (~&reg552[(5'h14):(5'h10)])) : wire513);
              reg559 <= ((($unsigned(wire518) || ((~forvar530) ?
                          reg547[(2'h3):(1'h0)] : ((8'hba) < wire515))) ?
                      (~^(reg539[(1'h0):(1'h0)] - $unsigned((8'ha5)))) : $signed($signed($unsigned(reg541)))) ?
                  ((|$unsigned(forvar519)) ?
                      $signed(((|reg547) ?
                          (reg558 ?
                              wire517 : reg524) : reg546)) : ($signed($signed(reg521)) <<< ($unsigned((8'hb5)) ?
                          (8'hb3) : $unsigned(wire515)))) : ((reg543[(1'h1):(1'h0)] | $signed($signed(reg541))) ?
                      ({$signed(reg558)} ?
                          $signed((~|forvar519)) : reg526[(4'hb):(1'h1)]) : (((reg541 ?
                              forvar540 : (8'haf)) ?
                          (forvar533 ^ wire518) : forvar549[(4'h9):(4'h8)]) <= reg553[(1'h0):(1'h0)])));
              reg560 <= wire510[(4'ha):(3'h7)];
              reg561 <= $signed($signed($signed($unsigned(reg553[(3'h4):(1'h1)]))));
              reg562 <= $unsigned((reg526[(4'ha):(4'h8)] != $signed(($signed(wire516) ?
                  (reg528 ? wire512 : reg526) : reg547[(2'h3):(1'h1)]))));
            end
          reg563 = $unsigned((^(((^wire512) <= (forvar536 * reg525)) ?
              {$signed(reg542),
                  (~(8'haf))} : $unsigned(reg547[(2'h3):(2'h3)]))));
          for (forvar564 = (1'h0); (forvar564 < (2'h2)); forvar564 = (forvar564 + (1'h1)))
            begin
              reg565 <= reg546;
              reg566 = (reg526[(4'hb):(3'h4)] >>> $signed((({(8'ha5),
                          forvar533} ?
                      {forvar530} : forvar530) ?
                  $unsigned($signed(wire513)) : reg541)));
              reg567 <= ($signed(({(reg560 ? forvar520 : forvar519),
                          (reg535 ? reg553 : (8'h9e))} ?
                      ($unsigned(reg528) ?
                          reg560[(2'h3):(1'h1)] : (reg524 >>> reg522)) : reg534)) ?
                  $unsigned((reg560 ?
                      (forvar564[(3'h6):(2'h3)] ?
                          (reg553 <<< wire510) : {wire514}) : (wire513 ?
                          reg532 : reg524))) : reg531);
            end
        end
      else
        begin
          reg551 <= $unsigned((reg528 <= ($unsigned((wire510 == reg527)) == $signed((forvar548 ^ reg543)))));
        end
    end
  always
    @(posedge clk) begin
      for (forvar568 = (1'h0); (forvar568 < (2'h3)); forvar568 = (forvar568 + (1'h1)))
        begin
          for (forvar569 = (1'h0); (forvar569 < (3'h4)); forvar569 = (forvar569 + (1'h1)))
            begin
              reg570 <= ((|{reg553}) ~^ (($signed($signed(reg551)) ?
                      (!$unsigned((8'hac))) : (^~(reg524 ? wire510 : reg522))) ?
                  (($unsigned(reg567) ?
                      (8'hba) : $signed(reg552)) != {$unsigned(wire512)}) : (|$signed((reg532 != reg534)))));
              reg571 <= {(|wire510)};
            end
          for (forvar572 = (1'h0); (forvar572 < (2'h2)); forvar572 = (forvar572 + (1'h1)))
            begin
              reg573 = {$signed($unsigned(wire510[(3'h5):(2'h3)]))};
              reg574 <= (($unsigned({(reg543 ? wire516 : wire516),
                      $signed((8'h9f))}) ?
                  $signed((!(|wire511))) : reg570[(4'h9):(4'h8)]) <= {reg560,
                  reg552[(4'hb):(2'h3)]});
            end
          for (forvar575 = (1'h0); (forvar575 < (2'h3)); forvar575 = (forvar575 + (1'h1)))
            begin
              reg576 = $unsigned(((^~forvar569) == $signed($signed($signed(reg553)))));
              reg577 <= ({reg567[(2'h2):(1'h0)],
                  (^~(7'h42))} != $signed(((~|(~^reg541)) > (~^forvar572[(3'h6):(3'h5)]))));
              reg578 <= $unsigned(wire510);
              reg579 <= reg541[(2'h2):(1'h0)];
              reg580 <= ($signed((((reg578 >>> forvar569) ?
                      reg565 : (reg565 ^~ reg561)) ?
                  {(forvar572 - (8'ha9))} : (reg577[(2'h3):(2'h2)] <= reg567[(3'h6):(3'h4)]))) >= (+($signed(reg565) >= (-forvar569))));
            end
        end
      reg581 <= reg567[(4'hc):(4'ha)];
      for (forvar582 = (1'h0); (forvar582 < (2'h3)); forvar582 = (forvar582 + (1'h1)))
        begin
          for (forvar583 = (1'h0); (forvar583 < (2'h2)); forvar583 = (forvar583 + (1'h1)))
            begin
              reg584 <= (-reg581);
              reg585 <= reg577[(3'h6):(3'h4)];
              reg586 <= {reg570[(3'h5):(1'h0)]};
            end
          for (forvar587 = (1'h0); (forvar587 < (3'h4)); forvar587 = (forvar587 + (1'h1)))
            begin
              reg588 = (~&($unsigned(reg539[(1'h1):(1'h1)]) ?
                  $unsigned(((reg539 ^ reg584) ?
                      $unsigned(reg584) : reg524[(3'h7):(1'h1)])) : reg539[(1'h0):(1'h0)]));
              reg589 <= reg586;
              reg590 <= ($signed((((wire513 ? forvar575 : (8'h9f)) ?
                      (-reg552) : reg577) ?
                  {$signed(reg561)} : reg541[(3'h5):(2'h2)])) * $signed($signed(forvar569[(2'h3):(2'h3)])));
              reg591 <= $unsigned($unsigned(reg567));
            end
          for (forvar592 = (1'h0); (forvar592 < (3'h4)); forvar592 = (forvar592 + (1'h1)))
            begin
              reg593 = $signed((~&(!forvar582[(3'h4):(3'h4)])));
              reg594 <= (wire518 ?
                  reg580[(2'h2):(1'h1)] : forvar572[(2'h3):(1'h1)]);
              reg595 = ((8'haf) == reg525[(2'h2):(1'h0)]);
              reg596 <= ($unsigned((+$unsigned((&forvar568)))) ~^ $signed((wire515 ?
                  wire515[(2'h2):(1'h0)] : forvar587)));
              reg597 <= (^($unsigned((forvar572[(3'h5):(2'h3)] ^ reg580)) >>> $signed(reg565)));
            end
          for (forvar598 = (1'h0); (forvar598 < (3'h4)); forvar598 = (forvar598 + (1'h1)))
            begin
              reg599 <= $unsigned((^(^~reg534)));
              reg600 = reg589[(4'he):(4'hc)];
              reg601 <= (wire517[(4'hc):(4'h9)] > reg544[(5'h11):(5'h11)]);
            end
          for (forvar602 = (1'h0); (forvar602 < (1'h0)); forvar602 = (forvar602 + (1'h1)))
            begin
              reg603 = reg593;
            end
        end
      for (forvar604 = (1'h0); (forvar604 < (1'h1)); forvar604 = (forvar604 + (1'h1)))
        begin
          for (forvar605 = (1'h0); (forvar605 < (2'h3)); forvar605 = (forvar605 + (1'h1)))
            begin
              reg606 <= $unsigned(forvar605);
              reg607 <= (^~{((+reg580[(1'h0):(1'h0)]) < $signed($signed(reg584))),
                  ((~((8'hb7) & reg588)) ?
                      (~&wire518[(4'he):(4'h8)]) : reg562[(2'h3):(2'h3)])});
              reg608 <= ($signed($signed($unsigned($signed(reg565)))) ?
                  (($unsigned((reg600 <<< reg591)) ?
                          {(!reg578), (~^reg596)} : {reg601[(2'h2):(1'h1)],
                              $signed(reg544)}) ?
                      $signed(({reg565} ~^ (reg576 ?
                          reg577 : (8'ha1)))) : reg576) : ((~forvar602[(1'h1):(1'h1)]) >> ((wire516[(1'h0):(1'h0)] ?
                          (wire514 ? forvar592 : reg580) : $unsigned(reg524)) ?
                      ($unsigned((8'hb7)) - (reg525 * reg586)) : {(reg589 ^ reg606),
                          $signed((8'hbc))})));
            end
          for (forvar609 = (1'h0); (forvar609 < (3'h4)); forvar609 = (forvar609 + (1'h1)))
            begin
              reg610 = (|(8'ha1));
              reg611 <= forvar592;
              reg612 = $signed(wire517);
              reg613 <= forvar583[(3'h7):(1'h1)];
              reg614 = $unsigned($unsigned(((~&{reg594}) < reg534[(4'ha):(4'ha)])));
            end
          reg615 = {(~(~&wire514))};
          for (forvar616 = (1'h0); (forvar616 < (1'h1)); forvar616 = (forvar616 + (1'h1)))
            begin
              reg617 = reg565[(3'h6):(3'h6)];
              reg618 <= $unsigned(forvar587[(4'h8):(3'h7)]);
              reg619 <= reg607[(1'h0):(1'h0)];
              reg620 <= (wire517 <<< $unsigned($signed(($signed(reg561) && $signed((8'hb0))))));
              reg621 <= {$signed($signed($unsigned(forvar598[(3'h7):(3'h6)])))};
            end
          reg622 <= reg594;
        end
    end
  assign wire623 = reg618;
  assign wire624 = ({((reg552[(3'h6):(3'h4)] + (^reg580)) == $unsigned(wire517)),
                           ({$signed((8'h9c)), $signed(reg551)} ?
                               (wire515 ?
                                   $signed(reg596) : (^(8'ha7))) : (~^(reg562 ?
                                   reg580 : reg527)))} ?
                       $signed(wire516[(2'h2):(2'h2)]) : (reg618 ?
                           (wire623 == $signed((-(8'ha3)))) : (^reg613[(3'h4):(1'h0)])));
  assign wire625 = wire511[(3'h5):(1'h1)];
  assign wire626 = $signed(({$signed($signed(reg571)),
                           $signed(((8'ha2) ? wire514 : reg585))} ?
                       reg541[(1'h1):(1'h1)] : reg589[(3'h5):(2'h3)]));
  assign wire627 = reg562;
  assign wire628 = (~$signed(reg619[(3'h4):(2'h2)]));
  assign wire629 = $unsigned((|$unsigned(reg621[(1'h0):(1'h0)])));
  always
    @(posedge clk) begin
      for (forvar630 = (1'h0); (forvar630 < (3'h4)); forvar630 = (forvar630 + (1'h1)))
        begin
          reg631 <= $signed(((((wire516 ? reg571 : wire626) ?
                  (reg571 << forvar630) : $signed(reg550)) * {(reg544 * reg543)}) ?
              $unsigned((^~reg559[(3'h5):(2'h3)])) : (+{(^~reg619),
                  $unsigned((7'h44))})));
          for (forvar632 = (1'h0); (forvar632 < (1'h0)); forvar632 = (forvar632 + (1'h1)))
            begin
              reg633 = (reg606 >> reg597[(2'h3):(2'h3)]);
              reg634 <= {(({wire628[(2'h3):(1'h1)], reg591} ?
                          $unsigned($unsigned(reg596)) : (|wire512[(5'h12):(4'h9)])) ?
                      ((8'ha7) ?
                          reg607 : (~&(reg619 ?
                              reg613 : reg631))) : (&((|reg590) ?
                          $unsigned(wire518) : (wire512 > reg522)))),
                  ((-(reg584[(3'h6):(1'h1)] ^~ (reg596 ? reg621 : reg532))) ?
                      reg586 : wire515)};
              reg635 = (~&reg578);
            end
        end
    end
  assign wire636 = wire512[(3'h6):(3'h5)];
  assign wire637 = $unsigned({(reg578[(3'h5):(2'h3)] || $signed(reg585[(3'h7):(3'h6)]))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module311
#(parameter param479 = (-(~&(((~|(8'hb6)) ? ((8'ha9) ? (8'hbf) : (8'ha1)) : (|(7'h41))) || (|((8'hb4) ? (8'hb1) : (8'h9d)))))))
(y, clk, wire315, wire314, wire313, wire312);
  output wire [(32'h768):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire315;
  input wire [(4'he):(1'h0)] wire314;
  input wire signed [(5'h13):(1'h0)] wire313;
  input wire signed [(4'hb):(1'h0)] wire312;
  wire [(5'h13):(1'h0)] wire435;
  wire [(4'h9):(1'h0)] wire397;
  wire [(4'hb):(1'h0)] wire396;
  wire signed [(3'h7):(1'h0)] wire395;
  wire signed [(3'h5):(1'h0)] wire394;
  wire signed [(5'h12):(1'h0)] wire393;
  wire [(4'hd):(1'h0)] wire320;
  wire signed [(2'h2):(1'h0)] wire319;
  wire [(4'hf):(1'h0)] wire318;
  wire signed [(4'hc):(1'h0)] wire317;
  wire [(3'h4):(1'h0)] wire316;
  reg signed [(5'h14):(1'h0)] reg475 = (1'h0);
  reg [(3'h6):(1'h0)] reg474 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg473 = (1'h0);
  reg [(3'h5):(1'h0)] reg471 = (1'h0);
  reg [(3'h4):(1'h0)] reg470 = (1'h0);
  reg [(4'h8):(1'h0)] reg468 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg465 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg464 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg463 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg462 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg459 = (1'h0);
  reg [(2'h2):(1'h0)] reg453 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg449 = (1'h0);
  reg [(5'h15):(1'h0)] reg446 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg443 = (1'h0);
  reg [(5'h11):(1'h0)] reg442 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg441 = (1'h0);
  reg [(4'hf):(1'h0)] reg440 = (1'h0);
  reg [(5'h14):(1'h0)] reg434 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg433 = (1'h0);
  reg [(3'h5):(1'h0)] reg432 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg431 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg429 = (1'h0);
  reg [(4'h8):(1'h0)] reg427 = (1'h0);
  reg [(4'hb):(1'h0)] reg421 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg420 = (1'h0);
  reg [(2'h2):(1'h0)] reg419 = (1'h0);
  reg [(5'h11):(1'h0)] reg418 = (1'h0);
  reg [(5'h13):(1'h0)] reg415 = (1'h0);
  reg [(4'hd):(1'h0)] reg414 = (1'h0);
  reg [(5'h15):(1'h0)] reg412 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg409 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg406 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg404 = (1'h0);
  reg [(4'hb):(1'h0)] reg402 = (1'h0);
  reg [(3'h5):(1'h0)] reg401 = (1'h0);
  reg [(3'h4):(1'h0)] reg400 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg388 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg387 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg385 = (1'h0);
  reg [(5'h12):(1'h0)] reg384 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg383 = (1'h0);
  reg [(4'h9):(1'h0)] reg382 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg379 = (1'h0);
  reg [(3'h4):(1'h0)] reg370 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg366 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg378 = (1'h0);
  reg [(4'hc):(1'h0)] reg377 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg376 = (1'h0);
  reg [(4'hf):(1'h0)] reg374 = (1'h0);
  reg [(4'hd):(1'h0)] reg371 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg369 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg364 = (1'h0);
  reg [(4'hd):(1'h0)] reg361 = (1'h0);
  reg [(3'h6):(1'h0)] reg360 = (1'h0);
  reg [(4'hf):(1'h0)] reg359 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg356 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg349 = (1'h0);
  reg [(5'h15):(1'h0)] reg345 = (1'h0);
  reg [(4'hc):(1'h0)] reg344 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg340 = (1'h0);
  reg [(4'hb):(1'h0)] reg339 = (1'h0);
  reg [(4'ha):(1'h0)] reg338 = (1'h0);
  reg [(4'h8):(1'h0)] reg335 = (1'h0);
  reg [(3'h5):(1'h0)] reg333 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg332 = (1'h0);
  reg [(5'h13):(1'h0)] reg331 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg328 = (1'h0);
  reg [(4'hd):(1'h0)] reg326 = (1'h0);
  reg [(4'h8):(1'h0)] reg324 = (1'h0);
  reg [(3'h6):(1'h0)] reg323 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg478 = (1'h0);
  reg [(2'h2):(1'h0)] reg477 = (1'h0);
  reg [(4'he):(1'h0)] forvar476 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar472 = (1'h0);
  reg [(4'hc):(1'h0)] reg469 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg467 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar466 = (1'h0);
  reg [(5'h13):(1'h0)] forvar461 = (1'h0);
  reg [(4'hd):(1'h0)] forvar460 = (1'h0);
  reg [(5'h13):(1'h0)] reg458 = (1'h0);
  reg [(5'h14):(1'h0)] reg457 = (1'h0);
  reg [(3'h4):(1'h0)] reg456 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg455 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar454 = (1'h0);
  reg [(5'h10):(1'h0)] forvar452 = (1'h0);
  reg [(3'h7):(1'h0)] forvar451 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg450 = (1'h0);
  reg [(5'h12):(1'h0)] reg448 = (1'h0);
  reg [(4'h9):(1'h0)] forvar447 = (1'h0);
  reg [(4'hc):(1'h0)] reg445 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg444 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg439 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg438 = (1'h0);
  reg [(3'h6):(1'h0)] forvar437 = (1'h0);
  reg [(3'h4):(1'h0)] forvar436 = (1'h0);
  reg [(5'h11):(1'h0)] forvar430 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg428 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg426 = (1'h0);
  reg [(4'hb):(1'h0)] reg425 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg424 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar423 = (1'h0);
  reg [(4'hd):(1'h0)] reg422 = (1'h0);
  reg [(5'h10):(1'h0)] forvar417 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar416 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg413 = (1'h0);
  reg [(3'h5):(1'h0)] reg411 = (1'h0);
  reg [(3'h7):(1'h0)] forvar410 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg408 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg407 = (1'h0);
  reg [(4'hc):(1'h0)] forvar405 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar403 = (1'h0);
  reg [(4'h8):(1'h0)] forvar399 = (1'h0);
  reg [(5'h15):(1'h0)] forvar398 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg392 = (1'h0);
  reg [(4'he):(1'h0)] reg391 = (1'h0);
  reg [(2'h3):(1'h0)] reg390 = (1'h0);
  reg [(5'h14):(1'h0)] forvar389 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar386 = (1'h0);
  reg [(5'h15):(1'h0)] forvar381 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar380 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar367 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar375 = (1'h0);
  reg [(4'h8):(1'h0)] reg373 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg372 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar370 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg368 = (1'h0);
  reg [(3'h4):(1'h0)] reg367 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar366 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg365 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg363 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg362 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar358 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar357 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg355 = (1'h0);
  reg [(5'h15):(1'h0)] forvar354 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg353 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg352 = (1'h0);
  reg [(3'h5):(1'h0)] forvar351 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg350 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg348 = (1'h0);
  reg [(3'h5):(1'h0)] forvar347 = (1'h0);
  reg [(5'h14):(1'h0)] forvar346 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg343 = (1'h0);
  reg [(3'h6):(1'h0)] reg342 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar341 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg337 = (1'h0);
  reg [(4'hc):(1'h0)] forvar336 = (1'h0);
  reg [(5'h12):(1'h0)] forvar334 = (1'h0);
  reg [(4'ha):(1'h0)] forvar330 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg329 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg327 = (1'h0);
  reg [(4'hf):(1'h0)] reg325 = (1'h0);
  reg [(5'h15):(1'h0)] reg322 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar321 = (1'h0);
  assign y = {wire435,
                 wire397,
                 wire396,
                 wire395,
                 wire394,
                 wire393,
                 wire320,
                 wire319,
                 wire318,
                 wire317,
                 wire316,
                 reg475,
                 reg474,
                 reg473,
                 reg471,
                 reg470,
                 reg468,
                 reg465,
                 reg464,
                 reg463,
                 reg462,
                 reg459,
                 reg453,
                 reg449,
                 reg446,
                 reg443,
                 reg442,
                 reg441,
                 reg440,
                 reg434,
                 reg433,
                 reg432,
                 reg431,
                 reg429,
                 reg427,
                 reg421,
                 reg420,
                 reg419,
                 reg418,
                 reg415,
                 reg414,
                 reg412,
                 reg409,
                 reg406,
                 reg404,
                 reg402,
                 reg401,
                 reg400,
                 reg388,
                 reg387,
                 reg385,
                 reg384,
                 reg383,
                 reg382,
                 reg379,
                 reg370,
                 reg366,
                 reg378,
                 reg377,
                 reg376,
                 reg374,
                 reg371,
                 reg369,
                 reg364,
                 reg361,
                 reg360,
                 reg359,
                 reg356,
                 reg349,
                 reg345,
                 reg344,
                 reg340,
                 reg339,
                 reg338,
                 reg335,
                 reg333,
                 reg332,
                 reg331,
                 reg328,
                 reg326,
                 reg324,
                 reg323,
                 reg478,
                 reg477,
                 forvar476,
                 forvar472,
                 reg469,
                 reg467,
                 forvar466,
                 forvar461,
                 forvar460,
                 reg458,
                 reg457,
                 reg456,
                 reg455,
                 forvar454,
                 forvar452,
                 forvar451,
                 reg450,
                 reg448,
                 forvar447,
                 reg445,
                 reg444,
                 reg439,
                 reg438,
                 forvar437,
                 forvar436,
                 forvar430,
                 reg428,
                 reg426,
                 reg425,
                 reg424,
                 forvar423,
                 reg422,
                 forvar417,
                 forvar416,
                 reg413,
                 reg411,
                 forvar410,
                 reg408,
                 reg407,
                 forvar405,
                 forvar403,
                 forvar399,
                 forvar398,
                 reg392,
                 reg391,
                 reg390,
                 forvar389,
                 forvar386,
                 forvar381,
                 forvar380,
                 forvar367,
                 forvar375,
                 reg373,
                 reg372,
                 forvar370,
                 reg368,
                 reg367,
                 forvar366,
                 reg365,
                 reg363,
                 reg362,
                 forvar358,
                 forvar357,
                 reg355,
                 forvar354,
                 reg353,
                 reg352,
                 forvar351,
                 reg350,
                 reg348,
                 forvar347,
                 forvar346,
                 reg343,
                 reg342,
                 forvar341,
                 reg337,
                 forvar336,
                 forvar334,
                 forvar330,
                 reg329,
                 reg327,
                 reg325,
                 reg322,
                 forvar321,
                 (1'h0)};
  assign wire316 = (7'h43);
  assign wire317 = ((wire313 && $unsigned(({wire315,
                       (8'h9d)} != wire316))) == (!$signed(wire313[(5'h11):(1'h1)])));
  assign wire318 = wire312[(2'h2):(1'h1)];
  assign wire319 = $unsigned((wire316[(1'h1):(1'h0)] ~^ {((8'hbe) >= wire314)}));
  assign wire320 = (wire317[(3'h6):(2'h2)] ?
                       (wire316 ?
                           wire318[(4'hb):(2'h3)] : {wire315[(4'h8):(1'h1)]}) : $signed((wire319[(1'h0):(1'h0)] <= $unsigned({(8'haf)}))));
  always
    @(posedge clk) begin
      for (forvar321 = (1'h0); (forvar321 < (3'h4)); forvar321 = (forvar321 + (1'h1)))
        begin
          if ((~&(((~|wire313[(4'h8):(1'h0)]) ^~ $signed(wire313)) ?
              (((wire320 >= wire319) ?
                      $unsigned(wire319) : wire316[(3'h4):(1'h0)]) ?
                  {(wire320 * wire312), forvar321} : ((wire319 ?
                          wire320 : wire312) ?
                      wire314[(2'h2):(2'h2)] : (wire312 & wire316))) : forvar321)))
            begin
              reg322 = $signed((((~(7'h44)) ~^ {{(8'ha5)}}) ?
                  (+(&(^~wire319))) : (~|(wire318 ?
                      (wire318 ? wire319 : wire313) : (wire315 ?
                          wire316 : wire318)))));
              reg323 <= ($signed(wire319) ^ $unsigned(wire316));
              reg324 <= $unsigned(((-wire312) ?
                  (+wire318[(4'ha):(4'ha)]) : wire313));
              reg325 = wire315[(1'h1):(1'h1)];
              reg326 <= $unsigned({$unsigned((((8'hb3) << (8'hae)) ?
                      wire312[(4'hb):(3'h7)] : (forvar321 || (8'haa))))});
            end
          else
            begin
              reg322 = (wire312[(1'h1):(1'h0)] ?
                  $signed({(|reg322[(4'hb):(3'h6)]),
                      $signed({wire318})}) : ($signed(wire318[(3'h6):(3'h5)]) >>> wire317[(2'h2):(1'h0)]));
              reg323 <= $signed(reg324);
              reg325 = reg325[(4'hd):(4'hd)];
              reg327 = $unsigned($unsigned(($unsigned(reg322) && wire320)));
              reg328 <= wire314[(4'hb):(1'h1)];
            end
          reg329 = {$signed($signed($signed((wire318 - (8'h9e)))))};
          for (forvar330 = (1'h0); (forvar330 < (2'h2)); forvar330 = (forvar330 + (1'h1)))
            begin
              reg331 <= $signed(((~|$signed({wire314, wire318})) ?
                  {$signed((reg329 ? (8'hb0) : wire315)),
                      ((forvar321 ? (8'h9c) : reg327) ?
                          $signed(reg323) : $unsigned((8'ha9)))} : $unsigned($unsigned($signed(reg327)))));
              reg332 <= (wire318[(3'h4):(2'h2)] <<< (8'hab));
              reg333 <= (~|(reg328 ?
                  $unsigned(($signed(forvar321) ?
                      (-wire316) : $unsigned(wire319))) : $signed(($unsigned(reg331) ?
                      reg324[(1'h1):(1'h1)] : reg322))));
            end
          for (forvar334 = (1'h0); (forvar334 < (1'h1)); forvar334 = (forvar334 + (1'h1)))
            begin
              reg335 <= (^~(~$unsigned(((reg327 ~^ (8'hbd)) != (forvar330 ?
                  wire312 : wire320)))));
            end
          for (forvar336 = (1'h0); (forvar336 < (1'h0)); forvar336 = (forvar336 + (1'h1)))
            begin
              reg337 = ($signed($unsigned(((|reg329) ?
                  reg326[(4'hc):(4'h9)] : $signed(reg328)))) >>> $signed({({reg323} ?
                      $signed((8'ha7)) : $signed(reg324))}));
              reg338 <= reg333;
              reg339 <= ((8'hb6) <<< ($unsigned($unsigned($signed(forvar330))) ?
                  (^(!(7'h43))) : wire316));
              reg340 <= (~|reg338[(4'ha):(4'h8)]);
            end
        end
      for (forvar341 = (1'h0); (forvar341 < (2'h2)); forvar341 = (forvar341 + (1'h1)))
        begin
          if ($signed((^{reg322, (7'h41)})))
            begin
              reg342 = ((+(forvar330[(3'h7):(3'h5)] <= $unsigned((wire312 ?
                  reg324 : reg323)))) || $unsigned(reg323[(1'h0):(1'h0)]));
              reg343 = wire314[(3'h7):(3'h6)];
              reg344 <= ((^~reg332[(2'h2):(1'h1)]) || $signed((($signed(forvar334) ^ (^~wire314)) || ((forvar330 != (8'haf)) * $signed(reg324)))));
            end
          else
            begin
              reg342 = (8'hbf);
              reg343 = $unsigned(($signed($signed(reg322[(2'h2):(1'h0)])) >> (({forvar321,
                          reg332} ?
                      ((8'hbf) + reg326) : (reg337 != reg339)) ?
                  $unsigned({reg337}) : ((reg322 ?
                      forvar330 : reg344) | (reg337 ?
                      forvar334 : forvar330)))));
            end
          reg345 <= {$unsigned(reg339[(4'hb):(4'ha)])};
        end
      for (forvar346 = (1'h0); (forvar346 < (2'h3)); forvar346 = (forvar346 + (1'h1)))
        begin
          for (forvar347 = (1'h0); (forvar347 < (1'h1)); forvar347 = (forvar347 + (1'h1)))
            begin
              reg348 = $signed(($unsigned(forvar341[(5'h13):(3'h6)]) >= (+$unsigned({forvar321,
                  reg338}))));
              reg349 <= $unsigned(((8'hb9) ?
                  $unsigned(forvar336[(3'h7):(3'h7)]) : (forvar347[(1'h0):(1'h0)] ?
                      (reg328[(4'hd):(1'h0)] ?
                          reg331[(3'h4):(2'h3)] : (reg338 + reg339)) : wire319[(1'h0):(1'h0)])));
            end
          reg350 = $unsigned({reg329, wire313});
          for (forvar351 = (1'h0); (forvar351 < (1'h1)); forvar351 = (forvar351 + (1'h1)))
            begin
              reg352 = wire319[(1'h0):(1'h0)];
              reg353 = (+$unsigned(reg340));
            end
          for (forvar354 = (1'h0); (forvar354 < (1'h1)); forvar354 = (forvar354 + (1'h1)))
            begin
              reg355 = (~|{((wire313 * (wire318 ? forvar351 : forvar354)) ?
                      $signed((reg349 ~^ (8'ha2))) : reg332[(1'h0):(1'h0)]),
                  $unsigned(($unsigned(forvar346) ?
                      $unsigned(reg325) : {forvar336}))});
              reg356 <= ((reg327[(3'h6):(3'h4)] >= {$signed((~forvar330))}) ?
                  $signed($signed(($unsigned((8'hbf)) * reg353[(3'h5):(1'h1)]))) : reg324);
            end
        end
      for (forvar357 = (1'h0); (forvar357 < (3'h4)); forvar357 = (forvar357 + (1'h1)))
        begin
          for (forvar358 = (1'h0); (forvar358 < (2'h2)); forvar358 = (forvar358 + (1'h1)))
            begin
              reg359 <= $unsigned((wire313[(3'h7):(3'h7)] + (((^reg325) <<< $signed((8'hb5))) | reg323)));
            end
          reg360 <= (reg331[(1'h1):(1'h0)] * ($unsigned(forvar358[(2'h3):(2'h3)]) | ((forvar341[(5'h10):(3'h6)] >>> forvar357[(3'h4):(2'h3)]) ?
              (((8'hb7) >> reg326) * (~^(8'hbb))) : reg340)));
          reg361 <= (((8'hac) ?
              $signed(((^forvar346) ?
                  $signed((8'hbd)) : $unsigned(reg360))) : (8'hb3)) | reg323[(2'h3):(2'h3)]);
          reg362 = wire316[(2'h2):(2'h2)];
          reg363 = wire316[(1'h1):(1'h1)];
        end
      reg364 <= reg362[(1'h1):(1'h0)];
    end
  always
    @(posedge clk) begin
      reg365 = ((wire312[(2'h2):(1'h1)] ?
          $unsigned(reg326[(3'h4):(1'h0)]) : $signed(((reg364 ?
                  wire313 : wire313) ?
              reg326[(4'ha):(2'h3)] : (+reg345)))) >= (($signed((8'h9d)) ?
          (8'hbd) : (~^(reg361 ? wire318 : reg335))) > (~$signed((^reg331)))));
      if ($signed((&((wire318[(2'h3):(2'h3)] ?
          ((8'hbd) ? reg344 : reg328) : {reg344,
              reg359}) == (~$signed(wire312))))))
        begin
          for (forvar366 = (1'h0); (forvar366 < (1'h0)); forvar366 = (forvar366 + (1'h1)))
            begin
              reg367 = (!reg365[(5'h13):(1'h1)]);
              reg368 = $unsigned(reg326);
              reg369 <= reg364;
            end
          for (forvar370 = (1'h0); (forvar370 < (2'h2)); forvar370 = (forvar370 + (1'h1)))
            begin
              reg371 <= reg344;
              reg372 = reg359;
              reg373 = reg368[(1'h1):(1'h0)];
              reg374 <= {(~^(+$signed((reg339 ? (8'hb3) : wire318)))),
                  reg328[(4'h9):(1'h0)]};
            end
          for (forvar375 = (1'h0); (forvar375 < (3'h4)); forvar375 = (forvar375 + (1'h1)))
            begin
              reg376 <= (reg368[(3'h7):(1'h0)] ?
                  {$unsigned($signed(((8'hb2) ? reg359 : forvar375))),
                      ((-wire313[(1'h0):(1'h0)]) + $unsigned(wire318))} : ($signed((~|reg345[(4'ha):(2'h3)])) ?
                      $signed(($signed(reg331) ?
                          (+reg344) : (8'ha4))) : (-$signed((reg333 >> wire316)))));
              reg377 <= ($unsigned((!(((8'hbd) ?
                      (8'hb7) : (8'ha9)) != (reg333 ^ wire316)))) ?
                  $signed(reg328[(4'hf):(3'h5)]) : reg328);
              reg378 <= (~(8'had));
            end
        end
      else
        begin
          reg366 <= (&({$signed(reg324)} ?
              ($unsigned(((8'hb1) && wire314)) != $signed((!wire312))) : ($unsigned(wire317) ~^ (!(reg345 ?
                  (8'ha0) : reg333)))));
          for (forvar367 = (1'h0); (forvar367 < (1'h0)); forvar367 = (forvar367 + (1'h1)))
            begin
              reg368 = (~^(reg332 & (8'hac)));
              reg369 <= $signed(reg365[(3'h4):(3'h4)]);
              reg370 <= $unsigned(reg340[(3'h4):(2'h3)]);
            end
          reg372 = forvar370;
          reg373 = reg338;
        end
      reg379 <= ({(reg371[(3'h4):(3'h4)] ?
                  $unsigned($signed(wire319)) : {(reg326 ? forvar367 : (8'ha8)),
                      $unsigned(reg359)}),
              reg359[(4'h9):(2'h3)]} ?
          (~^{{$signed(reg366), $signed(reg359)},
              ((reg360 ? reg360 : reg367) ?
                  $unsigned((8'hbe)) : (forvar366 == forvar366))}) : (^((|(reg338 + reg370)) ?
              wire312 : reg368[(3'h4):(2'h2)])));
      for (forvar380 = (1'h0); (forvar380 < (1'h0)); forvar380 = (forvar380 + (1'h1)))
        begin
          for (forvar381 = (1'h0); (forvar381 < (2'h3)); forvar381 = (forvar381 + (1'h1)))
            begin
              reg382 <= reg371;
              reg383 <= ((reg364 ? reg340 : $signed((~|$unsigned(forvar370)))) ?
                  $unsigned($unsigned(($signed(reg349) ?
                      (reg338 & (8'ha6)) : wire319))) : (-forvar367));
              reg384 <= $unsigned(wire314);
              reg385 <= {reg345[(1'h0):(1'h0)],
                  ({wire315} + $signed($signed((8'ha7))))};
            end
          for (forvar386 = (1'h0); (forvar386 < (3'h4)); forvar386 = (forvar386 + (1'h1)))
            begin
              reg387 <= (+(~|$unsigned((^(forvar370 >= forvar380)))));
              reg388 <= ($unsigned(reg365) ?
                  forvar366[(1'h0):(1'h0)] : (!($signed((7'h41)) ?
                      (reg376[(3'h4):(1'h1)] ?
                          (|reg345) : forvar386[(4'h8):(3'h6)]) : $unsigned($signed(wire313)))));
            end
          for (forvar389 = (1'h0); (forvar389 < (1'h1)); forvar389 = (forvar389 + (1'h1)))
            begin
              reg390 = (~&reg328);
              reg391 = (8'hb2);
            end
        end
      reg392 = $unsigned(reg359);
    end
  assign wire393 = {(8'hbf)};
  assign wire394 = {($signed(((wire318 ? reg379 : wire313) ?
                           $signed(reg361) : $signed(reg324))) > $signed({wire320,
                           reg349})),
                       wire312};
  assign wire395 = (+$unsigned(({(reg359 ? wire317 : reg333), {wire317}} ?
                       (|$signed(reg377)) : (^$unsigned(reg344)))));
  assign wire396 = (&(+((reg382[(1'h0):(1'h0)] || $unsigned(reg370)) ^ $signed(reg370))));
  assign wire397 = wire314[(4'h9):(4'h8)];
  always
    @(posedge clk) begin
      for (forvar398 = (1'h0); (forvar398 < (2'h3)); forvar398 = (forvar398 + (1'h1)))
        begin
          for (forvar399 = (1'h0); (forvar399 < (3'h4)); forvar399 = (forvar399 + (1'h1)))
            begin
              reg400 <= $signed({reg376, (~reg340)});
              reg401 <= reg356[(1'h0):(1'h0)];
            end
          reg402 <= ((+reg374[(4'h9):(1'h1)]) && reg371[(1'h1):(1'h1)]);
        end
      for (forvar403 = (1'h0); (forvar403 < (1'h1)); forvar403 = (forvar403 + (1'h1)))
        begin
          if (reg377[(4'hc):(4'ha)])
            begin
              reg404 <= $unsigned($unsigned(wire315));
            end
          else
            begin
              reg404 <= ($unsigned(($unsigned(((7'h44) ?
                  reg366 : reg364)) * reg345)) == {(~^$unsigned((reg335 ^ reg371)))});
            end
          for (forvar405 = (1'h0); (forvar405 < (1'h1)); forvar405 = (forvar405 + (1'h1)))
            begin
              reg406 <= (8'ha4);
              reg407 = (((((wire393 ? wire397 : reg364) ?
                          (8'hb6) : forvar405[(4'h9):(3'h7)]) ?
                      $signed((^(8'haa))) : $unsigned(reg384)) != $unsigned((!{reg387,
                      reg344}))) ?
                  reg331[(3'h6):(3'h6)] : forvar398[(5'h13):(4'h9)]);
              reg408 = ({$signed((^~forvar403))} ?
                  $signed((~(!{reg383,
                      (8'hab)}))) : (reg378[(5'h12):(3'h5)] <<< $unsigned(((~&wire396) << (~&reg407)))));
              reg409 <= (^reg370);
            end
          for (forvar410 = (1'h0); (forvar410 < (1'h1)); forvar410 = (forvar410 + (1'h1)))
            begin
              reg411 = {reg384[(3'h7):(3'h4)],
                  {({$signed((8'had))} ?
                          $unsigned((wire315 ? reg331 : reg335)) : (~&reg400)),
                      (&reg359)}};
              reg412 <= (reg328[(4'ha):(3'h5)] && (7'h43));
              reg413 = reg364[(1'h1):(1'h0)];
              reg414 <= $unsigned($signed(($unsigned(((8'hbe) ?
                  reg377 : reg359)) > forvar410[(3'h5):(3'h4)])));
              reg415 <= reg400[(1'h0):(1'h0)];
            end
        end
      for (forvar416 = (1'h0); (forvar416 < (2'h2)); forvar416 = (forvar416 + (1'h1)))
        begin
          for (forvar417 = (1'h0); (forvar417 < (3'h4)); forvar417 = (forvar417 + (1'h1)))
            begin
              reg418 <= (reg379 >>> {reg331, (~|reg356[(1'h1):(1'h0)])});
              reg419 <= $unsigned(($unsigned(reg374) ?
                  {{reg401[(3'h5):(1'h1)]},
                      reg379[(4'h9):(3'h7)]} : ((reg387[(4'h8):(2'h3)] ?
                          $signed(reg370) : reg407[(1'h1):(1'h1)]) ?
                      {reg361[(3'h6):(3'h5)],
                          (^reg323)} : reg413[(3'h6):(3'h6)])));
              reg420 <= (reg408[(4'h8):(3'h5)] < $signed(wire317[(3'h4):(1'h1)]));
              reg421 <= {$unsigned(wire316)};
              reg422 = ({(reg366 > reg326)} == (^~$signed(forvar417)));
            end
          for (forvar423 = (1'h0); (forvar423 < (2'h2)); forvar423 = (forvar423 + (1'h1)))
            begin
              reg424 = $signed(((wire396[(4'ha):(4'h9)] ?
                      (^{wire314, wire316}) : wire394[(2'h3):(2'h3)]) ?
                  wire397[(1'h1):(1'h1)] : (7'h42)));
              reg425 = wire395[(1'h1):(1'h0)];
              reg426 = wire395;
              reg427 <= ({{(((8'h9e) + reg400) != (reg335 > wire316))}} <= $unsigned($signed((forvar399[(4'h8):(1'h0)] <<< (reg326 == reg335)))));
              reg428 = $unsigned(reg427);
            end
          reg429 <= $unsigned((~|{wire314[(4'hd):(2'h2)]}));
          for (forvar430 = (1'h0); (forvar430 < (2'h3)); forvar430 = (forvar430 + (1'h1)))
            begin
              reg431 <= {reg359, $unsigned({reg338})};
              reg432 <= (reg333 && wire314);
              reg433 <= reg409[(1'h1):(1'h1)];
              reg434 <= (wire315 ?
                  $signed($unsigned((-$signed((8'hb2))))) : $signed($unsigned(reg364)));
            end
        end
    end
  assign wire435 = reg401[(3'h5):(3'h4)];
  always
    @(posedge clk) begin
      for (forvar436 = (1'h0); (forvar436 < (3'h4)); forvar436 = (forvar436 + (1'h1)))
        begin
          for (forvar437 = (1'h0); (forvar437 < (2'h2)); forvar437 = (forvar437 + (1'h1)))
            begin
              reg438 = reg406[(1'h0):(1'h0)];
              reg439 = ((^~$signed(wire313[(5'h12):(4'hc)])) <<< (^~((reg339[(3'h5):(2'h3)] && reg420[(2'h3):(2'h2)]) | reg433)));
              reg440 <= $unsigned(reg361);
              reg441 <= reg371[(1'h1):(1'h1)];
            end
          if (((^~(((wire395 >> reg432) && {reg433}) <= $signed(reg324[(2'h2):(1'h0)]))) ?
              wire314[(4'hb):(3'h4)] : $signed({wire320})))
            begin
              reg442 <= $signed({($signed((forvar437 ?
                      (8'hb7) : wire318)) && wire317[(4'hb):(4'h8)])});
              reg443 <= (+(reg370 > ((^~(reg431 && wire317)) ~^ forvar437[(2'h2):(2'h2)])));
              reg444 = $signed($unsigned($unsigned((8'hbf))));
              reg445 = reg333;
            end
          else
            begin
              reg444 = (^~(~&{($signed(reg370) * (reg406 ? reg345 : reg328))}));
              reg445 = $unsigned(wire312);
              reg446 <= reg378[(3'h4):(1'h1)];
            end
          for (forvar447 = (1'h0); (forvar447 < (2'h2)); forvar447 = (forvar447 + (1'h1)))
            begin
              reg448 = (((^(((8'h9c) ? reg333 : (8'hac)) ?
                  $signed(reg434) : $unsigned(wire315))) * reg371[(4'hc):(3'h5)]) << ((((wire313 ?
                              reg446 : reg433) ?
                          (reg445 >> reg445) : reg366) ?
                      reg443 : (7'h41)) ?
                  reg439 : (reg366 >> reg356)));
            end
        end
      reg449 <= $signed(((reg442[(4'h9):(1'h0)] ?
              {{reg356}, $signed((8'hb6))} : ($unsigned(reg356) ?
                  $unsigned(reg333) : $unsigned(reg377))) ?
          (reg385[(1'h0):(1'h0)] & $unsigned($signed(reg335))) : $unsigned($unsigned((wire317 | reg332)))));
      reg450 = (|{(7'h41)});
      for (forvar451 = (1'h0); (forvar451 < (1'h1)); forvar451 = (forvar451 + (1'h1)))
        begin
          for (forvar452 = (1'h0); (forvar452 < (2'h3)); forvar452 = (forvar452 + (1'h1)))
            begin
              reg453 <= ($signed((~&reg323[(3'h6):(3'h5)])) ?
                  ($signed((!(^~reg420))) ?
                      ((((8'ha2) || reg360) ? (wire319 + (7'h44)) : (|reg448)) ?
                          $signed((reg421 - reg443)) : reg446[(4'hf):(4'hf)]) : wire319[(2'h2):(1'h0)]) : $unsigned($signed(($signed(reg376) || $signed(reg333)))));
            end
          for (forvar454 = (1'h0); (forvar454 < (2'h2)); forvar454 = (forvar454 + (1'h1)))
            begin
              reg455 = ((~reg371) ?
                  reg364 : (^~$unsigned(($signed(reg388) ~^ reg385[(3'h5):(2'h2)]))));
              reg456 = (wire318 ?
                  $signed((~^reg409)) : (~&((reg366 ?
                      $unsigned(reg377) : $signed(reg382)) ^ ($signed(reg366) ?
                      reg427[(2'h2):(1'h0)] : $unsigned(reg331)))));
              reg457 = $unsigned($signed(reg402));
            end
          reg458 = ({$unsigned((^$unsigned((8'hb9)))),
              $signed((^(reg333 < reg383)))} <<< ((~|($signed(reg324) ?
                  (!wire396) : (reg440 ? (8'hb4) : (8'ha7)))) ?
              $unsigned(reg448) : reg370[(1'h0):(1'h0)]));
          reg459 <= ($unsigned({$unsigned({reg458})}) ?
              (((^~reg323) == ($signed(reg450) * (forvar437 ?
                      wire313 : reg345))) ?
                  (8'ha5) : {(+(!reg360))}) : {$signed($unsigned({forvar451}))});
        end
      for (forvar460 = (1'h0); (forvar460 < (2'h2)); forvar460 = (forvar460 + (1'h1)))
        begin
          for (forvar461 = (1'h0); (forvar461 < (2'h3)); forvar461 = (forvar461 + (1'h1)))
            begin
              reg462 <= wire395[(3'h6):(2'h2)];
              reg463 <= $unsigned(reg388);
              reg464 <= (|$unsigned((^((wire313 ? reg379 : reg457) ?
                  {(8'ha9)} : (reg376 ? wire435 : reg459)))));
              reg465 <= forvar454[(5'h10):(2'h2)];
            end
          for (forvar466 = (1'h0); (forvar466 < (1'h0)); forvar466 = (forvar466 + (1'h1)))
            begin
              reg467 = {$unsigned($signed((~|$unsigned(reg388)))),
                  $signed($unsigned(((reg421 - reg412) ?
                      reg383[(1'h1):(1'h0)] : ((8'hb9) ? reg421 : wire395))))};
              reg468 <= $signed(((reg444 ?
                      ({reg441, wire312} ?
                          $unsigned((8'ha7)) : $unsigned(forvar436)) : (reg441 ?
                          forvar447 : (reg402 ? reg366 : reg446))) ?
                  $signed({{reg360, reg385},
                      $signed(reg448)}) : {{$unsigned(reg360),
                          $signed(reg445)}}));
              reg469 = {reg401[(2'h3):(1'h0)], ({reg421} ? reg421 : reg345)};
              reg470 <= reg415[(4'h8):(1'h0)];
              reg471 <= $signed({(!reg459[(2'h3):(2'h2)]),
                  $unsigned(($signed((8'h9d)) ?
                      (reg404 ? reg379 : reg419) : (reg431 & reg434)))});
            end
          for (forvar472 = (1'h0); (forvar472 < (1'h0)); forvar472 = (forvar472 + (1'h1)))
            begin
              reg473 <= reg419[(2'h2):(2'h2)];
              reg474 <= (!($signed(reg432[(3'h5):(3'h5)]) > ((forvar454[(1'h0):(1'h0)] ?
                      (wire320 ? reg371 : wire319) : reg333) ?
                  wire319[(2'h2):(2'h2)] : $unsigned((~&forvar437)))));
              reg475 <= ((&((!$unsigned(reg338)) >>> (wire396 ?
                      $unsigned(wire313) : (reg465 <<< (8'h9f))))) ?
                  reg439[(2'h2):(2'h2)] : $unsigned((((8'ha3) ?
                      reg463 : reg415[(3'h4):(1'h1)]) - (reg429[(3'h4):(2'h3)] ?
                      (reg326 ? reg378 : wire320) : $signed((8'ha5))))));
            end
          for (forvar476 = (1'h0); (forvar476 < (1'h0)); forvar476 = (forvar476 + (1'h1)))
            begin
              reg477 = wire313[(4'h9):(3'h7)];
            end
          reg478 = $unsigned(forvar472);
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module165  (y, clk, wire169, wire168, wire167, wire166);
  output wire [(32'h630):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire169;
  input wire signed [(5'h11):(1'h0)] wire168;
  input wire signed [(5'h11):(1'h0)] wire167;
  input wire signed [(3'h7):(1'h0)] wire166;
  wire [(5'h12):(1'h0)] wire300;
  wire signed [(4'he):(1'h0)] wire299;
  wire signed [(5'h14):(1'h0)] wire298;
  wire signed [(2'h3):(1'h0)] wire297;
  wire signed [(2'h2):(1'h0)] wire296;
  wire signed [(5'h14):(1'h0)] wire295;
  wire signed [(4'hc):(1'h0)] wire294;
  wire signed [(4'hb):(1'h0)] wire283;
  wire signed [(5'h12):(1'h0)] wire172;
  wire [(3'h7):(1'h0)] wire171;
  wire [(5'h13):(1'h0)] wire170;
  reg signed [(4'ha):(1'h0)] reg293 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg292 = (1'h0);
  reg [(5'h15):(1'h0)] reg291 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg290 = (1'h0);
  reg [(5'h15):(1'h0)] reg289 = (1'h0);
  reg [(4'he):(1'h0)] reg288 = (1'h0);
  reg [(4'hd):(1'h0)] reg287 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg279 = (1'h0);
  reg [(5'h12):(1'h0)] reg277 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg273 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg268 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg267 = (1'h0);
  reg [(4'ha):(1'h0)] reg265 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg262 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg260 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg259 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg258 = (1'h0);
  reg [(3'h7):(1'h0)] reg256 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg254 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg253 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg252 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg249 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg248 = (1'h0);
  reg [(5'h10):(1'h0)] reg244 = (1'h0);
  reg [(4'h9):(1'h0)] reg237 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg235 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg234 = (1'h0);
  reg [(4'ha):(1'h0)] reg233 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg232 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg226 = (1'h0);
  reg [(5'h10):(1'h0)] reg225 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg224 = (1'h0);
  reg [(3'h7):(1'h0)] reg223 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg217 = (1'h0);
  reg [(5'h13):(1'h0)] reg213 = (1'h0);
  reg [(4'hc):(1'h0)] reg212 = (1'h0);
  reg [(5'h13):(1'h0)] reg211 = (1'h0);
  reg [(2'h3):(1'h0)] reg210 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg206 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg205 = (1'h0);
  reg [(5'h11):(1'h0)] reg202 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg200 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg201 = (1'h0);
  reg [(4'hd):(1'h0)] reg198 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg195 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg193 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg192 = (1'h0);
  reg [(3'h4):(1'h0)] reg191 = (1'h0);
  reg [(2'h2):(1'h0)] reg189 = (1'h0);
  reg [(5'h12):(1'h0)] reg187 = (1'h0);
  reg [(4'hd):(1'h0)] reg186 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg185 = (1'h0);
  reg [(5'h13):(1'h0)] reg179 = (1'h0);
  reg [(5'h10):(1'h0)] reg178 = (1'h0);
  reg [(4'h8):(1'h0)] reg177 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar286 = (1'h0);
  reg [(5'h13):(1'h0)] forvar285 = (1'h0);
  reg [(3'h6):(1'h0)] reg284 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg282 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg281 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar280 = (1'h0);
  reg [(3'h7):(1'h0)] forvar278 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar276 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg275 = (1'h0);
  reg [(5'h14):(1'h0)] reg274 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg272 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg271 = (1'h0);
  reg [(4'ha):(1'h0)] forvar270 = (1'h0);
  reg [(4'h9):(1'h0)] forvar269 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar266 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg264 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg263 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg255 = (1'h0);
  reg [(3'h6):(1'h0)] forvar252 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg250 = (1'h0);
  reg [(3'h6):(1'h0)] forvar249 = (1'h0);
  reg [(3'h5):(1'h0)] forvar261 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg257 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar255 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg251 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar250 = (1'h0);
  reg [(5'h12):(1'h0)] reg247 = (1'h0);
  reg [(3'h4):(1'h0)] forvar246 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg245 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar243 = (1'h0);
  reg [(4'h9):(1'h0)] reg242 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg241 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg240 = (1'h0);
  reg [(3'h4):(1'h0)] reg239 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg238 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar236 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg231 = (1'h0);
  reg [(4'hf):(1'h0)] forvar230 = (1'h0);
  reg [(4'hc):(1'h0)] forvar229 = (1'h0);
  reg [(4'hf):(1'h0)] reg228 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg227 = (1'h0);
  reg [(3'h6):(1'h0)] reg222 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg221 = (1'h0);
  reg [(3'h5):(1'h0)] reg220 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg219 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar218 = (1'h0);
  reg [(4'hf):(1'h0)] forvar216 = (1'h0);
  reg [(5'h15):(1'h0)] forvar215 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg214 = (1'h0);
  reg [(5'h10):(1'h0)] forvar209 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar208 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg207 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg204 = (1'h0);
  reg [(5'h11):(1'h0)] forvar203 = (1'h0);
  reg [(4'h9):(1'h0)] forvar200 = (1'h0);
  reg [(4'hb):(1'h0)] reg199 = (1'h0);
  reg [(3'h6):(1'h0)] reg197 = (1'h0);
  reg [(3'h4):(1'h0)] forvar196 = (1'h0);
  reg [(4'hc):(1'h0)] reg194 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg190 = (1'h0);
  reg [(2'h2):(1'h0)] forvar188 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg184 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg183 = (1'h0);
  reg [(5'h10):(1'h0)] forvar182 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg181 = (1'h0);
  reg [(3'h7):(1'h0)] forvar180 = (1'h0);
  reg [(4'he):(1'h0)] forvar176 = (1'h0);
  reg [(4'h8):(1'h0)] reg175 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg174 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar173 = (1'h0);
  assign y = {wire300,
                 wire299,
                 wire298,
                 wire297,
                 wire296,
                 wire295,
                 wire294,
                 wire283,
                 wire172,
                 wire171,
                 wire170,
                 reg293,
                 reg292,
                 reg291,
                 reg290,
                 reg289,
                 reg288,
                 reg287,
                 reg279,
                 reg277,
                 reg273,
                 reg268,
                 reg267,
                 reg265,
                 reg262,
                 reg260,
                 reg259,
                 reg258,
                 reg256,
                 reg254,
                 reg253,
                 reg252,
                 reg249,
                 reg248,
                 reg244,
                 reg237,
                 reg235,
                 reg234,
                 reg233,
                 reg232,
                 reg226,
                 reg225,
                 reg224,
                 reg223,
                 reg217,
                 reg213,
                 reg212,
                 reg211,
                 reg210,
                 reg206,
                 reg205,
                 reg202,
                 reg200,
                 reg201,
                 reg198,
                 reg195,
                 reg193,
                 reg192,
                 reg191,
                 reg189,
                 reg187,
                 reg186,
                 reg185,
                 reg179,
                 reg178,
                 reg177,
                 forvar286,
                 forvar285,
                 reg284,
                 reg282,
                 reg281,
                 forvar280,
                 forvar278,
                 forvar276,
                 reg275,
                 reg274,
                 reg272,
                 reg271,
                 forvar270,
                 forvar269,
                 forvar266,
                 reg264,
                 reg263,
                 reg255,
                 forvar252,
                 reg250,
                 forvar249,
                 forvar261,
                 reg257,
                 forvar255,
                 reg251,
                 forvar250,
                 reg247,
                 forvar246,
                 reg245,
                 forvar243,
                 reg242,
                 reg241,
                 reg240,
                 reg239,
                 reg238,
                 forvar236,
                 reg231,
                 forvar230,
                 forvar229,
                 reg228,
                 reg227,
                 reg222,
                 reg221,
                 reg220,
                 reg219,
                 forvar218,
                 forvar216,
                 forvar215,
                 reg214,
                 forvar209,
                 forvar208,
                 reg207,
                 reg204,
                 forvar203,
                 forvar200,
                 reg199,
                 reg197,
                 forvar196,
                 reg194,
                 reg190,
                 forvar188,
                 reg184,
                 reg183,
                 forvar182,
                 reg181,
                 forvar180,
                 forvar176,
                 reg175,
                 reg174,
                 forvar173,
                 (1'h0)};
  assign wire170 = ({wire168[(5'h10):(1'h1)]} + $signed((((wire168 ?
                           wire168 : wire167) ?
                       (wire166 ^~ (8'ha1)) : (!wire169)) >> (~$unsigned(wire167)))));
  assign wire171 = wire168[(3'h6):(2'h2)];
  assign wire172 = wire169;
  always
    @(posedge clk) begin
      for (forvar173 = (1'h0); (forvar173 < (2'h3)); forvar173 = (forvar173 + (1'h1)))
        begin
          reg174 = wire167;
          reg175 = reg174;
          for (forvar176 = (1'h0); (forvar176 < (1'h1)); forvar176 = (forvar176 + (1'h1)))
            begin
              reg177 <= {$unsigned((~|($signed(wire172) ?
                      {reg175} : (wire166 ? reg175 : (8'hac)))))};
              reg178 <= ((wire168[(4'hb):(3'h4)] & (^({reg177} | $unsigned(reg177)))) | ($signed(wire172[(5'h12):(2'h2)]) - $unsigned({$unsigned(wire166)})));
            end
        end
      reg179 <= (8'hb2);
      for (forvar180 = (1'h0); (forvar180 < (1'h0)); forvar180 = (forvar180 + (1'h1)))
        begin
          reg181 = (~{wire166});
          for (forvar182 = (1'h0); (forvar182 < (1'h0)); forvar182 = (forvar182 + (1'h1)))
            begin
              reg183 = (&forvar173[(4'ha):(3'h5)]);
              reg184 = forvar182[(3'h4):(1'h0)];
            end
          if ((8'ha7))
            begin
              reg185 <= $unsigned(forvar180[(2'h3):(1'h1)]);
              reg186 <= (reg185 ?
                  reg174[(2'h3):(1'h0)] : $unsigned($unsigned(((!forvar176) <<< wire172[(3'h4):(1'h1)]))));
              reg187 <= (~|(((~&$unsigned(reg186)) ?
                      (((8'ha8) ? wire167 : reg184) ?
                          (reg185 ?
                              reg174 : forvar176) : $signed(wire167)) : $unsigned(reg185[(3'h4):(2'h2)])) ?
                  ((~forvar182[(1'h1):(1'h0)]) >> $signed($unsigned(reg174))) : (8'h9c)));
            end
          else
            begin
              reg185 <= (!reg178[(3'h7):(1'h0)]);
              reg186 <= $unsigned($signed($signed((~&reg184))));
            end
          for (forvar188 = (1'h0); (forvar188 < (1'h0)); forvar188 = (forvar188 + (1'h1)))
            begin
              reg189 <= ($signed($unsigned(reg183)) ?
                  ($unsigned((&$unsigned((8'hb9)))) <<< (($signed(forvar180) >= (~^reg183)) ?
                      $signed((reg181 <<< forvar173)) : reg186[(2'h2):(1'h1)])) : {(wire170[(5'h13):(4'he)] ?
                          $unsigned($unsigned((8'ha0))) : (reg175[(3'h7):(3'h6)] ^~ $signed(reg175)))});
              reg190 = $unsigned((reg185 ?
                  forvar176[(3'h6):(3'h4)] : $signed((~^reg185))));
              reg191 <= {{$signed(forvar188[(2'h2):(1'h1)])}};
              reg192 <= (reg175[(3'h7):(3'h4)] ?
                  $unsigned(wire169) : reg178[(3'h7):(1'h1)]);
            end
          reg193 <= $unsigned(reg187);
        end
      reg194 = (wire171[(3'h7):(3'h7)] ?
          $unsigned(wire171) : $unsigned($unsigned((+forvar176[(3'h6):(2'h3)]))));
    end
  always
    @(posedge clk) begin
      reg195 <= (reg189 - (((-$unsigned(reg179)) ?
              (reg186 ?
                  $unsigned(reg179) : (wire170 ? reg192 : reg189)) : {reg193}) ?
          wire166[(3'h4):(2'h3)] : $unsigned(reg178[(3'h4):(2'h3)])));
      if ($signed({(~$signed(reg179[(4'ha):(3'h7)])),
          $unsigned($signed(reg177[(3'h6):(2'h2)]))}))
        begin
          for (forvar196 = (1'h0); (forvar196 < (2'h3)); forvar196 = (forvar196 + (1'h1)))
            begin
              reg197 = $unsigned(wire166[(3'h4):(1'h1)]);
            end
          reg198 <= wire171[(2'h2):(1'h0)];
          reg199 = (~|reg187[(3'h7):(1'h1)]);
          for (forvar200 = (1'h0); (forvar200 < (2'h3)); forvar200 = (forvar200 + (1'h1)))
            begin
              reg201 <= $unsigned((~&{reg195, $signed(reg177)}));
            end
        end
      else
        begin
          for (forvar196 = (1'h0); (forvar196 < (1'h0)); forvar196 = (forvar196 + (1'h1)))
            begin
              reg197 = reg179[(3'h7):(3'h5)];
              reg199 = (((reg189[(1'h0):(1'h0)] >>> wire170[(2'h3):(1'h0)]) ?
                  $signed((((8'hb3) - reg195) >>> (wire166 ?
                      wire170 : reg186))) : (!({reg192} != reg192))) <= $signed($signed($signed($signed(reg197)))));
              reg200 <= $unsigned(reg189[(1'h0):(1'h0)]);
              reg201 <= reg186[(4'ha):(2'h3)];
            end
          reg202 <= $unsigned({($signed(wire166[(3'h5):(3'h4)]) ?
                  ($signed(reg192) ?
                      $unsigned(wire171) : $unsigned(wire170)) : reg201)});
          for (forvar203 = (1'h0); (forvar203 < (1'h0)); forvar203 = (forvar203 + (1'h1)))
            begin
              reg204 = $unsigned(reg177[(3'h4):(2'h2)]);
              reg205 <= $signed(reg193[(1'h0):(1'h0)]);
              reg206 <= reg199[(3'h7):(1'h0)];
              reg207 = (($unsigned({{reg197}, (~&reg189)}) ?
                      reg193 : $signed($unsigned((-reg178)))) ?
                  $unsigned((((reg199 << wire171) == reg199[(4'hb):(3'h7)]) ?
                      (~^(^~wire172)) : wire166[(3'h7):(1'h0)])) : reg179);
            end
        end
      for (forvar208 = (1'h0); (forvar208 < (1'h1)); forvar208 = (forvar208 + (1'h1)))
        begin
          for (forvar209 = (1'h0); (forvar209 < (1'h1)); forvar209 = (forvar209 + (1'h1)))
            begin
              reg210 <= (&$signed((reg186[(3'h5):(1'h1)] && (!{forvar209}))));
              reg211 <= reg192;
              reg212 <= $unsigned($signed((($unsigned(forvar200) - $unsigned(wire167)) >>> (&(reg207 != reg200)))));
            end
          reg213 <= (~&{({((8'hb9) ? (8'hb5) : (8'haa)),
                  {wire169}} == ((~&(8'hb0)) ?
                  $unsigned(reg211) : (reg201 && reg195)))});
        end
      reg214 = $signed((reg177 ?
          (forvar200 ?
              $unsigned((reg192 << reg191)) : $unsigned(reg199)) : (reg207[(4'hd):(4'h8)] == $unsigned($signed(reg206)))));
      for (forvar215 = (1'h0); (forvar215 < (2'h2)); forvar215 = (forvar215 + (1'h1)))
        begin
          for (forvar216 = (1'h0); (forvar216 < (2'h2)); forvar216 = (forvar216 + (1'h1)))
            begin
              reg217 <= (((wire171 ?
                  (^{(8'ha3),
                      reg207}) : ((!(8'hbf)) & reg207[(3'h7):(3'h7)])) | forvar215) & reg177[(2'h2):(2'h2)]);
            end
          for (forvar218 = (1'h0); (forvar218 < (3'h4)); forvar218 = (forvar218 + (1'h1)))
            begin
              reg219 = (((~^reg200) <<< $signed(reg195)) ?
                  (reg185 ?
                      $unsigned($unsigned(wire166[(2'h3):(2'h2)])) : (!$signed((reg178 ?
                          reg197 : wire168)))) : $signed(((reg179 ?
                          $unsigned(reg189) : $signed(reg200)) ?
                      ($unsigned(forvar200) ?
                          $unsigned(reg211) : {reg197}) : $unsigned($unsigned((8'hbd))))));
              reg220 = (($unsigned(reg207[(5'h12):(4'hd)]) ?
                  (wire172[(4'h8):(3'h6)] ?
                      (reg206 & reg202) : forvar200) : {{wire166[(2'h3):(1'h1)],
                          wire166}}) >> wire169);
            end
          reg221 = (reg204[(3'h6):(3'h5)] ?
              (($signed($unsigned(forvar200)) >> ($signed(reg187) ?
                  forvar203 : $signed(forvar208))) <<< ((wire171 ?
                      (reg210 >> reg213) : $unsigned(reg210)) ?
                  (wire166[(3'h6):(3'h5)] ^ {forvar196,
                      forvar218}) : $signed((~|reg214)))) : reg211);
          reg222 = ($unsigned({($unsigned(reg207) ?
                      $signed(reg193) : (forvar203 ? forvar203 : reg199))}) ?
              (+(reg200 ^ ((reg200 ?
                  forvar216 : (8'hae)) < (7'h43)))) : (8'ha2));
          if ($signed(reg210[(1'h1):(1'h0)]))
            begin
              reg223 <= (-(~^wire170));
              reg224 <= ((((|(reg206 ? wire168 : (8'hbe))) ^~ $signed((reg207 ?
                      reg189 : (8'hbc)))) ^~ reg191[(1'h0):(1'h0)]) ?
                  ((|(wire171 ?
                      $unsigned(forvar200) : $unsigned(reg214))) * $unsigned({(~|wire172)})) : (8'hba));
              reg225 <= (|(~|(((~&reg211) != wire171[(3'h5):(3'h5)]) ?
                  (7'h41) : reg193[(3'h5):(3'h4)])));
              reg226 <= {wire171[(3'h5):(3'h5)]};
            end
          else
            begin
              reg227 = reg214[(3'h5):(1'h1)];
            end
        end
    end
  always
    @(posedge clk) begin
      reg228 = (|(reg177[(3'h4):(1'h0)] ?
          $unsigned($unsigned(((8'hac) ?
              reg191 : reg198))) : ($unsigned($signed((8'hab))) >>> {$unsigned((8'hb1))})));
      for (forvar229 = (1'h0); (forvar229 < (3'h4)); forvar229 = (forvar229 + (1'h1)))
        begin
          for (forvar230 = (1'h0); (forvar230 < (3'h4)); forvar230 = (forvar230 + (1'h1)))
            begin
              reg231 = forvar229[(1'h1):(1'h1)];
              reg232 <= {reg217, {reg210[(2'h2):(1'h0)]}};
              reg233 <= wire167[(5'h11):(4'hf)];
              reg234 <= reg213[(3'h4):(2'h3)];
              reg235 <= {(reg178 ?
                      reg179[(2'h3):(2'h3)] : $signed($signed($unsigned(reg225))))};
            end
          for (forvar236 = (1'h0); (forvar236 < (2'h2)); forvar236 = (forvar236 + (1'h1)))
            begin
              reg237 <= reg200;
              reg238 = (reg213[(5'h11):(3'h6)] ^ reg177);
              reg239 = ((+reg234[(2'h2):(1'h0)]) == $signed(reg238));
              reg240 = ($unsigned(reg234) ?
                  ((wire166[(1'h1):(1'h0)] ?
                      (-(wire168 ?
                          wire166 : reg179)) : $unsigned((reg237 >>> reg192))) << (8'ha8)) : $signed(reg195));
            end
          reg241 = (+forvar230);
        end
    end
  always
    @(posedge clk) begin
      reg242 = {{({(&reg233), (-reg225)} >= $signed((reg217 ?
                  reg193 : reg232)))},
          reg212[(3'h7):(3'h5)]};
      for (forvar243 = (1'h0); (forvar243 < (1'h0)); forvar243 = (forvar243 + (1'h1)))
        begin
          reg244 <= $unsigned($unsigned($signed(reg195)));
          reg245 = ((~&$unsigned((8'hb5))) | $unsigned({(!(reg201 | reg186))}));
          for (forvar246 = (1'h0); (forvar246 < (1'h1)); forvar246 = (forvar246 + (1'h1)))
            begin
              reg247 = {$unsigned($unsigned($unsigned($signed(reg189))))};
            end
          reg248 <= (wire169 == $unsigned(wire170[(5'h10):(5'h10)]));
        end
      if ($unsigned((reg205 ?
          {reg233[(4'h8):(3'h4)]} : ((-(reg232 | reg232)) == reg189))))
        begin
          reg249 <= reg186;
          for (forvar250 = (1'h0); (forvar250 < (1'h1)); forvar250 = (forvar250 + (1'h1)))
            begin
              reg251 = (~^(reg232[(2'h2):(2'h2)] ^ {($unsigned(reg205) ?
                      (&wire172) : (reg187 ? reg192 : wire170))}));
              reg252 <= $unsigned((reg201 <= (~|forvar246[(1'h1):(1'h1)])));
              reg253 <= {reg193[(4'hb):(2'h3)],
                  $unsigned((((reg232 ? wire172 : reg242) ?
                      reg234[(3'h5):(1'h0)] : (reg247 != (8'hbb))) != ($unsigned(forvar250) ?
                      wire169 : (reg242 | reg186))))};
              reg254 <= {{reg212[(3'h5):(1'h1)],
                      $signed($signed($unsigned(reg201)))}};
            end
          for (forvar255 = (1'h0); (forvar255 < (2'h2)); forvar255 = (forvar255 + (1'h1)))
            begin
              reg256 <= reg210;
              reg257 = (reg212[(3'h4):(2'h3)] <= (-(-forvar250[(3'h6):(1'h0)])));
              reg258 <= {$signed((wire170 ?
                      (^~{reg256, reg253}) : {$unsigned(reg212), (~^(8'h9f))})),
                  reg253[(3'h6):(1'h1)]};
              reg259 <= (8'haf);
              reg260 <= (~&wire167);
            end
          for (forvar261 = (1'h0); (forvar261 < (1'h0)); forvar261 = (forvar261 + (1'h1)))
            begin
              reg262 <= $signed($signed(wire166));
            end
        end
      else
        begin
          for (forvar249 = (1'h0); (forvar249 < (1'h0)); forvar249 = (forvar249 + (1'h1)))
            begin
              reg250 = reg206[(3'h7):(1'h0)];
              reg251 = reg223[(3'h6):(2'h2)];
            end
          for (forvar252 = (1'h0); (forvar252 < (2'h3)); forvar252 = (forvar252 + (1'h1)))
            begin
              reg255 = ({reg187[(2'h2):(1'h0)]} + $unsigned(reg249));
              reg256 <= ((+reg260[(3'h6):(1'h0)]) ^ (^wire169[(4'h9):(3'h4)]));
              reg258 <= (^((~$unsigned(reg226[(1'h0):(1'h0)])) << ($signed(reg257) ?
                  {{reg251, (8'hb3)}} : ((reg237 < reg258) - (-(8'ha1))))));
              reg259 <= (+reg234);
              reg260 <= (&$unsigned((^$signed((reg198 ? wire171 : reg253)))));
            end
          for (forvar261 = (1'h0); (forvar261 < (3'h4)); forvar261 = (forvar261 + (1'h1)))
            begin
              reg262 <= $signed(reg186[(4'h8):(3'h4)]);
              reg263 = (-$signed($signed((&$signed(forvar243)))));
              reg264 = (~({$unsigned((forvar255 ?
                      reg249 : (8'haa)))} >> (!$unsigned(reg193[(2'h3):(1'h0)]))));
            end
          reg265 <= wire167;
        end
      if ($signed($signed((~&(~$unsigned(wire167))))))
        begin
          for (forvar266 = (1'h0); (forvar266 < (3'h4)); forvar266 = (forvar266 + (1'h1)))
            begin
              reg267 <= $unsigned((~|reg198));
              reg268 <= reg264[(4'h8):(3'h6)];
            end
        end
      else
        begin
          for (forvar266 = (1'h0); (forvar266 < (2'h3)); forvar266 = (forvar266 + (1'h1)))
            begin
              reg267 <= $unsigned(($unsigned((reg189 ?
                  $unsigned(reg195) : (reg178 && (8'hbe)))) ~^ $unsigned($signed(forvar252[(2'h3):(2'h2)]))));
              reg268 <= reg200;
            end
        end
      for (forvar269 = (1'h0); (forvar269 < (1'h1)); forvar269 = (forvar269 + (1'h1)))
        begin
          for (forvar270 = (1'h0); (forvar270 < (1'h0)); forvar270 = (forvar270 + (1'h1)))
            begin
              reg271 = $signed(((reg179 ?
                      {{(8'ha2)}} : $unsigned((^~(8'hb8)))) ?
                  reg205 : reg242[(2'h2):(1'h1)]));
              reg272 = (reg177[(3'h4):(2'h2)] & ((+reg249) - (-((!reg253) ?
                  (reg178 > wire168) : reg267))));
              reg273 <= {((~^$signed((8'hb3))) | (($signed(wire169) || $signed(reg186)) ^ (|reg206[(1'h1):(1'h1)]))),
                  $signed(($signed(((8'hae) <= (8'had))) == $unsigned(reg192)))};
              reg274 = $signed({$unsigned((-$unsigned(reg259))),
                  $unsigned((reg205 ^~ (reg273 * reg201)))});
              reg275 = reg235[(3'h6):(2'h2)];
            end
          for (forvar276 = (1'h0); (forvar276 < (2'h3)); forvar276 = (forvar276 + (1'h1)))
            begin
              reg277 <= $unsigned(reg256);
            end
          for (forvar278 = (1'h0); (forvar278 < (2'h2)); forvar278 = (forvar278 + (1'h1)))
            begin
              reg279 <= {(!(^~(reg195[(3'h5):(1'h0)] > (reg177 + reg251)))),
                  reg185[(2'h2):(1'h1)]};
            end
          for (forvar280 = (1'h0); (forvar280 < (1'h0)); forvar280 = (forvar280 + (1'h1)))
            begin
              reg281 = (8'haf);
              reg282 = (reg271[(3'h5):(2'h3)] ?
                  $unsigned(reg192[(1'h1):(1'h1)]) : (reg210[(1'h0):(1'h0)] ?
                      reg191 : (^(~|(^(7'h40))))));
            end
        end
    end
  assign wire283 = reg189[(1'h1):(1'h0)];
  always
    @(posedge clk) begin
      reg284 = (reg192 || ((reg277[(3'h4):(2'h2)] ?
              $signed(reg212[(1'h1):(1'h1)]) : (8'hb1)) ?
          $unsigned($unsigned(((8'hb3) ?
              reg177 : wire169))) : {(reg192[(1'h1):(1'h1)] != $signed(reg187)),
              $signed((reg210 || reg206))}));
      for (forvar285 = (1'h0); (forvar285 < (2'h2)); forvar285 = (forvar285 + (1'h1)))
        begin
          for (forvar286 = (1'h0); (forvar286 < (2'h2)); forvar286 = (forvar286 + (1'h1)))
            begin
              reg287 <= {(~|$unsigned($signed((!(8'haf))))),
                  $signed(reg233[(3'h4):(2'h2)])};
              reg288 <= (^~wire166);
              reg289 <= ((((+forvar285) ? reg252 : $unsigned(reg217)) ?
                      (~$unsigned(((8'hb4) ?
                          reg259 : (8'hb0)))) : {reg273[(4'hf):(2'h2)]}) ?
                  reg248[(4'hf):(4'hd)] : $signed((~|((reg273 ?
                      (8'hb5) : reg248) * (~|wire171)))));
              reg290 <= reg212;
            end
        end
      reg291 <= reg277[(4'he):(4'hd)];
      reg292 <= $signed($signed(($unsigned(wire168[(4'ha):(4'h9)]) ?
          (reg268[(4'hf):(4'he)] ?
              wire172 : wire171[(3'h7):(2'h3)]) : $signed(reg259[(3'h6):(1'h0)]))));
      reg293 <= reg217;
    end
  assign wire294 = reg200;
  assign wire295 = $unsigned(reg212[(1'h1):(1'h1)]);
  assign wire296 = $unsigned($signed(reg223));
  assign wire297 = $signed($signed(($unsigned({reg265}) ?
                       $unsigned((-reg237)) : reg211)));
  assign wire298 = reg252;
  assign wire299 = $unsigned({($signed($unsigned(reg201)) ?
                           $signed($unsigned(reg233)) : (&reg217))});
  assign wire300 = (reg259[(4'h8):(3'h6)] * $signed($unsigned(reg177[(2'h2):(1'h1)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module101  (y, clk, wire105, wire104, wire103, wire102);
  output wire [(32'h296):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire105;
  input wire [(5'h14):(1'h0)] wire104;
  input wire [(5'h14):(1'h0)] wire103;
  input wire [(3'h6):(1'h0)] wire102;
  wire [(3'h6):(1'h0)] wire161;
  wire [(4'h8):(1'h0)] wire160;
  wire signed [(5'h15):(1'h0)] wire159;
  wire [(4'hd):(1'h0)] wire158;
  wire signed [(2'h3):(1'h0)] wire151;
  wire [(4'hc):(1'h0)] wire150;
  wire [(5'h10):(1'h0)] wire115;
  wire signed [(4'he):(1'h0)] wire114;
  wire [(5'h15):(1'h0)] wire113;
  wire [(3'h4):(1'h0)] wire112;
  wire [(4'h8):(1'h0)] wire111;
  wire signed [(2'h2):(1'h0)] wire110;
  wire [(2'h2):(1'h0)] wire109;
  wire signed [(4'h9):(1'h0)] wire108;
  wire [(4'he):(1'h0)] wire107;
  wire [(3'h7):(1'h0)] wire106;
  reg signed [(5'h10):(1'h0)] reg157 = (1'h0);
  reg [(4'h8):(1'h0)] reg156 = (1'h0);
  reg [(5'h12):(1'h0)] reg155 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg152 = (1'h0);
  reg [(4'he):(1'h0)] reg149 = (1'h0);
  reg [(2'h3):(1'h0)] reg148 = (1'h0);
  reg [(5'h10):(1'h0)] reg147 = (1'h0);
  reg [(4'hb):(1'h0)] reg146 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg144 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg142 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg138 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg137 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg136 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg134 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg132 = (1'h0);
  reg [(4'hb):(1'h0)] reg125 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg124 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg123 = (1'h0);
  reg [(5'h13):(1'h0)] reg122 = (1'h0);
  reg [(4'h9):(1'h0)] reg121 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg117 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar154 = (1'h0);
  reg [(4'h8):(1'h0)] forvar153 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg145 = (1'h0);
  reg [(5'h13):(1'h0)] forvar143 = (1'h0);
  reg [(3'h6):(1'h0)] reg141 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar140 = (1'h0);
  reg [(3'h5):(1'h0)] forvar139 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar135 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg133 = (1'h0);
  reg [(5'h15):(1'h0)] forvar131 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg130 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar129 = (1'h0);
  reg signed [(4'he):(1'h0)] reg128 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar127 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg126 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar120 = (1'h0);
  reg [(5'h14):(1'h0)] reg119 = (1'h0);
  reg [(3'h6):(1'h0)] forvar118 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar116 = (1'h0);
  assign y = {wire161,
                 wire160,
                 wire159,
                 wire158,
                 wire151,
                 wire150,
                 wire115,
                 wire114,
                 wire113,
                 wire112,
                 wire111,
                 wire110,
                 wire109,
                 wire108,
                 wire107,
                 wire106,
                 reg157,
                 reg156,
                 reg155,
                 reg152,
                 reg149,
                 reg148,
                 reg147,
                 reg146,
                 reg144,
                 reg142,
                 reg138,
                 reg137,
                 reg136,
                 reg134,
                 reg132,
                 reg125,
                 reg124,
                 reg123,
                 reg122,
                 reg121,
                 reg117,
                 forvar154,
                 forvar153,
                 reg145,
                 forvar143,
                 reg141,
                 forvar140,
                 forvar139,
                 forvar135,
                 reg133,
                 forvar131,
                 reg130,
                 forvar129,
                 reg128,
                 forvar127,
                 reg126,
                 forvar120,
                 reg119,
                 forvar118,
                 forvar116,
                 (1'h0)};
  assign wire106 = {$unsigned(wire105), wire104};
  assign wire107 = {wire104};
  assign wire108 = ((^wire103) >> $unsigned($unsigned((&$signed(wire103)))));
  assign wire109 = (~|wire106);
  assign wire110 = $unsigned((wire103[(4'hb):(4'h9)] * $unsigned($signed($signed(wire105)))));
  assign wire111 = $signed((|wire109));
  assign wire112 = $unsigned((wire111 ~^ ((wire109 & wire107[(3'h6):(2'h2)]) >> $signed(wire102))));
  assign wire113 = $unsigned(wire104[(5'h13):(4'hc)]);
  assign wire114 = (8'ha9);
  assign wire115 = $unsigned($unsigned(($signed((+wire102)) + $signed((~|wire104)))));
  always
    @(posedge clk) begin
      for (forvar116 = (1'h0); (forvar116 < (1'h0)); forvar116 = (forvar116 + (1'h1)))
        begin
          reg117 <= wire110;
          for (forvar118 = (1'h0); (forvar118 < (3'h4)); forvar118 = (forvar118 + (1'h1)))
            begin
              reg119 = {(({(~|wire105)} * wire107) << $signed(($unsigned(wire113) == $unsigned(wire115))))};
            end
          for (forvar120 = (1'h0); (forvar120 < (2'h2)); forvar120 = (forvar120 + (1'h1)))
            begin
              reg121 <= $signed($signed(((|(wire103 ? reg117 : wire110)) ?
                  $unsigned({wire106,
                      wire107}) : $signed(wire111[(1'h0):(1'h0)]))));
              reg122 <= wire102;
              reg123 <= forvar120;
              reg124 <= (~^wire109);
              reg125 <= wire111[(3'h7):(2'h2)];
            end
        end
      reg126 = $unsigned(((forvar120[(2'h2):(2'h2)] ?
          wire109 : (-(reg117 & wire103))) || {(wire106[(1'h0):(1'h0)] ?
              (-forvar118) : wire102[(3'h4):(2'h2)]),
          $unsigned((^forvar118))}));
      for (forvar127 = (1'h0); (forvar127 < (1'h1)); forvar127 = (forvar127 + (1'h1)))
        begin
          reg128 = (wire106 ?
              (wire104 > $signed((reg119[(3'h6):(1'h0)] >= {forvar116}))) : $unsigned((forvar120 ?
                  ((~|wire103) & (~^wire113)) : {{reg117}})));
          for (forvar129 = (1'h0); (forvar129 < (1'h1)); forvar129 = (forvar129 + (1'h1)))
            begin
              reg130 = ($signed((+$unsigned(wire113[(4'he):(2'h2)]))) ?
                  $signed(((|reg121) & wire105)) : forvar127[(1'h1):(1'h0)]);
            end
          for (forvar131 = (1'h0); (forvar131 < (1'h0)); forvar131 = (forvar131 + (1'h1)))
            begin
              reg132 <= (wire106 >>> wire113);
              reg133 = forvar131[(5'h12):(4'h8)];
              reg134 <= $signed(((8'hac) != wire109[(1'h1):(1'h1)]));
            end
          for (forvar135 = (1'h0); (forvar135 < (2'h2)); forvar135 = (forvar135 + (1'h1)))
            begin
              reg136 <= {($unsigned($signed(wire108[(2'h2):(2'h2)])) < (^~($signed(wire107) ?
                      (reg128 ? wire112 : wire108) : wire110[(1'h1):(1'h0)]))),
                  $signed(reg133[(4'hb):(1'h1)])};
              reg137 <= $unsigned(wire112);
            end
          reg138 <= $unsigned({$signed(($unsigned(wire110) ?
                  ((8'hb1) || reg136) : (reg122 == wire105))),
              (reg128[(4'hd):(3'h7)] ?
                  ($unsigned(wire104) & reg130) : reg123[(2'h2):(2'h2)])});
        end
      for (forvar139 = (1'h0); (forvar139 < (2'h2)); forvar139 = (forvar139 + (1'h1)))
        begin
          for (forvar140 = (1'h0); (forvar140 < (3'h4)); forvar140 = (forvar140 + (1'h1)))
            begin
              reg141 = forvar120[(3'h6):(3'h5)];
            end
          reg142 <= $unsigned(((~^$unsigned(wire102)) ?
              {(&(reg138 ? reg125 : reg122))} : ($signed((wire102 << wire109)) ?
                  (forvar140[(2'h3):(1'h0)] ?
                      $unsigned(wire113) : (reg132 < forvar140)) : ((wire105 >> forvar131) ?
                      $signed(forvar135) : (reg117 ? wire108 : reg130)))));
          for (forvar143 = (1'h0); (forvar143 < (2'h2)); forvar143 = (forvar143 + (1'h1)))
            begin
              reg144 <= forvar139;
              reg145 = $signed(reg132);
              reg146 <= (~$unsigned(wire114[(4'hb):(3'h6)]));
              reg147 <= (~&$unsigned(reg141));
              reg148 <= wire103;
            end
        end
      reg149 <= wire106;
    end
  assign wire150 = reg144;
  assign wire151 = $unsigned(reg117[(4'hb):(3'h5)]);
  always
    @(posedge clk) begin
      reg152 <= (wire113 >= (($signed((7'h43)) || {(^reg125),
              (reg149 ? wire151 : wire151)}) ?
          $signed((~&wire111[(2'h2):(1'h0)])) : wire115));
      for (forvar153 = (1'h0); (forvar153 < (2'h3)); forvar153 = (forvar153 + (1'h1)))
        begin
          for (forvar154 = (1'h0); (forvar154 < (1'h1)); forvar154 = (forvar154 + (1'h1)))
            begin
              reg155 <= reg147;
              reg156 <= ({{reg132[(4'h8):(2'h3)]}} ?
                  wire107 : reg137[(1'h1):(1'h1)]);
              reg157 <= ($signed(({(reg146 < wire114)} != (wire106 ?
                      $signed(wire112) : ((8'ha4) <= reg132)))) ?
                  ($signed(({wire102} ^~ {(8'hb7),
                      reg149})) * $unsigned($unsigned(wire113))) : (^(($unsigned(reg144) ?
                          (reg136 != reg124) : reg121) ?
                      ((~&wire102) ^~ $unsigned(wire103)) : reg149)));
            end
        end
    end
  assign wire158 = (wire105[(2'h2):(1'h0)] ?
                       wire114 : (+(~|($unsigned(reg144) <<< (8'h9f)))));
  assign wire159 = (~&((wire150[(4'ha):(4'ha)] ?
                       $signed($unsigned((8'hb2))) : ((reg148 ?
                               wire115 : (8'hac)) ?
                           $unsigned(reg144) : reg155)) | ({$unsigned(reg121)} <= wire151)));
  assign wire160 = $unsigned((($unsigned(wire106[(1'h1):(1'h1)]) ?
                       $unsigned($unsigned(reg123)) : reg138) <= reg157));
  assign wire161 = (reg124[(4'he):(3'h5)] ? (7'h43) : (~&(8'hb1)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module38
#(parameter param97 = {((|{{(8'had)}, {(8'ha8), (8'hab)}}) ? (^(((8'hb7) ? (8'haa) : (7'h40)) ? ((8'hbd) ? (7'h42) : (8'hbe)) : (!(8'hbc)))) : (~|{((8'ha7) ? (8'ha6) : (8'hbe))}))}, 
parameter param98 = {param97, (param97 ? (param97 > (~|(!param97))) : ({param97} <<< {param97, (param97 ? param97 : param97)}))})
(y, clk, wire42, wire41, wire40, wire39);
  output wire [(32'h268):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire42;
  input wire [(3'h7):(1'h0)] wire41;
  input wire [(4'he):(1'h0)] wire40;
  input wire signed [(3'h5):(1'h0)] wire39;
  wire signed [(3'h7):(1'h0)] wire85;
  wire [(4'hd):(1'h0)] wire84;
  wire [(5'h14):(1'h0)] wire83;
  wire [(5'h15):(1'h0)] wire82;
  wire signed [(4'h9):(1'h0)] wire81;
  wire signed [(4'hd):(1'h0)] wire80;
  wire [(3'h6):(1'h0)] wire79;
  wire signed [(3'h7):(1'h0)] wire65;
  wire signed [(3'h5):(1'h0)] wire46;
  wire [(4'h9):(1'h0)] wire45;
  wire [(4'h8):(1'h0)] wire44;
  wire [(5'h13):(1'h0)] wire43;
  reg signed [(4'ha):(1'h0)] reg96 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg92 = (1'h0);
  reg [(4'h8):(1'h0)] reg88 = (1'h0);
  reg [(4'hb):(1'h0)] reg77 = (1'h0);
  reg [(4'hf):(1'h0)] reg76 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg72 = (1'h0);
  reg [(4'he):(1'h0)] reg70 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg69 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg68 = (1'h0);
  reg [(2'h3):(1'h0)] reg63 = (1'h0);
  reg [(5'h13):(1'h0)] reg62 = (1'h0);
  reg signed [(4'he):(1'h0)] reg59 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg56 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg53 = (1'h0);
  reg [(5'h11):(1'h0)] reg52 = (1'h0);
  reg [(2'h3):(1'h0)] reg51 = (1'h0);
  reg [(5'h11):(1'h0)] reg50 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg48 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg95 = (1'h0);
  reg [(5'h15):(1'h0)] reg94 = (1'h0);
  reg [(3'h7):(1'h0)] forvar93 = (1'h0);
  reg [(4'hf):(1'h0)] reg91 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg90 = (1'h0);
  reg [(4'ha):(1'h0)] reg89 = (1'h0);
  reg [(3'h5):(1'h0)] forvar87 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar86 = (1'h0);
  reg [(2'h3):(1'h0)] reg78 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg75 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar74 = (1'h0);
  reg [(4'hd):(1'h0)] reg73 = (1'h0);
  reg [(4'he):(1'h0)] reg71 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar67 = (1'h0);
  reg [(4'he):(1'h0)] forvar66 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg64 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg61 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg60 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar58 = (1'h0);
  reg [(5'h11):(1'h0)] reg57 = (1'h0);
  reg [(4'hf):(1'h0)] forvar55 = (1'h0);
  reg [(3'h6):(1'h0)] forvar54 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar49 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar47 = (1'h0);
  assign y = {wire85,
                 wire84,
                 wire83,
                 wire82,
                 wire81,
                 wire80,
                 wire79,
                 wire65,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 reg96,
                 reg92,
                 reg88,
                 reg77,
                 reg76,
                 reg72,
                 reg70,
                 reg69,
                 reg68,
                 reg63,
                 reg62,
                 reg59,
                 reg56,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg48,
                 reg95,
                 reg94,
                 forvar93,
                 reg91,
                 reg90,
                 reg89,
                 forvar87,
                 forvar86,
                 reg78,
                 reg75,
                 forvar74,
                 reg73,
                 reg71,
                 forvar67,
                 forvar66,
                 reg64,
                 reg61,
                 reg60,
                 forvar58,
                 reg57,
                 forvar55,
                 forvar54,
                 forvar49,
                 forvar47,
                 (1'h0)};
  assign wire43 = (((!$signed($signed(wire39))) <= ({(wire42 * wire40)} ~^ $signed($unsigned(wire40)))) != {$unsigned($signed(((8'hb0) <<< wire40)))});
  assign wire44 = ($unsigned($unsigned((^$unsigned(wire40)))) ~^ (^(!{((8'ha3) ?
                          wire39 : wire43)})));
  assign wire45 = (((^~$signed(wire43)) <<< $unsigned((wire42 ?
                          (7'h43) : $unsigned(wire44)))) ?
                      $signed((wire44 & (8'hb4))) : ({{(8'ha3), {wire40}},
                              (wire39 ?
                                  (wire43 ?
                                      wire39 : (7'h41)) : (wire41 <<< (8'ha1)))} ?
                          $signed(wire42[(1'h0):(1'h0)]) : (&$signed({wire43}))));
  assign wire46 = ({((^{wire40}) ^~ $signed($unsigned(wire42)))} ?
                      $unsigned($unsigned(wire40[(4'h8):(3'h6)])) : $signed(wire44[(1'h1):(1'h0)]));
  always
    @(posedge clk) begin
      for (forvar47 = (1'h0); (forvar47 < (1'h0)); forvar47 = (forvar47 + (1'h1)))
        begin
          reg48 <= (-{wire41[(3'h7):(3'h5)],
              ({(wire40 ? wire45 : (8'h9f)), (+wire39)} >= wire42)});
          for (forvar49 = (1'h0); (forvar49 < (3'h4)); forvar49 = (forvar49 + (1'h1)))
            begin
              reg50 <= $signed(($unsigned(wire46) ^ {{$signed(wire44)},
                  $signed($signed((8'ha7)))}));
              reg51 <= wire39[(3'h5):(2'h2)];
            end
          reg52 <= ($signed($signed((-(!wire42)))) >> (reg50[(4'hc):(3'h6)] ?
              ((|$signed(reg51)) ?
                  {reg50,
                      $unsigned(wire39)} : ((-wire40) & (~&wire39))) : ((wire39 <= {reg48}) >= (8'ha5))));
          if ($signed(wire39))
            begin
              reg53 <= ($unsigned((!$unsigned($signed(reg50)))) ?
                  reg52[(1'h0):(1'h0)] : (wire40 ?
                      (~|wire39[(3'h4):(2'h2)]) : (((+reg48) ^ (|wire44)) > wire46)));
            end
          else
            begin
              reg53 <= $signed(reg48[(2'h2):(1'h0)]);
            end
        end
      for (forvar54 = (1'h0); (forvar54 < (2'h2)); forvar54 = (forvar54 + (1'h1)))
        begin
          for (forvar55 = (1'h0); (forvar55 < (2'h3)); forvar55 = (forvar55 + (1'h1)))
            begin
              reg56 <= ($unsigned((!(forvar55 | {forvar54,
                  wire40}))) && wire39[(3'h5):(3'h5)]);
              reg57 = reg51[(1'h0):(1'h0)];
            end
          for (forvar58 = (1'h0); (forvar58 < (1'h0)); forvar58 = (forvar58 + (1'h1)))
            begin
              reg59 <= $signed(((7'h41) ?
                  ($unsigned($unsigned(wire41)) ? forvar47 : reg52) : reg56));
              reg60 = $unsigned((reg53 ?
                  ((^(~^reg57)) > wire42) : $unsigned($unsigned(reg51))));
              reg61 = (~^forvar58);
              reg62 <= (-(((((8'hb4) ?
                          (8'hba) : wire44) <<< $unsigned(forvar54)) ?
                      reg56[(2'h3):(1'h0)] : forvar55[(4'hb):(2'h3)]) ?
                  (reg52 == (|(|reg52))) : (|$signed($unsigned(forvar55)))));
              reg63 <= $signed($signed({$unsigned((reg61 <<< reg50)),
                  $unsigned(wire42)}));
            end
          reg64 = $signed($signed((reg53 != {forvar47})));
        end
    end
  assign wire65 = (wire43 ?
                      $signed((-(^wire43[(4'hb):(2'h2)]))) : $signed(($unsigned({reg51}) ?
                          (reg56[(3'h5):(1'h1)] | reg63[(1'h1):(1'h0)]) : ((wire45 == reg62) ?
                              $unsigned(reg63) : $unsigned(wire42)))));
  always
    @(posedge clk) begin
      for (forvar66 = (1'h0); (forvar66 < (1'h1)); forvar66 = (forvar66 + (1'h1)))
        begin
          for (forvar67 = (1'h0); (forvar67 < (2'h3)); forvar67 = (forvar67 + (1'h1)))
            begin
              reg68 <= wire44[(3'h4):(2'h2)];
              reg69 <= {(~^(+forvar67))};
              reg70 <= $unsigned((|{(wire39[(1'h1):(1'h1)] ?
                      (wire65 ~^ reg56) : (reg69 ? reg48 : reg52)),
                  (wire41 ? reg56 : (wire65 ? reg62 : reg69))}));
              reg71 = reg50;
            end
          reg72 <= $signed($unsigned((~$signed(reg48))));
          reg73 = $unsigned($signed(wire40));
          for (forvar74 = (1'h0); (forvar74 < (2'h3)); forvar74 = (forvar74 + (1'h1)))
            begin
              reg75 = (wire43 << $unsigned((wire45[(1'h1):(1'h1)] ?
                  $signed(wire45[(4'h9):(2'h3)]) : reg53[(3'h7):(1'h0)])));
              reg76 <= $signed($unsigned((forvar66 - (&(wire44 && wire42)))));
              reg77 <= {(reg59[(3'h7):(1'h0)] ?
                      (((reg53 > reg75) & (reg73 ?
                          reg68 : reg51)) && reg62[(4'he):(1'h1)]) : (reg51[(1'h0):(1'h0)] <<< {wire40})),
                  reg71};
              reg78 = ($signed(((~|reg62) ?
                      wire46[(2'h2):(2'h2)] : (reg51 ?
                          (reg51 <<< wire46) : ((8'hac) >>> reg77)))) ?
                  (8'ha5) : $signed($unsigned($unsigned((~^wire43)))));
            end
        end
    end
  assign wire79 = reg77;
  assign wire80 = ((({(wire45 ? reg63 : wire46), {reg50, wire39}} ?
                          (8'hb3) : reg77) || (+(&$unsigned(reg70)))) ?
                      reg50[(3'h7):(3'h5)] : $signed($unsigned($signed((reg72 ?
                          (8'hb2) : wire41)))));
  assign wire81 = $signed($signed({$unsigned(((8'h9c) + wire79))}));
  assign wire82 = $signed({$unsigned(((reg69 + wire81) >> (&wire40)))});
  assign wire83 = (!$unsigned((~$unsigned((reg69 >= wire46)))));
  assign wire84 = ((((&$signed(wire44)) ? reg77 : reg62) ?
                          $signed((((8'hb8) >= reg56) <<< (reg62 > reg56))) : $unsigned((reg72[(1'h1):(1'h1)] < $signed(wire39)))) ?
                      reg52[(4'hd):(4'hd)] : $signed($signed(wire46)));
  assign wire85 = $signed($signed($unsigned(((reg68 ? wire65 : wire42) ?
                      {reg59} : $unsigned((8'hbc))))));
  always
    @(posedge clk) begin
      for (forvar86 = (1'h0); (forvar86 < (1'h0)); forvar86 = (forvar86 + (1'h1)))
        begin
          for (forvar87 = (1'h0); (forvar87 < (2'h3)); forvar87 = (forvar87 + (1'h1)))
            begin
              reg88 <= (reg48 ^ $unsigned((($unsigned((7'h40)) + (wire82 ^ (8'hb0))) ?
                  reg76 : $unsigned(wire46[(1'h1):(1'h1)]))));
              reg89 = reg53[(2'h3):(1'h0)];
              reg90 = (reg88 ?
                  ((^$signed({forvar86})) << ($signed((reg48 * wire82)) ?
                      reg69[(4'hf):(4'h9)] : $unsigned((~&reg62)))) : (~&reg77));
              reg91 = reg70;
            end
          reg92 <= $signed($unsigned(reg51[(2'h2):(1'h1)]));
          for (forvar93 = (1'h0); (forvar93 < (2'h3)); forvar93 = (forvar93 + (1'h1)))
            begin
              reg94 = (~|wire39[(3'h4):(2'h2)]);
              reg95 = (^~$unsigned(((-$unsigned(wire82)) == $signed(wire41))));
              reg96 <= (+reg95);
            end
        end
    end
endmodule