(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h3b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire3;
  wire [(3'h6):(1'h0)] wire4;
  wire signed [(4'hb):(1'h0)] wire16;
  wire [(4'ha):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire22;
  wire signed [(3'h5):(1'h0)] wire101;
  reg [(3'h6):(1'h0)] reg19 = (1'h0);
  reg [(3'h5):(1'h0)] reg20 = (1'h0);
  reg [(3'h7):(1'h0)] reg21 = (1'h0);
  assign y = {wire4,
                 wire16,
                 wire18,
                 wire22,
                 wire101,
                 reg19,
                 reg20,
                 reg21,
                 (1'h0)};
  assign wire4 = (^wire1);
  module5 #() modinst17 (wire16, clk, wire0, wire2, wire4, wire1);
  assign wire18 = wire3;
  always
    @(posedge clk) begin
      reg19 <= wire2;
      reg20 <= (wire0 ?
          (((wire3 < wire2) ? (&wire16) : (wire2 ? (8'ha2) : wire18)) ?
              $unsigned((wire3 ? wire0 : wire18)) : ($unsigned(wire0) ?
                  wire4[(3'h5):(2'h3)] : wire16[(3'h7):(1'h0)])) : ((!(^wire1)) ?
              (^$signed((8'haf))) : $signed((wire16 != wire16))));
      reg21 <= (wire0 ? wire4 : (^~reg19));
    end
  assign wire22 = reg21;
  module23 #() modinst102 (wire101, clk, wire22, reg21, wire0, wire18);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23
#(parameter param100 = {({((8'haf) ? (8'h9e) : (8'hac))} ? ({(8'h9e)} > (^~(8'hb0))) : {((8'ha6) ~^ (8'hae))})})
(y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire27;
  input wire [(3'h7):(1'h0)] wire26;
  input wire signed [(4'hb):(1'h0)] wire25;
  input wire signed [(4'ha):(1'h0)] wire24;
  wire signed [(4'hb):(1'h0)] wire93;
  wire [(2'h2):(1'h0)] wire92;
  wire [(3'h5):(1'h0)] wire90;
  wire signed [(3'h5):(1'h0)] wire61;
  wire signed [(3'h4):(1'h0)] wire60;
  wire [(3'h7):(1'h0)] wire59;
  wire [(4'ha):(1'h0)] wire57;
  wire signed [(4'hb):(1'h0)] wire32;
  wire [(3'h5):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire30;
  wire [(3'h6):(1'h0)] wire29;
  wire [(3'h5):(1'h0)] wire28;
  reg signed [(3'h4):(1'h0)] reg99 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg98 = (1'h0);
  reg [(3'h6):(1'h0)] reg97 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg96 = (1'h0);
  reg [(3'h5):(1'h0)] reg95 = (1'h0);
  assign y = {wire93,
                 wire92,
                 wire90,
                 wire61,
                 wire60,
                 wire59,
                 wire57,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 reg99,
                 reg98,
                 reg97,
                 reg96,
                 reg95,
                 (1'h0)};
  assign wire28 = (wire25[(2'h2):(1'h0)] << wire24[(4'h8):(4'h8)]);
  assign wire29 = (-($signed(wire26) | (wire26 ?
                      (wire27 ? (8'ha7) : wire26) : (~|(8'ha7)))));
  assign wire30 = $signed((((!wire26) >> $unsigned(wire29)) ~^ $signed((wire27 ?
                      wire26 : wire24))));
  assign wire31 = $signed(((wire24 ?
                      (-wire28) : $signed(wire29)) >> $unsigned($unsigned(wire30))));
  assign wire32 = $unsigned((^$signed((wire24 ? wire24 : wire25))));
  module33 #() modinst58 (wire57, clk, wire32, wire25, wire31, wire24);
  assign wire59 = (((wire29[(1'h1):(1'h0)] && $signed(wire57)) * (!(8'hac))) ?
                      {{wire31[(1'h0):(1'h0)]}} : (wire29[(1'h0):(1'h0)] <= wire25));
  assign wire60 = $unsigned($unsigned($unsigned({wire29})));
  assign wire61 = $signed((8'ha8));
  module62 #() modinst91 (wire90, clk, wire29, wire27, wire59, wire57);
  assign wire92 = ($signed($unsigned(((8'h9f) ? wire31 : wire59))) ?
                      wire59 : (&($unsigned(wire29) ? (!wire57) : (8'hae))));
  module62 #() modinst94 (wire93, clk, wire29, wire30, wire27, wire57);
  always
    @(posedge clk) begin
      if (($signed(wire59) + wire30))
        begin
          reg95 <= wire25[(2'h2):(1'h0)];
          reg96 <= wire31[(3'h4):(2'h2)];
          reg97 <= wire28[(3'h4):(2'h2)];
        end
      else
        begin
          reg95 <= wire25[(4'ha):(3'h6)];
          reg96 <= $signed(wire24);
        end
      reg98 <= wire57[(2'h2):(1'h1)];
      reg99 <= ($signed(($signed(wire93) << reg95[(2'h2):(2'h2)])) != (~^$signed({wire57})));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire9;
  input wire signed [(4'h8):(1'h0)] wire8;
  input wire signed [(3'h6):(1'h0)] wire7;
  input wire [(2'h3):(1'h0)] wire6;
  wire signed [(2'h3):(1'h0)] wire15;
  wire signed [(3'h6):(1'h0)] wire14;
  reg signed [(4'h9):(1'h0)] reg13 = (1'h0);
  reg [(4'h9):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg11 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg10 = (1'h0);
  assign y = {wire15, wire14, reg13, reg12, reg11, reg10, (1'h0)};
  always
    @(posedge clk) begin
      reg10 <= ((wire8 ?
          wire7[(2'h3):(1'h1)] : $unsigned(wire7)) << $unsigned({wire6[(1'h0):(1'h0)]}));
    end
  always
    @(posedge clk) begin
      reg11 <= $signed($unsigned(reg10[(3'h4):(2'h2)]));
      reg12 <= $unsigned($unsigned((((8'h9e) ?
          wire8 : wire7) && $unsigned((8'hac)))));
      reg13 <= ($unsigned((wire8 <<< reg12[(4'h9):(3'h4)])) >= (wire9 ?
          $signed($signed(reg11)) : (^(!wire6))));
    end
  assign wire14 = {((reg11 & wire8[(2'h2):(1'h0)]) ? reg11 : wire6)};
  assign wire15 = (+$unsigned({$unsigned(wire7)}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module62  (y, clk, wire66, wire65, wire64, wire63);
  output wire [(32'h9d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire66;
  input wire [(4'h8):(1'h0)] wire65;
  input wire [(3'h7):(1'h0)] wire64;
  input wire signed [(2'h2):(1'h0)] wire63;
  wire signed [(2'h2):(1'h0)] wire89;
  wire signed [(4'ha):(1'h0)] wire88;
  wire signed [(4'h8):(1'h0)] wire87;
  wire signed [(4'hb):(1'h0)] wire70;
  wire [(2'h3):(1'h0)] wire69;
  wire signed [(4'h8):(1'h0)] wire68;
  wire signed [(4'ha):(1'h0)] wire67;
  reg signed [(3'h7):(1'h0)] reg86 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg85 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg84 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg83 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg82 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg81 = (1'h0);
  reg [(2'h3):(1'h0)] reg80 = (1'h0);
  reg [(4'h8):(1'h0)] reg79 = (1'h0);
  reg [(4'h9):(1'h0)] reg78 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg77 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg76 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg75 = (1'h0);
  reg [(4'hb):(1'h0)] reg74 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg73 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg72 = (1'h0);
  reg [(3'h6):(1'h0)] reg71 = (1'h0);
  assign y = {wire89,
                 wire88,
                 wire87,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 reg86,
                 reg85,
                 reg84,
                 reg83,
                 reg82,
                 reg81,
                 reg80,
                 reg79,
                 reg78,
                 reg77,
                 reg76,
                 reg75,
                 reg74,
                 reg73,
                 reg72,
                 reg71,
                 (1'h0)};
  assign wire67 = $unsigned(wire64[(1'h0):(1'h0)]);
  assign wire68 = (wire63 * wire63);
  assign wire69 = (((^$signed(wire68)) || ($signed(wire67) ~^ wire66)) | $unsigned({(wire65 ?
                          (8'h9c) : wire68)}));
  assign wire70 = ((wire67[(3'h4):(2'h3)] <<< wire68[(1'h1):(1'h0)]) ?
                      wire67 : wire69);
  always
    @(posedge clk) begin
      if (wire70)
        begin
          if ((+(wire64 ?
              ((~&wire66) ^~ wire63) : $unsigned((wire65 << wire66)))))
            begin
              reg71 <= ((^~(&$signed(wire64))) ?
                  (&($unsigned(wire63) + wire69[(2'h2):(1'h1)])) : (($signed(wire70) * {wire70}) ^~ wire68[(4'h8):(2'h3)]));
              reg72 <= (-wire64);
              reg73 <= wire63[(2'h2):(1'h0)];
            end
          else
            begin
              reg71 <= $unsigned($unsigned((wire67 | (wire64 >> wire63))));
              reg72 <= ((&(reg71 ? (+wire70) : $signed(wire66))) ?
                  ((reg72[(3'h5):(1'h1)] | reg71[(1'h1):(1'h1)]) ?
                      (wire64 << (wire64 <<< wire63)) : ({wire66} ?
                          {wire69} : reg73[(2'h2):(1'h1)])) : (~^wire68[(4'h8):(3'h4)]));
            end
        end
      else
        begin
          reg71 <= {(+$signed((~&(8'hac))))};
          reg72 <= {(-((&(8'h9f)) ? $unsigned(wire66) : (~|wire67)))};
          if (reg72)
            begin
              reg73 <= wire63;
              reg74 <= (reg73 ?
                  ($unsigned(((8'hb0) ? reg71 : (8'ha0))) >>> ((^~wire66) ?
                      $unsigned((8'h9f)) : reg71)) : wire66[(2'h2):(1'h1)]);
              reg75 <= reg73;
            end
          else
            begin
              reg73 <= ((&(+wire64)) ? reg71 : wire67);
            end
        end
    end
  always
    @(posedge clk) begin
      if (({$signed($unsigned(wire68))} > ((+(wire68 ? reg74 : reg71)) ?
          wire66 : {((8'had) ? reg75 : wire64)})))
        begin
          reg76 <= ({wire64} >= wire69);
        end
      else
        begin
          reg76 <= (|$signed((wire65[(1'h0):(1'h0)] ? wire64 : {reg73})));
          if (reg75[(3'h6):(1'h0)])
            begin
              reg77 <= ($unsigned($signed($signed(wire68))) <<< (!(wire70[(2'h2):(2'h2)] ?
                  wire70 : {reg74})));
            end
          else
            begin
              reg77 <= (-reg71[(2'h2):(2'h2)]);
              reg78 <= {$signed(reg71[(3'h5):(1'h0)])};
              reg79 <= {{$signed((~|reg78))}};
            end
          reg80 <= wire64;
        end
      reg81 <= wire66;
      if ($unsigned(((reg73[(3'h6):(3'h4)] ?
              ((8'ha3) ? wire63 : reg75) : (reg78 < wire69)) ?
          $unsigned(reg73[(3'h7):(3'h6)]) : {$signed(reg73)})))
        begin
          reg82 <= reg80;
          if ((~&(8'hb0)))
            begin
              reg83 <= reg75;
            end
          else
            begin
              reg83 <= (wire65 ? wire64 : $signed($signed($signed(wire66))));
              reg84 <= $unsigned((8'haf));
              reg85 <= (8'ha2);
            end
          reg86 <= ({$unsigned($signed(reg83))} != wire69);
        end
      else
        begin
          reg82 <= ((($unsigned(wire66) ? reg75 : (~^reg75)) ?
                  $unsigned((reg76 >> wire64)) : {(wire66 != reg79)}) ?
              ((!wire66) ?
                  wire68[(3'h6):(1'h0)] : ($unsigned(reg79) ?
                      $signed((8'h9f)) : wire63[(1'h0):(1'h0)])) : $unsigned((^(wire70 ?
                  reg81 : reg82))));
          reg83 <= $unsigned(((^$signed(reg79)) ?
              (!reg75) : ($unsigned(wire67) >> $unsigned(reg71))));
        end
    end
  assign wire87 = ((^~{(8'ha6)}) >> wire65);
  assign wire88 = ($signed($unsigned((~&wire67))) ?
                      {$signed((~reg86))} : ((|$unsigned(reg74)) & (reg81[(1'h1):(1'h1)] == $unsigned(reg82))));
  assign wire89 = $signed(reg72);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module33
#(parameter param56 = ((-(((8'ha9) < (8'ha4)) ^ (~(8'hac)))) ? ({((8'haf) ? (8'hae) : (8'haf))} * {(~|(8'hb0))}) : ((!((8'h9d) ? (8'h9c) : (8'h9e))) ? (((8'ha1) ? (8'h9e) : (8'h9f)) ? {(8'h9f)} : ((8'hb0) ^ (8'ha3))) : (((8'ha3) ? (8'had) : (8'hb0)) | ((8'hac) ? (8'h9f) : (8'haa))))))
(y, clk, wire37, wire36, wire35, wire34);
  output wire [(32'h87):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire37;
  input wire [(4'hb):(1'h0)] wire36;
  input wire signed [(3'h5):(1'h0)] wire35;
  input wire [(4'h8):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire55;
  wire [(3'h6):(1'h0)] wire54;
  wire [(3'h5):(1'h0)] wire44;
  wire signed [(4'h8):(1'h0)] wire43;
  wire [(4'ha):(1'h0)] wire42;
  wire [(4'h8):(1'h0)] wire41;
  wire signed [(3'h4):(1'h0)] wire40;
  wire [(4'h8):(1'h0)] wire39;
  wire signed [(4'h8):(1'h0)] wire38;
  reg signed [(2'h3):(1'h0)] reg53 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg52 = (1'h0);
  reg [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(4'hb):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg49 = (1'h0);
  reg [(4'ha):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg46 = (1'h0);
  reg [(4'h9):(1'h0)] reg45 = (1'h0);
  assign y = {wire55,
                 wire54,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 (1'h0)};
  assign wire38 = wire34[(2'h2):(2'h2)];
  assign wire39 = $unsigned((8'hae));
  assign wire40 = (|(8'ha7));
  assign wire41 = wire37[(3'h4):(3'h4)];
  assign wire42 = (^$signed($unsigned($unsigned(wire38))));
  assign wire43 = (((^~((8'ha6) * wire35)) ?
                      wire40[(1'h0):(1'h0)] : $signed((wire40 ~^ wire38))) || wire34);
  assign wire44 = (&wire38);
  always
    @(posedge clk) begin
      reg45 <= $unsigned(wire36[(4'hb):(3'h4)]);
      reg46 <= wire43[(3'h7):(1'h0)];
      if (wire34)
        begin
          reg47 <= wire42;
          reg48 <= wire38[(1'h0):(1'h0)];
        end
      else
        begin
          if (($signed(wire40[(3'h4):(3'h4)]) ?
              {$signed($signed(wire42))} : {$signed({wire35})}))
            begin
              reg47 <= (8'h9d);
              reg48 <= ((~((^wire42) - wire38[(1'h0):(1'h0)])) << ($signed(reg48[(3'h5):(3'h5)]) ?
                  reg47[(3'h5):(1'h1)] : wire40));
              reg49 <= (({(wire44 ? wire41 : wire41)} ?
                  ($unsigned(wire38) ?
                      $signed(wire37) : wire34) : $signed($signed(wire44))) != (+(~$signed(wire43))));
            end
          else
            begin
              reg47 <= $unsigned((~&reg48));
              reg48 <= ($signed(reg46) ~^ {($signed(reg47) != (wire35 ?
                      (8'ha5) : wire35))});
              reg49 <= wire44;
            end
          reg50 <= (-(+{$unsigned((8'ha4))}));
          if (reg46[(1'h0):(1'h0)])
            begin
              reg51 <= (^wire41[(3'h7):(2'h3)]);
              reg52 <= {($unsigned((^~(8'haa))) ? $unsigned(wire41) : (8'had))};
              reg53 <= $unsigned((^$unsigned((wire44 != wire38))));
            end
          else
            begin
              reg51 <= $signed(reg47);
              reg52 <= (((8'had) ?
                  ($unsigned(reg46) ?
                      (wire35 ?
                          wire41 : reg50) : $signed(reg46)) : $signed((wire42 >= wire42))) ^~ (wire44[(2'h2):(1'h0)] ^~ (reg51[(3'h4):(1'h1)] + reg49)));
            end
        end
    end
  assign wire54 = (~|$signed($unsigned($unsigned(wire44))));
  assign wire55 = reg49[(2'h2):(1'h0)];
endmodule