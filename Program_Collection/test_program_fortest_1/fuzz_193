(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h76):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire0;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire3;
  wire [(4'hb):(1'h0)] wire79;
  wire signed [(3'h7):(1'h0)] wire78;
  wire [(3'h5):(1'h0)] wire77;
  wire [(3'h5):(1'h0)] wire76;
  wire signed [(4'ha):(1'h0)] wire75;
  wire signed [(3'h4):(1'h0)] wire74;
  wire signed [(4'h8):(1'h0)] wire73;
  wire [(4'h9):(1'h0)] wire71;
  reg [(3'h7):(1'h0)] reg4 = (1'h0);
  reg [(2'h3):(1'h0)] reg5 = (1'h0);
  reg [(4'ha):(1'h0)] reg6 = (1'h0);
  reg [(3'h4):(1'h0)] reg7 = (1'h0);
  reg [(4'ha):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg10 = (1'h0);
  reg [(3'h4):(1'h0)] reg11 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg13 = (1'h0);
  assign y = {wire79,
                 wire78,
                 wire77,
                 wire76,
                 wire75,
                 wire74,
                 wire73,
                 wire71,
                 reg4,
                 reg5,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 reg11,
                 reg12,
                 reg13,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (((((wire2 & wire1) ?
                  (wire3 ? wire1 : wire3) : (wire0 ? (8'h9e) : wire1)) ?
              $unsigned((8'haa)) : $signed(wire2[(1'h1):(1'h1)])) ?
          ($unsigned((wire3 && wire0)) >> ($signed(wire0) || ((8'haa) < (8'h9c)))) : ($signed((8'ha3)) | ((wire2 ?
              wire0 : wire3) != $signed((8'hab))))))
        begin
          if (wire2)
            begin
              reg4 <= (~wire3[(3'h4):(1'h1)]);
              reg5 <= (((^((8'ha5) < wire1)) | $unsigned((wire0 ?
                      wire2 : reg4))) ?
                  (((8'haa) | (~|wire3)) * ((|wire2) + (wire0 ?
                      wire1 : wire1))) : $signed(((wire1 ? (8'ha6) : reg4) ?
                      (^wire0) : wire0)));
              reg6 <= ((wire0 ^ (~&$signed((8'ha8)))) ?
                  $signed((^wire2)) : (^$unsigned((reg5 ? wire2 : reg4))));
            end
          else
            begin
              reg4 <= $unsigned((reg5 >>> reg4[(3'h5):(2'h2)]));
            end
          reg7 <= $signed($signed((8'ha2)));
          reg8 <= $signed((-$unsigned((^(8'ha1)))));
        end
      else
        begin
          reg4 <= (wire0[(1'h1):(1'h1)] ?
              $signed(($signed(reg4) ?
                  ((8'ha3) + reg8) : $signed(reg4))) : {($unsigned(reg8) ^ wire0)});
          if ({wire3[(2'h3):(2'h3)]})
            begin
              reg5 <= (~$unsigned($unsigned({reg7})));
              reg6 <= $unsigned($signed({((8'h9d) ^ reg7)}));
            end
          else
            begin
              reg5 <= (reg5[(1'h0):(1'h0)] ?
                  (~|$signed(reg5[(1'h0):(1'h0)])) : reg6[(1'h0):(1'h0)]);
            end
          if ($unsigned((~|wire1)))
            begin
              reg7 <= ($unsigned(wire1) == (^~(8'hab)));
              reg8 <= ({(-$unsigned(wire0))} + (|reg8[(3'h5):(3'h5)]));
            end
          else
            begin
              reg7 <= ($signed(reg4) ?
                  (wire3 && $signed(((8'ha0) < reg5))) : (reg4 | {(&reg7)}));
              reg8 <= (^$unsigned($signed((reg5 ? reg4 : reg7))));
              reg9 <= reg6;
            end
        end
      if ($unsigned(wire3[(1'h0):(1'h0)]))
        begin
          reg10 <= ((((reg4 >> reg6) ? (wire3 ? reg8 : wire0) : (~wire1)) ?
                  (~((8'ha9) ? reg9 : reg7)) : reg4) ?
              $unsigned(wire3) : (-(+(reg4 * reg7))));
          reg11 <= (^~$unsigned(wire0[(3'h4):(1'h0)]));
          reg12 <= $unsigned(wire0[(3'h4):(3'h4)]);
        end
      else
        begin
          reg10 <= ({reg12[(1'h1):(1'h0)]} >= (reg11[(2'h2):(1'h1)] >= (^~$signed((8'ha2)))));
          reg11 <= wire0[(2'h2):(1'h0)];
          reg12 <= ((~^(~|$signed(reg11))) ?
              (wire1 ?
                  $signed($unsigned(reg10)) : ($unsigned(reg9) ?
                      reg12 : $unsigned(wire3))) : reg8[(3'h4):(1'h1)]);
        end
      reg13 <= reg4[(1'h0):(1'h0)];
    end
  module14 #() modinst72 (.wire15(reg8), .y(wire71), .clk(clk), .wire18(reg6), .wire17(reg7), .wire16(wire2));
  assign wire73 = reg4[(3'h5):(1'h1)];
  assign wire74 = ((reg9 ?
                      reg9[(4'h8):(3'h6)] : $signed({reg11})) >> reg10[(1'h0):(1'h0)]);
  assign wire75 = (((reg9 >> (reg11 ?
                      reg11 : reg4)) >>> $signed((8'ha5))) || ((wire0 ~^ $signed((8'h9e))) ~^ ((reg12 ?
                      reg7 : (8'ha5)) == (8'ha8))));
  assign wire76 = $signed((+wire1));
  assign wire77 = ($signed(wire71) >= {($signed(reg10) ?
                          (reg13 >>> reg6) : (reg7 | (8'had)))});
  assign wire78 = wire75;
  assign wire79 = $signed($signed(((reg6 ? reg13 : wire3) && $signed(wire76))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire15, wire16, wire17, wire18);
  output wire [(32'h88):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire15;
  input wire [(3'h4):(1'h0)] wire16;
  input wire [(3'h4):(1'h0)] wire17;
  input wire signed [(4'ha):(1'h0)] wire18;
  wire signed [(3'h6):(1'h0)] wire19;
  wire signed [(3'h5):(1'h0)] wire20;
  wire signed [(4'hb):(1'h0)] wire38;
  wire [(2'h2):(1'h0)] wire40;
  wire signed [(4'ha):(1'h0)] wire41;
  wire signed [(4'ha):(1'h0)] wire42;
  wire signed [(4'ha):(1'h0)] wire43;
  wire [(2'h3):(1'h0)] wire44;
  wire signed [(3'h6):(1'h0)] wire52;
  wire [(2'h2):(1'h0)] wire69;
  reg [(4'h9):(1'h0)] reg45 = (1'h0);
  reg [(4'h8):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg48 = (1'h0);
  reg [(4'h9):(1'h0)] reg49 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg50 = (1'h0);
  reg [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(3'h7):(1'h0)] reg53 = (1'h0);
  reg [(3'h7):(1'h0)] reg54 = (1'h0);
  assign y = {wire19,
                 wire20,
                 wire38,
                 wire40,
                 wire41,
                 wire42,
                 wire43,
                 wire44,
                 wire52,
                 wire69,
                 reg45,
                 reg46,
                 reg47,
                 reg48,
                 reg49,
                 reg50,
                 reg51,
                 reg53,
                 reg54,
                 (1'h0)};
  assign wire19 = (($signed($signed(wire17)) ?
                      wire16 : ((~&wire15) & $signed(wire15))) == wire15[(1'h1):(1'h0)]);
  assign wire20 = wire17;
  module21 #() modinst39 (wire38, clk, wire17, wire18, wire15, wire20);
  assign wire40 = $unsigned(wire16);
  assign wire41 = ($unsigned(wire18) ? {wire20[(3'h4):(2'h3)]} : wire19);
  assign wire42 = (wire40[(2'h2):(2'h2)] - wire16);
  assign wire43 = $signed($unsigned(wire17[(3'h4):(1'h0)]));
  assign wire44 = ($unsigned(wire16[(2'h3):(1'h1)]) ^ wire15);
  always
    @(posedge clk) begin
      reg45 <= $signed(wire40[(1'h1):(1'h0)]);
      if (wire19[(3'h4):(2'h3)])
        begin
          reg46 <= $signed($signed($signed((wire38 && wire15))));
          reg47 <= (wire43[(2'h3):(1'h0)] ?
              (wire19[(2'h3):(1'h0)] << (wire40 ^ {wire17})) : $signed((wire42[(3'h5):(2'h3)] ?
                  {wire17} : (wire15 || (8'h9d)))));
          reg48 <= $signed(wire43);
        end
      else
        begin
          reg46 <= (({wire42[(2'h2):(2'h2)]} + (~^reg46[(1'h1):(1'h1)])) >= ({reg48[(1'h0):(1'h0)]} ?
              (reg47[(1'h0):(1'h0)] ? wire42 : $unsigned((8'ha2))) : {(wire38 ?
                      (8'hac) : reg48)}));
          if (wire41[(2'h2):(1'h0)])
            begin
              reg47 <= (^~($signed((wire19 ? wire17 : wire41)) >> ((reg45 ?
                      wire44 : (8'hae)) ?
                  ((8'ha5) + (8'haa)) : wire42[(2'h3):(1'h1)])));
              reg48 <= {(({reg46} && (wire44 | reg47)) ?
                      $unsigned($unsigned(reg47)) : $signed(reg46[(2'h3):(2'h2)]))};
              reg49 <= ($signed((wire18 << (8'ha2))) ? wire43 : wire20);
            end
          else
            begin
              reg47 <= wire41[(2'h3):(2'h2)];
              reg48 <= (~wire15[(3'h4):(3'h4)]);
            end
        end
      reg50 <= reg45[(4'h8):(3'h4)];
    end
  always
    @(posedge clk) begin
      reg51 <= $signed((wire20[(1'h0):(1'h0)] ? wire44 : {{(8'h9f)}}));
    end
  assign wire52 = $signed((8'hae));
  always
    @(posedge clk) begin
      reg53 <= $unsigned((&reg51));
      if (reg51[(4'ha):(3'h5)])
        begin
          reg54 <= (~^wire38[(1'h1):(1'h1)]);
        end
      else
        begin
          reg54 <= reg47;
        end
    end
  module55 #() modinst70 (.clk(clk), .wire58(wire42), .wire57(wire18), .wire59(reg50), .y(wire69), .wire56(wire38));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module55
#(parameter param68 = {(&{(8'ha6)})})
(y, clk, wire59, wire58, wire57, wire56);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire59;
  input wire signed [(4'ha):(1'h0)] wire58;
  input wire [(3'h6):(1'h0)] wire57;
  input wire signed [(4'hb):(1'h0)] wire56;
  wire [(4'hb):(1'h0)] wire67;
  wire [(3'h5):(1'h0)] wire63;
  wire [(4'ha):(1'h0)] wire62;
  wire signed [(4'h8):(1'h0)] wire61;
  wire [(4'h8):(1'h0)] wire60;
  reg [(2'h2):(1'h0)] reg66 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg65 = (1'h0);
  reg [(4'h9):(1'h0)] reg64 = (1'h0);
  assign y = {wire67,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 reg66,
                 reg65,
                 reg64,
                 (1'h0)};
  assign wire60 = wire59[(3'h6):(3'h5)];
  assign wire61 = $signed($signed($unsigned(wire57[(2'h2):(1'h0)])));
  assign wire62 = wire58[(1'h1):(1'h1)];
  assign wire63 = ($unsigned((wire60 ^ wire59)) >> {wire58[(3'h4):(2'h2)]});
  always
    @(posedge clk) begin
      reg64 <= $signed(wire56);
      reg65 <= ({wire59[(4'ha):(4'h8)]} | (((wire56 >> wire58) ?
              (|wire56) : wire56[(4'h8):(2'h2)]) ?
          $signed(wire57) : (^(&wire63))));
      reg66 <= (8'ha6);
    end
  assign wire67 = ($unsigned($unsigned($signed(wire57))) ?
                      (8'hb0) : (($unsigned(wire58) ?
                          wire60 : (reg64 & reg66)) || $unsigned({wire58})));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21
#(parameter param37 = ((((^(8'hab)) ? ((8'ha1) ? (8'hb0) : (8'ha3)) : (^~(8'h9e))) << (&{(8'had)})) && (^(!((8'ha8) ? (8'hae) : (8'hab))))))
(y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire25;
  input wire [(4'ha):(1'h0)] wire24;
  input wire signed [(4'ha):(1'h0)] wire23;
  input wire [(3'h5):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire34;
  wire signed [(4'hb):(1'h0)] wire33;
  wire [(3'h4):(1'h0)] wire32;
  wire [(3'h5):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire30;
  wire [(3'h5):(1'h0)] wire29;
  wire [(4'h8):(1'h0)] wire28;
  wire [(2'h2):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire26;
  reg [(4'h8):(1'h0)] reg36 = (1'h0);
  reg [(4'ha):(1'h0)] reg35 = (1'h0);
  assign y = {wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 reg36,
                 reg35,
                 (1'h0)};
  assign wire26 = wire23[(1'h1):(1'h0)];
  assign wire27 = ($signed(({wire22} ?
                          wire25[(1'h1):(1'h0)] : wire26[(3'h5):(3'h4)])) ?
                      wire23[(1'h0):(1'h0)] : (8'ha5));
  assign wire28 = $signed(((((8'h9c) ? wire26 : wire22) ?
                          $signed((8'h9e)) : (~(8'ha3))) ?
                      $unsigned((wire22 ?
                          wire27 : wire25)) : (wire24[(3'h5):(1'h1)] << (|(8'h9d)))));
  assign wire29 = ((!{$signed((8'h9c))}) & (($signed(wire24) >> {wire27}) ?
                      ({wire26} ?
                          (wire22 & wire22) : $signed(wire22)) : ((8'h9e) - {(8'h9e)})));
  assign wire30 = ($signed(((wire26 ? wire24 : wire27) | (wire22 && wire26))) ?
                      ((wire28[(1'h0):(1'h0)] ?
                          {wire29} : {wire23}) >>> (((8'h9d) | wire27) ?
                          wire28[(1'h0):(1'h0)] : wire25)) : $unsigned({{wire26}}));
  assign wire31 = wire22[(1'h0):(1'h0)];
  assign wire32 = (((8'hae) ?
                      $signed((~&wire26)) : wire22) >= $unsigned(((wire27 > wire24) <= {(8'ha3)})));
  assign wire33 = ((|(|$unsigned(wire23))) ?
                      (&$signed(wire28[(3'h4):(3'h4)])) : $signed(wire23[(3'h5):(3'h4)]));
  assign wire34 = wire30[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg35 <= {$signed((^~$unsigned(wire28)))};
      reg36 <= (wire31 >= $unsigned(wire22));
    end
endmodule