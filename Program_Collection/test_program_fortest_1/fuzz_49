(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'hb2):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire77;
  wire signed [(3'h4):(1'h0)] wire76;
  wire signed [(4'ha):(1'h0)] wire75;
  wire [(3'h6):(1'h0)] wire68;
  wire signed [(4'hb):(1'h0)] wire66;
  wire signed [(4'ha):(1'h0)] wire65;
  wire [(4'hb):(1'h0)] wire59;
  wire signed [(4'hb):(1'h0)] wire71;
  wire [(2'h3):(1'h0)] wire72;
  wire signed [(4'ha):(1'h0)] wire73;
  reg [(3'h6):(1'h0)] reg86 = (1'h0);
  reg [(3'h7):(1'h0)] reg85 = (1'h0);
  reg [(3'h5):(1'h0)] reg84 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg83 = (1'h0);
  reg [(3'h4):(1'h0)] reg82 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg81 = (1'h0);
  reg [(4'ha):(1'h0)] reg80 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg79 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg78 = (1'h0);
  reg [(4'hb):(1'h0)] reg64 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg63 = (1'h0);
  reg [(4'hb):(1'h0)] reg62 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg61 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg70 = (1'h0);
  assign y = {wire77,
                 wire76,
                 wire75,
                 wire68,
                 wire66,
                 wire65,
                 wire59,
                 wire71,
                 wire72,
                 wire73,
                 reg86,
                 reg85,
                 reg84,
                 reg83,
                 reg82,
                 reg81,
                 reg80,
                 reg79,
                 reg78,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg70,
                 (1'h0)};
  module4 #() modinst60 (wire59, clk, wire1, wire2, wire0, wire3);
  always
    @(posedge clk) begin
      if ($unsigned(wire3[(4'h8):(3'h6)]))
        begin
          reg61 <= wire3[(3'h6):(1'h0)];
          reg62 <= wire2;
          reg63 <= (~{(~^(~&wire1))});
        end
      else
        begin
          reg61 <= $unsigned(wire3[(4'hb):(1'h1)]);
          reg62 <= $unsigned((~|($unsigned(reg61) ^~ wire3[(1'h1):(1'h0)])));
        end
      if ((wire0 ? wire59 : (^(8'had))))
        begin
          reg64 <= (+((~(wire2 ? reg61 : wire59)) ?
              ((8'hb0) >>> wire3[(4'h9):(3'h4)]) : ({wire59} ~^ $unsigned(wire1))));
        end
      else
        begin
          reg64 <= $signed($signed($signed({reg64})));
        end
    end
  assign wire65 = (8'h9d);
  module4 #() modinst67 (wire66, clk, wire2, wire0, reg64, reg62);
  module4 #() modinst69 (wire68, clk, wire3, reg62, wire59, wire2);
  always
    @(posedge clk) begin
      reg70 <= (^($unsigned(wire1) != ($unsigned(wire65) ~^ wire68[(3'h6):(3'h5)])));
    end
  assign wire71 = (^~({reg61} ?
                      ($unsigned((8'h9e)) ?
                          $unsigned(wire3) : (~wire68)) : $unsigned($unsigned(wire68))));
  assign wire72 = $unsigned($unsigned((~^$signed((8'hab)))));
  module9 #() modinst74 (.wire10(wire68), .wire12(wire66), .wire11(reg62), .y(wire73), .wire13(wire71), .clk(clk));
  assign wire75 = reg61;
  assign wire76 = {$signed($unsigned((wire68 ? wire59 : wire1)))};
  assign wire77 = ($unsigned(wire59[(1'h0):(1'h0)]) ?
                      ({(+(8'ha1))} ?
                          $unsigned(wire1) : wire68) : (wire66[(2'h3):(2'h2)] ?
                          ($signed((8'ha0)) ? (!wire1) : reg61) : reg70));
  always
    @(posedge clk) begin
      if ($unsigned(wire68[(2'h3):(1'h0)]))
        begin
          reg78 <= reg64[(4'hb):(1'h0)];
          reg79 <= (reg64 ?
              $unsigned($unsigned($unsigned(reg70))) : ({(!reg78)} ?
                  wire76 : wire72));
        end
      else
        begin
          reg78 <= $signed(wire59[(1'h0):(1'h0)]);
          if ((~|(~&($signed(wire1) <= $signed(wire77)))))
            begin
              reg79 <= $signed($unsigned(($unsigned((8'hab)) ?
                  {wire66} : (+reg78))));
              reg80 <= $unsigned((+wire72[(2'h2):(1'h1)]));
            end
          else
            begin
              reg79 <= reg80;
            end
        end
      reg81 <= reg63;
      if ((8'ha3))
        begin
          reg82 <= {($signed(wire75) ?
                  (~^$unsigned(reg79)) : reg80[(3'h6):(1'h0)])};
          if ((wire76[(3'h4):(3'h4)] ? $signed($signed(reg61)) : reg80))
            begin
              reg83 <= (wire59 >> ($signed({wire72}) != reg81));
              reg84 <= wire1;
              reg85 <= (reg80 - reg79);
            end
          else
            begin
              reg83 <= (-reg78);
              reg84 <= wire66[(1'h1):(1'h1)];
            end
          reg86 <= (+(((reg78 <= reg79) ^~ (reg78 ?
              reg82 : wire76)) && $unsigned((reg85 ? wire75 : wire68))));
        end
      else
        begin
          if ($unsigned(wire2[(1'h0):(1'h0)]))
            begin
              reg82 <= (((reg85[(2'h3):(1'h1)] == $unsigned(reg64)) ?
                      wire68[(1'h1):(1'h1)] : (|wire76)) ?
                  ($unsigned($signed(wire66)) == {$signed(reg82)}) : $unsigned((!reg82[(2'h2):(1'h1)])));
              reg83 <= (reg82[(2'h3):(2'h3)] || ($signed((wire73 ?
                  reg83 : reg61)) != reg78[(1'h0):(1'h0)]));
              reg84 <= $signed((wire66[(3'h4):(3'h4)] | reg78[(1'h0):(1'h0)]));
            end
          else
            begin
              reg82 <= {(|{reg84})};
            end
          reg85 <= (^((reg61 ? wire3 : (~&reg85)) * ((8'haa) ?
              reg80[(4'ha):(3'h5)] : wire75)));
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param58 = (^~(8'haf)))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire8;
  input wire signed [(3'h7):(1'h0)] wire7;
  input wire signed [(4'hb):(1'h0)] wire6;
  input wire [(4'hb):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire52;
  wire [(2'h2):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire30;
  wire signed [(4'h9):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire54;
  wire signed [(4'h8):(1'h0)] wire55;
  wire [(2'h3):(1'h0)] wire56;
  reg [(4'h9):(1'h0)] reg37 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg36 = (1'h0);
  reg [(4'h9):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg34 = (1'h0);
  reg [(2'h2):(1'h0)] reg33 = (1'h0);
  reg [(4'hb):(1'h0)] reg32 = (1'h0);
  assign y = {wire52,
                 wire31,
                 wire30,
                 wire28,
                 wire54,
                 wire55,
                 wire56,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 (1'h0)};
  module9 #() modinst29 (wire28, clk, wire8, wire5, wire7, wire6);
  assign wire30 = wire5[(3'h6):(3'h6)];
  assign wire31 = (wire6[(1'h0):(1'h0)] != $unsigned(wire28[(1'h0):(1'h0)]));
  always
    @(posedge clk) begin
      reg32 <= wire6[(1'h0):(1'h0)];
      if (wire30)
        begin
          reg33 <= {$signed($signed($signed(reg32)))};
          reg34 <= (((~|$signed(wire7)) >> (^~$unsigned(reg33))) ?
              wire7 : wire28[(2'h2):(1'h1)]);
          reg35 <= $unsigned((8'ha3));
        end
      else
        begin
          reg33 <= (wire28[(1'h1):(1'h1)] && $unsigned($unsigned((wire28 <= wire28))));
          if ((^reg35))
            begin
              reg34 <= {$signed(wire28[(1'h1):(1'h0)])};
              reg35 <= (($signed(reg33[(1'h1):(1'h0)]) ?
                  ($signed(wire30) * $signed(wire5)) : $signed((!(8'ha1)))) ~^ (&(wire8 ?
                  (wire6 ? (8'ha6) : wire8) : (&wire28))));
              reg36 <= ((((wire31 + reg32) ?
                      (reg35 ? wire7 : reg35) : $signed(wire6)) ?
                  ($signed(wire7) ?
                      $signed((8'ha5)) : (^reg33)) : (8'h9e)) > {wire5[(1'h1):(1'h1)]});
            end
          else
            begin
              reg34 <= $unsigned(wire8);
              reg35 <= ($signed(wire5) ?
                  {wire28[(1'h0):(1'h0)]} : $unsigned(reg32));
              reg36 <= wire8;
            end
          reg37 <= {reg33[(1'h1):(1'h1)]};
        end
    end
  module38 #() modinst53 (.wire42(wire28), .clk(clk), .y(wire52), .wire39(wire8), .wire41(wire6), .wire40(reg35));
  assign wire54 = (reg33 ?
                      (((reg36 ? wire30 : wire6) ?
                          wire6[(4'h9):(1'h0)] : wire31) > {(8'h9d)}) : wire30[(4'ha):(4'ha)]);
  assign wire55 = ($unsigned(((wire6 != reg33) != wire31)) == (8'h9f));
  module9 #() modinst57 (wire56, clk, wire6, reg32, reg34, reg36);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module38
#(parameter param51 = {({((8'hb0) ? (8'ha6) : (8'ha7))} <<< (((8'h9f) ? (8'ha2) : (8'ha8)) ? ((8'h9c) ? (8'ha8) : (8'ha3)) : ((8'ha0) ? (8'ha4) : (8'ha6))))})
(y, clk, wire42, wire41, wire40, wire39);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire42;
  input wire [(4'hb):(1'h0)] wire41;
  input wire signed [(3'h4):(1'h0)] wire40;
  input wire [(4'hb):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire50;
  wire [(4'h9):(1'h0)] wire46;
  wire [(3'h7):(1'h0)] wire45;
  wire [(4'h8):(1'h0)] wire44;
  wire [(4'h9):(1'h0)] wire43;
  reg [(3'h6):(1'h0)] reg49 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg47 = (1'h0);
  assign y = {wire50,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 reg49,
                 reg48,
                 reg47,
                 (1'h0)};
  assign wire43 = (wire40 & {wire39});
  assign wire44 = ((($signed(wire40) > $signed(wire40)) > (+$unsigned(wire41))) ?
                      $signed($signed((!wire39))) : (($signed(wire40) ?
                          (wire43 <<< wire39) : {wire40}) >> wire39));
  assign wire45 = ((~$signed({wire39})) * wire39[(3'h5):(1'h0)]);
  assign wire46 = ({$signed($signed(wire43))} ^~ ((!(wire40 ?
                      (8'ha1) : wire43)) | $signed((wire44 <= wire43))));
  always
    @(posedge clk) begin
      reg47 <= {$signed($signed($unsigned(wire41)))};
      reg48 <= ($unsigned(($unsigned(wire44) ?
              $unsigned(wire43) : $signed(reg47))) ?
          $signed((wire40 ?
              (~wire39) : wire42[(4'h8):(3'h6)])) : ((8'h9f) >> wire39[(2'h3):(2'h2)]));
      reg49 <= (^$signed((wire46[(4'h8):(1'h1)] ? reg47 : (wire39 >= wire41))));
    end
  assign wire50 = wire40;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9  (y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire13;
  input wire [(4'hb):(1'h0)] wire12;
  input wire signed [(3'h7):(1'h0)] wire11;
  input wire signed [(2'h3):(1'h0)] wire10;
  wire [(2'h3):(1'h0)] wire27;
  wire [(2'h3):(1'h0)] wire26;
  wire signed [(3'h5):(1'h0)] wire25;
  wire signed [(4'h9):(1'h0)] wire24;
  wire [(3'h4):(1'h0)] wire23;
  wire signed [(4'h8):(1'h0)] wire20;
  wire [(4'hb):(1'h0)] wire19;
  wire [(3'h6):(1'h0)] wire18;
  wire signed [(4'h9):(1'h0)] wire17;
  wire signed [(2'h3):(1'h0)] wire16;
  wire signed [(3'h7):(1'h0)] wire15;
  wire signed [(2'h2):(1'h0)] wire14;
  reg signed [(2'h2):(1'h0)] reg22 = (1'h0);
  reg [(2'h2):(1'h0)] reg21 = (1'h0);
  assign y = {wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 reg22,
                 reg21,
                 (1'h0)};
  assign wire14 = (wire12 >= $signed($unsigned((8'had))));
  assign wire15 = ((wire12[(4'ha):(3'h7)] ?
                      wire13 : (wire13[(4'hb):(3'h5)] ?
                          wire13[(4'hb):(4'ha)] : (wire13 ?
                              (8'ha9) : wire13))) ^ wire11);
  assign wire16 = wire15;
  assign wire17 = wire13[(1'h1):(1'h1)];
  assign wire18 = $unsigned($unsigned($signed((^~wire10))));
  assign wire19 = (wire11[(3'h7):(1'h1)] > ((~&wire17) * {$unsigned(wire11)}));
  assign wire20 = ($unsigned((~&{wire12})) ?
                      $signed((^$unsigned(wire15))) : (wire18 < ((wire12 ?
                              wire19 : wire16) ?
                          (^wire19) : ((8'ha0) >>> wire15))));
  always
    @(posedge clk) begin
      reg21 <= wire12[(4'h8):(3'h4)];
      reg22 <= {({$signed(wire19)} >> wire15)};
    end
  assign wire23 = $unsigned({wire10});
  assign wire24 = wire19[(3'h7):(1'h1)];
  assign wire25 = {wire13[(3'h4):(2'h2)]};
  assign wire26 = (wire14[(1'h1):(1'h0)] ? {(8'h9c)} : reg21[(2'h2):(2'h2)]);
  assign wire27 = $unsigned((~(~&(wire25 && wire13))));
endmodule