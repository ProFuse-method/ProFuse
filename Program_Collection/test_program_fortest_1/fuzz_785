(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire57;
  wire signed [(2'h2):(1'h0)] wire56;
  wire [(4'ha):(1'h0)] wire55;
  wire [(4'ha):(1'h0)] wire54;
  wire signed [(4'ha):(1'h0)] wire53;
  wire [(4'h8):(1'h0)] wire52;
  wire signed [(2'h2):(1'h0)] wire50;
  wire signed [(4'hb):(1'h0)] wire4;
  assign y = {wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire50,
                 wire4,
                 (1'h0)};
  assign wire4 = ((((wire1 == (8'h9e)) ?
                     (wire3 ? wire1 : wire0) : (^~(8'h9d))) >> ((wire3 ?
                     (8'haf) : wire1) <<< wire0[(1'h1):(1'h1)])) ^ $signed(($signed(wire1) ?
                     (wire1 ? (8'ha3) : wire1) : (wire2 ? (8'ha5) : wire3))));
  module5 #() modinst51 (.wire8(wire4), .clk(clk), .y(wire50), .wire9(wire2), .wire7(wire0), .wire6(wire1));
  assign wire52 = (wire0[(3'h6):(3'h6)] >= ((!$signed(wire50)) >> $signed($unsigned(wire1))));
  assign wire53 = (^~(8'hae));
  assign wire54 = wire50[(2'h2):(2'h2)];
  assign wire55 = {(wire1[(4'h8):(1'h1)] <<< (~|wire0))};
  assign wire56 = wire50[(1'h1):(1'h1)];
  assign wire57 = wire54[(3'h5):(3'h4)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h27):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire9;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire signed [(3'h7):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire48;
  wire signed [(4'h8):(1'h0)] wire31;
  wire [(4'h9):(1'h0)] wire30;
  wire [(3'h6):(1'h0)] wire29;
  wire signed [(3'h4):(1'h0)] wire27;
  assign y = {wire48, wire31, wire30, wire29, wire27, (1'h0)};
  module10 #() modinst28 (wire27, clk, wire7, wire6, wire9, wire8);
  assign wire29 = ($signed((((8'ha1) ? wire7 : wire9) ?
                      $signed(wire6) : $signed(wire6))) >>> {$signed($unsigned((8'ha9)))});
  assign wire30 = $unsigned($unsigned(($unsigned(wire6) - (8'ha4))));
  assign wire31 = (&($signed($unsigned(wire8)) ? wire30 : {$unsigned(wire6)}));
  module32 #() modinst49 (wire48, clk, wire8, wire31, wire29, wire30);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module32  (y, clk, wire36, wire35, wire34, wire33);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire36;
  input wire signed [(3'h5):(1'h0)] wire35;
  input wire signed [(3'h6):(1'h0)] wire34;
  input wire [(2'h3):(1'h0)] wire33;
  wire [(2'h2):(1'h0)] wire47;
  wire signed [(4'h8):(1'h0)] wire46;
  wire [(4'h8):(1'h0)] wire41;
  wire [(3'h5):(1'h0)] wire40;
  wire [(3'h7):(1'h0)] wire39;
  wire [(3'h6):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire37;
  reg [(3'h7):(1'h0)] reg45 = (1'h0);
  reg [(2'h2):(1'h0)] reg44 = (1'h0);
  reg [(3'h4):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg42 = (1'h0);
  assign y = {wire47,
                 wire46,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 (1'h0)};
  assign wire37 = wire35[(3'h5):(1'h0)];
  assign wire38 = ($unsigned(((wire34 ? wire37 : wire36) ?
                      (&wire37) : wire33[(2'h3):(2'h3)])) ~^ $unsigned(((wire34 + wire36) ^~ $unsigned(wire37))));
  assign wire39 = $signed((~&({wire36} > wire33)));
  assign wire40 = $signed($unsigned($unsigned((~&wire39))));
  assign wire41 = {($signed((8'haf)) ?
                          ($signed(wire38) ?
                              wire37 : ((8'ha4) ?
                                  wire36 : wire40)) : ($unsigned(wire39) ?
                              $signed((8'ha6)) : $signed(wire39)))};
  always
    @(posedge clk) begin
      if (wire34)
        begin
          reg42 <= $signed($unsigned((^~$signed(wire36))));
          reg43 <= wire35;
        end
      else
        begin
          reg42 <= wire34;
        end
      reg44 <= wire41[(3'h5):(2'h2)];
      reg45 <= $signed((8'had));
    end
  assign wire46 = reg42[(2'h2):(1'h0)];
  assign wire47 = ($unsigned((|{(8'h9c)})) ?
                      ($signed({wire34}) ?
                          (+{(8'ha2)}) : wire46[(3'h5):(1'h1)]) : wire40[(2'h3):(2'h2)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire14;
  input wire signed [(3'h7):(1'h0)] wire13;
  input wire [(4'hb):(1'h0)] wire12;
  input wire signed [(3'h4):(1'h0)] wire11;
  wire signed [(2'h2):(1'h0)] wire23;
  wire signed [(3'h4):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire21;
  wire signed [(2'h2):(1'h0)] wire20;
  wire signed [(4'h9):(1'h0)] wire19;
  wire [(4'ha):(1'h0)] wire18;
  wire [(4'hb):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire16;
  wire signed [(3'h5):(1'h0)] wire15;
  reg signed [(4'hb):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg24 = (1'h0);
  assign y = {wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 reg26,
                 reg25,
                 reg24,
                 (1'h0)};
  assign wire15 = (&wire12[(4'hb):(2'h3)]);
  assign wire16 = wire15;
  assign wire17 = ({wire15} ? {wire15[(2'h3):(2'h3)]} : wire11[(3'h4):(3'h4)]);
  assign wire18 = ((^$unsigned((~wire17))) - $unsigned(wire16[(4'h9):(2'h2)]));
  assign wire19 = wire16[(3'h4):(3'h4)];
  assign wire20 = wire17[(4'ha):(3'h7)];
  assign wire21 = wire20[(1'h1):(1'h1)];
  assign wire22 = $signed(((wire18 <<< $unsigned(wire14)) || ({(8'ha1)} || $unsigned(wire21))));
  assign wire23 = wire15;
  always
    @(posedge clk) begin
      reg24 <= wire21;
      reg25 <= (&($unsigned((wire11 - wire13)) ?
          ((wire17 ? wire17 : wire11) && (wire12 ?
              wire14 : (8'ha8))) : $signed($unsigned(wire20))));
      reg26 <= wire19[(3'h4):(2'h3)];
    end
endmodule