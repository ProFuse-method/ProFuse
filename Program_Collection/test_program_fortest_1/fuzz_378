(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param69 = ({(((8'ha9) ? (8'had) : (8'ha3)) ? ((8'haf) && (8'h9f)) : {(8'ha8)})} >>> ((((8'hae) <<< (8'h9e)) ? (8'ha3) : ((8'ha9) ? (8'h9d) : (8'ha5))) ? (+((8'ha3) ? (8'hb0) : (8'ha0))) : ({(8'ha0)} > ((8'ha3) ? (8'h9e) : (8'ha7))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire68;
  wire [(4'ha):(1'h0)] wire67;
  wire [(4'h9):(1'h0)] wire63;
  wire signed [(2'h3):(1'h0)] wire62;
  wire signed [(3'h5):(1'h0)] wire61;
  wire signed [(3'h4):(1'h0)] wire59;
  reg signed [(3'h4):(1'h0)] reg66 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg64 = (1'h0);
  assign y = {wire68,
                 wire67,
                 wire63,
                 wire62,
                 wire61,
                 wire59,
                 reg66,
                 reg65,
                 reg64,
                 (1'h0)};
  module4 #() modinst60 (wire59, clk, wire1, wire2, wire3, wire0);
  assign wire61 = wire2;
  assign wire62 = wire2[(2'h2):(1'h1)];
  assign wire63 = ($unsigned((+(^~wire59))) ? wire2[(2'h3):(1'h1)] : wire62);
  always
    @(posedge clk) begin
      if ((-$signed(wire3)))
        begin
          reg64 <= (!(~|({wire62} ? $signed(wire1) : $signed(wire62))));
        end
      else
        begin
          reg64 <= wire59;
          reg65 <= wire0[(3'h4):(1'h1)];
          reg66 <= $signed($unsigned($unsigned((!(8'h9d)))));
        end
    end
  assign wire67 = wire63;
  assign wire68 = (wire59 ?
                      $signed({(reg64 >>> wire1)}) : (|{$unsigned((8'ha9))}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h91):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire5;
  input wire signed [(3'h5):(1'h0)] wire6;
  input wire signed [(4'ha):(1'h0)] wire7;
  input wire [(4'h8):(1'h0)] wire8;
  wire [(3'h4):(1'h0)] wire58;
  wire signed [(4'hb):(1'h0)] wire57;
  wire signed [(2'h2):(1'h0)] wire56;
  wire [(2'h2):(1'h0)] wire55;
  wire signed [(2'h3):(1'h0)] wire53;
  wire signed [(4'h8):(1'h0)] wire9;
  wire [(4'h9):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire36;
  wire signed [(4'hb):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire51;
  reg signed [(4'hb):(1'h0)] reg29 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg30 = (1'h0);
  reg [(4'ha):(1'h0)] reg31 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg33 = (1'h0);
  reg [(4'ha):(1'h0)] reg34 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg35 = (1'h0);
  assign y = {wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire53,
                 wire9,
                 wire26,
                 wire28,
                 wire36,
                 wire37,
                 wire38,
                 wire51,
                 reg29,
                 reg30,
                 reg31,
                 reg32,
                 reg33,
                 reg34,
                 reg35,
                 (1'h0)};
  assign wire9 = wire5[(3'h5):(1'h0)];
  module10 #() modinst27 (.wire14(wire8), .y(wire26), .wire13(wire5), .wire12(wire7), .clk(clk), .wire11(wire9));
  assign wire28 = wire26;
  always
    @(posedge clk) begin
      if ({{($signed(wire28) <= $unsigned(wire28))}})
        begin
          reg29 <= {wire9};
        end
      else
        begin
          if ((!$signed((wire28[(4'h8):(3'h6)] ? {(8'ha5)} : {wire8}))))
            begin
              reg29 <= wire26[(4'h9):(2'h3)];
            end
          else
            begin
              reg29 <= wire28[(1'h0):(1'h0)];
              reg30 <= $signed(($signed((wire9 ? (8'hab) : (8'ha1))) ?
                  $unsigned((reg29 ? wire9 : wire9)) : ((~|(8'ha5)) ?
                      (wire26 ? (8'hab) : wire6) : $signed(wire6))));
            end
        end
      if ((wire5[(3'h5):(2'h2)] ?
          (~^wire26[(1'h0):(1'h0)]) : (~reg30[(4'h8):(3'h7)])))
        begin
          if ((8'ha6))
            begin
              reg31 <= {wire7[(2'h3):(1'h1)]};
              reg32 <= (^$unsigned({wire9}));
            end
          else
            begin
              reg31 <= (wire26[(3'h4):(1'h1)] ?
                  reg32[(1'h1):(1'h0)] : $unsigned((8'ha5)));
            end
        end
      else
        begin
          reg31 <= $unsigned(reg32);
        end
      if ($signed(((~$signed((8'ha7))) ?
          wire26 : ((wire28 >>> (8'h9d)) == (wire8 ? wire8 : wire9)))))
        begin
          reg33 <= ($unsigned($unsigned((|wire5))) ?
              $signed({$unsigned(reg32)}) : {((wire8 ? wire5 : wire5) ?
                      $signed(wire6) : (-wire26))});
          reg34 <= (((~|{wire7}) ?
              (~|$unsigned((8'hae))) : {$unsigned(reg29)}) == (wire28[(3'h7):(3'h5)] ?
              (!(reg29 ? wire8 : wire28)) : wire7));
          reg35 <= reg31;
        end
      else
        begin
          reg33 <= (!{$unsigned((&(8'ha0)))});
          reg34 <= (~|reg34[(3'h5):(3'h4)]);
        end
    end
  assign wire36 = wire28;
  assign wire37 = (^~reg35[(1'h1):(1'h0)]);
  assign wire38 = (((~|(&reg33)) ^ (wire7[(3'h7):(3'h4)] | ((8'h9c) < wire36))) ?
                      reg33[(3'h5):(3'h4)] : $signed(wire7));
  module39 #() modinst52 (.wire41(wire38), .wire40(reg30), .clk(clk), .wire43(wire28), .wire42(wire5), .y(wire51));
  module10 #() modinst54 (wire53, clk, wire9, reg33, wire36, reg32);
  assign wire55 = wire8;
  assign wire56 = (~^wire53[(1'h0):(1'h0)]);
  assign wire57 = wire56[(1'h1):(1'h0)];
  assign wire58 = $signed((^{$unsigned(reg34)}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module39
#(parameter param50 = {(((8'haa) <= ((8'ha5) << (8'ha5))) ? (((8'haf) ? (8'ha7) : (8'h9c)) ? (-(8'hae)) : {(8'ha1)}) : (-(8'hab)))})
(y, clk, wire43, wire42, wire41, wire40);
  output wire [(32'h1a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire43;
  input wire [(4'h8):(1'h0)] wire42;
  input wire signed [(4'h9):(1'h0)] wire41;
  input wire [(4'h9):(1'h0)] wire40;
  wire signed [(3'h5):(1'h0)] wire49;
  wire [(2'h3):(1'h0)] wire48;
  wire signed [(3'h5):(1'h0)] wire47;
  wire signed [(3'h6):(1'h0)] wire46;
  wire signed [(3'h4):(1'h0)] wire45;
  wire [(2'h2):(1'h0)] wire44;
  assign y = {wire49, wire48, wire47, wire46, wire45, wire44, (1'h0)};
  assign wire44 = {$signed(((wire42 ? wire42 : (8'had)) ~^ (~^wire43)))};
  assign wire45 = $unsigned(((((8'ha5) | wire42) ?
                      wire44[(1'h1):(1'h1)] : (wire41 ?
                          wire43 : wire40)) <<< $signed(wire40[(4'h8):(1'h1)])));
  assign wire46 = (!(!(8'ha3)));
  assign wire47 = $unsigned(wire45);
  assign wire48 = $unsigned((8'hae));
  assign wire49 = $unsigned(({(wire44 != wire48)} ?
                      ($unsigned(wire46) ?
                          (wire44 && wire43) : (^~wire41)) : $unsigned(wire45[(3'h4):(2'h2)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire14;
  input wire signed [(2'h3):(1'h0)] wire13;
  input wire [(4'ha):(1'h0)] wire12;
  input wire [(4'h8):(1'h0)] wire11;
  wire [(4'h9):(1'h0)] wire25;
  wire [(4'hb):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  wire [(2'h2):(1'h0)] wire22;
  wire [(2'h3):(1'h0)] wire16;
  wire signed [(3'h7):(1'h0)] wire15;
  reg [(4'h9):(1'h0)] reg21 = (1'h0);
  reg [(3'h5):(1'h0)] reg20 = (1'h0);
  reg [(4'h8):(1'h0)] reg19 = (1'h0);
  reg [(4'hb):(1'h0)] reg18 = (1'h0);
  reg [(4'h9):(1'h0)] reg17 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire16,
                 wire15,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 (1'h0)};
  assign wire15 = (wire12 ?
                      $signed(wire13) : ((^~(wire12 ^ wire13)) ?
                          $signed(wire13[(2'h2):(2'h2)]) : wire12[(4'h8):(3'h7)]));
  assign wire16 = $unsigned(wire15[(3'h4):(3'h4)]);
  always
    @(posedge clk) begin
      reg17 <= $unsigned(wire16);
      if ($signed((({wire13} ? $unsigned(wire12) : $unsigned(wire11)) ?
          $signed($unsigned(wire15)) : (~wire15))))
        begin
          if ((8'h9e))
            begin
              reg18 <= reg17[(4'h8):(4'h8)];
              reg19 <= (^(~{(|wire11)}));
            end
          else
            begin
              reg18 <= {{(^(wire12 <= wire13))}};
              reg19 <= $signed($unsigned(wire14[(2'h3):(2'h3)]));
              reg20 <= wire13;
            end
          reg21 <= $signed($signed($unsigned((wire12 ? wire15 : (8'ha3)))));
        end
      else
        begin
          reg18 <= (|($unsigned((wire11 ? (8'ha8) : reg20)) ?
              reg19 : reg19[(3'h5):(3'h4)]));
        end
    end
  assign wire22 = $unsigned($signed((8'h9e)));
  assign wire23 = reg20[(1'h0):(1'h0)];
  assign wire24 = wire23;
  assign wire25 = (^(~((wire15 ? wire13 : reg18) ?
                      wire23 : reg18[(4'h9):(3'h6)])));
endmodule