(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param102 = (+(~&(((8'ha2) >= (8'ha8)) ? ((8'ha0) ? (8'ha2) : (8'ha0)) : (~&(8'ha7))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire101;
  wire signed [(4'hb):(1'h0)] wire94;
  wire [(3'h4):(1'h0)] wire36;
  wire signed [(4'ha):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire34;
  wire signed [(4'hb):(1'h0)] wire33;
  wire signed [(3'h7):(1'h0)] wire32;
  wire [(4'hb):(1'h0)] wire30;
  reg signed [(4'ha):(1'h0)] reg100 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg99 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg98 = (1'h0);
  reg [(3'h4):(1'h0)] reg97 = (1'h0);
  reg [(4'h8):(1'h0)] reg96 = (1'h0);
  assign y = {wire101,
                 wire94,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire30,
                 reg100,
                 reg99,
                 reg98,
                 reg97,
                 reg96,
                 (1'h0)};
  module4 #() modinst31 (.wire8(wire0), .y(wire30), .clk(clk), .wire5(wire1), .wire6(wire3), .wire7(wire2));
  assign wire32 = wire1[(3'h4):(2'h2)];
  assign wire33 = (^(~^wire32));
  assign wire34 = $unsigned(wire3[(4'ha):(4'h8)]);
  assign wire35 = ((((wire2 != wire32) ? wire34 : $unsigned(wire32)) ?
                      $signed((wire33 & wire0)) : ((8'h9e) < (wire34 ?
                          wire2 : (8'ha7)))) >>> wire3);
  assign wire36 = wire3[(2'h2):(1'h0)];
  module37 #() modinst95 (.wire40(wire1), .wire39(wire33), .y(wire94), .clk(clk), .wire41(wire30), .wire38(wire0));
  always
    @(posedge clk) begin
      if ($unsigned((~^(&$signed(wire34)))))
        begin
          reg96 <= ($unsigned({(~|(8'h9e))}) * ($signed(wire33) ?
              $unsigned(wire30) : $signed((8'had))));
        end
      else
        begin
          reg96 <= wire34;
          reg97 <= ((wire33 >= wire2) > (~(^wire3[(1'h1):(1'h1)])));
          reg98 <= reg97;
        end
      if (wire36)
        begin
          if ((wire30[(4'ha):(1'h1)] >= $signed((reg98[(3'h5):(1'h0)] << wire0[(2'h3):(1'h0)]))))
            begin
              reg99 <= wire32;
            end
          else
            begin
              reg99 <= (reg99 >> reg99[(3'h5):(1'h0)]);
              reg100 <= wire35[(3'h7):(2'h2)];
            end
        end
      else
        begin
          reg99 <= wire32[(3'h5):(1'h1)];
          reg100 <= reg97[(2'h2):(1'h0)];
        end
    end
  assign wire101 = wire30[(2'h2):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module37  (y, clk, wire41, wire40, wire39, wire38);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire41;
  input wire signed [(4'h8):(1'h0)] wire40;
  input wire [(4'hb):(1'h0)] wire39;
  input wire signed [(3'h5):(1'h0)] wire38;
  wire [(3'h6):(1'h0)] wire92;
  wire signed [(3'h4):(1'h0)] wire78;
  wire [(3'h6):(1'h0)] wire77;
  wire signed [(4'ha):(1'h0)] wire76;
  wire signed [(3'h4):(1'h0)] wire75;
  wire [(4'hb):(1'h0)] wire74;
  wire signed [(3'h5):(1'h0)] wire73;
  wire signed [(2'h3):(1'h0)] wire71;
  wire signed [(2'h3):(1'h0)] wire44;
  wire [(4'h9):(1'h0)] wire43;
  wire signed [(4'h9):(1'h0)] wire42;
  assign y = {wire92,
                 wire78,
                 wire77,
                 wire76,
                 wire75,
                 wire74,
                 wire73,
                 wire71,
                 wire44,
                 wire43,
                 wire42,
                 (1'h0)};
  assign wire42 = $signed(wire41);
  assign wire43 = wire40;
  assign wire44 = wire38[(2'h3):(1'h1)];
  module45 #() modinst72 (wire71, clk, wire38, wire40, wire43, wire41);
  assign wire73 = wire39;
  assign wire74 = wire71[(2'h2):(1'h1)];
  assign wire75 = wire41[(3'h5):(3'h4)];
  assign wire76 = wire38;
  assign wire77 = $unsigned($signed($unsigned($unsigned((8'h9d)))));
  assign wire78 = wire71;
  module79 #() modinst93 (.wire83(wire41), .wire80(wire42), .wire81(wire75), .clk(clk), .wire82(wire40), .y(wire92));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param29 = ((!{{(8'ha6)}}) ? ((((8'ha1) && (8'ha5)) * ((8'h9c) >> (8'ha5))) >> (&((8'ha8) ? (8'ha6) : (8'h9c)))) : ({((8'ha4) ? (8'ha2) : (8'haf))} ? (((8'ha3) > (8'ha5)) == ((8'ha6) < (8'ha3))) : (8'hab))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h77):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire7;
  input wire [(4'h9):(1'h0)] wire6;
  input wire signed [(3'h6):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire22;
  wire [(3'h5):(1'h0)] wire21;
  wire [(3'h7):(1'h0)] wire20;
  wire signed [(4'hb):(1'h0)] wire18;
  wire [(2'h2):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire16;
  wire signed [(2'h3):(1'h0)] wire10;
  wire signed [(3'h7):(1'h0)] wire9;
  reg signed [(4'ha):(1'h0)] reg28 = (1'h0);
  reg [(3'h7):(1'h0)] reg27 = (1'h0);
  reg [(2'h2):(1'h0)] reg26 = (1'h0);
  reg [(2'h3):(1'h0)] reg25 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg23 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg19 = (1'h0);
  reg [(4'h8):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg14 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg12 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg11 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire20,
                 wire18,
                 wire17,
                 wire16,
                 wire10,
                 wire9,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg19,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 (1'h0)};
  assign wire9 = $unsigned((8'hab));
  assign wire10 = $unsigned(wire5[(2'h2):(1'h1)]);
  always
    @(posedge clk) begin
      reg11 <= wire8;
      reg12 <= ((((&wire6) ?
          wire8 : (|wire9)) != wire7[(1'h0):(1'h0)]) < wire10);
      if (wire9[(3'h7):(1'h1)])
        begin
          reg13 <= $unsigned((wire9[(3'h6):(2'h3)] & {(^~wire6)}));
          if ((!(($unsigned(wire8) && $unsigned(wire9)) ^~ (wire5[(3'h4):(1'h1)] ?
              $signed(wire5) : wire7))))
            begin
              reg14 <= reg12[(2'h2):(1'h1)];
              reg15 <= (^~$unsigned(({wire5} == (8'hb0))));
            end
          else
            begin
              reg14 <= ({{(^~wire5)}} < (~^{{reg15}}));
            end
        end
      else
        begin
          reg13 <= (^~$unsigned(reg12));
        end
    end
  assign wire16 = ({$signed(((8'h9d) ? wire7 : (8'ha3)))} - ($signed(((8'ha7) ?
                          wire6 : wire10)) ?
                      wire8[(2'h3):(1'h0)] : $unsigned($signed(reg15))));
  assign wire17 = wire16;
  assign wire18 = wire16[(2'h3):(1'h1)];
  always
    @(posedge clk) begin
      reg19 <= (~wire16);
    end
  assign wire20 = (($unsigned(wire5[(3'h4):(1'h1)]) < (~|wire10[(2'h3):(1'h1)])) * {$unsigned((wire9 ?
                          wire8 : (8'hac)))});
  assign wire21 = {$unsigned(wire7)};
  assign wire22 = wire7;
  always
    @(posedge clk) begin
      if (reg13[(1'h1):(1'h0)])
        begin
          reg23 <= $unsigned(wire5);
        end
      else
        begin
          if (wire7)
            begin
              reg23 <= (8'haf);
              reg24 <= (8'h9f);
              reg25 <= ($signed(($signed(wire8) ? {reg24} : $signed(reg11))) ?
                  (&(~|$unsigned(reg12))) : wire21[(2'h3):(2'h2)]);
            end
          else
            begin
              reg23 <= (-($signed((wire5 <= reg19)) | (-$unsigned(reg12))));
              reg24 <= wire20[(1'h1):(1'h1)];
            end
          reg26 <= $signed({$signed(((8'hae) ? reg19 : wire9))});
          reg27 <= (!($unsigned({reg24}) >>> $unsigned((wire18 ?
              wire16 : reg25))));
        end
      reg28 <= ((^~((8'hb0) ? reg13 : wire7)) ?
          (wire17 ~^ ($signed(wire16) != {(8'ha7)})) : wire21[(1'h1):(1'h1)]);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module79
#(parameter param91 = (-((((8'ha1) & (8'hae)) ? (~(8'h9d)) : ((8'haa) ~^ (8'h9c))) ? {((8'h9f) ^ (8'ha3))} : {((8'ha6) ? (8'ha6) : (8'hac))})))
(y, clk, wire83, wire82, wire81, wire80);
  output wire [(32'h3b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire83;
  input wire [(4'h8):(1'h0)] wire82;
  input wire signed [(3'h4):(1'h0)] wire81;
  input wire signed [(4'h9):(1'h0)] wire80;
  wire [(3'h4):(1'h0)] wire90;
  wire [(3'h7):(1'h0)] wire88;
  wire signed [(4'hb):(1'h0)] wire87;
  wire signed [(4'ha):(1'h0)] wire86;
  wire [(4'h9):(1'h0)] wire85;
  wire signed [(4'ha):(1'h0)] wire84;
  reg signed [(3'h7):(1'h0)] reg89 = (1'h0);
  assign y = {wire90, wire88, wire87, wire86, wire85, wire84, reg89, (1'h0)};
  assign wire84 = {$signed((~&wire82))};
  assign wire85 = (($unsigned($signed(wire81)) ?
                      wire84[(2'h3):(1'h1)] : wire83[(2'h2):(2'h2)]) + wire82);
  assign wire86 = wire84;
  assign wire87 = wire86[(4'h8):(3'h5)];
  assign wire88 = wire80[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg89 <= (wire86[(3'h5):(2'h2)] <<< ((wire86 ?
              $signed((8'hb0)) : wire88[(3'h7):(3'h6)]) ?
          wire88 : wire81));
    end
  assign wire90 = ((~&wire84) || wire82[(2'h3):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module45
#(parameter param70 = ((((&(8'ha2)) ? ((8'ha1) ? (8'haa) : (8'h9e)) : ((8'hb0) ? (8'h9f) : (8'h9e))) ? (!((8'haf) < (8'had))) : {{(8'ha4)}}) ? {(~((8'h9e) ? (8'ha4) : (8'ha5)))} : (~&(8'h9d))))
(y, clk, wire49, wire48, wire47, wire46);
  output wire [(32'h7d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire49;
  input wire signed [(3'h4):(1'h0)] wire48;
  input wire [(4'h9):(1'h0)] wire47;
  input wire [(4'hb):(1'h0)] wire46;
  wire [(3'h6):(1'h0)] wire69;
  wire signed [(4'h9):(1'h0)] wire68;
  wire [(4'hb):(1'h0)] wire67;
  wire signed [(4'hb):(1'h0)] wire66;
  wire [(3'h6):(1'h0)] wire57;
  wire signed [(4'hb):(1'h0)] wire50;
  reg [(2'h2):(1'h0)] reg65 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg64 = (1'h0);
  reg [(3'h7):(1'h0)] reg63 = (1'h0);
  reg [(3'h6):(1'h0)] reg62 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg61 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg60 = (1'h0);
  reg [(2'h3):(1'h0)] reg59 = (1'h0);
  reg [(4'h9):(1'h0)] reg58 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg56 = (1'h0);
  reg [(2'h2):(1'h0)] reg55 = (1'h0);
  reg [(3'h7):(1'h0)] reg54 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg53 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg52 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg51 = (1'h0);
  assign y = {wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire57,
                 wire50,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 reg58,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 (1'h0)};
  assign wire50 = wire47;
  always
    @(posedge clk) begin
      reg51 <= wire48;
      if (($unsigned({(wire47 ? wire46 : reg51)}) ?
          $unsigned(wire48[(1'h1):(1'h1)]) : ($unsigned((+wire49)) ?
              $signed(wire49) : reg51)))
        begin
          reg52 <= wire47;
          reg53 <= reg52[(1'h0):(1'h0)];
          if ($unsigned(reg53[(2'h2):(1'h1)]))
            begin
              reg54 <= $signed($signed($signed(wire49[(2'h2):(2'h2)])));
            end
          else
            begin
              reg54 <= ((wire48 ~^ wire46[(3'h6):(1'h0)]) ?
                  ($unsigned($unsigned(reg53)) ?
                      $unsigned(wire49[(1'h0):(1'h0)]) : $signed(wire47[(4'h8):(1'h0)])) : (!$signed({reg53})));
              reg55 <= $signed(reg54[(3'h7):(3'h7)]);
              reg56 <= $signed(reg55[(1'h0):(1'h0)]);
            end
        end
      else
        begin
          reg52 <= wire50;
        end
    end
  assign wire57 = $unsigned(reg53);
  always
    @(posedge clk) begin
      reg58 <= ($unsigned(reg56) ^ $unsigned($unsigned((reg55 ^ reg51))));
    end
  always
    @(posedge clk) begin
      if ((!$signed((~^(~|(8'haa))))))
        begin
          reg59 <= $signed((((wire48 ^ wire49) <<< {wire46}) > reg54));
          reg60 <= (wire50 > {((^~reg58) && reg54[(3'h7):(3'h5)])});
          reg61 <= $unsigned((~(wire50 && $signed(wire46))));
        end
      else
        begin
          reg59 <= $signed(reg60[(2'h3):(1'h1)]);
          reg60 <= ((((wire49 - reg54) <= (reg54 ?
                  (8'haa) : wire49)) || (~^(reg52 ? (8'haa) : (8'ha2)))) ?
              reg51 : $signed($unsigned(reg51)));
          reg61 <= (((~|$unsigned(reg58)) ?
                  wire49 : $signed(((8'ha9) - reg53))) ?
              (wire49[(2'h2):(1'h0)] ?
                  (~&(reg59 ~^ wire46)) : ($signed(reg54) < $unsigned(wire57))) : wire57[(2'h3):(1'h1)]);
        end
    end
  always
    @(posedge clk) begin
      reg62 <= {reg54[(1'h0):(1'h0)]};
      if (reg55[(2'h2):(2'h2)])
        begin
          if (($signed($unsigned((reg56 ? wire49 : (8'ha9)))) ?
              $signed((8'h9c)) : wire50))
            begin
              reg63 <= reg59[(1'h1):(1'h0)];
            end
          else
            begin
              reg63 <= (+$signed(wire50));
              reg64 <= reg54;
              reg65 <= (wire47 ?
                  $unsigned($signed(reg60)) : ({$unsigned(wire46)} || reg59[(2'h2):(2'h2)]));
            end
        end
      else
        begin
          if (($signed(((reg63 ? wire49 : reg60) >= {reg53})) ?
              (wire49[(1'h0):(1'h0)] * $unsigned($unsigned(reg63))) : (&($unsigned(reg55) <<< (reg59 * (8'hab))))))
            begin
              reg63 <= $unsigned(reg51);
              reg64 <= (($signed(wire50[(2'h2):(1'h1)]) + {(~&wire50)}) ~^ reg58[(2'h3):(2'h3)]);
              reg65 <= reg54[(3'h5):(3'h4)];
            end
          else
            begin
              reg63 <= $unsigned($unsigned(wire47[(2'h3):(2'h3)]));
              reg64 <= (~^$unsigned((^{(8'h9e)})));
            end
        end
    end
  assign wire66 = $signed((reg54[(3'h6):(3'h4)] ?
                      (-reg52) : $signed(reg58[(2'h3):(2'h3)])));
  assign wire67 = reg60;
  assign wire68 = ($signed($signed((wire50 - reg59))) | reg52);
  assign wire69 = ((($signed(wire67) ?
                          ((8'ha7) - (8'ha3)) : $signed(reg63)) ~^ ((~|(8'ha1)) ?
                          (wire57 ? wire46 : reg55) : $signed(reg54))) ?
                      (8'hac) : (^~$signed($signed(reg53))));
endmodule