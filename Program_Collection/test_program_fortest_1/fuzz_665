(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param14 = (((((8'ha1) <<< (8'h9c)) <= (8'h9e)) ? (((8'hb0) < (8'ha4)) && (^~(8'hae))) : (8'had)) ? ((((8'ha5) <= (8'hb0)) ? (^(8'ha2)) : (~(8'ha8))) ? (((8'h9f) << (8'had)) ? (^(8'h9e)) : ((8'ha3) == (8'ha8))) : {((8'h9e) | (8'hb0))}) : ((~|{(8'ha7)}) ? ((8'haa) & (~^(8'ha1))) : ((~(8'had)) >>> (8'ha4)))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire4;
  reg signed [(4'hb):(1'h0)] reg13 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg12 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg11 = (1'h0);
  reg [(3'h6):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg8 = (1'h0);
  reg [(3'h4):(1'h0)] reg7 = (1'h0);
  assign y = {wire6,
                 wire5,
                 wire4,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 (1'h0)};
  assign wire4 = (wire1[(3'h4):(1'h0)] ?
                     $signed((!(wire0 ? wire2 : (8'ha7)))) : wire3);
  assign wire5 = {$signed($signed((8'h9e)))};
  assign wire6 = (^$unsigned($signed({wire2})));
  always
    @(posedge clk) begin
      if (wire3[(2'h2):(1'h0)])
        begin
          if (wire3[(3'h5):(3'h4)])
            begin
              reg7 <= (wire4 >>> (($unsigned(wire6) | wire1) ^ $unsigned(wire6)));
              reg8 <= $unsigned((wire6 == (~&{wire6})));
              reg9 <= ((~^(((8'hae) >> wire1) ?
                      ((8'hac) || wire5) : ((8'ha9) + reg8))) ?
                  {$unsigned(wire4[(3'h4):(2'h2)])} : $unsigned((~|wire5[(1'h0):(1'h0)])));
            end
          else
            begin
              reg7 <= reg9[(3'h5):(2'h3)];
              reg8 <= reg9[(3'h4):(3'h4)];
            end
          reg10 <= reg9[(1'h0):(1'h0)];
          reg11 <= (~|{(reg7 <<< (wire3 <<< (8'haf)))});
        end
      else
        begin
          reg7 <= wire6[(2'h2):(1'h0)];
        end
      if ($signed((reg11[(1'h0):(1'h0)] || reg10[(2'h2):(2'h2)])))
        begin
          reg12 <= $unsigned(($signed((wire0 ^~ reg9)) ?
              $unsigned((8'h9e)) : {(wire0 ^ reg11)}));
          reg13 <= reg12[(2'h2):(1'h1)];
        end
      else
        begin
          reg12 <= {(wire2[(3'h4):(1'h0)] ? wire5[(3'h4):(2'h3)] : (~|reg11))};
        end
    end
endmodule