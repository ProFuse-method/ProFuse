(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire [(3'h7):(1'h0)] wire51;
  wire [(3'h6):(1'h0)] wire49;
  wire [(3'h5):(1'h0)] wire47;
  wire [(4'ha):(1'h0)] wire4;
  assign y = {wire51, wire49, wire47, wire4, (1'h0)};
  assign wire4 = wire2;
  module5 #() modinst48 (.wire6(wire2), .wire8(wire1), .y(wire47), .clk(clk), .wire7(wire4), .wire9(wire3));
  module5 #() modinst50 (.wire8(wire0), .wire6(wire4), .wire7(wire1), .y(wire49), .wire9(wire2), .clk(clk));
  assign wire51 = wire49[(3'h4):(1'h1)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h43):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire9;
  input wire [(3'h7):(1'h0)] wire8;
  input wire [(4'ha):(1'h0)] wire7;
  input wire signed [(2'h3):(1'h0)] wire6;
  wire [(3'h5):(1'h0)] wire46;
  wire signed [(4'h9):(1'h0)] wire45;
  wire [(2'h3):(1'h0)] wire44;
  wire signed [(4'h8):(1'h0)] wire43;
  wire [(3'h7):(1'h0)] wire41;
  wire signed [(3'h6):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire12;
  wire signed [(4'hb):(1'h0)] wire11;
  wire [(3'h7):(1'h0)] wire10;
  assign y = {wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire41,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 (1'h0)};
  assign wire10 = (^~(&wire9));
  assign wire11 = wire9[(2'h3):(2'h2)];
  assign wire12 = wire11;
  assign wire13 = $signed(wire9);
  module14 #() modinst42 (wire41, clk, wire8, wire10, wire11, wire7);
  assign wire43 = (|(~&$signed(wire12)));
  assign wire44 = $unsigned((~(~^(wire41 ^ wire41))));
  assign wire45 = wire7[(2'h3):(2'h3)];
  assign wire46 = (wire6[(2'h2):(2'h2)] && ($signed($signed(wire11)) | wire11));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param40 = (&((((8'hac) ? (8'haa) : (8'had)) ? ((8'ha8) ? (8'ha5) : (8'hac)) : (~^(8'ha5))) ? (((8'hb0) >> (8'had)) == ((8'hb0) || (8'had))) : ({(8'h9f)} << ((8'ha3) ? (8'hae) : (8'ha6))))))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h84):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire18;
  input wire [(3'h7):(1'h0)] wire17;
  input wire [(4'h9):(1'h0)] wire16;
  input wire [(3'h7):(1'h0)] wire15;
  wire signed [(3'h5):(1'h0)] wire39;
  wire [(3'h5):(1'h0)] wire36;
  wire signed [(3'h6):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire20;
  wire signed [(3'h5):(1'h0)] wire19;
  reg signed [(4'h9):(1'h0)] reg38 = (1'h0);
  reg [(4'ha):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg34 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg33 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg32 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg30 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg27 = (1'h0);
  reg [(4'h9):(1'h0)] reg26 = (1'h0);
  reg [(2'h2):(1'h0)] reg25 = (1'h0);
  reg [(3'h4):(1'h0)] reg24 = (1'h0);
  reg [(2'h3):(1'h0)] reg23 = (1'h0);
  reg [(4'h8):(1'h0)] reg22 = (1'h0);
  assign y = {wire39,
                 wire36,
                 wire35,
                 wire21,
                 wire20,
                 wire19,
                 reg38,
                 reg37,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire19 = {(($unsigned(wire18) || {wire17}) ?
                          $signed({wire18}) : wire15[(1'h0):(1'h0)])};
  assign wire20 = wire16;
  assign wire21 = ((8'ha5) & (wire18 ?
                      (~(wire19 ? wire19 : wire17)) : {$unsigned((8'ha5))}));
  always
    @(posedge clk) begin
      if ({wire19[(1'h1):(1'h1)]})
        begin
          reg22 <= wire15[(2'h2):(1'h0)];
          reg23 <= $unsigned((((~|wire20) ?
              wire19 : {wire19}) ^~ ((wire16 < wire19) >>> wire18[(3'h4):(2'h2)])));
        end
      else
        begin
          if (reg22)
            begin
              reg22 <= $unsigned(reg22[(4'h8):(1'h1)]);
              reg23 <= (&wire21[(4'h9):(3'h4)]);
              reg24 <= $unsigned((~^(~^(wire15 ? wire19 : wire18))));
            end
          else
            begin
              reg22 <= wire20;
              reg23 <= wire18;
            end
        end
    end
  always
    @(posedge clk) begin
      reg25 <= $unsigned($unsigned(({reg24} ?
          {(8'ha4)} : reg22[(3'h4):(1'h0)])));
      if (wire17[(1'h1):(1'h1)])
        begin
          reg26 <= $unsigned($unsigned((((8'h9d) ? wire15 : wire16) ^ ((8'ha5) ?
              reg24 : (8'had)))));
          reg27 <= reg22;
          reg28 <= $unsigned($unsigned((~|(wire15 ? reg25 : wire15))));
        end
      else
        begin
          reg26 <= reg27;
          reg27 <= reg27;
          reg28 <= wire21[(1'h1):(1'h1)];
        end
      if (((+((^wire17) ?
          $unsigned(reg26) : wire18)) <<< $signed($unsigned((reg27 || wire15)))))
        begin
          reg29 <= (({$signed(reg24)} | $signed($signed(reg26))) ?
              (wire19[(1'h0):(1'h0)] ? (-(!reg23)) : reg23) : (((wire19 ?
                      reg27 : wire19) || reg23) ?
                  $signed({(8'ha4)}) : {wire20}));
          reg30 <= (^(($unsigned(wire18) <<< reg25) ?
              ((8'had) ? (!(8'ha5)) : (&reg23)) : $signed((wire16 ?
                  reg24 : reg23))));
          reg31 <= (wire17[(2'h2):(1'h0)] ? reg23[(1'h0):(1'h0)] : (8'h9e));
        end
      else
        begin
          reg29 <= wire16[(4'h8):(3'h5)];
        end
    end
  always
    @(posedge clk) begin
      reg32 <= ($signed(({reg24} | {wire21})) ?
          wire18[(1'h0):(1'h0)] : ((&(reg28 - reg24)) && (reg29 & reg29[(1'h1):(1'h1)])));
      reg33 <= $unsigned(({(wire16 ~^ reg27)} ?
          $unsigned((reg28 ^~ reg24)) : wire19));
      reg34 <= (reg26 >>> {$unsigned($unsigned((8'hac)))});
    end
  assign wire35 = ($signed(wire15[(1'h0):(1'h0)]) ?
                      reg23[(2'h3):(1'h1)] : reg33);
  assign wire36 = ($signed(((+(8'ha1)) >= (~&(8'h9f)))) * $unsigned((reg29[(1'h1):(1'h0)] && wire19[(2'h3):(1'h0)])));
  always
    @(posedge clk) begin
      reg37 <= {(~wire21[(3'h5):(3'h5)])};
      reg38 <= ($signed(($signed(reg32) ? {reg37} : $signed(reg33))) ?
          {$signed((+wire20))} : (~^$unsigned((~^(8'ha3)))));
    end
  assign wire39 = {(reg23[(1'h0):(1'h0)] ?
                          (wire35 << ((8'ha7) || reg34)) : $signed($signed((8'hb0))))};
endmodule