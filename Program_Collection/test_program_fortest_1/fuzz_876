(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param406 = (^~((({(8'hbe)} == ((8'hab) | (8'hb8))) ^~ (|(~&(7'h42)))) ? (~&(8'ha4)) : ({{(7'h41)}, (|(7'h41))} ? {((8'hac) > (8'ha0))} : ((~(8'hbc)) ? ((8'ha3) >> (8'h9d)) : ((8'h9f) ? (8'hbd) : (8'ha3)))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2b1):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire [(5'h14):(1'h0)] wire2;
  input wire [(4'he):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire signed [(5'h13):(1'h0)] wire405;
  wire [(3'h4):(1'h0)] wire404;
  wire [(4'hc):(1'h0)] wire403;
  wire [(2'h3):(1'h0)] wire402;
  wire signed [(5'h11):(1'h0)] wire271;
  wire signed [(5'h11):(1'h0)] wire112;
  wire [(2'h3):(1'h0)] wire111;
  wire [(4'he):(1'h0)] wire110;
  wire [(5'h14):(1'h0)] wire104;
  wire [(5'h11):(1'h0)] wire102;
  wire signed [(4'hd):(1'h0)] wire4;
  wire [(5'h10):(1'h0)] wire273;
  wire signed [(4'he):(1'h0)] wire400;
  reg [(3'h5):(1'h0)] reg307 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg306 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg304 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg303 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg298 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg297 = (1'h0);
  reg [(4'hf):(1'h0)] reg294 = (1'h0);
  reg [(4'h9):(1'h0)] reg289 = (1'h0);
  reg [(5'h12):(1'h0)] reg286 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg285 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg284 = (1'h0);
  reg [(3'h6):(1'h0)] reg283 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg281 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg280 = (1'h0);
  reg [(4'hf):(1'h0)] reg278 = (1'h0);
  reg [(4'hd):(1'h0)] reg277 = (1'h0);
  reg [(3'h4):(1'h0)] reg108 = (1'h0);
  reg [(3'h7):(1'h0)] reg107 = (1'h0);
  reg [(5'h15):(1'h0)] reg305 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg302 = (1'h0);
  reg [(5'h14):(1'h0)] forvar301 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar300 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg299 = (1'h0);
  reg [(5'h13):(1'h0)] reg296 = (1'h0);
  reg [(5'h14):(1'h0)] reg295 = (1'h0);
  reg [(5'h13):(1'h0)] reg293 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar292 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg291 = (1'h0);
  reg [(5'h10):(1'h0)] reg290 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar288 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar287 = (1'h0);
  reg [(2'h2):(1'h0)] forvar282 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg279 = (1'h0);
  reg [(5'h11):(1'h0)] reg276 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar275 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar274 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg109 = (1'h0);
  reg [(5'h14):(1'h0)] forvar106 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar105 = (1'h0);
  assign y = {wire405,
                 wire404,
                 wire403,
                 wire402,
                 wire271,
                 wire112,
                 wire111,
                 wire110,
                 wire104,
                 wire102,
                 wire4,
                 wire273,
                 wire400,
                 reg307,
                 reg306,
                 reg304,
                 reg303,
                 reg298,
                 reg297,
                 reg294,
                 reg289,
                 reg286,
                 reg285,
                 reg284,
                 reg283,
                 reg281,
                 reg280,
                 reg278,
                 reg277,
                 reg108,
                 reg107,
                 reg305,
                 reg302,
                 forvar301,
                 forvar300,
                 reg299,
                 reg296,
                 reg295,
                 reg293,
                 forvar292,
                 reg291,
                 reg290,
                 forvar288,
                 forvar287,
                 forvar282,
                 reg279,
                 reg276,
                 forvar275,
                 forvar274,
                 reg109,
                 forvar106,
                 forvar105,
                 (1'h0)};
  assign wire4 = ($unsigned(((!$signed(wire2)) || $unsigned(((8'hb3) ?
                     wire3 : wire3)))) >> $signed({(wire0[(1'h1):(1'h1)] ?
                         (wire1 ? wire3 : (8'hbf)) : (~^wire1)),
                     wire3}));
  module5 #() modinst103 (wire102, clk, wire4, wire1, wire3, wire2);
  assign wire104 = {wire1, (^~($signed((wire1 >= wire2)) >>> (8'hbf)))};
  always
    @(posedge clk) begin
      for (forvar105 = (1'h0); (forvar105 < (1'h0)); forvar105 = (forvar105 + (1'h1)))
        begin
          for (forvar106 = (1'h0); (forvar106 < (3'h4)); forvar106 = (forvar106 + (1'h1)))
            begin
              reg107 <= (((+((forvar106 < wire104) >= (forvar105 - forvar106))) + {(~|(~&wire4))}) ^~ forvar106);
              reg108 <= $signed(wire2[(5'h12):(4'he)]);
              reg109 = forvar105;
            end
        end
    end
  assign wire110 = (reg107 ^~ (&(8'h9c)));
  assign wire111 = $unsigned($unsigned((!wire102)));
  assign wire112 = ((^~$signed(((+(7'h44)) << wire1))) ?
                       ($unsigned(wire4) > wire110[(3'h4):(1'h1)]) : $unsigned($signed(wire110[(3'h6):(2'h2)])));
  module113 #() modinst272 (.wire114(wire104), .wire118(wire0), .wire117(wire4), .wire115(reg107), .y(wire271), .wire116(reg108), .clk(clk));
  assign wire273 = (~^((~^($signed((8'h9c)) ?
                       (~wire3) : (~wire110))) ^ $unsigned({(reg107 ?
                           wire111 : reg108),
                       $signed(wire4)})));
  always
    @(posedge clk) begin
      for (forvar274 = (1'h0); (forvar274 < (1'h1)); forvar274 = (forvar274 + (1'h1)))
        begin
          for (forvar275 = (1'h0); (forvar275 < (1'h0)); forvar275 = (forvar275 + (1'h1)))
            begin
              reg276 = (&$unsigned(wire111));
              reg277 <= $signed(reg107[(1'h1):(1'h1)]);
              reg278 <= (+reg108[(2'h2):(2'h2)]);
            end
          if ((~&($signed((!((8'hb4) ?
              wire110 : wire110))) + (&$unsigned(reg278[(4'hd):(2'h3)])))))
            begin
              reg279 = reg108[(3'h4):(2'h2)];
              reg280 <= reg277;
              reg281 <= (($signed(wire111[(1'h0):(1'h0)]) == $unsigned($unsigned((+(8'hb6))))) ?
                  ((!$unsigned((wire271 + reg279))) & reg276) : wire0[(2'h3):(1'h1)]);
            end
          else
            begin
              reg279 = wire104;
              reg280 <= reg281[(3'h6):(2'h2)];
            end
          for (forvar282 = (1'h0); (forvar282 < (1'h0)); forvar282 = (forvar282 + (1'h1)))
            begin
              reg283 <= $unsigned(wire271);
              reg284 <= (^$signed((forvar275[(5'h15):(2'h2)] ?
                  (reg280[(4'hf):(3'h4)] ?
                      $signed(reg283) : (forvar275 & wire112)) : ($signed(wire104) | (8'ha4)))));
              reg285 <= $signed($unsigned(wire110));
              reg286 <= $signed((8'hbd));
            end
        end
      for (forvar287 = (1'h0); (forvar287 < (1'h0)); forvar287 = (forvar287 + (1'h1)))
        begin
          for (forvar288 = (1'h0); (forvar288 < (3'h4)); forvar288 = (forvar288 + (1'h1)))
            begin
              reg289 <= (reg279[(3'h6):(3'h6)] ?
                  $signed(reg107[(3'h7):(1'h1)]) : reg276);
              reg290 = {{{{wire0, (wire111 ? wire102 : wire104)}}}};
              reg291 = wire271;
            end
          for (forvar292 = (1'h0); (forvar292 < (1'h1)); forvar292 = (forvar292 + (1'h1)))
            begin
              reg293 = $signed($unsigned($unsigned(($signed(reg107) ?
                  wire0 : (wire3 >= (8'hbf))))));
              reg294 <= $unsigned($unsigned((~|wire271)));
              reg295 = $unsigned(reg293);
              reg296 = forvar288[(4'he):(4'hb)];
              reg297 <= reg294;
            end
          reg298 <= reg296;
          reg299 = {(|(&$signed(wire3[(2'h3):(1'h1)])))};
        end
      for (forvar300 = (1'h0); (forvar300 < (2'h2)); forvar300 = (forvar300 + (1'h1)))
        begin
          for (forvar301 = (1'h0); (forvar301 < (1'h0)); forvar301 = (forvar301 + (1'h1)))
            begin
              reg302 = {(~&$signed({{forvar282, reg284}, (~&wire273)})),
                  $signed($signed(((8'ha2) ? reg285 : $signed(reg294))))};
              reg303 <= (($signed($signed(reg295[(1'h0):(1'h0)])) ?
                      ((&$signed(forvar288)) > (8'ha1)) : $unsigned((wire1[(4'h9):(4'h8)] ?
                          reg299 : (wire111 << (8'ha2))))) ?
                  wire110 : (^(($signed((8'ha8)) < {(7'h41)}) || reg107[(3'h5):(3'h4)])));
              reg304 <= $signed(($signed($unsigned(reg285[(4'hf):(4'h9)])) >>> ((^(forvar287 & reg286)) ?
                  ((reg303 ? reg284 : forvar282) ?
                      reg294 : (wire110 ?
                          reg299 : forvar300)) : (wire111 == ((7'h43) != forvar288)))));
              reg305 = $unsigned(($signed(((wire1 ? wire0 : wire110) ?
                  {reg108, reg289} : {reg294})) + (($unsigned(reg294) ?
                      (reg298 ? forvar292 : (8'h9f)) : (forvar274 ?
                          reg108 : wire4)) ?
                  reg291 : wire2)));
              reg306 <= $signed($unsigned((wire111 ?
                  {((8'hb0) ? wire4 : reg303),
                      (!reg296)} : $unsigned(forvar288))));
            end
          reg307 <= $signed($unsigned((((wire0 | wire1) ?
                  wire104 : (~^reg299)) ?
              $unsigned((reg294 ?
                  reg305 : (8'hb7))) : $unsigned($unsigned((8'hbd))))));
        end
    end
  module308 #() modinst401 (.wire312(reg278), .clk(clk), .wire310(reg281), .wire311(wire112), .wire309(wire3), .wire313(wire102), .y(wire400));
  assign wire402 = wire3;
  assign wire403 = ($unsigned(wire1) < reg298[(4'hb):(3'h4)]);
  assign wire404 = $unsigned($unsigned((reg297 ? (7'h42) : wire1)));
  assign wire405 = ((wire403[(3'h7):(2'h3)] > $signed(({wire102} ?
                           {reg289, wire0} : $signed(wire104)))) ?
                       (8'hb6) : ($signed((8'had)) ?
                           ((^~(+wire102)) <<< reg289[(3'h7):(1'h0)]) : ((&{reg286}) && $signed(reg283[(1'h0):(1'h0)]))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module308
#(parameter param398 = ((|(8'hb8)) == (8'hb2)), 
parameter param399 = {param398, (~|(param398 ? (((8'hb9) ? param398 : param398) & {param398, param398}) : {(param398 ~^ param398)}))})
(y, clk, wire313, wire312, wire311, wire310, wire309);
  output wire [(32'h34f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h11):(1'h0)] wire313;
  input wire [(4'hf):(1'h0)] wire312;
  input wire [(5'h11):(1'h0)] wire311;
  input wire signed [(5'h10):(1'h0)] wire310;
  input wire signed [(3'h7):(1'h0)] wire309;
  wire [(3'h5):(1'h0)] wire397;
  wire [(4'hf):(1'h0)] wire395;
  wire signed [(5'h15):(1'h0)] wire382;
  wire [(4'h9):(1'h0)] wire357;
  wire [(3'h6):(1'h0)] wire356;
  wire signed [(3'h6):(1'h0)] wire355;
  wire [(5'h11):(1'h0)] wire354;
  wire signed [(4'h9):(1'h0)] wire353;
  wire [(5'h13):(1'h0)] wire352;
  wire signed [(4'hb):(1'h0)] wire351;
  wire signed [(5'h11):(1'h0)] wire350;
  wire [(3'h4):(1'h0)] wire318;
  wire signed [(5'h14):(1'h0)] wire317;
  wire signed [(4'h9):(1'h0)] wire316;
  wire [(2'h2):(1'h0)] wire315;
  wire [(5'h11):(1'h0)] wire314;
  reg signed [(4'hd):(1'h0)] reg381 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg380 = (1'h0);
  reg [(4'hb):(1'h0)] reg378 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg375 = (1'h0);
  reg [(5'h14):(1'h0)] reg371 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg369 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg368 = (1'h0);
  reg [(2'h2):(1'h0)] reg367 = (1'h0);
  reg [(3'h6):(1'h0)] reg365 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg362 = (1'h0);
  reg [(4'hb):(1'h0)] reg361 = (1'h0);
  reg [(5'h15):(1'h0)] reg348 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg347 = (1'h0);
  reg [(4'hd):(1'h0)] reg346 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg342 = (1'h0);
  reg [(3'h5):(1'h0)] reg338 = (1'h0);
  reg [(4'hf):(1'h0)] reg336 = (1'h0);
  reg [(2'h3):(1'h0)] reg332 = (1'h0);
  reg [(5'h13):(1'h0)] reg330 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg329 = (1'h0);
  reg signed [(4'he):(1'h0)] reg328 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg324 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar379 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg377 = (1'h0);
  reg signed [(4'he):(1'h0)] reg376 = (1'h0);
  reg [(5'h15):(1'h0)] forvar374 = (1'h0);
  reg [(5'h10):(1'h0)] reg373 = (1'h0);
  reg [(5'h13):(1'h0)] reg372 = (1'h0);
  reg [(5'h10):(1'h0)] forvar370 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg366 = (1'h0);
  reg [(3'h5):(1'h0)] forvar364 = (1'h0);
  reg [(4'hd):(1'h0)] forvar363 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar360 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg359 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar358 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg349 = (1'h0);
  reg [(4'hb):(1'h0)] reg345 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar344 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg343 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar341 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg340 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg339 = (1'h0);
  reg [(4'he):(1'h0)] reg337 = (1'h0);
  reg signed [(4'he):(1'h0)] reg335 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar334 = (1'h0);
  reg [(2'h2):(1'h0)] forvar333 = (1'h0);
  reg [(2'h2):(1'h0)] forvar331 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg327 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg326 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar325 = (1'h0);
  reg [(2'h2):(1'h0)] reg323 = (1'h0);
  reg [(4'hf):(1'h0)] forvar322 = (1'h0);
  reg [(4'ha):(1'h0)] reg321 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar320 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar319 = (1'h0);
  assign y = {wire397,
                 wire395,
                 wire382,
                 wire357,
                 wire356,
                 wire355,
                 wire354,
                 wire353,
                 wire352,
                 wire351,
                 wire350,
                 wire318,
                 wire317,
                 wire316,
                 wire315,
                 wire314,
                 reg381,
                 reg380,
                 reg378,
                 reg375,
                 reg371,
                 reg369,
                 reg368,
                 reg367,
                 reg365,
                 reg362,
                 reg361,
                 reg348,
                 reg347,
                 reg346,
                 reg342,
                 reg338,
                 reg336,
                 reg332,
                 reg330,
                 reg329,
                 reg328,
                 reg324,
                 forvar379,
                 reg377,
                 reg376,
                 forvar374,
                 reg373,
                 reg372,
                 forvar370,
                 reg366,
                 forvar364,
                 forvar363,
                 forvar360,
                 reg359,
                 forvar358,
                 reg349,
                 reg345,
                 forvar344,
                 reg343,
                 forvar341,
                 reg340,
                 reg339,
                 reg337,
                 reg335,
                 forvar334,
                 forvar333,
                 forvar331,
                 reg327,
                 reg326,
                 forvar325,
                 reg323,
                 forvar322,
                 reg321,
                 forvar320,
                 forvar319,
                 (1'h0)};
  assign wire314 = wire311[(3'h5):(1'h0)];
  assign wire315 = $signed((&wire309));
  assign wire316 = (~&$signed(({{wire315, wire314}} ?
                       $unsigned((wire309 && wire309)) : $unsigned((wire309 <<< wire311)))));
  assign wire317 = (wire314[(2'h3):(1'h0)] >>> (~&(^~($signed(wire311) * $unsigned(wire316)))));
  assign wire318 = wire313;
  always
    @(posedge clk) begin
      for (forvar319 = (1'h0); (forvar319 < (3'h4)); forvar319 = (forvar319 + (1'h1)))
        begin
          for (forvar320 = (1'h0); (forvar320 < (1'h1)); forvar320 = (forvar320 + (1'h1)))
            begin
              reg321 = $signed(forvar320);
            end
          for (forvar322 = (1'h0); (forvar322 < (1'h1)); forvar322 = (forvar322 + (1'h1)))
            begin
              reg323 = ((((reg321[(4'ha):(4'h9)] ~^ (wire313 ?
                          (8'haf) : wire315)) ?
                      {(wire313 <= (8'hb9))} : $signed((wire313 ?
                          wire312 : wire316))) ^ wire312[(3'h7):(2'h3)]) ?
                  ({$unsigned($unsigned(wire317)),
                          ($signed(wire314) > {(8'hb1), wire309})} ?
                      $unsigned(($unsigned(forvar319) != wire311[(4'hd):(1'h0)])) : {(~&(wire314 ?
                              wire314 : wire311)),
                          $signed((wire318 ^~ wire317))}) : wire310[(4'hf):(4'ha)]);
              reg324 <= $unsigned(forvar319[(1'h1):(1'h1)]);
            end
          for (forvar325 = (1'h0); (forvar325 < (3'h4)); forvar325 = (forvar325 + (1'h1)))
            begin
              reg326 = wire311;
              reg327 = reg324;
              reg328 <= ((!$signed((+reg323))) ?
                  $unsigned($signed((wire315 ?
                      (wire313 ?
                          reg326 : forvar320) : ((8'hb1) == forvar320)))) : ({(+(^~(8'hae)))} ^~ ((8'h9d) && (^~(~|wire318)))));
              reg329 <= ((8'ha9) != {$signed((wire309 ?
                      (reg328 && reg321) : (-wire314)))});
              reg330 <= wire310;
            end
          for (forvar331 = (1'h0); (forvar331 < (2'h3)); forvar331 = (forvar331 + (1'h1)))
            begin
              reg332 <= wire309;
            end
        end
      for (forvar333 = (1'h0); (forvar333 < (1'h0)); forvar333 = (forvar333 + (1'h1)))
        begin
          for (forvar334 = (1'h0); (forvar334 < (2'h3)); forvar334 = (forvar334 + (1'h1)))
            begin
              reg335 = reg324[(2'h3):(2'h2)];
              reg336 <= ({{$signed($unsigned(wire309)),
                          ($unsigned(wire315) ?
                              {reg332} : $unsigned(forvar331))}} ?
                  ((8'ha2) < $unsigned($signed(wire313))) : ((((^(8'ha3)) ?
                          $unsigned(reg327) : (reg329 ?
                              (8'h9d) : wire316)) & reg323[(1'h0):(1'h0)]) ?
                      wire317[(4'h8):(3'h4)] : (!$unsigned((~|reg330)))));
              reg337 = (&(reg332 ?
                  (reg321 || $signed((+forvar319))) : wire309));
              reg338 <= reg328[(3'h7):(3'h7)];
              reg339 = (-wire315[(1'h0):(1'h0)]);
            end
          reg340 = ($signed(((reg332[(2'h3):(2'h2)] ?
                  (forvar322 ? wire317 : reg330) : reg337[(4'ha):(4'h9)]) ?
              $unsigned((8'ha9)) : ((reg321 >= reg324) ?
                  (reg330 ?
                      reg338 : reg337) : forvar334[(2'h2):(2'h2)]))) * $unsigned((reg338 ?
              (reg328[(4'hc):(4'hc)] <<< forvar334[(3'h7):(3'h4)]) : {(forvar322 * forvar334),
                  forvar334[(3'h6):(1'h1)]})));
          for (forvar341 = (1'h0); (forvar341 < (2'h3)); forvar341 = (forvar341 + (1'h1)))
            begin
              reg342 <= (&(($signed((&wire316)) ?
                  {(wire315 ?
                          (8'h9d) : forvar319)} : wire316) ~^ $signed((((8'hb3) ?
                      wire316 : reg336) ?
                  (reg327 ? wire311 : wire316) : (wire311 ?
                      (8'hb9) : wire314)))));
              reg343 = $unsigned(reg328);
            end
          for (forvar344 = (1'h0); (forvar344 < (2'h2)); forvar344 = (forvar344 + (1'h1)))
            begin
              reg345 = ($signed(($signed((reg323 ? reg330 : reg326)) ?
                  {reg342,
                      forvar333[(2'h2):(2'h2)]} : reg338[(2'h3):(1'h0)])) | $signed(($unsigned($signed(forvar333)) != wire311)));
              reg346 <= ($signed(wire314[(3'h5):(1'h1)]) >> forvar334[(3'h4):(2'h2)]);
              reg347 <= (~|(~^(8'hbc)));
            end
          reg348 <= wire311[(3'h5):(2'h3)];
        end
      reg349 = (~|{$signed({(reg338 ? reg345 : reg330)}),
          $unsigned((~&wire314[(4'hb):(4'ha)]))});
    end
  assign wire350 = {$unsigned(($signed(reg328[(2'h2):(1'h1)]) != $unsigned((reg338 <<< reg332)))),
                       {reg328, reg329[(1'h1):(1'h0)]}};
  assign wire351 = $signed((^~(|$signed($unsigned((8'hb6))))));
  assign wire352 = $signed(wire314);
  assign wire353 = $signed((((~^$signed((8'hb2))) & $signed((+(7'h43)))) ?
                       $signed($unsigned((wire352 ^~ reg324))) : (~&reg329)));
  assign wire354 = ((($unsigned((!wire315)) >> $signed((wire353 ^~ wire352))) | reg328[(4'hb):(1'h1)]) ?
                       $unsigned($unsigned($signed((reg332 ?
                           wire314 : wire316)))) : reg324);
  assign wire355 = reg348;
  assign wire356 = wire309[(3'h4):(2'h3)];
  assign wire357 = {(((^(reg329 ? wire354 : reg342)) ?
                               $unsigned(reg347) : ($signed((8'hae)) ?
                                   {wire318, wire316} : wire309)) ?
                           (-$unsigned($signed(reg346))) : $signed($unsigned((-wire317))))};
  always
    @(posedge clk) begin
      for (forvar358 = (1'h0); (forvar358 < (2'h2)); forvar358 = (forvar358 + (1'h1)))
        begin
          reg359 = wire350[(3'h7):(3'h4)];
          for (forvar360 = (1'h0); (forvar360 < (2'h2)); forvar360 = (forvar360 + (1'h1)))
            begin
              reg361 <= (wire317[(4'ha):(3'h5)] <<< $unsigned($unsigned((~^(wire352 ?
                  wire318 : wire350)))));
            end
          reg362 <= $signed((~&$signed($signed((reg332 ?
              wire355 : forvar360)))));
        end
      for (forvar363 = (1'h0); (forvar363 < (2'h3)); forvar363 = (forvar363 + (1'h1)))
        begin
          for (forvar364 = (1'h0); (forvar364 < (1'h1)); forvar364 = (forvar364 + (1'h1)))
            begin
              reg365 <= ((wire318 > (!forvar364)) << ((~reg329[(1'h0):(1'h0)]) ?
                  $unsigned((forvar358[(3'h5):(3'h4)] ?
                      $signed((8'ha7)) : $signed((7'h44)))) : ((~&wire353[(4'h8):(3'h5)]) ?
                      $unsigned($signed(reg329)) : {wire318[(2'h2):(1'h1)],
                          (reg332 * reg346)})));
              reg366 = reg336;
              reg367 <= $unsigned(wire318);
              reg368 <= $signed(wire356[(3'h5):(2'h2)]);
              reg369 <= (~&(8'hab));
            end
          for (forvar370 = (1'h0); (forvar370 < (1'h0)); forvar370 = (forvar370 + (1'h1)))
            begin
              reg371 <= $signed($unsigned(reg362));
              reg372 = ((reg361[(1'h1):(1'h0)] ?
                      wire314[(1'h1):(1'h1)] : (($unsigned(wire354) ?
                          $unsigned(forvar360) : $unsigned((8'hbc))) <<< (&(wire316 ?
                          (8'ha1) : reg330)))) ?
                  $unsigned($signed((~|wire352))) : $signed(reg329[(1'h1):(1'h0)]));
              reg373 = (!(^(^~$signed({(8'hb3)}))));
            end
          for (forvar374 = (1'h0); (forvar374 < (1'h0)); forvar374 = (forvar374 + (1'h1)))
            begin
              reg375 <= wire352[(1'h0):(1'h0)];
              reg376 = (-wire316[(3'h5):(3'h4)]);
              reg377 = ({wire309, $unsigned(reg372[(2'h3):(1'h1)])} ?
                  {{reg329,
                          ($signed(wire356) ?
                              (reg338 > reg329) : (+reg330))}} : $signed(wire313[(4'he):(3'h7)]));
              reg378 <= (^(|wire316[(1'h0):(1'h0)]));
            end
          for (forvar379 = (1'h0); (forvar379 < (2'h2)); forvar379 = (forvar379 + (1'h1)))
            begin
              reg380 <= (~&(~|(~$signed($signed(forvar363)))));
            end
          reg381 <= ((!($signed(wire318) || $signed((wire350 ?
              wire318 : forvar360)))) & (8'hab));
        end
    end
  assign wire382 = $signed(((reg375 ? (8'hae) : reg375[(4'hb):(3'h4)]) ?
                       ((|$signed(wire317)) ?
                           (wire315[(2'h2):(2'h2)] ?
                               $unsigned((8'h9e)) : (wire350 ?
                                   (8'hb4) : wire355)) : ($signed(reg361) <<< ((8'hbe) > (8'hb1)))) : (^~(|(&reg336)))));
  module383 #() modinst396 (.wire384(reg324), .y(wire395), .wire385(reg361), .clk(clk), .wire387(wire356), .wire386(wire352));
  assign wire397 = $signed(reg338[(3'h5):(2'h2)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module113
#(parameter param270 = (((8'ha4) ? (!{((8'ha4) >>> (7'h40))}) : (((8'had) | ((7'h40) + (7'h40))) ? ((|(8'ha0)) + ((8'ha1) ? (8'hb7) : (8'hb3))) : (((8'hb4) ? (8'hb8) : (8'hbc)) >= ((8'h9c) * (8'hb9))))) ? ((^(!((8'had) < (8'hb4)))) < (!(((8'had) & (7'h42)) ? (~(8'h9f)) : ((8'hbb) ? (8'hbf) : (8'hac))))) : (((((8'ha2) < (8'hb8)) ? ((8'ha2) || (8'ha7)) : ((7'h44) ? (8'ha8) : (8'hab))) || (((8'haa) ^~ (8'haa)) > ((8'hb9) || (7'h44)))) << {(8'ha5)})))
(y, clk, wire118, wire117, wire116, wire115, wire114);
  output wire [(32'h1cb):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire118;
  input wire signed [(3'h7):(1'h0)] wire117;
  input wire signed [(2'h2):(1'h0)] wire116;
  input wire signed [(3'h4):(1'h0)] wire115;
  input wire [(5'h14):(1'h0)] wire114;
  wire [(2'h2):(1'h0)] wire269;
  wire signed [(4'h9):(1'h0)] wire267;
  wire [(4'hb):(1'h0)] wire152;
  wire signed [(4'he):(1'h0)] wire151;
  wire [(2'h3):(1'h0)] wire150;
  wire [(4'ha):(1'h0)] wire119;
  reg signed [(2'h3):(1'h0)] reg120 = (1'h0);
  reg [(5'h15):(1'h0)] reg123 = (1'h0);
  reg [(4'hd):(1'h0)] reg125 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg127 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg129 = (1'h0);
  reg [(5'h10):(1'h0)] reg130 = (1'h0);
  reg [(4'he):(1'h0)] reg133 = (1'h0);
  reg [(3'h4):(1'h0)] reg134 = (1'h0);
  reg [(4'hd):(1'h0)] reg136 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg137 = (1'h0);
  reg [(4'hf):(1'h0)] reg144 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg146 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg147 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg149 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar148 = (1'h0);
  reg [(4'h8):(1'h0)] reg145 = (1'h0);
  reg [(5'h14):(1'h0)] reg143 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar142 = (1'h0);
  reg [(4'h8):(1'h0)] forvar141 = (1'h0);
  reg [(5'h11):(1'h0)] reg140 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar139 = (1'h0);
  reg [(4'hd):(1'h0)] forvar138 = (1'h0);
  reg [(5'h11):(1'h0)] reg135 = (1'h0);
  reg [(5'h11):(1'h0)] forvar132 = (1'h0);
  reg signed [(4'he):(1'h0)] reg131 = (1'h0);
  reg [(3'h7):(1'h0)] forvar128 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg128 = (1'h0);
  reg [(4'h9):(1'h0)] forvar127 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg126 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg124 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg122 = (1'h0);
  reg [(4'hf):(1'h0)] forvar121 = (1'h0);
  assign y = {wire269,
                 wire267,
                 wire152,
                 wire151,
                 wire150,
                 wire119,
                 reg120,
                 reg123,
                 reg125,
                 reg127,
                 reg129,
                 reg130,
                 reg133,
                 reg134,
                 reg136,
                 reg137,
                 reg144,
                 reg146,
                 reg147,
                 reg149,
                 forvar148,
                 reg145,
                 reg143,
                 forvar142,
                 forvar141,
                 reg140,
                 forvar139,
                 forvar138,
                 reg135,
                 forvar132,
                 reg131,
                 forvar128,
                 reg128,
                 forvar127,
                 reg126,
                 reg124,
                 reg122,
                 forvar121,
                 (1'h0)};
  assign wire119 = (~&$unsigned($signed($unsigned((&(8'had))))));
  always
    @(posedge clk) begin
      reg120 <= wire117;
    end
  always
    @(posedge clk) begin
      if (wire115)
        begin
          for (forvar121 = (1'h0); (forvar121 < (1'h0)); forvar121 = (forvar121 + (1'h1)))
            begin
              reg122 = (8'haf);
              reg123 <= {(~forvar121[(4'he):(4'hb)])};
              reg124 = (-((~((-(8'hae)) ?
                  $unsigned(wire114) : $unsigned(wire119))) <= $unsigned(reg123[(5'h10):(1'h0)])));
              reg125 <= $signed(((^~wire118[(2'h3):(2'h2)]) ?
                  (!($unsigned(forvar121) | reg122[(2'h3):(2'h2)])) : (&wire114)));
            end
          reg126 = $signed($unsigned((^~$unsigned($signed(wire115)))));
          for (forvar127 = (1'h0); (forvar127 < (3'h4)); forvar127 = (forvar127 + (1'h1)))
            begin
              reg128 = (&(^$signed(forvar127[(3'h7):(1'h1)])));
            end
        end
      else
        begin
          for (forvar121 = (1'h0); (forvar121 < (2'h3)); forvar121 = (forvar121 + (1'h1)))
            begin
              reg123 <= forvar127;
              reg124 = (reg128[(2'h2):(2'h2)] > $unsigned((~|({wire119} ?
                  reg123[(5'h14):(4'hf)] : $signed((8'hb8))))));
              reg126 = reg120;
              reg127 <= $unsigned((|reg126[(4'h9):(3'h7)]));
            end
          for (forvar128 = (1'h0); (forvar128 < (2'h2)); forvar128 = (forvar128 + (1'h1)))
            begin
              reg129 <= forvar121;
              reg130 <= wire116[(2'h2):(2'h2)];
            end
          reg131 = wire117[(3'h4):(1'h1)];
          for (forvar132 = (1'h0); (forvar132 < (2'h2)); forvar132 = (forvar132 + (1'h1)))
            begin
              reg133 <= reg128[(3'h7):(3'h6)];
              reg134 <= reg128[(4'h9):(3'h4)];
              reg135 = $unsigned(reg126[(4'hb):(3'h6)]);
            end
        end
      reg136 <= $unsigned($signed((reg133[(3'h5):(2'h3)] * (wire114 ?
          $unsigned(reg129) : (reg131 ? reg133 : reg123)))));
      reg137 <= $signed($signed(reg128[(4'hc):(3'h6)]));
      for (forvar138 = (1'h0); (forvar138 < (1'h1)); forvar138 = (forvar138 + (1'h1)))
        begin
          for (forvar139 = (1'h0); (forvar139 < (1'h0)); forvar139 = (forvar139 + (1'h1)))
            begin
              reg140 = $signed($unsigned((-$unsigned({(8'ha2)}))));
            end
        end
      for (forvar141 = (1'h0); (forvar141 < (1'h1)); forvar141 = (forvar141 + (1'h1)))
        begin
          for (forvar142 = (1'h0); (forvar142 < (1'h0)); forvar142 = (forvar142 + (1'h1)))
            begin
              reg143 = (-$signed((&(~|(reg122 <<< wire115)))));
              reg144 <= $signed($unsigned(forvar142));
              reg145 = reg120;
            end
          reg146 <= (^reg124);
          reg147 <= $unsigned($signed($unsigned($signed((^~reg129)))));
          for (forvar148 = (1'h0); (forvar148 < (3'h4)); forvar148 = (forvar148 + (1'h1)))
            begin
              reg149 <= {{(+{{wire118}, $signed(reg130)})}};
            end
        end
    end
  assign wire150 = $signed(reg147[(3'h5):(3'h4)]);
  assign wire151 = ($signed((($signed(reg137) <<< {(8'hb6)}) ^ ($signed(wire150) ?
                           (wire150 & (8'ha1)) : (!reg137)))) ?
                       reg129[(3'h6):(3'h4)] : reg136);
  assign wire152 = (~|wire117[(3'h7):(2'h3)]);
  module153 #() modinst268 (wire267, clk, reg147, reg136, reg149, reg123, reg127);
  assign wire269 = (^~(~|({(&reg147)} || ($unsigned(reg137) ?
                       (reg123 ? (8'ha5) : wire150) : {wire152}))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h277):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hd):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire8;
  input wire [(2'h3):(1'h0)] wire7;
  input wire signed [(4'hd):(1'h0)] wire6;
  wire [(2'h2):(1'h0)] wire101;
  wire [(5'h13):(1'h0)] wire95;
  wire [(4'h9):(1'h0)] wire54;
  wire [(4'h8):(1'h0)] wire53;
  wire [(5'h12):(1'h0)] wire52;
  wire [(4'hb):(1'h0)] wire51;
  wire signed [(4'hf):(1'h0)] wire50;
  wire signed [(4'ha):(1'h0)] wire49;
  wire signed [(4'hb):(1'h0)] wire47;
  wire [(5'h11):(1'h0)] wire10;
  reg [(4'hb):(1'h0)] reg100 = (1'h0);
  reg [(3'h6):(1'h0)] reg99 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg98 = (1'h0);
  reg [(4'hc):(1'h0)] reg92 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg89 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg86 = (1'h0);
  reg [(5'h13):(1'h0)] reg85 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg84 = (1'h0);
  reg [(5'h12):(1'h0)] reg81 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg80 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg76 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg75 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg70 = (1'h0);
  reg [(4'hf):(1'h0)] reg69 = (1'h0);
  reg [(4'hc):(1'h0)] reg65 = (1'h0);
  reg [(3'h5):(1'h0)] reg63 = (1'h0);
  reg [(4'h9):(1'h0)] reg61 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg59 = (1'h0);
  reg [(5'h13):(1'h0)] reg58 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg57 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar97 = (1'h0);
  reg [(2'h3):(1'h0)] forvar96 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg94 = (1'h0);
  reg [(5'h14):(1'h0)] forvar93 = (1'h0);
  reg [(4'ha):(1'h0)] reg91 = (1'h0);
  reg [(4'hb):(1'h0)] reg90 = (1'h0);
  reg [(4'h9):(1'h0)] reg88 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar87 = (1'h0);
  reg [(3'h5):(1'h0)] forvar83 = (1'h0);
  reg [(2'h3):(1'h0)] forvar82 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg79 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg78 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar77 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar74 = (1'h0);
  reg [(4'hf):(1'h0)] reg73 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg72 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar71 = (1'h0);
  reg [(5'h12):(1'h0)] reg68 = (1'h0);
  reg [(5'h10):(1'h0)] forvar67 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar66 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg64 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg62 = (1'h0);
  reg [(3'h5):(1'h0)] forvar60 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar56 = (1'h0);
  reg [(3'h4):(1'h0)] forvar55 = (1'h0);
  assign y = {wire101,
                 wire95,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire47,
                 wire10,
                 reg100,
                 reg99,
                 reg98,
                 reg92,
                 reg89,
                 reg86,
                 reg85,
                 reg84,
                 reg81,
                 reg80,
                 reg76,
                 reg75,
                 reg70,
                 reg69,
                 reg65,
                 reg63,
                 reg61,
                 reg59,
                 reg58,
                 reg57,
                 forvar97,
                 forvar96,
                 reg94,
                 forvar93,
                 reg91,
                 reg90,
                 reg88,
                 forvar87,
                 forvar83,
                 forvar82,
                 reg79,
                 reg78,
                 forvar77,
                 forvar74,
                 reg73,
                 reg72,
                 forvar71,
                 reg68,
                 forvar67,
                 forvar66,
                 reg64,
                 reg62,
                 forvar60,
                 forvar56,
                 forvar55,
                 (1'h0)};
  assign wire10 = (wire6[(1'h0):(1'h0)] ~^ ($unsigned($signed($signed((8'hac)))) <<< wire6));
  module11 #() modinst48 (wire47, clk, wire8, wire6, wire9, wire10);
  assign wire49 = {({wire47} ?
                          (+$signed(wire8)) : $unsigned($signed((wire47 << wire47))))};
  assign wire50 = wire10[(2'h3):(2'h2)];
  assign wire51 = wire8;
  assign wire52 = $unsigned(wire51);
  assign wire53 = $signed($unsigned((wire8[(3'h5):(3'h4)] ?
                      wire50[(4'hf):(3'h6)] : wire8)));
  assign wire54 = {$signed(wire9[(1'h0):(1'h0)])};
  always
    @(posedge clk) begin
      for (forvar55 = (1'h0); (forvar55 < (1'h1)); forvar55 = (forvar55 + (1'h1)))
        begin
          for (forvar56 = (1'h0); (forvar56 < (1'h0)); forvar56 = (forvar56 + (1'h1)))
            begin
              reg57 <= wire9[(4'hb):(4'ha)];
              reg58 <= ($signed((~|{$unsigned(wire8)})) ?
                  (^~wire7[(1'h1):(1'h1)]) : $unsigned(wire6));
              reg59 <= (($signed((forvar56[(3'h7):(1'h0)] ^ $unsigned(reg58))) <<< (((8'hbc) ?
                          (~^reg57) : (^~wire10)) ?
                      (wire53[(1'h0):(1'h0)] <= (wire6 | wire6)) : wire49[(2'h2):(1'h0)])) ?
                  (reg57[(4'h8):(2'h2)] + (wire50[(1'h0):(1'h0)] | reg58)) : (($signed((|(8'h9e))) & $signed(wire52)) ^ forvar56));
            end
          for (forvar60 = (1'h0); (forvar60 < (2'h2)); forvar60 = (forvar60 + (1'h1)))
            begin
              reg61 <= forvar56[(4'ha):(4'h8)];
              reg62 = forvar55;
              reg63 <= ({$unsigned(forvar56[(2'h2):(1'h1)])} || {((wire8 ?
                          (wire51 && forvar60) : reg59) ?
                      $unsigned(reg61[(3'h7):(2'h3)]) : (-$unsigned(reg58))),
                  ({(wire51 | reg58)} ?
                      wire6[(4'ha):(4'ha)] : reg58[(3'h6):(2'h2)])});
              reg64 = $unsigned($signed($unsigned({$unsigned((8'ha5)),
                  ((8'h9e) >= wire47)})));
            end
        end
      reg65 <= {$signed((wire6[(1'h1):(1'h0)] ?
              wire51 : $unsigned((-forvar55)))),
          {(!$signed({forvar60, reg57}))}};
      for (forvar66 = (1'h0); (forvar66 < (2'h3)); forvar66 = (forvar66 + (1'h1)))
        begin
          for (forvar67 = (1'h0); (forvar67 < (2'h3)); forvar67 = (forvar67 + (1'h1)))
            begin
              reg68 = $unsigned(forvar66);
              reg69 <= $unsigned($unsigned(wire8));
              reg70 <= wire49[(4'h8):(2'h3)];
            end
          for (forvar71 = (1'h0); (forvar71 < (1'h1)); forvar71 = (forvar71 + (1'h1)))
            begin
              reg72 = ({wire47[(2'h3):(1'h0)],
                  $signed(((reg70 ? wire10 : wire6) ?
                      (~&(8'haa)) : (|reg64)))} & {$unsigned((reg64 - (wire50 ?
                      reg63 : (8'ha3))))});
              reg73 = $signed(wire6);
            end
          for (forvar74 = (1'h0); (forvar74 < (2'h3)); forvar74 = (forvar74 + (1'h1)))
            begin
              reg75 <= forvar55;
              reg76 <= (wire9 || wire52[(2'h2):(1'h0)]);
            end
          for (forvar77 = (1'h0); (forvar77 < (2'h3)); forvar77 = (forvar77 + (1'h1)))
            begin
              reg78 = (wire6[(4'h9):(2'h2)] + wire53);
              reg79 = ({$signed(((reg68 ?
                      forvar55 : reg70) != $signed(wire50))),
                  wire6} ^ reg78[(2'h2):(2'h2)]);
              reg80 <= ($signed(($unsigned($unsigned((8'hae))) ?
                  $unsigned($signed(reg76)) : forvar67)) != (((^{reg69,
                      reg68}) ?
                  (-(~&reg78)) : ($signed(wire47) ^~ $unsigned(reg65))) || reg63));
              reg81 <= $unsigned((((~(+wire49)) ?
                  ($signed(forvar56) || $signed(wire52)) : (reg62 <<< reg73)) + {((-forvar67) < wire9[(3'h6):(3'h6)])}));
            end
        end
      for (forvar82 = (1'h0); (forvar82 < (3'h4)); forvar82 = (forvar82 + (1'h1)))
        begin
          for (forvar83 = (1'h0); (forvar83 < (3'h4)); forvar83 = (forvar83 + (1'h1)))
            begin
              reg84 <= $unsigned((~|(!{$signed(reg57)})));
              reg85 <= {((8'ha2) * reg62)};
            end
          reg86 <= (reg84[(4'hf):(3'h4)] >> (-{(((8'hbb) || (8'ha1)) < (forvar77 ?
                  wire54 : reg81)),
              (-((8'hbf) ? wire9 : wire10))}));
          for (forvar87 = (1'h0); (forvar87 < (1'h0)); forvar87 = (forvar87 + (1'h1)))
            begin
              reg88 = reg57[(3'h6):(1'h0)];
              reg89 <= (forvar87 || $unsigned(($unsigned((^~wire49)) <= reg70[(1'h0):(1'h0)])));
              reg90 = forvar67;
              reg91 = {wire10, $signed((!$signed((&reg86))))};
              reg92 <= $signed(($unsigned(forvar56) & reg81));
            end
        end
      for (forvar93 = (1'h0); (forvar93 < (3'h4)); forvar93 = (forvar93 + (1'h1)))
        begin
          reg94 = reg88[(3'h4):(2'h3)];
        end
    end
  assign wire95 = reg76[(4'hf):(4'hf)];
  always
    @(posedge clk) begin
      for (forvar96 = (1'h0); (forvar96 < (1'h1)); forvar96 = (forvar96 + (1'h1)))
        begin
          for (forvar97 = (1'h0); (forvar97 < (2'h3)); forvar97 = (forvar97 + (1'h1)))
            begin
              reg98 <= {(!(($signed(wire8) ^ wire54) ?
                      ({wire6, wire6} ?
                          (reg85 ?
                              (8'hb2) : reg61) : $unsigned(reg75)) : $signed({reg85})))};
            end
          reg99 <= ((~|(^~reg61[(4'h9):(4'h8)])) ?
              ((reg61 ? $signed(reg69[(4'h9):(3'h4)]) : reg98) ?
                  $unsigned($signed((reg59 ?
                      (8'h9c) : wire95))) : ($unsigned((wire9 ?
                      wire10 : wire47)) > $unsigned((~wire47)))) : ((($signed(wire49) << wire53[(3'h6):(1'h0)]) ?
                  (~^$signed(reg81)) : reg81) ^~ reg61[(1'h0):(1'h0)]));
        end
      reg100 <= (((((wire95 * reg99) < $unsigned(reg81)) ?
                  ((reg58 ?
                      (8'hb6) : reg70) == wire6) : $signed(wire95[(5'h13):(3'h5)])) ?
              ($signed(reg59) ?
                  reg99 : $signed(((8'hbb) * reg61))) : (+reg99[(2'h3):(2'h3)])) ?
          {wire52} : (~&(^reg59[(4'h8):(4'h8)])));
    end
  assign wire101 = (reg81[(3'h5):(3'h4)] ? reg63 : (8'ha6));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param45 = ((-{({(8'ha5), (7'h44)} && {(8'ha3)}), (((8'had) + (8'hb7)) ? {(8'hbd), (8'hac)} : ((8'hb4) != (7'h40)))}) >>> (&((~((8'hb5) ^ (8'ha0))) ? {((8'hbc) ? (8'ha9) : (8'h9f)), ((8'hb4) >= (8'hb9))} : (~{(8'ha9), (8'ha1)})))), 
parameter param46 = param45)
(y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h188):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire15;
  input wire [(4'hd):(1'h0)] wire14;
  input wire signed [(4'hd):(1'h0)] wire13;
  input wire signed [(2'h2):(1'h0)] wire12;
  wire [(3'h4):(1'h0)] wire44;
  wire signed [(4'hd):(1'h0)] wire43;
  wire [(4'hc):(1'h0)] wire31;
  wire signed [(5'h12):(1'h0)] wire30;
  wire signed [(4'ha):(1'h0)] wire29;
  wire signed [(4'hc):(1'h0)] wire28;
  wire [(5'h11):(1'h0)] wire27;
  wire [(5'h10):(1'h0)] wire26;
  wire signed [(5'h15):(1'h0)] wire25;
  wire signed [(4'hb):(1'h0)] wire24;
  wire [(5'h12):(1'h0)] wire23;
  wire signed [(4'hf):(1'h0)] wire22;
  wire signed [(5'h13):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire20;
  wire [(3'h7):(1'h0)] wire19;
  wire [(4'hf):(1'h0)] wire18;
  wire signed [(4'hc):(1'h0)] wire17;
  wire [(5'h14):(1'h0)] wire16;
  reg [(5'h10):(1'h0)] reg41 = (1'h0);
  reg [(5'h15):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg34 = (1'h0);
  reg [(4'ha):(1'h0)] reg42 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar40 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar39 = (1'h0);
  reg [(4'hf):(1'h0)] reg38 = (1'h0);
  reg [(5'h15):(1'h0)] forvar37 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar35 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg33 = (1'h0);
  reg [(5'h15):(1'h0)] forvar32 = (1'h0);
  assign y = {wire44,
                 wire43,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 reg41,
                 reg36,
                 reg34,
                 reg42,
                 forvar40,
                 forvar39,
                 reg38,
                 forvar37,
                 forvar35,
                 reg33,
                 forvar32,
                 (1'h0)};
  assign wire16 = $unsigned(((wire15 ?
                          $signed((wire12 && wire13)) : ($unsigned(wire12) ^ wire14[(2'h2):(1'h1)])) ?
                      $signed($unsigned((wire12 >= wire12))) : $unsigned((8'ha3))));
  assign wire17 = ((-$signed(($signed(wire12) < $signed(wire13)))) >> $unsigned($signed(wire13[(3'h5):(1'h1)])));
  assign wire18 = $unsigned(((+((~^(8'ha2)) & (^wire13))) ? wire14 : wire14));
  assign wire19 = ($unsigned((!$signed((8'ha2)))) > {$signed((^wire12)),
                      $signed($signed($signed(wire16)))});
  assign wire20 = (~^{$signed({(wire16 ? wire18 : wire19)}),
                      {$signed((wire14 & wire19)),
                          ($signed(wire14) >>> $unsigned(wire16))}});
  assign wire21 = ((^~wire13[(4'hc):(3'h6)]) ~^ ($signed($signed($signed(wire15))) ^ (($unsigned(wire15) << wire15) && $signed($unsigned(wire18)))));
  assign wire22 = ($signed(wire21[(5'h13):(4'hc)]) ^ ($signed(($signed(wire18) ~^ (wire21 ?
                          wire15 : wire13))) ?
                      {wire14[(2'h2):(1'h1)]} : ((-$signed(wire16)) ?
                          wire20 : wire20[(2'h2):(1'h0)])));
  assign wire23 = (~{(~&$unsigned(wire14))});
  assign wire24 = wire23[(4'hb):(4'h9)];
  assign wire25 = {wire20[(2'h2):(1'h1)]};
  assign wire26 = ((($signed((&wire13)) ?
                          ((wire20 >> wire20) ^~ {wire19,
                              (8'ha3)}) : $signed($unsigned(wire18))) ?
                      $signed((~|$unsigned((8'hbc)))) : $signed(wire22[(4'hb):(3'h4)])) & wire15);
  assign wire27 = wire14[(4'h9):(3'h4)];
  assign wire28 = (-$signed(wire18));
  assign wire29 = ((+((~$signed(wire13)) ?
                          (|{wire28}) : ((wire14 + wire22) * $unsigned(wire13)))) ?
                      $signed({($signed(wire24) << wire18), (8'had)}) : wire26);
  assign wire30 = ((|wire12) ?
                      ($unsigned(wire19[(2'h3):(1'h1)]) >>> $signed((&(^wire23)))) : ($unsigned((8'hb5)) * ({$unsigned(wire19),
                              wire13} ?
                          (wire29 ?
                              (wire26 ? wire24 : wire17) : (wire27 ?
                                  wire26 : wire28)) : {$signed(wire13),
                              $unsigned(wire15)})));
  assign wire31 = wire16;
  always
    @(posedge clk) begin
      for (forvar32 = (1'h0); (forvar32 < (2'h2)); forvar32 = (forvar32 + (1'h1)))
        begin
          reg33 = {(8'hbc),
              {(~wire30[(1'h0):(1'h0)]),
                  (wire27 ?
                      ($signed(wire17) ?
                          (wire17 * wire28) : $unsigned(wire12)) : ((+wire13) ?
                          (7'h42) : (!wire13)))}};
        end
      reg34 <= (($signed(wire13[(3'h5):(3'h4)]) ?
          (((wire15 > wire17) ? (wire29 ? forvar32 : wire17) : {wire24}) ?
              $unsigned((wire23 ?
                  wire12 : reg33)) : wire16) : (($signed(wire17) <<< (wire19 > wire31)) <= wire21)) >= $signed(wire15));
      for (forvar35 = (1'h0); (forvar35 < (1'h1)); forvar35 = (forvar35 + (1'h1)))
        begin
          reg36 <= wire17;
          for (forvar37 = (1'h0); (forvar37 < (2'h3)); forvar37 = (forvar37 + (1'h1)))
            begin
              reg38 = $unsigned(($unsigned((((8'hb8) << reg34) ?
                      (8'hb3) : $signed(wire17))) ?
                  $unsigned((~^(wire31 * (8'hbf)))) : (forvar32[(5'h15):(3'h6)] != {(wire13 ?
                          (7'h43) : reg36),
                      $signed(wire27)})));
            end
        end
      for (forvar39 = (1'h0); (forvar39 < (2'h3)); forvar39 = (forvar39 + (1'h1)))
        begin
          for (forvar40 = (1'h0); (forvar40 < (2'h3)); forvar40 = (forvar40 + (1'h1)))
            begin
              reg41 <= $signed($signed($unsigned(wire31[(4'hb):(4'hb)])));
              reg42 = wire27[(4'h9):(3'h7)];
            end
        end
    end
  assign wire43 = {$unsigned({$unsigned($unsigned(wire22)),
                          $unsigned({wire22})}),
                      (($unsigned($unsigned(wire17)) <<< ($unsigned(wire16) ?
                          (wire12 | reg36) : (wire21 ?
                              wire15 : (8'ha8)))) * (^~(^(wire23 << wire15))))};
  assign wire44 = $unsigned($signed($unsigned(wire13[(3'h7):(1'h1)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module153
#(parameter param265 = ((((((8'hb2) ? (8'hb5) : (8'ha6)) ? ((8'ha8) ^~ (7'h41)) : (^(8'ha7))) ? (~|(8'ha3)) : (8'hb4)) > (((+(8'ha3)) >= ((8'hb0) ? (8'hbd) : (8'ha6))) >= (((8'hb6) != (8'ha3)) ^ {(8'hb6)}))) ? {((8'h9d) ? {{(7'h44), (8'haa)}} : ((~|(7'h40)) >= ((8'had) & (8'haf)))), (+{((8'hb2) ? (8'hb6) : (8'hbe))})} : ((!(((8'h9f) >>> (8'ha2)) ? ((8'hb4) ? (7'h41) : (8'hb9)) : ((8'hbc) ? (8'ha1) : (7'h44)))) ? (^~(&(^(8'hb7)))) : ((~^((8'hbc) <= (8'ha9))) <<< ((+(8'ha9)) ? (~|(8'hbe)) : ((8'had) ? (8'hb5) : (8'haf)))))), 
parameter param266 = param265)
(y, clk, wire158, wire157, wire156, wire155, wire154);
  output wire [(32'h4a1):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hf):(1'h0)] wire158;
  input wire [(4'hd):(1'h0)] wire157;
  input wire [(4'hb):(1'h0)] wire156;
  input wire [(5'h10):(1'h0)] wire155;
  input wire signed [(4'he):(1'h0)] wire154;
  wire [(4'h9):(1'h0)] wire264;
  wire [(5'h15):(1'h0)] wire254;
  wire [(4'hd):(1'h0)] wire253;
  wire [(4'h9):(1'h0)] wire176;
  wire signed [(4'hc):(1'h0)] wire162;
  wire [(4'hd):(1'h0)] wire161;
  wire signed [(4'hd):(1'h0)] wire160;
  wire [(5'h15):(1'h0)] wire159;
  reg [(4'ha):(1'h0)] reg262 = (1'h0);
  reg [(5'h14):(1'h0)] reg261 = (1'h0);
  reg [(4'hc):(1'h0)] reg259 = (1'h0);
  reg [(3'h4):(1'h0)] reg255 = (1'h0);
  reg [(5'h12):(1'h0)] reg249 = (1'h0);
  reg [(4'hc):(1'h0)] reg248 = (1'h0);
  reg [(5'h10):(1'h0)] reg246 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg245 = (1'h0);
  reg [(3'h7):(1'h0)] reg243 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg241 = (1'h0);
  reg [(2'h3):(1'h0)] reg237 = (1'h0);
  reg [(4'h9):(1'h0)] reg231 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg230 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg229 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg227 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg226 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg225 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg223 = (1'h0);
  reg [(4'h9):(1'h0)] reg221 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg220 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg219 = (1'h0);
  reg [(3'h4):(1'h0)] reg217 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg215 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg214 = (1'h0);
  reg [(4'h9):(1'h0)] reg213 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg212 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg211 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg210 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg207 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg206 = (1'h0);
  reg [(3'h5):(1'h0)] reg199 = (1'h0);
  reg [(3'h4):(1'h0)] reg196 = (1'h0);
  reg [(3'h4):(1'h0)] reg191 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg189 = (1'h0);
  reg [(4'he):(1'h0)] reg187 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg182 = (1'h0);
  reg [(2'h3):(1'h0)] reg181 = (1'h0);
  reg [(4'he):(1'h0)] reg179 = (1'h0);
  reg [(4'h9):(1'h0)] reg175 = (1'h0);
  reg [(5'h10):(1'h0)] reg174 = (1'h0);
  reg [(4'h8):(1'h0)] reg171 = (1'h0);
  reg [(4'hc):(1'h0)] reg170 = (1'h0);
  reg [(3'h7):(1'h0)] reg168 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg163 = (1'h0);
  reg signed [(4'he):(1'h0)] reg263 = (1'h0);
  reg [(4'h8):(1'h0)] reg260 = (1'h0);
  reg [(5'h15):(1'h0)] reg258 = (1'h0);
  reg [(2'h2):(1'h0)] forvar257 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar256 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg252 = (1'h0);
  reg [(5'h13):(1'h0)] reg251 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg250 = (1'h0);
  reg [(3'h4):(1'h0)] forvar247 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg244 = (1'h0);
  reg [(5'h14):(1'h0)] reg242 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg240 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar239 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg238 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg236 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar235 = (1'h0);
  reg [(2'h2):(1'h0)] forvar234 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg233 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg232 = (1'h0);
  reg [(4'hf):(1'h0)] forvar228 = (1'h0);
  reg [(5'h11):(1'h0)] reg224 = (1'h0);
  reg [(3'h4):(1'h0)] forvar222 = (1'h0);
  reg [(4'hd):(1'h0)] reg218 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg216 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar209 = (1'h0);
  reg [(4'hf):(1'h0)] forvar208 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar205 = (1'h0);
  reg [(5'h13):(1'h0)] reg204 = (1'h0);
  reg [(4'hc):(1'h0)] forvar203 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg202 = (1'h0);
  reg [(4'hb):(1'h0)] reg201 = (1'h0);
  reg [(5'h12):(1'h0)] forvar200 = (1'h0);
  reg [(4'h9):(1'h0)] reg198 = (1'h0);
  reg [(4'h8):(1'h0)] reg197 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar195 = (1'h0);
  reg [(3'h5):(1'h0)] forvar194 = (1'h0);
  reg [(2'h3):(1'h0)] reg193 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar192 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg190 = (1'h0);
  reg [(4'hc):(1'h0)] forvar188 = (1'h0);
  reg [(5'h15):(1'h0)] forvar186 = (1'h0);
  reg [(4'h8):(1'h0)] reg185 = (1'h0);
  reg [(4'h9):(1'h0)] reg184 = (1'h0);
  reg [(5'h12):(1'h0)] reg183 = (1'h0);
  reg [(4'ha):(1'h0)] forvar180 = (1'h0);
  reg [(4'hb):(1'h0)] forvar178 = (1'h0);
  reg [(4'he):(1'h0)] forvar177 = (1'h0);
  reg [(5'h11):(1'h0)] reg173 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar172 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar169 = (1'h0);
  reg [(4'ha):(1'h0)] forvar167 = (1'h0);
  reg [(5'h11):(1'h0)] reg166 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar165 = (1'h0);
  reg [(4'hf):(1'h0)] forvar164 = (1'h0);
  assign y = {wire264,
                 wire254,
                 wire253,
                 wire176,
                 wire162,
                 wire161,
                 wire160,
                 wire159,
                 reg262,
                 reg261,
                 reg259,
                 reg255,
                 reg249,
                 reg248,
                 reg246,
                 reg245,
                 reg243,
                 reg241,
                 reg237,
                 reg231,
                 reg230,
                 reg229,
                 reg227,
                 reg226,
                 reg225,
                 reg223,
                 reg221,
                 reg220,
                 reg219,
                 reg217,
                 reg215,
                 reg214,
                 reg213,
                 reg212,
                 reg211,
                 reg210,
                 reg207,
                 reg206,
                 reg199,
                 reg196,
                 reg191,
                 reg189,
                 reg187,
                 reg182,
                 reg181,
                 reg179,
                 reg175,
                 reg174,
                 reg171,
                 reg170,
                 reg168,
                 reg163,
                 reg263,
                 reg260,
                 reg258,
                 forvar257,
                 forvar256,
                 reg252,
                 reg251,
                 reg250,
                 forvar247,
                 reg244,
                 reg242,
                 reg240,
                 forvar239,
                 reg238,
                 reg236,
                 forvar235,
                 forvar234,
                 reg233,
                 reg232,
                 forvar228,
                 reg224,
                 forvar222,
                 reg218,
                 reg216,
                 forvar209,
                 forvar208,
                 forvar205,
                 reg204,
                 forvar203,
                 reg202,
                 reg201,
                 forvar200,
                 reg198,
                 reg197,
                 forvar195,
                 forvar194,
                 reg193,
                 forvar192,
                 reg190,
                 forvar188,
                 forvar186,
                 reg185,
                 reg184,
                 reg183,
                 forvar180,
                 forvar178,
                 forvar177,
                 reg173,
                 forvar172,
                 forvar169,
                 forvar167,
                 reg166,
                 forvar165,
                 forvar164,
                 (1'h0)};
  assign wire159 = $unsigned((^~{wire157[(3'h5):(1'h0)]}));
  assign wire160 = wire156[(3'h5):(1'h0)];
  assign wire161 = wire158[(3'h7):(1'h1)];
  assign wire162 = (wire159[(5'h15):(2'h2)] <= (^wire159[(4'he):(4'ha)]));
  always
    @(posedge clk) begin
      reg163 <= wire162;
      for (forvar164 = (1'h0); (forvar164 < (2'h3)); forvar164 = (forvar164 + (1'h1)))
        begin
          for (forvar165 = (1'h0); (forvar165 < (1'h0)); forvar165 = (forvar165 + (1'h1)))
            begin
              reg166 = {wire161[(2'h3):(1'h1)], (+wire158[(4'hf):(1'h0)])};
            end
          for (forvar167 = (1'h0); (forvar167 < (2'h3)); forvar167 = (forvar167 + (1'h1)))
            begin
              reg168 <= ($unsigned(forvar164[(2'h3):(2'h2)]) ?
                  ($signed($unsigned((^~wire161))) * $unsigned($signed(((8'haf) ?
                      wire159 : wire162)))) : wire160);
            end
          for (forvar169 = (1'h0); (forvar169 < (2'h2)); forvar169 = (forvar169 + (1'h1)))
            begin
              reg170 <= $signed($unsigned(forvar165));
              reg171 <= $unsigned($unsigned((8'hb1)));
            end
          for (forvar172 = (1'h0); (forvar172 < (1'h1)); forvar172 = (forvar172 + (1'h1)))
            begin
              reg173 = (!forvar165[(2'h3):(2'h2)]);
              reg174 <= forvar169;
            end
          reg175 <= $unsigned((+reg174[(4'hf):(4'he)]));
        end
    end
  assign wire176 = $unsigned(wire162);
  always
    @(posedge clk) begin
      for (forvar177 = (1'h0); (forvar177 < (3'h4)); forvar177 = (forvar177 + (1'h1)))
        begin
          for (forvar178 = (1'h0); (forvar178 < (2'h3)); forvar178 = (forvar178 + (1'h1)))
            begin
              reg179 <= ((|($unsigned((|forvar177)) ?
                  ($signed(wire155) * $signed(wire154)) : reg170)) <<< wire154);
            end
          for (forvar180 = (1'h0); (forvar180 < (1'h0)); forvar180 = (forvar180 + (1'h1)))
            begin
              reg181 <= (!$signed($unsigned(wire162)));
              reg182 <= (($signed($signed((|reg163))) & $signed($unsigned((~^wire155)))) <<< {$signed(((reg174 ?
                      reg174 : (8'ha7)) | $signed(forvar178))),
                  (~(((8'haa) ? (8'h9e) : (7'h40)) ?
                      (forvar177 ? (8'hab) : reg170) : (wire154 ?
                          (8'hb2) : (7'h44))))});
              reg183 = (($signed(forvar180[(4'h9):(3'h7)]) ?
                  ($unsigned((8'haa)) > reg168) : ($unsigned(wire159) ?
                      $unsigned($signed(wire158)) : ((forvar177 ?
                          forvar178 : reg163) << $unsigned((8'h9f))))) > $signed((~(|{reg163}))));
              reg184 = ((wire155 < $unsigned((^(forvar177 && reg182)))) ?
                  {{forvar177[(1'h0):(1'h0)],
                          ((7'h43) ?
                              reg168[(3'h5):(3'h5)] : wire157[(4'h9):(1'h0)])},
                      $unsigned(reg170[(3'h7):(2'h3)])} : $signed(wire154[(1'h0):(1'h0)]));
              reg185 = {((8'ha1) ?
                      ((forvar180[(1'h1):(1'h1)] >= $unsigned(wire155)) ?
                          (|(~|(8'ha0))) : $signed((reg163 ?
                              wire154 : wire159))) : ((^~(wire157 && reg174)) & (8'h9c)))};
            end
          for (forvar186 = (1'h0); (forvar186 < (1'h0)); forvar186 = (forvar186 + (1'h1)))
            begin
              reg187 <= wire158[(4'ha):(3'h7)];
            end
          for (forvar188 = (1'h0); (forvar188 < (2'h3)); forvar188 = (forvar188 + (1'h1)))
            begin
              reg189 <= $signed($signed($signed(((~&reg182) | $signed(wire157)))));
              reg190 = ((((-$signed((7'h44))) ?
                  ((wire154 ?
                      reg189 : (8'ha4)) | $unsigned(reg182)) : (^(&wire157))) <<< $signed($signed($signed(wire159)))) >> $unsigned((&reg181[(1'h1):(1'h1)])));
            end
        end
    end
  always
    @(posedge clk) begin
      reg191 <= $unsigned($signed(((!(reg187 ?
          (8'ha8) : reg182)) != reg170[(3'h4):(2'h2)])));
      for (forvar192 = (1'h0); (forvar192 < (2'h2)); forvar192 = (forvar192 + (1'h1)))
        begin
          reg193 = (~|$unsigned($signed(((|wire155) ?
              $unsigned(reg170) : wire160))));
        end
      for (forvar194 = (1'h0); (forvar194 < (2'h2)); forvar194 = (forvar194 + (1'h1)))
        begin
          for (forvar195 = (1'h0); (forvar195 < (2'h2)); forvar195 = (forvar195 + (1'h1)))
            begin
              reg196 <= (|{$signed((!{wire158, forvar192})),
                  $signed((|reg191))});
              reg197 = reg182;
              reg198 = (($signed(($signed(forvar195) <<< $unsigned(reg179))) ?
                  ($signed(reg179) ?
                      ({forvar194} ?
                          (~|wire176) : $signed(reg187)) : (8'ha1)) : $signed(($signed(reg197) ~^ (&reg174)))) <= $signed({forvar192,
                  $signed(reg182[(3'h4):(2'h2)])}));
              reg199 <= wire159;
            end
          for (forvar200 = (1'h0); (forvar200 < (2'h3)); forvar200 = (forvar200 + (1'h1)))
            begin
              reg201 = ((~$unsigned($unsigned(reg199))) ?
                  (~^(reg191[(2'h2):(2'h2)] ?
                      {(~&reg182),
                          (~reg170)} : reg170)) : (reg196 == (^~(((8'hb7) ?
                      reg196 : forvar195) < (~^reg175)))));
              reg202 = (&($signed($unsigned(reg196)) ?
                  $signed(wire160[(2'h3):(2'h2)]) : (~$unsigned($signed(forvar200)))));
            end
          for (forvar203 = (1'h0); (forvar203 < (2'h3)); forvar203 = (forvar203 + (1'h1)))
            begin
              reg204 = ({(((forvar203 >>> forvar203) || reg202) ^~ (~&wire176[(1'h1):(1'h1)])),
                      ((~^(forvar195 ? (8'h9c) : reg201)) ?
                          ((reg201 ? reg196 : reg175) ?
                              (+reg171) : reg191) : ((wire155 <<< reg171) ?
                              $unsigned(wire158) : (-(8'hba))))} ?
                  reg189[(3'h7):(1'h0)] : $unsigned(wire160[(4'hc):(4'hb)]));
            end
          for (forvar205 = (1'h0); (forvar205 < (2'h2)); forvar205 = (forvar205 + (1'h1)))
            begin
              reg206 <= reg170[(3'h7):(3'h5)];
              reg207 <= (~^reg168);
            end
        end
      for (forvar208 = (1'h0); (forvar208 < (1'h0)); forvar208 = (forvar208 + (1'h1)))
        begin
          for (forvar209 = (1'h0); (forvar209 < (1'h1)); forvar209 = (forvar209 + (1'h1)))
            begin
              reg210 <= ((7'h44) ~^ ($unsigned(reg198) ?
                  {$unsigned((forvar208 ? (8'hbe) : reg168)),
                      $signed((+wire155))} : (~^(8'hbe))));
              reg211 <= $signed(($unsigned($signed((wire155 ?
                      reg189 : wire159))) ?
                  ($unsigned((reg204 ~^ reg163)) ?
                      forvar192 : (reg182 ?
                          forvar200[(4'ha):(3'h7)] : wire161)) : wire158));
            end
          if ((reg210[(1'h1):(1'h0)] ?
              ((8'ha7) ?
                  reg171 : $signed(((!(7'h42)) - $unsigned((8'hbd))))) : {$signed(reg201[(4'h8):(3'h7)]),
                  (reg168 + wire157)}))
            begin
              reg212 <= (~&wire157[(1'h0):(1'h0)]);
              reg213 <= reg187;
              reg214 <= (^reg193);
              reg215 <= $unsigned($unsigned((7'h40)));
            end
          else
            begin
              reg216 = (^wire156[(3'h5):(3'h5)]);
              reg217 <= (~({$signed({reg212, reg174})} ^~ wire176));
              reg218 = (^~forvar205[(4'hf):(1'h0)]);
              reg219 <= (($unsigned(($signed(reg193) ?
                      (reg210 ? reg196 : reg213) : {forvar209, wire157})) ?
                  $signed($unsigned($signed(reg218))) : forvar203[(4'ha):(4'h9)]) != $unsigned((-$unsigned($unsigned(reg191)))));
              reg220 <= (wire158 - $signed(reg182[(1'h1):(1'h1)]));
            end
          reg221 <= (&wire155[(3'h5):(3'h4)]);
          for (forvar222 = (1'h0); (forvar222 < (1'h1)); forvar222 = (forvar222 + (1'h1)))
            begin
              reg223 <= ((reg181 ?
                      (~^{(reg174 | reg211),
                          reg201[(2'h3):(1'h0)]}) : (forvar203 ?
                          (reg201[(1'h0):(1'h0)] >= $unsigned(reg219)) : reg179)) ?
                  (($signed(wire154) & {(!reg214), (~|wire176)}) * (({reg206,
                      reg217} & reg207[(3'h7):(2'h3)]) ^ (~&forvar203))) : (reg199[(1'h0):(1'h0)] ?
                      (8'hbf) : $signed(($signed(reg199) ?
                          forvar205[(4'h8):(3'h4)] : $unsigned(reg197)))));
              reg224 = wire158[(4'h8):(2'h3)];
              reg225 <= reg189;
              reg226 <= forvar222[(2'h3):(1'h1)];
              reg227 <= (&(~|{(reg171[(2'h3):(1'h1)] ^~ wire158),
                  ($unsigned(reg204) | reg182[(2'h3):(1'h1)])}));
            end
          for (forvar228 = (1'h0); (forvar228 < (3'h4)); forvar228 = (forvar228 + (1'h1)))
            begin
              reg229 <= reg204;
              reg230 <= {(&$unsigned(((wire176 ^~ reg217) != (~|reg201))))};
              reg231 <= reg181[(1'h0):(1'h0)];
              reg232 = reg191;
              reg233 = $unsigned($unsigned((^$unsigned($signed(reg217)))));
            end
        end
      for (forvar234 = (1'h0); (forvar234 < (2'h2)); forvar234 = (forvar234 + (1'h1)))
        begin
          for (forvar235 = (1'h0); (forvar235 < (1'h1)); forvar235 = (forvar235 + (1'h1)))
            begin
              reg236 = (~^reg197[(2'h3):(2'h2)]);
              reg237 <= (reg193[(2'h3):(2'h3)] < $unsigned((wire154 ?
                  (~^$signed(forvar222)) : reg199[(2'h2):(1'h0)])));
              reg238 = (reg191[(2'h2):(2'h2)] ?
                  $unsigned(((~|(+reg211)) ?
                      $signed(reg217) : {(forvar222 ?
                              reg213 : forvar200)})) : ({($unsigned(reg213) ?
                          ((8'hae) - (8'ha6)) : forvar192)} > (forvar205 ?
                      ($signed(wire160) ?
                          reg232[(2'h2):(2'h2)] : $unsigned(reg171)) : (!{forvar205}))));
            end
          for (forvar239 = (1'h0); (forvar239 < (3'h4)); forvar239 = (forvar239 + (1'h1)))
            begin
              reg240 = reg233;
              reg241 <= reg204;
              reg242 = $signed($unsigned(($signed((^reg220)) >= (&(reg214 != reg206)))));
              reg243 <= reg216[(2'h3):(1'h1)];
              reg244 = reg182[(2'h2):(1'h0)];
            end
          reg245 <= $unsigned((^$signed({reg181, forvar209[(1'h1):(1'h0)]})));
          reg246 <= (reg216 ?
              (~^(reg168 ?
                  $signed((~|(8'ha3))) : ((~&(8'h9e)) - reg240))) : forvar222);
          for (forvar247 = (1'h0); (forvar247 < (1'h0)); forvar247 = (forvar247 + (1'h1)))
            begin
              reg248 <= (reg179 ?
                  $signed(($signed({reg197,
                      reg187}) << {$signed(reg193)})) : reg230);
              reg249 <= forvar200;
              reg250 = reg211;
              reg251 = wire156[(4'h8):(1'h0)];
              reg252 = $signed($unsigned(($signed((wire160 != reg236)) * reg248)));
            end
        end
    end
  assign wire253 = reg243[(3'h7):(3'h4)];
  assign wire254 = $signed(({(&(7'h41)), (-(~^reg220))} ?
                       reg211 : (reg187[(4'hc):(4'h8)] < (wire176[(2'h3):(1'h0)] << $unsigned(wire159)))));
  always
    @(posedge clk) begin
      reg255 <= $signed(reg206[(1'h1):(1'h1)]);
      for (forvar256 = (1'h0); (forvar256 < (1'h0)); forvar256 = (forvar256 + (1'h1)))
        begin
          for (forvar257 = (1'h0); (forvar257 < (2'h3)); forvar257 = (forvar257 + (1'h1)))
            begin
              reg258 = (!reg175);
              reg259 <= {(~^({$signed(reg258), reg243} ?
                      reg189 : ((~reg255) & (reg245 | (8'hb2))))),
                  $unsigned($signed($unsigned(((8'h9d) + (7'h43)))))};
              reg260 = $signed({$signed(reg223[(4'h9):(1'h1)])});
              reg261 <= (~&(~^reg181));
            end
          reg262 <= ((&$signed((~^wire156[(1'h0):(1'h0)]))) || ((((reg255 ?
                  reg227 : reg187) + $signed((8'hb3))) ?
              $signed(reg187[(1'h0):(1'h0)]) : (reg221[(2'h3):(1'h0)] ?
                  (reg191 == reg210) : (^~reg199))) ~^ (^reg237[(2'h3):(1'h1)])));
        end
      reg263 = wire161[(3'h4):(3'h4)];
    end
  assign wire264 = (wire156[(3'h5):(3'h4)] ? reg214[(3'h5):(1'h0)] : reg237);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module383
#(parameter param393 = (((((^(8'hb5)) > (~&(8'hae))) ? (&(^(8'ha8))) : ((-(8'hb9)) ? (~^(8'ha2)) : (~|(8'haa)))) ^ ((~(^(8'hb8))) ? (((8'hbb) > (8'hb1)) ? ((8'hb5) ? (7'h44) : (8'hba)) : ((8'haa) ? (8'hb2) : (8'hb8))) : (((7'h44) ^~ (7'h40)) ? ((8'ha0) ? (8'hb0) : (8'h9c)) : (7'h42)))) >= {((+((8'hb4) ? (8'ha6) : (8'ha0))) ? ((|(8'ha0)) | (8'hba)) : {(+(8'ha5))}), (({(8'ha1), (8'haa)} ? {(8'hb9)} : ((8'ha8) < (8'h9e))) ? (+{(8'hac), (8'hac)}) : (((8'hae) ? (8'hb3) : (8'hb1)) >= ((8'hb5) & (8'ha7))))}), 
parameter param394 = param393)
(y, clk, wire387, wire386, wire385, wire384);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire387;
  input wire [(5'h13):(1'h0)] wire386;
  input wire signed [(4'hb):(1'h0)] wire385;
  input wire signed [(5'h11):(1'h0)] wire384;
  wire [(4'h9):(1'h0)] wire392;
  wire [(5'h12):(1'h0)] wire391;
  wire signed [(4'hc):(1'h0)] wire390;
  wire [(3'h7):(1'h0)] wire389;
  wire [(3'h6):(1'h0)] wire388;
  assign y = {wire392, wire391, wire390, wire389, wire388, (1'h0)};
  assign wire388 = wire385;
  assign wire389 = wire388;
  assign wire390 = (wire388 ?
                       ($unsigned($unsigned(wire384[(4'he):(3'h6)])) ?
                           ((wire385[(4'h8):(3'h4)] ?
                                   (&wire386) : $unsigned(wire384)) ?
                               ($unsigned(wire389) ?
                                   (~^wire389) : $unsigned(wire389)) : $unsigned(wire388)) : wire385[(3'h4):(2'h2)]) : $signed(((wire386[(2'h3):(1'h1)] ?
                           (wire387 ? wire384 : wire386) : (wire385 ?
                               wire385 : wire386)) <<< wire388)));
  assign wire391 = wire386[(3'h4):(1'h1)];
  assign wire392 = wire387[(2'h2):(2'h2)];
endmodule