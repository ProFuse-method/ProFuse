(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(2'h2):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire58;
  wire signed [(3'h5):(1'h0)] wire53;
  wire signed [(4'ha):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire24;
  wire [(3'h7):(1'h0)] wire23;
  wire [(4'h9):(1'h0)] wire22;
  wire signed [(4'hb):(1'h0)] wire21;
  wire signed [(4'h8):(1'h0)] wire19;
  wire signed [(3'h7):(1'h0)] wire4;
  reg [(3'h7):(1'h0)] reg57 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg55 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg28 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg26 = (1'h0);
  assign y = {wire58,
                 wire53,
                 wire29,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire19,
                 wire4,
                 reg57,
                 reg56,
                 reg55,
                 reg28,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire4 = (-$unsigned($unsigned((wire2 ? wire2 : wire1))));
  module5 #() modinst20 (wire19, clk, wire1, wire4, wire3, wire0);
  assign wire21 = {$unsigned((^$unsigned(wire0)))};
  assign wire22 = $unsigned((((wire19 >> wire21) & {wire3}) ?
                      $unsigned(wire4[(2'h2):(2'h2)]) : (wire0[(3'h5):(2'h2)] >> (wire2 <= wire19))));
  assign wire23 = (8'h9d);
  assign wire24 = wire21[(3'h5):(2'h2)];
  assign wire25 = $signed((8'h9f));
  always
    @(posedge clk) begin
      reg26 <= ((^{wire22[(3'h4):(3'h4)]}) ? wire2[(2'h2):(2'h2)] : wire25);
      reg27 <= {$signed(($unsigned(wire23) ?
              $unsigned(wire4) : $signed((8'ha0))))};
      reg28 <= wire0[(1'h0):(1'h0)];
    end
  assign wire29 = (|wire21);
  module30 #() modinst54 (.wire34(wire0), .wire33(wire3), .wire31(reg26), .clk(clk), .wire32(reg27), .y(wire53));
  always
    @(posedge clk) begin
      reg55 <= $signed($unsigned(wire29[(3'h7):(3'h5)]));
      reg56 <= $signed((({wire3} * (8'ha3)) ? (^{reg27}) : {(!wire19)}));
      reg57 <= (-$signed($signed(wire1)));
    end
  module5 #() modinst59 (wire58, clk, wire19, reg56, wire23, reg28);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module30  (y, clk, wire34, wire33, wire32, wire31);
  output wire [(32'h6f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire34;
  input wire [(4'hb):(1'h0)] wire33;
  input wire signed [(3'h6):(1'h0)] wire32;
  input wire signed [(4'h9):(1'h0)] wire31;
  wire [(3'h6):(1'h0)] wire52;
  wire signed [(3'h7):(1'h0)] wire48;
  wire signed [(2'h3):(1'h0)] wire47;
  wire signed [(3'h7):(1'h0)] wire46;
  wire signed [(3'h4):(1'h0)] wire45;
  wire signed [(3'h4):(1'h0)] wire44;
  wire signed [(2'h2):(1'h0)] wire35;
  reg signed [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(3'h5):(1'h0)] reg50 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg49 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg42 = (1'h0);
  reg [(4'hb):(1'h0)] reg41 = (1'h0);
  reg [(3'h4):(1'h0)] reg40 = (1'h0);
  reg [(4'h9):(1'h0)] reg39 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg37 = (1'h0);
  reg [(3'h4):(1'h0)] reg36 = (1'h0);
  assign y = {wire52,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire35,
                 reg51,
                 reg50,
                 reg49,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 (1'h0)};
  assign wire35 = {((wire34 > (wire32 ? wire33 : wire33)) >= wire31)};
  always
    @(posedge clk) begin
      if ({(8'ha8)})
        begin
          reg36 <= wire31[(4'h8):(3'h5)];
        end
      else
        begin
          if ((reg36 ?
              {(-$unsigned(wire33))} : $signed((wire31 ?
                  ((8'had) ? wire31 : wire33) : ((8'haf) ? wire33 : wire33)))))
            begin
              reg36 <= wire32[(2'h3):(1'h0)];
            end
          else
            begin
              reg36 <= wire34;
              reg37 <= wire34;
              reg38 <= wire34;
            end
        end
      if ((~|(+reg36)))
        begin
          reg39 <= (reg36 ~^ $signed((+$unsigned(reg38))));
          if (wire31)
            begin
              reg40 <= reg38;
            end
          else
            begin
              reg40 <= $unsigned($unsigned((wire31 != $unsigned(reg37))));
              reg41 <= $signed(($signed(reg40) ?
                  {$signed(wire35)} : $unsigned(wire33)));
              reg42 <= ((reg37 >= (reg37 | (reg40 ? wire35 : wire32))) ?
                  ($signed(reg38) ?
                      wire35 : (reg37 >= $unsigned(reg41))) : reg41[(4'h8):(2'h3)]);
            end
        end
      else
        begin
          reg39 <= (^~{reg37[(1'h0):(1'h0)]});
          reg40 <= wire33[(1'h1):(1'h1)];
        end
      reg43 <= (^wire31[(2'h2):(1'h1)]);
    end
  assign wire44 = (((|(reg38 ? (8'h9f) : reg39)) ?
                      $unsigned((wire31 | wire33)) : ($signed((8'ha8)) ?
                          (^wire33) : (reg41 ? reg42 : reg43))) | reg42);
  assign wire45 = (+({reg39[(1'h1):(1'h1)]} ?
                      wire34[(3'h4):(3'h4)] : reg41[(4'hb):(2'h3)]));
  assign wire46 = ((|wire32[(3'h6):(2'h3)]) <= $signed($signed($signed(reg41))));
  assign wire47 = wire35[(2'h2):(2'h2)];
  assign wire48 = (^wire45);
  always
    @(posedge clk) begin
      reg49 <= (wire44[(1'h0):(1'h0)] > (~^((^~wire34) ~^ (wire31 ^ wire44))));
      reg50 <= reg36[(2'h2):(2'h2)];
      reg51 <= $unsigned($signed((~^$unsigned(wire44))));
    end
  assign wire52 = $unsigned((~&(wire44[(2'h3):(1'h0)] == reg38[(1'h1):(1'h1)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire9;
  input wire [(3'h7):(1'h0)] wire8;
  input wire [(3'h4):(1'h0)] wire7;
  input wire signed [(4'ha):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire18;
  wire signed [(4'ha):(1'h0)] wire14;
  wire [(4'hb):(1'h0)] wire13;
  wire signed [(3'h5):(1'h0)] wire12;
  wire [(4'hb):(1'h0)] wire11;
  wire signed [(4'ha):(1'h0)] wire10;
  reg signed [(3'h4):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg16 = (1'h0);
  reg [(4'ha):(1'h0)] reg15 = (1'h0);
  assign y = {wire18,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 reg17,
                 reg16,
                 reg15,
                 (1'h0)};
  assign wire10 = (-$signed(wire9));
  assign wire11 = ((+$unsigned((wire6 ?
                      (8'ha1) : wire9))) >>> $signed($unsigned($signed((8'hab)))));
  assign wire12 = wire7[(2'h2):(1'h1)];
  assign wire13 = wire9[(1'h0):(1'h0)];
  assign wire14 = (^~wire7[(1'h1):(1'h1)]);
  always
    @(posedge clk) begin
      reg15 <= ((wire13[(3'h4):(1'h0)] ?
              ((&wire13) ? wire9 : wire14) : $unsigned(((8'hb0) ^~ wire12))) ?
          $signed(wire8) : ($unsigned($unsigned((8'h9e))) >>> ((wire14 >= wire10) > (8'hac))));
      reg16 <= wire8;
      reg17 <= {$signed(wire7[(1'h0):(1'h0)])};
    end
  assign wire18 = $unsigned(wire8[(2'h3):(1'h0)]);
endmodule