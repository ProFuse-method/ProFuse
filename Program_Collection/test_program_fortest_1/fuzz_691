(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param78 = (~|{(~|(~|(8'h9d)))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire76;
  wire [(3'h4):(1'h0)] wire10;
  wire signed [(3'h5):(1'h0)] wire9;
  wire signed [(2'h2):(1'h0)] wire8;
  wire signed [(2'h2):(1'h0)] wire7;
  wire [(4'h9):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  assign y = {wire76, wire10, wire9, wire8, wire7, wire6, wire5, wire4, (1'h0)};
  assign wire4 = $unsigned($unsigned((~(~&wire2))));
  assign wire5 = $unsigned($signed(wire1));
  assign wire6 = (({(8'ha0)} | ($unsigned(wire3) ?
                         (~^(8'h9e)) : $signed((8'haf)))) ?
                     (&$signed(wire4)) : wire1[(4'h8):(1'h1)]);
  assign wire7 = $signed(((wire0 + {wire3}) && wire4[(1'h1):(1'h1)]));
  assign wire8 = ($signed(($unsigned(wire0) ?
                     (|wire3) : (!(8'ha4)))) * $unsigned((|(^wire6))));
  assign wire9 = wire1;
  assign wire10 = $signed(wire1[(1'h1):(1'h1)]);
  module11 #() modinst77 (.wire12(wire4), .wire13(wire6), .y(wire76), .wire14(wire0), .wire15(wire3), .clk(clk));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param75 = (({((8'ha9) ? (8'ha9) : (8'ha3))} ? (8'h9c) : ((^(8'hab)) ? (8'ha9) : ((8'h9f) <<< (8'ha1)))) | (({(8'h9f)} | (&(8'ha2))) > (!((8'haf) || (8'h9d))))))
(y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire15;
  input wire [(4'h8):(1'h0)] wire14;
  input wire [(4'h8):(1'h0)] wire13;
  input wire signed [(4'ha):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire73;
  wire signed [(4'ha):(1'h0)] wire72;
  wire signed [(3'h7):(1'h0)] wire71;
  wire [(4'hb):(1'h0)] wire70;
  wire signed [(4'ha):(1'h0)] wire69;
  wire signed [(2'h2):(1'h0)] wire67;
  wire [(4'ha):(1'h0)] wire48;
  wire signed [(3'h7):(1'h0)] wire47;
  wire signed [(3'h4):(1'h0)] wire46;
  wire signed [(4'ha):(1'h0)] wire45;
  wire [(3'h4):(1'h0)] wire43;
  assign y = {wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 wire67,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire43,
                 (1'h0)};
  module16 #() modinst44 (wire43, clk, wire13, wire12, wire14, wire15);
  assign wire45 = (!{$signed((wire13 > wire13))});
  assign wire46 = ((^(((8'h9c) ^ wire13) != (wire43 ?
                      wire14 : wire14))) != (~((8'ha8) != wire13[(3'h5):(3'h5)])));
  assign wire47 = ((wire43 - ($signed(wire43) ?
                      $unsigned(wire43) : (wire46 ~^ wire43))) * $signed((8'ha4)));
  assign wire48 = $signed($signed((^~wire45[(4'ha):(4'h8)])));
  module49 #() modinst68 (.clk(clk), .wire53(wire43), .y(wire67), .wire50(wire15), .wire52(wire48), .wire51(wire14));
  assign wire69 = wire13;
  assign wire70 = (wire13[(3'h4):(2'h2)] - (+$signed((wire48 ?
                      (8'ha5) : wire67))));
  assign wire71 = ($unsigned($signed((wire13 ? wire48 : wire47))) ?
                      wire13 : $unsigned($unsigned($signed((8'ha8)))));
  assign wire72 = wire48[(1'h1):(1'h1)];
  module49 #() modinst74 (.wire51(wire45), .wire50(wire69), .y(wire73), .wire53(wire71), .clk(clk), .wire52(wire72));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module49  (y, clk, wire53, wire52, wire51, wire50);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire53;
  input wire signed [(4'ha):(1'h0)] wire52;
  input wire [(3'h5):(1'h0)] wire51;
  input wire signed [(4'h8):(1'h0)] wire50;
  wire signed [(3'h6):(1'h0)] wire65;
  wire [(2'h2):(1'h0)] wire62;
  wire [(3'h6):(1'h0)] wire61;
  wire signed [(3'h5):(1'h0)] wire60;
  wire signed [(3'h6):(1'h0)] wire59;
  wire [(4'h9):(1'h0)] wire58;
  wire [(2'h2):(1'h0)] wire57;
  wire [(2'h2):(1'h0)] wire56;
  wire [(4'h8):(1'h0)] wire55;
  wire [(4'hb):(1'h0)] wire54;
  reg [(3'h4):(1'h0)] reg66 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg64 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg63 = (1'h0);
  assign y = {wire65,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 reg66,
                 reg64,
                 reg63,
                 (1'h0)};
  assign wire54 = (8'ha5);
  assign wire55 = ((^~wire50[(3'h5):(2'h3)]) ^~ $signed((wire54[(4'ha):(2'h3)] ?
                      (wire50 ? (8'hae) : wire50) : $unsigned(wire53))));
  assign wire56 = (((^(-wire55)) ?
                          wire51[(2'h2):(2'h2)] : ({(8'ha6)} <<< wire52[(1'h0):(1'h0)])) ?
                      $signed($unsigned(wire51)) : wire55);
  assign wire57 = $signed(($unsigned((~&wire51)) ?
                      (wire52 ?
                          (wire54 && (8'ha8)) : $unsigned(wire55)) : {((8'ha4) ^ wire54)}));
  assign wire58 = wire56;
  assign wire59 = $unsigned((8'hab));
  assign wire60 = ((wire53[(1'h0):(1'h0)] ?
                          wire54[(4'hb):(4'hb)] : wire56[(1'h0):(1'h0)]) ?
                      wire53[(2'h2):(2'h2)] : wire51);
  assign wire61 = wire50[(3'h7):(3'h7)];
  assign wire62 = $unsigned(wire61[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      reg63 <= wire51;
      reg64 <= $unsigned((wire61 ?
          {(wire52 ? wire57 : reg63)} : ({reg63} ?
              wire50[(3'h7):(3'h5)] : $unsigned(wire60))));
    end
  assign wire65 = wire53[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg66 <= $signed(($unsigned($unsigned(wire65)) >> ((&(8'hac)) * {wire58})));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h92):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire20;
  input wire [(3'h4):(1'h0)] wire19;
  input wire signed [(3'h4):(1'h0)] wire18;
  input wire signed [(3'h4):(1'h0)] wire17;
  wire signed [(4'h8):(1'h0)] wire42;
  wire [(4'h9):(1'h0)] wire41;
  wire [(4'h8):(1'h0)] wire30;
  wire [(2'h2):(1'h0)] wire29;
  wire signed [(4'hb):(1'h0)] wire28;
  wire signed [(3'h7):(1'h0)] wire27;
  wire [(4'ha):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire25;
  reg signed [(2'h3):(1'h0)] reg40 = (1'h0);
  reg [(3'h6):(1'h0)] reg39 = (1'h0);
  reg [(4'h8):(1'h0)] reg38 = (1'h0);
  reg [(4'h8):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg34 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg33 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg32 = (1'h0);
  reg [(2'h2):(1'h0)] reg31 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg24 = (1'h0);
  reg [(2'h3):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg22 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg21 = (1'h0);
  assign y = {wire42,
                 wire41,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg21 <= wire19[(2'h3):(1'h0)];
      if (wire20)
        begin
          reg22 <= {wire20[(2'h2):(1'h0)]};
          reg23 <= (reg21[(2'h3):(1'h0)] ?
              $unsigned(((wire19 ? reg21 : (8'ha1)) ?
                  reg21 : {wire19})) : $unsigned(reg21[(3'h6):(2'h3)]));
          reg24 <= {(((&(8'ha4)) >>> wire20[(3'h5):(1'h1)]) ?
                  wire20[(3'h6):(3'h4)] : (wire19[(3'h4):(2'h3)] ?
                      (reg21 ? wire17 : reg23) : reg21))};
        end
      else
        begin
          reg22 <= (+wire17);
          reg23 <= (^~((wire19[(1'h0):(1'h0)] < reg22) ?
              (+$unsigned(reg23)) : $signed($signed(reg21))));
        end
    end
  assign wire25 = wire17;
  assign wire26 = wire18;
  assign wire27 = reg23;
  assign wire28 = reg23[(1'h0):(1'h0)];
  assign wire29 = {{(!(reg23 >>> wire28))}};
  assign wire30 = wire29;
  always
    @(posedge clk) begin
      if (({$signed(((8'h9d) ? (8'haf) : wire29))} ?
          (($unsigned(reg22) << $unsigned(wire25)) << reg23[(1'h0):(1'h0)]) : $signed(reg22)))
        begin
          reg31 <= wire28[(4'h8):(1'h1)];
          if (($unsigned((-$signed(wire17))) > $unsigned(reg24)))
            begin
              reg32 <= $signed({reg24[(1'h0):(1'h0)]});
              reg33 <= reg21;
              reg34 <= (+wire30[(1'h0):(1'h0)]);
            end
          else
            begin
              reg32 <= wire30;
            end
          reg35 <= (wire19[(3'h4):(1'h0)] <<< ($unsigned((reg32 ?
              reg24 : reg33)) <= (8'ha9)));
        end
      else
        begin
          reg31 <= $signed(reg23[(2'h2):(2'h2)]);
          reg32 <= ((reg34 >> ((reg32 ^~ wire20) < wire25[(1'h0):(1'h0)])) * (+(((8'ha9) ?
              reg33 : (8'hae)) + $unsigned(reg22))));
        end
      if (wire20[(3'h4):(1'h0)])
        begin
          reg36 <= $signed(((reg34[(3'h4):(2'h3)] ?
              $unsigned(reg22) : {wire25}) && $signed($unsigned((8'ha4)))));
          reg37 <= wire18;
        end
      else
        begin
          reg36 <= ((($signed(wire26) > reg32[(4'h9):(3'h6)]) ?
                  {reg36} : ((wire30 <= wire28) >> (reg31 >= wire20))) ?
              (wire28 && (reg21[(3'h6):(3'h4)] <= (reg21 | reg24))) : (reg34 ?
                  $signed($signed(reg31)) : $unsigned(reg22)));
          if (($unsigned({reg32}) <= (-{(wire30 ? (8'ha6) : wire18)})))
            begin
              reg37 <= (~&$unsigned((^(^wire18))));
              reg38 <= $unsigned((&$signed($signed(reg37))));
            end
          else
            begin
              reg37 <= wire18;
              reg38 <= (((~^$unsigned(wire27)) <<< reg38) && $unsigned((wire17 ?
                  $unsigned(wire26) : {reg38})));
            end
          reg39 <= $signed(wire25);
        end
      reg40 <= $signed(reg39[(2'h3):(2'h3)]);
    end
  assign wire41 = (reg36[(2'h3):(1'h0)] ?
                      (!$signed($signed(reg21))) : {{wire30[(3'h5):(2'h3)]}});
  assign wire42 = wire41;
endmodule