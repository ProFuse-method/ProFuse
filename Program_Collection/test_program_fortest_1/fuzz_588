(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param75 = (^({(+(8'had))} >= {((8'ha5) + (8'ha3))})))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire3;
  wire signed [(2'h3):(1'h0)] wire73;
  wire [(3'h6):(1'h0)] wire72;
  wire signed [(4'hb):(1'h0)] wire71;
  wire signed [(2'h2):(1'h0)] wire70;
  wire [(2'h2):(1'h0)] wire68;
  wire [(3'h7):(1'h0)] wire4;
  wire [(3'h7):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire66;
  reg signed [(4'h9):(1'h0)] reg69 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg8 = (1'h0);
  assign y = {wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire68,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire66,
                 reg69,
                 reg8,
                 (1'h0)};
  assign wire4 = {$unsigned((8'haa))};
  assign wire5 = wire4[(3'h5):(2'h2)];
  assign wire6 = (|(!{(~wire2)}));
  assign wire7 = (^wire6);
  always
    @(posedge clk) begin
      reg8 <= wire1[(3'h6):(3'h4)];
    end
  module9 #() modinst67 (.wire13(wire0), .wire11(wire7), .y(wire66), .wire10(wire2), .clk(clk), .wire12(reg8));
  assign wire68 = ($unsigned(((~^wire6) != $unsigned(wire3))) - $unsigned(({wire1} != (~|(8'h9c)))));
  always
    @(posedge clk) begin
      reg69 <= $unsigned($signed({wire2[(4'h9):(1'h1)]}));
    end
  assign wire70 = wire3;
  assign wire71 = (~&$signed((~(wire6 & wire7))));
  assign wire72 = (wire1 ? wire4 : $unsigned((|(reg8 ? wire3 : wire70))));
  module9 #() modinst74 (.wire10(wire2), .clk(clk), .wire13(wire71), .wire12(wire0), .wire11(wire66), .y(wire73));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9  (y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire13;
  input wire [(4'ha):(1'h0)] wire12;
  input wire signed [(4'hb):(1'h0)] wire11;
  input wire [(4'ha):(1'h0)] wire10;
  wire signed [(3'h6):(1'h0)] wire64;
  wire [(2'h3):(1'h0)] wire63;
  wire [(4'h8):(1'h0)] wire62;
  wire signed [(4'ha):(1'h0)] wire60;
  wire [(3'h6):(1'h0)] wire40;
  wire signed [(3'h7):(1'h0)] wire39;
  wire signed [(3'h6):(1'h0)] wire38;
  wire [(3'h6):(1'h0)] wire37;
  wire signed [(3'h6):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire15;
  wire signed [(4'hb):(1'h0)] wire14;
  assign y = {wire64,
                 wire63,
                 wire62,
                 wire60,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire35,
                 wire15,
                 wire14,
                 (1'h0)};
  assign wire14 = ($unsigned($signed($unsigned(wire13))) >> ((~|(wire11 ?
                      wire11 : wire13)) || wire11[(3'h4):(3'h4)]));
  assign wire15 = ($unsigned($signed(wire11)) ?
                      (-wire10[(4'h8):(2'h2)]) : $unsigned(wire12));
  module16 #() modinst36 (wire35, clk, wire13, wire12, wire14, wire15);
  assign wire37 = wire14;
  assign wire38 = $unsigned($unsigned((|(wire10 ? wire15 : wire12))));
  assign wire39 = (wire13 ?
                      {((|wire15) << wire38[(3'h4):(1'h1)])} : (^$signed($unsigned(wire35))));
  assign wire40 = wire37;
  module41 #() modinst61 (.wire45(wire13), .y(wire60), .clk(clk), .wire42(wire38), .wire44(wire37), .wire43(wire40));
  assign wire62 = (wire60[(1'h1):(1'h1)] ?
                      (^~$signed((~|wire39))) : (~|wire10[(3'h4):(1'h0)]));
  assign wire63 = $unsigned(($signed($signed(wire11)) ?
                      (~|(wire60 != wire13)) : (&(wire15 ? (8'h9f) : wire14))));
  module41 #() modinst65 (.clk(clk), .wire45(wire11), .y(wire64), .wire43(wire10), .wire42(wire35), .wire44(wire12));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module41  (y, clk, wire45, wire44, wire43, wire42);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire45;
  input wire [(3'h6):(1'h0)] wire44;
  input wire [(2'h3):(1'h0)] wire43;
  input wire [(3'h6):(1'h0)] wire42;
  wire [(4'ha):(1'h0)] wire59;
  wire signed [(3'h6):(1'h0)] wire58;
  wire [(4'h8):(1'h0)] wire57;
  wire [(2'h2):(1'h0)] wire56;
  wire [(3'h4):(1'h0)] wire55;
  wire signed [(3'h5):(1'h0)] wire49;
  wire [(2'h2):(1'h0)] wire47;
  wire [(3'h4):(1'h0)] wire46;
  reg [(2'h2):(1'h0)] reg54 = (1'h0);
  reg [(4'h8):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg52 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg50 = (1'h0);
  reg [(3'h4):(1'h0)] reg48 = (1'h0);
  assign y = {wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire49,
                 wire47,
                 wire46,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg48,
                 (1'h0)};
  assign wire46 = (wire42 >= {wire42[(3'h4):(1'h1)]});
  assign wire47 = $unsigned((wire43[(1'h1):(1'h1)] ?
                      wire43 : wire46[(3'h4):(1'h0)]));
  always
    @(posedge clk) begin
      reg48 <= $signed(wire47);
    end
  assign wire49 = {$signed(($unsigned((8'h9c)) * wire47[(1'h0):(1'h0)]))};
  always
    @(posedge clk) begin
      reg50 <= (~&(wire47[(1'h1):(1'h1)] >> (~|wire43[(1'h0):(1'h0)])));
      if (($signed(wire43[(1'h1):(1'h0)]) ?
          ($signed((8'haa)) ?
              wire49[(1'h0):(1'h0)] : {(wire44 & wire47)}) : {(^~$unsigned(wire46))}))
        begin
          reg51 <= (~|({wire46} >>> (wire43[(2'h3):(2'h3)] | wire44[(2'h3):(2'h3)])));
        end
      else
        begin
          if (reg50[(1'h0):(1'h0)])
            begin
              reg51 <= (wire44 ?
                  wire46[(3'h4):(2'h3)] : (~^wire42[(2'h3):(1'h0)]));
            end
          else
            begin
              reg51 <= wire43;
              reg52 <= $signed((~|reg50));
              reg53 <= ({(8'ha7)} ~^ ((&$signed(wire42)) ?
                  $unsigned($unsigned(reg51)) : $unsigned((reg51 && wire44))));
            end
        end
      reg54 <= wire42[(3'h5):(3'h4)];
    end
  assign wire55 = (^(wire47 >> ($signed((8'ha1)) * (reg50 ~^ reg53))));
  assign wire56 = (wire44[(1'h1):(1'h0)] >>> $signed($unsigned({wire42})));
  assign wire57 = $signed({reg51[(2'h3):(2'h2)]});
  assign wire58 = (-reg50[(1'h1):(1'h0)]);
  assign wire59 = {{$signed((reg48 < reg51))}};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16
#(parameter param34 = (~^{(((8'ha3) ? (8'ha6) : (8'ha9)) <= ((8'ha0) + (8'hac)))}))
(y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire20;
  input wire [(4'ha):(1'h0)] wire19;
  input wire signed [(4'hb):(1'h0)] wire18;
  input wire signed [(2'h2):(1'h0)] wire17;
  wire signed [(4'hb):(1'h0)] wire33;
  wire [(3'h7):(1'h0)] wire32;
  wire signed [(4'hb):(1'h0)] wire31;
  wire signed [(3'h6):(1'h0)] wire26;
  wire [(2'h3):(1'h0)] wire25;
  wire [(4'hb):(1'h0)] wire24;
  reg [(4'ha):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg29 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg28 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg27 = (1'h0);
  reg [(4'ha):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg22 = (1'h0);
  reg [(3'h7):(1'h0)] reg21 = (1'h0);
  assign y = {wire33,
                 wire32,
                 wire31,
                 wire26,
                 wire25,
                 wire24,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg23,
                 reg22,
                 reg21,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire18[(4'ha):(3'h4)])
        begin
          reg21 <= wire20;
        end
      else
        begin
          reg21 <= $signed((|$unsigned((|(8'ha8)))));
        end
      reg22 <= ({wire20[(3'h4):(1'h0)]} >> $signed($signed((wire18 != wire17))));
      reg23 <= wire20;
    end
  assign wire24 = reg21;
  assign wire25 = wire20;
  assign wire26 = ({(~|(+wire18))} == $signed((wire17 - {reg23})));
  always
    @(posedge clk) begin
      reg27 <= reg21;
      reg28 <= wire24;
      if (wire20[(1'h0):(1'h0)])
        begin
          reg29 <= $signed((wire17 < ({wire19} & (!(8'hac)))));
        end
      else
        begin
          reg29 <= wire20;
          reg30 <= $unsigned($unsigned(reg28[(2'h3):(2'h3)]));
        end
    end
  assign wire31 = (((reg30[(4'h9):(3'h4)] ?
                      wire26 : wire26) - $signed($unsigned(wire18))) >>> ({(8'ha5)} ?
                      wire20 : reg30));
  assign wire32 = $unsigned($signed({{reg21}}));
  assign wire33 = (wire26[(3'h4):(1'h0)] ?
                      {reg28[(2'h3):(2'h3)]} : ((8'had) * {$signed((8'ha2))}));
endmodule