(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param41 = (((8'ha1) ? {((8'ha6) >= (8'ha7))} : (((8'ha4) ? (8'ha5) : (8'h9c)) ? {(8'ha1)} : (8'had))) && ({((8'ha9) >> (8'h9f))} ? ((!(8'hab)) ? ((8'ha1) && (8'ha9)) : ((8'haf) ^ (8'hab))) : {((8'ha8) < (8'ha5))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire39;
  wire [(2'h2):(1'h0)] wire8;
  wire signed [(3'h6):(1'h0)] wire7;
  wire signed [(2'h3):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire4;
  reg [(2'h2):(1'h0)] reg6 = (1'h0);
  assign y = {wire39, wire8, wire7, wire5, wire4, reg6, (1'h0)};
  assign wire4 = wire0[(1'h0):(1'h0)];
  assign wire5 = {wire2[(1'h1):(1'h0)]};
  always
    @(posedge clk) begin
      reg6 <= {wire0};
    end
  assign wire7 = ($signed(reg6[(1'h0):(1'h0)]) ?
                     reg6[(2'h2):(1'h0)] : wire5[(1'h0):(1'h0)]);
  assign wire8 = $unsigned($unsigned((wire4 ?
                     wire5[(1'h0):(1'h0)] : (wire2 ? wire2 : (8'hae)))));
  module9 #() modinst40 (wire39, clk, wire1, wire3, wire7, wire0);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param38 = ((((+(8'h9c)) ? (+(8'ha1)) : ((8'ha4) && (8'hab))) ? {(~(8'hb0))} : (((8'ha8) ? (8'h9c) : (8'ha1)) | (^(8'had)))) ? (8'haa) : (^(~&((8'ha3) ? (8'hac) : (8'had))))))
(y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h23):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire13;
  input wire signed [(4'ha):(1'h0)] wire12;
  input wire signed [(3'h6):(1'h0)] wire11;
  input wire signed [(3'h7):(1'h0)] wire10;
  wire [(4'ha):(1'h0)] wire37;
  wire [(3'h5):(1'h0)] wire36;
  wire signed [(2'h2):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire34;
  wire signed [(3'h6):(1'h0)] wire32;
  assign y = {wire37, wire36, wire35, wire34, wire32, (1'h0)};
  module14 #() modinst33 (wire32, clk, wire12, wire11, wire10, wire13);
  assign wire34 = $unsigned($signed(wire10[(2'h2):(2'h2)]));
  assign wire35 = ((|(^~$unsigned(wire12))) ?
                      ((~{(8'had)}) << wire10[(2'h2):(1'h1)]) : {((~^wire10) ?
                              (^~wire11) : wire10[(1'h0):(1'h0)])});
  assign wire36 = $signed(wire10);
  assign wire37 = $signed({{(wire10 ? wire36 : wire34)}});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param31 = (8'ha9))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h57):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire18;
  input wire signed [(2'h2):(1'h0)] wire17;
  input wire [(2'h2):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire15;
  wire [(2'h3):(1'h0)] wire30;
  wire [(4'ha):(1'h0)] wire29;
  wire signed [(4'h8):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire27;
  wire signed [(3'h6):(1'h0)] wire26;
  wire [(3'h7):(1'h0)] wire25;
  wire [(4'hb):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire23;
  wire signed [(3'h7):(1'h0)] wire19;
  reg signed [(2'h3):(1'h0)] reg22 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg20 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire19,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  assign wire19 = wire15;
  always
    @(posedge clk) begin
      reg20 <= $signed({((wire19 && (8'ha1)) ?
              $unsigned(wire15) : (wire15 && wire16))});
      reg21 <= $signed(wire17);
      reg22 <= (wire16 == wire19[(3'h6):(2'h2)]);
    end
  assign wire23 = (wire17 >= {$signed((wire16 ? wire18 : wire15))});
  assign wire24 = {wire19};
  assign wire25 = $unsigned(wire24);
  assign wire26 = (wire18 ?
                      reg20[(2'h2):(1'h1)] : (wire15 ?
                          $unsigned($signed(wire15)) : $signed((wire23 || wire16))));
  assign wire27 = wire25;
  assign wire28 = $unsigned(wire24[(4'ha):(1'h0)]);
  assign wire29 = $unsigned(($signed($unsigned(reg21)) - (!(wire28 * (8'hac)))));
  assign wire30 = wire26;
endmodule