(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h54):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire signed [(2'h2):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire16;
  wire [(4'h8):(1'h0)] wire15;
  wire signed [(3'h5):(1'h0)] wire14;
  wire [(4'h8):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire10;
  wire signed [(3'h5):(1'h0)] wire8;
  wire signed [(2'h2):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire5;
  wire [(2'h2):(1'h0)] wire4;
  reg [(4'h9):(1'h0)] reg12 = (1'h0);
  reg [(3'h4):(1'h0)] reg11 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg6 = (1'h0);
  assign y = {wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire10,
                 wire8,
                 wire7,
                 wire5,
                 wire4,
                 reg12,
                 reg11,
                 reg9,
                 reg6,
                 (1'h0)};
  assign wire4 = $unsigned(wire2);
  assign wire5 = wire4;
  always
    @(posedge clk) begin
      reg6 <= (!{(^~wire4[(1'h1):(1'h1)])});
    end
  assign wire7 = (wire4[(1'h1):(1'h1)] ?
                     (wire4 <= $signed((~wire2))) : (wire2[(1'h0):(1'h0)] ~^ wire1));
  assign wire8 = wire0;
  always
    @(posedge clk) begin
      reg9 <= (reg6 ? $unsigned(wire4) : {$unsigned(reg6[(3'h4):(1'h1)])});
    end
  assign wire10 = $signed(((+$signed(wire7)) && $signed($signed(wire3))));
  always
    @(posedge clk) begin
      reg11 <= ($signed({(8'ha7)}) ?
          (^($unsigned(wire2) ?
              (wire4 ? wire7 : reg9) : reg6)) : $signed(({wire7} > (-reg6))));
      reg12 <= (~reg11[(2'h3):(2'h3)]);
    end
  assign wire13 = (8'ha3);
  assign wire14 = (wire5[(1'h0):(1'h0)] + ($unsigned({wire3}) * (8'ha9)));
  assign wire15 = (^$signed(reg9[(1'h1):(1'h1)]));
  assign wire16 = (~|({(wire8 >> reg12)} ? (-(reg6 ? wire10 : reg11)) : reg12));
endmodule