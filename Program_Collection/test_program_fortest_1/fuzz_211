(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire71;
  wire signed [(3'h7):(1'h0)] wire70;
  wire signed [(3'h7):(1'h0)] wire69;
  wire [(4'ha):(1'h0)] wire68;
  wire [(4'hb):(1'h0)] wire66;
  wire signed [(3'h7):(1'h0)] wire30;
  wire signed [(4'h9):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire28;
  wire signed [(3'h4):(1'h0)] wire27;
  wire [(3'h6):(1'h0)] wire26;
  wire signed [(3'h7):(1'h0)] wire24;
  assign y = {wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire66,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire24,
                 (1'h0)};
  module4 #() modinst25 (.wire7(wire3), .wire6(wire2), .clk(clk), .wire5(wire0), .y(wire24), .wire8(wire1));
  assign wire26 = wire2[(4'h9):(3'h4)];
  assign wire27 = {$signed(((~wire3) ? wire24[(3'h5):(3'h5)] : wire2))};
  assign wire28 = (^~$signed($unsigned((wire24 ? wire27 : wire2))));
  assign wire29 = $signed($unsigned(wire1));
  assign wire30 = wire1;
  module31 #() modinst67 (wire66, clk, wire24, wire3, wire0, wire30);
  assign wire68 = (8'h9f);
  assign wire69 = wire66[(2'h2):(2'h2)];
  assign wire70 = (8'ha9);
  assign wire71 = (^((wire0 ? {wire29} : wire0) ?
                      ((wire27 || wire66) * (~&wire70)) : (((8'haa) ^ wire66) == wire66)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module31
#(parameter param65 = {{(+((8'hac) ? (8'h9f) : (8'haf)))}})
(y, clk, wire35, wire34, wire33, wire32);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire35;
  input wire signed [(4'h9):(1'h0)] wire34;
  input wire signed [(4'ha):(1'h0)] wire33;
  input wire signed [(3'h7):(1'h0)] wire32;
  wire [(3'h6):(1'h0)] wire64;
  wire [(3'h4):(1'h0)] wire60;
  wire [(4'ha):(1'h0)] wire40;
  wire [(3'h4):(1'h0)] wire39;
  reg signed [(3'h4):(1'h0)] reg63 = (1'h0);
  reg [(3'h4):(1'h0)] reg62 = (1'h0);
  reg [(4'h9):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg36 = (1'h0);
  assign y = {wire64,
                 wire60,
                 wire40,
                 wire39,
                 reg63,
                 reg62,
                 reg38,
                 reg37,
                 reg36,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg36 <= $unsigned((~^(-(wire33 ? wire33 : (8'haf)))));
      reg37 <= (~&(^reg36[(1'h0):(1'h0)]));
      reg38 <= (~&(~^$signed((wire35 && reg37))));
    end
  assign wire39 = (~&(&(^~{reg36})));
  assign wire40 = ((~reg38) ?
                      reg36 : (reg37[(3'h4):(2'h3)] ^ (((8'ha0) == wire32) >>> $signed(wire34))));
  module41 #() modinst61 (wire60, clk, wire40, wire33, wire39, wire32);
  always
    @(posedge clk) begin
      reg62 <= wire40;
      reg63 <= (($signed({reg38}) | reg36) > (wire34 >>> reg38[(4'h8):(1'h1)]));
    end
  assign wire64 = (~reg37[(3'h5):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire8;
  input wire signed [(4'h9):(1'h0)] wire7;
  input wire signed [(4'ha):(1'h0)] wire6;
  input wire signed [(3'h4):(1'h0)] wire5;
  wire [(3'h7):(1'h0)] wire23;
  wire signed [(3'h5):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire17;
  wire [(4'h8):(1'h0)] wire11;
  wire signed [(3'h4):(1'h0)] wire10;
  wire signed [(2'h2):(1'h0)] wire9;
  reg signed [(2'h2):(1'h0)] reg21 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg20 = (1'h0);
  reg [(2'h3):(1'h0)] reg16 = (1'h0);
  reg [(4'h9):(1'h0)] reg15 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg14 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg13 = (1'h0);
  reg [(2'h2):(1'h0)] reg12 = (1'h0);
  assign y = {wire23,
                 wire22,
                 wire19,
                 wire18,
                 wire17,
                 wire11,
                 wire10,
                 wire9,
                 reg21,
                 reg20,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 (1'h0)};
  assign wire9 = wire6[(1'h1):(1'h1)];
  assign wire10 = ($unsigned($signed(wire8)) | wire9);
  assign wire11 = wire8;
  always
    @(posedge clk) begin
      if (((wire8[(3'h5):(2'h3)] ?
              ($unsigned((8'ha1)) ? wire9 : wire10) : wire5[(1'h1):(1'h0)]) ?
          wire9[(1'h1):(1'h1)] : (^~((~^wire5) ?
              (|wire10) : wire7[(4'h8):(2'h2)]))))
        begin
          reg12 <= {(~|(|((8'haa) <<< wire8)))};
        end
      else
        begin
          if ($unsigned(wire9[(1'h1):(1'h1)]))
            begin
              reg12 <= {wire11[(2'h2):(2'h2)]};
            end
          else
            begin
              reg12 <= ($signed((^~{reg12})) ?
                  wire5[(1'h0):(1'h0)] : (($signed(reg12) >> (~&(8'had))) ?
                      wire10[(1'h0):(1'h0)] : wire10));
              reg13 <= $signed($unsigned($unsigned($signed(wire10))));
            end
          reg14 <= wire5[(3'h4):(2'h2)];
          reg15 <= {(wire11[(2'h3):(2'h3)] <<< (8'hae))};
        end
      reg16 <= ($signed(wire10) & wire7[(3'h4):(2'h2)]);
    end
  assign wire17 = ((|$signed(wire11[(2'h3):(1'h0)])) >= reg13[(1'h1):(1'h0)]);
  assign wire18 = reg16;
  assign wire19 = (((wire7[(3'h4):(3'h4)] ?
                      wire6 : reg14) * ((wire10 || wire18) ^~ reg15[(3'h4):(1'h1)])) ^ ($signed((reg15 ?
                          reg12 : wire17)) ?
                      $unsigned(((8'had) ? (8'h9d) : (8'ha8))) : ((reg16 ?
                          wire17 : reg15) >= wire7)));
  always
    @(posedge clk) begin
      reg20 <= ({({(8'h9c)} != wire7)} >> (+$signed(reg12[(1'h1):(1'h1)])));
      reg21 <= (8'hac);
    end
  assign wire22 = (({(reg16 >>> wire9)} ?
                          (reg15[(4'h8):(4'h8)] - wire5) : ((8'ha5) ?
                              reg13[(2'h2):(1'h0)] : (~|wire8))) ?
                      wire18[(4'hb):(2'h2)] : $signed($signed(wire11)));
  assign wire23 = wire8[(1'h1):(1'h1)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module41
#(parameter param59 = {(+(|((8'ha8) ? (8'h9f) : (8'ha2))))})
(y, clk, wire45, wire44, wire43, wire42);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire45;
  input wire [(4'ha):(1'h0)] wire44;
  input wire [(3'h4):(1'h0)] wire43;
  input wire [(3'h4):(1'h0)] wire42;
  wire [(3'h5):(1'h0)] wire58;
  wire signed [(3'h4):(1'h0)] wire57;
  wire signed [(4'ha):(1'h0)] wire56;
  wire signed [(4'ha):(1'h0)] wire55;
  wire signed [(3'h7):(1'h0)] wire54;
  wire signed [(2'h2):(1'h0)] wire53;
  wire signed [(3'h4):(1'h0)] wire52;
  wire signed [(3'h5):(1'h0)] wire51;
  wire signed [(2'h2):(1'h0)] wire50;
  wire signed [(4'ha):(1'h0)] wire49;
  wire signed [(3'h4):(1'h0)] wire48;
  wire signed [(3'h4):(1'h0)] wire46;
  reg [(2'h3):(1'h0)] reg47 = (1'h0);
  assign y = {wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire46,
                 reg47,
                 (1'h0)};
  assign wire46 = $signed((!({wire43} ^~ wire45[(1'h0):(1'h0)])));
  always
    @(posedge clk) begin
      reg47 <= (+wire43);
    end
  assign wire48 = (8'ha7);
  assign wire49 = ($unsigned(wire48[(1'h1):(1'h1)]) ?
                      {((reg47 + wire43) == $signed((8'ha6)))} : ($signed(wire43[(2'h2):(1'h1)]) * $signed((8'h9c))));
  assign wire50 = ($unsigned(wire48[(2'h3):(1'h0)]) <<< (({reg47} | (+wire43)) ?
                      $signed($signed(reg47)) : wire43[(1'h0):(1'h0)]));
  assign wire51 = ($unsigned($unsigned((reg47 << reg47))) && (~&(^~(wire50 ?
                      wire42 : wire45))));
  assign wire52 = wire43[(2'h3):(1'h1)];
  assign wire53 = ((wire48[(1'h1):(1'h1)] && wire46) ^~ $signed((^~wire49[(1'h0):(1'h0)])));
  assign wire54 = wire49[(3'h7):(2'h2)];
  assign wire55 = (+wire54[(2'h2):(1'h0)]);
  assign wire56 = (wire42 ? (wire45 ? wire48 : wire54) : wire54[(3'h5):(2'h2)]);
  assign wire57 = reg47;
  assign wire58 = $unsigned($unsigned(wire53[(1'h0):(1'h0)]));
endmodule