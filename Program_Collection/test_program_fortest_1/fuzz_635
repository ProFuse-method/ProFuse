(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire29;
  wire [(4'hb):(1'h0)] wire27;
  wire signed [(3'h5):(1'h0)] wire13;
  wire [(2'h2):(1'h0)] wire6;
  reg [(4'h9):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg11 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg10 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg9 = (1'h0);
  reg [(3'h5):(1'h0)] reg8 = (1'h0);
  reg [(2'h3):(1'h0)] reg7 = (1'h0);
  reg [(4'h9):(1'h0)] reg5 = (1'h0);
  reg [(3'h5):(1'h0)] reg4 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire27,
                 wire13,
                 wire6,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= wire0[(1'h1):(1'h1)];
    end
  always
    @(posedge clk) begin
      reg5 <= (wire0[(1'h0):(1'h0)] | wire3[(3'h7):(1'h0)]);
    end
  assign wire6 = $signed(wire0[(2'h2):(2'h2)]);
  always
    @(posedge clk) begin
      if ($unsigned(($signed($unsigned(wire2)) >>> $unsigned((wire3 ?
          wire3 : reg4)))))
        begin
          if ({($unsigned($signed(wire2)) ?
                  (reg5[(1'h0):(1'h0)] ?
                      (wire6 ? reg5 : wire2) : $unsigned(wire3)) : wire3)})
            begin
              reg7 <= ({(~&wire3[(3'h7):(2'h3)])} >>> wire2[(2'h3):(2'h2)]);
              reg8 <= reg5[(3'h4):(2'h2)];
              reg9 <= $unsigned((~|($signed(wire3) == reg7)));
            end
          else
            begin
              reg7 <= (^~((reg4[(2'h2):(2'h2)] ?
                  reg5[(2'h3):(1'h1)] : $unsigned((8'ha0))) == $unsigned((-wire3))));
              reg8 <= {(~|$signed((reg5 ? reg5 : reg9)))};
            end
        end
      else
        begin
          reg7 <= ($unsigned((|((8'ha1) ? wire2 : reg9))) ?
              $signed(wire0[(2'h3):(2'h3)]) : (^wire3));
        end
      if ($signed((8'ha2)))
        begin
          reg10 <= $unsigned((~^$signed((reg9 >>> wire2))));
          reg11 <= (+((!$signed(reg7)) >>> (-(wire6 ? reg8 : wire3))));
          reg12 <= wire1;
        end
      else
        begin
          reg10 <= $signed(($signed(wire3) != reg12[(3'h6):(1'h1)]));
          reg11 <= ({((reg7 ^~ reg11) ?
                      wire6[(1'h0):(1'h0)] : wire0[(1'h1):(1'h1)])} ?
              wire2 : $unsigned((wire2[(4'ha):(1'h0)] & reg4[(1'h1):(1'h1)])));
        end
    end
  assign wire13 = reg9[(1'h0):(1'h0)];
  module14 #() modinst28 (.clk(clk), .wire17(reg12), .y(wire27), .wire16(wire2), .wire15(wire3), .wire18(reg5));
  assign wire29 = (~&(reg8 ? (-$unsigned(wire13)) : reg10[(2'h2):(2'h2)]));
  assign wire30 = ($signed((reg7 ? $signed(wire29) : reg5[(4'h9):(3'h4)])) ?
                      $unsigned(({wire0} ?
                          (|reg4) : (reg12 <= reg11))) : wire0);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire18;
  input wire signed [(2'h2):(1'h0)] wire17;
  input wire signed [(3'h5):(1'h0)] wire16;
  input wire signed [(3'h7):(1'h0)] wire15;
  wire signed [(3'h6):(1'h0)] wire26;
  wire [(2'h3):(1'h0)] wire25;
  wire signed [(4'h9):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire23;
  wire signed [(4'h9):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire21;
  wire signed [(4'h9):(1'h0)] wire20;
  wire [(4'hb):(1'h0)] wire19;
  assign y = {wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 (1'h0)};
  assign wire19 = wire16[(1'h0):(1'h0)];
  assign wire20 = (($unsigned((+wire19)) ? (^~wire16) : wire15[(2'h3):(2'h2)]) ?
                      $signed(wire18[(3'h6):(3'h5)]) : ((|((8'ha5) && wire15)) ^~ $signed((wire16 ?
                          wire15 : wire15))));
  assign wire21 = (+((!wire15) ?
                      (((8'ha5) * (8'haa)) ^ $signed(wire19)) : ($unsigned((8'h9e)) ?
                          (8'haf) : (8'ha4))));
  assign wire22 = wire19[(1'h1):(1'h1)];
  assign wire23 = wire19[(3'h7):(3'h7)];
  assign wire24 = ($signed($unsigned(wire18)) ?
                      (({wire16} - $signed(wire15)) > ((^~wire15) >> (wire18 | wire18))) : {wire21});
  assign wire25 = $signed(wire19[(4'h8):(3'h7)]);
  assign wire26 = {$signed(wire23)};
endmodule