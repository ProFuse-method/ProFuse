(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h63):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire3;
  wire [(3'h4):(1'h0)] wire86;
  wire [(2'h3):(1'h0)] wire85;
  wire [(3'h7):(1'h0)] wire84;
  wire [(3'h5):(1'h0)] wire83;
  wire signed [(3'h5):(1'h0)] wire4;
  wire [(4'hb):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire73;
  wire signed [(3'h6):(1'h0)] wire75;
  wire [(4'ha):(1'h0)] wire77;
  wire signed [(4'hb):(1'h0)] wire79;
  wire signed [(3'h7):(1'h0)] wire80;
  wire [(4'h8):(1'h0)] wire81;
  reg [(4'hb):(1'h0)] reg76 = (1'h0);
  assign y = {wire86,
                 wire85,
                 wire84,
                 wire83,
                 wire4,
                 wire5,
                 wire73,
                 wire75,
                 wire77,
                 wire79,
                 wire80,
                 wire81,
                 reg76,
                 (1'h0)};
  assign wire4 = (^$unsigned(((-wire0) >= wire3)));
  assign wire5 = $signed($signed($signed((wire1 ~^ wire0))));
  module6 #() modinst74 (.wire7(wire5), .wire10(wire2), .wire8(wire3), .y(wire73), .clk(clk), .wire9(wire4));
  assign wire75 = (~&(wire73[(3'h4):(1'h1)] ?
                      (-{wire73}) : ($unsigned(wire5) ?
                          (^wire3) : $unsigned(wire1))));
  always
    @(posedge clk) begin
      reg76 <= wire73;
    end
  module11 #() modinst78 (.wire15(wire5), .wire12(wire4), .y(wire77), .wire13(wire0), .wire14(wire73), .clk(clk));
  assign wire79 = $signed($unsigned(wire2[(4'h9):(3'h7)]));
  assign wire80 = (~^$unsigned(wire4));
  module6 #() modinst82 (.wire7(wire1), .clk(clk), .y(wire81), .wire8(reg76), .wire9(wire2), .wire10(wire79));
  assign wire83 = {wire4[(2'h3):(1'h1)]};
  assign wire84 = (($signed((wire5 == wire5)) ?
                          $signed($unsigned(wire83)) : (+wire75)) ?
                      $unsigned(wire5[(1'h0):(1'h0)]) : (wire83[(2'h3):(2'h2)] ?
                          {$unsigned(wire77)} : ((+wire83) ?
                              wire4[(2'h3):(1'h1)] : (wire80 * wire5))));
  assign wire85 = (+(!(8'haa)));
  assign wire86 = wire79[(4'h8):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param72 = (|((~&(~&(8'hac))) <= (^~((8'h9e) >>> (8'ha2))))))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h91):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire signed [(2'h3):(1'h0)] wire9;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire71;
  wire [(3'h7):(1'h0)] wire70;
  wire [(3'h6):(1'h0)] wire69;
  wire [(2'h3):(1'h0)] wire68;
  wire [(4'hb):(1'h0)] wire67;
  wire signed [(4'hb):(1'h0)] wire61;
  wire [(4'h9):(1'h0)] wire59;
  wire [(4'ha):(1'h0)] wire57;
  wire signed [(4'h9):(1'h0)] wire34;
  wire signed [(4'hb):(1'h0)] wire33;
  wire [(4'h8):(1'h0)] wire31;
  reg signed [(4'hb):(1'h0)] reg66 = (1'h0);
  reg [(4'hb):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg64 = (1'h0);
  reg [(4'h9):(1'h0)] reg63 = (1'h0);
  reg [(4'hb):(1'h0)] reg62 = (1'h0);
  assign y = {wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire61,
                 wire59,
                 wire57,
                 wire34,
                 wire33,
                 wire31,
                 reg66,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 (1'h0)};
  module11 #() modinst32 (.clk(clk), .wire14(wire10), .wire13(wire8), .y(wire31), .wire15(wire7), .wire12(wire9));
  assign wire33 = wire7[(3'h6):(3'h6)];
  assign wire34 = $signed(wire33[(1'h1):(1'h1)]);
  module35 #() modinst58 (.wire38(wire10), .wire37(wire31), .wire36(wire8), .y(wire57), .wire39(wire9), .clk(clk));
  module11 #() modinst60 (.clk(clk), .wire15(wire34), .wire13(wire7), .wire12(wire9), .wire14(wire57), .y(wire59));
  assign wire61 = (~|wire34);
  always
    @(posedge clk) begin
      reg62 <= ((($signed(wire8) || wire9) ?
          ((wire59 ?
              wire33 : (8'hab)) ~^ $unsigned((8'ha7))) : wire57[(4'h8):(1'h1)]) ~^ (8'hac));
      if (($signed($signed($signed(wire59))) - {{(wire9 ? wire33 : wire61)}}))
        begin
          if (wire61[(4'h9):(3'h4)])
            begin
              reg63 <= wire59[(4'h9):(3'h4)];
            end
          else
            begin
              reg63 <= $unsigned({(~|$unsigned(wire57))});
            end
          reg64 <= (~^wire59);
          if ($signed((|{reg64[(1'h1):(1'h1)]})))
            begin
              reg65 <= wire61;
            end
          else
            begin
              reg65 <= (wire33 >= ((wire9 ^~ (-wire8)) == reg64));
            end
        end
      else
        begin
          reg63 <= ({$signed((+wire8))} ?
              $signed((wire8 ?
                  wire33[(1'h0):(1'h0)] : wire9)) : $unsigned($signed((+wire57))));
          reg64 <= wire33;
        end
      reg66 <= ($unsigned($signed($signed(wire34))) && (~&{(wire57 <= wire7)}));
    end
  assign wire67 = ({wire33[(2'h2):(1'h1)]} ?
                      wire9 : $unsigned($signed($unsigned(wire7))));
  assign wire68 = ($signed(wire9) ?
                      ({wire33[(3'h4):(2'h3)]} ?
                          ((8'h9e) ?
                              reg65 : wire57[(2'h3):(1'h1)]) : $signed($signed((8'h9f)))) : $signed($signed($unsigned(wire7))));
  assign wire69 = (+$signed($signed({reg66})));
  assign wire70 = wire7[(4'h9):(3'h7)];
  assign wire71 = $signed($unsigned(((-reg65) ?
                      $signed(wire9) : (wire57 ? wire34 : wire34))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module35  (y, clk, wire39, wire38, wire37, wire36);
  output wire [(32'h63):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire39;
  input wire signed [(2'h3):(1'h0)] wire38;
  input wire [(4'h8):(1'h0)] wire37;
  input wire signed [(4'ha):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire56;
  wire signed [(2'h3):(1'h0)] wire55;
  wire [(4'h9):(1'h0)] wire46;
  wire [(4'h9):(1'h0)] wire45;
  wire signed [(2'h2):(1'h0)] wire40;
  reg [(3'h7):(1'h0)] reg54 = (1'h0);
  reg [(3'h5):(1'h0)] reg53 = (1'h0);
  reg [(3'h7):(1'h0)] reg52 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg51 = (1'h0);
  reg [(3'h4):(1'h0)] reg50 = (1'h0);
  reg [(4'h9):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  reg [(2'h2):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg44 = (1'h0);
  reg [(3'h4):(1'h0)] reg43 = (1'h0);
  reg [(4'h8):(1'h0)] reg42 = (1'h0);
  reg [(3'h4):(1'h0)] reg41 = (1'h0);
  assign y = {wire56,
                 wire55,
                 wire46,
                 wire45,
                 wire40,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 (1'h0)};
  assign wire40 = ($unsigned(wire39) <<< ($unsigned((wire36 * wire37)) <<< {(wire36 ?
                          wire36 : wire37)}));
  always
    @(posedge clk) begin
      reg41 <= ($signed(((8'ha7) >= (~&wire37))) ?
          $signed((8'haa)) : ($signed(wire40) <<< wire38));
      if ($unsigned($signed({((8'h9d) ? wire36 : wire40)})))
        begin
          reg42 <= ($unsigned((reg41 >> $signed((8'hab)))) ?
              $unsigned((8'haa)) : (8'hab));
          reg43 <= (reg41 ?
              (&wire40[(1'h0):(1'h0)]) : ((-$unsigned(wire38)) ?
                  {wire39[(2'h3):(2'h2)]} : wire39[(1'h1):(1'h0)]));
        end
      else
        begin
          reg42 <= ((wire39[(1'h0):(1'h0)] ?
                  (~&wire40[(2'h2):(1'h1)]) : $unsigned(wire40[(1'h1):(1'h0)])) ?
              $unsigned((|$unsigned(wire40))) : ((!(8'h9c)) ?
                  ((!reg43) > ((8'ha3) ? wire36 : (8'haf))) : wire37));
        end
      reg44 <= $unsigned($signed((wire37[(2'h3):(2'h2)] ?
          (wire38 ? wire39 : wire37) : (reg42 | wire39))));
    end
  assign wire45 = (8'ha6);
  assign wire46 = ((wire45[(4'h9):(4'h9)] != wire45) ?
                      wire38 : $unsigned({(wire37 > (8'had))}));
  always
    @(posedge clk) begin
      if ((+reg42[(3'h5):(3'h5)]))
        begin
          reg47 <= ({(^$signed(wire37))} != ($unsigned((wire40 - reg42)) == {(8'h9f)}));
          reg48 <= wire46;
        end
      else
        begin
          reg47 <= $unsigned(($signed({wire37}) < wire40));
        end
      reg49 <= reg44;
      if (wire37[(3'h5):(1'h1)])
        begin
          reg50 <= wire38;
          if (((wire39 | $unsigned($unsigned(reg41))) ~^ $unsigned((8'ha3))))
            begin
              reg51 <= ($signed((((8'haa) > reg47) <<< (8'ha4))) <= (!$signed((~&wire37))));
              reg52 <= ($unsigned(reg50[(3'h4):(1'h0)]) ~^ reg43);
              reg53 <= (~^(((wire45 ?
                  reg43 : (8'haa)) > (reg50 << reg51)) | reg42));
            end
          else
            begin
              reg51 <= (!$unsigned(reg47[(1'h1):(1'h1)]));
              reg52 <= reg41;
              reg53 <= $unsigned({reg53[(3'h4):(2'h3)]});
            end
        end
      else
        begin
          reg50 <= (|(-$signed((reg43 >= wire40))));
        end
    end
  always
    @(posedge clk) begin
      reg54 <= $unsigned(({$unsigned(wire38)} ?
          {$signed(reg51)} : (+(!reg49))));
    end
  assign wire55 = reg54;
  assign wire56 = reg48;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param30 = ((~&(((8'hae) ? (8'haf) : (8'h9c)) ^~ ((8'ha1) ? (8'ha0) : (8'ha4)))) ? {(~|((8'haf) ? (8'h9e) : (8'ha2)))} : ((((8'haa) ? (8'h9c) : (8'ha8)) ? ((8'ha1) - (8'h9e)) : (^(8'ha1))) ? (((8'hac) ~^ (8'hb0)) >>> ((8'hb0) ? (8'ha5) : (8'ha3))) : (~^((8'ha9) ? (8'h9d) : (8'had))))))
(y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire15;
  input wire [(4'ha):(1'h0)] wire14;
  input wire signed [(4'hb):(1'h0)] wire13;
  input wire signed [(2'h2):(1'h0)] wire12;
  wire signed [(4'ha):(1'h0)] wire29;
  wire signed [(3'h7):(1'h0)] wire28;
  wire signed [(2'h2):(1'h0)] wire25;
  wire signed [(3'h7):(1'h0)] wire24;
  wire signed [(3'h5):(1'h0)] wire23;
  wire signed [(2'h2):(1'h0)] wire22;
  wire [(4'h9):(1'h0)] wire21;
  reg [(4'h8):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg20 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg19 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg18 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg17 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg16 = (1'h0);
  assign y = {wire29,
                 wire28,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 reg27,
                 reg26,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg16 <= $unsigned($signed(wire14[(3'h4):(1'h1)]));
      if ($unsigned($signed(reg16[(4'ha):(1'h0)])))
        begin
          reg17 <= $signed((({(8'ha5)} ?
              $signed(wire14) : {wire14}) || wire14[(2'h3):(1'h0)]));
          reg18 <= $signed((wire13[(3'h5):(2'h2)] <<< $signed((~wire14))));
          reg19 <= reg18;
        end
      else
        begin
          reg17 <= {wire12};
          reg18 <= $unsigned(({wire15} ? (8'ha9) : wire13[(2'h3):(1'h1)]));
          reg19 <= $unsigned((8'ha6));
        end
    end
  always
    @(posedge clk) begin
      reg20 <= ({wire14} ?
          (reg17 | reg16) : ($signed($unsigned((8'ha5))) ?
              {$unsigned(wire13)} : wire14));
    end
  assign wire21 = wire12;
  assign wire22 = ((^(-reg16)) ?
                      (+{$unsigned(reg19)}) : (reg19[(1'h0):(1'h0)] ?
                          {(wire15 ?
                                  (8'h9e) : wire12)} : reg18[(1'h1):(1'h1)]));
  assign wire23 = (reg20 ? wire12 : (reg16 >= wire12));
  assign wire24 = $unsigned(wire22[(1'h1):(1'h0)]);
  assign wire25 = reg16;
  always
    @(posedge clk) begin
      reg26 <= wire24;
      reg27 <= ($unsigned(({reg26} && $signed(wire22))) | $unsigned((-$signed(wire22))));
    end
  assign wire28 = {$signed(wire21[(3'h4):(3'h4)])};
  assign wire29 = ((&{(wire13 ? wire25 : wire24)}) || $unsigned((~&(-reg19))));
endmodule