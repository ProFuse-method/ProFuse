(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire9;
  wire signed [(3'h6):(1'h0)] wire8;
  wire [(4'hb):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire4;
  reg signed [(3'h5):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg14 = (1'h0);
  reg [(3'h5):(1'h0)] reg13 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg12 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg11 = (1'h0);
  reg [(4'h9):(1'h0)] reg10 = (1'h0);
  reg [(3'h5):(1'h0)] reg7 = (1'h0);
  reg [(2'h3):(1'h0)] reg6 = (1'h0);
  assign y = {wire9,
                 wire8,
                 wire5,
                 wire4,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = $unsigned((-($unsigned((8'ha6)) >= $unsigned(wire2))));
  assign wire5 = (($unsigned((wire1 ? (8'h9c) : wire2)) ?
                         ((-wire0) ?
                             wire4[(2'h3):(1'h0)] : (wire3 ?
                                 wire3 : wire4)) : $unsigned(wire4[(3'h4):(3'h4)])) ?
                     (((wire3 < wire2) ?
                             $signed(wire2) : (wire3 ? wire2 : wire3)) ?
                         $unsigned((^~wire3)) : wire0) : (&$signed((wire3 ~^ wire3))));
  always
    @(posedge clk) begin
      reg6 <= (wire3 ?
          ($unsigned($signed(wire3)) <= wire5) : {$unsigned((wire3 ?
                  wire2 : wire4))});
      reg7 <= (wire0[(1'h0):(1'h0)] >= (($signed((8'h9c)) ^~ (wire4 ?
          wire2 : (8'h9e))) >> wire4));
    end
  assign wire8 = wire2;
  assign wire9 = (~&reg6);
  always
    @(posedge clk) begin
      reg10 <= wire8;
      reg11 <= (~($signed($unsigned(wire5)) ^~ $unsigned((reg10 ~^ wire4))));
      reg12 <= ($signed((8'ha1)) ? wire9[(3'h4):(2'h3)] : reg6);
    end
  always
    @(posedge clk) begin
      reg13 <= wire1;
      reg14 <= {(&(wire2 <<< reg13[(2'h2):(1'h0)]))};
      if ((8'hae))
        begin
          reg15 <= $signed((-(~&$unsigned((8'haf)))));
        end
      else
        begin
          reg15 <= $unsigned($signed({(~^wire1)}));
        end
    end
endmodule