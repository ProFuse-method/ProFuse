(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param49 = ((&((8'ha7) ? {(8'hae)} : {(8'h9e)})) ? ((((8'hb0) ? (8'h9c) : (8'ha0)) ? (^~(8'ha9)) : ((8'h9c) ? (8'ha1) : (8'hac))) ? (~&((8'had) >>> (8'ha8))) : (-{(8'ha4)})) : ((((8'haf) ? (8'had) : (8'h9d)) ? ((8'ha2) ? (8'haa) : (8'ha5)) : ((8'haa) ? (8'ha4) : (8'ha4))) >> ((8'h9e) ? (|(8'ha4)) : {(8'ha2)}))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(3'h5):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire48;
  wire [(2'h3):(1'h0)] wire47;
  wire signed [(4'ha):(1'h0)] wire46;
  wire signed [(2'h2):(1'h0)] wire45;
  wire signed [(2'h3):(1'h0)] wire42;
  wire [(3'h4):(1'h0)] wire41;
  wire signed [(2'h2):(1'h0)] wire39;
  wire [(4'h9):(1'h0)] wire7;
  wire [(4'h9):(1'h0)] wire4;
  reg [(3'h6):(1'h0)] reg44 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg43 = (1'h0);
  reg [(4'ha):(1'h0)] reg6 = (1'h0);
  reg [(4'h8):(1'h0)] reg5 = (1'h0);
  assign y = {wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire42,
                 wire41,
                 wire39,
                 wire7,
                 wire4,
                 reg44,
                 reg43,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = $unsigned(wire2);
  always
    @(posedge clk) begin
      reg5 <= wire3[(3'h7):(3'h7)];
      reg6 <= (^$unsigned(wire0[(3'h4):(1'h1)]));
    end
  assign wire7 = wire0[(1'h1):(1'h1)];
  module8 #() modinst40 (wire39, clk, wire1, wire2, wire4, wire7);
  assign wire41 = $signed({($unsigned(wire1) ^ $unsigned(wire7))});
  assign wire42 = (&wire41[(2'h3):(2'h2)]);
  always
    @(posedge clk) begin
      reg43 <= ($signed(((8'ha5) ? $unsigned(wire3) : (wire0 < (8'ha6)))) ?
          ($unsigned($unsigned(reg6)) ^~ $unsigned(wire39[(1'h1):(1'h0)])) : reg5[(3'h5):(3'h4)]);
      reg44 <= $signed($unsigned((~^reg43)));
    end
  assign wire45 = (wire7 > $signed($signed($signed(wire39))));
  assign wire46 = $unsigned($signed((+$unsigned((8'ha3)))));
  assign wire47 = $signed({$unsigned($unsigned((8'haa)))});
  assign wire48 = wire4[(3'h4):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h64):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire12;
  input wire signed [(3'h7):(1'h0)] wire11;
  input wire signed [(4'h9):(1'h0)] wire10;
  input wire [(4'h9):(1'h0)] wire9;
  wire [(3'h4):(1'h0)] wire38;
  wire signed [(4'hb):(1'h0)] wire37;
  wire [(3'h6):(1'h0)] wire36;
  wire signed [(4'h8):(1'h0)] wire35;
  wire signed [(2'h3):(1'h0)] wire34;
  wire [(4'h8):(1'h0)] wire32;
  wire signed [(4'h9):(1'h0)] wire20;
  wire [(4'ha):(1'h0)] wire19;
  wire signed [(2'h3):(1'h0)] wire18;
  wire signed [(4'hb):(1'h0)] wire13;
  reg [(3'h7):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg16 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg14 = (1'h0);
  assign y = {wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire32,
                 wire20,
                 wire19,
                 wire18,
                 wire13,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 (1'h0)};
  assign wire13 = (~|(~&((wire10 ? wire9 : wire9) < (wire9 != (8'ha7)))));
  always
    @(posedge clk) begin
      if ($signed($signed($signed(wire13[(4'h9):(4'h8)]))))
        begin
          reg14 <= wire10[(3'h4):(1'h1)];
          reg15 <= wire9[(4'h8):(2'h3)];
        end
      else
        begin
          reg14 <= $unsigned(wire11[(3'h7):(3'h7)]);
          reg15 <= (-reg14);
        end
      if (((^$signed((reg15 > reg15))) >>> ($unsigned(wire13[(3'h7):(2'h3)]) - wire9)))
        begin
          reg16 <= $signed((wire9 ?
              (!wire11[(2'h2):(2'h2)]) : (reg14 >>> (wire12 & reg15))));
        end
      else
        begin
          reg16 <= (wire9 >>> wire13);
          reg17 <= (|wire9[(4'h9):(3'h5)]);
        end
    end
  assign wire18 = (8'ha0);
  assign wire19 = (~^$unsigned((reg14[(3'h7):(3'h5)] == reg15)));
  assign wire20 = $signed((wire18 ?
                      reg16 : ((wire12 ? reg15 : reg16) ?
                          $unsigned(wire12) : (wire9 ^~ wire11))));
  module21 #() modinst33 (.wire23(wire12), .wire24(wire18), .clk(clk), .wire25(wire20), .y(wire32), .wire22(wire10));
  assign wire34 = wire11;
  assign wire35 = reg14[(4'h8):(2'h3)];
  assign wire36 = (~&($signed($signed(wire12)) & wire20[(1'h0):(1'h0)]));
  assign wire37 = (~^wire32[(3'h4):(1'h0)]);
  assign wire38 = wire12;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21
#(parameter param31 = {(~|((~^(8'h9e)) != ((8'h9d) ? (8'ha4) : (8'ha1))))})
(y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire25;
  input wire signed [(2'h2):(1'h0)] wire24;
  input wire [(4'hb):(1'h0)] wire23;
  input wire signed [(4'h9):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire30;
  wire [(4'hb):(1'h0)] wire29;
  wire [(3'h5):(1'h0)] wire27;
  wire [(4'ha):(1'h0)] wire26;
  reg [(3'h6):(1'h0)] reg28 = (1'h0);
  assign y = {wire30, wire29, wire27, wire26, reg28, (1'h0)};
  assign wire26 = $unsigned((8'had));
  assign wire27 = ($signed((wire26 + wire23[(1'h1):(1'h0)])) <<< wire25);
  always
    @(posedge clk) begin
      reg28 <= (~|$signed($unsigned((wire25 | wire22))));
    end
  assign wire29 = $signed($unsigned({wire24[(1'h1):(1'h1)]}));
  assign wire30 = (+$signed((wire24 == {wire29})));
endmodule