(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h66):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire3;
  input wire [(2'h3):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(2'h2):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire18;
  wire signed [(4'hb):(1'h0)] wire17;
  wire [(3'h4):(1'h0)] wire16;
  wire [(4'ha):(1'h0)] wire15;
  wire [(4'h9):(1'h0)] wire4;
  reg signed [(2'h3):(1'h0)] reg14 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg12 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg11 = (1'h0);
  reg [(3'h5):(1'h0)] reg10 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg9 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg7 = (1'h0);
  reg [(4'hb):(1'h0)] reg6 = (1'h0);
  reg [(2'h3):(1'h0)] reg5 = (1'h0);
  assign y = {wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire4,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = (!wire0[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      if (wire4[(3'h7):(1'h0)])
        begin
          reg5 <= wire3;
        end
      else
        begin
          if ((^(^$signed((reg5 >>> (8'ha6))))))
            begin
              reg5 <= wire3[(2'h2):(1'h1)];
              reg6 <= ({((!wire2) && (wire1 ? (8'ha7) : wire3))} ?
                  (&$unsigned(wire1)) : ((8'ha7) ?
                      wire0[(1'h1):(1'h0)] : $unsigned($unsigned((8'hb0)))));
            end
          else
            begin
              reg5 <= (+wire3[(1'h0):(1'h0)]);
              reg6 <= wire4[(3'h7):(3'h4)];
              reg7 <= $unsigned($signed((((8'ha9) ? wire4 : (8'ha7)) ?
                  (wire2 ? wire1 : reg6) : (!reg6))));
            end
          if ($unsigned(wire2))
            begin
              reg8 <= reg7;
            end
          else
            begin
              reg8 <= wire2[(1'h1):(1'h1)];
              reg9 <= (~(^$signed(wire0)));
            end
        end
      if ((reg7[(2'h2):(1'h1)] ?
          (wire1 + {wire3}) : (($signed(wire4) ? {reg6} : $signed(wire0)) ?
              {(!(8'haf))} : wire0)))
        begin
          reg10 <= reg8[(3'h6):(2'h3)];
        end
      else
        begin
          if (reg8)
            begin
              reg10 <= (+$signed(((reg9 || wire3) ? {wire2} : (~^wire3))));
              reg11 <= {({$signed(reg9)} > ((wire0 ?
                      (8'had) : wire0) != (~|reg5)))};
            end
          else
            begin
              reg10 <= wire1;
            end
        end
      if ({{$signed(reg6)}})
        begin
          reg12 <= {(reg10 ? $signed({wire3}) : reg6)};
          if ((^(reg8[(3'h6):(1'h1)] ^~ (^~(reg11 ? (8'ha5) : reg8)))))
            begin
              reg13 <= reg10[(2'h3):(2'h3)];
            end
          else
            begin
              reg13 <= $signed((-$signed((+wire2))));
            end
          reg14 <= {$unsigned(reg9[(1'h0):(1'h0)])};
        end
      else
        begin
          reg12 <= (~(~&$signed(reg13[(1'h1):(1'h0)])));
          reg13 <= (^~reg12);
        end
    end
  assign wire15 = reg11;
  assign wire16 = wire2;
  assign wire17 = reg11;
  assign wire18 = wire15[(4'h8):(2'h2)];
endmodule