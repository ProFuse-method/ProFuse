(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param53 = ({(+{(8'h9c)})} ? ({((8'ha7) - (8'ha3))} <= (^((8'hb0) && (8'ha5)))) : (({(8'ha8)} ? (~&(8'ha2)) : ((8'hab) >>> (8'ha8))) ? {((8'had) <= (8'ha3))} : ({(8'h9c)} >>> (~|(8'ha7))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire50;
  wire [(4'h9):(1'h0)] wire49;
  wire [(4'ha):(1'h0)] wire48;
  wire [(2'h3):(1'h0)] wire46;
  wire [(4'h9):(1'h0)] wire43;
  wire [(4'h9):(1'h0)] wire41;
  reg [(3'h5):(1'h0)] reg52 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg44 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire46,
                 wire43,
                 wire41,
                 reg52,
                 reg51,
                 reg45,
                 reg44,
                 (1'h0)};
  module4 #() modinst42 (.wire7(wire1), .wire8(wire2), .wire5(wire0), .wire6(wire3), .y(wire41), .clk(clk));
  assign wire43 = {wire0};
  always
    @(posedge clk) begin
      reg44 <= wire1[(2'h3):(2'h3)];
      reg45 <= $unsigned((+(wire1 ? wire0 : (8'ha3))));
    end
  module4 #() modinst47 (.y(wire46), .wire6(wire1), .wire8(wire3), .wire7(wire0), .wire5(wire43), .clk(clk));
  assign wire48 = $unsigned(wire46);
  assign wire49 = $unsigned(wire0[(4'ha):(3'h7)]);
  assign wire50 = wire48;
  always
    @(posedge clk) begin
      reg51 <= ((^~($signed(wire43) ? wire43 : (~reg45))) ?
          $signed($signed((wire0 ? wire1 : wire41))) : wire1[(2'h3):(2'h3)]);
      reg52 <= wire3[(3'h6):(3'h5)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param40 = ({((&(8'ha8)) <= ((8'h9d) ? (8'ha9) : (8'ha5)))} ? {(^(~&(8'ha3)))} : (|(8'h9c))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(3'h7):(1'h0)] wire7;
  input wire signed [(2'h2):(1'h0)] wire6;
  input wire [(3'h5):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire39;
  wire [(4'h8):(1'h0)] wire35;
  wire signed [(3'h4):(1'h0)] wire16;
  wire signed [(4'ha):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire9;
  reg signed [(3'h4):(1'h0)] reg38 = (1'h0);
  reg [(4'h9):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg17 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg14 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg13 = (1'h0);
  reg [(3'h7):(1'h0)] reg12 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg10 = (1'h0);
  assign y = {wire39,
                 wire35,
                 wire16,
                 wire15,
                 wire9,
                 reg38,
                 reg37,
                 reg18,
                 reg17,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 (1'h0)};
  assign wire9 = wire5;
  always
    @(posedge clk) begin
      reg10 <= wire6[(2'h2):(1'h1)];
      if (((!$signed($unsigned(wire8))) ^~ $signed($unsigned((wire7 | wire8)))))
        begin
          reg11 <= (((+wire9) > $signed(((8'ha9) ? reg10 : wire7))) + (wire9 ?
              $unsigned({wire8}) : (^~wire8[(2'h3):(1'h1)])));
          reg12 <= reg10;
        end
      else
        begin
          reg11 <= $signed(wire9[(4'ha):(3'h4)]);
          reg12 <= wire9;
          if ($signed(reg11[(4'h8):(1'h1)]))
            begin
              reg13 <= wire5[(1'h1):(1'h1)];
              reg14 <= (-((|(reg13 ? (8'ha1) : wire7)) * reg13[(1'h0):(1'h0)]));
            end
          else
            begin
              reg13 <= ((&((|(8'hae)) >>> (reg12 ?
                  wire7 : reg13))) != (!$signed((reg10 ? wire6 : wire7))));
              reg14 <= ((8'ha1) - $signed({(wire7 != reg10)}));
            end
        end
    end
  assign wire15 = ((|$unsigned(wire6)) ? ($signed(wire8) | wire9) : reg11);
  assign wire16 = (-$signed($signed($unsigned(reg13))));
  always
    @(posedge clk) begin
      reg17 <= reg12;
      reg18 <= reg13;
    end
  module19 #() modinst36 (wire35, clk, wire15, reg12, reg17, wire7);
  always
    @(posedge clk) begin
      reg37 <= reg18;
      reg38 <= (~|{{$signed(reg13)}});
    end
  assign wire39 = $signed($unsigned((reg10[(3'h5):(3'h5)] ?
                      $signed((8'haf)) : (reg18 ? reg12 : reg10))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module19  (y, clk, wire23, wire22, wire21, wire20);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire23;
  input wire signed [(2'h3):(1'h0)] wire22;
  input wire signed [(3'h7):(1'h0)] wire21;
  input wire [(2'h3):(1'h0)] wire20;
  wire [(4'h9):(1'h0)] wire30;
  wire signed [(4'hb):(1'h0)] wire29;
  wire [(4'h9):(1'h0)] wire27;
  wire signed [(3'h4):(1'h0)] wire26;
  wire signed [(3'h4):(1'h0)] wire25;
  wire [(4'hb):(1'h0)] wire24;
  reg signed [(4'h8):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg33 = (1'h0);
  reg [(3'h4):(1'h0)] reg32 = (1'h0);
  reg [(3'h4):(1'h0)] reg31 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg28 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg28,
                 (1'h0)};
  assign wire24 = (8'haf);
  assign wire25 = $unsigned((~&({wire21} ?
                      ((8'ha6) ? wire23 : wire23) : wire23[(4'h9):(2'h2)])));
  assign wire26 = wire25;
  assign wire27 = wire24;
  always
    @(posedge clk) begin
      reg28 <= {($signed($unsigned(wire20)) + (~^(wire21 ? wire26 : wire27)))};
    end
  assign wire29 = $signed((^~((^~wire23) ? {wire24} : wire23[(3'h6):(1'h1)])));
  assign wire30 = (((8'ha1) ?
                      wire21[(2'h3):(2'h3)] : $unsigned(((8'hb0) >= wire29))) - (+((|wire27) ~^ (wire26 == (8'ha3)))));
  always
    @(posedge clk) begin
      if ((wire21[(3'h6):(3'h6)] ?
          ($unsigned($unsigned(wire22)) >>> $unsigned((wire25 == (8'h9e)))) : wire25[(2'h3):(1'h1)]))
        begin
          reg31 <= ($unsigned((8'ha1)) ?
              $signed((~&{reg28})) : $unsigned((+((8'ha6) ? wire24 : wire23))));
        end
      else
        begin
          reg31 <= ({$signed(wire22[(1'h1):(1'h0)])} - ((8'ha3) >>> wire23));
          reg32 <= $unsigned(wire20[(1'h0):(1'h0)]);
          reg33 <= reg31;
        end
      reg34 <= $signed($unsigned((8'h9e)));
    end
endmodule