(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire12;
  wire signed [(3'h6):(1'h0)] wire11;
  wire signed [(3'h6):(1'h0)] wire10;
  wire [(3'h7):(1'h0)] wire9;
  wire [(4'h8):(1'h0)] wire5;
  wire signed [(2'h3):(1'h0)] wire4;
  reg [(4'h8):(1'h0)] reg8 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg7 = (1'h0);
  reg [(2'h3):(1'h0)] reg6 = (1'h0);
  assign y = {wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire5,
                 wire4,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = {wire0[(3'h4):(1'h1)]};
  assign wire5 = (!$signed((|(wire0 || (8'ha3)))));
  always
    @(posedge clk) begin
      reg6 <= wire3[(1'h1):(1'h0)];
      reg7 <= wire4;
      reg8 <= $signed((reg7[(2'h3):(2'h3)] ?
          $signed($unsigned(wire4)) : {reg6}));
    end
  assign wire9 = $unsigned((~|reg7));
  assign wire10 = (reg8 ? reg7 : (+wire1[(1'h1):(1'h0)]));
  assign wire11 = (+$unsigned($unsigned((wire3 <<< reg8))));
  assign wire12 = reg7[(4'h9):(3'h7)];
endmodule