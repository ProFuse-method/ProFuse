(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire10;
  wire [(2'h2):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire5;
  wire [(2'h2):(1'h0)] wire4;
  wire signed [(3'h4):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire36;
  wire signed [(2'h2):(1'h0)] wire37;
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg [(4'ha):(1'h0)] reg7 = (1'h0);
  reg [(2'h2):(1'h0)] reg6 = (1'h0);
  assign y = {wire32,
                 wire11,
                 wire10,
                 wire9,
                 wire5,
                 wire4,
                 wire34,
                 wire35,
                 wire36,
                 wire37,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = $signed((^wire0[(1'h0):(1'h0)]));
  assign wire5 = $unsigned((((wire4 ^ wire3) ? wire1 : $signed(wire2)) ?
                     (!wire0) : $unsigned((wire4 != (8'h9f)))));
  always
    @(posedge clk) begin
      reg6 <= wire3[(1'h1):(1'h1)];
      if ($signed((((wire3 ? wire3 : wire2) >>> (-wire1)) ?
          (wire3[(1'h0):(1'h0)] ?
              $unsigned(wire1) : {reg6}) : wire3[(2'h3):(1'h0)])))
        begin
          reg7 <= $signed(((wire0 <= wire3[(1'h0):(1'h0)]) ?
              $unsigned((wire3 ? wire4 : wire4)) : {(wire5 == wire2)}));
          reg8 <= (~^(8'ha2));
        end
      else
        begin
          reg7 <= $unsigned(({$signed(wire2)} ~^ {reg8[(4'h9):(3'h4)]}));
          reg8 <= wire1;
        end
    end
  assign wire9 = {(({reg8} ?
                         $unsigned(reg8) : $unsigned((8'hb0))) ^ (~&(~wire4)))};
  assign wire10 = (wire9 >>> $unsigned(wire1[(4'h9):(4'h9)]));
  assign wire11 = wire1;
  module12 #() modinst33 (.wire13(wire10), .wire14(wire11), .wire16(wire3), .y(wire32), .clk(clk), .wire15(reg7));
  assign wire34 = wire11;
  assign wire35 = reg6;
  assign wire36 = wire3[(2'h2):(1'h1)];
  module12 #() modinst38 (.wire16(reg7), .y(wire37), .wire13(wire36), .clk(clk), .wire14(wire3), .wire15(wire5));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire13, wire14, wire15, wire16);
  output wire [(32'h16):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire13;
  input wire signed [(4'h8):(1'h0)] wire14;
  input wire signed [(3'h7):(1'h0)] wire15;
  input wire [(4'ha):(1'h0)] wire16;
  wire [(2'h2):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire19;
  wire signed [(2'h2):(1'h0)] wire29;
  reg [(3'h4):(1'h0)] reg17 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  assign y = {wire31, wire19, wire29, reg17, reg18, (1'h0)};
  always
    @(posedge clk) begin
      reg17 <= wire13[(4'hb):(4'ha)];
      reg18 <= ((($unsigned(reg17) <= reg17) || (~&$signed(wire15))) >= reg17[(2'h2):(2'h2)]);
    end
  assign wire19 = (($unsigned(wire13) ?
                      {(wire15 ?
                              (8'haf) : reg18)} : $unsigned($unsigned(wire16))) ^ $signed(reg18[(1'h1):(1'h0)]));
  module20 #() modinst30 (wire29, clk, wire19, wire13, reg17, wire14);
  assign wire31 = $signed((|$signed((8'ha4))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20  (y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h17):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire24;
  input wire [(4'ha):(1'h0)] wire23;
  input wire [(3'h4):(1'h0)] wire22;
  input wire [(4'h8):(1'h0)] wire21;
  wire [(2'h3):(1'h0)] wire28;
  wire [(3'h6):(1'h0)] wire27;
  wire [(3'h6):(1'h0)] wire26;
  wire [(3'h7):(1'h0)] wire25;
  assign y = {wire28, wire27, wire26, wire25, (1'h0)};
  assign wire25 = wire23;
  assign wire26 = (~|(^($signed(wire23) ? (^wire21) : $unsigned(wire22))));
  assign wire27 = wire24;
  assign wire28 = wire24;
endmodule