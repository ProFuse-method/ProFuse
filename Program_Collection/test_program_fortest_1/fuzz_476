(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire0;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire3;
  wire [(2'h3):(1'h0)] wire39;
  wire signed [(4'h8):(1'h0)] wire4;
  wire signed [(3'h6):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire37;
  reg [(3'h5):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg7 = (1'h0);
  assign y = {wire39, wire4, wire5, wire37, reg6, reg7, (1'h0)};
  assign wire4 = {$signed(wire1)};
  assign wire5 = $signed({$unsigned($unsigned(wire4))});
  always
    @(posedge clk) begin
      reg6 <= $unsigned(wire3);
      reg7 <= $signed($signed(((^reg6) ? {wire3} : (!wire5))));
    end
  module8 #() modinst38 (wire37, clk, reg6, wire1, wire0, wire4);
  assign wire39 = wire0[(2'h3):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param36 = ((^{{(8'ha2)}}) << {(((8'h9f) ? (8'h9e) : (8'ha2)) ? (~&(8'hae)) : ((8'hae) ? (8'h9e) : (8'ha0)))}))
(y, clk, wire9, wire10, wire11, wire12);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire9;
  input wire [(3'h4):(1'h0)] wire10;
  input wire signed [(4'ha):(1'h0)] wire11;
  input wire [(4'h8):(1'h0)] wire12;
  wire [(3'h5):(1'h0)] wire35;
  wire signed [(4'h8):(1'h0)] wire13;
  wire signed [(3'h6):(1'h0)] wire14;
  wire signed [(2'h2):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire16;
  wire [(3'h7):(1'h0)] wire19;
  wire signed [(2'h3):(1'h0)] wire20;
  wire [(2'h3):(1'h0)] wire32;
  reg [(4'hb):(1'h0)] reg34 = (1'h0);
  reg [(4'h9):(1'h0)] reg17 = (1'h0);
  reg [(3'h5):(1'h0)] reg18 = (1'h0);
  assign y = {wire35,
                 wire13,
                 wire14,
                 wire15,
                 wire16,
                 wire19,
                 wire20,
                 wire32,
                 reg34,
                 reg17,
                 reg18,
                 (1'h0)};
  assign wire13 = {({wire9[(1'h1):(1'h0)]} ?
                          wire11[(2'h3):(1'h0)] : ($unsigned(wire12) ?
                              ((8'h9d) | wire11) : (!wire12)))};
  assign wire14 = (8'had);
  assign wire15 = (|wire10[(1'h0):(1'h0)]);
  assign wire16 = ((~&wire13) <<< $unsigned((^(~|wire10))));
  always
    @(posedge clk) begin
      if ({wire9[(1'h1):(1'h0)]})
        begin
          reg17 <= ($unsigned(wire16) > $signed(((wire14 ? wire12 : wire9) ?
              {wire9} : (8'ha4))));
        end
      else
        begin
          reg17 <= wire14;
        end
      reg18 <= (($unsigned($signed(wire11)) - {(~^wire15)}) ?
          ($unsigned((wire10 ?
              wire13 : wire12)) ^~ $unsigned((8'ha7))) : (wire16[(2'h2):(1'h0)] ?
              wire15 : wire10[(2'h2):(1'h1)]));
    end
  assign wire19 = wire15;
  assign wire20 = (~&wire11);
  module21 #() modinst33 (wire32, clk, wire19, wire11, reg18, wire14);
  always
    @(posedge clk) begin
      reg34 <= {(((wire12 ? wire12 : reg18) ?
              (8'ha3) : (|wire13)) != $unsigned(wire11))};
    end
  assign wire35 = (reg34[(4'h8):(3'h6)] ?
                      (^~wire20) : ($unsigned(wire16) >= (wire16[(4'ha):(1'h0)] ?
                          $unsigned(wire14) : $unsigned(wire10))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21  (y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire25;
  input wire signed [(4'ha):(1'h0)] wire24;
  input wire [(3'h5):(1'h0)] wire23;
  input wire signed [(2'h3):(1'h0)] wire22;
  wire [(2'h3):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire30;
  wire signed [(4'ha):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire28;
  wire [(4'hb):(1'h0)] wire27;
  wire signed [(4'h8):(1'h0)] wire26;
  assign y = {wire31, wire30, wire29, wire28, wire27, wire26, (1'h0)};
  assign wire26 = (~$unsigned(wire25));
  assign wire27 = ((~|$unsigned((wire22 ? wire25 : wire23))) >= wire22);
  assign wire28 = {({$unsigned(wire24)} ?
                          wire26[(3'h7):(1'h1)] : wire26[(1'h0):(1'h0)])};
  assign wire29 = ($signed($signed(((8'ha2) ~^ wire26))) + wire26);
  assign wire30 = $unsigned((^~$signed((wire25 ? wire22 : wire25))));
  assign wire31 = $signed((^$signed($signed(wire30))));
endmodule