(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire47;
  wire [(3'h7):(1'h0)] wire45;
  wire [(2'h3):(1'h0)] wire23;
  wire [(4'h8):(1'h0)] wire22;
  wire signed [(4'ha):(1'h0)] wire18;
  wire signed [(4'h9):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire4;
  reg [(2'h3):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg20 = (1'h0);
  assign y = {wire47,
                 wire45,
                 wire23,
                 wire22,
                 wire18,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg21,
                 reg20,
                 (1'h0)};
  assign wire4 = ($unsigned(wire3[(1'h1):(1'h0)]) ?
                     (~&wire1) : $signed($unsigned((+wire3))));
  assign wire5 = wire0[(2'h3):(2'h2)];
  assign wire6 = ((^wire5[(4'h8):(3'h4)]) ?
                     (wire5 + wire1[(1'h1):(1'h0)]) : ((((8'had) >> wire3) < (wire1 >> (8'h9c))) ?
                         $signed($signed((8'hab))) : $unsigned((^(8'hab)))));
  assign wire7 = $unsigned($unsigned({wire3[(3'h4):(2'h3)]}));
  module8 #() modinst19 (wire18, clk, wire6, wire1, wire2, wire5);
  always
    @(posedge clk) begin
      reg20 <= (((^wire1[(1'h0):(1'h0)]) ?
              ($unsigned(wire1) ?
                  (8'ha2) : $unsigned(wire1)) : ((wire3 << (8'h9c)) * wire2)) ?
          $signed(((wire6 ? wire3 : (8'ha9)) ?
              {wire7} : {wire18})) : $signed((^~{wire6})));
      reg21 <= $unsigned((~{$signed((8'ha5))}));
    end
  assign wire22 = $signed($signed(wire5[(3'h6):(3'h5)]));
  assign wire23 = (|wire22[(3'h4):(1'h1)]);
  module24 #() modinst46 (.wire25(wire6), .wire26(wire5), .y(wire45), .wire28(wire0), .clk(clk), .wire27(wire18));
  assign wire47 = wire45;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module24
#(parameter param44 = (((((8'ha6) ~^ (8'h9c)) <<< ((8'hae) ? (8'ha9) : (8'hb0))) > ((!(8'ha1)) ? (&(8'ha6)) : (|(8'hb0)))) ? (-{((8'hab) >> (8'h9e))}) : (&(^~((8'ha7) ? (8'hae) : (8'ha9))))))
(y, clk, wire28, wire27, wire26, wire25);
  output wire [(32'h1e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire28;
  input wire [(4'ha):(1'h0)] wire27;
  input wire signed [(3'h7):(1'h0)] wire26;
  input wire signed [(4'hb):(1'h0)] wire25;
  wire signed [(3'h4):(1'h0)] wire43;
  wire [(3'h6):(1'h0)] wire41;
  wire signed [(4'h8):(1'h0)] wire30;
  wire signed [(4'hb):(1'h0)] wire29;
  assign y = {wire43, wire41, wire30, wire29, (1'h0)};
  assign wire29 = $signed((($signed(wire28) || $signed(wire26)) | ((8'hb0) ?
                      wire27[(1'h1):(1'h0)] : (8'hae))));
  assign wire30 = {(8'ha5)};
  module31 #() modinst42 (wire41, clk, wire28, wire26, wire25, wire27);
  assign wire43 = wire26;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire12;
  input wire signed [(2'h3):(1'h0)] wire11;
  input wire signed [(3'h6):(1'h0)] wire10;
  input wire [(3'h4):(1'h0)] wire9;
  wire [(2'h3):(1'h0)] wire17;
  wire [(4'hb):(1'h0)] wire16;
  wire [(3'h5):(1'h0)] wire15;
  wire signed [(4'hb):(1'h0)] wire14;
  wire [(4'h9):(1'h0)] wire13;
  assign y = {wire17, wire16, wire15, wire14, wire13, (1'h0)};
  assign wire13 = wire10;
  assign wire14 = {$unsigned((~|(wire11 ? wire9 : wire9)))};
  assign wire15 = $signed(($unsigned((!wire11)) ?
                      ($unsigned(wire13) ?
                          (8'hae) : (&wire10)) : $unsigned((~&wire12))));
  assign wire16 = wire15;
  assign wire17 = $unsigned(($unsigned((8'h9d)) < $unsigned(wire16[(2'h2):(1'h0)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module31
#(parameter param40 = (8'ha8))
(y, clk, wire35, wire34, wire33, wire32);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire35;
  input wire [(3'h6):(1'h0)] wire34;
  input wire [(3'h5):(1'h0)] wire33;
  input wire [(4'ha):(1'h0)] wire32;
  wire [(4'h9):(1'h0)] wire39;
  wire signed [(4'ha):(1'h0)] wire38;
  wire signed [(3'h5):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire36;
  assign y = {wire39, wire38, wire37, wire36, (1'h0)};
  assign wire36 = wire32[(3'h6):(2'h3)];
  assign wire37 = ((((wire36 >>> wire32) >= $unsigned(wire33)) ?
                          $unsigned((8'hb0)) : wire34) ?
                      (wire33[(3'h4):(1'h0)] ?
                          (~$unsigned(wire33)) : (!$signed((8'h9d)))) : $signed(wire36[(2'h2):(2'h2)]));
  assign wire38 = (($unsigned($unsigned(wire37)) ?
                      wire34 : {(wire37 * wire37)}) <<< (wire35 ?
                      (8'ha3) : wire34));
  assign wire39 = (!wire37[(3'h5):(1'h0)]);
endmodule