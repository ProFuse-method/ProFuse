(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param71 = {((((8'ha0) ? (8'ha6) : (8'hac)) ? (~(8'haf)) : ((8'ha4) ? (8'ha0) : (8'h9c))) ^~ (~&((8'h9f) ? (8'haf) : (8'ha2))))})
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire3;
  wire signed [(4'hb):(1'h0)] wire68;
  wire [(3'h6):(1'h0)] wire67;
  wire signed [(3'h4):(1'h0)] wire4;
  wire signed [(3'h7):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire6;
  wire [(2'h2):(1'h0)] wire7;
  wire signed [(2'h3):(1'h0)] wire9;
  wire [(4'h9):(1'h0)] wire10;
  wire signed [(4'h8):(1'h0)] wire65;
  reg signed [(4'h9):(1'h0)] reg70 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg69 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  assign y = {wire68,
                 wire67,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire9,
                 wire10,
                 wire65,
                 reg70,
                 reg69,
                 reg8,
                 (1'h0)};
  assign wire4 = $signed($unsigned(($unsigned(wire1) | (wire3 * wire1))));
  assign wire5 = ((wire1 ? wire3 : ($unsigned(wire2) ? (-wire3) : {wire1})) ?
                     (({wire2} | wire4) ?
                         (!$signed(wire4)) : $unsigned(wire3[(2'h3):(2'h3)])) : ((wire3[(4'h8):(2'h3)] + (wire4 || (8'ha7))) || $unsigned($signed(wire3))));
  assign wire6 = wire0[(2'h3):(1'h0)];
  assign wire7 = ({(-$unsigned(wire4))} ^ $signed(wire3[(3'h7):(2'h3)]));
  always
    @(posedge clk) begin
      reg8 <= (wire1 <= {$unsigned(wire3[(3'h6):(3'h4)])});
    end
  assign wire9 = {($signed((+wire3)) ?
                         ((wire4 <<< wire3) ?
                             wire2[(2'h2):(2'h2)] : (wire2 ?
                                 wire5 : wire5)) : wire2)};
  assign wire10 = (^($signed($signed(reg8)) ?
                      (((8'haf) ?
                          wire4 : wire4) >> (wire4 == wire1)) : $unsigned($signed(wire5))));
  module11 #() modinst66 (wire65, clk, wire1, wire6, reg8, wire0);
  assign wire67 = $unsigned(wire7);
  assign wire68 = ((8'haf) <<< wire4);
  always
    @(posedge clk) begin
      reg69 <= (($unsigned(wire6[(3'h5):(3'h5)]) != {$unsigned(wire67)}) ?
          $unsigned((~|(wire10 ? reg8 : wire0))) : wire65[(1'h1):(1'h1)]);
      reg70 <= $signed(((8'hb0) + ($unsigned(wire65) >= (|wire4))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire12, wire13, wire14, wire15);
  output wire [(32'h29):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire12;
  input wire signed [(4'ha):(1'h0)] wire13;
  input wire signed [(4'hb):(1'h0)] wire14;
  input wire signed [(4'hb):(1'h0)] wire15;
  wire signed [(3'h7):(1'h0)] wire63;
  wire signed [(3'h6):(1'h0)] wire16;
  wire signed [(3'h7):(1'h0)] wire33;
  reg signed [(4'h9):(1'h0)] reg17 = (1'h0);
  reg [(4'hb):(1'h0)] reg18 = (1'h0);
  assign y = {wire63, wire16, wire33, reg17, reg18, (1'h0)};
  assign wire16 = $signed(wire14);
  always
    @(posedge clk) begin
      reg17 <= (wire16[(1'h0):(1'h0)] << $unsigned((wire13[(3'h7):(3'h4)] ?
          wire15[(3'h5):(3'h5)] : $unsigned(wire16))));
      reg18 <= $unsigned(($unsigned(reg17[(1'h0):(1'h0)]) && reg17[(2'h2):(2'h2)]));
    end
  module19 #() modinst34 (.clk(clk), .y(wire33), .wire20(reg17), .wire21(wire16), .wire22(wire14), .wire23(wire15));
  module35 #() modinst64 (.y(wire63), .wire37(wire33), .wire36(wire14), .wire39(wire15), .wire38(wire13), .clk(clk));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module35
#(parameter param62 = {(&(((8'hab) ? (8'hae) : (8'hab)) ^ (&(8'had))))})
(y, clk, wire39, wire38, wire37, wire36);
  output wire [(32'h9b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire39;
  input wire [(3'h5):(1'h0)] wire38;
  input wire [(3'h7):(1'h0)] wire37;
  input wire signed [(3'h5):(1'h0)] wire36;
  wire signed [(4'ha):(1'h0)] wire61;
  wire [(4'h8):(1'h0)] wire60;
  wire [(4'h9):(1'h0)] wire54;
  wire [(3'h6):(1'h0)] wire53;
  wire [(2'h2):(1'h0)] wire52;
  wire [(3'h7):(1'h0)] wire51;
  wire [(4'h8):(1'h0)] wire43;
  wire signed [(3'h4):(1'h0)] wire42;
  wire signed [(3'h7):(1'h0)] wire41;
  wire signed [(4'h9):(1'h0)] wire40;
  reg [(4'ha):(1'h0)] reg59 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg58 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg57 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg56 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg55 = (1'h0);
  reg [(4'ha):(1'h0)] reg50 = (1'h0);
  reg [(4'ha):(1'h0)] reg49 = (1'h0);
  reg [(2'h3):(1'h0)] reg48 = (1'h0);
  reg [(4'ha):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg46 = (1'h0);
  reg [(4'h9):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg44 = (1'h0);
  assign y = {wire61,
                 wire60,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 reg59,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 (1'h0)};
  assign wire40 = wire37;
  assign wire41 = $unsigned((~^{(|wire37)}));
  assign wire42 = wire40[(3'h6):(2'h2)];
  assign wire43 = (+$unsigned((^~wire39)));
  always
    @(posedge clk) begin
      reg44 <= wire36[(2'h2):(1'h1)];
      reg45 <= wire42[(1'h1):(1'h0)];
      if (wire42[(2'h3):(1'h0)])
        begin
          if (wire43)
            begin
              reg46 <= (wire43[(3'h6):(3'h5)] == $unsigned($signed({(8'h9d)})));
              reg47 <= $unsigned(reg45);
              reg48 <= wire39;
            end
          else
            begin
              reg46 <= $signed($signed((~^wire42[(2'h2):(2'h2)])));
            end
          reg49 <= wire43[(2'h2):(1'h1)];
          reg50 <= (8'h9e);
        end
      else
        begin
          reg46 <= wire37[(3'h7):(3'h7)];
          reg47 <= wire37[(3'h4):(2'h3)];
          reg48 <= (({$signed(wire36)} <= (((8'ha6) != reg44) + {reg48})) ?
              (((wire40 ?
                  wire43 : (8'ha3)) << reg48[(2'h3):(1'h0)]) != {reg50[(3'h7):(1'h0)]}) : wire37);
        end
    end
  assign wire51 = $unsigned(wire40);
  assign wire52 = $signed(($unsigned((^reg47)) ?
                      ($unsigned(reg46) ?
                          ((8'hae) ? wire37 : reg46) : wire39) : (^~wire51)));
  assign wire53 = ((~|$unsigned((+wire38))) ^~ ($signed((8'h9f)) * $signed((wire52 ^ wire41))));
  assign wire54 = $unsigned((~|((reg46 && wire37) ? reg50 : wire42)));
  always
    @(posedge clk) begin
      reg55 <= {$signed(wire36)};
      reg56 <= (($unsigned((wire52 | (8'hae))) <= ((wire36 ?
              wire39 : wire42) >> reg44[(1'h1):(1'h0)])) ?
          {reg44} : ($signed($signed(reg48)) << $signed((&wire37))));
      if ({wire43[(2'h2):(1'h0)]})
        begin
          reg57 <= (8'ha9);
          reg58 <= {(~^reg49[(4'h9):(4'h9)])};
          reg59 <= wire38;
        end
      else
        begin
          reg57 <= $signed(wire53);
          reg58 <= $signed(($signed($signed(reg49)) ?
              {$unsigned(wire43)} : (^~$unsigned(wire43))));
        end
    end
  assign wire60 = reg59;
  assign wire61 = ($unsigned(((8'h9c) ?
                          (reg50 && reg58) : wire39[(3'h6):(1'h0)])) ?
                      wire39 : $unsigned(reg44));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module19
#(parameter param32 = (8'ha9))
(y, clk, wire23, wire22, wire21, wire20);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire23;
  input wire signed [(3'h4):(1'h0)] wire22;
  input wire signed [(3'h6):(1'h0)] wire21;
  input wire signed [(4'h9):(1'h0)] wire20;
  wire signed [(4'ha):(1'h0)] wire31;
  wire signed [(3'h5):(1'h0)] wire30;
  wire signed [(2'h2):(1'h0)] wire29;
  wire signed [(3'h6):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire26;
  wire [(3'h5):(1'h0)] wire25;
  wire signed [(4'h9):(1'h0)] wire24;
  assign y = {wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 (1'h0)};
  assign wire24 = ((wire23[(1'h1):(1'h0)] & ((+wire22) && $signed(wire21))) <<< wire21);
  assign wire25 = ((-(~^(8'ha7))) ?
                      (^~wire21[(3'h5):(3'h5)]) : (~&wire20[(3'h5):(2'h3)]));
  assign wire26 = $unsigned((!({wire22} ?
                      wire23[(1'h1):(1'h0)] : (wire25 - (8'ha0)))));
  assign wire27 = wire22;
  assign wire28 = ($unsigned($signed($unsigned(wire23))) ?
                      (wire25[(3'h5):(3'h4)] - (wire21 & wire23[(2'h2):(1'h0)])) : $signed((((8'ha0) + wire23) <= $signed(wire27))));
  assign wire29 = ($unsigned($unsigned(wire26)) * $unsigned(({wire28} ?
                      (wire24 ? wire25 : wire25) : (wire21 >>> wire28))));
  assign wire30 = (+$unsigned(wire25));
  assign wire31 = $unsigned(wire24[(4'h8):(4'h8)]);
endmodule