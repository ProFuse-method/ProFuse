(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire0;
  input wire [(4'h9):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire3;
  wire signed [(3'h4):(1'h0)] wire89;
  wire [(3'h7):(1'h0)] wire87;
  wire signed [(4'hb):(1'h0)] wire86;
  wire [(4'h9):(1'h0)] wire4;
  wire [(2'h3):(1'h0)] wire74;
  wire signed [(4'hb):(1'h0)] wire76;
  wire signed [(4'h9):(1'h0)] wire77;
  wire signed [(4'h8):(1'h0)] wire84;
  reg signed [(4'h9):(1'h0)] reg78 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg79 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg80 = (1'h0);
  reg [(4'h8):(1'h0)] reg81 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg82 = (1'h0);
  reg [(3'h4):(1'h0)] reg83 = (1'h0);
  assign y = {wire89,
                 wire87,
                 wire86,
                 wire4,
                 wire74,
                 wire76,
                 wire77,
                 wire84,
                 reg78,
                 reg79,
                 reg80,
                 reg81,
                 reg82,
                 reg83,
                 (1'h0)};
  assign wire4 = (($signed(wire3[(3'h4):(1'h0)]) ?
                         (~^$signed(wire2)) : {{wire1}}) ?
                     $signed((((8'ha5) - wire1) > $signed(wire3))) : wire2[(1'h1):(1'h0)]);
  module5 #() modinst75 (wire74, clk, wire1, wire2, wire4, wire3);
  assign wire76 = ((|wire2) >= wire2);
  assign wire77 = ($signed($unsigned(wire1[(3'h6):(2'h2)])) ~^ $unsigned((^~$signed((8'h9f)))));
  always
    @(posedge clk) begin
      reg78 <= (-$signed(($signed((8'h9e)) + (wire4 || wire3))));
      reg79 <= (+(~|$unsigned((~&wire76))));
      if (((~&$signed((~&reg79))) ?
          (8'haa) : ({{wire76}} ? (8'h9c) : $unsigned(wire77[(4'h8):(2'h3)]))))
        begin
          reg80 <= (^($signed((wire1 <= (8'ha4))) != wire2));
          if (wire2)
            begin
              reg81 <= {wire77};
              reg82 <= reg78;
              reg83 <= ($signed($unsigned($signed(wire2))) ?
                  (-$signed(wire1[(4'h8):(2'h3)])) : wire2[(2'h2):(1'h1)]);
            end
          else
            begin
              reg81 <= $unsigned($signed(((wire3 ^~ reg79) != reg83[(2'h3):(2'h2)])));
              reg82 <= reg79;
              reg83 <= wire3;
            end
        end
      else
        begin
          if ((~^$unsigned(($signed(reg80) <= {wire0}))))
            begin
              reg80 <= wire2;
              reg81 <= (|$signed(wire2[(3'h6):(3'h4)]));
            end
          else
            begin
              reg80 <= $signed(($unsigned((wire76 << reg81)) ?
                  $unsigned((~&wire4)) : ((reg78 ?
                      reg79 : wire77) <<< {(8'h9e)})));
              reg81 <= (~&(reg79 - reg78));
              reg82 <= $unsigned($signed((&(!wire77))));
            end
          reg83 <= $signed(({(wire2 ? wire77 : wire1)} ?
              ($signed((8'ha7)) ?
                  reg78[(2'h3):(1'h1)] : $signed(wire4)) : (^~(reg79 ?
                  wire74 : wire2))));
        end
    end
  module5 #() modinst85 (.clk(clk), .wire8(wire77), .wire7(wire1), .wire6(reg79), .wire9(wire4), .y(wire84));
  assign wire86 = $signed($unsigned($unsigned($unsigned(wire3))));
  module5 #() modinst88 (wire87, clk, wire2, reg82, wire77, reg79);
  assign wire89 = ($signed({reg81}) ?
                      {(reg80 ?
                              (^wire2) : $signed(wire2))} : {(~|wire1[(1'h1):(1'h1)])});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h3e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire9;
  input wire signed [(4'h9):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire7;
  input wire [(4'ha):(1'h0)] wire6;
  wire signed [(2'h2):(1'h0)] wire73;
  wire [(4'ha):(1'h0)] wire71;
  wire signed [(4'h9):(1'h0)] wire69;
  wire signed [(4'hb):(1'h0)] wire46;
  wire [(4'h9):(1'h0)] wire45;
  wire [(4'h9):(1'h0)] wire44;
  wire [(4'hb):(1'h0)] wire42;
  assign y = {wire73, wire71, wire69, wire46, wire45, wire44, wire42, (1'h0)};
  module10 #() modinst43 (.wire12(wire9), .wire11(wire6), .wire13(wire8), .y(wire42), .clk(clk), .wire14(wire7));
  assign wire44 = (&$signed($unsigned(((8'ha9) ? wire6 : wire8))));
  assign wire45 = ((|((wire9 >> wire6) ? $unsigned(wire42) : wire42)) ?
                      $signed(wire6) : {$signed((^~(8'ha4)))});
  assign wire46 = (wire9[(3'h4):(1'h1)] << ($signed(wire8) > (wire7 ?
                      $signed(wire42) : (wire8 >>> wire6))));
  module47 #() modinst70 (.y(wire69), .wire49(wire9), .wire50(wire7), .wire48(wire45), .wire51(wire46), .clk(clk));
  module47 #() modinst72 (wire71, clk, wire42, wire44, wire9, wire8);
  assign wire73 = $unsigned(wire9[(3'h5):(3'h5)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module47  (y, clk, wire51, wire50, wire49, wire48);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire51;
  input wire signed [(4'h9):(1'h0)] wire50;
  input wire [(3'h6):(1'h0)] wire49;
  input wire [(4'h9):(1'h0)] wire48;
  wire signed [(4'hb):(1'h0)] wire62;
  wire [(2'h3):(1'h0)] wire61;
  wire [(4'h8):(1'h0)] wire60;
  wire [(4'h9):(1'h0)] wire59;
  wire signed [(4'h8):(1'h0)] wire58;
  wire [(4'ha):(1'h0)] wire57;
  wire [(2'h2):(1'h0)] wire55;
  wire [(2'h3):(1'h0)] wire54;
  wire [(4'ha):(1'h0)] wire53;
  wire [(3'h6):(1'h0)] wire52;
  reg signed [(4'h8):(1'h0)] reg68 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg67 = (1'h0);
  reg [(2'h3):(1'h0)] reg66 = (1'h0);
  reg [(4'h8):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg64 = (1'h0);
  reg [(2'h3):(1'h0)] reg63 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg56 = (1'h0);
  assign y = {wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 reg64,
                 reg63,
                 reg56,
                 (1'h0)};
  assign wire52 = $unsigned((($signed((8'ha2)) <= $unsigned(wire49)) <= $unsigned((wire48 ?
                      (8'ha0) : wire49))));
  assign wire53 = $unsigned((~^wire49));
  assign wire54 = $unsigned($unsigned($unsigned(wire51)));
  assign wire55 = wire53[(4'ha):(2'h3)];
  always
    @(posedge clk) begin
      reg56 <= $signed((+wire51));
    end
  assign wire57 = wire53[(3'h6):(3'h4)];
  assign wire58 = $signed((wire54[(1'h0):(1'h0)] & ((wire51 ? wire48 : wire57) ?
                      (reg56 ? wire54 : (8'haa)) : {wire52})));
  assign wire59 = $signed($unsigned((|wire55[(2'h2):(1'h0)])));
  assign wire60 = $unsigned($unsigned($signed($unsigned(wire58))));
  assign wire61 = (~&{((wire51 ? wire58 : wire59) ?
                          (|(8'h9c)) : $unsigned(wire53))});
  assign wire62 = ((~$unsigned((wire53 ? wire52 : wire50))) << (~&{(wire53 ?
                          wire58 : wire48)}));
  always
    @(posedge clk) begin
      if (($unsigned($unsigned($signed(wire49))) >>> wire50))
        begin
          if ((((-wire50[(1'h0):(1'h0)]) ?
              {(8'hae)} : (wire51 || (+wire51))) <= wire57[(1'h0):(1'h0)]))
            begin
              reg63 <= (wire58 > wire61[(2'h3):(2'h2)]);
              reg64 <= wire55;
              reg65 <= $signed(({(reg63 > (8'had))} ?
                  ({wire61} >>> (wire49 ?
                      wire54 : (8'ha4))) : $signed({(8'h9e)})));
            end
          else
            begin
              reg63 <= (~^((~wire53) < (8'haa)));
              reg64 <= ((((wire52 ? (8'ha6) : (8'haf)) ?
                          (^wire60) : $signed(wire54)) ?
                      ((wire54 ? wire59 : (8'h9c)) ?
                          {(8'ha1)} : $unsigned((8'ha3))) : $unsigned($signed(wire52))) ?
                  wire58 : wire49[(1'h1):(1'h1)]);
              reg65 <= ($unsigned(($unsigned(reg63) + wire52[(1'h1):(1'h1)])) <= ((^~wire54[(1'h1):(1'h1)]) ?
                  (reg63[(2'h2):(1'h0)] ?
                      {wire48} : (reg56 || wire53)) : {$unsigned(reg56)}));
            end
          reg66 <= (((^((8'ha4) <<< wire59)) ^ ((wire52 && reg56) <<< (wire50 != wire50))) > (wire59 >>> wire60[(3'h4):(2'h2)]));
          reg67 <= ($signed((~|(reg65 < reg63))) ?
              (-$unsigned($signed(reg65))) : wire51);
        end
      else
        begin
          if (wire52)
            begin
              reg63 <= ($unsigned(wire61) ?
                  (wire54 >> wire55) : $signed($signed($signed((8'ha6)))));
              reg64 <= {(-(wire58 ? $signed(wire55) : wire51))};
            end
          else
            begin
              reg63 <= (-wire52);
              reg64 <= wire54;
            end
          reg65 <= ({(~^(|reg65))} - ((~&wire59) ? wire49 : (|{(8'h9d)})));
        end
      reg68 <= wire60[(3'h5):(1'h0)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param41 = (|{{((8'haa) ? (8'ha2) : (8'ha0))}}))
(y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h9d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire14;
  input wire signed [(3'h5):(1'h0)] wire13;
  input wire [(4'h8):(1'h0)] wire12;
  input wire [(3'h5):(1'h0)] wire11;
  wire signed [(4'h9):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire23;
  wire signed [(4'h8):(1'h0)] wire22;
  wire [(2'h2):(1'h0)] wire21;
  wire [(3'h4):(1'h0)] wire19;
  wire [(4'hb):(1'h0)] wire15;
  reg signed [(3'h7):(1'h0)] reg40 = (1'h0);
  reg [(3'h7):(1'h0)] reg39 = (1'h0);
  reg [(3'h5):(1'h0)] reg38 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg37 = (1'h0);
  reg [(3'h6):(1'h0)] reg36 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg35 = (1'h0);
  reg [(4'h8):(1'h0)] reg34 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg33 = (1'h0);
  reg [(3'h5):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg31 = (1'h0);
  reg [(4'hb):(1'h0)] reg30 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg29 = (1'h0);
  reg [(3'h5):(1'h0)] reg27 = (1'h0);
  reg [(2'h3):(1'h0)] reg26 = (1'h0);
  reg [(2'h2):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg20 = (1'h0);
  reg [(2'h2):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg17 = (1'h0);
  reg [(4'h8):(1'h0)] reg16 = (1'h0);
  assign y = {wire28,
                 wire23,
                 wire22,
                 wire21,
                 wire19,
                 wire15,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg20,
                 reg18,
                 reg17,
                 reg16,
                 (1'h0)};
  assign wire15 = ($signed((~$unsigned(wire12))) > wire14[(4'h8):(1'h1)]);
  always
    @(posedge clk) begin
      reg16 <= (8'ha4);
      if ((wire13[(2'h3):(1'h1)] | (wire12[(3'h7):(3'h7)] & {wire12})))
        begin
          reg17 <= $signed(($unsigned((~wire11)) <= wire12[(4'h8):(3'h6)]));
          reg18 <= $signed((({wire14} ?
              $signed((8'ha6)) : $signed(wire11)) ^~ ((^wire15) ?
              $unsigned(wire15) : wire11[(2'h2):(1'h1)])));
        end
      else
        begin
          reg17 <= ((wire11 ?
                  ((wire15 >>> reg16) ?
                      ((8'haa) ?
                          reg16 : wire13) : (~wire13)) : reg18[(2'h2):(2'h2)]) ?
              reg16 : wire15[(1'h0):(1'h0)]);
          reg18 <= ((!$signed(reg18[(1'h0):(1'h0)])) ?
              $signed(((~^reg17) ?
                  $signed((8'had)) : reg17)) : wire13[(2'h3):(1'h1)]);
        end
    end
  assign wire19 = $signed($signed((reg17 >> $signed(wire13))));
  always
    @(posedge clk) begin
      reg20 <= ((((~&(8'had)) ?
              wire14[(3'h6):(2'h2)] : ((8'hae) ?
                  wire15 : reg18)) ^~ $signed($unsigned(wire12))) ?
          wire15 : (({(8'ha8)} ? wire14[(3'h6):(2'h2)] : reg16) ?
              wire11 : $signed($unsigned(wire19))));
    end
  assign wire21 = $signed(wire13);
  assign wire22 = (+((~&reg16) ? {reg20} : $unsigned(reg18[(1'h1):(1'h0)])));
  assign wire23 = ((((!wire11) ?
                          wire22 : $unsigned(reg16)) >> ($unsigned(wire15) ~^ (wire13 ?
                          wire21 : wire21))) ?
                      (wire13[(1'h1):(1'h1)] ?
                          (+$signed((8'ha8))) : $signed(wire11)) : (~^$signed(reg18)));
  always
    @(posedge clk) begin
      if ($signed((|$signed($unsigned(wire13)))))
        begin
          if (reg16)
            begin
              reg24 <= wire13;
            end
          else
            begin
              reg24 <= wire11;
              reg25 <= (((8'haa) ?
                  $signed($unsigned(wire21)) : ($unsigned(wire13) ?
                      reg17[(1'h1):(1'h0)] : (reg20 ?
                          wire19 : wire15))) ^ ({((8'haa) ? wire12 : wire14)} ?
                  reg24 : ((8'ha5) >= $signed(wire11))));
              reg26 <= (^~($signed(wire19[(1'h0):(1'h0)]) >= {(wire22 ?
                      wire11 : reg24)}));
            end
        end
      else
        begin
          reg24 <= (|wire19[(2'h2):(1'h0)]);
          reg25 <= (|(&$unsigned((~reg16))));
          reg26 <= wire22[(2'h3):(1'h0)];
        end
      reg27 <= ($signed(wire15[(1'h0):(1'h0)]) ? reg24 : reg25[(2'h2):(2'h2)]);
    end
  assign wire28 = wire19;
  always
    @(posedge clk) begin
      if ((^~$signed($unsigned(((8'haf) ? reg25 : wire28)))))
        begin
          reg29 <= ({$signed(wire15)} >= (^~wire23));
          if (reg17[(1'h0):(1'h0)])
            begin
              reg30 <= $signed((($unsigned(reg26) || reg25[(1'h0):(1'h0)]) ~^ $signed((8'haa))));
              reg31 <= {((8'hae) ?
                      $signed(reg29[(4'h9):(1'h0)]) : ($signed(reg25) ?
                          {wire12} : $unsigned(reg25)))};
              reg32 <= wire11;
            end
          else
            begin
              reg30 <= (-($unsigned((!wire11)) == wire22));
            end
          reg33 <= {$unsigned(reg26)};
        end
      else
        begin
          reg29 <= reg18[(1'h0):(1'h0)];
          reg30 <= (^~reg25);
        end
      reg34 <= $signed($unsigned($signed(reg32[(3'h4):(2'h3)])));
      if (($signed(wire14) >> $signed((&(-reg32)))))
        begin
          reg35 <= reg33[(2'h3):(2'h2)];
          if ($unsigned(wire19))
            begin
              reg36 <= (|$unsigned((~{wire28})));
            end
          else
            begin
              reg36 <= (|$signed({(~&wire12)}));
              reg37 <= $signed(reg17[(1'h0):(1'h0)]);
              reg38 <= {reg20};
            end
          if ($signed($unsigned(wire15)))
            begin
              reg39 <= ((-reg20) ?
                  (~|(reg24[(2'h3):(2'h2)] >= reg25[(2'h2):(1'h0)])) : reg18[(2'h2):(2'h2)]);
              reg40 <= $signed($signed(wire11[(1'h0):(1'h0)]));
            end
          else
            begin
              reg39 <= (|wire21[(1'h1):(1'h1)]);
            end
        end
      else
        begin
          if (reg20)
            begin
              reg35 <= ((wire28 || (reg40[(1'h0):(1'h0)] ~^ $unsigned(wire15))) - wire15[(3'h4):(2'h2)]);
            end
          else
            begin
              reg35 <= $signed($unsigned(((~reg35) ?
                  (+wire15) : $unsigned(reg32))));
              reg36 <= {(~|((8'ha7) < $signed((8'ha4))))};
              reg37 <= reg24;
            end
        end
    end
endmodule