(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param13 = ((!{(~(8'ha7))}) ? (((8'ha4) != (+(8'had))) ? (((8'h9d) << (8'ha7)) ? ((8'hac) - (8'ha5)) : (8'ha6)) : (((8'h9c) ? (8'ha9) : (8'h9e)) ? (-(8'h9e)) : (8'haf))) : ((~&(+(8'h9f))) || (((8'ha9) ? (8'ha0) : (8'ha7)) || ((8'haf) <<< (8'h9f))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire11;
  wire [(2'h2):(1'h0)] wire10;
  wire [(3'h7):(1'h0)] wire9;
  wire signed [(4'hb):(1'h0)] wire7;
  wire signed [(3'h7):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg8 = (1'h0);
  assign y = {wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg8,
                 (1'h0)};
  assign wire4 = (!(wire3 | (!((8'ha5) ^ wire1))));
  assign wire5 = (~&wire2);
  assign wire6 = wire3[(3'h4):(2'h3)];
  assign wire7 = $unsigned(wire6);
  always
    @(posedge clk) begin
      reg8 <= (wire3 == ((~^$signed(wire7)) ?
          {((8'ha2) >>> wire3)} : (~&wire7[(3'h4):(2'h3)])));
    end
  assign wire9 = $signed(((reg8 << $signed(wire2)) ?
                     wire4 : wire6[(2'h2):(2'h2)]));
  assign wire10 = $unsigned($signed((~^(~&(8'ha2)))));
  assign wire11 = wire5;
  assign wire12 = wire1;
endmodule