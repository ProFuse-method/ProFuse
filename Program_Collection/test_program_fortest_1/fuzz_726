(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire39;
  wire signed [(4'ha):(1'h0)] wire38;
  wire signed [(3'h5):(1'h0)] wire37;
  wire signed [(3'h5):(1'h0)] wire31;
  wire [(4'h9):(1'h0)] wire8;
  wire signed [(4'h9):(1'h0)] wire7;
  reg [(2'h2):(1'h0)] reg36 = (1'h0);
  reg [(3'h5):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg34 = (1'h0);
  reg [(2'h3):(1'h0)] reg33 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg11 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg10 = (1'h0);
  reg [(3'h6):(1'h0)] reg9 = (1'h0);
  reg [(3'h7):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg5 = (1'h0);
  reg [(2'h3):(1'h0)] reg4 = (1'h0);
  assign y = {wire39,
                 wire38,
                 wire37,
                 wire31,
                 wire8,
                 wire7,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg11,
                 reg10,
                 reg9,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= (-$signed(wire3[(2'h2):(1'h1)]));
      reg5 <= wire3;
      reg6 <= wire3[(2'h3):(2'h3)];
    end
  assign wire7 = $signed($unsigned(((+reg5) || ((8'h9e) ? (8'hb0) : (8'ha7)))));
  assign wire8 = ((((reg5 * reg4) ^~ reg6) - ($signed(wire0) ?
                         {wire1} : reg6[(3'h4):(3'h4)])) ?
                     {$signed(reg6[(3'h6):(2'h2)])} : {reg6[(3'h6):(3'h5)]});
  always
    @(posedge clk) begin
      reg9 <= wire2[(3'h5):(2'h3)];
      reg10 <= ($unsigned(wire1) + $unsigned((wire8[(1'h1):(1'h1)] & (wire7 != (8'ha0)))));
      reg11 <= (($unsigned(wire7) ?
          $signed((+(8'ha5))) : reg6) ~^ reg5[(3'h6):(3'h4)]);
    end
  module12 #() modinst32 (wire31, clk, reg9, wire8, wire7, reg10);
  always
    @(posedge clk) begin
      reg33 <= $signed((&(~&$signed((8'ha3)))));
    end
  always
    @(posedge clk) begin
      reg34 <= wire7;
      reg35 <= wire0;
    end
  always
    @(posedge clk) begin
      reg36 <= $unsigned($unsigned({wire7}));
    end
  assign wire37 = $unsigned($signed(((~^reg10) > (reg36 ? reg4 : reg34))));
  assign wire38 = wire3;
  assign wire39 = $signed(reg33[(1'h1):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire16;
  input wire signed [(4'h9):(1'h0)] wire15;
  input wire [(4'h9):(1'h0)] wire14;
  input wire [(4'hb):(1'h0)] wire13;
  wire signed [(4'h9):(1'h0)] wire30;
  wire signed [(4'hb):(1'h0)] wire29;
  wire [(4'h9):(1'h0)] wire28;
  wire signed [(3'h5):(1'h0)] wire27;
  wire [(3'h5):(1'h0)] wire26;
  wire signed [(4'hb):(1'h0)] wire25;
  wire [(2'h2):(1'h0)] wire24;
  wire [(4'h8):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire22;
  wire signed [(3'h6):(1'h0)] wire21;
  wire signed [(3'h5):(1'h0)] wire18;
  wire [(4'ha):(1'h0)] wire17;
  reg [(3'h4):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg19 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire18,
                 wire17,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire17 = {({$unsigned(wire14)} >>> $unsigned(wire16[(1'h0):(1'h0)]))};
  assign wire18 = wire16;
  always
    @(posedge clk) begin
      reg19 <= ($signed($unsigned(wire17)) >>> (wire16 <<< $unsigned((&wire13))));
      reg20 <= wire14[(3'h4):(1'h1)];
    end
  assign wire21 = (wire14 ?
                      wire18 : ({(~wire17)} - ({reg19} ?
                          $signed((8'ha3)) : (wire15 >> reg20))));
  assign wire22 = $signed(((!wire18) && $signed((+(8'hae)))));
  assign wire23 = wire15;
  assign wire24 = $unsigned($signed($unsigned(reg19)));
  assign wire25 = {($signed((wire23 << wire13)) > wire15[(3'h7):(3'h4)])};
  assign wire26 = {$signed(wire17)};
  assign wire27 = wire25;
  assign wire28 = wire21[(2'h2):(2'h2)];
  assign wire29 = (8'ha1);
  assign wire30 = (8'ha6);
endmodule