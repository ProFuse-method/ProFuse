(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param62 = ((|((~&(8'haf)) ? ((8'hab) ? (8'ha1) : (8'haf)) : ((8'ha7) ~^ (8'hb0)))) << (~^((+(8'h9c)) <<< ((8'hb0) ? (8'haa) : (8'h9f))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire61;
  wire [(4'ha):(1'h0)] wire59;
  wire signed [(3'h7):(1'h0)] wire22;
  wire signed [(4'hb):(1'h0)] wire20;
  wire signed [(4'hb):(1'h0)] wire7;
  reg signed [(3'h6):(1'h0)] reg6 = (1'h0);
  reg [(4'h8):(1'h0)] reg5 = (1'h0);
  reg [(3'h5):(1'h0)] reg4 = (1'h0);
  assign y = {wire61, wire59, wire22, wire20, wire7, reg6, reg5, reg4, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= {{$unsigned($signed(wire1))}};
      reg5 <= $unsigned((!(8'hae)));
      reg6 <= wire1[(1'h1):(1'h1)];
    end
  assign wire7 = (^$signed({wire1[(2'h3):(2'h3)]}));
  module8 #() modinst21 (.wire10(wire2), .wire11(wire7), .clk(clk), .wire9(reg5), .y(wire20), .wire12(reg4));
  assign wire22 = ($unsigned((wire0[(3'h5):(3'h5)] ?
                      wire2 : (reg6 ? wire2 : wire2))) && $unsigned((wire7 ?
                      (&wire7) : (wire2 ? reg4 : reg4))));
  module23 #() modinst60 (wire59, clk, reg6, wire7, wire0, reg5);
  assign wire61 = $signed($signed(wire7));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23
#(parameter param58 = (((~&((8'haf) ? (8'hac) : (8'h9d))) ? (~|((8'h9e) << (8'ha9))) : (~^((8'ha6) ? (8'hae) : (8'ha9)))) >= (!((8'h9e) ? (+(8'ha6)) : {(8'ha8)}))))
(y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'h83):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire27;
  input wire [(4'hb):(1'h0)] wire26;
  input wire signed [(4'h8):(1'h0)] wire25;
  input wire [(4'h8):(1'h0)] wire24;
  wire signed [(4'h9):(1'h0)] wire54;
  wire [(4'ha):(1'h0)] wire53;
  wire signed [(4'h9):(1'h0)] wire42;
  wire signed [(3'h6):(1'h0)] wire40;
  wire [(4'h8):(1'h0)] wire28;
  reg [(2'h2):(1'h0)] reg57 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg56 = (1'h0);
  reg [(3'h4):(1'h0)] reg55 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg52 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(3'h4):(1'h0)] reg50 = (1'h0);
  reg [(4'h9):(1'h0)] reg49 = (1'h0);
  reg [(2'h2):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg47 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg45 = (1'h0);
  reg [(4'ha):(1'h0)] reg44 = (1'h0);
  reg [(4'h9):(1'h0)] reg43 = (1'h0);
  assign y = {wire54,
                 wire53,
                 wire42,
                 wire40,
                 wire28,
                 reg57,
                 reg56,
                 reg55,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 (1'h0)};
  assign wire28 = (($signed($unsigned(wire27)) ?
                          (wire24 ?
                              {wire25} : $unsigned((8'had))) : $signed((wire24 | wire25))) ?
                      (((~|wire26) ~^ (wire25 & (8'h9f))) ?
                          (wire26 - {wire26}) : {$unsigned(wire24)}) : (8'ha8));
  module29 #() modinst41 (wire40, clk, wire24, wire26, wire25, wire28);
  assign wire42 = wire24[(3'h5):(3'h4)];
  always
    @(posedge clk) begin
      reg43 <= $unsigned(wire26);
      reg44 <= {$unsigned((wire24[(3'h7):(1'h0)] >= (wire24 | wire27)))};
      if (reg43[(3'h7):(3'h7)])
        begin
          reg45 <= $unsigned(wire27[(2'h2):(1'h0)]);
        end
      else
        begin
          reg45 <= $unsigned((-reg44));
        end
    end
  always
    @(posedge clk) begin
      reg46 <= wire25[(2'h2):(1'h0)];
      if (wire26)
        begin
          reg47 <= reg43[(3'h5):(3'h4)];
          if ({(-({wire40} ^~ $unsigned((8'haf))))})
            begin
              reg48 <= ((-wire28) * wire24[(3'h4):(1'h1)]);
              reg49 <= (+$signed((wire24 || (8'haa))));
            end
          else
            begin
              reg48 <= ($unsigned(reg47[(1'h1):(1'h0)]) ?
                  wire24 : wire28[(3'h7):(1'h1)]);
            end
          if (wire42[(1'h0):(1'h0)])
            begin
              reg50 <= ((reg49 <<< (&$signed(wire25))) ?
                  ($unsigned((reg47 ?
                      reg44 : wire42)) == ($unsigned((8'ha4)) * reg47)) : reg48[(1'h0):(1'h0)]);
              reg51 <= (~&$unsigned(reg50));
              reg52 <= $signed(((^((8'had) ?
                  (8'ha6) : reg47)) & reg48[(2'h2):(1'h1)]));
            end
          else
            begin
              reg50 <= ($unsigned(((wire25 ?
                  (8'ha8) : wire27) || $signed(wire40))) * wire42[(3'h4):(2'h3)]);
              reg51 <= {$unsigned(((reg44 ? wire25 : (8'ha0)) ?
                      $signed(reg46) : (reg45 > (8'ha1))))};
              reg52 <= (reg48[(1'h0):(1'h0)] ?
                  ($unsigned(reg45[(2'h2):(1'h1)]) ?
                      $unsigned((!wire42)) : ((~&wire42) ?
                          wire28[(2'h3):(2'h3)] : (reg52 ?
                              reg43 : wire40))) : ($signed(reg48[(1'h1):(1'h0)]) <<< $unsigned(reg45)));
            end
        end
      else
        begin
          reg47 <= ($unsigned(wire42[(2'h3):(2'h2)]) ?
              (!reg45) : $unsigned(reg51[(2'h3):(2'h2)]));
        end
    end
  assign wire53 = reg49;
  assign wire54 = $signed(wire27);
  always
    @(posedge clk) begin
      if (reg48[(1'h0):(1'h0)])
        begin
          reg55 <= ((~((reg50 * (8'haa)) ?
              reg44 : reg43[(3'h4):(1'h0)])) ^~ (reg50[(1'h0):(1'h0)] ?
              $unsigned((wire25 + reg46)) : (~(reg49 ? reg47 : wire26))));
          reg56 <= reg52;
        end
      else
        begin
          if ({reg46})
            begin
              reg55 <= wire54[(3'h6):(2'h3)];
            end
          else
            begin
              reg55 <= $signed($signed((~^{reg55})));
              reg56 <= reg52;
            end
          reg57 <= reg55;
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param19 = {(((~^(8'ha7)) <= ((8'h9f) <<< (8'ha6))) ? (^~(-(8'ha2))) : (^(&(8'hae))))})
(y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire12;
  input wire [(4'ha):(1'h0)] wire11;
  input wire signed [(3'h6):(1'h0)] wire10;
  input wire [(3'h6):(1'h0)] wire9;
  wire signed [(4'h9):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire17;
  reg signed [(4'h9):(1'h0)] reg16 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg15 = (1'h0);
  reg [(4'h9):(1'h0)] reg14 = (1'h0);
  reg [(3'h6):(1'h0)] reg13 = (1'h0);
  assign y = {wire18, wire17, reg16, reg15, reg14, reg13, (1'h0)};
  always
    @(posedge clk) begin
      reg13 <= $unsigned((($unsigned(wire11) ?
              wire11[(3'h4):(3'h4)] : $unsigned(wire11)) ?
          $unsigned($unsigned(wire9)) : (-(^~(8'ha5)))));
      reg14 <= wire11[(4'h8):(3'h6)];
    end
  always
    @(posedge clk) begin
      reg15 <= {$signed({(reg13 ? reg14 : wire10)})};
      reg16 <= reg15;
    end
  assign wire17 = (wire11[(4'ha):(4'ha)] ?
                      {$unsigned({reg15})} : (reg14 ?
                          reg13[(1'h0):(1'h0)] : ((reg13 ?
                              reg16 : wire9) >> (wire11 ? wire9 : wire10))));
  assign wire18 = (wire10 ?
                      $unsigned(($unsigned(wire17) ?
                          (^~(8'hae)) : $signed(reg15))) : (((wire17 ?
                          wire12 : reg15) ^~ wire9[(3'h6):(1'h1)]) << $signed({wire11})));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module29  (y, clk, wire33, wire32, wire31, wire30);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire33;
  input wire signed [(4'h9):(1'h0)] wire32;
  input wire [(3'h7):(1'h0)] wire31;
  input wire [(2'h2):(1'h0)] wire30;
  wire signed [(4'h9):(1'h0)] wire39;
  wire [(4'ha):(1'h0)] wire38;
  wire [(2'h2):(1'h0)] wire37;
  wire [(3'h5):(1'h0)] wire36;
  wire signed [(4'h9):(1'h0)] wire35;
  wire [(4'ha):(1'h0)] wire34;
  assign y = {wire39, wire38, wire37, wire36, wire35, wire34, (1'h0)};
  assign wire34 = $signed(wire30[(1'h1):(1'h1)]);
  assign wire35 = wire30;
  assign wire36 = $unsigned($signed(((^(8'ha5)) << {wire35})));
  assign wire37 = wire35;
  assign wire38 = wire31;
  assign wire39 = (8'h9c);
endmodule