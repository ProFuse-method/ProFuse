(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire27;
  wire signed [(2'h2):(1'h0)] wire26;
  wire [(3'h6):(1'h0)] wire23;
  reg signed [(3'h4):(1'h0)] reg25 = (1'h0);
  assign y = {wire28, wire27, wire26, wire23, reg25, (1'h0)};
  module4 #() modinst24 (wire23, clk, wire0, wire2, wire1, wire3);
  always
    @(posedge clk) begin
      reg25 <= ($signed($unsigned((wire23 ? wire23 : wire2))) ?
          $unsigned((8'ha1)) : (^~(^~{wire2})));
    end
  assign wire26 = (^~$unsigned($signed((wire23 ^~ (8'ha5)))));
  assign wire27 = reg25;
  assign wire28 = {wire3};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param22 = ({{((8'ha7) * (8'ha8))}} < ((((8'h9e) ? (8'haa) : (8'h9d)) ? {(8'hab)} : ((8'ha5) ? (8'ha6) : (8'haf))) << ((&(8'hac)) ? ((8'hab) ? (8'h9d) : (8'ha6)) : ((8'ha4) ? (8'hae) : (8'hab))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire8;
  input wire signed [(2'h2):(1'h0)] wire7;
  input wire [(3'h4):(1'h0)] wire6;
  input wire signed [(2'h2):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire21;
  wire signed [(4'ha):(1'h0)] wire20;
  wire [(4'h8):(1'h0)] wire19;
  wire signed [(2'h3):(1'h0)] wire17;
  wire signed [(3'h5):(1'h0)] wire16;
  wire signed [(4'h8):(1'h0)] wire15;
  wire [(3'h6):(1'h0)] wire14;
  wire signed [(4'hb):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire11;
  wire signed [(3'h5):(1'h0)] wire10;
  wire signed [(3'h7):(1'h0)] wire9;
  reg [(4'h9):(1'h0)] reg18 = (1'h0);
  assign y = {wire21,
                 wire20,
                 wire19,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 reg18,
                 (1'h0)};
  assign wire9 = (^~wire5);
  assign wire10 = (wire7[(1'h0):(1'h0)] ? (~wire8) : wire7[(2'h2):(1'h0)]);
  assign wire11 = (wire6[(1'h1):(1'h0)] == ((wire7 ^~ wire9[(3'h4):(3'h4)]) ?
                      ($unsigned(wire10) == wire8[(1'h1):(1'h1)]) : wire9[(2'h2):(1'h1)]));
  assign wire12 = ((wire10 ?
                      (wire10[(1'h1):(1'h0)] >>> wire7) : wire7) ^ ((wire7 ?
                          ((8'ha7) ? wire11 : wire10) : (wire11 ?
                              wire6 : wire6)) ?
                      (~^{wire8}) : $signed(wire10)));
  assign wire13 = wire12[(3'h5):(2'h2)];
  assign wire14 = $signed((+((|wire9) << (^~(8'hac)))));
  assign wire15 = wire9[(1'h0):(1'h0)];
  assign wire16 = $signed((wire7 ^~ wire11[(2'h3):(1'h0)]));
  assign wire17 = $signed($signed(wire6));
  always
    @(posedge clk) begin
      reg18 <= (~^(^~(8'h9d)));
    end
  assign wire19 = $signed(reg18);
  assign wire20 = $signed(($signed(wire11) ?
                      {(wire14 | wire11)} : $signed((8'h9c))));
  assign wire21 = $unsigned($signed(wire7[(1'h0):(1'h0)]));
endmodule