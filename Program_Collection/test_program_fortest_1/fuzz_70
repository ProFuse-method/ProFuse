(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param83 = ({{((8'haf) ? (8'ha3) : (8'hac))}} ? (((^(8'ha5)) ~^ (~&(8'h9c))) ? (((8'ha2) >>> (8'hac)) ? ((8'hb0) >= (8'ha7)) : (+(8'had))) : {((8'h9c) ^~ (8'ha6))}) : (~|(|{(8'hab)}))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(3'h5):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire82;
  wire signed [(3'h5):(1'h0)] wire80;
  wire [(2'h3):(1'h0)] wire22;
  wire signed [(4'hb):(1'h0)] wire21;
  wire [(3'h6):(1'h0)] wire20;
  wire [(3'h5):(1'h0)] wire18;
  wire [(4'ha):(1'h0)] wire7;
  wire [(3'h7):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire4;
  assign y = {wire82,
                 wire80,
                 wire22,
                 wire21,
                 wire20,
                 wire18,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = (8'hae);
  assign wire5 = ($signed(wire2) ? wire0[(2'h3):(2'h2)] : (!wire0));
  assign wire6 = $unsigned((wire5[(2'h2):(1'h1)] ~^ wire3[(4'hb):(2'h3)]));
  assign wire7 = ($signed((wire5 ?
                         wire4[(2'h2):(1'h0)] : wire1[(1'h1):(1'h1)])) ?
                     wire0 : $unsigned(wire3[(2'h2):(2'h2)]));
  module8 #() modinst19 (.wire10(wire7), .clk(clk), .wire11(wire6), .wire12(wire3), .wire9(wire5), .y(wire18));
  assign wire20 = $unsigned((wire7 ?
                      $unsigned((|wire18)) : wire4[(1'h1):(1'h1)]));
  assign wire21 = (wire20 ? wire20 : (wire7[(1'h1):(1'h1)] ? wire1 : wire3));
  assign wire22 = $unsigned($signed(wire21[(3'h5):(2'h2)]));
  module23 #() modinst81 (wire80, clk, wire2, wire5, wire1, wire20);
  assign wire82 = $signed(wire3[(2'h2):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23
#(parameter param79 = {(8'h9c)})
(y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'h61):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire27;
  input wire signed [(3'h7):(1'h0)] wire26;
  input wire signed [(4'ha):(1'h0)] wire25;
  input wire signed [(3'h6):(1'h0)] wire24;
  wire signed [(4'h9):(1'h0)] wire78;
  wire signed [(2'h3):(1'h0)] wire77;
  wire [(3'h4):(1'h0)] wire73;
  wire [(3'h7):(1'h0)] wire72;
  wire signed [(2'h3):(1'h0)] wire69;
  wire signed [(4'hb):(1'h0)] wire50;
  wire signed [(4'h9):(1'h0)] wire49;
  wire [(4'h8):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire46;
  wire [(4'hb):(1'h0)] wire28;
  reg [(4'ha):(1'h0)] reg76 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg75 = (1'h0);
  reg [(2'h2):(1'h0)] reg71 = (1'h0);
  assign y = {wire78,
                 wire77,
                 wire73,
                 wire72,
                 wire69,
                 wire50,
                 wire49,
                 wire48,
                 wire46,
                 wire28,
                 reg76,
                 reg75,
                 reg71,
                 (1'h0)};
  assign wire28 = wire25[(3'h4):(2'h2)];
  module29 #() modinst47 (wire46, clk, wire24, wire26, wire25, wire27);
  assign wire48 = (~&(((+wire27) ? (8'had) : {wire46}) ?
                      ((8'haf) ?
                          (~&wire28) : (wire28 ? wire25 : (8'hac))) : wire28));
  assign wire49 = $unsigned(wire28);
  assign wire50 = $signed(wire26);
  module51 #() modinst70 (.clk(clk), .wire53(wire46), .wire55(wire26), .y(wire69), .wire54(wire50), .wire52(wire49));
  always
    @(posedge clk) begin
      reg71 <= $unsigned(({((8'ha9) ? (8'ha4) : wire48)} ?
          {((8'ha5) <<< wire25)} : {$signed((8'ha7))}));
    end
  assign wire72 = (&((-((8'ha9) << wire50)) ?
                      wire48[(3'h7):(3'h5)] : (|$signed(wire46))));
  module51 #() modinst74 (.clk(clk), .wire54(wire46), .wire52(wire69), .y(wire73), .wire55(wire50), .wire53(wire48));
  always
    @(posedge clk) begin
      reg75 <= $signed(wire50);
      reg76 <= $signed($signed(((wire27 < wire72) ?
          (wire69 ? (8'hab) : (8'h9f)) : (wire49 ? wire27 : wire48))));
    end
  assign wire77 = wire27;
  assign wire78 = $signed($unsigned(((wire73 | reg75) ?
                      reg71[(1'h0):(1'h0)] : $signed(wire24))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param17 = ({(((8'ha5) > (8'ha4)) ? (~|(8'haf)) : {(8'ha3)})} ? ((((8'hb0) ? (8'haf) : (8'h9e)) < (~&(8'haf))) ? ((&(8'ha2)) ? {(8'had)} : (^(8'ha6))) : (|((8'hb0) ? (8'ha7) : (8'ha6)))) : (^~({(8'ha3)} <<< (~&(8'ha9))))))
(y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h1a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire12;
  input wire signed [(3'h7):(1'h0)] wire11;
  input wire [(4'ha):(1'h0)] wire10;
  input wire signed [(3'h7):(1'h0)] wire9;
  wire [(4'hb):(1'h0)] wire16;
  wire signed [(3'h6):(1'h0)] wire15;
  wire signed [(3'h5):(1'h0)] wire14;
  wire signed [(2'h3):(1'h0)] wire13;
  assign y = {wire16, wire15, wire14, wire13, (1'h0)};
  assign wire13 = wire9[(1'h1):(1'h0)];
  assign wire14 = wire13[(1'h0):(1'h0)];
  assign wire15 = (+$unsigned(((wire14 < wire13) != (~wire13))));
  assign wire16 = ($unsigned($signed($signed(wire13))) ?
                      (&(8'ha0)) : $unsigned(({wire9} ?
                          wire15[(1'h1):(1'h1)] : ((8'ha3) ?
                              wire15 : wire11))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module51  (y, clk, wire55, wire54, wire53, wire52);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire55;
  input wire [(4'h9):(1'h0)] wire54;
  input wire [(2'h3):(1'h0)] wire53;
  input wire signed [(2'h2):(1'h0)] wire52;
  wire signed [(3'h4):(1'h0)] wire68;
  wire signed [(4'h8):(1'h0)] wire67;
  wire [(2'h3):(1'h0)] wire66;
  wire signed [(4'h9):(1'h0)] wire65;
  wire [(4'h8):(1'h0)] wire60;
  wire [(4'hb):(1'h0)] wire59;
  wire [(2'h2):(1'h0)] wire58;
  wire [(3'h4):(1'h0)] wire57;
  wire signed [(3'h4):(1'h0)] wire56;
  reg [(4'ha):(1'h0)] reg64 = (1'h0);
  reg [(3'h7):(1'h0)] reg63 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg62 = (1'h0);
  reg [(4'h9):(1'h0)] reg61 = (1'h0);
  assign y = {wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 (1'h0)};
  assign wire56 = $unsigned(({wire53} ? $unsigned((&wire53)) : wire55));
  assign wire57 = $signed((((wire53 ? wire53 : wire56) ?
                      $signed(wire54) : (!(8'hb0))) & ({wire56} ?
                      $signed(wire54) : $signed(wire52))));
  assign wire58 = ($unsigned($unsigned(wire53)) ?
                      {($unsigned(wire52) ?
                              wire53 : $signed(wire55))} : wire55);
  assign wire59 = (~^($unsigned(wire57[(1'h1):(1'h1)]) ?
                      wire53[(2'h3):(1'h1)] : $unsigned(wire53[(2'h2):(1'h0)])));
  assign wire60 = {($signed($unsigned(wire54)) <= wire54)};
  always
    @(posedge clk) begin
      reg61 <= $unsigned($signed($signed(wire56[(2'h3):(1'h1)])));
      if ($unsigned({((wire54 ? wire52 : wire57) == $unsigned((8'ha2)))}))
        begin
          reg62 <= $unsigned((wire57[(1'h0):(1'h0)] ?
              $unsigned((wire56 << wire53)) : $signed($signed(wire59))));
          reg63 <= (8'h9e);
          reg64 <= (~|(wire52 <<< $unsigned($unsigned(wire53))));
        end
      else
        begin
          reg62 <= wire52[(1'h1):(1'h0)];
          if (wire55[(2'h3):(2'h2)])
            begin
              reg63 <= {reg61};
            end
          else
            begin
              reg63 <= {wire59};
            end
          reg64 <= $signed($signed($unsigned({wire56})));
        end
    end
  assign wire65 = ($signed((^~{(8'h9e)})) ?
                      wire53 : (($unsigned(wire57) < wire52) ?
                          wire56[(1'h0):(1'h0)] : {wire53[(2'h3):(2'h2)]}));
  assign wire66 = $signed(wire52[(1'h1):(1'h1)]);
  assign wire67 = $unsigned((($signed(wire56) ?
                          {wire59} : wire60[(3'h7):(2'h2)]) ?
                      (wire56 >> $unsigned(wire55)) : $signed($signed((8'h9f)))));
  assign wire68 = ((wire54[(3'h5):(1'h0)] ?
                      $unsigned((wire53 != wire52)) : {$unsigned(wire60)}) | wire59[(3'h5):(3'h4)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module29  (y, clk, wire33, wire32, wire31, wire30);
  output wire [(32'h5f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire33;
  input wire signed [(2'h3):(1'h0)] wire32;
  input wire signed [(4'ha):(1'h0)] wire31;
  input wire [(3'h7):(1'h0)] wire30;
  wire [(4'hb):(1'h0)] wire45;
  wire [(4'h9):(1'h0)] wire44;
  wire signed [(4'ha):(1'h0)] wire43;
  wire [(4'h8):(1'h0)] wire42;
  wire signed [(4'hb):(1'h0)] wire41;
  wire [(2'h3):(1'h0)] wire40;
  wire [(4'h9):(1'h0)] wire38;
  wire signed [(2'h3):(1'h0)] wire37;
  wire [(3'h5):(1'h0)] wire35;
  wire [(4'hb):(1'h0)] wire34;
  reg signed [(4'h9):(1'h0)] reg39 = (1'h0);
  reg [(3'h5):(1'h0)] reg36 = (1'h0);
  assign y = {wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire38,
                 wire37,
                 wire35,
                 wire34,
                 reg39,
                 reg36,
                 (1'h0)};
  assign wire34 = $signed($signed($signed($unsigned(wire33))));
  assign wire35 = (({(wire30 ? wire31 : wire31)} ?
                      wire30 : (&(^~wire30))) <<< (&({wire31} >= (-wire30))));
  always
    @(posedge clk) begin
      reg36 <= (!wire33[(2'h2):(1'h1)]);
    end
  assign wire37 = reg36;
  assign wire38 = (reg36 < (~&$unsigned(wire34[(3'h7):(3'h6)])));
  always
    @(posedge clk) begin
      reg39 <= $signed(($signed((wire34 >> reg36)) ?
          wire35 : $unsigned((wire31 ? wire31 : wire31))));
    end
  assign wire40 = wire31;
  assign wire41 = $unsigned((($signed((8'ha1)) ?
                      $signed(wire40) : wire33) >> (8'hb0)));
  assign wire42 = (wire32[(1'h0):(1'h0)] <<< wire32);
  assign wire43 = ($signed((&((8'h9d) * wire38))) ?
                      ($unsigned((wire41 ? wire31 : reg36)) ?
                          (|wire40[(2'h3):(1'h0)]) : $unsigned((reg36 * wire34))) : $unsigned($unsigned(wire34[(3'h7):(3'h7)])));
  assign wire44 = wire33;
  assign wire45 = $signed($signed((~|wire44[(3'h7):(3'h5)])));
endmodule