(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param71 = (~&{(^~(-(8'ha3)))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire68;
  wire [(4'ha):(1'h0)] wire67;
  wire signed [(2'h2):(1'h0)] wire66;
  wire signed [(2'h2):(1'h0)] wire64;
  wire [(4'hb):(1'h0)] wire24;
  wire [(4'ha):(1'h0)] wire23;
  wire signed [(2'h2):(1'h0)] wire22;
  wire signed [(3'h5):(1'h0)] wire21;
  wire [(4'h9):(1'h0)] wire20;
  wire [(4'ha):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire4;
  reg [(4'h9):(1'h0)] reg70 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg69 = (1'h0);
  assign y = {wire68,
                 wire67,
                 wire66,
                 wire64,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire18,
                 wire5,
                 wire4,
                 reg70,
                 reg69,
                 (1'h0)};
  assign wire4 = $signed($signed(wire1));
  assign wire5 = (8'hb0);
  module6 #() modinst19 (.wire7(wire5), .wire8(wire0), .wire9(wire2), .clk(clk), .y(wire18), .wire10(wire3));
  assign wire20 = ({(~(wire4 ?
                          wire3 : wire18))} != {($unsigned(wire1) - (wire1 - wire1))});
  assign wire21 = (^$signed($unsigned($unsigned((8'hab)))));
  assign wire22 = (8'ha3);
  assign wire23 = ((wire1[(2'h3):(1'h0)] ?
                          wire2 : ((wire3 ?
                              wire0 : wire18) >>> (wire5 ^ wire3))) ?
                      $signed($unsigned($signed(wire18))) : wire18[(3'h5):(1'h1)]);
  assign wire24 = (8'hb0);
  module25 #() modinst65 (wire64, clk, wire24, wire4, wire3, wire18);
  assign wire66 = $signed($unsigned(wire22));
  assign wire67 = (((|$unsigned(wire1)) > {((8'haf) * wire21)}) >> $signed(($signed(wire3) >= $signed(wire3))));
  assign wire68 = $unsigned(({$signed((8'ha4))} ?
                      (~(wire22 ? wire3 : wire23)) : $unsigned((!wire67))));
  always
    @(posedge clk) begin
      reg69 <= {$signed(wire20)};
      reg70 <= (reg69[(3'h7):(2'h3)] ^ wire67[(2'h2):(1'h0)]);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25
#(parameter param63 = (8'hb0))
(y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h65):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire29;
  input wire signed [(4'h9):(1'h0)] wire28;
  input wire [(4'hb):(1'h0)] wire27;
  input wire signed [(4'ha):(1'h0)] wire26;
  wire [(4'ha):(1'h0)] wire62;
  wire signed [(3'h6):(1'h0)] wire59;
  wire signed [(2'h3):(1'h0)] wire58;
  wire [(3'h5):(1'h0)] wire57;
  wire signed [(3'h5):(1'h0)] wire56;
  wire [(3'h6):(1'h0)] wire48;
  wire [(2'h3):(1'h0)] wire46;
  reg signed [(4'ha):(1'h0)] reg61 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg55 = (1'h0);
  reg [(2'h2):(1'h0)] reg54 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg53 = (1'h0);
  reg [(4'h8):(1'h0)] reg52 = (1'h0);
  reg [(3'h5):(1'h0)] reg51 = (1'h0);
  reg [(3'h5):(1'h0)] reg50 = (1'h0);
  reg [(4'h9):(1'h0)] reg49 = (1'h0);
  assign y = {wire62,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire48,
                 wire46,
                 reg61,
                 reg60,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 (1'h0)};
  module30 #() modinst47 (.wire34(wire28), .wire33(wire29), .y(wire46), .wire32(wire27), .clk(clk), .wire31(wire26));
  assign wire48 = (+{$signed(wire28[(4'h9):(2'h2)])});
  always
    @(posedge clk) begin
      if ((~&($signed((!wire29)) <= ($signed(wire48) ?
          $signed(wire48) : wire27[(4'ha):(1'h1)]))))
        begin
          if (wire28[(2'h2):(2'h2)])
            begin
              reg49 <= ($signed((wire26[(1'h1):(1'h1)] << wire27[(4'ha):(3'h4)])) ?
                  $signed((wire46 ?
                      (~|wire29) : (8'hae))) : $unsigned(((wire48 ~^ wire28) ?
                      {(8'hab)} : wire28)));
              reg50 <= $signed($signed(((|wire29) != {wire28})));
            end
          else
            begin
              reg49 <= $unsigned((!$signed(((8'ha7) ^ wire28))));
              reg50 <= wire46[(1'h1):(1'h1)];
              reg51 <= ((^wire27) >= $unsigned($unsigned((wire29 <= wire46))));
            end
          reg52 <= {(-($unsigned(wire46) ? $signed(wire26) : reg51))};
          reg53 <= ((~^(&$signed(wire27))) ?
              ((!(reg51 ? wire27 : (8'ha9))) ?
                  ((wire26 ? wire48 : wire46) ?
                      $signed(reg51) : {(8'ha3)}) : ($unsigned(reg50) == $unsigned(wire29))) : $signed(wire28));
        end
      else
        begin
          if ($signed(((reg51[(1'h0):(1'h0)] ?
                  $unsigned((8'ha6)) : wire46[(1'h1):(1'h1)]) ?
              ($unsigned(reg51) ?
                  $signed(reg52) : wire29[(1'h0):(1'h0)]) : $signed(wire46[(1'h1):(1'h0)]))))
            begin
              reg49 <= $signed((~{wire27[(3'h6):(1'h1)]}));
            end
          else
            begin
              reg49 <= $unsigned($signed((~(8'ha4))));
              reg50 <= {reg51[(1'h1):(1'h1)]};
              reg51 <= (reg49[(1'h1):(1'h0)] ?
                  reg50[(3'h4):(2'h3)] : $unsigned((+$signed(wire28))));
            end
        end
      reg54 <= $signed($signed($unsigned((reg49 ? wire46 : reg49))));
      reg55 <= $signed(wire48[(2'h2):(2'h2)]);
    end
  assign wire56 = $signed(wire26[(3'h4):(1'h1)]);
  assign wire57 = reg53[(3'h4):(3'h4)];
  assign wire58 = wire46;
  assign wire59 = (($signed($signed(reg53)) != (8'ha5)) * $signed(wire26));
  always
    @(posedge clk) begin
      if ($signed((((wire56 ? wire29 : reg53) || $unsigned(reg54)) ?
          $unsigned(((8'haf) ? (8'haf) : reg54)) : ($signed(wire59) ?
              (^~wire46) : (wire27 < wire59)))))
        begin
          reg60 <= wire27[(3'h6):(1'h1)];
        end
      else
        begin
          reg60 <= (^~wire59[(3'h4):(2'h3)]);
        end
      reg61 <= $signed($unsigned(wire26));
    end
  assign wire62 = $signed($unsigned($unsigned((8'ha0))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire10;
  input wire [(3'h5):(1'h0)] wire9;
  input wire signed [(3'h6):(1'h0)] wire8;
  input wire [(4'h8):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire17;
  wire signed [(2'h2):(1'h0)] wire16;
  wire signed [(4'ha):(1'h0)] wire15;
  wire [(3'h6):(1'h0)] wire14;
  wire signed [(3'h6):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire12;
  wire [(4'hb):(1'h0)] wire11;
  assign y = {wire17, wire16, wire15, wire14, wire13, wire12, wire11, (1'h0)};
  assign wire11 = (wire8[(3'h6):(2'h2)] ?
                      {(!$signed(wire10))} : wire8[(3'h4):(2'h3)]);
  assign wire12 = (^~$unsigned(wire10));
  assign wire13 = $signed($unsigned((~&(wire9 ^ wire11))));
  assign wire14 = (({wire8[(1'h0):(1'h0)]} ~^ {wire11}) ?
                      wire13 : $unsigned(wire13[(2'h2):(1'h0)]));
  assign wire15 = (wire13[(1'h1):(1'h1)] ?
                      ({(wire11 * wire7)} ?
                          ($unsigned(wire14) ?
                              {(8'h9e)} : wire13) : (8'ha2)) : wire7[(3'h6):(3'h4)]);
  assign wire16 = {((|(wire11 + (8'ha9))) ?
                          {$unsigned((8'hac))} : $signed(wire7[(1'h1):(1'h1)]))};
  assign wire17 = (wire7 || $signed(($unsigned(wire12) || ((8'haf) <= wire9))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module30
#(parameter param45 = {((!((8'ha7) ~^ (8'haa))) ? (^((8'haa) && (8'ha7))) : {((8'ha1) ? (8'ha8) : (8'ha7))})})
(y, clk, wire34, wire33, wire32, wire31);
  output wire [(32'h49):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire34;
  input wire signed [(3'h4):(1'h0)] wire33;
  input wire [(4'hb):(1'h0)] wire32;
  input wire signed [(4'ha):(1'h0)] wire31;
  wire [(2'h3):(1'h0)] wire44;
  wire signed [(4'h9):(1'h0)] wire43;
  wire signed [(2'h3):(1'h0)] wire42;
  wire signed [(3'h5):(1'h0)] wire41;
  wire signed [(4'h8):(1'h0)] wire38;
  wire [(4'ha):(1'h0)] wire37;
  wire signed [(4'hb):(1'h0)] wire36;
  wire signed [(3'h5):(1'h0)] wire35;
  reg signed [(4'hb):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg39 = (1'h0);
  assign y = {wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 reg40,
                 reg39,
                 (1'h0)};
  assign wire35 = wire33;
  assign wire36 = (wire35 || $signed($signed({wire31})));
  assign wire37 = (~|(({(8'hb0)} ? (wire34 ? wire36 : wire35) : {wire32}) ?
                      $signed((^wire33)) : ($signed((8'ha0)) - $signed(wire33))));
  assign wire38 = (~&(((wire33 ? wire32 : wire33) <<< (wire32 <<< wire31)) ?
                      $unsigned(((8'haa) & wire33)) : wire32[(4'hb):(1'h1)]));
  always
    @(posedge clk) begin
      reg39 <= (($unsigned((wire31 ? wire34 : wire35)) ?
              ($signed(wire38) + $unsigned(wire38)) : $signed($signed(wire36))) ?
          {$signed($unsigned(wire37))} : wire38[(3'h5):(3'h5)]);
      reg40 <= {$unsigned($unsigned($signed(wire38)))};
    end
  assign wire41 = $unsigned($signed($unsigned({(8'ha2)})));
  assign wire42 = $signed(($unsigned(((8'hb0) | wire34)) + {wire38}));
  assign wire43 = (8'ha4);
  assign wire44 = ({wire35[(3'h5):(2'h2)]} * {wire36});
endmodule