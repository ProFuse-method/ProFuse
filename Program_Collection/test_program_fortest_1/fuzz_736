(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param57 = (|{(~&{(8'ha1)})}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire56;
  wire signed [(3'h7):(1'h0)] wire54;
  wire [(4'h9):(1'h0)] wire52;
  wire [(4'h8):(1'h0)] wire50;
  wire signed [(3'h7):(1'h0)] wire5;
  wire [(3'h7):(1'h0)] wire4;
  reg [(4'h9):(1'h0)] reg53 = (1'h0);
  assign y = {wire56, wire54, wire52, wire50, wire5, wire4, reg53, (1'h0)};
  assign wire4 = {wire2[(4'ha):(3'h6)]};
  assign wire5 = (wire2[(3'h5):(1'h0)] ?
                     ({(wire1 ? wire2 : wire2)} >> (~(8'hae))) : wire2);
  module6 #() modinst51 (wire50, clk, wire5, wire0, wire4, wire2);
  assign wire52 = wire1;
  always
    @(posedge clk) begin
      reg53 <= ((($signed((8'h9d)) <= (wire1 < wire0)) ?
          (!$signed((8'hae))) : (8'hab)) & wire5[(1'h1):(1'h1)]);
    end
  module16 #() modinst55 (wire54, clk, wire50, wire5, wire3, wire0);
  assign wire56 = ($unsigned(wire1[(1'h1):(1'h1)]) ? (8'ha4) : wire2);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h65):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire10;
  input wire signed [(4'h8):(1'h0)] wire9;
  input wire [(3'h7):(1'h0)] wire8;
  input wire [(4'h8):(1'h0)] wire7;
  wire [(4'h9):(1'h0)] wire49;
  wire [(4'ha):(1'h0)] wire48;
  wire [(4'h8):(1'h0)] wire47;
  wire signed [(4'hb):(1'h0)] wire46;
  wire signed [(2'h3):(1'h0)] wire45;
  wire signed [(4'h9):(1'h0)] wire44;
  wire signed [(2'h2):(1'h0)] wire43;
  wire signed [(3'h4):(1'h0)] wire41;
  wire signed [(4'h8):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire14;
  wire signed [(3'h7):(1'h0)] wire13;
  wire signed [(4'hb):(1'h0)] wire12;
  wire [(3'h7):(1'h0)] wire11;
  assign y = {wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire41,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 (1'h0)};
  assign wire11 = {{(~&(|wire10))}};
  assign wire12 = ((~|{(wire10 ~^ wire11)}) ?
                      wire11[(2'h3):(2'h3)] : (+wire8[(3'h6):(1'h0)]));
  assign wire13 = (^(wire12 ^ wire8[(3'h5):(2'h3)]));
  assign wire14 = (!$signed($signed($unsigned(wire10))));
  assign wire15 = wire11[(2'h2):(2'h2)];
  module16 #() modinst42 (wire41, clk, wire8, wire11, wire14, wire12);
  assign wire43 = ((($unsigned(wire41) & (wire7 | (8'had))) ?
                      ((~wire7) & (wire10 ?
                          wire10 : wire7)) : (!(&wire13))) > (~^$signed(wire7[(3'h7):(2'h3)])));
  assign wire44 = $signed({{(~wire12)}});
  assign wire45 = wire12;
  assign wire46 = {($unsigned(wire15) <= $unsigned(wire43))};
  assign wire47 = wire10[(1'h1):(1'h1)];
  assign wire48 = ({$unsigned($signed(wire15))} - ($signed($unsigned((8'ha5))) ?
                      wire12 : wire9[(3'h4):(3'h4)]));
  assign wire49 = (&(8'ha0));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16
#(parameter param40 = (~&{(((8'hac) == (8'h9e)) >= ((8'ha1) || (8'ha9)))}))
(y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h68):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire20;
  input wire signed [(3'h7):(1'h0)] wire19;
  input wire signed [(2'h3):(1'h0)] wire18;
  input wire signed [(3'h4):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire39;
  wire [(2'h3):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire37;
  wire signed [(3'h7):(1'h0)] wire36;
  wire signed [(2'h3):(1'h0)] wire35;
  wire signed [(3'h5):(1'h0)] wire34;
  wire [(3'h5):(1'h0)] wire33;
  wire [(4'h8):(1'h0)] wire32;
  wire signed [(3'h7):(1'h0)] wire26;
  wire signed [(4'h8):(1'h0)] wire25;
  wire [(2'h3):(1'h0)] wire24;
  reg signed [(2'h2):(1'h0)] reg31 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg29 = (1'h0);
  reg [(4'hb):(1'h0)] reg28 = (1'h0);
  reg [(2'h3):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg22 = (1'h0);
  reg [(2'h3):(1'h0)] reg21 = (1'h0);
  assign y = {wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire26,
                 wire25,
                 wire24,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg23,
                 reg22,
                 reg21,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg21 <= wire18[(1'h0):(1'h0)];
      reg22 <= (!{$signed((wire20 != wire20))});
      reg23 <= wire19[(3'h7):(2'h3)];
    end
  assign wire24 = {$signed((8'ha3))};
  assign wire25 = ((($unsigned((8'hac)) ?
                      {wire19} : $unsigned(wire17)) || (wire24 ?
                      (wire18 ^~ reg22) : (wire18 ?
                          wire17 : wire24))) != (~|(reg21 >>> (8'ha0))));
  assign wire26 = {$unsigned($signed((wire20 ? wire24 : wire19)))};
  always
    @(posedge clk) begin
      reg27 <= wire25[(3'h5):(1'h0)];
      if ((reg23[(2'h2):(2'h2)] <= {(|(reg27 <= (8'ha6)))}))
        begin
          reg28 <= reg27[(1'h1):(1'h0)];
          if ($signed((~&{$signed(reg22)})))
            begin
              reg29 <= ($unsigned($signed((reg28 ? (8'haa) : reg27))) ?
                  reg28 : wire18);
              reg30 <= {$unsigned((reg21[(2'h2):(2'h2)] ?
                      (^~(8'ha7)) : $signed(reg28)))};
            end
          else
            begin
              reg29 <= (~&$unsigned(wire18[(1'h1):(1'h0)]));
              reg30 <= (~^wire18);
            end
          reg31 <= wire17;
        end
      else
        begin
          reg28 <= $unsigned(($signed(reg22[(2'h3):(2'h3)]) + reg27));
        end
    end
  assign wire32 = reg30;
  assign wire33 = ($unsigned((~^(wire26 ? wire19 : wire25))) ?
                      $unsigned((~^(wire18 ?
                          reg27 : reg27))) : (reg22 + $signed(reg30)));
  assign wire34 = {wire24[(1'h1):(1'h1)]};
  assign wire35 = ($signed(((wire17 ^ wire25) <= $signed(wire19))) || $signed((wire26[(1'h0):(1'h0)] ?
                      $unsigned(reg31) : $unsigned(reg21))));
  assign wire36 = (~^wire20);
  assign wire37 = $unsigned($unsigned((8'ha1)));
  assign wire38 = reg22[(2'h3):(2'h2)];
  assign wire39 = wire24;
endmodule