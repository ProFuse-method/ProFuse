(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param44 = (!(~&{((8'h9d) ? (8'hab) : (8'ha2))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire [(3'h5):(1'h0)] wire2;
  input wire [(3'h4):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire43;
  wire signed [(4'h9):(1'h0)] wire41;
  wire [(4'ha):(1'h0)] wire9;
  wire [(3'h4):(1'h0)] wire8;
  wire [(4'h9):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire6;
  wire [(3'h5):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire4;
  assign y = {wire43, wire41, wire9, wire8, wire7, wire6, wire5, wire4, (1'h0)};
  assign wire4 = $signed($signed(((wire2 || (8'ha4)) ?
                     wire1[(1'h1):(1'h1)] : $unsigned(wire3))));
  assign wire5 = {$unsigned(($signed(wire4) ? $unsigned(wire0) : (&(8'h9f))))};
  assign wire6 = $signed($signed($signed((-wire4))));
  assign wire7 = {wire3[(3'h4):(2'h3)]};
  assign wire8 = (8'ha7);
  assign wire9 = wire8;
  module10 #() modinst42 (wire41, clk, wire2, wire7, wire6, wire8);
  assign wire43 = (!wire9);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire14;
  input wire [(4'h9):(1'h0)] wire13;
  input wire signed [(3'h5):(1'h0)] wire12;
  input wire signed [(2'h2):(1'h0)] wire11;
  wire [(3'h5):(1'h0)] wire39;
  wire signed [(2'h2):(1'h0)] wire38;
  wire [(3'h6):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire36;
  wire signed [(3'h6):(1'h0)] wire31;
  wire [(4'hb):(1'h0)] wire18;
  wire signed [(2'h2):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire16;
  wire signed [(3'h6):(1'h0)] wire15;
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg35 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg33 = (1'h0);
  assign y = {wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire31,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 reg40,
                 reg35,
                 reg34,
                 reg33,
                 (1'h0)};
  assign wire15 = $unsigned($signed(($unsigned(wire13) | (~|wire12))));
  assign wire16 = $unsigned(wire15);
  assign wire17 = ((((^~wire12) != {wire15}) ?
                      $unsigned($unsigned(wire11)) : wire14[(1'h1):(1'h1)]) >> $unsigned(wire15[(2'h2):(2'h2)]));
  assign wire18 = (8'hac);
  module19 #() modinst32 (.wire22(wire14), .wire20(wire17), .wire23(wire16), .wire21(wire18), .y(wire31), .clk(clk));
  always
    @(posedge clk) begin
      if (wire11[(1'h1):(1'h1)])
        begin
          reg33 <= wire31;
          if ($unsigned(wire11[(1'h1):(1'h1)]))
            begin
              reg34 <= wire18;
            end
          else
            begin
              reg34 <= wire18;
            end
        end
      else
        begin
          if ({$unsigned((reg34[(3'h7):(3'h6)] | (&(8'h9d))))})
            begin
              reg33 <= $unsigned($signed(((^~wire12) | wire13[(2'h3):(1'h0)])));
            end
          else
            begin
              reg33 <= (reg33[(1'h1):(1'h1)] ?
                  (|wire16) : (((|reg34) > (wire15 ?
                      wire17 : wire14)) ^~ $unsigned($signed(wire31))));
            end
          reg34 <= $signed($unsigned($signed($signed(wire16))));
          reg35 <= (~$signed((~reg33[(3'h4):(3'h4)])));
        end
    end
  assign wire36 = (&wire31);
  assign wire37 = (+(!$unsigned((wire15 ? wire16 : wire17))));
  assign wire38 = $signed(($unsigned(wire16) ?
                      ($unsigned(wire11) + (~&(8'h9d))) : wire15));
  assign wire39 = wire13[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg40 <= wire16;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module19  (y, clk, wire23, wire22, wire21, wire20);
  output wire [(32'h32):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire23;
  input wire [(2'h2):(1'h0)] wire22;
  input wire [(2'h2):(1'h0)] wire21;
  input wire signed [(2'h2):(1'h0)] wire20;
  wire signed [(2'h3):(1'h0)] wire27;
  wire [(4'ha):(1'h0)] wire26;
  wire [(4'hb):(1'h0)] wire25;
  wire signed [(3'h6):(1'h0)] wire24;
  reg [(3'h5):(1'h0)] reg30 = (1'h0);
  reg [(3'h4):(1'h0)] reg29 = (1'h0);
  reg [(4'ha):(1'h0)] reg28 = (1'h0);
  assign y = {wire27, wire26, wire25, wire24, reg30, reg29, reg28, (1'h0)};
  assign wire24 = ((~&wire20[(2'h2):(2'h2)]) ?
                      wire22 : (~wire23[(1'h0):(1'h0)]));
  assign wire25 = ((|wire20[(1'h1):(1'h0)]) ?
                      wire21[(2'h2):(1'h0)] : (wire24[(2'h3):(2'h2)] ?
                          $unsigned($unsigned(wire22)) : ((~|wire21) ~^ wire22)));
  assign wire26 = ($signed((+$unsigned(wire22))) ? (8'ha4) : (8'ha0));
  assign wire27 = $unsigned(wire24[(2'h3):(2'h3)]);
  always
    @(posedge clk) begin
      reg28 <= (~((-(wire23 ? wire21 : wire25)) ?
          $signed(wire24[(2'h3):(2'h3)]) : (^~((8'haf) ? wire25 : wire22))));
      reg29 <= {{$signed((reg28 || wire20))}};
      reg30 <= {(((wire25 ^~ wire25) ?
                  (wire23 >>> (8'ha2)) : (wire24 ? wire20 : wire22)) ?
              wire24[(3'h6):(2'h2)] : (wire21[(2'h2):(1'h1)] ?
                  wire24 : (wire21 ? wire25 : wire26)))};
    end
endmodule