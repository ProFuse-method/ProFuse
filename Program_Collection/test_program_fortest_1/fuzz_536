(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire0;
  wire [(3'h7):(1'h0)] wire14;
  wire signed [(4'ha):(1'h0)] wire13;
  wire [(3'h7):(1'h0)] wire12;
  wire [(3'h5):(1'h0)] wire11;
  wire [(3'h5):(1'h0)] wire10;
  wire signed [(4'h8):(1'h0)] wire9;
  wire signed [(3'h6):(1'h0)] wire8;
  wire [(4'h8):(1'h0)] wire7;
  wire [(2'h3):(1'h0)] wire6;
  wire signed [(2'h3):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire4;
  reg signed [(4'ha):(1'h0)] reg18 = (1'h0);
  reg [(4'h8):(1'h0)] reg17 = (1'h0);
  reg [(3'h5):(1'h0)] reg16 = (1'h0);
  reg [(3'h6):(1'h0)] reg15 = (1'h0);
  assign y = {wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 (1'h0)};
  assign wire4 = $unsigned((($signed(wire2) == wire3) & (|$signed(wire1))));
  assign wire5 = (~|wire2);
  assign wire6 = (wire3[(1'h0):(1'h0)] << wire4);
  assign wire7 = $unsigned(($signed((~^(8'hb0))) * (wire6[(2'h3):(1'h1)] != wire5[(2'h2):(1'h1)])));
  assign wire8 = (8'ha0);
  assign wire9 = {(wire4[(3'h5):(2'h2)] ^~ $signed({wire2}))};
  assign wire10 = (wire0 ?
                      {((8'ha1) && wire3[(3'h4):(3'h4)])} : (~&(~&(wire3 ?
                          wire5 : wire2))));
  assign wire11 = (~&$unsigned((-$signed((8'h9e)))));
  assign wire12 = {wire11[(1'h0):(1'h0)]};
  assign wire13 = ((~&{wire10}) << $unsigned($signed((wire11 ?
                      wire3 : wire10))));
  assign wire14 = wire0[(1'h1):(1'h0)];
  always
    @(posedge clk) begin
      reg15 <= (wire2[(3'h4):(1'h1)] ^ (~($unsigned(wire3) ? wire9 : {wire8})));
      reg16 <= wire3[(4'h9):(3'h6)];
      reg17 <= wire10[(2'h2):(1'h1)];
    end
  always
    @(posedge clk) begin
      reg18 <= {$signed(wire0)};
    end
endmodule