(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire89;
  wire signed [(3'h5):(1'h0)] wire88;
  wire [(3'h7):(1'h0)] wire87;
  wire [(2'h3):(1'h0)] wire86;
  wire signed [(2'h2):(1'h0)] wire85;
  wire signed [(2'h2):(1'h0)] wire84;
  wire signed [(4'ha):(1'h0)] wire83;
  wire [(4'h9):(1'h0)] wire82;
  wire [(3'h5):(1'h0)] wire80;
  wire signed [(4'hb):(1'h0)] wire76;
  wire signed [(3'h7):(1'h0)] wire78;
  reg [(4'hb):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg5 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg4 = (1'h0);
  assign y = {wire89,
                 wire88,
                 wire87,
                 wire86,
                 wire85,
                 wire84,
                 wire83,
                 wire82,
                 wire80,
                 wire76,
                 wire78,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= (wire1 + $unsigned((|(wire1 != wire2))));
      reg5 <= $signed(($signed(wire2[(2'h3):(1'h0)]) <<< wire0[(2'h2):(1'h0)]));
      reg6 <= {(((!reg5) ?
              reg5[(1'h0):(1'h0)] : wire3[(2'h2):(1'h0)]) | $unsigned((reg5 ?
              reg4 : wire1)))};
    end
  module7 #() modinst77 (wire76, clk, wire0, reg6, wire3, wire2);
  module20 #() modinst79 (.wire24(wire1), .wire21(wire76), .clk(clk), .wire22(reg6), .wire23(wire3), .y(wire78));
  module37 #() modinst81 (wire80, clk, wire78, wire76, reg6, reg5);
  assign wire82 = ($unsigned($signed({wire2})) || $signed($signed({reg4})));
  assign wire83 = {(((+wire82) ? (wire1 ? wire3 : reg4) : wire3) ?
                          (wire82[(3'h7):(3'h4)] & (~&wire78)) : (reg5 > $unsigned(wire3)))};
  assign wire84 = $signed((((reg5 ? wire80 : wire1) == (+reg6)) ?
                      wire76 : wire2));
  assign wire85 = $signed(($signed({wire76}) ?
                      ((wire83 << reg6) ?
                          $signed(wire1) : (wire83 ?
                              wire3 : wire82)) : wire84[(1'h1):(1'h0)]));
  assign wire86 = wire78;
  assign wire87 = (wire78 ~^ (wire2[(3'h7):(3'h5)] ?
                      {(wire0 <= reg5)} : wire86[(2'h2):(1'h1)]));
  assign wire88 = $signed((+(|(wire83 ? wire87 : wire84))));
  assign wire89 = wire85[(1'h0):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param75 = (((^(~&(8'haf))) != (((8'haf) ? (8'ha7) : (8'ha2)) >> ((8'ha5) ? (8'had) : (8'had)))) ? (~(+{(8'ha1)})) : (^((~|(8'ha4)) * ((8'ha7) ? (8'haa) : (8'haf))))))
(y, clk, wire8, wire9, wire10, wire11);
  output wire [(32'h8e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire signed [(4'h9):(1'h0)] wire10;
  input wire [(4'h9):(1'h0)] wire11;
  wire signed [(4'h9):(1'h0)] wire74;
  wire [(4'ha):(1'h0)] wire73;
  wire [(4'ha):(1'h0)] wire64;
  wire [(4'hb):(1'h0)] wire36;
  wire [(4'h8):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire19;
  wire [(3'h7):(1'h0)] wire34;
  wire signed [(2'h2):(1'h0)] wire66;
  wire signed [(4'ha):(1'h0)] wire67;
  wire signed [(4'ha):(1'h0)] wire68;
  wire [(4'ha):(1'h0)] wire70;
  wire signed [(4'h8):(1'h0)] wire71;
  reg signed [(4'h8):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg14 = (1'h0);
  reg [(3'h5):(1'h0)] reg15 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg17 = (1'h0);
  reg [(3'h7):(1'h0)] reg18 = (1'h0);
  assign y = {wire74,
                 wire73,
                 wire64,
                 wire36,
                 wire12,
                 wire19,
                 wire34,
                 wire66,
                 wire67,
                 wire68,
                 wire70,
                 wire71,
                 reg13,
                 reg14,
                 reg15,
                 reg16,
                 reg17,
                 reg18,
                 (1'h0)};
  assign wire12 = $unsigned($signed($signed((wire8 ? wire9 : wire8))));
  always
    @(posedge clk) begin
      if ((^(~^((wire12 ? wire10 : (8'ha6)) >>> $unsigned(wire9)))))
        begin
          if (((($signed(wire9) & {wire8}) ?
              wire11[(1'h0):(1'h0)] : wire11) && wire8))
            begin
              reg13 <= wire10;
              reg14 <= ((~&(reg13 ? wire12 : (&reg13))) - $unsigned((~^reg13)));
            end
          else
            begin
              reg13 <= wire10;
              reg14 <= (reg14 <= wire10);
            end
        end
      else
        begin
          if ((((^~wire10) ?
                  wire10[(4'h8):(2'h3)] : $unsigned($signed(reg13))) ?
              ($unsigned({reg13}) & wire11) : {wire9[(3'h5):(2'h3)]}))
            begin
              reg13 <= (~$signed($unsigned(reg14[(2'h2):(1'h1)])));
              reg14 <= $unsigned(wire9[(3'h5):(1'h0)]);
              reg15 <= $unsigned(wire11);
            end
          else
            begin
              reg13 <= (~|$unsigned((~&(wire12 != wire12))));
              reg14 <= (~&($signed((wire11 != reg14)) ^ ($signed((8'had)) ?
                  reg14 : $unsigned(wire12))));
            end
          reg16 <= wire11;
          reg17 <= wire11[(4'h9):(1'h0)];
        end
      reg18 <= wire10;
    end
  assign wire19 = wire11;
  module20 #() modinst35 (.wire22(wire8), .y(wire34), .clk(clk), .wire23(wire11), .wire21(reg14), .wire24(wire19));
  assign wire36 = {(wire19 ^ reg15[(3'h5):(1'h0)])};
  module37 #() modinst65 (.wire40(wire9), .wire39(wire19), .wire41(wire10), .y(wire64), .clk(clk), .wire38(reg13));
  assign wire66 = $signed(wire8[(1'h0):(1'h0)]);
  assign wire67 = $signed(({$signed(reg13)} | $signed(reg13[(3'h7):(3'h4)])));
  module20 #() modinst69 (wire68, clk, wire8, wire64, wire11, wire67);
  assign wire70 = wire10;
  module20 #() modinst72 (.y(wire71), .wire21(reg16), .clk(clk), .wire22(wire36), .wire24(wire10), .wire23(wire70));
  assign wire73 = wire36;
  assign wire74 = ((($signed(wire9) ?
                          $signed(reg14) : (reg14 <= wire9)) ~^ {$unsigned(wire12)}) ?
                      $unsigned($signed((~^wire10))) : (wire10 ?
                          (reg16 - wire11) : wire19));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module37
#(parameter param63 = (|(|(((8'ha3) && (8'haa)) ? ((8'ha9) ? (8'h9e) : (8'h9e)) : ((8'h9f) ? (8'ha4) : (8'ha3))))))
(y, clk, wire41, wire40, wire39, wire38);
  output wire [(32'h83):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire41;
  input wire [(4'hb):(1'h0)] wire40;
  input wire [(3'h4):(1'h0)] wire39;
  input wire [(4'h8):(1'h0)] wire38;
  wire signed [(2'h2):(1'h0)] wire59;
  wire signed [(4'hb):(1'h0)] wire58;
  wire signed [(3'h7):(1'h0)] wire57;
  wire [(2'h3):(1'h0)] wire56;
  wire signed [(4'h9):(1'h0)] wire44;
  wire signed [(2'h2):(1'h0)] wire43;
  wire signed [(3'h4):(1'h0)] wire42;
  reg signed [(4'ha):(1'h0)] reg62 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg61 = (1'h0);
  reg [(2'h2):(1'h0)] reg60 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg54 = (1'h0);
  reg [(3'h7):(1'h0)] reg53 = (1'h0);
  reg [(4'h8):(1'h0)] reg52 = (1'h0);
  reg [(2'h3):(1'h0)] reg51 = (1'h0);
  reg [(4'h8):(1'h0)] reg50 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  reg [(3'h5):(1'h0)] reg47 = (1'h0);
  reg [(4'ha):(1'h0)] reg46 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg45 = (1'h0);
  assign y = {wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire44,
                 wire43,
                 wire42,
                 reg62,
                 reg61,
                 reg60,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 (1'h0)};
  assign wire42 = wire39;
  assign wire43 = wire42[(2'h3):(2'h3)];
  assign wire44 = (wire43 ? (wire39 && (^wire42)) : wire40[(3'h5):(2'h2)]);
  always
    @(posedge clk) begin
      reg45 <= ({((wire43 ^ wire38) ~^ wire41)} ?
          $unsigned($unsigned($unsigned(wire40))) : ((~&(wire42 ?
              wire42 : wire38)) ^~ wire44[(2'h2):(1'h0)]));
      reg46 <= wire41;
      reg47 <= wire43[(1'h0):(1'h0)];
    end
  always
    @(posedge clk) begin
      if ({((wire40[(4'h9):(1'h0)] ~^ $unsigned(wire43)) * $unsigned((!wire40)))})
        begin
          reg48 <= ($signed((|(reg46 ? (8'h9d) : reg46))) ?
              (wire42[(1'h0):(1'h0)] ?
                  reg46[(3'h4):(3'h4)] : (wire43 ?
                      $unsigned(wire38) : (~wire40))) : wire41);
          if ((~wire40))
            begin
              reg49 <= reg45;
              reg50 <= $signed(($unsigned(reg49) < $unsigned((wire39 | (8'haf)))));
              reg51 <= $unsigned(({$unsigned(reg45)} >>> (~^$unsigned(wire39))));
            end
          else
            begin
              reg49 <= wire40;
              reg50 <= $unsigned($signed($unsigned(reg46[(4'ha):(3'h7)])));
              reg51 <= wire39[(1'h0):(1'h0)];
            end
        end
      else
        begin
          reg48 <= (~&$unsigned(wire43));
          reg49 <= $signed($signed(wire42[(1'h1):(1'h0)]));
        end
      if ($unsigned(wire40))
        begin
          reg52 <= wire41;
        end
      else
        begin
          if ($signed(($signed($unsigned(wire43)) * (wire44 & $signed(reg47)))))
            begin
              reg52 <= ($unsigned(wire38[(3'h6):(3'h5)]) ?
                  $signed((~&(wire44 + wire44))) : (8'ha1));
            end
          else
            begin
              reg52 <= {reg46[(1'h0):(1'h0)]};
              reg53 <= (8'ha4);
            end
          reg54 <= $unsigned((~|($unsigned(reg52) ?
              (~|reg50) : $signed(reg47))));
        end
      if (wire38)
        begin
          reg55 <= reg47;
        end
      else
        begin
          reg55 <= reg52;
        end
    end
  assign wire56 = (((^reg53[(3'h4):(2'h3)]) > reg55) ?
                      $unsigned(reg49[(1'h1):(1'h1)]) : $signed((+(+reg54))));
  assign wire57 = (reg48 ?
                      ({$signed(reg47)} > ((reg46 && reg48) ^~ (8'h9d))) : wire42);
  assign wire58 = $signed($unsigned((8'ha1)));
  assign wire59 = $signed($unsigned($unsigned($signed((8'ha8)))));
  always
    @(posedge clk) begin
      reg60 <= wire41;
      reg61 <= wire59[(1'h0):(1'h0)];
      reg62 <= reg60[(1'h1):(1'h0)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20  (y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire24;
  input wire signed [(4'h8):(1'h0)] wire23;
  input wire signed [(2'h2):(1'h0)] wire22;
  input wire [(3'h7):(1'h0)] wire21;
  wire [(3'h5):(1'h0)] wire33;
  wire signed [(3'h5):(1'h0)] wire29;
  wire [(4'ha):(1'h0)] wire28;
  wire [(3'h7):(1'h0)] wire25;
  reg signed [(2'h2):(1'h0)] reg32 = (1'h0);
  reg [(4'h9):(1'h0)] reg31 = (1'h0);
  reg [(4'hb):(1'h0)] reg30 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg27 = (1'h0);
  reg [(4'hb):(1'h0)] reg26 = (1'h0);
  assign y = {wire33,
                 wire29,
                 wire28,
                 wire25,
                 reg32,
                 reg31,
                 reg30,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire25 = wire21[(2'h3):(2'h3)];
  always
    @(posedge clk) begin
      reg26 <= wire23[(3'h7):(3'h7)];
      reg27 <= {($unsigned((^~(8'ha2))) ~^ {(wire25 ? wire25 : wire23)})};
    end
  assign wire28 = {$unsigned($signed(((8'ha7) | wire21)))};
  assign wire29 = (($signed((&(8'hae))) ?
                          $unsigned(wire24[(1'h0):(1'h0)]) : $unsigned($unsigned(wire22))) ?
                      wire21[(2'h2):(2'h2)] : (((8'ha7) > $signed(wire22)) << (~&(8'ha9))));
  always
    @(posedge clk) begin
      reg30 <= (~|$unsigned((!{wire21})));
      reg31 <= (-(((~wire25) ?
          $unsigned((8'haa)) : wire24[(2'h2):(2'h2)]) & $signed((reg30 ?
          wire25 : wire29))));
      reg32 <= (&wire23);
    end
  assign wire33 = $signed((~reg31));
endmodule