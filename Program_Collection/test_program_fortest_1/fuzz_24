(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h49):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire54;
  wire signed [(2'h3):(1'h0)] wire52;
  wire [(3'h5):(1'h0)] wire51;
  wire [(3'h4):(1'h0)] wire50;
  wire signed [(4'hb):(1'h0)] wire49;
  wire [(4'ha):(1'h0)] wire48;
  wire [(3'h5):(1'h0)] wire47;
  wire [(3'h6):(1'h0)] wire46;
  wire [(4'h8):(1'h0)] wire44;
  wire signed [(4'hb):(1'h0)] wire15;
  assign y = {wire54,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire44,
                 wire15,
                 (1'h0)};
  module4 #() modinst16 (wire15, clk, wire0, wire1, wire3, wire2);
  module17 #() modinst45 (.wire18(wire3), .wire21(wire15), .y(wire44), .wire19(wire1), .wire20(wire0), .clk(clk));
  assign wire46 = wire15;
  assign wire47 = wire2;
  assign wire48 = wire2[(2'h3):(2'h3)];
  assign wire49 = wire3[(2'h3):(2'h2)];
  assign wire50 = (~&(!($signed(wire2) ?
                      (wire15 ? wire46 : wire47) : $unsigned(wire1))));
  assign wire51 = (wire48 >>> wire46);
  module17 #() modinst53 (wire52, clk, wire49, wire48, wire2, wire47);
  assign wire54 = {$signed(wire2)};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17  (y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h49):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire21;
  input wire signed [(4'ha):(1'h0)] wire20;
  input wire signed [(4'h8):(1'h0)] wire19;
  input wire signed [(3'h5):(1'h0)] wire18;
  wire [(4'ha):(1'h0)] wire43;
  wire signed [(3'h6):(1'h0)] wire41;
  wire signed [(4'hb):(1'h0)] wire29;
  wire [(3'h4):(1'h0)] wire28;
  wire signed [(3'h6):(1'h0)] wire27;
  wire [(4'ha):(1'h0)] wire26;
  wire signed [(3'h4):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire24;
  wire [(3'h6):(1'h0)] wire23;
  wire [(3'h7):(1'h0)] wire22;
  assign y = {wire43,
                 wire41,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 (1'h0)};
  assign wire22 = (^~(~&$signed(wire21[(3'h6):(2'h2)])));
  assign wire23 = $signed($unsigned((wire19[(1'h1):(1'h1)] ~^ $signed((8'ha8)))));
  assign wire24 = (($signed($unsigned(wire21)) <= ((wire18 ? wire21 : (8'h9f)) ?
                          wire19 : $signed(wire18))) ?
                      $signed($unsigned($signed(wire22))) : wire20[(4'h8):(2'h3)]);
  assign wire25 = ((($unsigned(wire23) ?
                      (wire20 ?
                          wire23 : wire21) : $signed(wire21)) >> wire23[(1'h0):(1'h0)]) || (wire23 ~^ $unsigned((wire21 ?
                      wire20 : wire23))));
  assign wire26 = wire19[(1'h1):(1'h0)];
  assign wire27 = $signed((wire21[(3'h6):(2'h3)] * $signed((^wire22))));
  assign wire28 = ({($signed(wire22) ? (~wire25) : $unsigned(wire22))} ?
                      $signed($signed({wire18})) : {wire27});
  assign wire29 = $signed((~&$signed((8'ha4))));
  module30 #() modinst42 (wire41, clk, wire22, wire28, wire21, wire19);
  assign wire43 = $signed(wire27);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h23):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire8;
  input wire [(4'h8):(1'h0)] wire7;
  input wire [(2'h3):(1'h0)] wire6;
  input wire signed [(3'h5):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire14;
  wire [(3'h6):(1'h0)] wire13;
  wire signed [(3'h4):(1'h0)] wire12;
  wire [(3'h4):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire10;
  wire [(3'h4):(1'h0)] wire9;
  assign y = {wire14, wire13, wire12, wire11, wire10, wire9, (1'h0)};
  assign wire9 = wire7[(1'h1):(1'h0)];
  assign wire10 = (((8'h9f) ? (~|(wire7 >>> wire5)) : (8'haf)) ?
                      wire8 : (!($signed(wire7) ^~ (wire8 ? (8'ha9) : wire5))));
  assign wire11 = wire8[(2'h2):(1'h1)];
  assign wire12 = (~(&wire10));
  assign wire13 = ((|(8'ha0)) ?
                      ({$signed(wire12)} | wire8[(2'h2):(1'h1)]) : {$unsigned(wire8)});
  assign wire14 = $signed((((~^wire7) | wire6) <<< $signed({wire9})));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module30  (y, clk, wire34, wire33, wire32, wire31);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire34;
  input wire [(3'h4):(1'h0)] wire33;
  input wire [(4'hb):(1'h0)] wire32;
  input wire signed [(4'h8):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire40;
  wire signed [(3'h7):(1'h0)] wire36;
  wire [(4'h8):(1'h0)] wire35;
  reg signed [(3'h5):(1'h0)] reg39 = (1'h0);
  reg [(3'h7):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg37 = (1'h0);
  assign y = {wire40, wire36, wire35, reg39, reg38, reg37, (1'h0)};
  assign wire35 = (+(!wire31[(1'h1):(1'h1)]));
  assign wire36 = $signed((wire31[(3'h4):(1'h1)] | $signed({wire32})));
  always
    @(posedge clk) begin
      if (wire32[(3'h6):(3'h6)])
        begin
          reg37 <= wire36[(3'h6):(2'h3)];
        end
      else
        begin
          reg37 <= ((^(8'ha1)) >>> ($signed(wire32[(4'ha):(2'h3)]) <= (&(reg37 ?
              (8'ha0) : wire33))));
          reg38 <= $unsigned($signed({(+wire36)}));
          reg39 <= $signed((~&$unsigned($unsigned((8'ha6)))));
        end
    end
  assign wire40 = ((reg39 >> wire32) >>> (reg38 && $unsigned($signed(wire31))));
endmodule