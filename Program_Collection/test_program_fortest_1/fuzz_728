(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param56 = ((((-(8'haa)) > ((8'h9f) < (8'ha2))) ^ (((8'hab) || (8'ha6)) ^ (8'haf))) ? {(((8'ha5) ^ (8'ha1)) != ((8'had) ? (8'ha9) : (8'hab)))} : (8'haf)))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire55;
  wire signed [(4'h8):(1'h0)] wire51;
  wire signed [(4'hb):(1'h0)] wire50;
  wire [(3'h6):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire7;
  wire [(3'h4):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire4;
  reg [(3'h7):(1'h0)] reg54 = (1'h0);
  reg [(3'h6):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg52 = (1'h0);
  assign y = {wire55,
                 wire51,
                 wire50,
                 wire48,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg54,
                 reg53,
                 reg52,
                 (1'h0)};
  assign wire4 = $signed(wire3);
  assign wire5 = {(^(~$unsigned(wire1)))};
  assign wire6 = wire5[(1'h0):(1'h0)];
  assign wire7 = (^~$unsigned(((wire4 ? wire5 : wire5) && $signed(wire1))));
  module8 #() modinst49 (.y(wire48), .wire11(wire0), .wire9(wire7), .clk(clk), .wire12(wire6), .wire10(wire5));
  assign wire50 = (wire48[(3'h4):(3'h4)] ?
                      wire7[(4'h9):(2'h3)] : ($signed((wire1 ~^ (8'hac))) ?
                          ((wire1 * wire1) ~^ $unsigned(wire7)) : (wire0 <= $unsigned((8'ha3)))));
  assign wire51 = $unsigned(wire50);
  always
    @(posedge clk) begin
      reg52 <= wire6;
      if (((!({wire50} ? $unsigned(wire48) : $signed((8'ha9)))) ?
          wire0 : ($unsigned(((8'ha7) ? wire7 : wire1)) - $signed((^~wire6)))))
        begin
          reg53 <= (!$signed(wire48));
        end
      else
        begin
          reg53 <= (^(((+wire48) ? $signed(wire7) : (-wire2)) ?
              ($signed(wire6) - (!wire7)) : (-wire7[(3'h6):(3'h5)])));
          reg54 <= reg52;
        end
    end
  assign wire55 = {$signed($signed($unsigned(wire4)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire9, wire10, wire11, wire12);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire [(4'hb):(1'h0)] wire10;
  input wire signed [(4'hb):(1'h0)] wire11;
  input wire signed [(3'h4):(1'h0)] wire12;
  wire [(3'h7):(1'h0)] wire47;
  wire [(3'h6):(1'h0)] wire25;
  wire [(3'h6):(1'h0)] wire38;
  wire signed [(3'h6):(1'h0)] wire40;
  wire signed [(4'hb):(1'h0)] wire41;
  wire [(4'h9):(1'h0)] wire43;
  wire signed [(4'h8):(1'h0)] wire45;
  reg [(4'h9):(1'h0)] reg44 = (1'h0);
  assign y = {wire47,
                 wire25,
                 wire38,
                 wire40,
                 wire41,
                 wire43,
                 wire45,
                 reg44,
                 (1'h0)};
  module13 #() modinst26 (.wire16(wire10), .clk(clk), .wire14(wire9), .wire17(wire11), .wire15(wire12), .y(wire25));
  module27 #() modinst39 (wire38, clk, wire12, wire9, wire10, wire25);
  assign wire40 = (wire10 > wire9);
  module27 #() modinst42 (wire41, clk, wire25, wire40, wire11, wire12);
  assign wire43 = wire12;
  always
    @(posedge clk) begin
      reg44 <= {wire40};
    end
  module13 #() modinst46 (.y(wire45), .wire14(reg44), .wire16(wire9), .wire17(wire40), .wire15(wire11), .clk(clk));
  assign wire47 = {(((reg44 << wire41) ? wire38 : (8'ha4)) ?
                          ((reg44 << wire12) != (wire41 ?
                              wire40 : wire10)) : (wire10[(3'h6):(2'h2)] & ((8'had) ?
                              wire41 : wire12)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module27
#(parameter param37 = ((~{(|(8'ha6))}) ? ({((8'ha2) - (8'ha4))} ? (-{(8'hae)}) : ((~&(8'ha5)) ? ((8'hac) <= (8'ha8)) : (|(8'hac)))) : ((|((8'ha8) >= (8'h9c))) != (-{(8'ha0)}))))
(y, clk, wire31, wire30, wire29, wire28);
  output wire [(32'h1f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire31;
  input wire [(3'h5):(1'h0)] wire30;
  input wire signed [(4'hb):(1'h0)] wire29;
  input wire signed [(2'h3):(1'h0)] wire28;
  wire signed [(2'h2):(1'h0)] wire36;
  wire [(4'h9):(1'h0)] wire35;
  wire [(3'h6):(1'h0)] wire33;
  wire [(3'h6):(1'h0)] wire32;
  reg [(3'h7):(1'h0)] reg34 = (1'h0);
  assign y = {wire36, wire35, wire33, wire32, reg34, (1'h0)};
  assign wire32 = wire29;
  assign wire33 = $signed((^~($unsigned(wire32) ? wire29 : (wire32 & wire32))));
  always
    @(posedge clk) begin
      reg34 <= (~^$signed(wire32[(3'h5):(1'h1)]));
    end
  assign wire35 = {(|(+{wire30}))};
  assign wire36 = (wire28[(1'h0):(1'h0)] ^~ wire28);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire17;
  input wire signed [(4'hb):(1'h0)] wire16;
  input wire [(2'h2):(1'h0)] wire15;
  input wire [(3'h6):(1'h0)] wire14;
  wire [(3'h6):(1'h0)] wire24;
  wire [(4'hb):(1'h0)] wire23;
  wire [(4'h9):(1'h0)] wire22;
  wire [(4'h8):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire20;
  wire [(2'h3):(1'h0)] wire19;
  wire [(3'h5):(1'h0)] wire18;
  assign y = {wire24, wire23, wire22, wire21, wire20, wire19, wire18, (1'h0)};
  assign wire18 = ((+wire15) && ({((8'ha9) ? wire17 : wire17)} ^ (wire17 ?
                      (^~(8'ha7)) : $signed(wire17))));
  assign wire19 = {wire15[(1'h0):(1'h0)]};
  assign wire20 = wire14[(3'h6):(3'h4)];
  assign wire21 = $unsigned(wire19[(2'h3):(2'h3)]);
  assign wire22 = (8'hac);
  assign wire23 = $signed(wire22);
  assign wire24 = $signed($signed(wire23[(3'h5):(3'h5)]));
endmodule