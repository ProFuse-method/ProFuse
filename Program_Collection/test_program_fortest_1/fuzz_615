(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire8;
  wire signed [(3'h5):(1'h0)] wire7;
  wire signed [(4'h9):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire4;
  reg signed [(3'h4):(1'h0)] reg5 = (1'h0);
  assign y = {wire8, wire7, wire6, wire4, reg5, (1'h0)};
  assign wire4 = $unsigned($signed((wire3 <<< wire0)));
  always
    @(posedge clk) begin
      reg5 <= ((+{(wire0 >> (8'h9c))}) ?
          wire0 : (wire4[(2'h3):(2'h2)] & (~^$signed(wire2))));
    end
  assign wire6 = wire1;
  assign wire7 = (~&(((wire3 ? wire3 : wire4) ?
                     reg5 : (^reg5)) <<< $signed({wire1})));
  assign wire8 = ({(wire3 ^~ wire4)} == (wire6[(4'h8):(3'h4)] ?
                     $unsigned({wire3}) : wire2));
endmodule