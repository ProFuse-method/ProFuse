(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param113 = ((~(+(^((7'h42) != (8'hb3))))) ? (((7'h42) - {(!(8'haf)), (~|(8'hb3))}) ? (!(((7'h44) ~^ (8'ha8)) == (~|(8'ha8)))) : {(((8'hb9) ? (8'hb0) : (8'h9d)) ? ((8'hb1) && (8'ha7)) : (+(8'hb2))), ((+(8'hb3)) ? ((8'hab) ^~ (8'hbc)) : ((8'had) ? (7'h40) : (8'ha3)))}) : ((((8'ha1) <= (8'hb4)) + (^~{(8'hab)})) ^~ (((^(7'h44)) < ((8'hbf) <<< (8'hb0))) ? {((8'hb2) ^ (8'h9c))} : ((!(8'hb1)) ^ ((8'ha6) * (7'h41)))))), 
parameter param114 = (~&({({param113} * (param113 < (8'h9d))), {(param113 != param113), param113}} ? (((~|param113) ? param113 : param113) >> ((|param113) ^~ (~param113))) : (((param113 | (8'ha2)) << (|param113)) == ((param113 + param113) < (param113 ? (8'ha7) : param113))))))
(y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h320):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire4;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'hf):(1'h0)] wire0;
  wire [(5'h13):(1'h0)] wire112;
  wire signed [(4'hb):(1'h0)] wire110;
  wire [(3'h5):(1'h0)] wire66;
  wire [(5'h10):(1'h0)] wire65;
  wire [(4'hf):(1'h0)] wire64;
  wire signed [(2'h3):(1'h0)] wire63;
  wire signed [(4'hc):(1'h0)] wire11;
  wire signed [(5'h10):(1'h0)] wire10;
  wire [(5'h14):(1'h0)] wire9;
  wire signed [(3'h5):(1'h0)] wire8;
  wire signed [(2'h2):(1'h0)] wire7;
  wire signed [(5'h11):(1'h0)] wire6;
  wire [(2'h2):(1'h0)] wire5;
  reg signed [(5'h15):(1'h0)] reg14 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg18 = (1'h0);
  reg [(5'h13):(1'h0)] reg20 = (1'h0);
  reg signed [(4'he):(1'h0)] reg23 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg24 = (1'h0);
  reg [(5'h12):(1'h0)] reg25 = (1'h0);
  reg [(5'h13):(1'h0)] reg28 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg29 = (1'h0);
  reg [(4'h9):(1'h0)] reg30 = (1'h0);
  reg [(5'h14):(1'h0)] reg32 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg33 = (1'h0);
  reg [(3'h4):(1'h0)] reg39 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg41 = (1'h0);
  reg [(5'h10):(1'h0)] reg43 = (1'h0);
  reg [(4'hb):(1'h0)] reg45 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg46 = (1'h0);
  reg [(5'h13):(1'h0)] reg48 = (1'h0);
  reg [(3'h6):(1'h0)] reg50 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg51 = (1'h0);
  reg [(2'h2):(1'h0)] reg52 = (1'h0);
  reg [(2'h3):(1'h0)] reg58 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg60 = (1'h0);
  reg [(4'h8):(1'h0)] reg62 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg61 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg59 = (1'h0);
  reg [(3'h5):(1'h0)] reg57 = (1'h0);
  reg [(3'h7):(1'h0)] forvar56 = (1'h0);
  reg [(5'h11):(1'h0)] forvar55 = (1'h0);
  reg [(3'h6):(1'h0)] reg54 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar53 = (1'h0);
  reg [(5'h13):(1'h0)] reg49 = (1'h0);
  reg [(4'hf):(1'h0)] forvar47 = (1'h0);
  reg signed [(4'he):(1'h0)] reg44 = (1'h0);
  reg [(5'h12):(1'h0)] forvar42 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg40 = (1'h0);
  reg [(4'he):(1'h0)] reg38 = (1'h0);
  reg [(4'h9):(1'h0)] reg37 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar36 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar35 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg34 = (1'h0);
  reg [(4'hc):(1'h0)] forvar31 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar27 = (1'h0);
  reg [(4'ha):(1'h0)] reg26 = (1'h0);
  reg [(4'hb):(1'h0)] forvar22 = (1'h0);
  reg [(4'h9):(1'h0)] forvar21 = (1'h0);
  reg [(4'ha):(1'h0)] forvar19 = (1'h0);
  reg [(4'hd):(1'h0)] reg17 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg16 = (1'h0);
  reg [(5'h14):(1'h0)] forvar15 = (1'h0);
  reg [(3'h7):(1'h0)] forvar13 = (1'h0);
  reg [(4'h9):(1'h0)] forvar12 = (1'h0);
  assign y = {wire112,
                 wire110,
                 wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 reg14,
                 reg18,
                 reg20,
                 reg23,
                 reg24,
                 reg25,
                 reg28,
                 reg29,
                 reg30,
                 reg32,
                 reg33,
                 reg39,
                 reg41,
                 reg43,
                 reg45,
                 reg46,
                 reg48,
                 reg50,
                 reg51,
                 reg52,
                 reg58,
                 reg60,
                 reg62,
                 reg61,
                 reg59,
                 reg57,
                 forvar56,
                 forvar55,
                 reg54,
                 forvar53,
                 reg49,
                 forvar47,
                 reg44,
                 forvar42,
                 reg40,
                 reg38,
                 reg37,
                 forvar36,
                 forvar35,
                 reg34,
                 forvar31,
                 forvar27,
                 reg26,
                 forvar22,
                 forvar21,
                 forvar19,
                 reg17,
                 reg16,
                 forvar15,
                 forvar13,
                 forvar12,
                 (1'h0)};
  assign wire5 = {($signed((&$unsigned(wire0))) ?
                         $unsigned(({wire0, wire4} ?
                             wire1 : (8'ha4))) : $signed(wire2[(3'h4):(2'h3)]))};
  assign wire6 = wire3[(2'h3):(1'h1)];
  assign wire7 = (&({{$unsigned((8'ha3))}, (8'hb3)} ? (8'hb6) : wire3));
  assign wire8 = wire5;
  assign wire9 = (($unsigned(wire0) ?
                     $unsigned(wire8) : $signed($signed({(8'hb0),
                         (8'hbd)}))) >>> $signed($signed({(~wire8)})));
  assign wire10 = (wire5 ? (wire9 & (8'ha8)) : wire0);
  assign wire11 = $signed({(~|(~|{wire0, wire9}))});
  always
    @(posedge clk) begin
      for (forvar12 = (1'h0); (forvar12 < (1'h1)); forvar12 = (forvar12 + (1'h1)))
        begin
          for (forvar13 = (1'h0); (forvar13 < (1'h0)); forvar13 = (forvar13 + (1'h1)))
            begin
              reg14 <= $signed((~&$signed(forvar12)));
            end
          for (forvar15 = (1'h0); (forvar15 < (2'h2)); forvar15 = (forvar15 + (1'h1)))
            begin
              reg16 = (~^((({wire3, wire4} ?
                      (8'ha3) : wire5) ~^ $signed((wire2 ? wire5 : reg14))) ?
                  $signed($signed((~|(8'ha8)))) : ({$unsigned(forvar15),
                      wire2} << wire9[(4'hd):(2'h2)])));
              reg17 = (!((+$signed(forvar13[(2'h3):(1'h1)])) * (8'ha4)));
              reg18 <= (((wire5 < $signed((wire6 != wire11))) ?
                      $unsigned($unsigned((wire7 ?
                          wire10 : wire6))) : wire5[(2'h2):(2'h2)]) ?
                  ((wire8 ?
                      $unsigned((wire4 ?
                          (8'ha6) : forvar15)) : (8'hbc)) ~^ (wire6[(3'h6):(3'h4)] != (8'ha7))) : ((&((+reg17) >>> $unsigned(forvar12))) ?
                      {(wire7[(2'h2):(1'h1)] ? wire8 : $unsigned((8'ha8))),
                          $unsigned($signed((8'ha6)))} : wire3[(2'h2):(1'h0)]));
            end
          for (forvar19 = (1'h0); (forvar19 < (3'h4)); forvar19 = (forvar19 + (1'h1)))
            begin
              reg20 <= (~(&(reg14[(3'h4):(2'h3)] ?
                  ({wire8, wire3} || (~|(7'h42))) : $unsigned((reg17 ?
                      reg18 : forvar13)))));
            end
        end
      for (forvar21 = (1'h0); (forvar21 < (2'h2)); forvar21 = (forvar21 + (1'h1)))
        begin
          for (forvar22 = (1'h0); (forvar22 < (1'h0)); forvar22 = (forvar22 + (1'h1)))
            begin
              reg23 <= {((!reg20[(1'h0):(1'h0)]) == ($signed({(8'h9e),
                      (7'h40)}) != ((wire4 <<< (8'haf)) ?
                      (wire4 ? wire7 : wire1) : $signed(wire0))))};
              reg24 <= $unsigned(forvar21);
              reg25 <= $unsigned(wire4[(1'h0):(1'h0)]);
            end
          reg26 = {(reg20 == (reg18[(1'h1):(1'h1)] ?
                  ({reg24} ?
                      (^wire9) : (forvar22 ?
                          (8'hb3) : (8'hac))) : {$unsigned(wire8),
                      ((8'ha8) & forvar21)})),
              ($signed(forvar19) ?
                  (reg14[(3'h4):(1'h0)] - ((wire2 & forvar13) ?
                      (~wire9) : ((8'h9c) == reg14))) : reg25[(3'h4):(2'h2)])};
          for (forvar27 = (1'h0); (forvar27 < (2'h3)); forvar27 = (forvar27 + (1'h1)))
            begin
              reg28 <= ($signed(forvar19) && (reg26 ?
                  forvar27[(5'h12):(4'he)] : (-({forvar13, wire1} ?
                      ((8'hae) ? reg17 : forvar27) : (~wire2)))));
              reg29 <= ({$signed($signed((8'ha8)))} == forvar27);
              reg30 <= ($unsigned(($unsigned((-wire8)) << $signed(reg18[(4'he):(4'hc)]))) > reg17);
            end
          for (forvar31 = (1'h0); (forvar31 < (2'h2)); forvar31 = (forvar31 + (1'h1)))
            begin
              reg32 <= {(wire10[(4'h8):(3'h4)] ?
                      $signed($unsigned(forvar22)) : (8'ha3)),
                  ({($signed(reg14) ?
                          (reg17 ?
                              reg25 : forvar22) : $signed(forvar13))} - forvar21)};
              reg33 <= (~$unsigned($signed((~{forvar19, forvar12}))));
            end
        end
      reg34 = ((8'hb3) & ((&((wire11 >>> (8'hb4)) || $signed(wire10))) ?
          (((wire4 ?
              reg16 : wire8) <<< reg28) << $signed(((8'hab) >>> reg30))) : forvar15));
      for (forvar35 = (1'h0); (forvar35 < (3'h4)); forvar35 = (forvar35 + (1'h1)))
        begin
          for (forvar36 = (1'h0); (forvar36 < (1'h0)); forvar36 = (forvar36 + (1'h1)))
            begin
              reg37 = $unsigned((forvar27 ?
                  (((reg18 ^~ reg33) ? forvar22 : $signed(reg34)) ?
                      forvar35[(3'h5):(1'h1)] : reg34[(3'h4):(2'h2)]) : (({forvar22,
                              (8'ha4)} ?
                          ((8'hb7) * wire4) : reg16) ?
                      $unsigned(forvar19[(1'h1):(1'h1)]) : wire7)));
              reg38 = {$unsigned(((~&(8'hb3)) ? {wire2} : forvar27)),
                  ({(^~(^~forvar12)),
                          (wire8 ?
                              forvar27[(4'hb):(4'h9)] : (reg23 * forvar12))} ?
                      ($signed(forvar22) ?
                          (|(^~reg37)) : $unsigned($signed((8'had)))) : (~|(wire9[(5'h13):(4'h9)] ?
                          (~|(8'hb8)) : forvar27)))};
              reg39 <= forvar27;
              reg40 = $signed(reg37);
              reg41 <= (reg33[(3'h4):(3'h4)] & forvar21);
            end
          for (forvar42 = (1'h0); (forvar42 < (2'h3)); forvar42 = (forvar42 + (1'h1)))
            begin
              reg43 <= $signed({(forvar42 * {(&forvar36), (8'h9c)})});
              reg44 = forvar31[(3'h7):(1'h1)];
              reg45 <= $signed((reg23[(4'hd):(3'h5)] ?
                  forvar27 : $signed(((reg14 + forvar35) > $unsigned(wire3)))));
              reg46 <= forvar35;
            end
          for (forvar47 = (1'h0); (forvar47 < (2'h2)); forvar47 = (forvar47 + (1'h1)))
            begin
              reg48 <= $unsigned($signed(((^~(forvar42 > reg18)) != reg25)));
              reg49 = forvar47;
              reg50 <= (($signed(forvar22) ?
                      ($signed({forvar36}) ?
                          $signed(reg24[(3'h7):(3'h5)]) : wire7) : forvar19) ?
                  ($unsigned($unsigned((^~(8'ha2)))) ^~ (($unsigned(forvar19) <= (reg29 || reg24)) >>> $unsigned($signed(reg48)))) : (!(-(reg44[(2'h2):(1'h1)] ?
                      forvar22 : reg41))));
              reg51 <= reg30;
              reg52 <= {(^~((~&{reg30}) + ($unsigned((8'h9d)) ?
                      ((8'hae) ? wire6 : reg50) : wire3)))};
            end
          for (forvar53 = (1'h0); (forvar53 < (2'h3)); forvar53 = (forvar53 + (1'h1)))
            begin
              reg54 = $signed(($unsigned(reg33[(4'hf):(3'h4)]) ?
                  (reg25[(2'h2):(1'h0)] ?
                      (wire10[(4'ha):(3'h6)] ?
                          forvar21[(4'h8):(3'h5)] : reg26[(3'h7):(3'h6)]) : ($unsigned(forvar19) ?
                          reg43 : $signed((8'ha3)))) : $unsigned($unsigned((-reg52)))));
            end
        end
      for (forvar55 = (1'h0); (forvar55 < (1'h0)); forvar55 = (forvar55 + (1'h1)))
        begin
          for (forvar56 = (1'h0); (forvar56 < (2'h3)); forvar56 = (forvar56 + (1'h1)))
            begin
              reg57 = wire4;
              reg58 <= {wire7,
                  (reg30 ?
                      ((&(reg43 + reg28)) ^ {(forvar31 ? reg23 : reg44),
                          $signed(wire0)}) : $unsigned(((reg44 ?
                          reg41 : forvar15) <<< {reg39, wire1})))};
            end
          reg59 = $unsigned({(forvar13 ?
                  reg32[(3'h6):(3'h5)] : $unsigned(((8'hae) ?
                      forvar22 : reg52)))});
          reg60 <= (+((~^forvar19) ? reg26[(3'h5):(3'h5)] : forvar47));
          reg61 = ($signed((~&{(reg50 >>> reg60),
              (!wire5)})) & reg50[(2'h3):(1'h0)]);
          reg62 <= (reg28[(2'h2):(2'h2)] ? (wire2 & (8'h9c)) : wire2);
        end
    end
  assign wire63 = (|(~&{(^(~^reg33)), {wire10}}));
  assign wire64 = $unsigned((((reg23 ? (~&wire63) : (reg25 > (8'h9f))) ?
                      $unsigned($unsigned(wire8)) : $signed($signed(reg20))) < ((wire2 ?
                          (wire1 <<< reg24) : $signed(wire5)) ?
                      ((+(8'had)) < $signed((8'h9e))) : (8'ha7))));
  assign wire65 = wire0;
  assign wire66 = (($signed($unsigned((wire4 ?
                      reg39 : reg50))) && reg14[(3'h7):(2'h2)]) - {($unsigned($unsigned(reg24)) ?
                          (~$unsigned(wire63)) : {(reg29 >= wire2),
                              (wire4 ? reg32 : reg41)}),
                      $unsigned(reg48[(5'h10):(5'h10)])});
  module67 #() modinst111 (wire110, clk, reg14, reg48, reg29, reg20, reg28);
  assign wire112 = wire64;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module67
#(parameter param108 = {(^~((~^((7'h40) ? (8'hb8) : (8'hb5))) ? ((^~(8'ha1)) ? ((8'hb9) * (8'ha9)) : (-(8'had))) : {(~&(8'hbe)), ((8'hb9) <= (8'ha0))}))}, 
parameter param109 = ((-({(~^param108)} - ((~&param108) ^~ (param108 ? param108 : param108)))) >>> {param108, (8'h9d)}))
(y, clk, wire72, wire71, wire70, wire69, wire68);
  output wire [(32'h1ac):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h15):(1'h0)] wire72;
  input wire signed [(3'h7):(1'h0)] wire71;
  input wire [(2'h2):(1'h0)] wire70;
  input wire [(5'h13):(1'h0)] wire69;
  input wire [(3'h5):(1'h0)] wire68;
  wire [(3'h7):(1'h0)] wire107;
  wire signed [(5'h11):(1'h0)] wire106;
  wire signed [(5'h11):(1'h0)] wire74;
  wire signed [(4'hf):(1'h0)] wire73;
  reg signed [(5'h11):(1'h0)] reg102 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg100 = (1'h0);
  reg [(4'hf):(1'h0)] reg98 = (1'h0);
  reg [(5'h14):(1'h0)] reg97 = (1'h0);
  reg [(4'he):(1'h0)] reg96 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg95 = (1'h0);
  reg [(3'h4):(1'h0)] reg92 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg91 = (1'h0);
  reg [(4'he):(1'h0)] reg90 = (1'h0);
  reg [(4'hb):(1'h0)] reg89 = (1'h0);
  reg [(4'h9):(1'h0)] reg85 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg83 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg81 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg77 = (1'h0);
  reg [(3'h4):(1'h0)] reg75 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg105 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar104 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar103 = (1'h0);
  reg [(5'h12):(1'h0)] forvar101 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg99 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg94 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar93 = (1'h0);
  reg [(5'h14):(1'h0)] forvar88 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg87 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg86 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar84 = (1'h0);
  reg [(3'h6):(1'h0)] reg82 = (1'h0);
  reg [(3'h6):(1'h0)] reg80 = (1'h0);
  reg [(2'h3):(1'h0)] reg79 = (1'h0);
  reg [(4'h9):(1'h0)] forvar78 = (1'h0);
  reg [(4'hc):(1'h0)] forvar76 = (1'h0);
  assign y = {wire107,
                 wire106,
                 wire74,
                 wire73,
                 reg102,
                 reg100,
                 reg98,
                 reg97,
                 reg96,
                 reg95,
                 reg92,
                 reg91,
                 reg90,
                 reg89,
                 reg85,
                 reg83,
                 reg81,
                 reg77,
                 reg75,
                 reg105,
                 forvar104,
                 forvar103,
                 forvar101,
                 reg99,
                 reg94,
                 forvar93,
                 forvar88,
                 reg87,
                 reg86,
                 forvar84,
                 reg82,
                 reg80,
                 reg79,
                 forvar78,
                 forvar76,
                 (1'h0)};
  assign wire73 = ($unsigned($unsigned(wire71)) ?
                      wire71[(3'h7):(3'h5)] : ($unsigned((((8'ha5) ~^ wire69) ?
                          wire68 : wire70[(1'h0):(1'h0)])) == {$signed({wire69,
                              wire68}),
                          $unsigned(wire69[(4'hc):(4'hc)])}));
  assign wire74 = (-(wire70[(2'h2):(1'h1)] ? wire73 : wire70));
  always
    @(posedge clk) begin
      reg75 <= (((+(&((8'hbf) ? wire71 : (8'hba)))) ?
              $signed({wire70[(1'h1):(1'h1)],
                  wire72[(5'h13):(5'h10)]}) : wire72[(4'hf):(3'h7)]) ?
          wire72[(2'h2):(1'h0)] : (&wire70));
      for (forvar76 = (1'h0); (forvar76 < (3'h4)); forvar76 = (forvar76 + (1'h1)))
        begin
          reg77 <= $signed(((wire70[(2'h2):(2'h2)] >= ((~|forvar76) ?
                  (wire68 ? wire69 : wire70) : forvar76[(3'h5):(3'h5)])) ?
              (((wire73 == (8'hbe)) | wire73[(4'hc):(3'h4)]) != {(wire73 == reg75)}) : ($signed((~|forvar76)) ^ (wire68[(3'h4):(2'h2)] ?
                  (reg75 == wire73) : wire69))));
          for (forvar78 = (1'h0); (forvar78 < (2'h2)); forvar78 = (forvar78 + (1'h1)))
            begin
              reg79 = $signed($signed({(^~$unsigned(wire70))}));
              reg80 = (forvar76[(2'h3):(1'h1)] > wire74);
              reg81 <= ((8'ha7) ?
                  (^wire73[(4'hb):(2'h2)]) : ((wire74 == $unsigned($signed(wire71))) && reg79[(2'h3):(1'h0)]));
              reg82 = wire72[(2'h2):(2'h2)];
              reg83 <= reg79[(1'h0):(1'h0)];
            end
          for (forvar84 = (1'h0); (forvar84 < (2'h2)); forvar84 = (forvar84 + (1'h1)))
            begin
              reg85 <= {(~&wire73)};
              reg86 = wire70[(1'h1):(1'h0)];
            end
          reg87 = (^(^(($signed(reg83) ? (7'h43) : wire73) ?
              (8'h9c) : ((wire72 ? (8'hb3) : wire73) ?
                  ((8'hbe) << reg86) : (|(7'h41))))));
          for (forvar88 = (1'h0); (forvar88 < (1'h0)); forvar88 = (forvar88 + (1'h1)))
            begin
              reg89 <= reg87[(1'h0):(1'h0)];
              reg90 <= (forvar76[(4'h9):(3'h6)] >= (8'ha0));
              reg91 <= $signed(forvar84);
              reg92 <= wire70[(1'h0):(1'h0)];
            end
        end
      if (wire68[(1'h0):(1'h0)])
        begin
          for (forvar93 = (1'h0); (forvar93 < (2'h2)); forvar93 = (forvar93 + (1'h1)))
            begin
              reg94 = $signed({(reg87 ? reg83 : $unsigned({(8'hbd)}))});
              reg95 <= ((reg85[(4'h9):(3'h7)] ?
                  reg91 : $signed(reg92)) << (!(&$unsigned((forvar88 ?
                  (8'ha5) : (7'h40))))));
              reg96 <= (((&(^reg85[(3'h4):(3'h4)])) >= (reg91 ?
                  ($signed(wire68) >>> $unsigned(forvar88)) : (~^reg81[(3'h7):(1'h0)]))) != reg81);
              reg97 <= (~&$signed($signed(reg77[(4'ha):(4'ha)])));
              reg98 <= (-reg75);
            end
        end
      else
        begin
          for (forvar93 = (1'h0); (forvar93 < (3'h4)); forvar93 = (forvar93 + (1'h1)))
            begin
              reg94 = (8'ha4);
              reg95 <= $unsigned((($unsigned($unsigned(reg79)) ?
                      (reg83[(2'h2):(1'h0)] > {reg95}) : reg75) ?
                  $unsigned($unsigned($unsigned(reg80))) : reg96));
              reg99 = reg75;
            end
          reg100 <= (reg97[(4'he):(2'h2)] << reg95[(4'hc):(3'h5)]);
          for (forvar101 = (1'h0); (forvar101 < (1'h0)); forvar101 = (forvar101 + (1'h1)))
            begin
              reg102 <= (&(|(reg79[(1'h0):(1'h0)] && wire73)));
            end
        end
      for (forvar103 = (1'h0); (forvar103 < (3'h4)); forvar103 = (forvar103 + (1'h1)))
        begin
          for (forvar104 = (1'h0); (forvar104 < (2'h3)); forvar104 = (forvar104 + (1'h1)))
            begin
              reg105 = (reg87 || $signed($signed({{forvar103},
                  reg87[(1'h0):(1'h0)]})));
            end
        end
    end
  assign wire106 = (^~$signed((7'h42)));
  assign wire107 = (reg75[(2'h3):(2'h2)] << (8'hae));
endmodule