(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param10 = (((|((8'hb0) || (8'had))) ? (~&{(8'ha5)}) : (^~((8'h9c) <<< (8'haa)))) & (((^~(8'ha0)) != ((8'ha7) < (8'h9d))) ? (~|((8'ha7) >>> (8'h9c))) : ((^(8'h9f)) ? (~^(8'had)) : (8'ha9)))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h31):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire9;
  wire [(4'h9):(1'h0)] wire7;
  wire signed [(4'h8):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  reg signed [(2'h2):(1'h0)] reg8 = (1'h0);
  assign y = {wire9, wire7, wire6, wire5, wire4, reg8, (1'h0)};
  assign wire4 = wire0[(1'h0):(1'h0)];
  assign wire5 = {$signed(wire1[(4'h8):(3'h4)])};
  assign wire6 = ((&$signed(((8'ha5) ? wire2 : (8'h9d)))) + wire5);
  assign wire7 = {$signed(((&wire1) + (^~(8'ha0))))};
  always
    @(posedge clk) begin
      reg8 <= wire0[(2'h3):(2'h2)];
    end
  assign wire9 = $unsigned(($signed((~&(8'hab))) ? reg8[(1'h0):(1'h0)] : reg8));
endmodule