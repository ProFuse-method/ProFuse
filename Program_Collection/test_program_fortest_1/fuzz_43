(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h93):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire57;
  wire signed [(3'h4):(1'h0)] wire55;
  wire signed [(3'h4):(1'h0)] wire42;
  wire signed [(4'ha):(1'h0)] wire20;
  wire [(3'h7):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire7;
  wire [(4'h9):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg18 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg16 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg15 = (1'h0);
  reg [(4'h9):(1'h0)] reg14 = (1'h0);
  reg [(4'h9):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg12 = (1'h0);
  reg [(3'h7):(1'h0)] reg11 = (1'h0);
  reg [(2'h3):(1'h0)] reg10 = (1'h0);
  reg [(4'hb):(1'h0)] reg9 = (1'h0);
  reg [(3'h6):(1'h0)] reg8 = (1'h0);
  reg [(4'hb):(1'h0)] reg6 = (1'h0);
  assign y = {wire57,
                 wire55,
                 wire42,
                 wire20,
                 wire19,
                 wire7,
                 wire5,
                 wire4,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg6,
                 (1'h0)};
  assign wire4 = ({{((8'ha4) >> wire2)}} ? wire2 : (8'ha5));
  assign wire5 = (~^(((wire1 ? wire2 : wire0) <= wire3[(1'h1):(1'h1)]) ?
                     wire0 : (~^wire4[(1'h0):(1'h0)])));
  always
    @(posedge clk) begin
      reg6 <= (8'ha3);
    end
  assign wire7 = $unsigned(reg6[(3'h6):(3'h5)]);
  always
    @(posedge clk) begin
      reg8 <= wire1;
      if (({wire7[(2'h3):(1'h1)]} && reg8[(3'h6):(3'h6)]))
        begin
          reg9 <= (8'ha1);
        end
      else
        begin
          reg9 <= $unsigned(({((8'hae) != wire1)} ?
              (~reg6[(1'h0):(1'h0)]) : (wire5[(1'h0):(1'h0)] <<< (8'had))));
          reg10 <= (wire0[(3'h4):(2'h3)] ^ reg6);
          reg11 <= wire5[(4'h9):(3'h7)];
        end
      reg12 <= wire4;
    end
  always
    @(posedge clk) begin
      reg13 <= $signed((|reg9[(3'h6):(2'h2)]));
      if ($unsigned(reg11[(2'h2):(1'h0)]))
        begin
          reg14 <= ($unsigned(($signed(wire0) + $signed((8'ha0)))) - {(~|reg11)});
          if ({wire2})
            begin
              reg15 <= {reg12[(1'h1):(1'h0)]};
            end
          else
            begin
              reg15 <= $signed((wire5[(2'h2):(2'h2)] ^ $signed($unsigned(reg6))));
            end
          if ($unsigned((8'h9c)))
            begin
              reg16 <= (wire5 >> (-wire2));
              reg17 <= $unsigned(((|{wire2}) >= wire7));
              reg18 <= $unsigned(reg11);
            end
          else
            begin
              reg16 <= reg13[(3'h7):(3'h7)];
              reg17 <= reg16;
            end
        end
      else
        begin
          reg14 <= ($unsigned(($signed(reg17) >> (wire7 * (8'ha0)))) != wire4);
          reg15 <= reg17[(1'h0):(1'h0)];
        end
    end
  assign wire19 = (wire4[(2'h2):(2'h2)] ^~ reg12[(3'h4):(1'h1)]);
  assign wire20 = $unsigned((reg6 ?
                      ($unsigned(wire5) ?
                          (wire1 ^ reg11) : reg11[(1'h1):(1'h1)]) : reg10));
  module21 #() modinst43 (.y(wire42), .wire25(reg18), .wire24(wire3), .clk(clk), .wire22(wire1), .wire23(reg15));
  module44 #() modinst56 (wire55, clk, reg11, reg13, wire42, wire3);
  module21 #() modinst58 (.wire25(reg10), .clk(clk), .wire23(reg13), .y(wire57), .wire24(reg18), .wire22(reg9));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module44  (y, clk, wire48, wire47, wire46, wire45);
  output wire [(32'h2c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire48;
  input wire [(4'h9):(1'h0)] wire47;
  input wire signed [(2'h3):(1'h0)] wire46;
  input wire signed [(3'h5):(1'h0)] wire45;
  wire signed [(3'h6):(1'h0)] wire54;
  wire [(3'h5):(1'h0)] wire53;
  wire signed [(4'h8):(1'h0)] wire52;
  wire [(2'h3):(1'h0)] wire51;
  wire signed [(4'hb):(1'h0)] wire50;
  wire signed [(4'ha):(1'h0)] wire49;
  assign y = {wire54, wire53, wire52, wire51, wire50, wire49, (1'h0)};
  assign wire49 = (+((~|$unsigned(wire45)) < ((8'hac) > (8'ha5))));
  assign wire50 = (8'ha0);
  assign wire51 = (8'h9f);
  assign wire52 = $unsigned($signed($unsigned($unsigned((8'ha0)))));
  assign wire53 = (!$signed(((~&(8'ha8)) ?
                      (wire48 <= wire48) : wire51[(1'h1):(1'h1)])));
  assign wire54 = (wire53 ^ {$signed(wire53[(2'h3):(1'h1)])});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21
#(parameter param41 = (({((8'hab) >> (8'hac))} ? ((&(8'ha2)) << ((8'h9d) ? (8'had) : (8'hab))) : ((^(8'ha9)) ~^ ((8'hae) ? (8'ha5) : (8'ha0)))) & ((((8'h9d) >>> (8'ha1)) ? (~(8'ha5)) : ((8'ha5) ? (8'h9f) : (8'hab))) ? {((8'ha8) - (8'h9c))} : ((~&(8'h9f)) && ((8'ha5) ^ (8'hb0))))))
(y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire25;
  input wire [(3'h7):(1'h0)] wire24;
  input wire signed [(4'h9):(1'h0)] wire23;
  input wire [(4'h8):(1'h0)] wire22;
  wire signed [(4'ha):(1'h0)] wire32;
  wire signed [(2'h2):(1'h0)] wire31;
  wire [(3'h6):(1'h0)] wire30;
  wire [(4'ha):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire28;
  wire signed [(4'h9):(1'h0)] wire27;
  wire [(3'h4):(1'h0)] wire26;
  reg signed [(4'ha):(1'h0)] reg40 = (1'h0);
  reg [(2'h3):(1'h0)] reg39 = (1'h0);
  reg [(3'h5):(1'h0)] reg38 = (1'h0);
  reg [(3'h5):(1'h0)] reg37 = (1'h0);
  reg [(3'h6):(1'h0)] reg36 = (1'h0);
  reg [(2'h3):(1'h0)] reg35 = (1'h0);
  reg [(4'ha):(1'h0)] reg34 = (1'h0);
  reg [(3'h4):(1'h0)] reg33 = (1'h0);
  assign y = {wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 (1'h0)};
  assign wire26 = wire25;
  assign wire27 = $signed((|wire26));
  assign wire28 = {(|$unsigned($signed(wire27)))};
  assign wire29 = {wire25};
  assign wire30 = {(|wire22)};
  assign wire31 = wire23[(2'h2):(1'h1)];
  assign wire32 = wire22[(2'h3):(1'h1)];
  always
    @(posedge clk) begin
      reg33 <= (&$unsigned(wire22[(3'h6):(2'h3)]));
      if ((($signed($unsigned(wire23)) | (&wire31)) ?
          $unsigned(wire28[(1'h1):(1'h1)]) : ((+wire28[(1'h0):(1'h0)]) == ({wire31} << $signed(wire23)))))
        begin
          reg34 <= wire25[(2'h2):(1'h0)];
          if (wire24[(1'h0):(1'h0)])
            begin
              reg35 <= wire26;
            end
          else
            begin
              reg35 <= ($unsigned((+(wire28 ?
                  reg35 : wire27))) >> (&$unsigned((wire30 != wire29))));
              reg36 <= (~wire27);
              reg37 <= (^(|wire27[(2'h3):(2'h2)]));
            end
          if ($unsigned((~&(~&((8'haf) ? wire27 : reg36)))))
            begin
              reg38 <= wire22;
            end
          else
            begin
              reg38 <= (wire30[(2'h3):(1'h1)] ?
                  $signed((-(wire27 ?
                      wire23 : reg33))) : (^($signed(wire30) & reg36[(3'h6):(1'h1)])));
              reg39 <= (($unsigned(reg35[(2'h3):(1'h0)]) + (wire24 || $unsigned((8'hb0)))) != ((-(~^(8'ha4))) <= $unsigned(wire29)));
              reg40 <= $signed({wire31[(2'h2):(1'h0)]});
            end
        end
      else
        begin
          reg34 <= ($unsigned((wire30 ? $signed(reg40) : $signed(wire24))) ?
              wire26[(1'h1):(1'h0)] : wire29[(3'h4):(1'h1)]);
          if (($unsigned(($signed(reg38) | $unsigned(wire24))) ?
              ($signed(wire30[(3'h4):(1'h0)]) ?
                  {((8'hac) ? reg36 : reg36)} : wire32) : wire31))
            begin
              reg35 <= ($signed(((reg36 ^ wire25) == (wire25 ?
                  wire23 : wire31))) != $signed(reg40[(3'h5):(3'h4)]));
              reg36 <= (!(|(wire32 ? (wire26 ? reg40 : wire27) : (~|wire32))));
            end
          else
            begin
              reg35 <= $unsigned((({wire25} >>> $signed(wire31)) | reg40[(2'h2):(2'h2)]));
              reg36 <= $unsigned(wire23[(3'h6):(1'h0)]);
              reg37 <= reg40;
            end
        end
    end
endmodule