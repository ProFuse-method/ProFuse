(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param89 = ((&{((8'hae) ^ (8'ha5))}) > (8'ha7)))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h75):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(2'h3):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire88;
  wire [(4'hb):(1'h0)] wire87;
  wire signed [(3'h7):(1'h0)] wire86;
  wire [(4'ha):(1'h0)] wire85;
  wire [(4'h8):(1'h0)] wire84;
  wire signed [(3'h6):(1'h0)] wire83;
  wire signed [(4'hb):(1'h0)] wire79;
  wire [(4'ha):(1'h0)] wire77;
  wire [(3'h4):(1'h0)] wire7;
  wire signed [(4'ha):(1'h0)] wire6;
  wire signed [(3'h6):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire4;
  reg [(4'h9):(1'h0)] reg82 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg81 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg80 = (1'h0);
  assign y = {wire88,
                 wire87,
                 wire86,
                 wire85,
                 wire84,
                 wire83,
                 wire79,
                 wire77,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg82,
                 reg81,
                 reg80,
                 (1'h0)};
  assign wire4 = (^~({(wire3 ^~ wire3)} ?
                     $signed(((8'hb0) == wire3)) : $signed(wire2)));
  assign wire5 = wire0[(3'h4):(1'h0)];
  assign wire6 = (~&({(|wire5)} ? (~(wire3 >> wire0)) : wire3));
  assign wire7 = ($unsigned(($unsigned(wire2) ?
                     ((8'ha8) ^ wire2) : (wire3 == wire6))) && wire2[(2'h3):(2'h3)]);
  module8 #() modinst78 (.wire10(wire4), .y(wire77), .clk(clk), .wire11(wire1), .wire9(wire5), .wire12(wire6));
  assign wire79 = {(wire77[(2'h3):(2'h3)] | wire4[(2'h2):(1'h0)])};
  always
    @(posedge clk) begin
      reg80 <= $unsigned(($signed($signed(wire7)) + (((8'ha1) <<< wire79) - (|wire1))));
      if ({wire7[(1'h0):(1'h0)]})
        begin
          reg81 <= wire77;
        end
      else
        begin
          reg81 <= (^~({(&wire79)} ?
              {{wire79}} : ($signed(wire2) ? (8'hae) : (~&wire6))));
          reg82 <= (({$unsigned(wire3)} ?
                  (wire79 ?
                      (wire1 | wire3) : ((8'ha9) + wire2)) : wire2[(2'h3):(1'h1)]) ?
              $signed(wire2[(2'h2):(1'h1)]) : wire4[(1'h1):(1'h1)]);
        end
    end
  assign wire83 = $unsigned(wire79[(3'h5):(2'h2)]);
  assign wire84 = (-wire4);
  assign wire85 = $signed($unsigned((~(reg82 ? reg80 : (8'h9e)))));
  assign wire86 = wire84;
  assign wire87 = (+$unsigned({$unsigned(wire3)}));
  assign wire88 = $signed($unsigned({$unsigned(wire0)}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param76 = (({((8'h9c) ? (8'ha2) : (8'hac))} || (((8'ha3) >> (8'ha4)) || (&(8'ha9)))) ? (({(8'haa)} ? ((8'haa) ? (8'ha0) : (8'ha1)) : {(8'h9d)}) != {(~&(8'ha5))}) : (+(|(-(8'hb0))))))
(y, clk, wire9, wire10, wire11, wire12);
  output wire [(32'h83):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire9;
  input wire [(4'h8):(1'h0)] wire10;
  input wire [(3'h5):(1'h0)] wire11;
  input wire [(4'ha):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire75;
  wire signed [(3'h6):(1'h0)] wire74;
  wire signed [(4'hb):(1'h0)] wire73;
  wire signed [(4'h8):(1'h0)] wire71;
  wire [(3'h7):(1'h0)] wire56;
  wire [(3'h5):(1'h0)] wire55;
  wire [(4'ha):(1'h0)] wire54;
  wire signed [(3'h5):(1'h0)] wire51;
  wire [(4'h9):(1'h0)] wire50;
  wire [(4'hb):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire48;
  reg [(2'h2):(1'h0)] reg53 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg52 = (1'h0);
  reg [(4'hb):(1'h0)] reg14 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg15 = (1'h0);
  reg [(4'ha):(1'h0)] reg16 = (1'h0);
  assign y = {wire75,
                 wire74,
                 wire73,
                 wire71,
                 wire56,
                 wire55,
                 wire54,
                 wire51,
                 wire50,
                 wire13,
                 wire48,
                 reg53,
                 reg52,
                 reg14,
                 reg15,
                 reg16,
                 (1'h0)};
  assign wire13 = wire12;
  always
    @(posedge clk) begin
      reg14 <= (+$unsigned((-$signed(wire11))));
      reg15 <= {wire9[(3'h4):(2'h2)]};
      reg16 <= (wire10 ?
          wire10[(3'h5):(2'h3)] : (($signed(reg14) >> $signed(wire9)) < wire9[(3'h6):(1'h0)]));
    end
  module17 #() modinst49 (.wire18(wire10), .wire21(wire13), .y(wire48), .wire20(wire12), .clk(clk), .wire19(reg15));
  assign wire50 = reg16;
  assign wire51 = $signed(($signed((wire11 ^ wire48)) ?
                      reg15[(3'h6):(3'h5)] : $signed((wire9 ?
                          wire12 : reg16))));
  always
    @(posedge clk) begin
      reg52 <= $signed(wire48[(3'h6):(1'h0)]);
      reg53 <= $unsigned($unsigned((~&$signed(wire11))));
    end
  assign wire54 = (~^{{(^~reg52)}});
  assign wire55 = (~&$signed($unsigned($unsigned(wire51))));
  assign wire56 = (wire13 || wire55[(3'h5):(1'h1)]);
  module57 #() modinst72 (wire71, clk, wire54, wire13, reg52, reg16);
  assign wire73 = ((~^wire9[(3'h5):(2'h3)]) ?
                      $unsigned(reg53) : (~(reg53 ?
                          wire54 : (reg15 ? wire13 : reg15))));
  assign wire74 = $unsigned($signed(wire9[(3'h5):(2'h3)]));
  assign wire75 = reg15[(3'h5):(2'h3)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module57
#(parameter param70 = (-{(((8'hae) ? (8'ha9) : (8'hb0)) >>> ((8'h9c) ? (8'h9c) : (8'ha1)))}))
(y, clk, wire61, wire60, wire59, wire58);
  output wire [(32'h32):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire61;
  input wire signed [(3'h4):(1'h0)] wire60;
  input wire [(3'h6):(1'h0)] wire59;
  input wire signed [(4'ha):(1'h0)] wire58;
  wire [(4'hb):(1'h0)] wire64;
  wire signed [(4'h8):(1'h0)] wire63;
  wire signed [(3'h4):(1'h0)] wire62;
  reg [(3'h5):(1'h0)] reg69 = (1'h0);
  reg [(3'h4):(1'h0)] reg68 = (1'h0);
  reg [(3'h5):(1'h0)] reg67 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg66 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg65 = (1'h0);
  assign y = {wire64,
                 wire63,
                 wire62,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 (1'h0)};
  assign wire62 = wire60;
  assign wire63 = {wire61};
  assign wire64 = wire60;
  always
    @(posedge clk) begin
      reg65 <= ((($signed(wire62) | $unsigned(wire62)) ^~ wire58) > wire60[(1'h0):(1'h0)]);
      reg66 <= (|$signed(reg65[(1'h0):(1'h0)]));
      if (({(wire59 ? (~^wire63) : $signed(wire59))} >> {((wire58 ?
                  wire63 : wire63) ?
              wire59 : wire63)}))
        begin
          reg67 <= {$unsigned((8'haf))};
        end
      else
        begin
          if ({($signed(wire59[(1'h1):(1'h1)]) >= ((wire62 | reg65) ?
                  wire64 : wire64))})
            begin
              reg67 <= reg66;
            end
          else
            begin
              reg67 <= $signed(reg67[(1'h1):(1'h0)]);
              reg68 <= (($signed($signed(reg66)) ?
                      ((wire64 ? wire64 : wire59) - wire64) : (8'ha9)) ?
                  ($signed($signed((8'h9f))) >= (|(8'ha8))) : (wire61[(3'h5):(2'h3)] ^ $signed(reg66)));
              reg69 <= wire61[(3'h6):(2'h2)];
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17
#(parameter param47 = (|{(((8'hae) ? (8'ha6) : (8'h9e)) ? ((8'ha5) ? (8'ha7) : (8'h9e)) : ((8'haf) ~^ (8'ha5)))}))
(y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'ha6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire21;
  input wire [(3'h7):(1'h0)] wire20;
  input wire [(2'h3):(1'h0)] wire19;
  input wire [(2'h2):(1'h0)] wire18;
  wire [(3'h4):(1'h0)] wire46;
  wire signed [(3'h5):(1'h0)] wire45;
  wire signed [(3'h6):(1'h0)] wire30;
  wire signed [(4'ha):(1'h0)] wire29;
  wire [(3'h7):(1'h0)] wire28;
  wire [(4'hb):(1'h0)] wire27;
  wire signed [(4'hb):(1'h0)] wire26;
  wire signed [(3'h7):(1'h0)] wire24;
  wire [(3'h4):(1'h0)] wire23;
  wire [(2'h3):(1'h0)] wire22;
  reg [(2'h2):(1'h0)] reg44 = (1'h0);
  reg [(4'h8):(1'h0)] reg43 = (1'h0);
  reg [(4'hb):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg39 = (1'h0);
  reg [(3'h7):(1'h0)] reg38 = (1'h0);
  reg [(2'h2):(1'h0)] reg37 = (1'h0);
  reg [(4'ha):(1'h0)] reg36 = (1'h0);
  reg [(3'h7):(1'h0)] reg35 = (1'h0);
  reg [(4'h9):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg33 = (1'h0);
  reg [(3'h5):(1'h0)] reg32 = (1'h0);
  reg [(4'hb):(1'h0)] reg31 = (1'h0);
  reg [(3'h7):(1'h0)] reg25 = (1'h0);
  assign y = {wire46,
                 wire45,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire24,
                 wire23,
                 wire22,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg25,
                 (1'h0)};
  assign wire22 = $signed($unsigned(wire20[(3'h4):(1'h0)]));
  assign wire23 = $unsigned(wire19);
  assign wire24 = wire23;
  always
    @(posedge clk) begin
      reg25 <= $signed((wire24 ? wire21 : {(wire22 ? wire24 : wire21)}));
    end
  assign wire26 = (wire19 ~^ wire18[(1'h0):(1'h0)]);
  assign wire27 = (8'h9c);
  assign wire28 = {(~(~^wire22[(2'h3):(2'h2)]))};
  assign wire29 = $unsigned({(&$unsigned(wire20))});
  assign wire30 = $unsigned($unsigned($signed({wire26})));
  always
    @(posedge clk) begin
      if ($unsigned(wire24[(1'h0):(1'h0)]))
        begin
          reg31 <= wire29[(3'h7):(1'h0)];
          reg32 <= (($unsigned(((8'ha5) ? wire23 : wire20)) ?
              {(wire29 - reg25)} : $unsigned((wire20 != wire22))) > wire23);
        end
      else
        begin
          if ((+{{reg32}}))
            begin
              reg31 <= $signed($unsigned($signed({wire23})));
            end
          else
            begin
              reg31 <= $unsigned({(|$unsigned(wire23))});
              reg32 <= ((wire20[(3'h6):(3'h6)] ?
                      wire20 : $unsigned((reg25 ^~ wire19))) ?
                  ((8'hab) || (^(wire21 * wire24))) : $signed(($signed(wire28) == $signed(wire24))));
              reg33 <= (((^(wire23 ?
                  (8'ha0) : wire18)) || $unsigned((!wire29))) ^ {$signed($unsigned((8'h9d)))});
            end
          if (((+{{(8'hae)}}) > $signed({$signed(wire30)})))
            begin
              reg34 <= $signed((wire21[(1'h0):(1'h0)] && {$unsigned(wire30)}));
              reg35 <= ({(wire22 << $signed(wire23))} ?
                  (reg32 && $unsigned(wire29)) : (!((~&wire26) || $signed((8'ha4)))));
            end
          else
            begin
              reg34 <= {($signed(wire23) ?
                      ($unsigned(reg25) ^ $unsigned((8'hae))) : (&(wire27 & reg31)))};
              reg35 <= (~|wire21);
              reg36 <= (wire28[(3'h5):(1'h0)] | ($unsigned($signed(wire22)) ?
                  (wire24 + $unsigned(wire19)) : ((-(8'ha6)) - wire28[(3'h5):(2'h3)])));
            end
        end
      if (reg32[(1'h0):(1'h0)])
        begin
          reg37 <= $signed(reg31);
          reg38 <= $signed(((|(wire19 != reg34)) ?
              ((wire27 + wire19) ?
                  $signed(wire18) : ((8'haa) ^ (8'haa))) : {wire28}));
          reg39 <= ((~&(wire27 <= (^~wire28))) + $unsigned((((8'ha0) ?
                  (8'h9d) : reg31) ?
              (~reg38) : (~(8'hab)))));
        end
      else
        begin
          reg37 <= {$signed({reg31[(2'h2):(1'h1)]})};
          if ($signed({($unsigned(reg33) ?
                  wire21[(1'h0):(1'h0)] : $signed((8'h9e)))}))
            begin
              reg38 <= reg35[(1'h1):(1'h0)];
              reg39 <= (~wire27);
              reg40 <= reg34;
            end
          else
            begin
              reg38 <= {$signed($signed((|wire19)))};
            end
          if ($unsigned($signed(wire30[(1'h1):(1'h0)])))
            begin
              reg41 <= $unsigned((reg36[(2'h3):(2'h2)] != ($signed(reg38) ~^ $unsigned(wire23))));
              reg42 <= wire29[(4'ha):(4'h9)];
              reg43 <= (~&wire30);
            end
          else
            begin
              reg41 <= ((-reg33[(2'h2):(1'h0)]) ?
                  reg36[(1'h1):(1'h1)] : $signed((8'h9f)));
              reg42 <= reg39;
            end
        end
      reg44 <= {(((^(8'h9c)) ~^ $unsigned(wire19)) ?
              $signed((reg40 ? wire24 : reg38)) : reg41)};
    end
  assign wire45 = {(~&$signed(((8'ha4) ^~ wire22)))};
  assign wire46 = (((wire20 ?
                          (wire19 > wire19) : (reg25 ?
                              reg31 : (8'ha7))) >= (8'hb0)) ?
                      wire29 : wire29[(4'h9):(3'h4)]);
endmodule