(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire69;
  wire signed [(4'h8):(1'h0)] wire67;
  wire [(3'h5):(1'h0)] wire66;
  wire [(4'hb):(1'h0)] wire60;
  wire [(4'hb):(1'h0)] wire58;
  wire signed [(4'hb):(1'h0)] wire4;
  reg [(3'h7):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg64 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg63 = (1'h0);
  reg [(4'h9):(1'h0)] reg62 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg61 = (1'h0);
  assign y = {wire69,
                 wire67,
                 wire66,
                 wire60,
                 wire58,
                 wire4,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 (1'h0)};
  assign wire4 = {wire3};
  module5 #() modinst59 (.wire6(wire4), .wire8(wire0), .wire9(wire3), .clk(clk), .y(wire58), .wire7(wire2));
  assign wire60 = ($unsigned({$unsigned(wire3)}) ?
                      wire4[(3'h6):(2'h2)] : wire4[(4'h9):(2'h3)]);
  always
    @(posedge clk) begin
      reg61 <= $unsigned($unsigned(wire4[(3'h4):(3'h4)]));
      reg62 <= ((wire4[(3'h4):(2'h2)] >= $signed((!wire0))) | $signed((&(!wire1))));
      reg63 <= (+($unsigned((wire3 ? wire3 : reg61)) ~^ $signed(wire1)));
    end
  always
    @(posedge clk) begin
      reg64 <= (8'hab);
      reg65 <= ($signed({wire0[(1'h1):(1'h0)]}) << $unsigned((~(&(8'ha1)))));
    end
  assign wire66 = $unsigned(wire2[(3'h6):(2'h2)]);
  module5 #() modinst68 (.wire7(wire4), .y(wire67), .wire9(reg62), .wire6(reg63), .wire8(wire58), .clk(clk));
  module34 #() modinst70 (.wire38(reg64), .clk(clk), .wire36(wire60), .wire35(reg63), .y(wire69), .wire37(wire2));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire6, wire7, wire8, wire9);
  output wire [(32'h3d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire6;
  input wire signed [(4'hb):(1'h0)] wire7;
  input wire [(4'hb):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire9;
  wire signed [(3'h6):(1'h0)] wire10;
  wire [(3'h5):(1'h0)] wire29;
  wire [(4'hb):(1'h0)] wire31;
  wire signed [(4'h8):(1'h0)] wire33;
  wire signed [(2'h3):(1'h0)] wire53;
  wire signed [(4'hb):(1'h0)] wire55;
  wire [(4'hb):(1'h0)] wire56;
  reg [(3'h5):(1'h0)] reg32 = (1'h0);
  assign y = {wire10,
                 wire29,
                 wire31,
                 wire33,
                 wire53,
                 wire55,
                 wire56,
                 reg32,
                 (1'h0)};
  assign wire10 = wire8;
  module11 #() modinst30 (.wire15(wire7), .wire14(wire10), .wire13(wire8), .clk(clk), .y(wire29), .wire12(wire9));
  assign wire31 = wire29;
  always
    @(posedge clk) begin
      reg32 <= ((({wire10} | $unsigned(wire9)) ?
          ((wire29 >> wire29) ?
              ((8'h9d) ?
                  wire9 : wire10) : $unsigned(wire10)) : $signed((wire29 ?
              wire10 : wire8))) | $signed($signed($signed(wire10))));
    end
  assign wire33 = (8'hae);
  module34 #() modinst54 (wire53, clk, wire29, wire33, wire8, wire6);
  assign wire55 = ($unsigned(wire7) == wire29);
  module11 #() modinst57 (.y(wire56), .wire15(wire33), .wire12(wire55), .wire13(wire7), .clk(clk), .wire14(reg32));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34
#(parameter param52 = {{(((8'haf) ^ (8'hb0)) ? (~(8'haa)) : (8'ha0))}})
(y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire38;
  input wire [(4'h8):(1'h0)] wire37;
  input wire signed [(2'h2):(1'h0)] wire36;
  input wire signed [(4'h9):(1'h0)] wire35;
  wire signed [(2'h3):(1'h0)] wire51;
  wire [(2'h2):(1'h0)] wire50;
  wire signed [(3'h6):(1'h0)] wire49;
  wire [(2'h3):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire47;
  wire [(4'h9):(1'h0)] wire46;
  wire [(3'h5):(1'h0)] wire45;
  wire [(3'h4):(1'h0)] wire44;
  wire [(2'h2):(1'h0)] wire43;
  wire signed [(4'ha):(1'h0)] wire42;
  reg signed [(4'h8):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  reg [(2'h2):(1'h0)] reg39 = (1'h0);
  assign y = {wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 reg41,
                 reg40,
                 reg39,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg39 <= $signed($unsigned($unsigned((!wire35))));
      reg40 <= $unsigned((+((^~wire37) ? reg39 : (~wire35))));
      reg41 <= ((~&wire37) ~^ $signed(wire35));
    end
  assign wire42 = ({wire35[(3'h6):(2'h3)]} ^~ $unsigned($unsigned(wire38[(1'h0):(1'h0)])));
  assign wire43 = ($unsigned((&wire38)) ? wire35[(3'h5):(3'h5)] : wire37);
  assign wire44 = (8'h9f);
  assign wire45 = $unsigned(reg39[(1'h1):(1'h1)]);
  assign wire46 = (-(($unsigned(reg41) << reg40[(3'h5):(2'h3)]) ?
                      (~^wire37) : ((wire38 ?
                          wire37 : wire35) >>> (wire43 & wire45))));
  assign wire47 = ($signed(($signed((8'haa)) || $unsigned(reg40))) ?
                      (reg40 ? wire46 : $signed((wire46 >= reg39))) : reg39);
  assign wire48 = $signed(reg39[(1'h1):(1'h1)]);
  assign wire49 = ($signed({wire47[(2'h3):(2'h2)]}) ?
                      ((|$signed(wire35)) ?
                          $signed($signed(wire46)) : ((wire46 ?
                                  (8'ha5) : (8'h9f)) ?
                              {wire45} : $unsigned(wire45))) : $unsigned(($signed(reg41) < wire37)));
  assign wire50 = (wire48 < wire45[(3'h4):(1'h1)]);
  assign wire51 = wire42[(4'h9):(3'h7)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire15;
  input wire [(3'h4):(1'h0)] wire14;
  input wire signed [(4'hb):(1'h0)] wire13;
  input wire signed [(4'h9):(1'h0)] wire12;
  wire [(3'h4):(1'h0)] wire28;
  wire [(4'ha):(1'h0)] wire27;
  wire signed [(4'h8):(1'h0)] wire26;
  wire [(3'h7):(1'h0)] wire25;
  wire [(3'h6):(1'h0)] wire24;
  wire signed [(3'h6):(1'h0)] wire23;
  wire [(4'h9):(1'h0)] wire22;
  wire [(2'h2):(1'h0)] wire21;
  wire [(3'h6):(1'h0)] wire20;
  wire [(2'h2):(1'h0)] wire19;
  wire signed [(3'h7):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire17;
  wire [(3'h7):(1'h0)] wire16;
  assign y = {wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 (1'h0)};
  assign wire16 = wire13[(2'h3):(2'h2)];
  assign wire17 = $signed($signed(wire16[(3'h4):(3'h4)]));
  assign wire18 = (wire16[(2'h2):(1'h0)] ?
                      $signed(((~^wire14) && wire12[(3'h5):(1'h0)])) : ($signed((wire16 || wire14)) ?
                          wire12 : $signed($unsigned(wire14))));
  assign wire19 = $signed($signed(wire13[(3'h6):(3'h6)]));
  assign wire20 = wire17[(1'h1):(1'h1)];
  assign wire21 = (^~(($unsigned(wire16) ?
                      $unsigned(wire14) : {wire16}) | wire12[(2'h3):(2'h3)]));
  assign wire22 = wire16;
  assign wire23 = $signed((wire15 && (!(8'hb0))));
  assign wire24 = $signed((wire23[(3'h5):(1'h0)] ?
                      wire20[(2'h3):(2'h2)] : wire23));
  assign wire25 = wire14[(2'h2):(1'h0)];
  assign wire26 = (((8'ha3) ?
                      {$unsigned(wire22)} : (^$unsigned(wire21))) >= $signed((&(8'ha4))));
  assign wire27 = {$unsigned($unsigned((-wire21)))};
  assign wire28 = ((~(~|wire14)) ? wire15[(1'h0):(1'h0)] : wire25);
endmodule