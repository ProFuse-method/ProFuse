(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param9 = ({((~^(8'ha5)) != (8'h9f))} ? (-{((8'h9f) ? (8'hae) : (8'ha3))}) : (+(((8'ha8) ? (8'ha2) : (8'h9c)) ? {(8'hac)} : ((8'hac) > (8'ha5))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire3;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(3'h5):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire8;
  wire signed [(3'h5):(1'h0)] wire7;
  wire signed [(4'ha):(1'h0)] wire4;
  reg [(2'h2):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg5 = (1'h0);
  assign y = {wire8, wire7, wire4, reg6, reg5, (1'h0)};
  assign wire4 = $signed($signed(wire1));
  always
    @(posedge clk) begin
      if (wire4[(4'ha):(4'ha)])
        begin
          reg5 <= $unsigned($signed((wire2 ? wire1[(1'h1):(1'h1)] : {wire2})));
        end
      else
        begin
          reg5 <= {$unsigned((~(wire2 ? wire1 : wire3)))};
          reg6 <= (((wire2 == (wire4 ? (8'haf) : wire0)) ?
                  (|wire4[(4'ha):(2'h2)]) : ((!wire2) ?
                      $signed(wire4) : $unsigned(wire0))) ?
              (^~($signed(reg5) > $unsigned((8'ha8)))) : (~&wire1[(1'h0):(1'h0)]));
        end
    end
  assign wire7 = $unsigned($signed(wire3[(1'h0):(1'h0)]));
  assign wire8 = $signed($unsigned(wire2));
endmodule