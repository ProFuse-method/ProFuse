(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire50;
  wire [(3'h6):(1'h0)] wire49;
  wire [(3'h4):(1'h0)] wire48;
  wire signed [(4'h8):(1'h0)] wire47;
  wire signed [(3'h5):(1'h0)] wire46;
  wire [(3'h4):(1'h0)] wire45;
  wire [(3'h5):(1'h0)] wire44;
  wire signed [(4'h9):(1'h0)] wire43;
  wire signed [(3'h6):(1'h0)] wire41;
  wire [(3'h7):(1'h0)] wire7;
  wire signed [(4'h9):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire4;
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire41,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = wire3;
  assign wire5 = ($unsigned(wire1[(3'h4):(2'h3)]) ?
                     {{$unsigned(wire2)}} : ({(wire4 ^ (8'ha8))} >> $signed((wire0 ^ wire3))));
  assign wire6 = (~^$signed(wire5));
  assign wire7 = (~|wire2[(1'h1):(1'h0)]);
  module8 #() modinst42 (wire41, clk, wire4, wire2, wire6, wire7);
  assign wire43 = (~&wire4[(4'hb):(2'h2)]);
  assign wire44 = ((wire3 | ((wire5 ? (8'hae) : (8'ha0)) ?
                      $unsigned(wire2) : (wire5 ? wire3 : wire41))) <<< wire6);
  assign wire45 = ($signed(($unsigned(wire0) ^ $unsigned(wire1))) ?
                      wire0[(4'h8):(3'h6)] : wire43);
  assign wire46 = wire44;
  assign wire47 = $unsigned(wire45);
  assign wire48 = $signed(wire2);
  assign wire49 = $unsigned(wire45);
  assign wire50 = $signed((+(~^(wire41 >> wire0))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param40 = ((8'ha3) >> {{((8'hae) << (8'haa))}}))
(y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h75):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire12;
  input wire [(3'h6):(1'h0)] wire11;
  input wire [(4'h9):(1'h0)] wire10;
  input wire [(3'h6):(1'h0)] wire9;
  wire [(2'h3):(1'h0)] wire39;
  wire signed [(4'h9):(1'h0)] wire38;
  wire [(3'h4):(1'h0)] wire37;
  wire [(4'h8):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire26;
  wire signed [(3'h4):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire14;
  wire signed [(3'h5):(1'h0)] wire13;
  reg [(3'h6):(1'h0)] reg36 = (1'h0);
  reg [(3'h6):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg33 = (1'h0);
  reg [(3'h7):(1'h0)] reg32 = (1'h0);
  reg [(4'hb):(1'h0)] reg31 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg28 = (1'h0);
  assign y = {wire39,
                 wire38,
                 wire37,
                 wire27,
                 wire26,
                 wire24,
                 wire14,
                 wire13,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 (1'h0)};
  assign wire13 = $unsigned({(wire12[(1'h1):(1'h0)] ?
                          $unsigned(wire11) : (wire9 ? (8'h9e) : (8'ha4)))});
  assign wire14 = wire9;
  module15 #() modinst25 (.wire19(wire12), .wire17(wire14), .wire16(wire10), .y(wire24), .clk(clk), .wire18(wire13));
  assign wire26 = $unsigned($signed($unsigned(wire14)));
  assign wire27 = wire11[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      if ((((((8'ha7) ^~ wire27) ?
          (wire11 >> wire10) : $unsigned(wire11)) < (^~wire12[(4'h8):(3'h4)])) >= ((8'h9d) * (((8'haf) << wire12) ?
          {wire11} : $unsigned(wire12)))))
        begin
          if (wire12)
            begin
              reg28 <= {(((!wire11) != (~(8'hae))) ?
                      {wire14} : (wire24[(2'h2):(2'h2)] * (~|wire24)))};
              reg29 <= wire10;
              reg30 <= (!(($signed(reg28) >= wire27[(2'h3):(1'h0)]) >>> $signed(wire24)));
            end
          else
            begin
              reg28 <= reg28[(2'h3):(2'h2)];
              reg29 <= {reg29[(3'h7):(3'h5)]};
              reg30 <= $unsigned((~^$signed($unsigned((8'had)))));
            end
          reg31 <= $signed(($unsigned((reg28 <= reg28)) ?
              $signed($signed(reg28)) : $unsigned($signed((8'haf)))));
          if ($unsigned(wire12))
            begin
              reg32 <= (|$signed({(wire10 ? (8'ha4) : wire27)}));
            end
          else
            begin
              reg32 <= wire24[(2'h3):(2'h3)];
              reg33 <= $signed((wire11 != $unsigned((~^reg30))));
              reg34 <= $unsigned(wire11[(2'h2):(1'h0)]);
            end
        end
      else
        begin
          reg28 <= (wire10 ?
              $signed((^wire24)) : $signed(reg31[(3'h7):(3'h5)]));
        end
      reg35 <= (^(($unsigned(wire9) ?
          wire10[(3'h5):(3'h5)] : $signed((8'hac))) | $signed((reg29 ?
          wire11 : (8'h9f)))));
      reg36 <= (&$signed(((|wire26) ~^ {reg28})));
    end
  assign wire37 = (($signed(reg28[(2'h2):(1'h1)]) ~^ ((reg29 ?
                      wire12 : reg29) && (reg36 ?
                      reg30 : reg33))) ~^ (^(|(~|reg36))));
  assign wire38 = (~{($unsigned(wire9) ? (~&reg29) : reg36[(2'h3):(1'h1)])});
  assign wire39 = (wire37 ?
                      $unsigned(wire14) : ({reg32[(3'h7):(1'h1)]} ?
                          (~|$unsigned(wire10)) : wire12));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15  (y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h19):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire19;
  input wire signed [(3'h4):(1'h0)] wire18;
  input wire [(4'h9):(1'h0)] wire17;
  input wire [(4'h8):(1'h0)] wire16;
  wire signed [(3'h5):(1'h0)] wire23;
  wire [(3'h5):(1'h0)] wire22;
  wire [(3'h6):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire20;
  assign y = {wire23, wire22, wire21, wire20, (1'h0)};
  assign wire20 = ($signed(((+wire18) ? (wire19 - wire18) : {wire18})) ?
                      ($unsigned(wire16) ?
                          {$signed((8'hae))} : wire16) : wire16[(1'h0):(1'h0)]);
  assign wire21 = (^~(8'ha6));
  assign wire22 = (~|{wire18});
  assign wire23 = (({wire20} <<< ((wire19 && wire16) ?
                      (wire21 | wire22) : wire19)) ^~ {wire21});
endmodule