(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param60 = ((~|(~&{((8'hae) | (7'h41)), ((8'ha6) ? (8'h9f) : (8'hb2))})) >> {((((8'ha7) ? (8'hbf) : (8'ha6)) && (+(8'h9c))) && (!((8'h9c) ? (8'ha3) : (8'hb5)))), ((((8'ha9) ? (8'h9d) : (8'ha6)) ? ((8'hba) >>> (8'ha0)) : {(8'hb8)}) - ((!(8'hb9)) != ((8'hb0) ? (8'ha5) : (8'h9d))))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h29e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire [(5'h13):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire [(4'hf):(1'h0)] wire59;
  wire [(5'h12):(1'h0)] wire57;
  wire [(3'h7):(1'h0)] wire56;
  wire signed [(4'ha):(1'h0)] wire55;
  wire [(4'hf):(1'h0)] wire54;
  wire signed [(5'h12):(1'h0)] wire53;
  wire [(4'hf):(1'h0)] wire52;
  wire [(4'h8):(1'h0)] wire51;
  wire signed [(4'ha):(1'h0)] wire50;
  wire [(5'h14):(1'h0)] wire49;
  wire signed [(2'h3):(1'h0)] wire14;
  wire [(2'h3):(1'h0)] wire13;
  wire signed [(4'hf):(1'h0)] wire12;
  wire signed [(4'hf):(1'h0)] wire11;
  wire [(4'ha):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire9;
  wire signed [(5'h15):(1'h0)] wire8;
  wire signed [(2'h2):(1'h0)] wire7;
  wire [(5'h11):(1'h0)] wire6;
  wire signed [(5'h14):(1'h0)] wire5;
  wire [(5'h12):(1'h0)] wire4;
  reg [(4'hc):(1'h0)] reg58 = (1'h0);
  reg [(3'h7):(1'h0)] reg48 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg47 = (1'h0);
  reg [(4'ha):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg41 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg40 = (1'h0);
  reg [(4'hc):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg34 = (1'h0);
  reg [(5'h12):(1'h0)] reg32 = (1'h0);
  reg [(5'h10):(1'h0)] reg25 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg22 = (1'h0);
  reg [(4'hb):(1'h0)] reg20 = (1'h0);
  reg [(2'h3):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg45 = (1'h0);
  reg [(4'hb):(1'h0)] forvar44 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg43 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg42 = (1'h0);
  reg [(4'h8):(1'h0)] forvar38 = (1'h0);
  reg [(5'h13):(1'h0)] reg37 = (1'h0);
  reg [(5'h11):(1'h0)] forvar36 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg35 = (1'h0);
  reg [(4'h8):(1'h0)] forvar33 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar31 = (1'h0);
  reg [(2'h2):(1'h0)] reg30 = (1'h0);
  reg [(5'h15):(1'h0)] reg29 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg28 = (1'h0);
  reg [(4'h9):(1'h0)] forvar27 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar26 = (1'h0);
  reg [(4'hd):(1'h0)] forvar23 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar21 = (1'h0);
  reg [(3'h6):(1'h0)] reg19 = (1'h0);
  reg [(5'h15):(1'h0)] reg17 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar16 = (1'h0);
  reg [(2'h2):(1'h0)] forvar15 = (1'h0);
  assign y = {wire59,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg58,
                 reg48,
                 reg47,
                 reg46,
                 reg41,
                 reg40,
                 reg39,
                 reg34,
                 reg32,
                 reg25,
                 reg24,
                 reg22,
                 reg20,
                 reg18,
                 reg45,
                 forvar44,
                 reg43,
                 reg42,
                 forvar38,
                 reg37,
                 forvar36,
                 reg35,
                 forvar33,
                 forvar31,
                 reg30,
                 reg29,
                 reg28,
                 forvar27,
                 forvar26,
                 forvar23,
                 forvar21,
                 reg19,
                 reg17,
                 forvar16,
                 forvar15,
                 (1'h0)};
  assign wire4 = $unsigned(((($signed(wire0) >= (7'h40)) ?
                     (wire3[(2'h2):(2'h2)] ?
                         ((8'hb0) ?
                             wire2 : wire0) : (-wire0)) : $signed(wire3[(2'h2):(1'h1)])) != ($signed((+wire3)) ~^ ({wire0,
                         wire0} ?
                     $signed(wire2) : wire0[(1'h0):(1'h0)]))));
  assign wire5 = (wire4 ^ wire1[(2'h3):(1'h1)]);
  assign wire6 = $unsigned(wire5);
  assign wire7 = (wire1[(4'hc):(4'h9)] || wire6[(1'h1):(1'h1)]);
  assign wire8 = {wire5[(5'h12):(4'h9)]};
  assign wire9 = (+(~|wire5[(5'h13):(5'h13)]));
  assign wire10 = ((8'hab) ?
                      ((({wire6,
                          wire1} && wire2) >= $unsigned(wire3)) | wire4[(4'he):(3'h5)]) : (~^($signed((8'hb1)) == {(wire8 >> (8'h9d)),
                          (wire0 ^ wire6)})));
  assign wire11 = $signed((wire10 >> {wire8}));
  assign wire12 = (^(wire5 ? {wire4[(3'h6):(1'h1)]} : wire6[(1'h0):(1'h0)]));
  assign wire13 = $unsigned($unsigned({(!(~&wire12))}));
  assign wire14 = $unsigned($unsigned($signed(($signed(wire9) ?
                      wire2[(3'h6):(2'h3)] : wire2[(3'h4):(2'h3)]))));
  always
    @(posedge clk) begin
      for (forvar15 = (1'h0); (forvar15 < (3'h4)); forvar15 = (forvar15 + (1'h1)))
        begin
          for (forvar16 = (1'h0); (forvar16 < (1'h0)); forvar16 = (forvar16 + (1'h1)))
            begin
              reg17 = $signed((forvar16 ?
                  wire8 : $signed(($signed(forvar16) == $signed(wire2)))));
              reg18 <= wire14[(2'h3):(2'h2)];
              reg19 = (wire14 ?
                  $unsigned(wire7) : ((wire0 ?
                      $signed($signed(forvar15)) : $unsigned(forvar15[(2'h2):(1'h1)])) & $unsigned(wire10[(3'h4):(3'h4)])));
            end
          reg20 <= (+wire13);
        end
      for (forvar21 = (1'h0); (forvar21 < (1'h0)); forvar21 = (forvar21 + (1'h1)))
        begin
          reg22 <= $signed((wire1 ?
              $signed(($unsigned(wire0) ?
                  $signed((8'ha3)) : (^~wire14))) : $signed({$unsigned(forvar15),
                  (wire7 ~^ reg19)})));
          for (forvar23 = (1'h0); (forvar23 < (1'h1)); forvar23 = (forvar23 + (1'h1)))
            begin
              reg24 <= (($unsigned((wire12 ?
                      $signed(wire8) : $signed(wire12))) | $unsigned((~|(+wire10)))) ?
                  ({$signed(wire14),
                      wire5[(4'h9):(4'h9)]} == {(~&{reg17})}) : wire0);
              reg25 <= (-wire2);
            end
        end
      for (forvar26 = (1'h0); (forvar26 < (2'h3)); forvar26 = (forvar26 + (1'h1)))
        begin
          for (forvar27 = (1'h0); (forvar27 < (1'h1)); forvar27 = (forvar27 + (1'h1)))
            begin
              reg28 = ((reg24 ?
                  wire5[(4'h8):(1'h0)] : ($signed(wire7) >> $unsigned({reg20,
                      (8'ha9)}))) ~^ $unsigned(wire12));
              reg29 = (&$unsigned($unsigned(((!reg17) ?
                  wire9 : (reg28 != (8'had))))));
              reg30 = ((&({$unsigned(reg20),
                      $unsigned(wire4)} && ((-forvar26) | (~&wire6)))) ?
                  {(reg22[(1'h1):(1'h1)] <<< $signed((wire2 ?
                          wire9 : forvar16)))} : forvar27);
            end
          for (forvar31 = (1'h0); (forvar31 < (2'h3)); forvar31 = (forvar31 + (1'h1)))
            begin
              reg32 <= $signed({{($signed(wire6) ?
                          wire14[(2'h2):(2'h2)] : (wire11 ?
                              wire1 : (8'had)))}});
            end
          for (forvar33 = (1'h0); (forvar33 < (1'h1)); forvar33 = (forvar33 + (1'h1)))
            begin
              reg34 <= (+$unsigned((((-reg18) > wire14[(1'h0):(1'h0)]) ?
                  ((-reg19) ?
                      (8'ha1) : reg22[(2'h2):(1'h0)]) : wire4[(2'h2):(1'h1)])));
              reg35 = ($signed(wire4) ?
                  {{(!wire7), reg25[(3'h6):(2'h2)]}} : ((^$unsigned(((7'h40) ?
                      reg34 : reg28))) ^~ ($signed((-wire5)) != {$signed((8'ha5))})));
            end
        end
      for (forvar36 = (1'h0); (forvar36 < (2'h2)); forvar36 = (forvar36 + (1'h1)))
        begin
          reg37 = $signed(reg28[(1'h0):(1'h0)]);
          for (forvar38 = (1'h0); (forvar38 < (1'h1)); forvar38 = (forvar38 + (1'h1)))
            begin
              reg39 <= reg32[(4'h9):(2'h2)];
              reg40 <= reg35;
              reg41 <= $signed($signed(forvar26[(2'h2):(2'h2)]));
              reg42 = $unsigned($signed(forvar15[(1'h1):(1'h0)]));
            end
          reg43 = {(8'hbd),
              ($unsigned($unsigned($signed((8'hae)))) ?
                  (~&(|forvar27)) : ((|(wire11 != wire3)) ?
                      $signed((|reg30)) : $signed({(7'h41)})))};
          for (forvar44 = (1'h0); (forvar44 < (2'h2)); forvar44 = (forvar44 + (1'h1)))
            begin
              reg45 = (|(|(|($unsigned(wire10) ?
                  (wire13 ? reg20 : (8'hb2)) : (reg19 ? wire11 : (8'hbe))))));
              reg46 <= {$unsigned(((forvar27 ?
                          $signed(reg32) : (forvar36 <<< forvar27)) ?
                      ((7'h42) >> {wire8}) : ((reg19 || reg25) ?
                          forvar36[(5'h10):(1'h1)] : (~reg22)))),
                  (8'hb2)};
              reg47 <= $unsigned(((+(~|(reg37 ?
                  forvar31 : forvar44))) * (reg42[(3'h6):(2'h3)] ?
                  reg20 : $unsigned(forvar26[(3'h5):(3'h5)]))));
            end
        end
      reg48 <= ((((&$signed((8'hb9))) ~^ ($unsigned(forvar15) ~^ $signed(reg43))) ?
              wire2 : reg35[(2'h2):(1'h1)]) ?
          (~($signed((wire4 ? (8'h9d) : wire12)) ?
              ((wire13 <= reg28) ?
                  $signed(wire11) : (wire12 <<< forvar38)) : ((reg39 <<< reg37) < (^~reg45)))) : (+{$unsigned((forvar33 ?
                  wire0 : forvar38))}));
    end
  assign wire49 = {reg47, $signed(reg48[(2'h3):(2'h3)])};
  assign wire50 = (~|($signed(wire8) - wire4[(1'h0):(1'h0)]));
  assign wire51 = ((($unsigned({reg48}) || wire7) ?
                      (reg48 ?
                          reg41[(1'h0):(1'h0)] : ((wire3 & reg32) - (reg34 ^ wire1))) : (~reg34)) & ($signed(($unsigned(reg18) ?
                      $signed(reg39) : wire49)) != {{(+reg24)}}));
  assign wire52 = (-{wire8});
  assign wire53 = {$unsigned($signed(wire0)), (+(~&$unsigned(reg20)))};
  assign wire54 = wire51;
  assign wire55 = $unsigned(reg25);
  assign wire56 = wire3;
  assign wire57 = wire2;
  always
    @(posedge clk) begin
      reg58 <= reg18;
    end
  assign wire59 = $signed({(((&(8'h9e)) ?
                          $unsigned(wire6) : wire8) ^ wire13[(2'h3):(1'h0)]),
                      $signed(wire1)});
endmodule