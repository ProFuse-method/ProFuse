(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire3;
  input wire signed [(2'h2):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire60;
  wire [(4'h9):(1'h0)] wire57;
  wire [(4'hb):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  reg [(3'h7):(1'h0)] reg59 = (1'h0);
  assign y = {wire60, wire57, wire6, wire5, wire4, reg59, (1'h0)};
  assign wire4 = wire0[(1'h0):(1'h0)];
  assign wire5 = $unsigned(wire1);
  assign wire6 = (~^wire1);
  module7 #() modinst58 (.wire10(wire0), .clk(clk), .wire8(wire1), .y(wire57), .wire11(wire6), .wire9(wire4));
  always
    @(posedge clk) begin
      reg59 <= ($unsigned(wire57) + ((~&(wire6 ? wire4 : wire3)) ?
          wire0 : (wire1[(3'h7):(1'h1)] <= wire2)));
    end
  assign wire60 = wire57;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param56 = ((((-(8'had)) ? (+(8'had)) : (-(8'h9c))) >> {((8'hae) ^ (8'ha9))}) ? ((^((8'haa) ^~ (8'ha8))) ~^ (((8'hab) >> (8'ha3)) ? ((8'ha5) * (8'h9d)) : (!(8'hb0)))) : ((|((8'ha4) ? (8'ha3) : (8'hab))) >= {((8'had) + (8'ha4))})))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h25):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire11;
  input wire signed [(4'hb):(1'h0)] wire10;
  input wire signed [(4'h8):(1'h0)] wire9;
  input wire signed [(4'h8):(1'h0)] wire8;
  wire signed [(4'hb):(1'h0)] wire54;
  wire [(3'h4):(1'h0)] wire35;
  wire signed [(4'ha):(1'h0)] wire34;
  wire signed [(4'hb):(1'h0)] wire32;
  assign y = {wire54, wire35, wire34, wire32, (1'h0)};
  module12 #() modinst33 (wire32, clk, wire11, wire9, wire10, wire8);
  assign wire34 = $signed((((wire11 ?
                      wire32 : (8'h9e)) ^~ $unsigned(wire11)) == wire9[(3'h7):(1'h0)]));
  assign wire35 = wire11;
  module36 #() modinst55 (.wire40(wire9), .clk(clk), .y(wire54), .wire39(wire8), .wire38(wire34), .wire37(wire10));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module36  (y, clk, wire40, wire39, wire38, wire37);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire40;
  input wire [(2'h3):(1'h0)] wire39;
  input wire [(3'h4):(1'h0)] wire38;
  input wire signed [(3'h6):(1'h0)] wire37;
  wire signed [(4'hb):(1'h0)] wire50;
  wire signed [(2'h2):(1'h0)] wire49;
  wire [(4'hb):(1'h0)] wire48;
  wire [(3'h6):(1'h0)] wire47;
  wire signed [(3'h7):(1'h0)] wire46;
  wire signed [(3'h5):(1'h0)] wire45;
  wire signed [(3'h7):(1'h0)] wire44;
  wire [(2'h3):(1'h0)] wire43;
  wire [(4'h8):(1'h0)] wire42;
  wire signed [(2'h3):(1'h0)] wire41;
  reg signed [(3'h5):(1'h0)] reg53 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg52 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg51 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 reg53,
                 reg52,
                 reg51,
                 (1'h0)};
  assign wire41 = wire37;
  assign wire42 = $unsigned($unsigned((wire39[(1'h0):(1'h0)] ?
                      $signed(wire41) : wire39[(1'h1):(1'h1)])));
  assign wire43 = {{(&{wire40})}};
  assign wire44 = wire40;
  assign wire45 = ({wire38[(1'h0):(1'h0)]} < wire44[(3'h4):(2'h2)]);
  assign wire46 = wire38;
  assign wire47 = $signed(wire46[(1'h0):(1'h0)]);
  assign wire48 = wire37[(3'h6):(2'h2)];
  assign wire49 = wire48;
  assign wire50 = (|wire40[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      reg51 <= {(^$unsigned($signed(wire42)))};
      reg52 <= (8'h9f);
      reg53 <= wire43;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param31 = (|({(|(8'hab))} ? (((8'ha7) >>> (8'ha4)) >= (+(8'h9c))) : {{(8'ha1)}})))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire16;
  input wire [(4'h8):(1'h0)] wire15;
  input wire signed [(3'h6):(1'h0)] wire14;
  input wire [(4'h8):(1'h0)] wire13;
  wire signed [(2'h2):(1'h0)] wire27;
  wire [(3'h4):(1'h0)] wire26;
  wire signed [(2'h2):(1'h0)] wire25;
  wire signed [(3'h6):(1'h0)] wire24;
  wire signed [(3'h4):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire21;
  wire signed [(4'ha):(1'h0)] wire18;
  wire [(3'h4):(1'h0)] wire17;
  reg signed [(2'h3):(1'h0)] reg30 = (1'h0);
  reg [(2'h3):(1'h0)] reg29 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg28 = (1'h0);
  reg [(2'h2):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg19 = (1'h0);
  assign y = {wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire18,
                 wire17,
                 reg30,
                 reg29,
                 reg28,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire17 = wire15[(1'h0):(1'h0)];
  assign wire18 = $unsigned($signed($signed($unsigned(wire15))));
  always
    @(posedge clk) begin
      if (((-(8'h9e)) ^ {($unsigned(wire17) ?
              (~|wire14) : $unsigned((8'hae)))}))
        begin
          reg19 <= (wire16 ? wire15 : {wire16[(3'h6):(1'h0)]});
        end
      else
        begin
          reg19 <= (!wire16);
          reg20 <= {((^~(~^wire16)) ? {$signed(reg19)} : {(~&wire14)})};
        end
    end
  assign wire21 = $signed($signed($signed((reg20 ? reg20 : (8'ha0)))));
  assign wire22 = wire13[(1'h1):(1'h0)];
  assign wire23 = $signed((({wire15} & $unsigned(reg20)) >= $signed($signed(reg19))));
  assign wire24 = (({reg19} ?
                      (|((8'ha0) < wire15)) : wire17) < ((~wire15) ^ {(reg20 ?
                          wire21 : wire23)}));
  assign wire25 = {wire15};
  assign wire26 = ($signed($signed((~wire21))) ?
                      $signed($unsigned({reg20})) : (($unsigned((8'h9f)) >>> wire14[(2'h2):(1'h0)]) + $unsigned($unsigned((8'ha4)))));
  assign wire27 = ($signed($unsigned($unsigned(wire25))) ?
                      (-{$unsigned(wire18)}) : {{wire23}});
  always
    @(posedge clk) begin
      reg28 <= $unsigned((wire25[(1'h0):(1'h0)] ?
          ((|wire16) >= wire23[(2'h3):(2'h2)]) : ($unsigned(wire13) ?
              (-(8'had)) : reg19[(1'h1):(1'h0)])));
      reg29 <= (&$unsigned(((~wire22) | wire21)));
      reg30 <= ($unsigned({(reg19 < wire26)}) ?
          $signed(wire14[(3'h5):(3'h5)]) : wire25[(1'h0):(1'h0)]);
    end
endmodule