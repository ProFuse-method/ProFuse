(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param57 = ((!(^~((8'h9f) ? (8'h9d) : (8'hab)))) ? ((-((8'ha2) + (8'hac))) ? (&{(8'ha3)}) : (-((8'ha8) != (8'ha1)))) : (+{((8'ha9) > (8'hb0))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire56;
  wire [(4'h8):(1'h0)] wire55;
  wire signed [(3'h7):(1'h0)] wire54;
  wire [(4'h8):(1'h0)] wire53;
  wire [(2'h3):(1'h0)] wire52;
  wire [(3'h5):(1'h0)] wire50;
  wire signed [(4'h9):(1'h0)] wire49;
  wire [(2'h3):(1'h0)] wire48;
  wire signed [(3'h4):(1'h0)] wire47;
  wire signed [(4'hb):(1'h0)] wire45;
  wire signed [(3'h5):(1'h0)] wire43;
  wire [(4'h8):(1'h0)] wire41;
  assign y = {wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire45,
                 wire43,
                 wire41,
                 (1'h0)};
  module4 #() modinst42 (wire41, clk, wire1, wire2, wire0, wire3);
  module15 #() modinst44 (.wire17(wire3), .wire19(wire2), .wire18(wire1), .wire16(wire41), .clk(clk), .y(wire43));
  module4 #() modinst46 (wire45, clk, wire41, wire0, wire43, wire1);
  assign wire47 = wire2[(2'h3):(1'h1)];
  assign wire48 = wire2;
  assign wire49 = $signed($signed($signed($unsigned((8'hb0)))));
  module15 #() modinst51 (wire50, clk, wire0, wire3, wire43, wire1);
  assign wire52 = (^wire2);
  assign wire53 = $signed((8'haa));
  assign wire54 = ((~&$signed((-wire41))) < wire52);
  assign wire55 = {{$signed(((8'h9c) >>> wire50))}};
  assign wire56 = $signed((~$unsigned($signed(wire1))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire5;
  input wire [(3'h4):(1'h0)] wire6;
  input wire [(3'h5):(1'h0)] wire7;
  input wire [(4'ha):(1'h0)] wire8;
  wire signed [(3'h5):(1'h0)] wire9;
  wire signed [(3'h4):(1'h0)] wire10;
  wire signed [(3'h5):(1'h0)] wire11;
  wire signed [(3'h6):(1'h0)] wire12;
  wire [(4'ha):(1'h0)] wire13;
  wire [(4'h8):(1'h0)] wire39;
  reg signed [(4'h9):(1'h0)] reg14 = (1'h0);
  assign y = {wire9, wire10, wire11, wire12, wire13, wire39, reg14, (1'h0)};
  assign wire9 = $unsigned((~&wire5));
  assign wire10 = (~^$unsigned($signed((^~wire6))));
  assign wire11 = ($signed($unsigned((!wire8))) >>> (wire5[(1'h0):(1'h0)] >> {(-wire8)}));
  assign wire12 = {((wire8 ? (~|wire11) : (wire11 ? (8'hae) : wire10)) ?
                          wire5[(1'h0):(1'h0)] : wire10[(2'h3):(2'h2)])};
  assign wire13 = {(8'ha6)};
  always
    @(posedge clk) begin
      reg14 <= (~|{(8'ha0)});
    end
  module15 #() modinst40 (.wire17(wire10), .y(wire39), .wire16(wire8), .wire18(reg14), .wire19(wire9), .clk(clk));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param38 = ((+(((8'ha3) >> (8'ha3)) | {(8'hb0)})) ? ((((8'hb0) || (8'haf)) * (|(8'hac))) <= (((8'hb0) ? (8'ha5) : (8'h9f)) ^ (~^(8'h9e)))) : {(~&{(8'h9c)})}))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h75):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire19;
  input wire signed [(2'h3):(1'h0)] wire18;
  input wire [(2'h3):(1'h0)] wire17;
  input wire [(3'h5):(1'h0)] wire16;
  wire signed [(4'h8):(1'h0)] wire37;
  wire [(4'ha):(1'h0)] wire32;
  wire signed [(2'h3):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire30;
  wire signed [(2'h3):(1'h0)] wire29;
  wire [(4'h8):(1'h0)] wire28;
  wire [(3'h7):(1'h0)] wire27;
  wire [(2'h2):(1'h0)] wire26;
  wire signed [(4'hb):(1'h0)] wire25;
  wire [(4'h9):(1'h0)] wire24;
  wire signed [(2'h2):(1'h0)] wire23;
  reg signed [(2'h3):(1'h0)] reg36 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg34 = (1'h0);
  reg [(4'ha):(1'h0)] reg33 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg22 = (1'h0);
  reg [(2'h3):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg20 = (1'h0);
  assign y = {wire37,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg20 <= $unsigned((|$unsigned((wire16 <<< wire16))));
      reg21 <= {(~((wire16 == (8'h9f)) ? $unsigned(wire19) : {wire19}))};
      reg22 <= (^~(&($signed(reg20) ?
          {wire16} : ((8'ha6) ? wire18 : (8'ha5)))));
    end
  assign wire23 = (!(($signed(reg21) > {reg22}) && {$unsigned(wire16)}));
  assign wire24 = wire23[(1'h1):(1'h1)];
  assign wire25 = (((~|$signed(wire23)) ? wire17 : wire19) ?
                      ({(+reg21)} ?
                          (reg20 ?
                              (~&wire23) : (wire16 * wire24)) : (~^$signed(wire17))) : (~|wire19[(1'h0):(1'h0)]));
  assign wire26 = wire23;
  assign wire27 = $unsigned($signed((wire26[(1'h0):(1'h0)] == (8'h9c))));
  assign wire28 = $signed($unsigned(wire19[(1'h0):(1'h0)]));
  assign wire29 = (reg22[(1'h0):(1'h0)] >= ((wire24[(3'h6):(2'h3)] >>> $signed(wire25)) | (reg20[(1'h0):(1'h0)] ?
                      wire26 : (~&wire18))));
  assign wire30 = $unsigned(wire23);
  assign wire31 = wire23;
  assign wire32 = {(((reg21 <<< (8'h9e)) ?
                          (wire29 || wire23) : (wire24 ?
                              wire30 : wire18)) && ((^wire29) << (wire19 ?
                          wire19 : wire29)))};
  always
    @(posedge clk) begin
      reg33 <= ((wire17 << wire19) <= ($signed(wire32[(1'h0):(1'h0)]) >>> $unsigned((reg20 ?
          wire32 : wire24))));
      if ($unsigned((+reg21[(2'h2):(2'h2)])))
        begin
          if (($unsigned($unsigned(((8'h9e) ? wire23 : reg20))) ?
              (~|(^wire28)) : wire32))
            begin
              reg34 <= (+((wire27 ?
                  wire19 : wire18[(2'h2):(1'h1)]) && ((wire26 ?
                  (8'ha3) : wire17) <<< $signed((8'ha8)))));
              reg35 <= (+$signed((reg22[(3'h6):(3'h5)] ?
                  $unsigned(reg33) : $signed(wire23))));
            end
          else
            begin
              reg34 <= {$unsigned($unsigned($signed(wire24)))};
            end
          reg36 <= $unsigned(({wire26} << (reg22 | (wire29 ^ reg21))));
        end
      else
        begin
          reg34 <= (~^wire32);
          reg35 <= ((reg22[(4'h8):(1'h1)] ?
                  $signed((wire28 != wire24)) : wire30) ?
              {(reg22[(3'h7):(1'h0)] ?
                      ((8'ha7) << wire19) : wire16[(1'h1):(1'h0)])} : {((wire23 <<< wire30) != wire17[(1'h1):(1'h1)])});
        end
    end
  assign wire37 = wire29[(1'h0):(1'h0)];
endmodule