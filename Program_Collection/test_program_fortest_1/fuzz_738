(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire13;
  wire [(2'h2):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire11;
  wire signed [(2'h3):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire9;
  wire signed [(2'h3):(1'h0)] wire8;
  wire [(3'h7):(1'h0)] wire7;
  reg [(3'h6):(1'h0)] reg15 = (1'h0);
  reg [(3'h5):(1'h0)] reg14 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg5 = (1'h0);
  reg [(3'h5):(1'h0)] reg4 = (1'h0);
  assign y = {wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 reg15,
                 reg14,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= ($unsigned(wire3[(2'h2):(2'h2)]) ? wire0 : wire0);
      reg5 <= wire3;
      reg6 <= (~|reg4[(3'h4):(2'h2)]);
    end
  assign wire7 = reg4[(3'h5):(3'h4)];
  assign wire8 = (8'ha1);
  assign wire9 = ((((reg5 ? wire8 : reg5) ?
                         wire1[(1'h0):(1'h0)] : wire1[(2'h2):(1'h1)]) ?
                     wire0 : ((~^(8'hab)) ?
                         (-(8'hae)) : (wire8 ?
                             wire8 : wire1))) < ($signed((8'hac)) ~^ (~|wire0[(3'h7):(2'h3)])));
  assign wire10 = (8'hac);
  assign wire11 = wire9[(3'h6):(3'h6)];
  assign wire12 = {reg5[(3'h6):(3'h4)]};
  assign wire13 = (wire9 >= (~^(^wire12)));
  always
    @(posedge clk) begin
      reg14 <= reg6[(3'h5):(1'h0)];
      reg15 <= (wire1[(2'h2):(2'h2)] ?
          reg6[(1'h0):(1'h0)] : $unsigned(($signed((8'ha3)) ^ wire12)));
    end
endmodule