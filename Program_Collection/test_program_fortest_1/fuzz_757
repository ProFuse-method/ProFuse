(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param101 = (((((8'ha7) * (8'h9c)) & ((8'haf) ? (8'haf) : (8'ha0))) ? ({(8'hae)} << (^~(8'ha7))) : (~|(~^(8'had)))) ? ({(^(8'ha7))} && ((8'hae) ? ((8'haf) ? (8'ha1) : (8'ha2)) : ((8'ha9) ? (8'h9e) : (8'ha0)))) : {(&((8'h9d) > (8'hab)))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'ha5):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire91;
  wire signed [(4'h8):(1'h0)] wire87;
  wire signed [(3'h6):(1'h0)] wire85;
  wire [(4'h9):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire4;
  reg [(2'h2):(1'h0)] reg100 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg99 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg98 = (1'h0);
  reg [(3'h5):(1'h0)] reg97 = (1'h0);
  reg [(3'h6):(1'h0)] reg96 = (1'h0);
  reg [(4'h9):(1'h0)] reg95 = (1'h0);
  reg [(3'h6):(1'h0)] reg94 = (1'h0);
  reg [(4'h8):(1'h0)] reg93 = (1'h0);
  reg [(4'ha):(1'h0)] reg92 = (1'h0);
  reg [(3'h6):(1'h0)] reg90 = (1'h0);
  reg [(4'h9):(1'h0)] reg89 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg88 = (1'h0);
  reg [(4'hb):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg10 = (1'h0);
  reg [(2'h3):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg8 = (1'h0);
  reg [(3'h4):(1'h0)] reg7 = (1'h0);
  assign y = {wire91,
                 wire87,
                 wire85,
                 wire6,
                 wire5,
                 wire4,
                 reg100,
                 reg99,
                 reg98,
                 reg97,
                 reg96,
                 reg95,
                 reg94,
                 reg93,
                 reg92,
                 reg90,
                 reg89,
                 reg88,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 (1'h0)};
  assign wire4 = (wire3 ? $unsigned(wire2) : wire1[(4'hb):(4'hb)]);
  assign wire5 = $unsigned(($signed((~&wire3)) ?
                     ($signed(wire0) << $unsigned(wire2)) : (-wire2)));
  assign wire6 = (({$signed(wire0)} ?
                     $unsigned($unsigned(wire2)) : wire3) && (&(~|$unsigned((8'hab)))));
  always
    @(posedge clk) begin
      reg7 <= (~^(~|wire5));
      if (($signed((wire4 ? (wire4 ? wire3 : wire0) : $signed((8'had)))) ?
          $unsigned(reg7[(1'h0):(1'h0)]) : (!((wire4 ?
              reg7 : wire0) && ((8'hac) ? wire6 : wire1)))))
        begin
          reg8 <= ((({wire2} == reg7[(2'h2):(1'h1)]) ?
              $unsigned(wire2) : (wire1[(3'h4):(3'h4)] ~^ $signed(wire4))) == (wire5 < $signed((8'ha0))));
        end
      else
        begin
          reg8 <= (((wire5 ?
                  wire1[(4'ha):(3'h6)] : $signed(wire3)) || $unsigned((8'ha1))) ?
              wire4[(3'h4):(1'h1)] : ((~|wire5[(4'hb):(2'h3)]) ?
                  (&{wire0}) : $signed($unsigned(wire2))));
          if (wire5)
            begin
              reg9 <= ((reg8 > wire3[(2'h2):(1'h1)]) ?
                  ((+(wire4 <= wire2)) ?
                      (reg8[(3'h5):(2'h2)] ?
                          (-wire6) : $unsigned(wire5)) : ($unsigned(wire0) - (wire2 ^ reg7))) : wire5);
              reg10 <= ($unsigned((!{(8'hae)})) ?
                  wire6[(3'h7):(3'h6)] : ((^(wire3 ? wire5 : wire4)) ?
                      $signed($unsigned(wire6)) : wire6[(4'h8):(1'h1)]));
              reg11 <= $unsigned($unsigned($unsigned(wire4)));
            end
          else
            begin
              reg9 <= wire1[(4'ha):(3'h7)];
              reg10 <= {($unsigned((~&reg11)) > $unsigned(reg10[(3'h4):(3'h4)]))};
              reg11 <= (~|$unsigned((wire4 ? wire1 : $unsigned(reg7))));
            end
        end
      reg12 <= (wire5 ? wire1 : wire4[(2'h3):(2'h3)]);
    end
  module13 #() modinst86 (.wire14(reg11), .wire16(wire2), .wire17(reg10), .y(wire85), .wire15(wire5), .clk(clk));
  assign wire87 = wire3[(2'h2):(2'h2)];
  always
    @(posedge clk) begin
      reg88 <= (wire1[(1'h0):(1'h0)] ?
          $signed($signed($unsigned(wire6))) : ($signed((reg7 && reg11)) ?
              $unsigned((8'h9c)) : $unsigned({wire2})));
    end
  always
    @(posedge clk) begin
      reg89 <= (((~^$signed(reg10)) - $signed($signed(reg7))) && wire85[(3'h4):(3'h4)]);
      reg90 <= reg89;
    end
  assign wire91 = (^{$signed(reg88[(2'h3):(2'h3)])});
  always
    @(posedge clk) begin
      reg92 <= ($signed({$unsigned(reg9)}) ?
          $unsigned($unsigned((^~wire0))) : reg89);
      if ($unsigned({(!wire1[(2'h3):(2'h2)])}))
        begin
          reg93 <= (({$unsigned(reg7)} ?
                  (8'ha6) : (wire2[(3'h6):(2'h2)] ?
                      $unsigned(wire85) : (!reg11))) ?
              wire0 : $unsigned(($unsigned(wire3) ^ (reg10 ? reg12 : reg88))));
          reg94 <= {reg12};
          reg95 <= wire91[(1'h0):(1'h0)];
        end
      else
        begin
          reg93 <= $unsigned((!$signed((wire5 ? reg7 : reg88))));
          reg94 <= (|wire6);
          reg95 <= (~|(^wire85));
        end
      reg96 <= ((+($signed(wire3) ? $unsigned(wire85) : $signed(reg7))) ?
          (+((wire6 >>> reg89) ?
              wire3 : wire5)) : ({wire6} <= $signed($signed(reg10))));
    end
  always
    @(posedge clk) begin
      if ({reg95})
        begin
          if (((wire2[(3'h5):(2'h3)] ?
                  {reg88} : ((reg96 ? reg94 : reg94) ^ (reg95 == wire5))) ?
              wire3 : {reg88[(1'h1):(1'h0)]}))
            begin
              reg97 <= $signed((|($signed((8'haf)) ?
                  $signed(reg93) : (wire1 ? reg96 : reg11))));
              reg98 <= $signed(wire4);
            end
          else
            begin
              reg97 <= $unsigned(reg9[(1'h0):(1'h0)]);
              reg98 <= reg92;
            end
        end
      else
        begin
          reg97 <= (!(reg8 != $unsigned($unsigned(reg10))));
          reg98 <= reg11[(3'h5):(3'h5)];
        end
      reg99 <= $unsigned(((reg89 << (~reg9)) >>> (wire4[(2'h2):(1'h1)] | reg92[(2'h2):(1'h1)])));
      reg100 <= (!(|$signed((wire85 ? reg9 : wire1))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param84 = ({((+(8'hae)) ? ((8'ha6) ? (8'h9f) : (8'h9d)) : (~&(8'ha5)))} ? {(((8'h9e) ? (8'haf) : (8'ha3)) ? ((8'h9f) ? (8'h9c) : (8'ha1)) : ((8'haf) ? (8'ha6) : (8'h9e)))} : ((!((8'ha3) ? (8'ha1) : (8'ha2))) ? (~&((8'ha7) ^ (8'ha0))) : (((8'hae) ? (8'ha3) : (8'hb0)) != ((8'h9c) - (8'hab))))))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h7e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire17;
  input wire [(4'hb):(1'h0)] wire16;
  input wire [(3'h6):(1'h0)] wire15;
  input wire signed [(3'h7):(1'h0)] wire14;
  wire [(2'h2):(1'h0)] wire83;
  wire [(3'h6):(1'h0)] wire79;
  wire signed [(4'h8):(1'h0)] wire53;
  wire [(4'hb):(1'h0)] wire47;
  wire [(4'h8):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  wire signed [(4'h9):(1'h0)] wire19;
  wire [(4'ha):(1'h0)] wire18;
  wire [(3'h7):(1'h0)] wire81;
  reg signed [(4'h8):(1'h0)] reg52 = (1'h0);
  reg [(4'ha):(1'h0)] reg51 = (1'h0);
  reg [(3'h6):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg49 = (1'h0);
  reg [(4'hb):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg21 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg20 = (1'h0);
  assign y = {wire83,
                 wire79,
                 wire53,
                 wire47,
                 wire24,
                 wire23,
                 wire19,
                 wire18,
                 wire81,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  assign wire18 = $unsigned(wire17[(3'h4):(2'h2)]);
  assign wire19 = $unsigned(((+(wire18 << wire15)) ?
                      wire15 : ($signed((8'h9e)) > (wire17 * wire18))));
  always
    @(posedge clk) begin
      reg20 <= $signed($signed($unsigned(wire14[(3'h6):(1'h0)])));
    end
  always
    @(posedge clk) begin
      reg21 <= $unsigned((((wire16 ?
          (8'hae) : (8'ha8)) << $unsigned((8'had))) < $signed((wire17 & reg20))));
      reg22 <= wire16[(3'h4):(3'h4)];
    end
  assign wire23 = wire16;
  assign wire24 = (wire23[(3'h6):(2'h3)] << $unsigned({(wire14 ?
                          (8'h9e) : wire14)}));
  module25 #() modinst48 (.wire29(wire23), .y(wire47), .wire27(wire18), .wire26(wire17), .wire28(wire24), .clk(clk));
  always
    @(posedge clk) begin
      reg49 <= (($unsigned(reg21[(2'h3):(2'h2)]) < wire16) ?
          $unsigned(wire18) : (wire16 ?
              (^wire18[(4'ha):(3'h6)]) : ($signed(wire47) + (wire18 + reg22))));
      reg50 <= ((|(8'ha3)) <<< wire15[(3'h5):(1'h1)]);
      if ($unsigned($unsigned((wire15[(1'h0):(1'h0)] ?
          $signed(wire15) : (wire15 ? (8'ha3) : wire18)))))
        begin
          reg51 <= $signed(reg50[(1'h1):(1'h1)]);
        end
      else
        begin
          reg51 <= ((({(8'ha6)} ?
                  (wire15 + wire14) : {wire19}) << {$signed(reg51)}) ?
              wire17[(2'h2):(1'h1)] : (wire16 >>> wire15));
          reg52 <= reg50[(3'h6):(1'h1)];
        end
    end
  assign wire53 = $unsigned((8'h9c));
  module54 #() modinst80 (wire79, clk, wire16, wire24, wire23, reg20);
  module25 #() modinst82 (.y(wire81), .wire28(wire53), .clk(clk), .wire27(reg51), .wire29(wire14), .wire26(wire17));
  assign wire83 = ((-($signed(reg22) ?
                          $signed(wire47) : wire53[(3'h5):(2'h3)])) ?
                      (((wire47 != wire79) ?
                              (reg20 != wire47) : $unsigned(reg50)) ?
                          wire17[(1'h1):(1'h1)] : wire17) : reg52[(3'h4):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module54
#(parameter param78 = ({(^((8'ha1) ^ (8'h9d)))} ? ((((8'hb0) ? (8'ha9) : (8'hac)) ? ((8'ha0) & (8'had)) : (^(8'ha6))) ? ({(8'ha1)} ? ((8'ha1) & (8'ha5)) : (^~(8'hae))) : (|{(8'ha1)})) : (~&(8'ha7))))
(y, clk, wire58, wire57, wire56, wire55);
  output wire [(32'h74):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire58;
  input wire [(3'h7):(1'h0)] wire57;
  input wire [(4'ha):(1'h0)] wire56;
  input wire [(3'h4):(1'h0)] wire55;
  wire signed [(2'h2):(1'h0)] wire77;
  wire signed [(2'h3):(1'h0)] wire72;
  wire [(3'h5):(1'h0)] wire71;
  wire [(3'h4):(1'h0)] wire70;
  wire [(4'h8):(1'h0)] wire69;
  wire signed [(3'h7):(1'h0)] wire66;
  wire [(3'h7):(1'h0)] wire61;
  wire [(2'h2):(1'h0)] wire60;
  wire signed [(3'h6):(1'h0)] wire59;
  reg signed [(3'h5):(1'h0)] reg76 = (1'h0);
  reg [(3'h7):(1'h0)] reg75 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg74 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg73 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg68 = (1'h0);
  reg [(4'hb):(1'h0)] reg67 = (1'h0);
  reg [(4'h8):(1'h0)] reg65 = (1'h0);
  reg [(4'h9):(1'h0)] reg64 = (1'h0);
  reg [(3'h5):(1'h0)] reg63 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg62 = (1'h0);
  assign y = {wire77,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 wire66,
                 wire61,
                 wire60,
                 wire59,
                 reg76,
                 reg75,
                 reg74,
                 reg73,
                 reg68,
                 reg67,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 (1'h0)};
  assign wire59 = $signed(wire55[(1'h1):(1'h1)]);
  assign wire60 = (!{((wire57 ? wire57 : wire55) ?
                          (wire57 & wire56) : (wire58 ^ wire57))});
  assign wire61 = {{wire60}};
  always
    @(posedge clk) begin
      if (wire56)
        begin
          if ((wire60[(1'h1):(1'h1)] || (wire56[(1'h0):(1'h0)] ?
              ($signed((8'ha5)) == (wire56 ^ wire58)) : wire55[(2'h2):(2'h2)])))
            begin
              reg62 <= $signed(wire56[(3'h5):(3'h4)]);
              reg63 <= $unsigned((8'hb0));
            end
          else
            begin
              reg62 <= ((^(+$unsigned(wire57))) == $unsigned({$unsigned(wire56)}));
            end
          reg64 <= wire57;
          reg65 <= ({reg64} || {{((8'h9f) ? reg62 : reg62)}});
        end
      else
        begin
          if ($unsigned(wire61[(3'h5):(2'h2)]))
            begin
              reg62 <= wire61;
            end
          else
            begin
              reg62 <= $unsigned((8'had));
            end
        end
    end
  assign wire66 = $unsigned($unsigned(wire55[(2'h2):(2'h2)]));
  always
    @(posedge clk) begin
      reg67 <= {(((wire56 ? wire61 : (8'h9c)) <<< (reg62 ?
              reg65 : wire66)) <<< ((-wire55) >= (|(8'ha8))))};
      reg68 <= ($unsigned($unsigned((reg64 ? wire56 : reg64))) ?
          (|($unsigned(wire60) ?
              wire60 : (wire57 - reg64))) : wire58[(4'hb):(1'h1)]);
    end
  assign wire69 = ((((reg63 * reg67) ?
                              (reg67 ? (8'ha4) : (8'ha9)) : $unsigned(wire58)) ?
                          (((8'ha5) & (8'hab)) ^~ wire66) : $signed($unsigned(wire55))) ?
                      $unsigned(($unsigned(reg62) ?
                          (wire56 >> wire60) : ((8'h9f) ?
                              reg68 : wire57))) : ($signed((8'h9c)) ?
                          $unsigned((~&(8'ha1))) : wire55[(3'h4):(2'h3)]));
  assign wire70 = (~((((8'h9f) ? wire66 : wire69) ?
                      (reg65 * reg68) : (~|reg63)) - $signed(wire66)));
  assign wire71 = (wire56 ?
                      {($signed(reg67) < $unsigned(reg68))} : (($unsigned(reg67) <= wire70) ?
                          (wire61 ?
                              {wire70} : wire57[(3'h6):(1'h0)]) : $unsigned($unsigned(wire70))));
  assign wire72 = $unsigned({(8'ha3)});
  always
    @(posedge clk) begin
      if ((wire57 ?
          wire60 : (wire70[(2'h2):(1'h0)] + $signed((wire61 ?
              wire66 : reg67)))))
        begin
          reg73 <= $signed(reg62[(1'h1):(1'h0)]);
          reg74 <= (^(+$signed((~wire71))));
          if ($unsigned(reg62))
            begin
              reg75 <= reg73;
              reg76 <= {wire61};
            end
          else
            begin
              reg75 <= ($unsigned({(8'ha1)}) < wire70);
            end
        end
      else
        begin
          reg73 <= wire69;
        end
    end
  assign wire77 = (8'ha6);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25  (y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire29;
  input wire signed [(4'h8):(1'h0)] wire28;
  input wire [(4'ha):(1'h0)] wire27;
  input wire [(3'h7):(1'h0)] wire26;
  wire signed [(3'h5):(1'h0)] wire46;
  wire [(4'h9):(1'h0)] wire36;
  wire [(2'h2):(1'h0)] wire35;
  wire [(3'h4):(1'h0)] wire34;
  wire [(3'h4):(1'h0)] wire33;
  wire [(3'h5):(1'h0)] wire32;
  wire signed [(3'h5):(1'h0)] wire31;
  wire signed [(4'ha):(1'h0)] wire30;
  reg signed [(2'h3):(1'h0)] reg45 = (1'h0);
  reg [(3'h5):(1'h0)] reg44 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg43 = (1'h0);
  reg [(4'hb):(1'h0)] reg42 = (1'h0);
  reg [(2'h3):(1'h0)] reg41 = (1'h0);
  reg [(4'hb):(1'h0)] reg40 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg39 = (1'h0);
  reg [(3'h4):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg37 = (1'h0);
  assign y = {wire46,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 (1'h0)};
  assign wire30 = wire26;
  assign wire31 = $unsigned({wire28[(2'h3):(1'h1)]});
  assign wire32 = ($unsigned($signed(wire28[(2'h3):(2'h2)])) ?
                      (!((wire31 <<< wire30) ?
                          (^~(8'h9f)) : (wire27 ?
                              (8'h9f) : wire27))) : $signed($unsigned((|wire29))));
  assign wire33 = $signed(wire32);
  assign wire34 = (!(wire32[(2'h2):(1'h0)] > $signed((wire26 ?
                      wire30 : (8'ha3)))));
  assign wire35 = (&(wire34 ? $unsigned((wire27 >> wire27)) : {{wire32}}));
  assign wire36 = (({$signed(wire27)} ? (^~(wire28 <<< wire31)) : wire27) ?
                      (^wire28[(3'h7):(2'h2)]) : wire35[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      if ($signed(wire32))
        begin
          reg37 <= $signed(wire29);
        end
      else
        begin
          reg37 <= {(^(wire30 <= $signed(wire30)))};
          reg38 <= $signed($signed((~^(8'ha2))));
        end
      reg39 <= wire28;
    end
  always
    @(posedge clk) begin
      if ((~^(|$signed(wire27[(4'h9):(3'h4)]))))
        begin
          if ({$signed($unsigned({(8'ha4)}))})
            begin
              reg40 <= (8'ha8);
              reg41 <= wire35;
              reg42 <= ($unsigned({wire31[(2'h3):(1'h1)]}) ?
                  ({(|wire32)} ?
                      (~&(wire29 ?
                          wire32 : wire27)) : (wire26[(3'h6):(2'h3)] * $signed(wire32))) : $signed((-(wire27 * wire30))));
            end
          else
            begin
              reg40 <= ((~^{{wire31}}) ?
                  reg42 : $unsigned(wire30[(4'h9):(2'h3)]));
              reg41 <= ((-{$unsigned(wire26)}) >= (|(+$unsigned(reg37))));
            end
          reg43 <= (8'ha1);
        end
      else
        begin
          reg40 <= (wire26[(3'h6):(3'h6)] ? wire33 : reg40);
        end
      reg44 <= $unsigned(wire29[(2'h3):(2'h2)]);
      reg45 <= (~&{$unsigned({wire26})});
    end
  assign wire46 = (wire35[(2'h2):(1'h0)] ^ ($unsigned(wire35[(1'h1):(1'h0)]) ^~ reg38[(1'h1):(1'h1)]));
endmodule