(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param56 = ((~^(~(8'ha2))) >>> ((((8'ha6) ? (8'ha6) : (8'hac)) ? ((8'h9d) ? (8'hae) : (8'ha9)) : (|(8'ha8))) - (&(&(8'ha9))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h84):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire55;
  wire signed [(4'ha):(1'h0)] wire54;
  wire signed [(4'ha):(1'h0)] wire45;
  wire signed [(4'ha):(1'h0)] wire44;
  wire signed [(3'h4):(1'h0)] wire42;
  wire signed [(4'h8):(1'h0)] wire41;
  wire signed [(3'h7):(1'h0)] wire39;
  wire [(4'hb):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire4;
  reg [(4'ha):(1'h0)] reg53 = (1'h0);
  reg [(4'hb):(1'h0)] reg52 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg51 = (1'h0);
  reg [(2'h3):(1'h0)] reg50 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg49 = (1'h0);
  reg [(2'h3):(1'h0)] reg48 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg46 = (1'h0);
  assign y = {wire55,
                 wire54,
                 wire45,
                 wire44,
                 wire42,
                 wire41,
                 wire39,
                 wire5,
                 wire4,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 (1'h0)};
  assign wire4 = wire3;
  assign wire5 = (|wire2);
  module6 #() modinst40 (wire39, clk, wire3, wire0, wire2, wire5);
  assign wire41 = ((~&wire1) >>> wire5);
  module18 #() modinst43 (wire42, clk, wire39, wire3, wire1, wire41);
  assign wire44 = ($signed((wire39[(1'h1):(1'h1)] < wire0[(4'h9):(2'h3)])) ^~ $signed($signed((wire5 ?
                      wire0 : wire2))));
  assign wire45 = {$unsigned($unsigned((^~(8'h9d))))};
  always
    @(posedge clk) begin
      if ((((+$unsigned((8'ha6))) ^~ wire41[(3'h6):(1'h0)]) - (!$signed((wire41 ?
          wire41 : wire41)))))
        begin
          if (wire4[(2'h3):(2'h3)])
            begin
              reg46 <= ((~|wire0) | wire41);
              reg47 <= $signed((~&wire42[(1'h1):(1'h0)]));
              reg48 <= (!$signed((|wire41[(2'h2):(1'h0)])));
            end
          else
            begin
              reg46 <= wire3[(1'h1):(1'h0)];
            end
        end
      else
        begin
          reg46 <= (wire44 ?
              $signed(($unsigned(reg46) <= wire4[(1'h0):(1'h0)])) : $unsigned(wire2[(2'h3):(2'h2)]));
          reg47 <= (reg47[(1'h0):(1'h0)] ^ $unsigned((!((8'haa) ?
              (8'ha7) : (8'h9c)))));
        end
      reg49 <= ({wire39} & $unsigned(wire0));
    end
  always
    @(posedge clk) begin
      if (wire4[(2'h2):(2'h2)])
        begin
          if ((8'ha0))
            begin
              reg50 <= {$unsigned((((8'hb0) >= wire2) ?
                      $signed((8'h9e)) : ((8'hb0) & wire1)))};
            end
          else
            begin
              reg50 <= $unsigned((!wire41));
              reg51 <= ((~&reg48[(1'h1):(1'h1)]) || $signed(wire42[(1'h1):(1'h1)]));
              reg52 <= wire41[(2'h3):(1'h1)];
            end
          reg53 <= ((8'hb0) ? (8'haa) : $unsigned((^reg51)));
        end
      else
        begin
          if ((wire41 <<< $unsigned($signed({wire44}))))
            begin
              reg50 <= reg49[(4'ha):(4'h9)];
            end
          else
            begin
              reg50 <= ($unsigned($signed(wire41[(3'h7):(1'h0)])) ?
                  $signed((&$signed(wire2))) : {(~&(8'h9d))});
              reg51 <= wire4[(2'h3):(1'h1)];
              reg52 <= ({{$unsigned(reg46)}} ?
                  ($unsigned($signed(wire44)) ?
                      (((8'ha3) != wire3) & {(8'hae)}) : reg52) : wire0[(4'h9):(2'h3)]);
            end
        end
    end
  assign wire54 = wire0;
  assign wire55 = (8'h9e);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire7, wire8, wire9, wire10);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire7;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire signed [(2'h2):(1'h0)] wire9;
  input wire [(3'h6):(1'h0)] wire10;
  wire signed [(3'h7):(1'h0)] wire38;
  wire [(2'h3):(1'h0)] wire11;
  wire [(3'h6):(1'h0)] wire12;
  wire [(4'ha):(1'h0)] wire17;
  wire signed [(2'h2):(1'h0)] wire36;
  reg signed [(3'h7):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg14 = (1'h0);
  reg [(4'hb):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg16 = (1'h0);
  assign y = {wire38,
                 wire11,
                 wire12,
                 wire17,
                 wire36,
                 reg13,
                 reg14,
                 reg15,
                 reg16,
                 (1'h0)};
  assign wire11 = $unsigned(wire8);
  assign wire12 = $unsigned((8'ha7));
  always
    @(posedge clk) begin
      if ($signed($signed((wire7[(1'h0):(1'h0)] + $unsigned((8'hac))))))
        begin
          reg13 <= (wire12[(2'h2):(1'h0)] ^ wire9[(1'h0):(1'h0)]);
          reg14 <= $signed(wire7);
        end
      else
        begin
          if ($signed($signed((&{reg14}))))
            begin
              reg13 <= (8'ha6);
              reg14 <= (&{((reg13 ? reg14 : wire11) ^ (&wire10))});
              reg15 <= wire9[(1'h1):(1'h0)];
            end
          else
            begin
              reg13 <= (~^wire12[(1'h1):(1'h1)]);
              reg14 <= wire11[(2'h2):(1'h1)];
            end
        end
      reg16 <= (wire10 - wire7);
    end
  assign wire17 = reg15[(1'h0):(1'h0)];
  module18 #() modinst37 (wire36, clk, reg13, wire8, reg15, reg14);
  assign wire38 = (^({$unsigned((8'ha9))} ?
                      wire11[(1'h0):(1'h0)] : (reg14[(3'h7):(2'h3)] ?
                          ((8'ha5) ? wire11 : (8'ha7)) : $signed(wire7))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18  (y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire22;
  input wire signed [(4'hb):(1'h0)] wire21;
  input wire signed [(2'h2):(1'h0)] wire20;
  input wire signed [(4'h8):(1'h0)] wire19;
  wire [(2'h3):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire34;
  wire [(4'ha):(1'h0)] wire33;
  wire signed [(3'h4):(1'h0)] wire32;
  wire [(4'h8):(1'h0)] wire25;
  wire [(3'h7):(1'h0)] wire24;
  wire [(3'h6):(1'h0)] wire23;
  reg signed [(4'h8):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg30 = (1'h0);
  reg [(2'h3):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg28 = (1'h0);
  reg [(4'h9):(1'h0)] reg27 = (1'h0);
  reg [(3'h5):(1'h0)] reg26 = (1'h0);
  assign y = {wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire25,
                 wire24,
                 wire23,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire23 = wire21;
  assign wire24 = (wire21 && wire21);
  assign wire25 = ($unsigned($unsigned((&wire19))) != $unsigned((!$signed((8'h9e)))));
  always
    @(posedge clk) begin
      reg26 <= {$unsigned($unsigned(wire19[(1'h1):(1'h0)]))};
      if (($signed(wire22) || (8'hab)))
        begin
          reg27 <= (wire19[(2'h2):(2'h2)] ?
              wire21[(1'h1):(1'h1)] : (|(^(wire25 ? wire25 : wire21))));
          if (reg27[(1'h0):(1'h0)])
            begin
              reg28 <= (+$unsigned($signed(reg27)));
              reg29 <= (~&$signed(wire19[(4'h8):(3'h6)]));
              reg30 <= (+($signed((~wire22)) ?
                  wire24 : (reg28 <= $unsigned(reg27))));
            end
          else
            begin
              reg28 <= wire21;
              reg29 <= reg28[(3'h5):(2'h3)];
            end
        end
      else
        begin
          reg27 <= (reg29[(2'h3):(1'h0)] >= (wire24 & {(wire23 ?
                  reg26 : wire23)}));
        end
      reg31 <= ({((wire21 <= (8'had)) ? {reg28} : $signed(reg26))} ?
          ((reg29 ? {(8'ha9)} : (&reg28)) ?
              ((~(8'ha8)) ?
                  {(8'haf)} : $unsigned(reg27)) : (8'hae)) : ($unsigned($signed(wire20)) ?
              $signed((~wire22)) : wire19[(3'h6):(2'h3)]));
    end
  assign wire32 = (({(8'haf)} + ((+wire21) ?
                      $signed(wire20) : wire24[(1'h1):(1'h1)])) ^~ $signed((wire20 ?
                      reg28 : wire22)));
  assign wire33 = $signed(reg27[(3'h5):(2'h2)]);
  assign wire34 = wire20;
  assign wire35 = $unsigned(reg30);
endmodule