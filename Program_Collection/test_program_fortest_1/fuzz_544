(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param52 = ((~(((8'ha9) ? (8'ha0) : (8'ha7)) ? (~(8'hae)) : ((8'haf) - (8'ha0)))) ? (&(((8'h9d) ? (8'haf) : (8'hb0)) <= {(8'h9e)})) : (((!(8'had)) <= (~&(8'had))) >>> ({(8'hab)} ? (^~(8'h9e)) : ((8'ha4) > (8'hac))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire51;
  wire signed [(4'h8):(1'h0)] wire49;
  wire [(4'ha):(1'h0)] wire10;
  wire [(3'h4):(1'h0)] wire9;
  wire signed [(4'h8):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire6;
  wire [(2'h2):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire4;
  reg signed [(4'h8):(1'h0)] reg8 = (1'h0);
  assign y = {wire51,
                 wire49,
                 wire10,
                 wire9,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg8,
                 (1'h0)};
  assign wire4 = $unsigned(wire0);
  assign wire5 = wire3[(1'h1):(1'h1)];
  assign wire6 = (~&wire0);
  assign wire7 = (|(8'ha0));
  always
    @(posedge clk) begin
      reg8 <= (+wire6[(3'h5):(1'h0)]);
    end
  assign wire9 = ($unsigned($signed((^(8'ha1)))) ~^ (~&wire3));
  assign wire10 = wire3[(2'h2):(1'h1)];
  module11 #() modinst50 (.wire12(wire10), .y(wire49), .clk(clk), .wire15(wire2), .wire14(wire9), .wire13(wire7));
  assign wire51 = wire1[(4'h9):(3'h7)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire15;
  input wire [(2'h3):(1'h0)] wire14;
  input wire signed [(3'h5):(1'h0)] wire13;
  input wire signed [(4'ha):(1'h0)] wire12;
  wire signed [(2'h2):(1'h0)] wire48;
  wire signed [(4'hb):(1'h0)] wire46;
  wire signed [(3'h7):(1'h0)] wire35;
  wire [(3'h5):(1'h0)] wire34;
  wire signed [(4'hb):(1'h0)] wire33;
  wire signed [(3'h5):(1'h0)] wire32;
  wire signed [(3'h6):(1'h0)] wire30;
  wire [(3'h7):(1'h0)] wire19;
  wire [(4'h8):(1'h0)] wire18;
  wire signed [(4'hb):(1'h0)] wire17;
  wire signed [(4'hb):(1'h0)] wire16;
  assign y = {wire48,
                 wire46,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire30,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 (1'h0)};
  assign wire16 = ($unsigned({{wire12}}) ?
                      (wire15[(3'h4):(2'h2)] <<< $signed((wire15 << wire12))) : (~(wire15 ?
                          (wire14 <= wire14) : {wire15})));
  assign wire17 = wire13;
  assign wire18 = wire13;
  assign wire19 = $signed(wire16[(3'h6):(1'h1)]);
  module20 #() modinst31 (.clk(clk), .wire22(wire16), .wire23(wire14), .y(wire30), .wire24(wire13), .wire21(wire12));
  assign wire32 = $unsigned($signed($signed((wire19 <<< (8'h9f)))));
  assign wire33 = ($unsigned((((8'ha3) ? wire12 : wire16) ?
                      $unsigned(wire12) : wire14)) & ($signed($signed(wire30)) ?
                      wire16[(3'h7):(3'h6)] : $unsigned($unsigned((8'haf)))));
  assign wire34 = wire33[(3'h4):(1'h1)];
  assign wire35 = $unsigned(((wire18[(2'h2):(2'h2)] ?
                      (wire18 ?
                          wire32 : wire34) : $unsigned(wire33)) - ({wire13} << wire32[(1'h1):(1'h1)])));
  module36 #() modinst47 (wire46, clk, wire16, wire35, wire17, wire33);
  assign wire48 = (8'ha1);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module36  (y, clk, wire40, wire39, wire38, wire37);
  output wire [(32'h1c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire40;
  input wire signed [(3'h7):(1'h0)] wire39;
  input wire signed [(4'hb):(1'h0)] wire38;
  input wire [(4'hb):(1'h0)] wire37;
  wire signed [(2'h2):(1'h0)] wire45;
  wire signed [(4'h8):(1'h0)] wire44;
  wire [(3'h5):(1'h0)] wire43;
  wire signed [(3'h7):(1'h0)] wire42;
  wire signed [(3'h5):(1'h0)] wire41;
  assign y = {wire45, wire44, wire43, wire42, wire41, (1'h0)};
  assign wire41 = $unsigned(($signed($signed((8'hb0))) + wire40));
  assign wire42 = ($unsigned(((~&wire38) + {wire40})) ?
                      (wire37[(4'h8):(1'h1)] ^ (wire39 < wire40[(2'h3):(1'h0)])) : wire40[(1'h0):(1'h0)]);
  assign wire43 = (($signed(wire42[(3'h4):(2'h2)]) >= ((~|wire42) ?
                          wire39[(3'h4):(2'h2)] : wire38)) ?
                      wire40[(2'h2):(1'h0)] : $signed((~wire40[(4'h8):(2'h3)])));
  assign wire44 = $signed(($unsigned($unsigned(wire42)) * wire38));
  assign wire45 = $unsigned(wire40);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param29 = {((((8'ha5) ? (8'ha6) : (8'ha7)) ? ((8'ha4) ? (8'had) : (8'ha4)) : (!(8'hae))) | ((&(8'ha3)) ? (+(8'ha0)) : ((8'had) >> (8'ha4))))})
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h19):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire24;
  input wire [(2'h3):(1'h0)] wire23;
  input wire signed [(4'ha):(1'h0)] wire22;
  input wire signed [(4'ha):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire28;
  wire [(4'hb):(1'h0)] wire27;
  wire [(2'h3):(1'h0)] wire26;
  wire [(3'h7):(1'h0)] wire25;
  assign y = {wire28, wire27, wire26, wire25, (1'h0)};
  assign wire25 = wire24;
  assign wire26 = wire22;
  assign wire27 = (-(!wire26[(2'h3):(1'h1)]));
  assign wire28 = (($signed((wire25 ? wire21 : wire26)) ?
                          wire24[(3'h4):(1'h0)] : {(8'ha2)}) ?
                      (wire23[(1'h0):(1'h0)] > ((wire25 >= wire24) ?
                          {wire24} : (-wire27))) : wire27);
endmodule