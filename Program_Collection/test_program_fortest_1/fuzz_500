(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param25 = (~&((((8'ha8) != (8'ha8)) < ((8'h9d) ? (8'hae) : (8'hb0))) ^ (8'ha9))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire24;
  wire [(3'h7):(1'h0)] wire23;
  wire [(2'h2):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire4;
  assign y = {wire24, wire23, wire21, wire4, (1'h0)};
  assign wire4 = $unsigned(wire1[(2'h3):(1'h1)]);
  module5 #() modinst22 (wire21, clk, wire1, wire4, wire2, wire0);
  assign wire23 = $signed(($signed(wire4[(1'h0):(1'h0)]) ?
                      (8'ha0) : ({wire3} ?
                          (wire3 ^~ wire2) : $unsigned(wire21))));
  assign wire24 = {$signed($unsigned((wire2 ? wire0 : wire21)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire9;
  input wire [(4'ha):(1'h0)] wire8;
  input wire [(3'h5):(1'h0)] wire7;
  input wire [(2'h3):(1'h0)] wire6;
  wire [(3'h4):(1'h0)] wire20;
  wire [(4'hb):(1'h0)] wire19;
  wire [(3'h4):(1'h0)] wire18;
  wire signed [(4'hb):(1'h0)] wire12;
  wire [(2'h3):(1'h0)] wire11;
  wire signed [(4'ha):(1'h0)] wire10;
  reg signed [(4'h9):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg16 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg15 = (1'h0);
  reg [(4'ha):(1'h0)] reg14 = (1'h0);
  reg [(4'h8):(1'h0)] reg13 = (1'h0);
  assign y = {wire20,
                 wire19,
                 wire18,
                 wire12,
                 wire11,
                 wire10,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 (1'h0)};
  assign wire10 = $signed({$unsigned((8'haf))});
  assign wire11 = ((($signed((8'h9e)) ~^ (wire10 & (8'ha1))) ?
                          {wire6[(2'h3):(1'h0)]} : (~^$unsigned(wire9))) ?
                      (wire9[(2'h2):(1'h1)] | wire9[(3'h5):(1'h0)]) : $unsigned((~&$unsigned((8'ha1)))));
  assign wire12 = wire10[(4'h9):(3'h6)];
  always
    @(posedge clk) begin
      reg13 <= {wire11};
      if ($unsigned(wire9))
        begin
          reg14 <= $unsigned(wire9[(3'h6):(3'h5)]);
          reg15 <= wire8[(1'h0):(1'h0)];
          reg16 <= ({(((8'h9f) ^ (8'ha0)) >>> $unsigned(wire11))} != reg13[(3'h7):(1'h1)]);
        end
      else
        begin
          reg14 <= $unsigned({$unsigned(reg15[(2'h2):(1'h0)])});
        end
      reg17 <= (-(!reg14[(4'ha):(3'h5)]));
    end
  assign wire18 = reg17[(4'h9):(3'h7)];
  assign wire19 = {(($signed(wire6) || reg14[(4'h9):(2'h2)]) ?
                          (reg16[(2'h3):(2'h3)] ^ (reg15 >>> wire6)) : wire10[(4'ha):(4'h9)])};
  assign wire20 = (&$signed(reg15));
endmodule