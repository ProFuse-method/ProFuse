(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param78 = {((((8'hac) ? (8'ha8) : (8'hae)) ? (^~(8'had)) : {(8'haf)}) << (((8'hac) ? (8'ha7) : (8'h9e)) ? ((8'ha1) ^~ (8'ha9)) : ((8'hac) ? (8'h9c) : (8'ha3))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h54):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire77;
  wire [(3'h7):(1'h0)] wire75;
  wire [(3'h4):(1'h0)] wire73;
  wire signed [(4'hb):(1'h0)] wire72;
  wire signed [(2'h2):(1'h0)] wire71;
  wire [(3'h7):(1'h0)] wire70;
  wire signed [(4'h8):(1'h0)] wire69;
  wire [(3'h5):(1'h0)] wire67;
  wire [(4'h9):(1'h0)] wire24;
  wire [(4'hb):(1'h0)] wire22;
  wire [(4'hb):(1'h0)] wire4;
  assign y = {wire77,
                 wire75,
                 wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 wire67,
                 wire24,
                 wire22,
                 wire4,
                 (1'h0)};
  assign wire4 = wire2;
  module5 #() modinst23 (.clk(clk), .wire8(wire3), .wire6(wire4), .wire9(wire0), .y(wire22), .wire7(wire1));
  assign wire24 = wire4[(3'h6):(1'h1)];
  module25 #() modinst68 (.wire29(wire2), .clk(clk), .y(wire67), .wire28(wire4), .wire27(wire24), .wire26(wire3));
  assign wire69 = ({$signed((wire24 != (8'ha9)))} ?
                      $signed((wire4 >= $unsigned(wire4))) : wire4[(4'ha):(1'h0)]);
  assign wire70 = $signed(wire0[(3'h4):(3'h4)]);
  assign wire71 = (8'ha6);
  assign wire72 = (-$unsigned({wire0}));
  module50 #() modinst74 (wire73, clk, wire0, wire3, wire1, wire72);
  module25 #() modinst76 (wire75, clk, wire70, wire0, wire24, wire72);
  assign wire77 = $signed(wire72[(3'h5):(2'h3)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25  (y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire29;
  input wire [(4'hb):(1'h0)] wire28;
  input wire [(4'h9):(1'h0)] wire27;
  input wire signed [(4'h8):(1'h0)] wire26;
  wire signed [(4'h8):(1'h0)] wire66;
  wire signed [(2'h2):(1'h0)] wire64;
  wire signed [(3'h7):(1'h0)] wire63;
  wire signed [(4'hb):(1'h0)] wire62;
  wire [(4'hb):(1'h0)] wire60;
  wire signed [(4'h9):(1'h0)] wire49;
  wire signed [(2'h3):(1'h0)] wire47;
  wire [(3'h5):(1'h0)] wire34;
  wire [(4'hb):(1'h0)] wire33;
  wire [(4'hb):(1'h0)] wire32;
  wire signed [(4'h9):(1'h0)] wire31;
  wire [(2'h3):(1'h0)] wire30;
  assign y = {wire66,
                 wire64,
                 wire63,
                 wire62,
                 wire60,
                 wire49,
                 wire47,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 (1'h0)};
  assign wire30 = $signed((wire27 ?
                      $signed($unsigned(wire27)) : $unsigned(wire28)));
  assign wire31 = wire30[(1'h1):(1'h1)];
  assign wire32 = $unsigned(({(wire27 ?
                          wire31 : wire30)} * wire31[(2'h2):(1'h1)]));
  assign wire33 = wire30[(1'h1):(1'h0)];
  assign wire34 = (8'ha7);
  module35 #() modinst48 (.wire36(wire27), .wire38(wire29), .wire39(wire31), .y(wire47), .wire37(wire34), .clk(clk));
  assign wire49 = $signed((wire33[(2'h3):(1'h1)] <<< (~^(&wire26))));
  module50 #() modinst61 (wire60, clk, wire28, wire27, wire26, wire33);
  assign wire62 = (wire47[(2'h2):(1'h1)] ?
                      ((~^$unsigned(wire29)) & ((wire26 * wire29) != $signed(wire27))) : $signed((wire34[(1'h0):(1'h0)] || $signed(wire34))));
  assign wire63 = $unsigned(({$unsigned(wire62)} ?
                      {wire27[(2'h2):(2'h2)]} : $signed((wire60 + wire49))));
  module35 #() modinst65 (.wire39(wire60), .wire38(wire27), .clk(clk), .wire37(wire33), .wire36(wire31), .y(wire64));
  assign wire66 = (^~wire29);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param21 = (((+(~(8'h9c))) ? {{(8'ha9)}} : ((-(8'had)) * ((8'had) <= (8'h9f)))) >> ((^~((8'ha5) ? (8'ha6) : (8'h9e))) ? {((8'hae) ? (8'haa) : (8'h9d))} : {((8'ha6) ? (8'hab) : (8'ha7))})))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire9;
  input wire signed [(2'h2):(1'h0)] wire8;
  input wire signed [(3'h5):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire20;
  wire [(4'hb):(1'h0)] wire19;
  wire signed [(2'h3):(1'h0)] wire18;
  wire signed [(3'h6):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire16;
  wire signed [(3'h7):(1'h0)] wire15;
  wire signed [(3'h7):(1'h0)] wire14;
  wire [(4'ha):(1'h0)] wire13;
  wire [(4'h9):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire11;
  wire signed [(3'h7):(1'h0)] wire10;
  assign y = {wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 (1'h0)};
  assign wire10 = {wire9};
  assign wire11 = $unsigned($signed(wire7));
  assign wire12 = (~|wire6[(3'h7):(3'h6)]);
  assign wire13 = $unsigned($unsigned($signed((wire7 ? (8'ha8) : wire10))));
  assign wire14 = $unsigned({$signed((wire8 ? wire9 : wire11))});
  assign wire15 = ((wire14[(3'h6):(1'h0)] ?
                          ((wire12 << wire8) ^~ wire11) : (wire12[(2'h3):(1'h0)] ?
                              (wire8 ? wire14 : wire10) : $signed((8'h9d)))) ?
                      wire12 : wire9);
  assign wire16 = (+wire15[(3'h6):(2'h2)]);
  assign wire17 = wire11[(1'h0):(1'h0)];
  assign wire18 = wire7[(3'h4):(2'h2)];
  assign wire19 = wire15[(3'h7):(1'h0)];
  assign wire20 = (!$unsigned(wire7[(2'h3):(2'h3)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module50
#(parameter param59 = ((^((+(8'h9f)) ? (~(8'ha6)) : ((8'had) ? (8'h9d) : (8'ha4)))) * ((+{(8'h9c)}) ? (8'hac) : (((8'ha2) * (8'ha2)) * ((8'h9e) * (8'had))))))
(y, clk, wire54, wire53, wire52, wire51);
  output wire [(32'h1c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire54;
  input wire [(2'h3):(1'h0)] wire53;
  input wire signed [(4'h8):(1'h0)] wire52;
  input wire [(4'hb):(1'h0)] wire51;
  wire [(3'h6):(1'h0)] wire57;
  wire signed [(3'h6):(1'h0)] wire56;
  wire signed [(3'h4):(1'h0)] wire55;
  reg signed [(4'hb):(1'h0)] reg58 = (1'h0);
  assign y = {wire57, wire56, wire55, reg58, (1'h0)};
  assign wire55 = (-((^~(|wire53)) >= {$unsigned(wire54)}));
  assign wire56 = {$unsigned(wire54[(2'h2):(2'h2)])};
  assign wire57 = {((wire56[(2'h3):(1'h0)] <<< (^~(8'ha0))) ? wire54 : wire56)};
  always
    @(posedge clk) begin
      reg58 <= $signed($signed(($unsigned(wire54) | wire54)));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module35
#(parameter param46 = ((!(~|(!(8'ha1)))) > {(-((8'hae) ? (8'ha9) : (8'h9e)))}))
(y, clk, wire39, wire38, wire37, wire36);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire39;
  input wire signed [(3'h4):(1'h0)] wire38;
  input wire signed [(2'h3):(1'h0)] wire37;
  input wire signed [(3'h7):(1'h0)] wire36;
  wire signed [(4'h8):(1'h0)] wire45;
  wire [(3'h6):(1'h0)] wire44;
  wire signed [(4'h8):(1'h0)] wire43;
  wire [(4'hb):(1'h0)] wire42;
  wire [(3'h6):(1'h0)] wire41;
  wire [(3'h5):(1'h0)] wire40;
  assign y = {wire45, wire44, wire43, wire42, wire41, wire40, (1'h0)};
  assign wire40 = (wire36[(3'h7):(2'h2)] ?
                      ($signed((wire39 >= wire36)) ?
                          (wire39[(2'h2):(2'h2)] ?
                              (8'ha1) : $signed(wire37)) : (wire36[(1'h0):(1'h0)] == wire36)) : wire36[(2'h2):(1'h1)]);
  assign wire41 = (8'ha2);
  assign wire42 = ($unsigned((8'hae)) ?
                      wire41[(2'h3):(1'h0)] : $unsigned($unsigned($unsigned(wire41))));
  assign wire43 = $unsigned((wire41 ?
                      ($unsigned(wire36) | wire36[(3'h5):(3'h5)]) : $unsigned(wire37)));
  assign wire44 = $signed($signed($signed($signed(wire41))));
  assign wire45 = ($signed(wire40) & (((wire39 ?
                          wire39 : (8'ha2)) || wire36[(2'h3):(1'h1)]) ?
                      ($unsigned((8'ha5)) ?
                          (~|wire36) : $signed(wire41)) : wire39));
endmodule