(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param81 = (~&(^((~&(8'hab)) & ((8'haa) ? (8'ha2) : (8'ha2))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire80;
  wire signed [(3'h7):(1'h0)] wire79;
  wire signed [(2'h2):(1'h0)] wire78;
  wire [(3'h5):(1'h0)] wire77;
  wire signed [(2'h3):(1'h0)] wire70;
  wire [(4'h8):(1'h0)] wire68;
  wire [(4'h9):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire5;
  reg [(2'h2):(1'h0)] reg76 = (1'h0);
  reg [(4'hb):(1'h0)] reg75 = (1'h0);
  reg [(3'h4):(1'h0)] reg74 = (1'h0);
  reg [(3'h4):(1'h0)] reg73 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg72 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg4 = (1'h0);
  assign y = {wire80,
                 wire79,
                 wire78,
                 wire77,
                 wire70,
                 wire68,
                 wire6,
                 wire5,
                 reg76,
                 reg75,
                 reg74,
                 reg73,
                 reg72,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= $unsigned($signed($unsigned((wire0 == wire3))));
    end
  assign wire5 = wire2[(3'h6):(3'h6)];
  assign wire6 = wire1;
  module7 #() modinst69 (.wire10(wire1), .wire8(wire2), .clk(clk), .wire11(wire5), .y(wire68), .wire9(wire6));
  module40 #() modinst71 (.y(wire70), .wire43(wire68), .clk(clk), .wire44(wire2), .wire41(wire0), .wire42(wire3));
  always
    @(posedge clk) begin
      reg72 <= (+(reg4 ^ ((&(8'ha7)) ? (8'ha7) : $signed(reg4))));
      if (wire3[(1'h1):(1'h0)])
        begin
          reg73 <= (wire3 ? wire70 : $unsigned(($signed(wire5) + wire70)));
          reg74 <= ({((~&wire6) * (~&wire68))} ?
              (~(~&wire3[(1'h0):(1'h0)])) : $unsigned($unsigned($unsigned(wire70))));
          if (wire5)
            begin
              reg75 <= reg4[(1'h1):(1'h0)];
            end
          else
            begin
              reg75 <= reg72[(1'h0):(1'h0)];
              reg76 <= ($unsigned((wire68[(3'h7):(2'h2)] ~^ reg74)) ?
                  reg72[(1'h0):(1'h0)] : (-wire6[(3'h6):(3'h6)]));
            end
        end
      else
        begin
          if (wire3)
            begin
              reg73 <= reg4[(2'h2):(2'h2)];
            end
          else
            begin
              reg73 <= $unsigned({$unsigned(wire5[(3'h5):(1'h1)])});
            end
        end
    end
  assign wire77 = $unsigned({{(reg4 ? (8'hab) : (8'ha5))}});
  assign wire78 = reg75[(1'h1):(1'h1)];
  assign wire79 = $signed(reg4[(3'h4):(3'h4)]);
  assign wire80 = ($signed((-$signed(wire79))) ?
                      (reg73[(2'h3):(2'h3)] ?
                          ((!wire2) | reg73) : ((wire2 && (8'hab)) <= $signed((8'hab)))) : $unsigned(({reg4} ~^ reg76)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param67 = (((((8'h9e) * (8'ha9)) == ((8'ha0) ? (8'haa) : (8'hac))) == (((8'ha7) + (8'haf)) ? ((8'ha6) ^ (8'ha2)) : ((8'ha7) && (8'ha1)))) ? (-(~(-(8'ha6)))) : (8'ha4)))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h89):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire11;
  input wire signed [(4'h9):(1'h0)] wire10;
  input wire [(4'h9):(1'h0)] wire9;
  input wire [(4'h8):(1'h0)] wire8;
  wire signed [(4'h9):(1'h0)] wire66;
  wire signed [(4'ha):(1'h0)] wire65;
  wire signed [(3'h4):(1'h0)] wire61;
  wire [(4'h8):(1'h0)] wire57;
  wire [(2'h3):(1'h0)] wire55;
  wire [(4'h8):(1'h0)] wire54;
  wire [(3'h6):(1'h0)] wire52;
  wire [(4'h9):(1'h0)] wire38;
  reg [(2'h3):(1'h0)] reg64 = (1'h0);
  reg [(4'h9):(1'h0)] reg63 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg60 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg59 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg16 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg14 = (1'h0);
  reg [(4'h9):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg12 = (1'h0);
  assign y = {wire66,
                 wire65,
                 wire61,
                 wire57,
                 wire55,
                 wire54,
                 wire52,
                 wire38,
                 reg64,
                 reg63,
                 reg60,
                 reg59,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ((wire10 * (8'h9f)))
        begin
          reg12 <= wire9[(2'h2):(2'h2)];
          reg13 <= $unsigned($unsigned($unsigned((~&reg12))));
          reg14 <= wire8[(2'h2):(1'h1)];
        end
      else
        begin
          reg12 <= reg14;
        end
      reg15 <= $unsigned(((8'ha6) * $unsigned((8'ha2))));
      reg16 <= (~&$signed((-(reg15 & reg13))));
    end
  module17 #() modinst39 (wire38, clk, reg14, wire11, reg15, wire9);
  module40 #() modinst53 (wire52, clk, reg14, wire8, wire9, reg12);
  assign wire54 = wire8[(1'h0):(1'h0)];
  module17 #() modinst56 (wire55, clk, wire8, reg14, reg16, wire52);
  module40 #() modinst58 (.wire43(wire9), .wire44(wire10), .clk(clk), .wire41(wire11), .y(wire57), .wire42(wire38));
  always
    @(posedge clk) begin
      reg59 <= $unsigned($unsigned($unsigned({reg12})));
      reg60 <= ($signed($unsigned((8'ha9))) ~^ wire38[(3'h7):(2'h2)]);
    end
  module40 #() modinst62 (.clk(clk), .wire43(wire54), .wire41(reg15), .y(wire61), .wire42(reg13), .wire44(wire38));
  always
    @(posedge clk) begin
      reg63 <= (wire54 ?
          ((+(reg60 * reg13)) ?
              ((reg15 >= (8'ha8)) > (reg59 <= wire54)) : (wire61 && wire54)) : wire57[(1'h0):(1'h0)]);
      reg64 <= reg13[(3'h5):(1'h0)];
    end
  assign wire65 = (^(~wire38));
  assign wire66 = $unsigned($unsigned(wire54[(3'h4):(2'h3)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module40
#(parameter param51 = {((!((8'ha0) ? (8'h9d) : (8'ha0))) ^~ ({(8'had)} ? ((8'ha7) ? (8'ha5) : (8'ha4)) : {(8'ha5)}))})
(y, clk, wire44, wire43, wire42, wire41);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire44;
  input wire [(4'h8):(1'h0)] wire43;
  input wire [(4'h9):(1'h0)] wire42;
  input wire [(3'h7):(1'h0)] wire41;
  wire signed [(3'h6):(1'h0)] wire50;
  wire [(4'ha):(1'h0)] wire49;
  wire [(2'h2):(1'h0)] wire48;
  reg signed [(4'h8):(1'h0)] reg47 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg46 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg45 = (1'h0);
  assign y = {wire50, wire49, wire48, reg47, reg46, reg45, (1'h0)};
  always
    @(posedge clk) begin
      reg45 <= $signed($unsigned($unsigned(wire42[(2'h2):(1'h1)])));
      reg46 <= (^($signed($signed(reg45)) + $signed((~^reg45))));
    end
  always
    @(posedge clk) begin
      reg47 <= (^~($signed(reg46[(3'h7):(3'h5)]) << $unsigned((wire41 <<< reg46))));
    end
  assign wire48 = (8'ha0);
  assign wire49 = $signed(wire42[(4'h9):(2'h2)]);
  assign wire50 = $signed(((wire42[(1'h0):(1'h0)] * {wire41}) ?
                      ((-wire49) ?
                          (reg47 ?
                              wire42 : wire41) : wire49) : wire49[(4'h8):(2'h2)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17
#(parameter param37 = (8'h9f))
(y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire21;
  input wire [(4'h8):(1'h0)] wire20;
  input wire signed [(4'hb):(1'h0)] wire19;
  input wire signed [(2'h2):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire36;
  wire signed [(3'h4):(1'h0)] wire35;
  wire signed [(4'ha):(1'h0)] wire34;
  wire signed [(3'h7):(1'h0)] wire33;
  wire [(3'h7):(1'h0)] wire31;
  wire signed [(2'h2):(1'h0)] wire30;
  wire [(3'h6):(1'h0)] wire29;
  wire [(2'h3):(1'h0)] wire28;
  wire signed [(3'h4):(1'h0)] wire24;
  wire [(4'h8):(1'h0)] wire23;
  wire [(3'h5):(1'h0)] wire22;
  reg [(3'h6):(1'h0)] reg32 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg26 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg25 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire24,
                 wire23,
                 wire22,
                 reg32,
                 reg27,
                 reg26,
                 reg25,
                 (1'h0)};
  assign wire22 = ($signed(wire18) ?
                      wire20[(2'h3):(1'h0)] : (~^($unsigned(wire19) ^ (~&(8'hac)))));
  assign wire23 = wire21[(1'h1):(1'h0)];
  assign wire24 = wire19[(4'h9):(4'h9)];
  always
    @(posedge clk) begin
      reg25 <= ((+wire24[(1'h0):(1'h0)]) ?
          wire20 : (!$signed($signed(wire20))));
      reg26 <= (|wire18[(1'h0):(1'h0)]);
      reg27 <= $unsigned(reg26[(3'h4):(1'h1)]);
    end
  assign wire28 = wire24;
  assign wire29 = $signed($signed(wire20[(1'h1):(1'h0)]));
  assign wire30 = $signed({(-(wire22 ? wire23 : reg25))});
  assign wire31 = wire18[(1'h1):(1'h0)];
  always
    @(posedge clk) begin
      reg32 <= ($signed($unsigned((|(8'hac)))) >> $unsigned($signed($unsigned(reg26))));
    end
  assign wire33 = $signed($unsigned({$unsigned(wire24)}));
  assign wire34 = ((~&$signed((~&wire33))) != $signed(((wire30 << (8'haf)) ?
                      (reg25 ~^ reg25) : $unsigned(wire22))));
  assign wire35 = {(8'haa)};
  assign wire36 = (~$signed($unsigned(wire21[(1'h0):(1'h0)])));
endmodule