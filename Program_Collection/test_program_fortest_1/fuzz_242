(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param76 = {(~(8'hb0))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h63):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire75;
  wire signed [(3'h4):(1'h0)] wire68;
  wire signed [(3'h6):(1'h0)] wire67;
  wire signed [(2'h3):(1'h0)] wire66;
  wire signed [(2'h3):(1'h0)] wire65;
  wire signed [(4'ha):(1'h0)] wire63;
  wire signed [(3'h5):(1'h0)] wire62;
  wire signed [(3'h6):(1'h0)] wire61;
  wire signed [(2'h3):(1'h0)] wire59;
  wire [(4'h9):(1'h0)] wire58;
  wire [(4'h9):(1'h0)] wire56;
  reg [(3'h7):(1'h0)] reg74 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg73 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg72 = (1'h0);
  reg [(2'h2):(1'h0)] reg71 = (1'h0);
  reg [(2'h2):(1'h0)] reg70 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg69 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg64 = (1'h0);
  assign y = {wire75,
                 wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire63,
                 wire62,
                 wire61,
                 wire59,
                 wire58,
                 wire56,
                 reg74,
                 reg73,
                 reg72,
                 reg71,
                 reg70,
                 reg69,
                 reg64,
                 (1'h0)};
  module4 #() modinst57 (.wire5(wire2), .wire7(wire3), .wire6(wire1), .wire8(wire0), .y(wire56), .clk(clk));
  assign wire58 = (+wire3);
  module13 #() modinst60 (wire59, clk, wire3, wire1, wire58, wire0);
  assign wire61 = (($unsigned((8'hac)) ?
                          {((8'h9c) ? wire3 : wire56)} : ($signed(wire0) ?
                              $unsigned((8'ha8)) : (wire59 > (8'h9e)))) ?
                      wire59[(1'h1):(1'h1)] : wire2[(4'h9):(4'h8)]);
  assign wire62 = (wire1 & (wire0 ?
                      wire2 : ((wire58 || wire61) && (wire56 ?
                          wire58 : wire1))));
  assign wire63 = ((wire58 ?
                          ($signed(wire56) ?
                              {wire1} : $unsigned(wire0)) : wire62[(1'h1):(1'h1)]) ?
                      (~|(wire0[(4'ha):(3'h5)] || $signed(wire58))) : $unsigned((|$signed(wire61))));
  always
    @(posedge clk) begin
      reg64 <= {{wire63[(4'ha):(3'h6)]}};
    end
  assign wire65 = (~&$signed(($signed(wire2) ?
                      (wire61 ? wire58 : (8'h9e)) : (!wire1))));
  assign wire66 = (&$signed($signed($unsigned(wire63))));
  assign wire67 = (-{($unsigned(wire1) || $signed(wire65))});
  assign wire68 = ({(~|reg64[(1'h1):(1'h1)])} << (wire2[(3'h7):(2'h2)] ?
                      (wire1[(2'h2):(2'h2)] ?
                          (~&(8'haa)) : wire56[(3'h5):(2'h3)]) : (wire65[(1'h0):(1'h0)] >>> reg64)));
  always
    @(posedge clk) begin
      reg69 <= $signed({wire61[(2'h3):(2'h3)]});
      if (wire66)
        begin
          reg70 <= wire62;
          if ((+(wire62[(2'h2):(1'h0)] < (!$signed(reg64)))))
            begin
              reg71 <= {$unsigned(wire63[(4'h9):(1'h0)])};
              reg72 <= (($unsigned((+wire56)) ?
                      ($unsigned(reg64) ?
                          (wire2 ?
                              (8'h9e) : reg71) : wire3[(1'h0):(1'h0)]) : wire65[(2'h2):(1'h0)]) ?
                  wire3[(4'h9):(4'h9)] : (((wire66 ?
                          wire65 : wire67) && (wire65 ? wire62 : wire62)) ?
                      wire1[(3'h4):(2'h3)] : $unsigned(((8'h9d) ?
                          wire67 : wire0))));
              reg73 <= wire66;
            end
          else
            begin
              reg71 <= (wire66[(1'h0):(1'h0)] <<< {$unsigned($signed(wire65))});
              reg72 <= (({wire0[(1'h1):(1'h0)]} ?
                      $signed((-(8'ha1))) : {(~^(8'h9d))}) ?
                  wire62[(1'h1):(1'h0)] : (^reg69[(2'h3):(1'h0)]));
              reg73 <= {{$unsigned(wire0[(4'hb):(3'h7)])}};
            end
        end
      else
        begin
          reg70 <= $signed($unsigned($signed($unsigned(wire1))));
          reg71 <= {$signed(wire2[(3'h7):(1'h1)])};
        end
      reg74 <= $unsigned($signed(($unsigned(wire67) >>> ((8'ha4) ?
          wire1 : wire58))));
    end
  assign wire75 = wire66[(2'h2):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param55 = (~&{(((8'ha9) ? (8'h9d) : (8'h9c)) >= ((8'ha3) & (8'haf)))}))
(y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire5;
  input wire [(4'hb):(1'h0)] wire6;
  input wire signed [(4'hb):(1'h0)] wire7;
  input wire [(3'h6):(1'h0)] wire8;
  wire [(4'hb):(1'h0)] wire54;
  wire signed [(2'h3):(1'h0)] wire52;
  wire [(3'h6):(1'h0)] wire31;
  wire [(3'h7):(1'h0)] wire30;
  wire [(2'h3):(1'h0)] wire29;
  wire signed [(4'h8):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire27;
  reg [(4'h8):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg11 = (1'h0);
  assign y = {wire54,
                 wire52,
                 wire31,
                 wire30,
                 wire29,
                 wire12,
                 wire27,
                 reg9,
                 reg10,
                 reg11,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg9 <= {$signed({((8'haa) ? (8'ha4) : (8'ha4))})};
      reg10 <= (!$unsigned(reg9[(3'h6):(2'h3)]));
      reg11 <= ((8'ha2) ? $unsigned((^~((8'hab) >>> wire7))) : wire7);
    end
  assign wire12 = (~wire5);
  module13 #() modinst28 (wire27, clk, wire12, wire8, reg11, wire5);
  assign wire29 = (reg11 ?
                      $signed($unsigned($unsigned(wire5))) : ($unsigned($unsigned(wire6)) ?
                          wire5 : $signed($unsigned((8'ha0)))));
  assign wire30 = {((+reg11) | $signed({wire29}))};
  assign wire31 = $signed((wire30 ?
                      wire7[(3'h4):(1'h0)] : $unsigned((wire12 > reg11))));
  module32 #() modinst53 (wire52, clk, wire27, wire29, wire7, wire5);
  assign wire54 = (^$unsigned($signed((wire52 >= reg11))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module32
#(parameter param51 = ((8'ha4) ? ((((8'hae) | (8'ha6)) ? ((8'hb0) && (8'had)) : ((8'hab) >= (8'haf))) >= (((8'ha9) ? (8'ha2) : (8'hae)) << ((8'ha4) && (8'ha5)))) : (((8'ha5) | ((8'hab) ~^ (8'hab))) * (((8'ha1) ? (8'h9e) : (8'hab)) ? ((8'ha2) ? (8'hb0) : (8'had)) : (~(8'ha8))))))
(y, clk, wire36, wire35, wire34, wire33);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire36;
  input wire signed [(2'h3):(1'h0)] wire35;
  input wire signed [(4'hb):(1'h0)] wire34;
  input wire signed [(4'h9):(1'h0)] wire33;
  wire [(4'hb):(1'h0)] wire50;
  wire [(4'h9):(1'h0)] wire49;
  wire signed [(2'h3):(1'h0)] wire48;
  wire [(2'h2):(1'h0)] wire45;
  wire [(4'h9):(1'h0)] wire44;
  wire signed [(2'h3):(1'h0)] wire43;
  wire signed [(2'h2):(1'h0)] wire42;
  wire signed [(3'h4):(1'h0)] wire41;
  wire signed [(3'h6):(1'h0)] wire40;
  wire [(4'hb):(1'h0)] wire39;
  reg [(4'hb):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg46 = (1'h0);
  reg [(2'h2):(1'h0)] reg38 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg37 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 reg47,
                 reg46,
                 reg38,
                 reg37,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg37 <= (({wire35} + $signed({wire34})) ^~ wire35);
      reg38 <= ($signed(($unsigned((8'ha0)) | (wire33 & wire36))) != $signed(($signed(wire33) ?
          ((8'hac) - wire33) : wire36[(3'h6):(3'h5)])));
    end
  assign wire39 = $unsigned({wire35});
  assign wire40 = $signed({{(!wire39)}});
  assign wire41 = wire33[(3'h5):(2'h3)];
  assign wire42 = ((wire36 ?
                      ((+reg37) ?
                          $unsigned(wire36) : wire36[(3'h6):(2'h2)]) : ({wire39} ?
                          {wire35} : $unsigned(wire39))) ^ {wire34});
  assign wire43 = wire40;
  assign wire44 = $signed(wire43[(2'h3):(1'h1)]);
  assign wire45 = wire34[(3'h4):(3'h4)];
  always
    @(posedge clk) begin
      reg46 <= wire39;
      reg47 <= wire39[(3'h7):(3'h5)];
    end
  assign wire48 = (!{($signed((8'h9f)) ?
                          reg46[(1'h0):(1'h0)] : $unsigned((8'hab)))});
  assign wire49 = reg38[(1'h1):(1'h0)];
  assign wire50 = (~($signed((reg37 ? wire42 : wire45)) * wire41));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h40):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire17;
  input wire [(2'h3):(1'h0)] wire16;
  input wire [(2'h2):(1'h0)] wire15;
  input wire signed [(4'hb):(1'h0)] wire14;
  wire signed [(4'h8):(1'h0)] wire26;
  wire [(3'h6):(1'h0)] wire20;
  wire [(2'h3):(1'h0)] wire19;
  wire [(4'ha):(1'h0)] wire18;
  reg [(3'h7):(1'h0)] reg25 = (1'h0);
  reg [(4'h8):(1'h0)] reg24 = (1'h0);
  reg [(2'h3):(1'h0)] reg23 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg22 = (1'h0);
  reg [(4'h8):(1'h0)] reg21 = (1'h0);
  assign y = {wire26,
                 wire20,
                 wire19,
                 wire18,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 (1'h0)};
  assign wire18 = $signed(wire15);
  assign wire19 = $unsigned((wire16 ~^ $signed((8'ha8))));
  assign wire20 = wire19;
  always
    @(posedge clk) begin
      reg21 <= wire19[(2'h2):(1'h1)];
      if (wire14[(4'h9):(1'h1)])
        begin
          reg22 <= ((~|wire19[(1'h1):(1'h0)]) ?
              ((((8'ha8) & (8'ha4)) ?
                      (wire16 ? reg21 : wire15) : (wire20 + wire19)) ?
                  $unsigned(wire19) : wire18[(2'h3):(1'h1)]) : $unsigned((+$signed(wire14))));
        end
      else
        begin
          reg22 <= (wire20 & (~$unsigned((!wire19))));
          reg23 <= (^reg22);
          reg24 <= wire14[(3'h7):(3'h4)];
        end
      reg25 <= $unsigned(({wire17[(1'h0):(1'h0)]} <<< ($unsigned(wire20) >> (~&reg23))));
    end
  assign wire26 = $unsigned($unsigned((^~(wire18 | reg25))));
endmodule