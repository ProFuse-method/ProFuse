(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param371 = ((&(|(8'ha9))) | (((!((8'hb5) < (8'haa))) ? ((8'hb1) ? ((8'haf) != (8'hae)) : ((7'h43) ? (8'ha0) : (8'ha4))) : {(!(8'hb6)), ((8'hbe) ? (8'hb7) : (7'h44))}) ? ((((8'hbd) ? (8'hbc) : (8'hb8)) + {(7'h43)}) ? (+((8'ha6) ? (8'hb0) : (8'ha7))) : (((8'hb0) + (8'ha9)) ~^ ((8'hb9) | (8'haa)))) : ((-{(8'hb2), (8'ha2)}) ? (~|(^(8'ha5))) : (~^((8'hb5) >> (8'hb8)))))))
(y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h1ab):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h14):(1'h0)] wire4;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'hf):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire signed [(5'h14):(1'h0)] wire0;
  wire [(3'h7):(1'h0)] wire370;
  wire [(3'h6):(1'h0)] wire369;
  wire signed [(5'h10):(1'h0)] wire368;
  wire [(3'h4):(1'h0)] wire367;
  wire signed [(5'h14):(1'h0)] wire366;
  wire signed [(2'h2):(1'h0)] wire365;
  wire [(4'h9):(1'h0)] wire362;
  wire signed [(5'h12):(1'h0)] wire158;
  wire signed [(4'h8):(1'h0)] wire156;
  wire [(4'ha):(1'h0)] wire32;
  wire [(5'h12):(1'h0)] wire5;
  reg [(3'h5):(1'h0)] reg31 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg30 = (1'h0);
  reg [(5'h14):(1'h0)] reg28 = (1'h0);
  reg [(4'h9):(1'h0)] reg27 = (1'h0);
  reg [(4'ha):(1'h0)] reg26 = (1'h0);
  reg signed [(4'he):(1'h0)] reg24 = (1'h0);
  reg [(5'h10):(1'h0)] reg23 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg20 = (1'h0);
  reg [(4'hb):(1'h0)] reg19 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg17 = (1'h0);
  reg [(2'h2):(1'h0)] reg16 = (1'h0);
  reg [(2'h2):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg10 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg9 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg364 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg29 = (1'h0);
  reg [(2'h3):(1'h0)] forvar25 = (1'h0);
  reg [(4'hd):(1'h0)] reg22 = (1'h0);
  reg [(5'h13):(1'h0)] forvar21 = (1'h0);
  reg [(5'h13):(1'h0)] reg18 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar15 = (1'h0);
  reg [(5'h12):(1'h0)] forvar14 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg13 = (1'h0);
  reg [(4'h8):(1'h0)] reg12 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar8 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg7 = (1'h0);
  reg [(2'h3):(1'h0)] forvar6 = (1'h0);
  assign y = {wire370,
                 wire369,
                 wire368,
                 wire367,
                 wire366,
                 wire365,
                 wire362,
                 wire158,
                 wire156,
                 wire32,
                 wire5,
                 reg31,
                 reg30,
                 reg28,
                 reg27,
                 reg26,
                 reg24,
                 reg23,
                 reg20,
                 reg19,
                 reg17,
                 reg16,
                 reg11,
                 reg10,
                 reg9,
                 reg364,
                 reg29,
                 forvar25,
                 reg22,
                 forvar21,
                 reg18,
                 forvar15,
                 forvar14,
                 reg13,
                 reg12,
                 forvar8,
                 reg7,
                 forvar6,
                 (1'h0)};
  assign wire5 = $signed(($unsigned(((wire2 ? wire3 : wire4) < (wire2 ?
                         wire2 : wire2))) ?
                     wire2 : ($unsigned({(8'hae)}) ?
                         {(wire1 ? wire4 : wire3), wire4} : $signed((wire0 ?
                             wire3 : wire4)))));
  always
    @(posedge clk) begin
      for (forvar6 = (1'h0); (forvar6 < (1'h0)); forvar6 = (forvar6 + (1'h1)))
        begin
          reg7 = forvar6[(2'h2):(1'h0)];
          for (forvar8 = (1'h0); (forvar8 < (2'h3)); forvar8 = (forvar8 + (1'h1)))
            begin
              reg9 <= wire2;
              reg10 <= $signed((({$unsigned(wire1)} ?
                      reg7[(3'h7):(3'h6)] : {(forvar6 & wire5)}) ?
                  $signed((wire2 >= ((8'hbe) ? reg7 : wire5))) : ((((8'hb2) ?
                          wire1 : wire0) ?
                      forvar8 : $unsigned(wire1)) & $unsigned(wire2))));
              reg11 <= $unsigned($unsigned(reg7[(4'hd):(4'hd)]));
            end
          reg12 = $unsigned((8'hab));
        end
      reg13 = $signed(reg10);
      for (forvar14 = (1'h0); (forvar14 < (2'h3)); forvar14 = (forvar14 + (1'h1)))
        begin
          for (forvar15 = (1'h0); (forvar15 < (2'h2)); forvar15 = (forvar15 + (1'h1)))
            begin
              reg16 <= ($unsigned((reg11[(1'h0):(1'h0)] >= forvar8)) & $unsigned($signed($unsigned((forvar8 ?
                  reg11 : (8'ha2))))));
              reg17 <= (reg16 ? $signed(reg7[(2'h3):(1'h1)]) : wire0);
              reg18 = (-$unsigned(($unsigned((~|(8'haf))) ?
                  $signed($unsigned((8'ha9))) : ((reg9 > reg12) & $signed(reg10)))));
              reg19 <= wire4;
            end
          reg20 <= {$unsigned(($signed((~reg10)) <<< (reg12 - $signed(reg12)))),
              (~^{($signed(reg18) ?
                      ((8'hb5) ? reg18 : forvar6) : $signed(forvar15)),
                  wire3})};
          for (forvar21 = (1'h0); (forvar21 < (1'h1)); forvar21 = (forvar21 + (1'h1)))
            begin
              reg22 = reg13[(3'h4):(2'h2)];
              reg23 <= {reg10[(1'h0):(1'h0)]};
              reg24 <= ((-(((8'ha9) < (reg22 ?
                      (8'hbe) : (8'had))) - $signed($unsigned(forvar15)))) ?
                  wire3 : ((({reg20,
                      forvar14} || $unsigned(reg10)) + $signed((wire2 ?
                      reg18 : reg23))) * $signed($signed((forvar21 << reg23)))));
            end
          for (forvar25 = (1'h0); (forvar25 < (2'h3)); forvar25 = (forvar25 + (1'h1)))
            begin
              reg26 <= reg16[(1'h1):(1'h0)];
              reg27 <= $signed((~|$signed((!reg24))));
              reg28 <= ($signed(reg24[(1'h0):(1'h0)]) ?
                  $signed($unsigned((!$unsigned(reg26)))) : ((((reg16 << reg19) != (reg24 | forvar6)) ?
                      reg24[(3'h7):(2'h3)] : $signed(((8'hac) ?
                          (8'h9c) : reg19))) - reg11));
              reg29 = (~$unsigned((reg26[(4'ha):(2'h3)] ?
                  reg17[(1'h1):(1'h0)] : wire3)));
              reg30 <= (~^((|wire5[(4'hf):(4'hc)]) == $signed(((reg11 <<< forvar6) <<< $unsigned(reg28)))));
            end
          reg31 <= reg19;
        end
    end
  assign wire32 = $signed((&({((8'hb3) ?
                          reg19 : (8'hac))} ~^ reg26[(2'h3):(2'h3)])));
  module33 #() modinst157 (wire156, clk, reg9, reg10, reg24, reg28, reg30);
  assign wire158 = (~&((reg20 ?
                           $signed((reg23 << reg30)) : {$signed(wire3),
                               (reg31 != (8'ha6))}) ?
                       reg11 : reg11));
  module159 #() modinst363 (wire362, clk, wire0, wire2, reg9, wire5, wire3);
  always
    @(posedge clk) begin
      reg364 = (wire362[(1'h1):(1'h0)] ?
          reg11[(2'h2):(1'h0)] : $unsigned(reg24));
    end
  assign wire365 = $unsigned(((~|$signed(wire32[(4'h9):(4'h9)])) ?
                       $signed((!(|reg27))) : $signed(((wire0 - reg30) != $unsigned((8'ha2))))));
  assign wire366 = ({($signed((reg17 - reg26)) ?
                           wire362[(1'h0):(1'h0)] : wire362),
                       reg9[(3'h5):(3'h4)]} <<< (~^reg26[(3'h7):(1'h1)]));
  assign wire367 = (|($signed($unsigned((reg9 ? reg10 : (8'hb9)))) ?
                       $signed(((reg10 ^ wire3) >>> (wire362 ?
                           reg9 : (7'h41)))) : reg10));
  assign wire368 = $signed({(~|(8'h9d)), (8'hb0)});
  assign wire369 = (!$signed(reg10));
  assign wire370 = (reg23[(4'hd):(3'h6)] * $signed($signed($signed($signed(wire2)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module159  (y, clk, wire160, wire161, wire162, wire163, wire164);
  output wire [(32'h69f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h14):(1'h0)] wire160;
  input wire [(4'hf):(1'h0)] wire161;
  input wire signed [(5'h15):(1'h0)] wire162;
  input wire signed [(4'hd):(1'h0)] wire163;
  input wire [(4'ha):(1'h0)] wire164;
  wire [(5'h14):(1'h0)] wire361;
  wire signed [(4'h8):(1'h0)] wire165;
  wire signed [(5'h10):(1'h0)] wire166;
  wire [(4'hb):(1'h0)] wire167;
  wire [(4'hb):(1'h0)] wire227;
  wire signed [(4'hd):(1'h0)] wire274;
  wire signed [(4'hc):(1'h0)] wire275;
  wire [(4'hf):(1'h0)] wire276;
  wire [(3'h7):(1'h0)] wire277;
  wire signed [(5'h12):(1'h0)] wire278;
  wire [(4'h9):(1'h0)] wire279;
  wire [(5'h11):(1'h0)] wire280;
  wire signed [(5'h13):(1'h0)] wire359;
  reg [(5'h13):(1'h0)] reg168 = (1'h0);
  reg [(3'h7):(1'h0)] reg172 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg174 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg176 = (1'h0);
  reg [(2'h2):(1'h0)] reg180 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg181 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg182 = (1'h0);
  reg [(4'h9):(1'h0)] reg188 = (1'h0);
  reg [(5'h15):(1'h0)] reg194 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg196 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg198 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg199 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg200 = (1'h0);
  reg [(3'h6):(1'h0)] reg202 = (1'h0);
  reg [(3'h6):(1'h0)] reg203 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg204 = (1'h0);
  reg [(5'h14):(1'h0)] reg205 = (1'h0);
  reg [(5'h14):(1'h0)] reg206 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg208 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg213 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg217 = (1'h0);
  reg [(4'he):(1'h0)] reg218 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg219 = (1'h0);
  reg signed [(4'he):(1'h0)] reg222 = (1'h0);
  reg [(3'h6):(1'h0)] reg225 = (1'h0);
  reg [(4'hc):(1'h0)] reg226 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg229 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg230 = (1'h0);
  reg [(2'h2):(1'h0)] reg232 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg234 = (1'h0);
  reg [(4'h9):(1'h0)] reg235 = (1'h0);
  reg [(4'hd):(1'h0)] reg236 = (1'h0);
  reg [(5'h11):(1'h0)] reg240 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg243 = (1'h0);
  reg [(5'h14):(1'h0)] reg244 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg245 = (1'h0);
  reg [(3'h5):(1'h0)] reg248 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg250 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg252 = (1'h0);
  reg [(3'h6):(1'h0)] reg253 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg254 = (1'h0);
  reg [(3'h7):(1'h0)] reg255 = (1'h0);
  reg [(3'h6):(1'h0)] reg260 = (1'h0);
  reg [(4'h8):(1'h0)] reg266 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg269 = (1'h0);
  reg [(4'h8):(1'h0)] reg270 = (1'h0);
  reg [(4'ha):(1'h0)] reg272 = (1'h0);
  reg [(3'h4):(1'h0)] reg273 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg281 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg282 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg285 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg286 = (1'h0);
  reg [(4'h8):(1'h0)] reg287 = (1'h0);
  reg [(4'ha):(1'h0)] reg288 = (1'h0);
  reg [(5'h12):(1'h0)] reg289 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg291 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg292 = (1'h0);
  reg [(5'h14):(1'h0)] reg294 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg295 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg299 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg301 = (1'h0);
  reg [(5'h14):(1'h0)] reg302 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg303 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg304 = (1'h0);
  reg [(4'hc):(1'h0)] reg306 = (1'h0);
  reg [(4'he):(1'h0)] reg307 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar305 = (1'h0);
  reg [(5'h15):(1'h0)] forvar300 = (1'h0);
  reg [(4'ha):(1'h0)] forvar298 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg297 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar296 = (1'h0);
  reg [(3'h7):(1'h0)] reg293 = (1'h0);
  reg [(4'h9):(1'h0)] forvar290 = (1'h0);
  reg [(4'h9):(1'h0)] forvar284 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar283 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg271 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar268 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar267 = (1'h0);
  reg [(2'h2):(1'h0)] reg265 = (1'h0);
  reg [(5'h14):(1'h0)] forvar264 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg263 = (1'h0);
  reg [(4'hb):(1'h0)] reg262 = (1'h0);
  reg [(4'he):(1'h0)] forvar261 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar259 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg258 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar257 = (1'h0);
  reg [(5'h14):(1'h0)] reg256 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar251 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar249 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar247 = (1'h0);
  reg [(4'hc):(1'h0)] reg246 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg242 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar241 = (1'h0);
  reg [(4'hd):(1'h0)] reg239 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar238 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg237 = (1'h0);
  reg [(4'hf):(1'h0)] forvar233 = (1'h0);
  reg [(3'h5):(1'h0)] forvar231 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar228 = (1'h0);
  reg [(3'h6):(1'h0)] forvar224 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg223 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg221 = (1'h0);
  reg [(3'h7):(1'h0)] reg220 = (1'h0);
  reg [(3'h7):(1'h0)] forvar216 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar215 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg214 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg212 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg211 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg210 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg209 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar207 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar201 = (1'h0);
  reg [(5'h13):(1'h0)] reg197 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar195 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar193 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar192 = (1'h0);
  reg [(4'h8):(1'h0)] reg191 = (1'h0);
  reg [(5'h14):(1'h0)] reg190 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg189 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar187 = (1'h0);
  reg [(4'h8):(1'h0)] reg186 = (1'h0);
  reg [(5'h11):(1'h0)] reg185 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg184 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar183 = (1'h0);
  reg [(3'h6):(1'h0)] forvar179 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg178 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg177 = (1'h0);
  reg [(4'hd):(1'h0)] forvar175 = (1'h0);
  reg signed [(4'he):(1'h0)] reg173 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg171 = (1'h0);
  reg [(5'h10):(1'h0)] forvar170 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar169 = (1'h0);
  assign y = {wire361,
                 wire165,
                 wire166,
                 wire167,
                 wire227,
                 wire274,
                 wire275,
                 wire276,
                 wire277,
                 wire278,
                 wire279,
                 wire280,
                 wire359,
                 reg168,
                 reg172,
                 reg174,
                 reg176,
                 reg180,
                 reg181,
                 reg182,
                 reg188,
                 reg194,
                 reg196,
                 reg198,
                 reg199,
                 reg200,
                 reg202,
                 reg203,
                 reg204,
                 reg205,
                 reg206,
                 reg208,
                 reg213,
                 reg217,
                 reg218,
                 reg219,
                 reg222,
                 reg225,
                 reg226,
                 reg229,
                 reg230,
                 reg232,
                 reg234,
                 reg235,
                 reg236,
                 reg240,
                 reg243,
                 reg244,
                 reg245,
                 reg248,
                 reg250,
                 reg252,
                 reg253,
                 reg254,
                 reg255,
                 reg260,
                 reg266,
                 reg269,
                 reg270,
                 reg272,
                 reg273,
                 reg281,
                 reg282,
                 reg285,
                 reg286,
                 reg287,
                 reg288,
                 reg289,
                 reg291,
                 reg292,
                 reg294,
                 reg295,
                 reg299,
                 reg301,
                 reg302,
                 reg303,
                 reg304,
                 reg306,
                 reg307,
                 forvar305,
                 forvar300,
                 forvar298,
                 reg297,
                 forvar296,
                 reg293,
                 forvar290,
                 forvar284,
                 forvar283,
                 reg271,
                 forvar268,
                 forvar267,
                 reg265,
                 forvar264,
                 reg263,
                 reg262,
                 forvar261,
                 forvar259,
                 reg258,
                 forvar257,
                 reg256,
                 forvar251,
                 forvar249,
                 forvar247,
                 reg246,
                 reg242,
                 forvar241,
                 reg239,
                 forvar238,
                 reg237,
                 forvar233,
                 forvar231,
                 forvar228,
                 forvar224,
                 reg223,
                 reg221,
                 reg220,
                 forvar216,
                 forvar215,
                 reg214,
                 reg212,
                 reg211,
                 reg210,
                 reg209,
                 forvar207,
                 forvar201,
                 reg197,
                 forvar195,
                 forvar193,
                 forvar192,
                 reg191,
                 reg190,
                 reg189,
                 forvar187,
                 reg186,
                 reg185,
                 reg184,
                 forvar183,
                 forvar179,
                 reg178,
                 reg177,
                 forvar175,
                 reg173,
                 reg171,
                 forvar170,
                 forvar169,
                 (1'h0)};
  assign wire165 = $signed((^wire163[(4'hd):(4'h9)]));
  assign wire166 = (~&$signed(($unsigned(wire162) && ((wire165 <= wire165) | (wire161 & (8'h9c))))));
  assign wire167 = $signed(wire164[(2'h3):(2'h3)]);
  always
    @(posedge clk) begin
      reg168 <= ($signed({{$unsigned(wire163), wire167}}) == (8'hae));
      for (forvar169 = (1'h0); (forvar169 < (1'h0)); forvar169 = (forvar169 + (1'h1)))
        begin
          for (forvar170 = (1'h0); (forvar170 < (2'h3)); forvar170 = (forvar170 + (1'h1)))
            begin
              reg171 = (($unsigned(wire162) * $signed(($signed(wire163) ?
                      (+wire165) : (reg168 ? wire162 : wire162)))) ?
                  ($signed((wire160 ?
                          $unsigned((8'ha9)) : {wire162, wire163})) ?
                      {wire166} : ((~(wire162 > wire163)) != wire162)) : $unsigned((wire165[(2'h3):(1'h1)] ?
                      $signed(wire163) : $unsigned($unsigned((8'hb6))))));
              reg172 <= wire161;
              reg173 = $unsigned(((8'hb7) >> wire164));
              reg174 <= $unsigned((wire160[(1'h1):(1'h0)] ?
                  $signed(reg172) : $unsigned($unsigned(((8'haa) >>> (8'ha0))))));
            end
          for (forvar175 = (1'h0); (forvar175 < (1'h0)); forvar175 = (forvar175 + (1'h1)))
            begin
              reg176 <= $signed(wire167);
              reg177 = (~(^$unsigned(forvar175)));
              reg178 = ({reg168} ?
                  ($signed($unsigned(reg177[(1'h1):(1'h0)])) << wire167[(1'h1):(1'h1)]) : (($signed($signed(wire165)) & $signed({reg168,
                      (8'ha1)})) ^~ $signed(((8'hbc) ?
                      {wire167, forvar170} : (wire161 > wire164)))));
            end
          for (forvar179 = (1'h0); (forvar179 < (3'h4)); forvar179 = (forvar179 + (1'h1)))
            begin
              reg180 <= {{{$signed((wire161 << (8'hb0)))},
                      (^~$signed((~(8'hb0))))},
                  (((-(8'ha7)) ~^ ((~|reg172) ?
                          ((8'ha2) || wire167) : {reg178, wire163})) ?
                      ((reg178[(4'hc):(2'h2)] ^ (~^reg177)) ?
                          ((&forvar179) ?
                              (wire162 >= wire165) : (~&wire162)) : ((wire165 | wire166) > (-wire166))) : {wire164[(2'h3):(1'h0)],
                          $signed((^~reg176))})};
              reg181 <= {$signed({forvar170})};
              reg182 <= (7'h43);
            end
          for (forvar183 = (1'h0); (forvar183 < (1'h0)); forvar183 = (forvar183 + (1'h1)))
            begin
              reg184 = (~|wire164);
              reg185 = reg178[(3'h7):(2'h3)];
              reg186 = reg174[(1'h0):(1'h0)];
            end
          for (forvar187 = (1'h0); (forvar187 < (1'h1)); forvar187 = (forvar187 + (1'h1)))
            begin
              reg188 <= (reg176 > $signed($signed($signed($unsigned((7'h41))))));
              reg189 = $signed(wire164[(4'ha):(3'h7)]);
              reg190 = forvar179[(2'h3):(1'h0)];
              reg191 = $unsigned(forvar175);
            end
        end
      for (forvar192 = (1'h0); (forvar192 < (1'h0)); forvar192 = (forvar192 + (1'h1)))
        begin
          for (forvar193 = (1'h0); (forvar193 < (1'h1)); forvar193 = (forvar193 + (1'h1)))
            begin
              reg194 <= $signed(($signed(wire165) > $signed(wire165[(4'h8):(3'h7)])));
            end
          for (forvar195 = (1'h0); (forvar195 < (2'h2)); forvar195 = (forvar195 + (1'h1)))
            begin
              reg196 <= $signed((-$signed(((|reg171) ?
                  $unsigned(reg181) : {forvar187}))));
              reg197 = {{$unsigned(((reg180 & forvar179) ?
                          wire167[(1'h1):(1'h1)] : {reg181, reg191}))},
                  $unsigned(((+(forvar195 & (8'hba))) ?
                      $unsigned(reg182[(1'h1):(1'h0)]) : ($signed(reg196) | (8'hba))))};
              reg198 <= ((!$signed($signed((reg185 != wire167)))) & $signed(wire161[(2'h3):(2'h2)]));
              reg199 <= {((-{reg189, (8'hb2)}) ?
                      $signed(reg172) : ((!(!forvar179)) - (!wire166))),
                  reg194};
              reg200 <= ((&{(^$signed(forvar183))}) ? {(^reg198)} : reg196);
            end
          for (forvar201 = (1'h0); (forvar201 < (1'h0)); forvar201 = (forvar201 + (1'h1)))
            begin
              reg202 <= (wire164[(4'h8):(3'h5)] ?
                  $unsigned((((reg172 * reg181) ?
                          $signed((8'hbd)) : (|(8'hb8))) ?
                      wire162[(4'h8):(3'h4)] : wire165[(3'h5):(2'h2)])) : (reg181[(3'h6):(1'h0)] ?
                      (8'h9f) : $unsigned((8'hbb))));
              reg203 <= ($unsigned(((^~$unsigned(forvar170)) ~^ ((^~reg190) ?
                  $signed(wire167) : (~|wire162)))) >>> (((&(reg171 ?
                          forvar170 : reg174)) ?
                      (8'ha3) : reg174[(1'h1):(1'h0)]) ?
                  (8'haa) : ($unsigned((reg194 && reg189)) <<< reg197)));
              reg204 <= ((reg186[(3'h4):(1'h0)] ^ (~|$signed($signed(wire160)))) ?
                  {(^$unsigned(wire161[(4'hc):(1'h0)]))} : reg203);
              reg205 <= $unsigned($signed($signed($signed($unsigned(reg200)))));
              reg206 <= forvar187[(4'hc):(4'hb)];
            end
        end
      for (forvar207 = (1'h0); (forvar207 < (2'h2)); forvar207 = (forvar207 + (1'h1)))
        begin
          if (reg197)
            begin
              reg208 <= reg182[(1'h0):(1'h0)];
              reg209 = (reg173[(1'h1):(1'h1)] == $signed((^($unsigned(reg178) ?
                  reg186[(2'h3):(1'h1)] : wire165[(1'h0):(1'h0)]))));
              reg210 = $signed((~&$unsigned((~$unsigned(reg184)))));
              reg211 = ($signed($signed($unsigned($signed(reg184)))) ?
                  $signed(reg202[(1'h1):(1'h1)]) : (+forvar170[(3'h5):(2'h2)]));
              reg212 = ({reg186,
                  $unsigned((&wire165[(3'h5):(2'h3)]))} * {($unsigned($signed((8'h9d))) ?
                      $unsigned($signed((8'hb8))) : (forvar175[(1'h0):(1'h0)] ?
                          (reg199 > reg168) : $signed(reg202))),
                  $signed($unsigned($signed(forvar192)))});
            end
          else
            begin
              reg208 <= $signed(forvar201[(1'h1):(1'h1)]);
              reg213 <= $signed($unsigned($unsigned((&(forvar201 ^~ reg180)))));
            end
          reg214 = wire163;
        end
      for (forvar215 = (1'h0); (forvar215 < (3'h4)); forvar215 = (forvar215 + (1'h1)))
        begin
          for (forvar216 = (1'h0); (forvar216 < (2'h2)); forvar216 = (forvar216 + (1'h1)))
            begin
              reg217 <= forvar179[(2'h2):(1'h1)];
              reg218 <= (((+$signed((-reg210))) ?
                      (~|$signed($unsigned(reg173))) : reg178[(1'h1):(1'h1)]) ?
                  ($signed($signed(reg180[(2'h2):(1'h1)])) ?
                      forvar207[(1'h1):(1'h1)] : ($unsigned((+(8'hac))) >>> (reg189[(3'h6):(3'h4)] ?
                          $signed(reg214) : {(8'hbf),
                              reg206}))) : $signed(reg194[(5'h14):(1'h0)]));
              reg219 <= (($signed(reg185) <= (^~forvar207)) ^~ $signed({($unsigned(reg197) ?
                      $unsigned(forvar169) : (-(8'hb5)))}));
              reg220 = (8'ha7);
              reg221 = ($signed(forvar179[(2'h3):(1'h0)]) <= reg178[(4'hb):(3'h7)]);
            end
          reg222 <= (~|($unsigned(reg185[(4'hd):(3'h6)]) + reg199[(3'h4):(3'h4)]));
          reg223 = $unsigned($unsigned(reg200[(3'h7):(3'h6)]));
          for (forvar224 = (1'h0); (forvar224 < (2'h3)); forvar224 = (forvar224 + (1'h1)))
            begin
              reg225 <= (reg173[(4'h9):(3'h4)] ?
                  (forvar192 >> ({(forvar179 ? wire162 : reg212)} ?
                      reg209[(2'h2):(2'h2)] : (~(~reg197)))) : ($signed($signed((reg206 >= reg200))) ?
                      $unsigned($signed((reg213 || reg212))) : ((reg186[(1'h1):(1'h0)] && {forvar201}) ?
                          $unsigned($signed(forvar195)) : {reg223[(3'h7):(3'h7)]})));
            end
          reg226 <= $signed($signed((~|$signed($signed((8'ha9))))));
        end
    end
  assign wire227 = ($signed(reg226) ?
                       wire166[(4'hb):(3'h4)] : reg174[(1'h1):(1'h0)]);
  always
    @(posedge clk) begin
      for (forvar228 = (1'h0); (forvar228 < (2'h2)); forvar228 = (forvar228 + (1'h1)))
        begin
          reg229 <= ($signed(({(reg219 ? reg204 : wire161)} ?
              ((~&reg196) > reg188) : wire162[(2'h2):(1'h1)])) ^~ $unsigned($signed(forvar228[(1'h0):(1'h0)])));
          reg230 <= $signed({$signed((^~$signed(reg182)))});
        end
      for (forvar231 = (1'h0); (forvar231 < (3'h4)); forvar231 = (forvar231 + (1'h1)))
        begin
          reg232 <= $signed(($signed(((reg176 | reg226) <= (forvar228 ^~ wire167))) ?
              $unsigned((+reg217)) : (((^~reg182) && $unsigned(wire165)) - ({reg217,
                      (8'ha5)} ?
                  forvar231[(2'h3):(1'h0)] : (wire163 ~^ reg230)))));
          for (forvar233 = (1'h0); (forvar233 < (2'h2)); forvar233 = (forvar233 + (1'h1)))
            begin
              reg234 <= reg230;
              reg235 <= ($signed(reg198) ?
                  (^reg202) : $unsigned((!$signed(reg199))));
              reg236 <= ((reg172[(3'h7):(3'h4)] ?
                  $signed(reg182) : $signed(reg203)) >> $signed(forvar233));
              reg237 = $unsigned({((~&reg194) + (|$unsigned((8'hab))))});
            end
          for (forvar238 = (1'h0); (forvar238 < (1'h1)); forvar238 = (forvar238 + (1'h1)))
            begin
              reg239 = {((&(reg222[(4'h8):(2'h3)] * wire161)) ?
                      {((wire166 ^ wire227) ?
                              (wire166 ? (8'h9f) : (8'had)) : (~|reg229)),
                          (reg204 >> (|(8'h9f)))} : $signed(({reg225,
                          reg235} != $unsigned(wire165)))),
                  (wire162 ? (8'ha2) : {forvar238, wire165})};
              reg240 <= $signed(((($signed(reg222) * (reg182 == (8'hb5))) ?
                      ($signed(reg219) ?
                          wire163[(4'hb):(3'h6)] : (reg205 ?
                              reg180 : reg176)) : {(reg194 ?
                              forvar231 : (8'ha0)),
                          (reg208 ? reg204 : (8'hba))}) ?
                  {reg234[(3'h7):(1'h0)]} : (8'ha3)));
            end
          for (forvar241 = (1'h0); (forvar241 < (1'h0)); forvar241 = (forvar241 + (1'h1)))
            begin
              reg242 = {$unsigned($unsigned($unsigned(reg168))),
                  $unsigned($unsigned($signed($signed(reg234))))};
              reg243 <= forvar233;
              reg244 <= {{{(-$signed((8'hbb))),
                          ($signed(reg239) ? $signed(reg222) : reg206)}}};
              reg245 <= (-reg181);
              reg246 = ($unsigned((~&reg236[(3'h5):(1'h1)])) ?
                  reg240 : wire167);
            end
        end
      for (forvar247 = (1'h0); (forvar247 < (2'h2)); forvar247 = (forvar247 + (1'h1)))
        begin
          reg248 <= (reg225[(3'h4):(3'h4)] ^~ ($unsigned(((wire167 ?
              reg246 : forvar233) << (+reg205))) <= wire161));
          for (forvar249 = (1'h0); (forvar249 < (1'h1)); forvar249 = (forvar249 + (1'h1)))
            begin
              reg250 <= forvar241[(1'h0):(1'h0)];
            end
        end
      for (forvar251 = (1'h0); (forvar251 < (3'h4)); forvar251 = (forvar251 + (1'h1)))
        begin
          if ($unsigned((!((&$signed(reg232)) ?
              (&(8'hbd)) : ((~^reg250) | reg226[(4'h9):(2'h3)])))))
            begin
              reg252 <= $signed(reg234);
            end
          else
            begin
              reg252 <= $unsigned($signed((wire166[(1'h1):(1'h0)] ?
                  (reg202[(2'h3):(2'h3)] < reg235[(2'h2):(1'h1)]) : $unsigned($signed(reg248)))));
              reg253 <= ($signed(($signed((reg198 <<< wire162)) < $signed(wire227[(2'h2):(2'h2)]))) == wire160[(3'h7):(3'h4)]);
              reg254 <= $unsigned($unsigned(((^~(|reg232)) ?
                  (~|(reg196 ? reg198 : reg222)) : reg218[(1'h0):(1'h0)])));
              reg255 <= ((reg253 ?
                  (reg181[(3'h7):(1'h1)] ?
                      ((forvar247 >> reg217) < $signed(reg234)) : {(|forvar233),
                          wire167}) : (^~reg202[(1'h0):(1'h0)])) ~^ $unsigned((|reg244[(1'h1):(1'h1)])));
              reg256 = reg218;
            end
          for (forvar257 = (1'h0); (forvar257 < (1'h1)); forvar257 = (forvar257 + (1'h1)))
            begin
              reg258 = $unsigned(reg208);
            end
          for (forvar259 = (1'h0); (forvar259 < (1'h0)); forvar259 = (forvar259 + (1'h1)))
            begin
              reg260 <= forvar257;
            end
          for (forvar261 = (1'h0); (forvar261 < (1'h1)); forvar261 = (forvar261 + (1'h1)))
            begin
              reg262 = $unsigned($signed((reg180 >= $signed((reg174 ^~ (8'h9c))))));
              reg263 = $signed(((^~$unsigned({reg200, reg246})) ?
                  (~^((~|reg260) ?
                      ((8'hbc) > reg232) : $signed(reg199))) : {((reg258 ?
                          forvar233 : reg260) & reg182),
                      reg262[(1'h1):(1'h0)]}));
            end
          for (forvar264 = (1'h0); (forvar264 < (3'h4)); forvar264 = (forvar264 + (1'h1)))
            begin
              reg265 = reg237;
              reg266 <= reg172[(2'h3):(1'h0)];
            end
        end
      for (forvar267 = (1'h0); (forvar267 < (1'h1)); forvar267 = (forvar267 + (1'h1)))
        begin
          for (forvar268 = (1'h0); (forvar268 < (2'h3)); forvar268 = (forvar268 + (1'h1)))
            begin
              reg269 <= (&$signed((|(&reg168[(3'h6):(3'h5)]))));
              reg270 <= $signed((($unsigned(wire165) ?
                  ((forvar257 ? (8'ha7) : reg213) ?
                      reg256[(4'hb):(3'h6)] : $signed(wire167)) : $signed((forvar257 ?
                      reg176 : forvar247))) > $unsigned((reg188[(2'h3):(1'h1)] ?
                  (reg213 ? forvar238 : (8'ha7)) : (forvar259 ?
                      reg236 : reg239)))));
              reg271 = (8'ha8);
              reg272 <= $signed($signed((reg253 ?
                  (+(forvar241 <<< reg242)) : forvar238[(1'h0):(1'h0)])));
              reg273 <= (reg168 ?
                  reg258 : $unsigned($signed((reg244[(3'h4):(2'h3)] ?
                      reg226[(1'h0):(1'h0)] : ((8'hb0) ?
                          reg270 : forvar257)))));
            end
        end
    end
  assign wire274 = (reg196 ?
                       (!(-($signed(reg200) ?
                           $unsigned((8'hb6)) : reg203))) : (~&reg248[(2'h3):(2'h3)]));
  assign wire275 = reg250;
  assign wire276 = ($signed({(^reg203[(2'h3):(2'h2)]),
                       {(reg272 ? reg217 : wire163)}}) == $signed((~^reg176)));
  assign wire277 = (8'hb5);
  assign wire278 = $unsigned({(+reg234[(3'h6):(3'h6)])});
  assign wire279 = $signed(reg269[(3'h5):(3'h5)]);
  assign wire280 = (~^reg181[(4'h8):(4'h8)]);
  always
    @(posedge clk) begin
      reg281 <= ($unsigned(($unsigned((reg181 ? wire279 : wire167)) ?
              ((+reg269) ? {(8'ha0)} : (reg244 ~^ reg218)) : (~(^~(8'haf))))) ?
          $unsigned(reg206[(5'h12):(5'h10)]) : (+(^$signed((&wire164)))));
      reg282 <= ((8'ha4) ? wire163 : reg244);
      for (forvar283 = (1'h0); (forvar283 < (1'h1)); forvar283 = (forvar283 + (1'h1)))
        begin
          for (forvar284 = (1'h0); (forvar284 < (3'h4)); forvar284 = (forvar284 + (1'h1)))
            begin
              reg285 <= $unsigned($unsigned(($signed(((8'ha7) > (7'h43))) ?
                  {$signed(reg254)} : $signed((reg172 ? reg181 : wire165)))));
              reg286 <= $unsigned((wire274[(1'h0):(1'h0)] ^~ (+$unsigned({reg254}))));
              reg287 <= wire165;
              reg288 <= {(|$unsigned((wire166[(4'hb):(3'h5)] <<< (reg208 ?
                      (8'hab) : (8'hb4))))),
                  $unsigned((reg244 - forvar284))};
              reg289 <= (&reg222);
            end
          for (forvar290 = (1'h0); (forvar290 < (2'h2)); forvar290 = (forvar290 + (1'h1)))
            begin
              reg291 <= reg199[(1'h0):(1'h0)];
              reg292 <= (({(reg181 ?
                          (forvar290 ^~ reg182) : $signed(reg181))} ^~ reg217[(5'h10):(4'h8)]) ?
                  (~$signed({reg217[(4'hd):(4'hd)],
                      (!(8'h9e))})) : reg285[(2'h3):(1'h0)]);
              reg293 = (($signed((~&$signed((8'hb3)))) << $unsigned($unsigned((wire275 | (8'ha2))))) ?
                  $signed(reg174) : reg226);
              reg294 <= ((^~(^$unsigned((reg282 ? reg272 : wire279)))) ?
                  $unsigned($signed($unsigned((reg287 ?
                      (8'ha2) : reg253)))) : ((8'ha7) >= (reg272 ?
                      $signed(reg281) : {wire276[(3'h7):(1'h0)]})));
              reg295 <= $unsigned((~^reg218[(2'h2):(1'h1)]));
            end
          for (forvar296 = (1'h0); (forvar296 < (3'h4)); forvar296 = (forvar296 + (1'h1)))
            begin
              reg297 = {reg252[(1'h1):(1'h1)], (8'h9d)};
            end
        end
      for (forvar298 = (1'h0); (forvar298 < (1'h1)); forvar298 = (forvar298 + (1'h1)))
        begin
          reg299 <= $unsigned((8'haf));
          for (forvar300 = (1'h0); (forvar300 < (2'h3)); forvar300 = (forvar300 + (1'h1)))
            begin
              reg301 <= $signed((((&$signed(forvar300)) ?
                  ({wire164, reg287} ?
                      (reg286 ?
                          reg196 : reg266) : wire280[(3'h5):(2'h2)]) : {wire277[(3'h5):(2'h3)]}) * (reg281 == $signed(reg196))));
              reg302 <= ($signed(reg217) ?
                  ((reg176[(2'h2):(2'h2)] || ($unsigned(reg243) ?
                          (wire280 ? reg198 : (7'h42)) : (-forvar300))) ?
                      reg287 : reg232[(1'h0):(1'h0)]) : reg255);
              reg303 <= ((+({$unsigned(reg199),
                      $unsigned(wire276)} ^~ $signed((reg202 | wire227)))) ?
                  (((((8'ha8) <<< reg188) ?
                          (~^reg194) : {reg252}) & (^$unsigned(reg299))) ?
                      {(reg293[(3'h4):(1'h0)] < $signed(wire279)),
                          reg219[(1'h1):(1'h0)]} : $unsigned((~reg260[(1'h1):(1'h0)]))) : ((-$signed($signed(wire162))) <= (^~forvar296[(4'hc):(4'ha)])));
              reg304 <= ((reg250[(4'h8):(3'h4)] >>> $unsigned((forvar296 ?
                  {reg250} : (reg273 < reg202)))) >>> (^~reg226));
            end
          for (forvar305 = (1'h0); (forvar305 < (1'h0)); forvar305 = (forvar305 + (1'h1)))
            begin
              reg306 <= forvar290[(1'h1):(1'h1)];
            end
        end
      reg307 <= $signed(((((reg291 ? reg248 : reg205) <<< $unsigned(wire164)) ?
              wire276 : $unsigned((reg172 * reg272))) ?
          (((&forvar300) ? $signed(wire278) : wire276[(1'h0):(1'h0)]) ?
              $unsigned(((7'h44) ?
                  forvar290 : reg194)) : (reg236[(4'h8):(3'h4)] ?
                  (^reg302) : {reg266})) : ({(+reg208)} ?
              $unsigned(reg252[(2'h2):(1'h1)]) : $unsigned((wire166 == wire163)))));
    end
  module308 #() modinst360 (wire359, clk, wire276, reg266, reg229, reg255);
  assign wire361 = ({(((|reg208) << (wire164 ^ reg294)) ?
                               (~&(reg240 ?
                                   (8'had) : wire227)) : $signed((reg288 ?
                                   reg229 : reg253))),
                           reg307} ?
                       $signed($signed((^~reg285))) : (reg219 && reg287));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module33
#(parameter param154 = ((((((8'h9f) ~^ (8'hb3)) && (7'h41)) ? (-(~&(7'h42))) : (((8'hb9) > (7'h43)) ? (&(8'ha7)) : {(8'ha5), (8'ha5)})) | ({(-(8'ha5)), ((8'haf) ? (8'ha8) : (8'ha6))} << {((7'h40) >> (8'hab))})) | (((((8'ha3) ? (8'hb0) : (8'had)) != (~&(8'hac))) != (^~((8'hba) ? (8'ha9) : (8'ha0)))) >>> (&(+((8'hac) >>> (8'hbf)))))), 
parameter param155 = param154)
(y, clk, wire38, wire37, wire36, wire35, wire34);
  output wire [(32'h74):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h11):(1'h0)] wire38;
  input wire [(3'h6):(1'h0)] wire37;
  input wire signed [(4'he):(1'h0)] wire36;
  input wire signed [(5'h14):(1'h0)] wire35;
  input wire [(5'h10):(1'h0)] wire34;
  wire [(4'h9):(1'h0)] wire153;
  wire [(5'h12):(1'h0)] wire152;
  wire [(5'h10):(1'h0)] wire151;
  wire [(5'h14):(1'h0)] wire150;
  wire [(5'h14):(1'h0)] wire149;
  wire signed [(2'h3):(1'h0)] wire148;
  wire [(4'hf):(1'h0)] wire146;
  wire signed [(4'he):(1'h0)] wire39;
  assign y = {wire153,
                 wire152,
                 wire151,
                 wire150,
                 wire149,
                 wire148,
                 wire146,
                 wire39,
                 (1'h0)};
  assign wire39 = wire35;
  module40 #() modinst147 (.wire42(wire36), .wire41(wire39), .wire44(wire37), .wire43(wire35), .clk(clk), .y(wire146));
  assign wire148 = wire37;
  assign wire149 = wire39;
  assign wire150 = {wire149, wire34};
  assign wire151 = (|(((7'h43) ?
                       $signed(wire148[(1'h1):(1'h0)]) : wire150) <= ((|$unsigned(wire35)) ?
                       ($unsigned(wire39) << wire148) : wire37[(1'h1):(1'h0)])));
  assign wire152 = (wire148 ? (8'h9d) : wire146[(4'he):(3'h7)]);
  assign wire153 = $signed(wire151);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module40  (y, clk, wire44, wire43, wire42, wire41);
  output wire [(32'h490):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire44;
  input wire signed [(5'h14):(1'h0)] wire43;
  input wire signed [(3'h4):(1'h0)] wire42;
  input wire signed [(4'hb):(1'h0)] wire41;
  wire signed [(5'h15):(1'h0)] wire145;
  wire signed [(5'h10):(1'h0)] wire144;
  wire signed [(4'hb):(1'h0)] wire143;
  wire [(5'h10):(1'h0)] wire142;
  wire [(5'h15):(1'h0)] wire141;
  wire [(3'h6):(1'h0)] wire140;
  wire signed [(2'h3):(1'h0)] wire139;
  wire [(4'he):(1'h0)] wire138;
  wire signed [(5'h11):(1'h0)] wire115;
  wire signed [(4'h9):(1'h0)] wire114;
  wire signed [(5'h15):(1'h0)] wire113;
  wire signed [(2'h3):(1'h0)] wire112;
  wire signed [(3'h7):(1'h0)] wire111;
  wire signed [(2'h2):(1'h0)] wire110;
  wire [(5'h10):(1'h0)] wire109;
  wire [(2'h3):(1'h0)] wire108;
  wire signed [(5'h10):(1'h0)] wire78;
  wire [(5'h12):(1'h0)] wire46;
  wire [(4'ha):(1'h0)] wire45;
  reg [(5'h11):(1'h0)] reg136 = (1'h0);
  reg [(3'h7):(1'h0)] reg135 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg131 = (1'h0);
  reg [(4'h9):(1'h0)] reg126 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg125 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg123 = (1'h0);
  reg signed [(4'he):(1'h0)] reg119 = (1'h0);
  reg [(4'hf):(1'h0)] reg117 = (1'h0);
  reg [(2'h3):(1'h0)] reg105 = (1'h0);
  reg signed [(4'he):(1'h0)] reg104 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg101 = (1'h0);
  reg [(4'ha):(1'h0)] reg99 = (1'h0);
  reg [(3'h6):(1'h0)] reg97 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg96 = (1'h0);
  reg [(4'hd):(1'h0)] reg93 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg91 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg90 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg88 = (1'h0);
  reg [(3'h7):(1'h0)] reg86 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg83 = (1'h0);
  reg [(4'hc):(1'h0)] reg82 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg76 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg74 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg69 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg64 = (1'h0);
  reg [(3'h4):(1'h0)] reg63 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg61 = (1'h0);
  reg [(3'h4):(1'h0)] reg59 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg56 = (1'h0);
  reg [(3'h6):(1'h0)] reg54 = (1'h0);
  reg [(4'hf):(1'h0)] reg50 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg137 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar134 = (1'h0);
  reg [(2'h3):(1'h0)] reg133 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg132 = (1'h0);
  reg [(4'hc):(1'h0)] reg130 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg129 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar128 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar127 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar124 = (1'h0);
  reg [(5'h10):(1'h0)] reg122 = (1'h0);
  reg [(4'hb):(1'h0)] reg121 = (1'h0);
  reg [(4'he):(1'h0)] reg120 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar118 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar116 = (1'h0);
  reg [(3'h5):(1'h0)] reg107 = (1'h0);
  reg [(4'hc):(1'h0)] reg106 = (1'h0);
  reg [(5'h14):(1'h0)] reg103 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar102 = (1'h0);
  reg [(5'h14):(1'h0)] reg100 = (1'h0);
  reg [(5'h13):(1'h0)] forvar98 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg95 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar94 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar92 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar89 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar87 = (1'h0);
  reg [(5'h11):(1'h0)] reg85 = (1'h0);
  reg [(5'h14):(1'h0)] forvar84 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg81 = (1'h0);
  reg [(4'hb):(1'h0)] forvar80 = (1'h0);
  reg [(3'h6):(1'h0)] forvar79 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg77 = (1'h0);
  reg [(4'hc):(1'h0)] reg75 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg73 = (1'h0);
  reg [(4'h8):(1'h0)] forvar72 = (1'h0);
  reg [(3'h7):(1'h0)] reg71 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg70 = (1'h0);
  reg [(4'he):(1'h0)] forvar68 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar67 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg66 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg65 = (1'h0);
  reg [(4'hc):(1'h0)] forvar62 = (1'h0);
  reg [(3'h7):(1'h0)] forvar60 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg58 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg57 = (1'h0);
  reg signed [(4'he):(1'h0)] reg55 = (1'h0);
  reg [(3'h4):(1'h0)] forvar53 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg52 = (1'h0);
  reg [(5'h12):(1'h0)] reg51 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg49 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar48 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar47 = (1'h0);
  assign y = {wire145,
                 wire144,
                 wire143,
                 wire142,
                 wire141,
                 wire140,
                 wire139,
                 wire138,
                 wire115,
                 wire114,
                 wire113,
                 wire112,
                 wire111,
                 wire110,
                 wire109,
                 wire108,
                 wire78,
                 wire46,
                 wire45,
                 reg136,
                 reg135,
                 reg131,
                 reg126,
                 reg125,
                 reg123,
                 reg119,
                 reg117,
                 reg105,
                 reg104,
                 reg101,
                 reg99,
                 reg97,
                 reg96,
                 reg93,
                 reg91,
                 reg90,
                 reg88,
                 reg86,
                 reg83,
                 reg82,
                 reg76,
                 reg74,
                 reg69,
                 reg64,
                 reg63,
                 reg61,
                 reg59,
                 reg56,
                 reg54,
                 reg50,
                 reg137,
                 forvar134,
                 reg133,
                 reg132,
                 reg130,
                 reg129,
                 forvar128,
                 forvar127,
                 forvar124,
                 reg122,
                 reg121,
                 reg120,
                 forvar118,
                 forvar116,
                 reg107,
                 reg106,
                 reg103,
                 forvar102,
                 reg100,
                 forvar98,
                 reg95,
                 forvar94,
                 forvar92,
                 forvar89,
                 forvar87,
                 reg85,
                 forvar84,
                 reg81,
                 forvar80,
                 forvar79,
                 reg77,
                 reg75,
                 reg73,
                 forvar72,
                 reg71,
                 reg70,
                 forvar68,
                 forvar67,
                 reg66,
                 reg65,
                 forvar62,
                 forvar60,
                 reg58,
                 reg57,
                 reg55,
                 forvar53,
                 reg52,
                 reg51,
                 reg49,
                 forvar48,
                 forvar47,
                 (1'h0)};
  assign wire45 = ($signed(((8'ha9) > ((wire44 < wire42) & ((8'hb0) ?
                          wire43 : wire43)))) ?
                      (~$signed(wire42[(2'h3):(1'h0)])) : ((^(wire41[(4'h8):(2'h3)] ?
                          ((8'hbb) | wire43) : wire43[(5'h12):(4'hb)])) >= {wire44[(2'h3):(1'h0)],
                          $signed((wire42 ? wire43 : wire41))}));
  assign wire46 = wire43;
  always
    @(posedge clk) begin
      for (forvar47 = (1'h0); (forvar47 < (2'h2)); forvar47 = (forvar47 + (1'h1)))
        begin
          for (forvar48 = (1'h0); (forvar48 < (2'h3)); forvar48 = (forvar48 + (1'h1)))
            begin
              reg49 = (^~((~|$unsigned((~&forvar48))) <= ((+forvar47) - wire44[(2'h2):(1'h1)])));
              reg50 <= wire45;
              reg51 = ($unsigned($signed((|$unsigned(wire43)))) ?
                  forvar47[(4'ha):(2'h2)] : $unsigned((|$unsigned($unsigned(wire42)))));
              reg52 = $unsigned((($unsigned(reg51[(4'ha):(3'h6)]) ?
                  ((wire45 ^~ wire41) <<< {(8'ha4),
                      reg49}) : $unsigned((8'ha4))) < {((wire41 != (8'hb7)) - $signed((7'h40))),
                  reg51[(4'ha):(3'h6)]}));
            end
        end
      for (forvar53 = (1'h0); (forvar53 < (1'h1)); forvar53 = (forvar53 + (1'h1)))
        begin
          if (wire44[(1'h0):(1'h0)])
            begin
              reg54 <= wire41[(2'h2):(2'h2)];
              reg55 = (reg52[(3'h7):(2'h3)] ?
                  (reg52 ?
                      (((-(8'ha5)) ? $unsigned(wire44) : wire46) ?
                          (8'hb0) : $signed((wire42 >>> reg52))) : {reg51[(5'h10):(5'h10)],
                          reg49}) : reg54[(1'h0):(1'h0)]);
              reg56 <= (^(forvar47 + (8'hb2)));
              reg57 = ({(reg51 && ((wire41 ?
                      reg52 : wire45) == $unsigned(reg52))),
                  (&(((8'hba) ? reg51 : reg49) ?
                      {wire43, (8'ha2)} : ((8'hb8) ^~ reg56)))} | wire44);
            end
          else
            begin
              reg54 <= ((+{(^~(forvar48 <<< wire42))}) ?
                  (-(-$signed($signed(reg52)))) : $signed((({wire43, reg56} ?
                          (forvar47 ? wire46 : (8'h9d)) : $signed(forvar53)) ?
                      reg49 : $signed(((7'h44) || wire43)))));
              reg56 <= {forvar53, forvar53[(1'h1):(1'h0)]};
              reg57 = ($unsigned((+((reg57 ?
                      forvar53 : (8'h9e)) >= reg57[(3'h6):(3'h6)]))) ?
                  reg57[(2'h3):(1'h1)] : ((~^$signed(((8'hbd) ?
                          forvar48 : (8'haa)))) ?
                      reg57 : wire41));
              reg58 = (~&{(~($signed(forvar47) ? (|reg57) : {(8'hb0)}))});
              reg59 <= $signed((&wire43));
            end
          for (forvar60 = (1'h0); (forvar60 < (3'h4)); forvar60 = (forvar60 + (1'h1)))
            begin
              reg61 <= ({(((reg56 ? forvar48 : reg49) ?
                          (reg50 >= forvar53) : ((8'hb2) == wire42)) << {(~^(8'hb3))}),
                      (8'hb4)} ?
                  $signed((&(~&reg49[(2'h2):(1'h1)]))) : (~^$unsigned((reg54[(2'h3):(2'h3)] >>> (wire41 * reg54)))));
            end
          for (forvar62 = (1'h0); (forvar62 < (3'h4)); forvar62 = (forvar62 + (1'h1)))
            begin
              reg63 <= {reg50[(4'he):(4'hd)]};
              reg64 <= $unsigned($signed((+$unsigned($signed(forvar47)))));
              reg65 = (-$unsigned({((~|reg52) > $signed(wire46))}));
              reg66 = {((-reg64) == ((|$unsigned(wire41)) ?
                      reg55[(4'ha):(4'h9)] : ((wire41 ? reg51 : forvar53) ?
                          $signed(wire43) : (8'hbb))))};
            end
        end
      for (forvar67 = (1'h0); (forvar67 < (2'h2)); forvar67 = (forvar67 + (1'h1)))
        begin
          for (forvar68 = (1'h0); (forvar68 < (3'h4)); forvar68 = (forvar68 + (1'h1)))
            begin
              reg69 <= reg64[(3'h6):(2'h3)];
              reg70 = reg64;
              reg71 = ({forvar60[(2'h2):(2'h2)],
                      (reg70[(3'h7):(1'h0)] ?
                          ({wire43, forvar60} ?
                              wire45 : (~&reg65)) : ((reg64 < reg64) ?
                              reg55[(3'h4):(1'h0)] : reg50))} ?
                  (~(~^($signed((7'h44)) ?
                      {wire43, wire43} : forvar47))) : reg59[(2'h2):(1'h0)]);
            end
          for (forvar72 = (1'h0); (forvar72 < (1'h0)); forvar72 = (forvar72 + (1'h1)))
            begin
              reg73 = ((&$signed({reg52[(2'h2):(1'h1)]})) || $unsigned((($unsigned(reg66) << $signed(reg56)) ?
                  wire45[(3'h6):(3'h5)] : $unsigned((reg51 ? reg58 : reg49)))));
              reg74 <= $signed($signed(forvar47[(3'h6):(1'h0)]));
              reg75 = {reg55};
            end
          reg76 <= $unsigned(reg54[(1'h0):(1'h0)]);
          reg77 = reg73[(4'he):(4'hb)];
        end
    end
  assign wire78 = $signed((^~$signed(($unsigned(reg74) ?
                      (^~wire42) : (^~reg50)))));
  always
    @(posedge clk) begin
      for (forvar79 = (1'h0); (forvar79 < (2'h2)); forvar79 = (forvar79 + (1'h1)))
        begin
          for (forvar80 = (1'h0); (forvar80 < (2'h2)); forvar80 = (forvar80 + (1'h1)))
            begin
              reg81 = wire46;
              reg82 <= ((wire44[(3'h5):(2'h2)] ?
                      ((&reg56) ?
                          {(wire46 ? (8'had) : (8'hbe)),
                              (wire46 ? reg74 : reg54)} : ($signed(wire41) ?
                              reg74[(4'h9):(4'h9)] : $unsigned(reg50))) : (((^(8'ha8)) << $signed(reg74)) ?
                          reg64[(3'h7):(1'h1)] : reg50[(4'hd):(3'h5)])) ?
                  {({(&wire44)} < $signed(reg59[(2'h2):(1'h0)])),
                      ((8'hb9) + (&reg69))} : wire42[(2'h2):(2'h2)]);
              reg83 <= reg64;
            end
          for (forvar84 = (1'h0); (forvar84 < (3'h4)); forvar84 = (forvar84 + (1'h1)))
            begin
              reg85 = (8'ha0);
              reg86 <= ($unsigned(reg54) ?
                  wire78 : ((((forvar79 ? reg69 : reg85) ^ $signed(wire43)) ?
                      $unsigned((reg64 - (8'hba))) : (8'ha8)) >= reg69));
            end
          for (forvar87 = (1'h0); (forvar87 < (2'h3)); forvar87 = (forvar87 + (1'h1)))
            begin
              reg88 <= reg54;
            end
          for (forvar89 = (1'h0); (forvar89 < (3'h4)); forvar89 = (forvar89 + (1'h1)))
            begin
              reg90 <= $unsigned($unsigned($unsigned(({reg54, wire42} ?
                  $unsigned(wire78) : $signed(wire45)))));
            end
        end
      reg91 <= $signed(($unsigned({reg56}) ?
          (wire45[(4'h8):(1'h0)] ?
              (~|$signed(forvar84)) : {(^wire43)}) : {reg81[(3'h7):(1'h0)],
              ($unsigned(wire45) + (^reg56))}));
      for (forvar92 = (1'h0); (forvar92 < (1'h0)); forvar92 = (forvar92 + (1'h1)))
        begin
          reg93 <= {reg56[(1'h0):(1'h0)], (~&reg69[(3'h5):(2'h3)])};
          for (forvar94 = (1'h0); (forvar94 < (3'h4)); forvar94 = (forvar94 + (1'h1)))
            begin
              reg95 = forvar84[(4'hd):(3'h7)];
              reg96 <= ((&$signed($unsigned($signed(reg69)))) ?
                  {(reg90 ?
                          reg63[(2'h3):(2'h3)] : $signed((forvar79 ?
                              reg69 : (8'hb6))))} : ($unsigned(($unsigned(reg74) & $signed(reg54))) ?
                      $unsigned($unsigned($signed(reg76))) : ($signed($unsigned(reg82)) ?
                          reg74[(4'ha):(3'h5)] : ((~reg64) ?
                              wire43 : $unsigned((8'hb9))))));
              reg97 <= $unsigned({(((~^(8'ha4)) >>> (|reg74)) ?
                      (8'hbc) : (&(wire42 >> reg74))),
                  (~{(&forvar80)})});
            end
          for (forvar98 = (1'h0); (forvar98 < (1'h1)); forvar98 = (forvar98 + (1'h1)))
            begin
              reg99 <= reg96;
              reg100 = ((reg91[(3'h6):(3'h4)] - reg74) ?
                  ((forvar79 + (^$signed((8'h9f)))) < (|($unsigned(forvar98) > forvar80[(1'h1):(1'h1)]))) : (^~((reg54 ?
                          $unsigned(reg76) : wire41) ?
                      ($signed(reg88) + {forvar80,
                          forvar80}) : ($unsigned(forvar84) ?
                          reg56[(2'h3):(1'h0)] : $signed(reg88)))));
              reg101 <= reg100[(3'h7):(1'h0)];
            end
          for (forvar102 = (1'h0); (forvar102 < (2'h3)); forvar102 = (forvar102 + (1'h1)))
            begin
              reg103 = $unsigned(((^~$signed($unsigned(forvar102))) ?
                  reg86 : (~&{((8'ha4) ^ reg93), ((8'ha9) ? reg59 : reg69)})));
              reg104 <= $unsigned(forvar98[(2'h3):(2'h3)]);
              reg105 <= reg76[(4'hd):(1'h1)];
              reg106 = reg81[(2'h2):(1'h1)];
              reg107 = reg91[(2'h2):(1'h0)];
            end
        end
    end
  assign wire108 = $unsigned($signed(($unsigned($unsigned(reg86)) ~^ (^(reg90 < reg99)))));
  assign wire109 = (~^$signed($unsigned(((reg105 ~^ reg74) ?
                       $unsigned(reg50) : reg83))));
  assign wire110 = $unsigned((8'hb7));
  assign wire111 = reg91;
  assign wire112 = (((~&wire111[(3'h5):(2'h2)]) >= (+(-(8'hb0)))) ?
                       (~&reg59[(1'h1):(1'h1)]) : ({reg56,
                           (!(reg76 ?
                               reg90 : (8'hbf)))} - $signed($signed({reg54}))));
  assign wire113 = wire78;
  assign wire114 = (({wire78[(4'h8):(3'h6)],
                           $signed($signed((7'h42)))} >= ({(&reg96)} & (+{(8'hb9)}))) ?
                       $unsigned($signed(($unsigned(reg61) && {reg91,
                           reg99}))) : (~$unsigned(($signed(reg86) ?
                           ((8'haa) ?
                               (8'hbc) : (8'hbd)) : wire43[(2'h2):(1'h1)]))));
  assign wire115 = ($unsigned(($unsigned((8'had)) * (8'hbb))) ?
                       wire45[(4'ha):(2'h2)] : $signed($unsigned($signed(wire42[(1'h1):(1'h1)]))));
  always
    @(posedge clk) begin
      for (forvar116 = (1'h0); (forvar116 < (2'h2)); forvar116 = (forvar116 + (1'h1)))
        begin
          reg117 <= ($signed($signed(wire113)) * reg86);
          for (forvar118 = (1'h0); (forvar118 < (2'h3)); forvar118 = (forvar118 + (1'h1)))
            begin
              reg119 <= reg61;
              reg120 = {($unsigned(((~|wire41) ?
                      $signed((8'hac)) : reg61[(1'h0):(1'h0)])) < reg83),
                  {$signed(($signed((8'hb9)) + reg82)),
                      (((|reg76) ?
                          ((8'hb3) | reg90) : (wire113 ?
                              reg96 : wire115)) >> wire110)}};
              reg121 = (reg96[(2'h3):(2'h2)] | (^~($signed($unsigned(reg50)) ?
                  wire78[(2'h3):(1'h0)] : $signed(wire110[(1'h1):(1'h0)]))));
              reg122 = $unsigned(((~&wire42[(3'h4):(2'h3)]) & $signed(((8'h9e) ?
                  (wire112 ? forvar118 : reg101) : reg104[(4'he):(4'hd)]))));
              reg123 <= $unsigned(reg64[(4'ha):(2'h3)]);
            end
          for (forvar124 = (1'h0); (forvar124 < (1'h0)); forvar124 = (forvar124 + (1'h1)))
            begin
              reg125 <= $unsigned(reg76);
              reg126 <= $unsigned(wire44);
            end
        end
      for (forvar127 = (1'h0); (forvar127 < (3'h4)); forvar127 = (forvar127 + (1'h1)))
        begin
          for (forvar128 = (1'h0); (forvar128 < (1'h0)); forvar128 = (forvar128 + (1'h1)))
            begin
              reg129 = reg56[(2'h2):(2'h2)];
              reg130 = (~&(reg50[(4'hb):(2'h3)] ?
                  reg82[(3'h7):(3'h5)] : (~|wire111)));
              reg131 <= wire108;
              reg132 = (|{(~^((reg125 <= (7'h42)) ~^ (-reg64)))});
              reg133 = (({($unsigned(wire41) ?
                          {wire43, reg129} : (reg63 == wire46))} ?
                  reg130 : ((~(wire41 | reg64)) ?
                      reg97 : (^~(reg122 ?
                          reg119 : reg69)))) * (-reg120[(3'h6):(3'h4)]));
            end
          for (forvar134 = (1'h0); (forvar134 < (1'h1)); forvar134 = (forvar134 + (1'h1)))
            begin
              reg135 <= {reg133[(1'h0):(1'h0)],
                  ($unsigned(({reg123, reg82} ? (&reg101) : reg119)) ?
                      ($signed($unsigned((8'hb2))) > (8'ha3)) : {reg90[(3'h5):(3'h5)]})};
              reg136 <= wire112[(2'h2):(2'h2)];
            end
        end
      reg137 = (forvar128 ?
          (((^~$signed(reg132)) <<< wire112[(2'h3):(1'h0)]) == (|(^~(reg125 << reg104)))) : {$signed($signed(reg83))});
    end
  assign wire138 = (8'hbd);
  assign wire139 = reg101;
  assign wire140 = {($signed($unsigned((~|reg123))) ?
                           ((8'h9d) ?
                               $unsigned({(8'haa), reg126}) : ({reg136,
                                       (8'hbc)} ?
                                   (+(8'ha3)) : $unsigned(reg74))) : ($signed({reg74,
                                   wire138}) ?
                               $signed($unsigned(wire108)) : {(8'ha8)})),
                       ($signed(wire139) ^ reg74)};
  assign wire141 = reg56[(2'h3):(1'h0)];
  assign wire142 = reg90;
  assign wire143 = wire111[(3'h5):(1'h1)];
  assign wire144 = wire140;
  assign wire145 = $signed(wire111);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module308
#(parameter param358 = (^~(((|{(8'ha2), (8'h9d)}) >> (((8'hb4) ? (8'hb1) : (8'ha3)) && ((7'h44) ^~ (8'hbe)))) ? (({(8'ha0), (8'hb3)} ? (+(8'hb3)) : {(8'hae)}) ? (((8'ha3) > (8'ha4)) ? (+(8'hae)) : {(8'had)}) : (!((8'hae) ^~ (7'h42)))) : ((((8'hb7) ^ (8'hbc)) ? ((8'hbd) || (7'h42)) : (~^(8'hb5))) ? (((7'h40) ? (8'hbe) : (8'ha5)) <<< (|(8'ha8))) : ((~&(8'hbb)) <= (8'hb1))))))
(y, clk, wire312, wire311, wire310, wire309);
  output wire [(32'h1ea):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hf):(1'h0)] wire312;
  input wire [(4'h8):(1'h0)] wire311;
  input wire signed [(3'h5):(1'h0)] wire310;
  input wire signed [(3'h7):(1'h0)] wire309;
  wire [(2'h2):(1'h0)] wire357;
  wire signed [(2'h2):(1'h0)] wire356;
  wire signed [(3'h7):(1'h0)] wire355;
  wire signed [(3'h5):(1'h0)] wire354;
  wire [(4'hb):(1'h0)] wire353;
  wire signed [(3'h4):(1'h0)] wire352;
  wire signed [(5'h15):(1'h0)] wire351;
  wire signed [(2'h2):(1'h0)] wire350;
  wire signed [(4'hc):(1'h0)] wire349;
  wire [(5'h13):(1'h0)] wire348;
  wire [(5'h10):(1'h0)] wire347;
  wire [(5'h13):(1'h0)] wire346;
  wire [(4'hc):(1'h0)] wire314;
  wire signed [(5'h10):(1'h0)] wire313;
  reg [(3'h7):(1'h0)] reg344 = (1'h0);
  reg [(4'hc):(1'h0)] reg343 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg339 = (1'h0);
  reg [(3'h6):(1'h0)] reg338 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg337 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg335 = (1'h0);
  reg [(5'h14):(1'h0)] reg330 = (1'h0);
  reg [(5'h13):(1'h0)] reg328 = (1'h0);
  reg [(5'h14):(1'h0)] reg326 = (1'h0);
  reg [(2'h2):(1'h0)] reg324 = (1'h0);
  reg [(3'h5):(1'h0)] reg320 = (1'h0);
  reg [(3'h7):(1'h0)] reg319 = (1'h0);
  reg [(5'h14):(1'h0)] reg316 = (1'h0);
  reg [(3'h5):(1'h0)] reg315 = (1'h0);
  reg [(5'h13):(1'h0)] reg345 = (1'h0);
  reg [(5'h13):(1'h0)] forvar342 = (1'h0);
  reg [(5'h10):(1'h0)] reg341 = (1'h0);
  reg [(2'h3):(1'h0)] reg340 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar336 = (1'h0);
  reg [(4'hb):(1'h0)] forvar334 = (1'h0);
  reg [(5'h13):(1'h0)] reg333 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg332 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg331 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar329 = (1'h0);
  reg [(5'h10):(1'h0)] forvar327 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar325 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg323 = (1'h0);
  reg [(3'h4):(1'h0)] reg322 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg321 = (1'h0);
  reg [(2'h2):(1'h0)] forvar318 = (1'h0);
  reg [(4'h9):(1'h0)] forvar317 = (1'h0);
  assign y = {wire357,
                 wire356,
                 wire355,
                 wire354,
                 wire353,
                 wire352,
                 wire351,
                 wire350,
                 wire349,
                 wire348,
                 wire347,
                 wire346,
                 wire314,
                 wire313,
                 reg344,
                 reg343,
                 reg339,
                 reg338,
                 reg337,
                 reg335,
                 reg330,
                 reg328,
                 reg326,
                 reg324,
                 reg320,
                 reg319,
                 reg316,
                 reg315,
                 reg345,
                 forvar342,
                 reg341,
                 reg340,
                 forvar336,
                 forvar334,
                 reg333,
                 reg332,
                 reg331,
                 forvar329,
                 forvar327,
                 forvar325,
                 reg323,
                 reg322,
                 reg321,
                 forvar318,
                 forvar317,
                 (1'h0)};
  assign wire313 = (wire310[(1'h1):(1'h1)] ?
                       $signed(wire312[(3'h4):(1'h0)]) : (8'h9f));
  assign wire314 = wire309[(2'h3):(2'h2)];
  always
    @(posedge clk) begin
      reg315 <= $unsigned(wire313);
      reg316 <= $unsigned(((wire313 * wire310) ?
          wire312[(3'h4):(2'h3)] : $signed($unsigned($unsigned(wire311)))));
      for (forvar317 = (1'h0); (forvar317 < (2'h2)); forvar317 = (forvar317 + (1'h1)))
        begin
          for (forvar318 = (1'h0); (forvar318 < (2'h2)); forvar318 = (forvar318 + (1'h1)))
            begin
              reg319 <= $unsigned(((($unsigned(reg316) - (wire313 ~^ reg315)) && (~|(^~(8'haf)))) && $signed($signed((forvar318 ?
                  wire314 : reg315)))));
              reg320 <= $signed((8'hb0));
              reg321 = reg319;
              reg322 = forvar318;
            end
        end
      if (reg319[(1'h1):(1'h0)])
        begin
          reg323 = (reg320 ?
              wire314[(2'h2):(2'h2)] : $unsigned((forvar317[(1'h0):(1'h0)] * ((!forvar317) ?
                  reg316 : (forvar318 >> reg316)))));
        end
      else
        begin
          reg324 <= $unsigned((reg319 ?
              $signed(((~&(8'h9f)) ?
                  (wire311 ^ reg320) : $unsigned(wire309))) : ($signed(wire309[(3'h4):(1'h1)]) & (^$unsigned(reg319)))));
          for (forvar325 = (1'h0); (forvar325 < (2'h3)); forvar325 = (forvar325 + (1'h1)))
            begin
              reg326 <= $unsigned($signed($unsigned(wire313)));
            end
          for (forvar327 = (1'h0); (forvar327 < (3'h4)); forvar327 = (forvar327 + (1'h1)))
            begin
              reg328 <= wire314[(3'h5):(1'h0)];
            end
          for (forvar329 = (1'h0); (forvar329 < (1'h1)); forvar329 = (forvar329 + (1'h1)))
            begin
              reg330 <= {(!reg320[(1'h0):(1'h0)])};
              reg331 = $unsigned((wire312[(4'hd):(4'ha)] ?
                  $signed(wire310[(2'h2):(1'h0)]) : $signed((^$unsigned(reg323)))));
              reg332 = $unsigned($signed($unsigned(reg328)));
              reg333 = {forvar325,
                  $signed((wire313[(2'h3):(1'h1)] ?
                      $unsigned($unsigned(reg328)) : {reg319}))};
            end
        end
      for (forvar334 = (1'h0); (forvar334 < (3'h4)); forvar334 = (forvar334 + (1'h1)))
        begin
          reg335 <= (forvar334[(3'h5):(2'h2)] ?
              {((reg332 ? $signed(wire313) : $unsigned(reg326)) > (~^((8'ha7) ?
                      forvar318 : reg330))),
                  $unsigned(forvar334)} : reg319);
          for (forvar336 = (1'h0); (forvar336 < (1'h0)); forvar336 = (forvar336 + (1'h1)))
            begin
              reg337 <= ($unsigned($signed(wire313)) ?
                  reg330[(4'h9):(1'h1)] : $signed((+($unsigned(forvar336) ?
                      $unsigned((8'hb4)) : (reg316 + reg315)))));
              reg338 <= ($signed(((!(|(8'hbf))) ?
                      ((+reg332) ?
                          wire312[(4'he):(3'h6)] : $signed(reg315)) : wire312[(1'h0):(1'h0)])) ?
                  reg324 : (~reg320[(2'h3):(2'h3)]));
              reg339 <= reg316[(4'he):(4'hd)];
              reg340 = $unsigned($signed($signed($signed(forvar336[(1'h1):(1'h1)]))));
            end
          reg341 = (~|reg324[(1'h1):(1'h0)]);
          for (forvar342 = (1'h0); (forvar342 < (2'h2)); forvar342 = (forvar342 + (1'h1)))
            begin
              reg343 <= (reg335[(1'h0):(1'h0)] ?
                  reg337[(3'h4):(3'h4)] : (^(8'h9e)));
              reg344 <= reg328;
            end
          reg345 = reg324[(1'h1):(1'h1)];
        end
    end
  assign wire346 = (($signed(wire314) < ((|$signed(wire312)) ~^ reg338[(2'h2):(1'h0)])) >>> (~($signed({reg339,
                       reg326}) != ((~^reg339) == (8'hac)))));
  assign wire347 = ($unsigned((((wire312 + reg337) ?
                           (reg330 ? reg328 : reg337) : {reg339,
                               wire310}) ~^ wire309[(1'h1):(1'h1)])) ?
                       ({{reg330[(5'h14):(3'h7)]}} ?
                           (~|(wire310 ?
                               (reg315 <= (8'hae)) : reg326[(5'h10):(4'hb)])) : $unsigned((|(reg337 ?
                               wire311 : (7'h43))))) : reg344);
  assign wire348 = $unsigned(reg328);
  assign wire349 = (reg326[(2'h3):(2'h2)] * $unsigned($unsigned(((~&(8'hb5)) ?
                       (~|reg320) : $unsigned(reg337)))));
  assign wire350 = ((&reg335[(1'h0):(1'h0)]) ~^ $unsigned($signed({wire348})));
  assign wire351 = (reg319 ?
                       $signed(wire348) : $signed($signed({$signed(reg320),
                           wire348})));
  assign wire352 = (8'haf);
  assign wire353 = (wire309[(3'h4):(2'h2)] ?
                       reg338[(3'h6):(1'h1)] : ($signed(reg326) ~^ ($signed({reg326,
                               wire350}) ?
                           (~&(8'ha9)) : {wire312[(4'hd):(4'hd)]})));
  assign wire354 = (~|wire351[(4'ha):(3'h4)]);
  assign wire355 = reg319;
  assign wire356 = ($unsigned(reg335[(4'hf):(4'hd)]) ~^ wire348[(5'h10):(4'hb)]);
  assign wire357 = (wire349 > ((-$unsigned(wire355[(3'h5):(3'h5)])) <<< (($signed(reg330) <= reg335[(5'h12):(4'ha)]) ?
                       wire355 : $signed((wire312 ? reg330 : (8'ha2))))));
endmodule