(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param44 = ((({(8'had)} & (8'hb0)) ? (!(^~(8'ha3))) : (~|(~&(8'had)))) ? {(((8'h9e) ? (8'haa) : (8'h9e)) * (^(8'hb0)))} : ((((8'h9c) & (8'h9d)) ? (-(8'h9d)) : ((8'hab) != (8'hae))) ? (((8'hac) >>> (8'had)) ? ((8'ha6) <<< (8'haa)) : ((8'hb0) | (8'ha9))) : (~((8'hae) ^ (8'h9c))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire42;
  wire [(4'hb):(1'h0)] wire41;
  wire [(4'h9):(1'h0)] wire40;
  wire signed [(4'h8):(1'h0)] wire38;
  wire [(3'h4):(1'h0)] wire10;
  wire [(4'h9):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire8;
  wire [(4'ha):(1'h0)] wire7;
  wire signed [(4'h9):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire4;
  assign y = {wire42,
                 wire41,
                 wire40,
                 wire38,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = ($signed(wire0[(2'h3):(1'h1)]) * (~&(wire2 ?
                     (wire3 ? wire1 : (8'ha7)) : wire0)));
  assign wire5 = ($signed(((wire4 << wire1) != $unsigned(wire1))) ?
                     (&$unsigned(wire0)) : $signed(wire3));
  assign wire6 = wire0[(2'h2):(2'h2)];
  assign wire7 = $unsigned(wire1[(4'h9):(3'h7)]);
  assign wire8 = (wire7[(2'h2):(2'h2)] ?
                     ((wire6 - wire6) >> wire7[(2'h3):(1'h1)]) : wire5[(1'h0):(1'h0)]);
  assign wire9 = wire2[(2'h3):(1'h0)];
  assign wire10 = ($unsigned(wire7[(1'h1):(1'h1)]) && $signed(wire9));
  module11 #() modinst39 (wire38, clk, wire9, wire8, wire3, wire4);
  assign wire40 = wire8;
  assign wire41 = (wire5[(2'h3):(2'h2)] * {$unsigned(wire4[(1'h0):(1'h0)])});
  module11 #() modinst43 (.clk(clk), .wire13(wire38), .wire12(wire5), .wire15(wire6), .wire14(wire2), .y(wire42));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire15;
  input wire signed [(3'h5):(1'h0)] wire14;
  input wire signed [(4'h8):(1'h0)] wire13;
  input wire signed [(4'hb):(1'h0)] wire12;
  wire signed [(3'h5):(1'h0)] wire37;
  wire signed [(4'h9):(1'h0)] wire36;
  wire signed [(2'h3):(1'h0)] wire34;
  wire [(4'h9):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire20;
  wire signed [(2'h3):(1'h0)] wire19;
  reg signed [(4'ha):(1'h0)] reg18 = (1'h0);
  reg [(4'h8):(1'h0)] reg17 = (1'h0);
  reg [(2'h3):(1'h0)] reg16 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire34,
                 wire21,
                 wire20,
                 wire19,
                 reg18,
                 reg17,
                 reg16,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg16 <= {wire15};
      reg17 <= wire14[(2'h2):(2'h2)];
      reg18 <= {wire13[(3'h6):(1'h0)]};
    end
  assign wire19 = (wire13[(2'h2):(1'h1)] == ((|$signed(wire15)) ^~ reg18));
  assign wire20 = (!$unsigned($unsigned((wire14 ? reg18 : wire12))));
  assign wire21 = {(wire12 >> ((!(8'hb0)) ? reg16 : (wire20 + wire15)))};
  module22 #() modinst35 (wire34, clk, reg18, reg17, wire13, wire15);
  assign wire36 = $signed(wire20);
  assign wire37 = reg16;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module22  (y, clk, wire26, wire25, wire24, wire23);
  output wire [(32'h2b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire26;
  input wire signed [(3'h4):(1'h0)] wire25;
  input wire signed [(4'h8):(1'h0)] wire24;
  input wire signed [(4'h9):(1'h0)] wire23;
  wire signed [(3'h5):(1'h0)] wire33;
  wire signed [(2'h2):(1'h0)] wire32;
  wire [(3'h4):(1'h0)] wire31;
  wire signed [(3'h6):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire29;
  wire [(4'ha):(1'h0)] wire28;
  wire signed [(4'h9):(1'h0)] wire27;
  assign y = {wire33, wire32, wire31, wire30, wire29, wire28, wire27, (1'h0)};
  assign wire27 = $unsigned((wire26 ?
                      $unsigned((|wire23)) : ($unsigned(wire25) | $unsigned(wire25))));
  assign wire28 = wire26[(3'h7):(3'h6)];
  assign wire29 = wire24;
  assign wire30 = $unsigned((wire24 >>> wire23[(3'h6):(3'h6)]));
  assign wire31 = (~^(wire28 ?
                      ((wire24 - wire28) - $signed(wire30)) : (((8'h9e) < wire23) ?
                          ((8'hae) ? wire23 : wire29) : wire26)));
  assign wire32 = (($signed($unsigned(wire24)) ? wire25 : {wire29}) ?
                      $unsigned(wire26[(3'h7):(3'h5)]) : $unsigned((~wire31[(3'h4):(1'h1)])));
  assign wire33 = (wire24[(2'h2):(1'h1)] | (~^{{wire23}}));
endmodule