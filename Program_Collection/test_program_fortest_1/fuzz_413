(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire60;
  wire [(4'h8):(1'h0)] wire59;
  wire signed [(4'h8):(1'h0)] wire58;
  wire signed [(2'h3):(1'h0)] wire54;
  wire [(3'h4):(1'h0)] wire52;
  wire [(3'h5):(1'h0)] wire50;
  wire [(2'h3):(1'h0)] wire5;
  wire signed [(3'h4):(1'h0)] wire4;
  reg signed [(3'h6):(1'h0)] reg57 = (1'h0);
  reg [(4'h8):(1'h0)] reg56 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg55 = (1'h0);
  assign y = {wire60,
                 wire59,
                 wire58,
                 wire54,
                 wire52,
                 wire50,
                 wire5,
                 wire4,
                 reg57,
                 reg56,
                 reg55,
                 (1'h0)};
  assign wire4 = (!($unsigned({(8'ha9)}) < (wire3 * $unsigned(wire0))));
  assign wire5 = ($signed(wire2[(1'h1):(1'h0)]) != (+((~wire3) + wire4)));
  module6 #() modinst51 (.clk(clk), .wire8(wire4), .wire9(wire0), .y(wire50), .wire10(wire2), .wire7(wire3));
  module20 #() modinst53 (.wire22(wire1), .wire21(wire2), .wire23(wire50), .clk(clk), .y(wire52), .wire24(wire5));
  assign wire54 = $signed((8'ha7));
  always
    @(posedge clk) begin
      reg55 <= (((-$unsigned(wire2)) - (wire4[(1'h1):(1'h1)] ?
          (wire54 <<< wire52) : (wire1 - wire54))) > ((((8'ha5) ?
              (8'ha8) : wire2) ?
          (wire2 ? wire2 : wire4) : (-wire2)) + (|wire52[(2'h2):(1'h0)])));
      reg56 <= ($unsigned($unsigned((~wire5))) >> wire0[(4'hb):(4'h8)]);
      reg57 <= (($unsigned(wire54[(1'h0):(1'h0)]) > (&$unsigned(reg55))) || (reg56 != {wire52}));
    end
  assign wire58 = wire3;
  assign wire59 = (reg57[(1'h1):(1'h0)] ?
                      $signed($signed($unsigned(reg56))) : $unsigned(reg56));
  assign wire60 = $unsigned(wire59);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param49 = (&(((8'hab) ^ ((8'ha8) ? (8'ha1) : (8'h9e))) ? {{(8'hac)}} : (((8'ha8) ? (8'ha4) : (8'h9c)) == (~^(8'h9c))))))
(y, clk, wire7, wire8, wire9, wire10);
  output wire [(32'h61):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire7;
  input wire [(3'h4):(1'h0)] wire8;
  input wire [(4'hb):(1'h0)] wire9;
  input wire [(4'h8):(1'h0)] wire10;
  wire signed [(3'h4):(1'h0)] wire46;
  wire [(3'h4):(1'h0)] wire45;
  wire [(4'ha):(1'h0)] wire44;
  wire [(4'ha):(1'h0)] wire43;
  wire [(3'h5):(1'h0)] wire42;
  wire signed [(4'h9):(1'h0)] wire14;
  wire [(3'h4):(1'h0)] wire18;
  wire signed [(3'h6):(1'h0)] wire19;
  wire signed [(2'h2):(1'h0)] wire40;
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg47 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg11 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg12 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg15 = (1'h0);
  reg [(4'h9):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg17 = (1'h0);
  assign y = {wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire14,
                 wire18,
                 wire19,
                 wire40,
                 reg48,
                 reg47,
                 reg11,
                 reg12,
                 reg13,
                 reg15,
                 reg16,
                 reg17,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg11 <= ((({wire9} ~^ wire7[(1'h0):(1'h0)]) ?
              (((8'h9f) > wire9) ?
                  {wire9} : $signed((8'ha8))) : $signed((wire8 ?
                  wire8 : wire8))) ?
          $unsigned(($unsigned(wire8) & wire7[(3'h5):(3'h5)])) : (wire10[(1'h0):(1'h0)] <= ((wire10 <<< wire9) ^ (!(8'ha7)))));
      reg12 <= ((~^$unsigned($unsigned(wire8))) ?
          $unsigned((~&wire7)) : (($signed((8'ha4)) ?
                  (reg11 ? wire10 : reg11) : (wire8 ? wire8 : wire7)) ?
              $unsigned(wire9) : ($unsigned(wire10) ?
                  (wire8 ? wire9 : wire10) : ((8'ha9) ? reg11 : wire7))));
      reg13 <= wire8;
    end
  assign wire14 = {wire9[(3'h7):(1'h1)]};
  always
    @(posedge clk) begin
      reg15 <= reg11;
      reg16 <= (((wire8[(1'h1):(1'h0)] ? (reg12 & wire14) : reg15) >= wire14) ?
          reg15 : $signed((~$signed(reg15))));
      reg17 <= $signed((reg12 << $signed((reg15 ? (8'haa) : wire9))));
    end
  assign wire18 = (~^$unsigned(({(8'ha9)} ? (wire9 & reg16) : $signed(reg16))));
  assign wire19 = $unsigned((&($unsigned(reg13) | wire8[(1'h1):(1'h0)])));
  module20 #() modinst41 (wire40, clk, reg11, wire10, wire18, wire7);
  assign wire42 = $unsigned(wire14);
  assign wire43 = wire19;
  assign wire44 = wire10;
  assign wire45 = (^(+((^~(8'ha7)) >= (wire43 ? wire43 : wire44))));
  assign wire46 = (+((^wire40[(1'h0):(1'h0)]) ?
                      $unsigned((&wire19)) : $unsigned($unsigned(wire18))));
  always
    @(posedge clk) begin
      reg47 <= ((^(|(wire18 * wire19))) ?
          wire8 : $unsigned(reg12[(1'h1):(1'h0)]));
      reg48 <= (~wire45[(2'h2):(2'h2)]);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20  (y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire24;
  input wire [(3'h4):(1'h0)] wire23;
  input wire [(3'h4):(1'h0)] wire22;
  input wire [(3'h7):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire39;
  wire [(2'h2):(1'h0)] wire38;
  wire signed [(2'h2):(1'h0)] wire36;
  wire signed [(3'h5):(1'h0)] wire35;
  wire [(2'h3):(1'h0)] wire34;
  wire signed [(3'h4):(1'h0)] wire33;
  wire [(4'h8):(1'h0)] wire32;
  wire signed [(3'h5):(1'h0)] wire31;
  wire signed [(3'h6):(1'h0)] wire25;
  reg [(4'h8):(1'h0)] reg37 = (1'h0);
  reg [(3'h5):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg29 = (1'h0);
  reg [(2'h2):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg27 = (1'h0);
  reg [(4'ha):(1'h0)] reg26 = (1'h0);
  assign y = {wire39,
                 wire38,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire25,
                 reg37,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire25 = $unsigned($signed($signed(wire22)));
  always
    @(posedge clk) begin
      if ($signed((wire22[(2'h3):(2'h3)] ? (~&$signed(wire24)) : wire21)))
        begin
          if ((~^(|{wire21[(1'h1):(1'h1)]})))
            begin
              reg26 <= (!(8'hae));
              reg27 <= (8'ha1);
              reg28 <= ((&wire21[(1'h1):(1'h0)]) ?
                  wire24 : {((wire24 ~^ wire24) ? $signed(wire22) : {wire24})});
            end
          else
            begin
              reg26 <= (($signed($unsigned(reg27)) ?
                  reg28[(1'h0):(1'h0)] : (8'ha9)) | reg27);
            end
          reg29 <= (((8'hb0) ? wire21[(3'h5):(1'h1)] : (!$unsigned(wire25))) ?
              (~&wire24[(2'h3):(2'h2)]) : (($signed(reg27) & wire22) & $signed($unsigned(wire23))));
        end
      else
        begin
          if (((~&$signed($unsigned(wire25))) ?
              ((|$unsigned((8'hb0))) <= (^~$unsigned(wire22))) : reg26))
            begin
              reg26 <= $signed((&$unsigned($unsigned(wire21))));
              reg27 <= (^~((wire22[(2'h3):(1'h0)] ^~ ((8'haf) | wire25)) ?
                  (&(wire25 <= (8'haf))) : (wire25[(2'h3):(2'h2)] | (&reg29))));
              reg28 <= $signed(wire22[(1'h0):(1'h0)]);
            end
          else
            begin
              reg26 <= reg27[(3'h4):(2'h3)];
              reg27 <= wire23[(3'h4):(3'h4)];
            end
        end
      reg30 <= $signed(wire21[(2'h3):(1'h1)]);
    end
  assign wire31 = (8'ha7);
  assign wire32 = wire22[(2'h3):(1'h0)];
  assign wire33 = wire32;
  assign wire34 = ((+{$signed((8'h9d))}) ?
                      ((((8'ha2) && wire33) ?
                          (wire25 ^~ wire25) : $unsigned(wire25)) ^ ({wire32} ?
                          ((8'hae) ?
                              reg29 : (8'ha4)) : $unsigned((8'h9f)))) : ((reg28[(2'h2):(1'h1)] - (^~reg30)) ?
                          $unsigned({reg30}) : $unsigned($unsigned(wire31))));
  assign wire35 = $unsigned($unsigned(((wire31 ?
                      wire34 : wire34) <<< wire31[(1'h0):(1'h0)])));
  assign wire36 = ($signed({(reg30 ?
                          wire35 : wire33)}) >> reg28[(2'h2):(2'h2)]);
  always
    @(posedge clk) begin
      reg37 <= (^~wire33);
    end
  assign wire38 = $unsigned(wire24[(2'h3):(1'h1)]);
  assign wire39 = {{(wire31 < (wire23 ? wire36 : (8'ha4)))}};
endmodule