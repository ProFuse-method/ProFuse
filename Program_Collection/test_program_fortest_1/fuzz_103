(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h40):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire66;
  wire [(4'hb):(1'h0)] wire65;
  wire signed [(4'hb):(1'h0)] wire64;
  wire [(4'ha):(1'h0)] wire63;
  wire [(2'h3):(1'h0)] wire62;
  wire [(2'h3):(1'h0)] wire61;
  wire [(4'h8):(1'h0)] wire59;
  wire signed [(4'h9):(1'h0)] wire57;
  assign y = {wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire59,
                 wire57,
                 (1'h0)};
  module4 #() modinst58 (.wire8(wire2), .clk(clk), .wire5(wire0), .wire6(wire3), .y(wire57), .wire7(wire1));
  module4 #() modinst60 (.wire8(wire1), .wire7(wire2), .wire6(wire3), .clk(clk), .wire5(wire57), .y(wire59));
  assign wire61 = {wire0[(3'h4):(2'h3)]};
  assign wire62 = $unsigned((wire2[(3'h4):(2'h2)] < ($signed(wire2) ?
                      {wire57} : (8'h9f))));
  assign wire63 = wire2;
  assign wire64 = ((((^~wire1) ? (!(8'ha3)) : wire62[(2'h3):(1'h0)]) ?
                      (wire3[(2'h2):(1'h0)] - wire57) : (^~(wire1 && wire59))) && ($unsigned(((8'ha0) >> (8'ha7))) >= wire61));
  assign wire65 = ($unsigned($unsigned(wire3)) ?
                      $unsigned(wire63[(3'h5):(1'h1)]) : ((~&{wire57}) ?
                          $signed((wire59 & wire3)) : $signed((!(8'haa)))));
  assign wire66 = wire62[(1'h0):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire5;
  input wire signed [(4'hb):(1'h0)] wire6;
  input wire [(4'h8):(1'h0)] wire7;
  input wire signed [(3'h4):(1'h0)] wire8;
  wire [(2'h2):(1'h0)] wire55;
  wire signed [(4'hb):(1'h0)] wire12;
  wire [(2'h2):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire14;
  wire signed [(3'h5):(1'h0)] wire15;
  wire [(4'ha):(1'h0)] wire39;
  reg [(4'h8):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg10 = (1'h0);
  reg [(4'h9):(1'h0)] reg11 = (1'h0);
  assign y = {wire55,
                 wire12,
                 wire13,
                 wire14,
                 wire15,
                 wire39,
                 reg9,
                 reg10,
                 reg11,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg9 <= $unsigned((^~((wire5 & (8'ha8)) == (-wire8))));
      reg10 <= {wire7};
      reg11 <= wire7;
    end
  assign wire12 = ((reg11[(3'h7):(2'h3)] ?
                          $unsigned((|reg11)) : ((~|wire7) + (reg11 <= reg9))) ?
                      ((&wire6[(3'h4):(1'h0)]) ?
                          reg11[(3'h7):(2'h2)] : $unsigned($signed(wire5))) : $signed((reg11 ?
                          (8'ha3) : (wire6 ? wire6 : wire5))));
  assign wire13 = reg11;
  assign wire14 = reg11[(1'h1):(1'h1)];
  assign wire15 = ((|$signed(wire8[(3'h4):(1'h1)])) + wire12[(4'h8):(2'h3)]);
  module16 #() modinst40 (.wire19(reg11), .wire17(wire12), .y(wire39), .clk(clk), .wire20(wire7), .wire18(wire6));
  module41 #() modinst56 (wire55, clk, wire6, wire15, wire14, wire7);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module41  (y, clk, wire45, wire44, wire43, wire42);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire45;
  input wire [(3'h5):(1'h0)] wire44;
  input wire signed [(4'ha):(1'h0)] wire43;
  input wire signed [(3'h6):(1'h0)] wire42;
  wire [(4'h9):(1'h0)] wire54;
  wire [(2'h3):(1'h0)] wire50;
  wire signed [(4'h8):(1'h0)] wire47;
  wire [(3'h4):(1'h0)] wire46;
  reg [(4'hb):(1'h0)] reg53 = (1'h0);
  reg [(4'h9):(1'h0)] reg52 = (1'h0);
  reg [(3'h4):(1'h0)] reg51 = (1'h0);
  reg [(3'h4):(1'h0)] reg49 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg48 = (1'h0);
  assign y = {wire54,
                 wire50,
                 wire47,
                 wire46,
                 reg53,
                 reg52,
                 reg51,
                 reg49,
                 reg48,
                 (1'h0)};
  assign wire46 = (((wire44 ? (wire44 ? wire44 : wire42) : $unsigned(wire45)) ?
                      $unsigned($signed(wire45)) : {wire44}) || $unsigned(wire44[(2'h2):(1'h1)]));
  assign wire47 = wire46;
  always
    @(posedge clk) begin
      reg48 <= wire42[(2'h3):(2'h3)];
      reg49 <= $signed((~|({wire45} <= $signed(wire47))));
    end
  assign wire50 = wire43[(3'h4):(3'h4)];
  always
    @(posedge clk) begin
      reg51 <= ((($signed(reg48) ?
              (wire42 >= reg48) : {wire42}) > $unsigned(((8'ha0) ?
              wire44 : reg49))) ?
          {(&$unsigned(wire46))} : $signed((+(8'hac))));
      reg52 <= $unsigned((&(reg51 == wire43[(1'h1):(1'h1)])));
      reg53 <= $unsigned(wire44);
    end
  assign wire54 = (|$signed($signed({reg48})));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h6e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire20;
  input wire signed [(2'h2):(1'h0)] wire19;
  input wire [(3'h6):(1'h0)] wire18;
  input wire signed [(3'h7):(1'h0)] wire17;
  wire [(3'h6):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire37;
  wire signed [(2'h3):(1'h0)] wire32;
  wire signed [(2'h2):(1'h0)] wire31;
  wire signed [(4'h9):(1'h0)] wire28;
  wire signed [(3'h6):(1'h0)] wire27;
  wire [(3'h6):(1'h0)] wire21;
  reg [(2'h2):(1'h0)] reg36 = (1'h0);
  reg [(4'ha):(1'h0)] reg35 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg34 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg33 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg30 = (1'h0);
  reg [(4'h8):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg25 = (1'h0);
  reg [(2'h2):(1'h0)] reg24 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg22 = (1'h0);
  assign y = {wire38,
                 wire37,
                 wire32,
                 wire31,
                 wire28,
                 wire27,
                 wire21,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg30,
                 reg29,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire21 = $signed((^wire19));
  always
    @(posedge clk) begin
      reg22 <= ((^~wire19[(1'h1):(1'h0)]) ^~ {$unsigned(wire19)});
      if ($signed({wire20[(4'h8):(1'h1)]}))
        begin
          reg23 <= wire18[(3'h5):(1'h0)];
          if ($unsigned(((~&(wire17 * wire21)) <<< ($unsigned(reg22) ?
              reg23[(3'h4):(1'h0)] : (wire19 & wire20)))))
            begin
              reg24 <= (~^{reg22});
            end
          else
            begin
              reg24 <= ((((wire19 ? reg23 : reg22) || (reg24 ?
                      reg24 : wire19)) ?
                  $signed($unsigned(reg23)) : ((^~wire20) < reg24[(2'h2):(2'h2)])) && $unsigned((-(~|wire19))));
              reg25 <= ($signed(wire18[(1'h0):(1'h0)]) == $unsigned(($unsigned(reg22) < (reg22 < wire21))));
              reg26 <= ($unsigned(wire19[(1'h1):(1'h0)]) && reg23[(4'h8):(3'h4)]);
            end
        end
      else
        begin
          reg23 <= wire18;
        end
    end
  assign wire27 = reg22[(3'h7):(3'h5)];
  assign wire28 = ($unsigned($signed((wire17 | wire17))) ? wire21 : reg22);
  always
    @(posedge clk) begin
      reg29 <= $signed(((((8'hb0) >>> (8'h9d)) ?
              $unsigned(reg26) : $signed(wire21)) ?
          $unsigned(wire17) : (^((8'h9e) ? wire21 : wire19))));
      reg30 <= (!(-$unsigned(reg24[(2'h2):(1'h1)])));
    end
  assign wire31 = $unsigned(reg30[(2'h2):(2'h2)]);
  assign wire32 = (|($signed($unsigned((8'h9d))) <= $signed((reg29 != reg22))));
  always
    @(posedge clk) begin
      reg33 <= $signed((&(reg22 ? (wire21 <= wire21) : (wire19 <= wire20))));
      reg34 <= $signed(((~{reg30}) ?
          $unsigned($unsigned(reg29)) : $signed($unsigned((8'ha4)))));
      reg35 <= (($unsigned(reg29[(4'h8):(1'h1)]) ~^ reg34) ?
          $unsigned($signed((~wire28))) : ($unsigned(wire17[(3'h7):(3'h6)]) ?
              ((reg30 ^ wire27) >> (8'hae)) : $signed($unsigned((8'hae)))));
    end
  always
    @(posedge clk) begin
      reg36 <= ((^~(&$signed(reg22))) ?
          (^(!(|reg24))) : ((^~reg25) ?
              (~^(^~reg25)) : (reg24[(1'h0):(1'h0)] ? (|reg23) : wire19)));
    end
  assign wire37 = $unsigned(reg36);
  assign wire38 = $unsigned(wire28);
endmodule