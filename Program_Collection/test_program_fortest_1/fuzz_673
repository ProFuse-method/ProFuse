(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h7f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire0;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire3;
  wire [(4'hb):(1'h0)] wire60;
  wire [(4'h8):(1'h0)] wire58;
  wire [(3'h7):(1'h0)] wire4;
  wire [(4'hb):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire6;
  wire [(2'h2):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire8;
  wire signed [(2'h2):(1'h0)] wire19;
  wire [(3'h5):(1'h0)] wire56;
  reg [(3'h7):(1'h0)] reg9 = (1'h0);
  reg [(2'h3):(1'h0)] reg10 = (1'h0);
  reg [(2'h3):(1'h0)] reg11 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg12 = (1'h0);
  reg [(3'h5):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg14 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg16 = (1'h0);
  reg [(3'h6):(1'h0)] reg17 = (1'h0);
  reg [(3'h7):(1'h0)] reg18 = (1'h0);
  assign y = {wire60,
                 wire58,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire8,
                 wire19,
                 wire56,
                 reg9,
                 reg10,
                 reg11,
                 reg12,
                 reg13,
                 reg14,
                 reg15,
                 reg16,
                 reg17,
                 reg18,
                 (1'h0)};
  assign wire4 = wire3;
  assign wire5 = ($signed(((wire0 - wire1) ?
                     wire3[(2'h3):(1'h0)] : (wire2 ?
                         wire1 : wire3))) >= (wire4 >>> {(wire4 ?
                         wire0 : (8'hab))}));
  assign wire6 = $unsigned(wire2);
  assign wire7 = (&wire4[(1'h1):(1'h1)]);
  assign wire8 = $signed($signed($unsigned((^wire1))));
  always
    @(posedge clk) begin
      reg9 <= $signed((|wire1));
      if ((($unsigned($signed(wire4)) ~^ (wire2[(3'h5):(1'h0)] - $signed(wire4))) != {$unsigned({wire1})}))
        begin
          reg10 <= wire6[(3'h5):(3'h4)];
        end
      else
        begin
          reg10 <= ((+(~|{wire2})) ?
              ((8'h9c) ?
                  (wire6[(4'h9):(4'h8)] ?
                      wire1 : (&(8'haa))) : (+(reg9 ~^ wire4))) : (wire0 | (8'ha2)));
          if ((($unsigned((!wire5)) ? wire1 : wire7[(1'h1):(1'h1)]) ?
              {wire2} : {wire5[(4'h9):(3'h6)]}))
            begin
              reg11 <= $unsigned($unsigned(({wire6} & wire6[(3'h5):(3'h5)])));
              reg12 <= wire6[(4'h8):(4'h8)];
            end
          else
            begin
              reg11 <= $signed($unsigned($unsigned({wire7})));
            end
          if ((~|wire8))
            begin
              reg13 <= (wire3 >>> wire3);
            end
          else
            begin
              reg13 <= {($unsigned({wire5}) ?
                      reg12 : ({wire4} ?
                          $unsigned(reg10) : (reg11 ? reg10 : reg9)))};
            end
        end
      if (reg11)
        begin
          reg14 <= $unsigned(wire8);
        end
      else
        begin
          reg14 <= ($unsigned({$unsigned(reg13)}) <<< {$signed({wire0})});
          if ((&wire8[(2'h2):(2'h2)]))
            begin
              reg15 <= {wire4};
              reg16 <= (reg9[(1'h1):(1'h0)] != $signed(($unsigned(reg11) != $signed((8'ha8)))));
              reg17 <= reg13[(3'h4):(3'h4)];
            end
          else
            begin
              reg15 <= reg16;
            end
          reg18 <= (+{wire6});
        end
    end
  assign wire19 = $signed((reg15 ?
                      (wire0[(2'h3):(1'h1)] ?
                          reg11[(1'h0):(1'h0)] : (wire3 ?
                              wire3 : reg14)) : $signed($signed(reg12))));
  module20 #() modinst57 (wire56, clk, wire3, reg10, wire5, wire4);
  module20 #() modinst59 (wire58, clk, wire5, reg18, wire8, reg14);
  assign wire60 = wire19;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20  (y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h4d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire24;
  input wire [(2'h3):(1'h0)] wire23;
  input wire [(4'hb):(1'h0)] wire22;
  input wire [(3'h7):(1'h0)] wire21;
  wire [(4'h9):(1'h0)] wire52;
  wire [(4'hb):(1'h0)] wire49;
  wire [(4'ha):(1'h0)] wire48;
  wire signed [(3'h5):(1'h0)] wire47;
  wire [(4'h8):(1'h0)] wire45;
  wire [(4'h8):(1'h0)] wire25;
  reg signed [(2'h3):(1'h0)] reg55 = (1'h0);
  reg [(3'h6):(1'h0)] reg54 = (1'h0);
  reg [(2'h2):(1'h0)] reg53 = (1'h0);
  reg [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(2'h3):(1'h0)] reg50 = (1'h0);
  assign y = {wire52,
                 wire49,
                 wire48,
                 wire47,
                 wire45,
                 wire25,
                 reg55,
                 reg54,
                 reg53,
                 reg51,
                 reg50,
                 (1'h0)};
  assign wire25 = wire21;
  module26 #() modinst46 (.clk(clk), .y(wire45), .wire29(wire23), .wire30(wire25), .wire28(wire22), .wire27(wire21));
  assign wire47 = (~&wire24);
  assign wire48 = ((($unsigned(wire21) ? ((8'hab) ? wire45 : wire22) : wire21) ?
                          (wire21[(2'h3):(1'h1)] != wire45[(3'h5):(1'h1)]) : (wire21 ?
                              wire23[(1'h1):(1'h0)] : (8'h9d))) ?
                      (8'h9f) : $unsigned(((wire22 ? wire23 : wire21) ?
                          {wire23} : $unsigned((8'ha8)))));
  assign wire49 = wire24[(2'h3):(2'h3)];
  always
    @(posedge clk) begin
      reg50 <= wire45;
      reg51 <= wire45;
    end
  assign wire52 = ((~wire47) + $unsigned(wire22[(3'h7):(3'h7)]));
  always
    @(posedge clk) begin
      reg53 <= ($signed($unsigned($unsigned(reg51))) & wire22);
    end
  always
    @(posedge clk) begin
      reg54 <= (|$unsigned(wire47[(1'h1):(1'h1)]));
    end
  always
    @(posedge clk) begin
      reg55 <= $unsigned(wire25);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module26
#(parameter param44 = ((({(8'hae)} ? (~(8'ha0)) : ((8'haf) ? (8'h9e) : (8'ha9))) ? (-((8'h9e) ? (8'h9e) : (8'ha1))) : {(~(8'haa))}) ^ (~^((8'h9d) | (-(8'ha7))))))
(y, clk, wire30, wire29, wire28, wire27);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire30;
  input wire [(2'h2):(1'h0)] wire29;
  input wire [(3'h5):(1'h0)] wire28;
  input wire [(3'h6):(1'h0)] wire27;
  wire [(2'h3):(1'h0)] wire43;
  wire [(3'h7):(1'h0)] wire42;
  wire [(2'h2):(1'h0)] wire37;
  reg signed [(4'hb):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg39 = (1'h0);
  reg [(4'h8):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg36 = (1'h0);
  reg [(3'h7):(1'h0)] reg35 = (1'h0);
  reg [(4'ha):(1'h0)] reg34 = (1'h0);
  reg [(4'ha):(1'h0)] reg33 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg32 = (1'h0);
  reg [(3'h5):(1'h0)] reg31 = (1'h0);
  assign y = {wire43,
                 wire42,
                 wire37,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($signed({wire30}))
        begin
          if ({$unsigned({$signed(wire27)})})
            begin
              reg31 <= ($signed(wire29[(1'h1):(1'h0)]) ^~ wire29[(1'h0):(1'h0)]);
              reg32 <= (-wire29[(2'h2):(2'h2)]);
            end
          else
            begin
              reg31 <= reg31[(2'h2):(1'h1)];
              reg32 <= (wire30 + $unsigned((^~(reg31 ? reg32 : reg31))));
            end
        end
      else
        begin
          reg31 <= wire30[(2'h2):(1'h0)];
          if ($unsigned(((~&(!reg31)) & (reg32 >> (wire29 < (8'haf))))))
            begin
              reg32 <= (({$unsigned(wire30)} ?
                  $signed({reg31}) : wire29) < (wire28 ?
                  $unsigned(reg31[(1'h1):(1'h0)]) : wire27[(2'h2):(1'h0)]));
              reg33 <= $unsigned(wire30);
              reg34 <= $signed({$unsigned($unsigned(wire30))});
            end
          else
            begin
              reg32 <= (wire28[(3'h4):(2'h3)] - reg31);
              reg33 <= (reg34[(3'h5):(2'h3)] * (!wire28));
            end
          reg35 <= wire29[(1'h0):(1'h0)];
        end
      reg36 <= $unsigned(wire27);
    end
  assign wire37 = {(-((8'h9e) - $signed((8'haf))))};
  always
    @(posedge clk) begin
      reg38 <= reg31;
      reg39 <= ({((reg31 | wire27) <= (reg34 <<< wire29))} == ($signed($signed(wire28)) ~^ $signed({(8'hb0)})));
      if ({(reg31 | {$unsigned(wire37)})})
        begin
          reg40 <= $unsigned({reg32});
          reg41 <= $signed(((~&wire27[(2'h2):(1'h0)]) | (reg38 >> wire27)));
        end
      else
        begin
          reg40 <= (8'ha4);
          reg41 <= (({(^~(8'ha5))} + reg40) ~^ ((+wire30) >>> reg35[(3'h7):(2'h2)]));
        end
    end
  assign wire42 = (($unsigned((8'ha7)) ?
                          reg32[(3'h4):(2'h3)] : wire30[(3'h5):(1'h1)]) ?
                      ($signed({wire29}) ?
                          (wire29 + (reg40 ?
                              reg40 : (8'hae))) : reg36) : $signed($unsigned($unsigned(reg39))));
  assign wire43 = reg38[(1'h1):(1'h0)];
endmodule