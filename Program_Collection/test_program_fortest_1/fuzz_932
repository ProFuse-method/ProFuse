(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h4ee):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire4;
  input wire [(4'hc):(1'h0)] wire3;
  input wire [(5'h13):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'hf):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire387;
  wire signed [(5'h15):(1'h0)] wire335;
  wire [(5'h11):(1'h0)] wire40;
  wire [(3'h6):(1'h0)] wire13;
  wire [(3'h4):(1'h0)] wire385;
  reg signed [(5'h12):(1'h0)] reg409 = (1'h0);
  reg [(5'h11):(1'h0)] reg408 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg406 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg405 = (1'h0);
  reg [(5'h10):(1'h0)] reg400 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg399 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg398 = (1'h0);
  reg [(4'h9):(1'h0)] reg397 = (1'h0);
  reg [(4'hb):(1'h0)] reg393 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg392 = (1'h0);
  reg [(4'h8):(1'h0)] reg389 = (1'h0);
  reg [(5'h12):(1'h0)] reg38 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg36 = (1'h0);
  reg [(3'h6):(1'h0)] reg35 = (1'h0);
  reg [(4'hf):(1'h0)] reg34 = (1'h0);
  reg [(2'h2):(1'h0)] reg29 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg28 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg27 = (1'h0);
  reg [(4'h9):(1'h0)] reg26 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg24 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg22 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg21 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg19 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg18 = (1'h0);
  reg [(2'h3):(1'h0)] reg17 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg16 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg12 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg11 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg9 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg5 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg340 = (1'h0);
  reg [(5'h13):(1'h0)] reg341 = (1'h0);
  reg [(5'h11):(1'h0)] reg342 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg346 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg348 = (1'h0);
  reg [(2'h3):(1'h0)] reg349 = (1'h0);
  reg [(4'hd):(1'h0)] reg351 = (1'h0);
  reg [(4'h9):(1'h0)] reg353 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg354 = (1'h0);
  reg [(4'ha):(1'h0)] reg355 = (1'h0);
  reg [(5'h13):(1'h0)] reg356 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg357 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg359 = (1'h0);
  reg [(4'ha):(1'h0)] reg360 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg361 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg364 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg368 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg369 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg370 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg371 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg372 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg375 = (1'h0);
  reg [(4'he):(1'h0)] reg376 = (1'h0);
  reg [(4'h9):(1'h0)] reg377 = (1'h0);
  reg [(5'h13):(1'h0)] reg378 = (1'h0);
  reg [(5'h12):(1'h0)] reg380 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg381 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg382 = (1'h0);
  reg [(4'hc):(1'h0)] reg384 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg407 = (1'h0);
  reg [(5'h13):(1'h0)] reg404 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar403 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg402 = (1'h0);
  reg [(2'h2):(1'h0)] forvar401 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg396 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg395 = (1'h0);
  reg [(4'hd):(1'h0)] forvar394 = (1'h0);
  reg [(2'h3):(1'h0)] forvar391 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar390 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg383 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar379 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg374 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg373 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar367 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg366 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg365 = (1'h0);
  reg [(4'h8):(1'h0)] reg363 = (1'h0);
  reg [(4'hd):(1'h0)] reg362 = (1'h0);
  reg [(5'h11):(1'h0)] forvar358 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar352 = (1'h0);
  reg [(4'hb):(1'h0)] forvar350 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg347 = (1'h0);
  reg [(4'hd):(1'h0)] reg345 = (1'h0);
  reg [(4'h9):(1'h0)] reg344 = (1'h0);
  reg [(4'hd):(1'h0)] forvar343 = (1'h0);
  reg [(4'h8):(1'h0)] reg339 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar338 = (1'h0);
  reg [(3'h5):(1'h0)] forvar337 = (1'h0);
  reg [(4'he):(1'h0)] reg39 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar37 = (1'h0);
  reg [(5'h15):(1'h0)] reg33 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar31 = (1'h0);
  reg [(5'h13):(1'h0)] forvar30 = (1'h0);
  reg [(4'ha):(1'h0)] forvar25 = (1'h0);
  reg [(4'hd):(1'h0)] reg23 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar20 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar15 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar14 = (1'h0);
  reg [(4'ha):(1'h0)] forvar10 = (1'h0);
  reg [(5'h13):(1'h0)] reg8 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar7 = (1'h0);
  reg [(4'ha):(1'h0)] forvar6 = (1'h0);
  assign y = {wire387,
                 wire335,
                 wire40,
                 wire13,
                 wire385,
                 reg409,
                 reg408,
                 reg406,
                 reg405,
                 reg400,
                 reg399,
                 reg398,
                 reg397,
                 reg393,
                 reg392,
                 reg389,
                 reg38,
                 reg36,
                 reg35,
                 reg34,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg24,
                 reg22,
                 reg21,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg12,
                 reg11,
                 reg9,
                 reg5,
                 reg340,
                 reg341,
                 reg342,
                 reg346,
                 reg348,
                 reg349,
                 reg351,
                 reg353,
                 reg354,
                 reg355,
                 reg356,
                 reg357,
                 reg359,
                 reg360,
                 reg361,
                 reg364,
                 reg368,
                 reg369,
                 reg370,
                 reg371,
                 reg372,
                 reg375,
                 reg376,
                 reg377,
                 reg378,
                 reg380,
                 reg381,
                 reg382,
                 reg384,
                 reg407,
                 reg404,
                 forvar403,
                 reg402,
                 forvar401,
                 reg396,
                 reg395,
                 forvar394,
                 forvar391,
                 forvar390,
                 reg383,
                 forvar379,
                 reg374,
                 reg373,
                 forvar367,
                 reg366,
                 reg365,
                 reg363,
                 reg362,
                 forvar358,
                 forvar352,
                 forvar350,
                 reg347,
                 reg345,
                 reg344,
                 forvar343,
                 reg339,
                 forvar338,
                 forvar337,
                 reg39,
                 forvar37,
                 reg33,
                 reg32,
                 forvar31,
                 forvar30,
                 forvar25,
                 reg23,
                 forvar20,
                 forvar15,
                 forvar14,
                 forvar10,
                 reg8,
                 forvar7,
                 forvar6,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg5 <= (8'hbf);
      for (forvar6 = (1'h0); (forvar6 < (1'h1)); forvar6 = (forvar6 + (1'h1)))
        begin
          for (forvar7 = (1'h0); (forvar7 < (2'h2)); forvar7 = (forvar7 + (1'h1)))
            begin
              reg8 = (+{wire2, $unsigned($unsigned(wire4[(1'h0):(1'h0)]))});
            end
          reg9 <= ({{(&(wire2 ? reg5 : reg5))}} ?
              wire4[(2'h2):(1'h1)] : ({($unsigned(wire4) < $unsigned(reg8)),
                  wire3[(1'h1):(1'h1)]} + $unsigned((~^forvar7[(3'h7):(3'h4)]))));
          for (forvar10 = (1'h0); (forvar10 < (1'h1)); forvar10 = (forvar10 + (1'h1)))
            begin
              reg11 <= $signed(($signed($unsigned((~(7'h40)))) ?
                  {(+((8'hb4) ? forvar10 : wire0)),
                      ({reg5, (8'hb3)} ?
                          (^~reg8) : forvar6)} : ($unsigned((+wire4)) ?
                      ($signed((8'haf)) < {wire2, wire3}) : {(~&wire2)})));
              reg12 <= (((-$signed(reg9[(4'he):(2'h3)])) + $unsigned(forvar10[(3'h6):(3'h4)])) ?
                  wire4 : wire3);
            end
        end
    end
  assign wire13 = {(((~$unsigned((8'hb1))) ?
                          wire1 : ($signed(reg9) && $signed(wire1))) ^ {$unsigned({reg9}),
                          ($unsigned(wire3) ? $unsigned(wire4) : reg12)}),
                      $signed($signed(((~wire2) & $unsigned(wire0))))};
  always
    @(posedge clk) begin
      for (forvar14 = (1'h0); (forvar14 < (2'h3)); forvar14 = (forvar14 + (1'h1)))
        begin
          for (forvar15 = (1'h0); (forvar15 < (3'h4)); forvar15 = (forvar15 + (1'h1)))
            begin
              reg16 <= $unsigned(($unsigned((wire0 ^ reg5[(3'h4):(1'h0)])) ?
                  (&wire13[(3'h4):(2'h2)]) : $signed({(^reg9),
                      wire3[(1'h1):(1'h1)]})));
              reg17 <= {(&(~reg16))};
              reg18 <= forvar15;
              reg19 <= ({(($unsigned(forvar15) >>> (reg5 | wire3)) ?
                          reg5 : (8'h9f))} ?
                  wire0[(4'he):(4'hc)] : $unsigned(reg9[(3'h7):(2'h3)]));
            end
          for (forvar20 = (1'h0); (forvar20 < (1'h0)); forvar20 = (forvar20 + (1'h1)))
            begin
              reg21 <= wire1[(2'h2):(1'h0)];
              reg22 <= $signed((~&{((wire3 && (8'ha0)) && wire1)}));
              reg23 = reg22;
              reg24 <= ({(forvar20 ? $unsigned((8'hb1)) : $signed({reg12})),
                      $signed(($signed(reg19) > wire2))} ?
                  {(8'haf),
                      $signed((~&$unsigned(forvar20)))} : $signed(forvar20[(2'h2):(1'h0)]));
            end
          for (forvar25 = (1'h0); (forvar25 < (1'h1)); forvar25 = (forvar25 + (1'h1)))
            begin
              reg26 <= $unsigned($signed(reg12[(4'h8):(3'h6)]));
              reg27 <= (wire3 << (+wire3));
              reg28 <= (&(forvar14[(3'h4):(3'h4)] ?
                  wire4[(3'h6):(3'h5)] : reg9[(3'h5):(2'h3)]));
            end
          reg29 <= (~(forvar15[(4'h8):(2'h2)] ?
              {$signed($unsigned(reg27))} : {(forvar20[(3'h6):(2'h2)] ?
                      (~reg12) : $signed(forvar25))}));
        end
      for (forvar30 = (1'h0); (forvar30 < (1'h1)); forvar30 = (forvar30 + (1'h1)))
        begin
          for (forvar31 = (1'h0); (forvar31 < (3'h4)); forvar31 = (forvar31 + (1'h1)))
            begin
              reg32 = (8'haa);
              reg33 = $unsigned($signed((~|forvar30[(4'h9):(2'h2)])));
              reg34 <= wire3;
              reg35 <= ($unsigned(reg19[(4'hb):(2'h2)]) << (-reg34[(4'h8):(1'h1)]));
              reg36 <= forvar30[(4'h9):(3'h5)];
            end
          for (forvar37 = (1'h0); (forvar37 < (1'h0)); forvar37 = (forvar37 + (1'h1)))
            begin
              reg38 <= {(reg21 ?
                      ($unsigned(((8'hb2) <= reg18)) ?
                          ($signed((8'hbe)) * (reg21 ?
                              wire0 : reg5)) : ((+reg36) ?
                              (~^forvar31) : $unsigned(reg35))) : (((reg12 + reg19) ^ $signed(forvar15)) >> ($signed((8'ha5)) & (~&wire3))))};
              reg39 = reg23;
            end
        end
    end
  assign wire40 = $unsigned(($signed((+reg24)) - $unsigned($unsigned((-wire3)))));
  module41 #() modinst336 (wire335, clk, reg21, reg9, wire3, reg26);
  always
    @(posedge clk) begin
      for (forvar337 = (1'h0); (forvar337 < (3'h4)); forvar337 = (forvar337 + (1'h1)))
        begin
          for (forvar338 = (1'h0); (forvar338 < (2'h3)); forvar338 = (forvar338 + (1'h1)))
            begin
              reg339 = $unsigned(reg11[(3'h5):(1'h0)]);
              reg340 <= reg29;
            end
          reg341 <= wire0[(4'hb):(1'h1)];
          reg342 <= $unsigned((|{$signed($signed(reg18))}));
          for (forvar343 = (1'h0); (forvar343 < (2'h2)); forvar343 = (forvar343 + (1'h1)))
            begin
              reg344 = reg29[(2'h2):(1'h0)];
              reg345 = {$unsigned((&$unsigned(wire1[(2'h2):(2'h2)]))),
                  (($unsigned($unsigned(reg16)) | ((^~reg21) + reg16[(4'hc):(3'h4)])) ?
                      (((+wire3) ?
                          wire335[(5'h12):(1'h0)] : $signed(reg22)) && (^(-reg28))) : forvar337)};
              reg346 <= $unsigned($unsigned((!((reg29 ?
                  wire40 : reg345) < reg9))));
              reg347 = (+$unsigned(($signed((~|reg345)) - reg346)));
              reg348 <= wire335[(5'h14):(3'h6)];
            end
          reg349 <= {$unsigned(reg19), $signed({$unsigned((&(8'ha7)))})};
        end
      for (forvar350 = (1'h0); (forvar350 < (2'h3)); forvar350 = (forvar350 + (1'h1)))
        begin
          reg351 <= $unsigned(wire3[(3'h6):(1'h0)]);
          for (forvar352 = (1'h0); (forvar352 < (2'h3)); forvar352 = (forvar352 + (1'h1)))
            begin
              reg353 <= reg347;
              reg354 <= ((reg348[(4'hb):(4'h9)] ?
                      reg17[(2'h2):(1'h0)] : ({(~reg29), reg38[(4'he):(4'hb)]} ?
                          reg27[(3'h4):(3'h4)] : reg351[(1'h0):(1'h0)])) ?
                  reg21 : ($signed((8'hb5)) == $signed($signed($signed(reg353)))));
              reg355 <= $signed(reg348);
              reg356 <= $unsigned((8'hb6));
              reg357 <= ($signed((+(~(forvar352 ?
                  forvar352 : reg355)))) < reg21[(3'h6):(1'h1)]);
            end
        end
      for (forvar358 = (1'h0); (forvar358 < (2'h2)); forvar358 = (forvar358 + (1'h1)))
        begin
          reg359 <= (!reg349);
          reg360 <= $unsigned((!(((reg356 <= reg19) == $signed((8'h9d))) ?
              reg351 : (8'hb4))));
          if ((~^reg360[(3'h7):(1'h0)]))
            begin
              reg361 <= (^reg19[(2'h2):(2'h2)]);
            end
          else
            begin
              reg362 = $signed(reg344[(1'h1):(1'h0)]);
              reg363 = reg38;
              reg364 <= $unsigned({$unsigned(reg349),
                  (($unsigned(reg26) ? (8'hba) : reg21) ?
                      reg24[(5'h11):(5'h10)] : $signed(forvar350))});
            end
          reg365 = ($signed((wire335 + reg27[(4'h8):(2'h2)])) ?
              ((&(^reg361[(1'h1):(1'h1)])) & (~&reg355[(3'h5):(1'h0)])) : (($signed($signed(reg362)) + {(+(8'hbc))}) > ($signed((reg348 <<< reg17)) <= $unsigned($signed(reg22)))));
        end
      reg366 = ($unsigned((^~$signed((reg345 < reg341)))) + $unsigned($unsigned(reg354)));
      for (forvar367 = (1'h0); (forvar367 < (2'h3)); forvar367 = (forvar367 + (1'h1)))
        begin
          if ((~reg16))
            begin
              reg368 <= reg18[(3'h6):(3'h4)];
              reg369 <= reg26;
              reg370 <= ((($signed(reg16[(3'h5):(2'h3)]) ?
                  $signed(reg365[(1'h0):(1'h0)]) : ((reg355 ? wire0 : reg26) ?
                      (reg355 ? forvar358 : (8'haf)) : (forvar338 ?
                          forvar367 : reg28))) >> (8'hb8)) == $signed(wire2));
              reg371 <= $unsigned(wire4);
              reg372 <= reg360;
            end
          else
            begin
              reg368 <= $signed(reg355[(3'h7):(3'h6)]);
              reg373 = (^~reg371[(2'h3):(2'h2)]);
              reg374 = (^~forvar367[(2'h2):(1'h0)]);
              reg375 <= {$signed((~^($signed(reg18) ?
                      reg28 : reg368[(3'h6):(2'h2)])))};
              reg376 <= reg26;
            end
          reg377 <= (reg373 != $unsigned(forvar367[(3'h7):(2'h3)]));
          reg378 <= $unsigned((8'hb9));
          for (forvar379 = (1'h0); (forvar379 < (1'h1)); forvar379 = (forvar379 + (1'h1)))
            begin
              reg380 <= $signed(reg341);
              reg381 <= (((&$signed((-reg368))) ^~ $unsigned(wire335)) < ($signed($signed((forvar367 + wire0))) & wire1));
              reg382 <= $signed($signed((((!(8'h9c)) - reg369[(1'h1):(1'h1)]) + {(reg345 <<< reg380),
                  (reg374 <= reg362)})));
              reg383 = reg22[(4'h8):(3'h6)];
              reg384 <= (&($unsigned(wire335) >> ($signed($unsigned((8'hbe))) ?
                  ((reg362 | reg369) || $signed(reg371)) : {$unsigned(forvar367),
                      (reg363 | reg373)})));
            end
        end
    end
  module41 #() modinst386 (wire385, clk, reg375, wire1, reg382, reg364);
  module41 #() modinst388 (wire387, clk, wire40, reg360, wire335, reg19);
  always
    @(posedge clk) begin
      reg389 <= (-(!(&{reg346, (reg360 ? reg341 : reg361)})));
      for (forvar390 = (1'h0); (forvar390 < (1'h0)); forvar390 = (forvar390 + (1'h1)))
        begin
          for (forvar391 = (1'h0); (forvar391 < (2'h2)); forvar391 = (forvar391 + (1'h1)))
            begin
              reg392 <= (&((|$signed(reg359[(3'h7):(2'h3)])) ?
                  reg371 : ((|reg371) ? reg22 : $unsigned({(8'hac)}))));
              reg393 <= {(|reg381), {wire4[(3'h6):(3'h6)]}};
            end
          for (forvar394 = (1'h0); (forvar394 < (2'h3)); forvar394 = (forvar394 + (1'h1)))
            begin
              reg395 = (reg355 ? reg36 : $unsigned((~&reg341)));
              reg396 = forvar394;
              reg397 <= {reg371[(2'h2):(2'h2)],
                  $unsigned(((^~(~reg354)) ?
                      (~|$signed(reg342)) : $unsigned((reg19 | wire4))))};
              reg398 <= reg351;
            end
          reg399 <= $signed((^~reg356[(3'h7):(3'h7)]));
          reg400 <= $signed(reg24);
        end
      for (forvar401 = (1'h0); (forvar401 < (1'h0)); forvar401 = (forvar401 + (1'h1)))
        begin
          reg402 = reg368[(1'h1):(1'h0)];
          for (forvar403 = (1'h0); (forvar403 < (1'h1)); forvar403 = (forvar403 + (1'h1)))
            begin
              reg404 = reg398[(3'h5):(2'h2)];
              reg405 <= (-$signed($signed($signed($unsigned(forvar401)))));
              reg406 <= $unsigned(($unsigned(forvar401[(1'h1):(1'h1)]) * (reg397[(4'h8):(3'h4)] >>> (reg392 ?
                  reg384 : reg355))));
              reg407 = (reg405 | ((!$signed($signed(reg11))) ?
                  (forvar403[(1'h1):(1'h0)] ?
                      ({(7'h41), wire40} || reg348) : {reg356[(4'ha):(1'h0)],
                          $signed(reg36)}) : (+$signed(reg353))));
            end
          reg408 <= $signed($signed($signed(((reg397 ? reg341 : wire2) ?
              $signed((8'h9f)) : reg36[(1'h1):(1'h1)]))));
        end
      reg409 <= reg16;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module41  (y, clk, wire45, wire44, wire43, wire42);
  output wire [(32'h2f9):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h11):(1'h0)] wire45;
  input wire [(4'ha):(1'h0)] wire44;
  input wire [(4'hc):(1'h0)] wire43;
  input wire [(4'h9):(1'h0)] wire42;
  wire signed [(3'h5):(1'h0)] wire334;
  wire signed [(3'h6):(1'h0)] wire333;
  wire signed [(5'h11):(1'h0)] wire332;
  wire signed [(3'h7):(1'h0)] wire331;
  wire [(5'h13):(1'h0)] wire141;
  wire [(4'hb):(1'h0)] wire89;
  wire signed [(5'h13):(1'h0)] wire46;
  wire signed [(5'h13):(1'h0)] wire214;
  wire signed [(3'h7):(1'h0)] wire216;
  wire [(3'h7):(1'h0)] wire281;
  wire signed [(5'h11):(1'h0)] wire283;
  wire signed [(3'h4):(1'h0)] wire318;
  reg [(5'h10):(1'h0)] reg330 = (1'h0);
  reg [(3'h6):(1'h0)] reg328 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg327 = (1'h0);
  reg [(2'h2):(1'h0)] reg326 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg323 = (1'h0);
  reg [(4'hd):(1'h0)] reg322 = (1'h0);
  reg [(4'he):(1'h0)] reg48 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg52 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg53 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg57 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg58 = (1'h0);
  reg [(2'h3):(1'h0)] reg61 = (1'h0);
  reg [(4'hf):(1'h0)] reg62 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg63 = (1'h0);
  reg [(3'h4):(1'h0)] reg64 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg68 = (1'h0);
  reg [(5'h13):(1'h0)] reg74 = (1'h0);
  reg [(5'h15):(1'h0)] reg77 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg78 = (1'h0);
  reg [(5'h13):(1'h0)] reg81 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg83 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg87 = (1'h0);
  reg [(3'h6):(1'h0)] reg329 = (1'h0);
  reg [(2'h3):(1'h0)] forvar325 = (1'h0);
  reg [(4'hc):(1'h0)] forvar324 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar321 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar320 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg88 = (1'h0);
  reg [(3'h7):(1'h0)] reg86 = (1'h0);
  reg [(3'h5):(1'h0)] reg85 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg84 = (1'h0);
  reg [(5'h13):(1'h0)] forvar82 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg80 = (1'h0);
  reg [(5'h13):(1'h0)] forvar79 = (1'h0);
  reg [(5'h14):(1'h0)] reg76 = (1'h0);
  reg [(3'h5):(1'h0)] reg75 = (1'h0);
  reg [(3'h7):(1'h0)] forvar73 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg72 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar71 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar70 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg69 = (1'h0);
  reg [(4'hf):(1'h0)] reg67 = (1'h0);
  reg [(4'hd):(1'h0)] reg66 = (1'h0);
  reg [(3'h5):(1'h0)] forvar65 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar60 = (1'h0);
  reg [(5'h11):(1'h0)] reg59 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg56 = (1'h0);
  reg [(5'h14):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar54 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg51 = (1'h0);
  reg [(4'h9):(1'h0)] reg50 = (1'h0);
  reg [(3'h5):(1'h0)] reg49 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar47 = (1'h0);
  assign y = {wire334,
                 wire333,
                 wire332,
                 wire331,
                 wire141,
                 wire89,
                 wire46,
                 wire214,
                 wire216,
                 wire281,
                 wire283,
                 wire318,
                 reg330,
                 reg328,
                 reg327,
                 reg326,
                 reg323,
                 reg322,
                 reg48,
                 reg52,
                 reg53,
                 reg57,
                 reg58,
                 reg61,
                 reg62,
                 reg63,
                 reg64,
                 reg68,
                 reg74,
                 reg77,
                 reg78,
                 reg81,
                 reg83,
                 reg87,
                 reg329,
                 forvar325,
                 forvar324,
                 forvar321,
                 forvar320,
                 reg88,
                 reg86,
                 reg85,
                 reg84,
                 forvar82,
                 reg80,
                 forvar79,
                 reg76,
                 reg75,
                 forvar73,
                 reg72,
                 forvar71,
                 forvar70,
                 reg69,
                 reg67,
                 reg66,
                 forvar65,
                 forvar60,
                 reg59,
                 reg56,
                 reg55,
                 forvar54,
                 reg51,
                 reg50,
                 reg49,
                 forvar47,
                 (1'h0)};
  assign wire46 = (($unsigned((wire42[(4'h8):(4'h8)] ?
                              $unsigned((8'hba)) : $unsigned(wire45))) ?
                          (wire45[(4'he):(4'ha)] ?
                              wire44 : wire43) : (!$unsigned((+wire42)))) ?
                      wire45 : $unsigned(wire42));
  always
    @(posedge clk) begin
      for (forvar47 = (1'h0); (forvar47 < (3'h4)); forvar47 = (forvar47 + (1'h1)))
        begin
          if (wire45[(4'hc):(3'h4)])
            begin
              reg48 <= $signed(wire46[(5'h10):(3'h7)]);
            end
          else
            begin
              reg49 = (|{$unsigned(wire43[(4'h8):(1'h1)]), forvar47});
              reg50 = ((({(&wire43)} >= reg48[(4'h9):(4'h9)]) ^ {({wire46} > (~&wire44)),
                  wire43}) >>> (+($signed(wire45) > {(wire46 ?
                      wire42 : wire46)})));
              reg51 = (^~(-wire46));
              reg52 <= forvar47[(1'h1):(1'h1)];
              reg53 <= ((reg49 ?
                  $unsigned((+(reg50 == (8'hb7)))) : $unsigned($signed(reg49[(3'h4):(1'h1)]))) ^~ ((~&$signed((reg49 ?
                      wire43 : wire46))) ?
                  reg50 : (^reg48)));
            end
          for (forvar54 = (1'h0); (forvar54 < (2'h3)); forvar54 = (forvar54 + (1'h1)))
            begin
              reg55 = {{($unsigned({wire43, reg53}) ?
                          {reg48,
                              ((8'ha0) ?
                                  wire42 : wire46)} : reg53[(3'h6):(2'h2)]),
                      wire44[(1'h1):(1'h0)]},
                  (~|($signed(reg52) ? $signed((~^reg53)) : reg50))};
              reg56 = wire43[(2'h2):(2'h2)];
              reg57 <= wire46;
              reg58 <= $signed({reg51,
                  ((reg56[(4'h9):(4'h9)] ?
                      $signed(forvar54) : $signed(wire45)) * $signed($signed((8'haf))))});
            end
          reg59 = (~|(-((^~wire44[(1'h0):(1'h0)]) >> ((~(8'hbc)) ^~ $unsigned(reg56)))));
          for (forvar60 = (1'h0); (forvar60 < (2'h2)); forvar60 = (forvar60 + (1'h1)))
            begin
              reg61 <= ($signed(($unsigned((-(8'ha1))) & $unsigned((reg58 && reg56)))) * (~^($unsigned($unsigned(reg59)) ?
                  ($unsigned(wire46) ?
                      (8'hb8) : (~&wire45)) : (reg53[(5'h14):(4'hd)] ?
                      (wire42 ? forvar60 : reg53) : (reg51 ^ reg56)))));
              reg62 <= reg57[(2'h3):(1'h1)];
              reg63 <= forvar54;
              reg64 <= {(reg57[(2'h3):(2'h2)] ?
                      {wire43, wire45[(2'h3):(1'h1)]} : $signed((|(^~reg49)))),
                  (^(forvar54[(1'h1):(1'h1)] ?
                      $signed((~^(8'hab))) : $unsigned(forvar47)))};
            end
          for (forvar65 = (1'h0); (forvar65 < (2'h3)); forvar65 = (forvar65 + (1'h1)))
            begin
              reg66 = $signed((({$signed(reg56)} == $signed($unsigned(wire45))) ?
                  $signed(forvar65[(1'h0):(1'h0)]) : ($unsigned(reg61) & forvar54)));
              reg67 = (~|reg51[(2'h2):(1'h1)]);
              reg68 <= (+$unsigned($unsigned(wire45[(2'h3):(2'h2)])));
            end
        end
      reg69 = $signed(wire44[(3'h5):(3'h4)]);
      for (forvar70 = (1'h0); (forvar70 < (1'h1)); forvar70 = (forvar70 + (1'h1)))
        begin
          for (forvar71 = (1'h0); (forvar71 < (1'h0)); forvar71 = (forvar71 + (1'h1)))
            begin
              reg72 = reg63[(3'h7):(1'h0)];
            end
          for (forvar73 = (1'h0); (forvar73 < (2'h2)); forvar73 = (forvar73 + (1'h1)))
            begin
              reg74 <= {($signed(wire45[(5'h11):(4'h8)]) ?
                      (~|((reg49 ~^ reg48) <<< (!reg57))) : (|(~&reg56[(5'h12):(3'h5)]))),
                  ($unsigned(wire44[(1'h1):(1'h0)]) ?
                      {$signed((~&reg53))} : reg55)};
              reg75 = (+(forvar71 ^~ reg49[(3'h4):(1'h0)]));
              reg76 = ((forvar60[(4'hb):(3'h4)] || $unsigned(($signed(reg51) ?
                      (~&reg48) : reg64))) ?
                  {(~&reg57[(1'h1):(1'h0)])} : reg49[(3'h5):(3'h5)]);
              reg77 <= {((|((reg50 <= reg72) & $unsigned(wire42))) ~^ $unsigned($signed((reg66 ^ reg49)))),
                  $signed((^((wire44 ~^ forvar47) ?
                      {forvar47, reg66} : $unsigned(reg63))))};
              reg78 <= $unsigned($signed((!(8'hbc))));
            end
          for (forvar79 = (1'h0); (forvar79 < (2'h2)); forvar79 = (forvar79 + (1'h1)))
            begin
              reg80 = reg59[(4'hb):(3'h5)];
              reg81 <= (~^(^~wire44[(2'h3):(2'h2)]));
            end
          for (forvar82 = (1'h0); (forvar82 < (1'h1)); forvar82 = (forvar82 + (1'h1)))
            begin
              reg83 <= reg51[(2'h3):(1'h0)];
              reg84 = reg55[(5'h14):(5'h12)];
            end
          if ((!$unsigned(reg76[(4'hc):(1'h0)])))
            begin
              reg85 = (~&(!$unsigned($signed($unsigned(reg75)))));
              reg86 = reg75[(2'h2):(1'h0)];
            end
          else
            begin
              reg87 <= $unsigned(((~^(((8'had) << wire42) > (~&forvar79))) ?
                  ((~&(^~(8'ha9))) && $signed($unsigned(reg56))) : ((reg80[(3'h4):(3'h4)] ^ (reg64 || (8'hb4))) ?
                      forvar79 : (^reg78))));
              reg88 = {(+{((reg76 ^ reg52) > (~&reg75))})};
            end
        end
    end
  assign wire89 = $signed((8'hb3));
  module90 #() modinst142 (.wire94(reg62), .y(wire141), .wire93(reg64), .wire91(reg68), .clk(clk), .wire92(wire43));
  module143 #() modinst215 (wire214, clk, wire43, reg77, wire46, reg58, reg74);
  assign wire216 = (~^wire214);
  module217 #() modinst282 (wire281, clk, wire141, reg48, reg81, wire214);
  assign wire283 = (^~reg74);
  module284 #() modinst319 (.wire286(wire214), .y(wire318), .wire287(reg57), .wire285(wire216), .wire288(wire141), .clk(clk));
  always
    @(posedge clk) begin
      for (forvar320 = (1'h0); (forvar320 < (2'h3)); forvar320 = (forvar320 + (1'h1)))
        begin
          for (forvar321 = (1'h0); (forvar321 < (1'h0)); forvar321 = (forvar321 + (1'h1)))
            begin
              reg322 <= (reg77[(4'hf):(4'hc)] ? wire44 : $signed(reg81));
              reg323 <= (+$signed($unsigned(({reg87, wire216} ?
                  $signed(reg48) : (|wire45)))));
            end
        end
      for (forvar324 = (1'h0); (forvar324 < (2'h3)); forvar324 = (forvar324 + (1'h1)))
        begin
          for (forvar325 = (1'h0); (forvar325 < (2'h3)); forvar325 = (forvar325 + (1'h1)))
            begin
              reg326 <= ($signed({{$unsigned(reg74), $signed((8'ha8))},
                      $signed(wire141)}) ?
                  (+(reg58 < $signed(wire318))) : (($unsigned(wire318) != wire141[(2'h2):(2'h2)]) ?
                      $signed($unsigned(reg77[(3'h7):(3'h4)])) : (((~|reg53) ?
                              $signed(wire89) : $signed((8'hac))) ?
                          reg83 : ($signed(wire214) ?
                              $signed(wire283) : $unsigned(wire89)))));
              reg327 <= ($signed($signed({(reg322 ? forvar325 : reg326)})) ?
                  {{(+(reg87 ? reg61 : wire46)),
                          wire45[(1'h0):(1'h0)]}} : (^~((|$unsigned(wire44)) ?
                      ($signed((8'hb5)) ^ $signed((8'h9d))) : {(|reg322)})));
              reg328 <= (reg81 ?
                  (|forvar320[(2'h2):(2'h2)]) : reg74[(4'hc):(2'h2)]);
              reg329 = $signed(($signed({(~^reg74),
                  $signed(forvar325)}) << reg53));
              reg330 <= (|wire283);
            end
        end
    end
  assign wire331 = $unsigned((~|({(wire42 || reg58)} ?
                       (reg53[(5'h10):(3'h7)] ^~ $unsigned(wire283)) : $signed(reg83[(2'h2):(2'h2)]))));
  assign wire332 = $signed(($unsigned(((reg327 ? wire89 : reg74) ?
                           wire214[(4'ha):(3'h4)] : (reg57 ? reg52 : reg64))) ?
                       $unsigned(reg323[(4'hd):(3'h7)]) : ($signed((wire44 ?
                               reg87 : reg330)) ?
                           {$signed(reg48)} : {$unsigned(reg48)})));
  assign wire333 = $signed(((reg52 ?
                           ($signed(wire43) ?
                               $signed(reg52) : reg62) : ((reg74 == reg328) ?
                               (!reg77) : wire332[(4'hc):(4'h8)])) ?
                       {{(wire332 ?
                                   reg63 : wire42)}} : wire214[(4'ha):(2'h2)]));
  assign wire334 = (|{$signed((-(reg64 ? reg87 : wire333))),
                       (wire46[(1'h0):(1'h0)] ?
                           (~(wire331 ? wire318 : (8'hb5))) : ((+reg62) ?
                               (wire281 && (8'hb2)) : $signed(wire216)))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module284
#(parameter param317 = (((((~|(8'ha4)) - ((8'ha3) && (8'ha0))) ? (((8'ha5) + (8'h9e)) ? (8'ha4) : (~&(7'h42))) : {((8'ha0) ? (8'hbe) : (8'ha2)), ((8'hbd) ? (8'hb6) : (8'ha0))}) ? ((((8'hb8) ~^ (8'hb8)) ? ((8'ha7) ? (8'hbd) : (8'ha2)) : (~(8'hb8))) ? (~&((8'hb1) & (8'ha3))) : (((7'h40) >= (8'hba)) <= ((8'hb8) ? (8'ha3) : (8'haa)))) : (((~(8'h9e)) >>> {(8'haf)}) ? (((8'haa) != (8'hbf)) > (+(8'ha2))) : (((7'h41) ? (8'hbf) : (8'h9e)) * ((8'hba) ? (8'hb7) : (8'hb2))))) + ({(8'h9d)} ^~ {(((8'haa) ? (8'hbc) : (8'ha8)) | ((8'haf) - (8'hbf))), (^~((7'h43) ^~ (8'hbe)))})))
(y, clk, wire288, wire287, wire286, wire285);
  output wire [(32'h131):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h13):(1'h0)] wire288;
  input wire [(4'hb):(1'h0)] wire287;
  input wire signed [(5'h13):(1'h0)] wire286;
  input wire [(3'h7):(1'h0)] wire285;
  wire signed [(5'h14):(1'h0)] wire297;
  wire signed [(4'h9):(1'h0)] wire296;
  wire [(5'h13):(1'h0)] wire295;
  wire signed [(4'he):(1'h0)] wire294;
  wire [(5'h11):(1'h0)] wire293;
  wire [(3'h4):(1'h0)] wire292;
  wire [(5'h10):(1'h0)] wire291;
  wire [(3'h6):(1'h0)] wire290;
  wire signed [(5'h10):(1'h0)] wire289;
  reg signed [(3'h5):(1'h0)] reg316 = (1'h0);
  reg [(2'h3):(1'h0)] reg315 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg314 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg310 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg309 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg308 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg304 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg303 = (1'h0);
  reg [(4'hf):(1'h0)] reg301 = (1'h0);
  reg [(5'h11):(1'h0)] reg300 = (1'h0);
  reg [(2'h3):(1'h0)] reg313 = (1'h0);
  reg [(4'ha):(1'h0)] forvar312 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg311 = (1'h0);
  reg [(3'h6):(1'h0)] forvar307 = (1'h0);
  reg [(4'hd):(1'h0)] reg306 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar305 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg302 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar299 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg298 = (1'h0);
  assign y = {wire297,
                 wire296,
                 wire295,
                 wire294,
                 wire293,
                 wire292,
                 wire291,
                 wire290,
                 wire289,
                 reg316,
                 reg315,
                 reg314,
                 reg310,
                 reg309,
                 reg308,
                 reg304,
                 reg303,
                 reg301,
                 reg300,
                 reg313,
                 forvar312,
                 reg311,
                 forvar307,
                 reg306,
                 forvar305,
                 reg302,
                 forvar299,
                 reg298,
                 (1'h0)};
  assign wire289 = $signed(wire285[(1'h0):(1'h0)]);
  assign wire290 = wire285[(1'h1):(1'h1)];
  assign wire291 = wire286;
  assign wire292 = ((^~$signed(wire286)) ? wire291 : wire289);
  assign wire293 = {(8'hb6)};
  assign wire294 = $unsigned(wire288);
  assign wire295 = ($unsigned((|($unsigned(wire287) ?
                           $signed(wire289) : $unsigned(wire292)))) ?
                       $signed($signed($unsigned((wire287 > wire293)))) : $signed(wire286));
  assign wire296 = $unsigned($unsigned(wire289[(4'h9):(3'h5)]));
  assign wire297 = $signed(wire292);
  always
    @(posedge clk) begin
      reg298 = wire291;
      for (forvar299 = (1'h0); (forvar299 < (2'h3)); forvar299 = (forvar299 + (1'h1)))
        begin
          if (reg298[(1'h0):(1'h0)])
            begin
              reg300 <= wire296[(4'h9):(4'h9)];
              reg301 <= forvar299[(1'h1):(1'h0)];
            end
          else
            begin
              reg302 = reg301;
              reg303 <= wire294;
              reg304 <= {$unsigned(wire285[(2'h2):(1'h1)])};
            end
          for (forvar305 = (1'h0); (forvar305 < (3'h4)); forvar305 = (forvar305 + (1'h1)))
            begin
              reg306 = (^~wire292);
            end
          for (forvar307 = (1'h0); (forvar307 < (1'h0)); forvar307 = (forvar307 + (1'h1)))
            begin
              reg308 <= ({wire290, forvar305} ^ (($unsigned(wire292) ?
                  ($signed(forvar305) ?
                      wire290 : (reg301 ?
                          forvar299 : forvar307)) : wire296[(2'h2):(1'h0)]) << wire288));
              reg309 <= ($signed({((forvar305 >> (7'h44)) ?
                          wire286[(5'h12):(2'h2)] : $signed(wire293)),
                      $unsigned((+wire288))}) ?
                  $unsigned($unsigned(($signed(reg308) || reg303[(2'h3):(1'h0)]))) : wire289[(5'h10):(4'he)]);
              reg310 <= $unsigned($signed(($unsigned(reg309) ?
                  reg303 : ($signed((8'h9e)) > forvar299))));
              reg311 = (wire292 ?
                  (8'hb2) : ((reg306[(4'hd):(2'h2)] ?
                      $unsigned($unsigned(reg304)) : wire288[(5'h11):(4'h9)]) != (wire297 ?
                      $unsigned((wire295 ? wire286 : forvar299)) : forvar305)));
            end
        end
      for (forvar312 = (1'h0); (forvar312 < (2'h2)); forvar312 = (forvar312 + (1'h1)))
        begin
          reg313 = $unsigned($signed({((reg302 ? reg310 : reg306) ?
                  wire287[(2'h2):(1'h1)] : ((8'ha1) ? (8'hbe) : (8'ha5))),
              wire295[(5'h13):(4'hd)]}));
          reg314 <= reg310[(1'h1):(1'h1)];
        end
      reg315 <= reg302[(1'h0):(1'h0)];
      reg316 <= reg308;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module217  (y, clk, wire221, wire220, wire219, wire218);
  output wire [(32'h2ad):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire221;
  input wire signed [(4'hc):(1'h0)] wire220;
  input wire signed [(4'hf):(1'h0)] wire219;
  input wire [(5'h12):(1'h0)] wire218;
  wire signed [(4'he):(1'h0)] wire280;
  wire signed [(3'h7):(1'h0)] wire279;
  wire signed [(5'h11):(1'h0)] wire278;
  wire signed [(5'h10):(1'h0)] wire277;
  wire signed [(3'h6):(1'h0)] wire276;
  wire signed [(3'h6):(1'h0)] wire275;
  wire [(5'h11):(1'h0)] wire224;
  wire [(4'hc):(1'h0)] wire223;
  wire [(4'h8):(1'h0)] wire222;
  reg signed [(3'h6):(1'h0)] reg274 = (1'h0);
  reg [(5'h11):(1'h0)] reg270 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg267 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg266 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg263 = (1'h0);
  reg [(2'h2):(1'h0)] reg261 = (1'h0);
  reg [(4'h9):(1'h0)] reg260 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg258 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg257 = (1'h0);
  reg [(4'hd):(1'h0)] reg256 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg254 = (1'h0);
  reg [(5'h11):(1'h0)] reg253 = (1'h0);
  reg [(5'h13):(1'h0)] reg252 = (1'h0);
  reg [(3'h7):(1'h0)] reg250 = (1'h0);
  reg [(5'h11):(1'h0)] reg249 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg246 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg242 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg241 = (1'h0);
  reg [(4'h8):(1'h0)] reg240 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg239 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg238 = (1'h0);
  reg [(4'h9):(1'h0)] reg236 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg235 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg234 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg229 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg228 = (1'h0);
  reg [(4'hf):(1'h0)] reg226 = (1'h0);
  reg [(5'h13):(1'h0)] reg225 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar273 = (1'h0);
  reg [(4'ha):(1'h0)] reg272 = (1'h0);
  reg [(4'he):(1'h0)] reg271 = (1'h0);
  reg [(5'h10):(1'h0)] forvar269 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg268 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar265 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar264 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg262 = (1'h0);
  reg [(2'h3):(1'h0)] reg259 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar255 = (1'h0);
  reg [(4'hc):(1'h0)] forvar251 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar248 = (1'h0);
  reg [(4'he):(1'h0)] forvar247 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg245 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg244 = (1'h0);
  reg [(4'h8):(1'h0)] reg243 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar237 = (1'h0);
  reg [(3'h4):(1'h0)] forvar233 = (1'h0);
  reg [(2'h3):(1'h0)] forvar232 = (1'h0);
  reg [(4'hd):(1'h0)] reg231 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar230 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar225 = (1'h0);
  reg [(2'h2):(1'h0)] reg227 = (1'h0);
  assign y = {wire280,
                 wire279,
                 wire278,
                 wire277,
                 wire276,
                 wire275,
                 wire224,
                 wire223,
                 wire222,
                 reg274,
                 reg270,
                 reg267,
                 reg266,
                 reg263,
                 reg261,
                 reg260,
                 reg258,
                 reg257,
                 reg256,
                 reg254,
                 reg253,
                 reg252,
                 reg250,
                 reg249,
                 reg246,
                 reg242,
                 reg241,
                 reg240,
                 reg239,
                 reg238,
                 reg236,
                 reg235,
                 reg234,
                 reg229,
                 reg228,
                 reg226,
                 reg225,
                 forvar273,
                 reg272,
                 reg271,
                 forvar269,
                 reg268,
                 forvar265,
                 forvar264,
                 reg262,
                 reg259,
                 forvar255,
                 forvar251,
                 forvar248,
                 forvar247,
                 reg245,
                 reg244,
                 reg243,
                 forvar237,
                 forvar233,
                 forvar232,
                 reg231,
                 forvar230,
                 forvar225,
                 reg227,
                 (1'h0)};
  assign wire222 = wire221;
  assign wire223 = wire218;
  assign wire224 = (+((!wire220) >>> {((+wire222) ?
                           (wire222 ? wire219 : wire223) : (wire223 ?
                               wire223 : (8'ha3))),
                       ((wire219 ? wire221 : wire218) << {(8'hb7), (8'hb5)})}));
  always
    @(posedge clk) begin
      if ($signed(wire223[(4'ha):(3'h4)]))
        begin
          if ($unsigned((wire219 || wire219)))
            begin
              reg225 <= wire221;
              reg226 <= (8'hac);
              reg227 = reg226;
            end
          else
            begin
              reg227 = reg226[(4'hb):(2'h2)];
              reg228 <= wire220;
              reg229 <= reg228;
            end
        end
      else
        begin
          for (forvar225 = (1'h0); (forvar225 < (2'h3)); forvar225 = (forvar225 + (1'h1)))
            begin
              reg226 <= (^~reg226[(3'h6):(2'h3)]);
              reg228 <= (|(8'hae));
              reg229 <= (^reg227[(1'h1):(1'h1)]);
            end
          for (forvar230 = (1'h0); (forvar230 < (2'h2)); forvar230 = (forvar230 + (1'h1)))
            begin
              reg231 = {reg228, $unsigned($unsigned(wire219))};
            end
        end
      for (forvar232 = (1'h0); (forvar232 < (1'h0)); forvar232 = (forvar232 + (1'h1)))
        begin
          for (forvar233 = (1'h0); (forvar233 < (2'h2)); forvar233 = (forvar233 + (1'h1)))
            begin
              reg234 <= reg231[(2'h2):(1'h1)];
              reg235 <= (^$signed($unsigned(((~wire221) ?
                  reg225 : (forvar225 ? forvar230 : wire221)))));
              reg236 <= $unsigned($unsigned(forvar233));
            end
          for (forvar237 = (1'h0); (forvar237 < (3'h4)); forvar237 = (forvar237 + (1'h1)))
            begin
              reg238 <= ($unsigned((wire219[(4'hc):(3'h6)] || (reg225 ?
                  (reg227 ?
                      forvar237 : wire222) : reg229))) >= $unsigned($signed(wire218)));
              reg239 <= $unsigned($unsigned(reg226[(1'h0):(1'h0)]));
              reg240 <= wire222[(2'h2):(2'h2)];
            end
          if (($unsigned($signed(reg235[(5'h14):(1'h0)])) < (^$unsigned(((wire223 ?
                  wire220 : reg226) ?
              $unsigned((8'hba)) : $signed((8'ha5)))))))
            begin
              reg241 <= ($signed({$signed({reg227,
                      reg226})}) >>> (reg229[(2'h2):(1'h1)] ~^ forvar230[(5'h10):(4'hf)]));
              reg242 <= (^(~&($signed((^~wire222)) * {$unsigned(reg227),
                  reg235[(5'h11):(4'hf)]})));
            end
          else
            begin
              reg241 <= $signed({reg236,
                  (($unsigned(forvar232) ?
                      wire220[(4'h8):(3'h4)] : (-reg241)) || $unsigned($unsigned(reg235)))});
              reg243 = (({{reg239[(3'h4):(2'h3)],
                      ((8'h9f) ?
                          reg239 : (8'hb7))}} == (8'hb3)) && $unsigned($signed(reg240)));
              reg244 = reg238[(5'h11):(4'he)];
              reg245 = ($unsigned(reg244) & (+forvar233));
            end
          reg246 <= $unsigned($signed($unsigned(reg245)));
        end
      for (forvar247 = (1'h0); (forvar247 < (3'h4)); forvar247 = (forvar247 + (1'h1)))
        begin
          for (forvar248 = (1'h0); (forvar248 < (1'h1)); forvar248 = (forvar248 + (1'h1)))
            begin
              reg249 <= reg229;
              reg250 <= forvar237;
            end
          for (forvar251 = (1'h0); (forvar251 < (1'h1)); forvar251 = (forvar251 + (1'h1)))
            begin
              reg252 <= reg225;
              reg253 <= wire221[(1'h1):(1'h0)];
              reg254 <= (reg238[(1'h1):(1'h0)] ?
                  wire223 : ((^(|(forvar230 + reg246))) ? reg238 : reg229));
            end
          for (forvar255 = (1'h0); (forvar255 < (2'h3)); forvar255 = (forvar255 + (1'h1)))
            begin
              reg256 <= wire222;
              reg257 <= (+reg234[(2'h2):(1'h1)]);
            end
          if (reg231[(4'hb):(3'h4)])
            begin
              reg258 <= ($unsigned(($signed((7'h44)) ?
                      ((forvar232 ? reg252 : (7'h44)) ?
                          forvar248 : {forvar230}) : reg234)) ?
                  (~(reg241[(2'h2):(1'h1)] ?
                      (+(forvar251 ? reg244 : reg227)) : ((reg256 != wire224) ?
                          (8'hbc) : wire222[(3'h6):(2'h2)]))) : (^~$unsigned(reg242[(3'h4):(1'h0)])));
            end
          else
            begin
              reg259 = {$unsigned((^$unsigned((reg235 ? wire218 : wire224)))),
                  ((|forvar230) <<< ((forvar255 >>> reg236[(2'h3):(2'h2)]) & forvar232[(2'h2):(1'h1)]))};
              reg260 <= (((8'hb0) ? reg234 : ($signed((~&reg235)) ~^ reg259)) ?
                  (~^$signed($unsigned((^~(8'hb8))))) : $unsigned($signed((|{(7'h43)}))));
              reg261 <= ($unsigned((8'hb3)) <= $signed(({(forvar230 ?
                      reg258 : wire218),
                  ((8'hb0) ? reg260 : forvar225)} <= reg242)));
              reg262 = {(($signed(reg259) || $unsigned((reg227 + reg244))) ?
                      (^$signed((^~(8'ha2)))) : (|(~&$signed(reg228))))};
              reg263 <= $signed((^reg257[(1'h0):(1'h0)]));
            end
        end
      for (forvar264 = (1'h0); (forvar264 < (1'h0)); forvar264 = (forvar264 + (1'h1)))
        begin
          for (forvar265 = (1'h0); (forvar265 < (2'h3)); forvar265 = (forvar265 + (1'h1)))
            begin
              reg266 <= {(&($unsigned({forvar265}) ?
                      reg258 : (-reg261[(1'h1):(1'h1)])))};
            end
          if ($signed(($signed((reg231[(1'h0):(1'h0)] >>> ((8'hbe) >= reg244))) <= $signed({forvar237[(3'h7):(1'h0)],
              ((8'hb9) ? wire222 : reg246)}))))
            begin
              reg267 <= ((reg227 != $signed(reg244[(1'h1):(1'h0)])) && reg227[(1'h0):(1'h0)]);
            end
          else
            begin
              reg267 <= $unsigned(({forvar237,
                      ((reg226 > forvar225) - (reg243 >= (7'h40)))} ?
                  (reg261 != forvar248) : (&((reg261 ? reg259 : reg235) ?
                      (forvar247 ? wire218 : reg256) : reg253))));
              reg268 = (^{(^($signed(reg226) ?
                      {reg239} : (reg256 ? (7'h42) : forvar255))),
                  $unsigned(reg244[(4'h8):(3'h5)])});
            end
          for (forvar269 = (1'h0); (forvar269 < (1'h1)); forvar269 = (forvar269 + (1'h1)))
            begin
              reg270 <= reg267;
              reg271 = (~|(+$signed(wire218[(5'h11):(3'h5)])));
            end
          reg272 = reg270[(4'hf):(4'hd)];
        end
      for (forvar273 = (1'h0); (forvar273 < (1'h0)); forvar273 = (forvar273 + (1'h1)))
        begin
          reg274 <= (reg225 ?
              ($signed(reg260[(2'h2):(1'h0)]) & $unsigned((-forvar265[(2'h3):(1'h1)]))) : (reg258[(2'h2):(1'h0)] ?
                  ((forvar251[(2'h2):(1'h1)] ?
                          reg256 : (reg262 ? reg235 : (8'ha4))) ?
                      reg250[(3'h5):(2'h2)] : $signed((+forvar232))) : $unsigned((~^(reg253 >= reg240)))));
        end
    end
  assign wire275 = wire218;
  assign wire276 = $unsigned(((reg260 ?
                           reg254[(2'h2):(1'h1)] : $unsigned($signed(reg261))) ?
                       $unsigned(reg274[(3'h6):(1'h0)]) : (reg267 ?
                           ($signed(reg240) ~^ {reg250,
                               reg267}) : (reg246 < (reg250 <<< (8'h9f))))));
  assign wire277 = reg249;
  assign wire278 = (((wire223 ?
                           ($signed(reg229) ?
                               {reg228,
                                   wire275} : (|reg236)) : (&(^~(7'h42)))) ?
                       ((~|reg266[(1'h0):(1'h0)]) - (((8'h9f) ?
                               reg236 : reg274) ?
                           $signed(reg252) : reg240[(2'h2):(2'h2)])) : {reg250[(3'h6):(2'h3)],
                           reg249}) & {(reg240 ? reg260 : (+$signed((8'hbc)))),
                       reg257});
  assign wire279 = (|(^~({(reg261 + wire275)} <= ((reg253 <= reg228) - {(8'had)}))));
  assign wire280 = (^(wire279 > {reg266[(1'h1):(1'h1)]}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module143
#(parameter param212 = {({(((7'h41) > (8'hb3)) && ((7'h40) ^~ (8'hac)))} ? {(!((8'h9c) ? (8'hae) : (8'ha7))), {(&(8'hb1))}} : (~^(((8'ha9) ? (8'h9e) : (8'h9c)) & ((8'hbd) || (8'hac))))), (~&{(((8'hb6) ? (7'h43) : (8'hbd)) || (+(8'ha4)))})}, 
parameter param213 = (~((+(~^(param212 ? (8'hb7) : param212))) || ((param212 || param212) ? (8'hb6) : (^~param212)))))
(y, clk, wire148, wire147, wire146, wire145, wire144);
  output wire [(32'h34e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire148;
  input wire signed [(5'h15):(1'h0)] wire147;
  input wire [(5'h13):(1'h0)] wire146;
  input wire [(2'h2):(1'h0)] wire145;
  input wire signed [(2'h3):(1'h0)] wire144;
  wire [(2'h2):(1'h0)] wire211;
  wire [(4'hd):(1'h0)] wire210;
  wire [(5'h13):(1'h0)] wire209;
  wire signed [(5'h12):(1'h0)] wire208;
  wire [(2'h3):(1'h0)] wire207;
  wire [(4'h9):(1'h0)] wire206;
  wire signed [(4'ha):(1'h0)] wire187;
  wire signed [(5'h15):(1'h0)] wire149;
  reg signed [(5'h15):(1'h0)] reg205 = (1'h0);
  reg [(4'hb):(1'h0)] reg204 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg202 = (1'h0);
  reg [(5'h14):(1'h0)] reg194 = (1'h0);
  reg [(5'h10):(1'h0)] reg190 = (1'h0);
  reg [(5'h14):(1'h0)] reg186 = (1'h0);
  reg [(4'hc):(1'h0)] reg184 = (1'h0);
  reg [(5'h14):(1'h0)] reg183 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg182 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg181 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg178 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg175 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg174 = (1'h0);
  reg [(5'h13):(1'h0)] reg172 = (1'h0);
  reg [(5'h11):(1'h0)] reg170 = (1'h0);
  reg [(5'h15):(1'h0)] reg169 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg168 = (1'h0);
  reg [(4'he):(1'h0)] reg167 = (1'h0);
  reg [(5'h12):(1'h0)] reg164 = (1'h0);
  reg [(4'hd):(1'h0)] reg162 = (1'h0);
  reg [(3'h7):(1'h0)] reg160 = (1'h0);
  reg [(4'hc):(1'h0)] reg157 = (1'h0);
  reg signed [(4'he):(1'h0)] reg155 = (1'h0);
  reg [(4'h9):(1'h0)] reg153 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg151 = (1'h0);
  reg [(4'h8):(1'h0)] reg203 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar201 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg200 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg199 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg198 = (1'h0);
  reg [(5'h15):(1'h0)] forvar197 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar196 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg195 = (1'h0);
  reg [(4'hb):(1'h0)] forvar193 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg192 = (1'h0);
  reg [(4'he):(1'h0)] reg191 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar189 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar188 = (1'h0);
  reg [(5'h11):(1'h0)] forvar185 = (1'h0);
  reg [(4'h8):(1'h0)] reg180 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar179 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg177 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg176 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar173 = (1'h0);
  reg [(5'h13):(1'h0)] forvar171 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar166 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar165 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg163 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar161 = (1'h0);
  reg [(5'h13):(1'h0)] forvar159 = (1'h0);
  reg [(2'h3):(1'h0)] reg158 = (1'h0);
  reg [(4'he):(1'h0)] forvar156 = (1'h0);
  reg [(5'h11):(1'h0)] reg154 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg152 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar150 = (1'h0);
  assign y = {wire211,
                 wire210,
                 wire209,
                 wire208,
                 wire207,
                 wire206,
                 wire187,
                 wire149,
                 reg205,
                 reg204,
                 reg202,
                 reg194,
                 reg190,
                 reg186,
                 reg184,
                 reg183,
                 reg182,
                 reg181,
                 reg178,
                 reg175,
                 reg174,
                 reg172,
                 reg170,
                 reg169,
                 reg168,
                 reg167,
                 reg164,
                 reg162,
                 reg160,
                 reg157,
                 reg155,
                 reg153,
                 reg151,
                 reg203,
                 forvar201,
                 reg200,
                 reg199,
                 reg198,
                 forvar197,
                 forvar196,
                 reg195,
                 forvar193,
                 reg192,
                 reg191,
                 forvar189,
                 forvar188,
                 forvar185,
                 reg180,
                 forvar179,
                 reg177,
                 reg176,
                 forvar173,
                 forvar171,
                 forvar166,
                 forvar165,
                 reg163,
                 forvar161,
                 forvar159,
                 reg158,
                 forvar156,
                 reg154,
                 reg152,
                 forvar150,
                 (1'h0)};
  assign wire149 = {($signed(wire144[(2'h2):(1'h1)]) >= wire148[(1'h0):(1'h0)])};
  always
    @(posedge clk) begin
      for (forvar150 = (1'h0); (forvar150 < (2'h3)); forvar150 = (forvar150 + (1'h1)))
        begin
          if ($signed($unsigned($unsigned(({wire149, forvar150} ?
              {wire149} : (8'hab))))))
            begin
              reg151 <= ($unsigned((~&($signed(wire149) ?
                      $signed(wire149) : wire148))) ?
                  (~^(((&wire145) <<< (8'ha9)) ?
                      ($unsigned(wire149) <= $unsigned(wire144)) : wire146)) : wire145);
            end
          else
            begin
              reg152 = ($unsigned((($unsigned(forvar150) & $signed(forvar150)) ?
                      (8'hac) : reg151[(4'hc):(1'h0)])) ?
                  $signed(wire149[(2'h3):(1'h1)]) : wire149);
              reg153 <= $signed((($unsigned(wire148[(3'h4):(1'h1)]) ?
                  wire147[(5'h10):(4'h9)] : (|$signed(reg152))) || $unsigned((|wire149[(4'hf):(4'h9)]))));
              reg154 = $signed(wire147[(4'he):(4'hb)]);
              reg155 <= wire144;
            end
          for (forvar156 = (1'h0); (forvar156 < (2'h2)); forvar156 = (forvar156 + (1'h1)))
            begin
              reg157 <= $unsigned(wire149);
              reg158 = (-$signed($unsigned(((!reg151) - $signed(reg157)))));
            end
          for (forvar159 = (1'h0); (forvar159 < (2'h2)); forvar159 = (forvar159 + (1'h1)))
            begin
              reg160 <= ($signed($signed({(forvar156 ? wire149 : wire147),
                      reg155})) ?
                  ((8'hba) ?
                      $signed(((8'h9e) ?
                          $signed(wire146) : forvar159[(4'hc):(3'h5)])) : $unsigned((~&(^~(8'ha9))))) : ((&{{reg153},
                          reg152}) ?
                      $unsigned((8'haf)) : {$signed((reg153 != reg152))}));
            end
          for (forvar161 = (1'h0); (forvar161 < (2'h2)); forvar161 = (forvar161 + (1'h1)))
            begin
              reg162 <= ({$signed((8'hb4))} ?
                  forvar161 : wire146[(1'h1):(1'h0)]);
              reg163 = (wire145[(1'h0):(1'h0)] ?
                  ($signed(wire146[(5'h10):(5'h10)]) - reg160) : wire147);
            end
          reg164 <= ({reg155[(1'h1):(1'h0)]} ?
              wire149[(5'h14):(5'h10)] : {(8'ha7), reg160[(3'h7):(3'h5)]});
        end
      for (forvar165 = (1'h0); (forvar165 < (3'h4)); forvar165 = (forvar165 + (1'h1)))
        begin
          for (forvar166 = (1'h0); (forvar166 < (1'h0)); forvar166 = (forvar166 + (1'h1)))
            begin
              reg167 <= $signed((8'ha7));
              reg168 <= (!$signed((~&((8'ha7) ?
                  wire148[(3'h7):(3'h6)] : $unsigned(reg157)))));
              reg169 <= reg153;
            end
        end
      reg170 <= $signed(($signed(forvar156) + {{(forvar159 ? reg163 : reg153)},
          $unsigned((forvar165 ^ reg163))}));
      for (forvar171 = (1'h0); (forvar171 < (2'h3)); forvar171 = (forvar171 + (1'h1)))
        begin
          reg172 <= (wire146[(5'h10):(4'he)] & (|(~($signed(reg163) || reg162))));
          for (forvar173 = (1'h0); (forvar173 < (1'h1)); forvar173 = (forvar173 + (1'h1)))
            begin
              reg174 <= wire145;
              reg175 <= {{reg153[(3'h5):(2'h2)], (|(~|(|reg163)))},
                  ({(~^reg160), reg162} ?
                      $signed($unsigned((reg157 >>> reg154))) : $unsigned((-reg174[(3'h7):(2'h3)])))};
              reg176 = wire147[(4'ha):(2'h3)];
              reg177 = (+((reg162[(4'ha):(4'ha)] ~^ $signed($signed(wire149))) * $signed(reg176[(3'h6):(2'h3)])));
              reg178 <= (&reg177[(4'ha):(2'h3)]);
            end
          for (forvar179 = (1'h0); (forvar179 < (2'h2)); forvar179 = (forvar179 + (1'h1)))
            begin
              reg180 = reg168;
              reg181 <= reg155[(2'h2):(2'h2)];
              reg182 <= $unsigned((forvar165[(4'hb):(2'h2)] + wire148));
              reg183 <= $unsigned((-$signed({(reg182 << reg152)})));
            end
          reg184 <= $unsigned($unsigned(reg183));
          for (forvar185 = (1'h0); (forvar185 < (3'h4)); forvar185 = (forvar185 + (1'h1)))
            begin
              reg186 <= (!reg170);
            end
        end
    end
  assign wire187 = (8'h9e);
  always
    @(posedge clk) begin
      for (forvar188 = (1'h0); (forvar188 < (1'h1)); forvar188 = (forvar188 + (1'h1)))
        begin
          for (forvar189 = (1'h0); (forvar189 < (1'h1)); forvar189 = (forvar189 + (1'h1)))
            begin
              reg190 <= $unsigned((reg164 ? reg151 : reg167[(2'h2):(2'h2)]));
              reg191 = (~(($unsigned(reg172[(5'h12):(3'h5)]) ?
                      ((|reg153) ?
                          $signed((8'hbf)) : (8'hba)) : reg174[(2'h2):(1'h1)]) ?
                  ((&(reg155 != reg157)) > {(reg183 ?
                          wire144 : (8'hbc))}) : wire144));
              reg192 = reg169;
            end
          for (forvar193 = (1'h0); (forvar193 < (2'h2)); forvar193 = (forvar193 + (1'h1)))
            begin
              reg194 <= reg175[(4'he):(1'h1)];
            end
          reg195 = (reg162 >> $unsigned((-(reg181[(4'hc):(4'hc)] ?
              {(8'ha9), wire147} : $signed(wire144)))));
        end
      for (forvar196 = (1'h0); (forvar196 < (3'h4)); forvar196 = (forvar196 + (1'h1)))
        begin
          for (forvar197 = (1'h0); (forvar197 < (1'h0)); forvar197 = (forvar197 + (1'h1)))
            begin
              reg198 = $unsigned({{reg162, reg181[(1'h1):(1'h0)]},
                  (reg151 ?
                      $signed($signed(reg155)) : {((8'haf) < reg175),
                          (~&(8'ha7))})});
              reg199 = (+reg194);
            end
          reg200 = $signed((wire148 ?
              reg162 : ($unsigned((^reg153)) >> reg182[(4'hb):(4'h9)])));
          for (forvar201 = (1'h0); (forvar201 < (3'h4)); forvar201 = (forvar201 + (1'h1)))
            begin
              reg202 <= reg184;
              reg203 = {reg169[(2'h3):(2'h3)]};
              reg204 <= reg168;
              reg205 <= $signed(forvar201[(3'h7):(2'h3)]);
            end
        end
    end
  assign wire206 = $signed((!$signed(reg174)));
  assign wire207 = reg157[(4'hc):(4'hc)];
  assign wire208 = wire206;
  assign wire209 = reg190[(2'h2):(1'h0)];
  assign wire210 = (({(+wire149[(4'ha):(3'h4)])} ?
                           (({(8'ha8)} ?
                               reg190 : ((8'ha3) ?
                                   wire148 : reg155)) >= ((^reg168) ?
                               (reg153 ?
                                   reg160 : reg168) : $signed((8'h9c)))) : {$signed($unsigned(reg194))}) ?
                       (((|(~^reg157)) ^ {(reg174 ?
                               reg160 : reg190)}) ^~ (((reg186 ~^ (8'h9f)) ?
                           $unsigned((8'hba)) : reg184) && wire149[(2'h2):(1'h0)])) : reg162[(4'ha):(2'h2)]);
  assign wire211 = (+$signed((|reg167[(4'hd):(4'hb)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module90
#(parameter param139 = (-(({((7'h43) ? (8'hbc) : (8'ha8))} | {(|(8'hba)), (+(7'h41))}) - {({(8'hb5), (7'h42)} <<< {(8'had)})})), 
parameter param140 = (param139 ? (+param139) : ({((param139 + param139) ? (8'hb3) : ((8'ha4) ? param139 : (8'ha4))), ((+param139) >> {param139})} ? ((8'hb1) ? ((^~param139) || ((8'haf) ? param139 : param139)) : (param139 >> ((7'h40) ? param139 : param139))) : (((param139 << param139) ? {param139, param139} : {param139}) && param139))))
(y, clk, wire94, wire93, wire92, wire91);
  output wire [(32'h1b8):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire94;
  input wire [(3'h4):(1'h0)] wire93;
  input wire signed [(3'h4):(1'h0)] wire92;
  input wire [(5'h12):(1'h0)] wire91;
  wire signed [(4'hd):(1'h0)] wire138;
  wire [(2'h2):(1'h0)] wire98;
  wire signed [(3'h5):(1'h0)] wire97;
  wire signed [(4'hd):(1'h0)] wire96;
  wire [(3'h5):(1'h0)] wire95;
  reg signed [(4'hc):(1'h0)] reg137 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg134 = (1'h0);
  reg [(4'hc):(1'h0)] reg133 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg130 = (1'h0);
  reg [(3'h5):(1'h0)] reg124 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg120 = (1'h0);
  reg [(3'h5):(1'h0)] reg110 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg108 = (1'h0);
  reg [(4'ha):(1'h0)] reg107 = (1'h0);
  reg [(5'h10):(1'h0)] reg106 = (1'h0);
  reg [(3'h5):(1'h0)] reg104 = (1'h0);
  reg [(4'ha):(1'h0)] reg102 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg136 = (1'h0);
  reg [(5'h15):(1'h0)] reg135 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar132 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar131 = (1'h0);
  reg [(2'h2):(1'h0)] reg129 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg128 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar127 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar126 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg125 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg123 = (1'h0);
  reg [(4'ha):(1'h0)] reg122 = (1'h0);
  reg [(3'h7):(1'h0)] forvar121 = (1'h0);
  reg [(3'h5):(1'h0)] reg119 = (1'h0);
  reg [(3'h6):(1'h0)] reg118 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg117 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg116 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar115 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg114 = (1'h0);
  reg [(5'h12):(1'h0)] reg113 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg112 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg111 = (1'h0);
  reg [(3'h4):(1'h0)] forvar109 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar105 = (1'h0);
  reg [(3'h5):(1'h0)] reg103 = (1'h0);
  reg [(3'h4):(1'h0)] reg101 = (1'h0);
  reg [(3'h6):(1'h0)] forvar100 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar99 = (1'h0);
  assign y = {wire138,
                 wire98,
                 wire97,
                 wire96,
                 wire95,
                 reg137,
                 reg134,
                 reg133,
                 reg130,
                 reg124,
                 reg120,
                 reg110,
                 reg108,
                 reg107,
                 reg106,
                 reg104,
                 reg102,
                 reg136,
                 reg135,
                 forvar132,
                 forvar131,
                 reg129,
                 reg128,
                 forvar127,
                 forvar126,
                 reg125,
                 reg123,
                 reg122,
                 forvar121,
                 reg119,
                 reg118,
                 reg117,
                 reg116,
                 forvar115,
                 reg114,
                 reg113,
                 reg112,
                 reg111,
                 forvar109,
                 forvar105,
                 reg103,
                 reg101,
                 forvar100,
                 forvar99,
                 (1'h0)};
  assign wire95 = ((~&wire91[(4'hc):(4'hc)]) <<< (-{{(-wire94),
                          wire94[(3'h6):(1'h1)]},
                      {(wire94 ? wire94 : wire94), (^~wire92)}}));
  assign wire96 = wire92;
  assign wire97 = $signed((~&((+$unsigned(wire93)) >= wire93)));
  assign wire98 = ({(&{$unsigned(wire91), $signed(wire94)})} ?
                      (~|$unsigned(({wire95} ?
                          (wire91 < wire95) : {wire97,
                              wire93}))) : {$signed(($signed(wire95) ?
                              (-wire92) : $unsigned(wire97)))});
  always
    @(posedge clk) begin
      for (forvar99 = (1'h0); (forvar99 < (3'h4)); forvar99 = (forvar99 + (1'h1)))
        begin
          for (forvar100 = (1'h0); (forvar100 < (2'h3)); forvar100 = (forvar100 + (1'h1)))
            begin
              reg101 = forvar100[(3'h6):(2'h2)];
              reg102 <= $signed((~&(|(^~((8'ha3) & wire97)))));
              reg103 = wire94[(3'h5):(3'h4)];
              reg104 <= (wire94 ?
                  $unsigned(wire94[(3'h6):(1'h0)]) : $unsigned(reg101));
            end
          for (forvar105 = (1'h0); (forvar105 < (1'h0)); forvar105 = (forvar105 + (1'h1)))
            begin
              reg106 <= {wire94};
              reg107 <= $unsigned((($signed((|reg101)) ?
                      forvar100 : (wire91 ? ((8'hbc) && reg102) : {(8'hab)})) ?
                  reg106[(2'h3):(2'h2)] : reg103));
              reg108 <= $signed(((+(reg102 ?
                      (wire92 ? forvar105 : reg104) : (wire96 ?
                          (8'ha7) : wire91))) ?
                  (!{$signed(wire95),
                      (&(8'hac))}) : $unsigned(((wire95 ^~ wire98) < $unsigned(wire95)))));
            end
          for (forvar109 = (1'h0); (forvar109 < (1'h0)); forvar109 = (forvar109 + (1'h1)))
            begin
              reg110 <= (wire97[(2'h3):(2'h2)] ?
                  $signed($signed($unsigned((reg101 || wire92)))) : ((~&{$unsigned(wire92),
                      (reg106 ? reg104 : wire94)}) < (($signed(forvar105) ?
                          {wire91, wire92} : (~|reg108)) ?
                      reg103[(3'h4):(2'h2)] : $unsigned((^~forvar99)))));
              reg111 = $signed(wire92);
              reg112 = {forvar99};
              reg113 = (|wire97[(3'h5):(2'h2)]);
              reg114 = (wire97 ?
                  ((forvar99[(1'h1):(1'h1)] ?
                          ($signed(reg102) ?
                              $unsigned(reg103) : {reg101}) : (|(reg111 ?
                              (7'h42) : wire91))) ?
                      wire94[(2'h2):(1'h1)] : (-wire91)) : $signed($unsigned(reg104)));
            end
          for (forvar115 = (1'h0); (forvar115 < (2'h2)); forvar115 = (forvar115 + (1'h1)))
            begin
              reg116 = reg113;
              reg117 = (reg116[(4'hb):(1'h0)] >= $signed((&$unsigned($signed(forvar99)))));
              reg118 = (wire98[(1'h1):(1'h0)] <<< $signed($signed((|$unsigned(wire97)))));
              reg119 = reg112;
              reg120 <= reg110;
            end
          for (forvar121 = (1'h0); (forvar121 < (1'h0)); forvar121 = (forvar121 + (1'h1)))
            begin
              reg122 = (((reg101[(2'h3):(2'h2)] ?
                      wire98[(2'h2):(2'h2)] : (|reg116[(3'h4):(3'h4)])) >> ((|reg114[(3'h6):(1'h0)]) ?
                      reg119 : $signed(wire91))) ?
                  (-((reg101 ? reg114 : (~|reg106)) ?
                      $unsigned({reg107, reg104}) : (8'h9c))) : (wire92 ?
                      forvar115[(2'h3):(2'h2)] : $signed(($signed(forvar109) ?
                          reg117[(3'h4):(2'h3)] : (^forvar115)))));
              reg123 = forvar109;
              reg124 <= ((reg111 ?
                  $signed({$signed(wire92)}) : $signed(((reg103 ?
                          reg107 : (8'hb0)) ?
                      reg122[(4'h9):(1'h1)] : reg106[(5'h10):(1'h1)]))) - (~&(-wire94[(1'h1):(1'h0)])));
              reg125 = (wire98 && $signed({$signed(forvar100)}));
            end
        end
    end
  always
    @(posedge clk) begin
      for (forvar126 = (1'h0); (forvar126 < (1'h1)); forvar126 = (forvar126 + (1'h1)))
        begin
          for (forvar127 = (1'h0); (forvar127 < (2'h3)); forvar127 = (forvar127 + (1'h1)))
            begin
              reg128 = $signed($signed($signed(((&wire98) < wire96[(3'h4):(2'h2)]))));
              reg129 = (!((~reg128[(3'h7):(3'h5)]) << $unsigned(({wire96,
                  reg102} >= ((8'ha7) ? reg128 : wire91)))));
            end
        end
      reg130 <= reg106[(2'h2):(1'h1)];
      for (forvar131 = (1'h0); (forvar131 < (1'h0)); forvar131 = (forvar131 + (1'h1)))
        begin
          for (forvar132 = (1'h0); (forvar132 < (2'h3)); forvar132 = (forvar132 + (1'h1)))
            begin
              reg133 <= wire93[(1'h1):(1'h0)];
              reg134 <= $unsigned($signed((reg120 ?
                  (&(-wire93)) : wire91[(4'ha):(3'h7)])));
              reg135 = $unsigned((((forvar132 ? (reg107 >>> wire97) : (8'hb1)) ?
                      (8'hb5) : $signed((forvar132 ? reg106 : forvar127))) ?
                  (($unsigned((7'h42)) << wire98) ?
                      (~&$signed((8'hbd))) : (~|(reg129 - forvar127))) : {({reg108} ?
                          (-reg107) : (8'hb0))}));
              reg136 = forvar132;
            end
          reg137 <= (wire95 ^~ (-reg130[(3'h6):(1'h1)]));
        end
    end
  assign wire138 = reg120;
endmodule