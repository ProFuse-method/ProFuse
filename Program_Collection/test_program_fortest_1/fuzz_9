(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h77):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(3'h4):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire71;
  wire signed [(3'h7):(1'h0)] wire70;
  wire [(4'h8):(1'h0)] wire66;
  wire signed [(3'h5):(1'h0)] wire64;
  wire [(4'h8):(1'h0)] wire63;
  wire signed [(4'hb):(1'h0)] wire62;
  wire [(4'ha):(1'h0)] wire60;
  wire [(4'hb):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire23;
  wire signed [(4'h8):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg69 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg67 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg26 = (1'h0);
  assign y = {wire71,
                 wire70,
                 wire66,
                 wire64,
                 wire63,
                 wire62,
                 wire60,
                 wire25,
                 wire23,
                 wire5,
                 wire4,
                 reg69,
                 reg68,
                 reg67,
                 reg26,
                 (1'h0)};
  assign wire4 = $signed($unsigned((^(&wire0))));
  assign wire5 = wire4;
  module6 #() modinst24 (.wire9(wire3), .clk(clk), .wire8(wire0), .wire7(wire4), .y(wire23), .wire10(wire2));
  assign wire25 = (+$unsigned(wire1[(2'h3):(2'h3)]));
  always
    @(posedge clk) begin
      reg26 <= (~(wire3[(2'h2):(2'h2)] ?
          (wire23 ? $signed(wire3) : (-wire5)) : (8'ha0)));
    end
  module27 #() modinst61 (wire60, clk, wire25, wire2, wire23, wire0);
  assign wire62 = wire60[(3'h4):(1'h0)];
  assign wire63 = $signed(((wire4[(1'h0):(1'h0)] ?
                      (wire62 >> wire2) : wire4) || $unsigned(wire4)));
  module27 #() modinst65 (wire64, clk, wire25, wire4, wire5, wire2);
  assign wire66 = wire23;
  always
    @(posedge clk) begin
      reg67 <= (($signed((^wire66)) >>> reg26) + (((wire1 ? wire25 : (8'ha0)) ?
              $signed(wire3) : (wire63 ? (8'h9c) : wire2)) ?
          ($signed(wire63) ?
              wire23 : {(8'ha6)}) : (wire60[(4'h8):(1'h0)] ^~ wire5[(1'h1):(1'h0)])));
      reg68 <= {{(^((8'h9c) ^~ wire64))}};
      reg69 <= wire0[(3'h4):(2'h2)];
    end
  assign wire70 = (~&wire4[(4'h9):(3'h4)]);
  assign wire71 = wire64;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module27  (y, clk, wire31, wire30, wire29, wire28);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire31;
  input wire signed [(4'ha):(1'h0)] wire30;
  input wire [(4'h8):(1'h0)] wire29;
  input wire signed [(4'h9):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire59;
  wire signed [(2'h3):(1'h0)] wire58;
  wire [(4'h8):(1'h0)] wire57;
  wire [(3'h7):(1'h0)] wire56;
  wire signed [(3'h6):(1'h0)] wire54;
  wire signed [(4'h9):(1'h0)] wire32;
  assign y = {wire59, wire58, wire57, wire56, wire54, wire32, (1'h0)};
  assign wire32 = (|(8'ha1));
  module33 #() modinst55 (wire54, clk, wire29, wire32, wire30, wire28);
  assign wire56 = ($signed($signed((wire28 ?
                      wire28 : wire32))) | ($unsigned($unsigned(wire30)) >>> {$signed((8'h9e))}));
  assign wire57 = {{(~&wire32)}};
  assign wire58 = {(~&{(wire56 * wire56)})};
  assign wire59 = wire31;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param22 = ((~^(~&((8'ha4) >> (8'ha4)))) ^~ (&(((8'haf) << (8'hb0)) == (8'ha9)))))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h49):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire10;
  input wire signed [(3'h4):(1'h0)] wire9;
  input wire signed [(3'h5):(1'h0)] wire8;
  input wire signed [(4'h9):(1'h0)] wire7;
  wire signed [(3'h7):(1'h0)] wire21;
  wire signed [(4'h9):(1'h0)] wire20;
  wire [(2'h3):(1'h0)] wire19;
  wire [(2'h3):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire15;
  wire [(2'h2):(1'h0)] wire14;
  wire signed [(4'h8):(1'h0)] wire12;
  wire signed [(3'h5):(1'h0)] wire11;
  reg signed [(4'hb):(1'h0)] reg16 = (1'h0);
  reg [(3'h6):(1'h0)] reg13 = (1'h0);
  assign y = {wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire15,
                 wire14,
                 wire12,
                 wire11,
                 reg16,
                 reg13,
                 (1'h0)};
  assign wire11 = wire10[(3'h5):(3'h4)];
  assign wire12 = $unsigned($unsigned((wire9[(2'h2):(2'h2)] ~^ $unsigned(wire11))));
  always
    @(posedge clk) begin
      reg13 <= (^~$unsigned(((wire12 ? wire8 : wire7) ?
          wire12 : wire8[(2'h3):(2'h3)])));
    end
  assign wire14 = wire7;
  assign wire15 = (({(wire12 == (8'h9e))} ? wire14 : (~|{wire9})) ?
                      $unsigned(((wire9 ?
                          (8'ha4) : wire9) + {wire7})) : (((wire7 >> wire11) < $signed(wire10)) ?
                          ((wire10 >>> (8'h9d)) ?
                              wire9[(1'h1):(1'h0)] : (~^(8'haa))) : (&wire9)));
  always
    @(posedge clk) begin
      reg16 <= wire12[(2'h2):(1'h1)];
    end
  assign wire17 = $signed($unsigned(((wire15 + wire12) ?
                      (wire15 <= wire11) : (wire9 || (8'ha5)))));
  assign wire18 = ((~&(wire14 ? $unsigned(reg13) : (wire10 ? wire9 : reg13))) ?
                      $signed($unsigned((wire11 & wire15))) : $signed(wire10));
  assign wire19 = (((|(wire12 ^~ wire10)) ? ((^wire8) << (~^wire11)) : wire8) ?
                      (8'haa) : $signed(((~|reg16) - (~^wire7))));
  assign wire20 = wire10;
  assign wire21 = $unsigned((~^$unsigned((reg16 ? wire20 : reg16))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module33
#(parameter param53 = ({((~&(8'h9e)) - ((8'ha8) ? (8'haf) : (8'h9c)))} >> (|({(8'h9f)} ? {(8'ha8)} : {(8'ha2)}))))
(y, clk, wire37, wire36, wire35, wire34);
  output wire [(32'h61):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire37;
  input wire [(4'h9):(1'h0)] wire36;
  input wire signed [(4'ha):(1'h0)] wire35;
  input wire [(4'h9):(1'h0)] wire34;
  wire signed [(3'h7):(1'h0)] wire52;
  wire signed [(3'h6):(1'h0)] wire44;
  wire signed [(3'h4):(1'h0)] wire43;
  wire [(4'h9):(1'h0)] wire40;
  wire [(4'h8):(1'h0)] wire39;
  wire signed [(3'h7):(1'h0)] wire38;
  reg signed [(4'ha):(1'h0)] reg51 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg50 = (1'h0);
  reg [(4'hb):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg47 = (1'h0);
  reg [(3'h6):(1'h0)] reg46 = (1'h0);
  reg [(2'h3):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg42 = (1'h0);
  reg [(4'ha):(1'h0)] reg41 = (1'h0);
  assign y = {wire52,
                 wire44,
                 wire43,
                 wire40,
                 wire39,
                 wire38,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg42,
                 reg41,
                 (1'h0)};
  assign wire38 = ((wire34[(4'h9):(3'h5)] ?
                      wire37 : ((~^(8'hab)) & {wire36})) ^ $signed(wire35));
  assign wire39 = $signed({$unsigned({wire34})});
  assign wire40 = ((^~wire37[(1'h0):(1'h0)]) ?
                      ($unsigned((~wire38)) ?
                          $signed($signed((8'ha3))) : wire35) : ((wire39 ?
                          (wire38 ?
                              wire36 : wire39) : $unsigned(wire35)) > (wire35 ^~ (wire36 ?
                          wire36 : wire39))));
  always
    @(posedge clk) begin
      reg41 <= (^(-((^wire38) >= (wire39 ? wire35 : wire36))));
      reg42 <= $signed($unsigned((wire39[(4'h8):(3'h4)] ?
          $unsigned(wire39) : {wire35})));
    end
  assign wire43 = wire36;
  assign wire44 = reg42[(3'h5):(3'h5)];
  always
    @(posedge clk) begin
      reg45 <= wire38[(1'h0):(1'h0)];
      if ({$unsigned($signed(wire43[(1'h0):(1'h0)]))})
        begin
          if ($signed((wire39 >= $signed((&wire44)))))
            begin
              reg46 <= (wire44 & (~|(-$unsigned(wire40))));
              reg47 <= ($unsigned(((|wire34) ^ (-reg46))) ?
                  $signed($unsigned(wire36[(3'h5):(3'h5)])) : (wire43[(1'h0):(1'h0)] || wire39[(3'h5):(1'h1)]));
            end
          else
            begin
              reg46 <= $unsigned({$unsigned((reg41 ^ wire36))});
              reg47 <= wire44[(1'h0):(1'h0)];
              reg48 <= $signed(reg45);
            end
          if (({$unsigned($signed(wire40))} != $signed(reg42)))
            begin
              reg49 <= $signed((((wire37 >>> (8'ha8)) ?
                  wire38[(1'h1):(1'h1)] : (+reg42)) == reg45[(2'h2):(2'h2)]));
              reg50 <= (~&$unsigned({(|wire39)}));
            end
          else
            begin
              reg49 <= (8'hab);
              reg50 <= ($unsigned(((reg45 > wire35) & (|wire44))) ?
                  ((^$unsigned(wire44)) <<< (reg47 ?
                      wire40[(1'h1):(1'h1)] : (wire44 ?
                          wire37 : wire44))) : (~^{wire43[(2'h3):(1'h0)]}));
            end
        end
      else
        begin
          reg46 <= reg49[(1'h1):(1'h0)];
        end
      reg51 <= (wire38 ~^ ($unsigned($signed(wire36)) ?
          (~reg41) : $signed({(8'hab)})));
    end
  assign wire52 = (8'ha6);
endmodule