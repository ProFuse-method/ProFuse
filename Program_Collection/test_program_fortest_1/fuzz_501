(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param74 = (-((((8'hac) == (8'haa)) >>> ((8'hae) ^~ (8'h9e))) ? (|(~^(8'ha6))) : (((8'h9c) ? (8'ha3) : (8'hae)) ~^ ((8'hb0) + (8'ha9))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h80):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire0;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire3;
  wire [(4'ha):(1'h0)] wire73;
  wire [(4'h8):(1'h0)] wire72;
  wire signed [(2'h2):(1'h0)] wire71;
  wire signed [(2'h3):(1'h0)] wire70;
  wire signed [(4'hb):(1'h0)] wire69;
  wire [(2'h3):(1'h0)] wire68;
  wire signed [(3'h7):(1'h0)] wire67;
  wire [(4'hb):(1'h0)] wire66;
  wire [(3'h7):(1'h0)] wire10;
  wire [(3'h4):(1'h0)] wire11;
  wire [(4'h8):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire64;
  reg signed [(4'hb):(1'h0)] reg4 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg5 = (1'h0);
  reg [(4'h9):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg7 = (1'h0);
  reg [(3'h6):(1'h0)] reg8 = (1'h0);
  reg [(3'h7):(1'h0)] reg9 = (1'h0);
  assign y = {wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire10,
                 wire11,
                 wire12,
                 wire64,
                 reg4,
                 reg5,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($signed((^((wire3 != wire1) <= (!wire0)))))
        begin
          if ({wire1[(1'h1):(1'h1)]})
            begin
              reg4 <= wire1[(3'h5):(2'h2)];
              reg5 <= reg4[(3'h5):(3'h5)];
            end
          else
            begin
              reg4 <= (~^((|{reg5}) ?
                  ((8'ha5) ~^ (wire3 & reg4)) : $signed((wire1 ?
                      wire2 : wire3))));
              reg5 <= (&(^(((8'haa) - reg5) ? wire3 : (~(8'ha9)))));
            end
          if ((wire3[(3'h5):(2'h2)] >>> ((^~(reg5 ? reg5 : reg4)) < reg4)))
            begin
              reg6 <= (!(!reg4));
              reg7 <= {wire1};
            end
          else
            begin
              reg6 <= reg5;
            end
          if ((wire0 == reg4[(1'h0):(1'h0)]))
            begin
              reg8 <= ({(&$unsigned(reg5))} ?
                  ((^(+wire3)) ?
                      ((~wire2) ? (reg4 ~^ reg4) : $signed((8'haf))) : ((wire0 ?
                          reg5 : wire1) < $unsigned(wire3))) : (~&((wire0 * reg6) & {reg7})));
              reg9 <= ($unsigned({(wire0 ?
                      reg5 : wire1)}) ^~ $signed({(~^reg8)}));
            end
          else
            begin
              reg8 <= (~^{(^(reg7 ? wire3 : reg6))});
              reg9 <= reg8[(1'h0):(1'h0)];
            end
        end
      else
        begin
          reg4 <= (-$unsigned({(wire3 ^ reg4)}));
          reg5 <= (((~((8'hb0) != reg7)) || $signed((wire0 ?
              reg9 : reg9))) > $signed((8'ha5)));
        end
    end
  assign wire10 = {$signed(wire3)};
  assign wire11 = (($signed((reg6 | reg9)) ?
                          reg4[(2'h3):(1'h0)] : $unsigned((wire0 ?
                              wire1 : reg9))) ?
                      (reg8[(3'h6):(2'h3)] ?
                          (reg6 <<< (-wire0)) : $signed({wire3})) : $signed({{reg5}}));
  assign wire12 = (!(^$signed((wire0 * wire11))));
  module13 #() modinst65 (.clk(clk), .wire15(reg4), .wire17(reg6), .wire14(reg7), .wire16(wire2), .y(wire64));
  assign wire66 = wire10[(3'h7):(1'h1)];
  assign wire67 = ({$signed((8'ha8))} ? $signed(reg4) : $unsigned(reg9));
  assign wire68 = $unsigned($unsigned(reg7[(1'h1):(1'h0)]));
  assign wire69 = wire11[(2'h2):(1'h1)];
  assign wire70 = $signed($unsigned(((reg8 != (8'h9e)) || wire11)));
  assign wire71 = {wire67};
  assign wire72 = ((^$unsigned((wire12 ?
                      (8'ha9) : wire69))) <= (wire69[(4'h9):(2'h3)] < $unsigned((wire12 ?
                      (8'h9c) : wire68))));
  assign wire73 = (~$unsigned(wire64[(2'h3):(2'h2)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h4d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire17;
  input wire [(4'hb):(1'h0)] wire16;
  input wire [(4'hb):(1'h0)] wire15;
  input wire signed [(4'h8):(1'h0)] wire14;
  wire signed [(3'h6):(1'h0)] wire63;
  wire [(4'hb):(1'h0)] wire62;
  wire [(2'h2):(1'h0)] wire61;
  wire signed [(4'ha):(1'h0)] wire58;
  wire signed [(4'h8):(1'h0)] wire42;
  wire [(3'h4):(1'h0)] wire41;
  wire [(3'h4):(1'h0)] wire39;
  wire signed [(3'h6):(1'h0)] wire20;
  wire [(2'h3):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire18;
  reg [(4'hb):(1'h0)] reg60 = (1'h0);
  assign y = {wire63,
                 wire62,
                 wire61,
                 wire58,
                 wire42,
                 wire41,
                 wire39,
                 wire20,
                 wire19,
                 wire18,
                 reg60,
                 (1'h0)};
  assign wire18 = ((|wire14[(1'h0):(1'h0)]) ?
                      wire14[(2'h3):(2'h3)] : (($unsigned(wire17) ?
                          wire14[(2'h2):(1'h1)] : ((8'hab) >>> wire17)) * $unsigned(wire14[(1'h0):(1'h0)])));
  assign wire19 = ($signed($signed(wire16[(3'h4):(1'h0)])) & wire14);
  assign wire20 = ($unsigned($unsigned((-wire18))) ?
                      $unsigned($unsigned((wire19 + wire17))) : wire15);
  module21 #() modinst40 (wire39, clk, wire14, wire18, wire17, wire16);
  assign wire41 = wire17[(2'h2):(2'h2)];
  assign wire42 = $signed(((|$signed(wire18)) == $unsigned({wire19})));
  module43 #() modinst59 (wire58, clk, wire16, wire41, wire39, wire15);
  always
    @(posedge clk) begin
      reg60 <= wire16[(2'h2):(2'h2)];
    end
  assign wire61 = ((8'hab) * ((~|wire16[(4'hb):(3'h5)]) == wire15));
  assign wire62 = $unsigned($signed($signed(wire39[(3'h4):(2'h2)])));
  assign wire63 = (^~($signed(wire19) ? (|(wire39 <= wire19)) : wire58));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module43  (y, clk, wire47, wire46, wire45, wire44);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire47;
  input wire signed [(3'h4):(1'h0)] wire46;
  input wire [(3'h4):(1'h0)] wire45;
  input wire [(4'h8):(1'h0)] wire44;
  wire signed [(4'h9):(1'h0)] wire57;
  wire [(4'hb):(1'h0)] wire56;
  wire [(3'h5):(1'h0)] wire55;
  wire signed [(2'h3):(1'h0)] wire54;
  wire signed [(3'h6):(1'h0)] wire53;
  wire signed [(3'h6):(1'h0)] wire48;
  reg [(4'h8):(1'h0)] reg52 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg51 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg50 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg49 = (1'h0);
  assign y = {wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire48,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 (1'h0)};
  assign wire48 = $unsigned(wire47);
  always
    @(posedge clk) begin
      reg49 <= $signed(($unsigned(wire44) ?
          $unsigned(wire48) : ((^wire47) ?
              {wire48} : (wire45 ? wire46 : (8'haf)))));
      if (reg49)
        begin
          reg50 <= wire47;
          reg51 <= wire46[(2'h3):(1'h0)];
          reg52 <= ($signed((8'ha3)) >= wire44);
        end
      else
        begin
          reg50 <= (~^$unsigned(($unsigned(reg52) << ((8'hac) ?
              (8'ha6) : (8'ha7)))));
        end
    end
  assign wire53 = {(~|$signed((+reg50)))};
  assign wire54 = {$signed(wire53[(3'h5):(2'h3)])};
  assign wire55 = wire54;
  assign wire56 = reg50[(3'h4):(1'h0)];
  assign wire57 = wire56;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21
#(parameter param38 = (8'haa))
(y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire25;
  input wire [(4'hb):(1'h0)] wire24;
  input wire [(4'h9):(1'h0)] wire23;
  input wire signed [(3'h6):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire37;
  wire [(3'h6):(1'h0)] wire36;
  wire signed [(4'h9):(1'h0)] wire35;
  wire signed [(3'h6):(1'h0)] wire34;
  wire signed [(4'h9):(1'h0)] wire33;
  wire signed [(4'h9):(1'h0)] wire32;
  wire signed [(3'h5):(1'h0)] wire31;
  wire [(3'h5):(1'h0)] wire30;
  wire signed [(2'h3):(1'h0)] wire29;
  wire signed [(4'h9):(1'h0)] wire28;
  wire signed [(3'h6):(1'h0)] wire27;
  reg signed [(4'ha):(1'h0)] reg26 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 reg26,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg26 <= wire23;
    end
  assign wire27 = (-wire25[(1'h0):(1'h0)]);
  assign wire28 = wire24;
  assign wire29 = wire23[(3'h4):(3'h4)];
  assign wire30 = (|$signed(($signed(wire29) ?
                      {wire28} : wire25[(3'h4):(2'h2)])));
  assign wire31 = (wire27[(1'h1):(1'h0)] ? wire25 : (8'hae));
  assign wire32 = ((8'ha2) == $signed($signed(wire31)));
  assign wire33 = ($unsigned(((wire23 ?
                      reg26 : wire25) ^ wire29[(2'h2):(1'h1)])) ~^ (~&$unsigned($unsigned(wire22))));
  assign wire34 = $signed((+wire32));
  assign wire35 = {$unsigned($unsigned((wire25 ? wire27 : wire34)))};
  assign wire36 = $signed(wire30);
  assign wire37 = (|((-(&(8'ha0))) != ((-(8'haf)) + (wire28 ?
                      wire29 : wire25))));
endmodule