(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param11 = (~|(&(((8'ha0) << (8'h9e)) && {(8'ha9)}))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h32):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire [(2'h3):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire9;
  wire signed [(2'h3):(1'h0)] wire8;
  wire [(3'h6):(1'h0)] wire7;
  wire signed [(3'h5):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire4;
  reg signed [(4'h8):(1'h0)] reg10 = (1'h0);
  reg [(4'hb):(1'h0)] reg6 = (1'h0);
  assign y = {wire9, wire8, wire7, wire5, wire4, reg10, reg6, (1'h0)};
  assign wire4 = (8'hb0);
  assign wire5 = (wire1 >= $signed(((wire1 & wire2) & {wire0})));
  always
    @(posedge clk) begin
      reg6 <= $signed(($signed({wire2}) == wire4[(2'h2):(1'h0)]));
    end
  assign wire7 = $signed($signed(($unsigned(wire1) ? (|wire1) : wire4)));
  assign wire8 = $unsigned($unsigned((|wire0)));
  assign wire9 = (($unsigned(wire4) ?
                     {{(8'haa)}} : $signed($unsigned(wire8))) << $signed((reg6[(1'h0):(1'h0)] ?
                     wire8[(2'h3):(2'h2)] : wire7[(3'h4):(1'h0)])));
  always
    @(posedge clk) begin
      reg10 <= ($unsigned(wire9) >>> {($unsigned(wire7) ?
              $unsigned(wire4) : {wire1})});
    end
endmodule