(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(2'h2):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire8;
  wire signed [(3'h6):(1'h0)] wire5;
  wire [(2'h2):(1'h0)] wire4;
  reg [(4'h9):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg7 = (1'h0);
  reg [(4'h8):(1'h0)] reg6 = (1'h0);
  assign y = {wire8, wire5, wire4, reg9, reg7, reg6, (1'h0)};
  assign wire4 = ($signed($signed((wire2 - wire0))) ?
                     wire0[(3'h6):(1'h0)] : wire2);
  assign wire5 = (^wire4[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      reg6 <= ((!wire3) ?
          {$unsigned((wire4 ~^ wire4))} : $signed($signed($signed((8'ha8)))));
      reg7 <= wire2;
    end
  assign wire8 = (reg6[(4'h8):(3'h7)] ?
                     ((~^{wire5}) ?
                         $unsigned((wire2 ?
                             wire1 : reg6)) : (~(wire2 & wire2))) : $unsigned(($unsigned(wire1) ?
                         wire0[(3'h4):(1'h1)] : $signed(wire1))));
  always
    @(posedge clk) begin
      reg9 <= (8'ha8);
    end
endmodule