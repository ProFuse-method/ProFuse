(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire0;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire3;
  wire signed [(3'h6):(1'h0)] wire28;
  wire signed [(3'h4):(1'h0)] wire27;
  wire [(4'h9):(1'h0)] wire26;
  wire signed [(3'h6):(1'h0)] wire8;
  wire [(4'ha):(1'h0)] wire23;
  reg signed [(2'h2):(1'h0)] reg25 = (1'h0);
  reg [(3'h6):(1'h0)] reg4 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg5 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg6 = (1'h0);
  reg [(3'h5):(1'h0)] reg7 = (1'h0);
  reg [(2'h2):(1'h0)] reg9 = (1'h0);
  assign y = {wire28,
                 wire27,
                 wire26,
                 wire8,
                 wire23,
                 reg25,
                 reg4,
                 reg5,
                 reg6,
                 reg7,
                 reg9,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($unsigned($unsigned(wire1[(3'h4):(2'h3)])))
        begin
          if (($unsigned(({wire1} ^ $unsigned(wire3))) ?
              (($signed(wire0) ? (8'ha2) : (wire3 + (8'ha8))) ?
                  wire2 : (~&(wire2 != wire1))) : wire2))
            begin
              reg4 <= ((~$unsigned((wire0 | wire1))) ?
                  wire2[(2'h3):(1'h1)] : $unsigned(wire3[(3'h6):(2'h3)]));
            end
          else
            begin
              reg4 <= $signed(($unsigned((+wire1)) ?
                  (-wire0[(2'h3):(2'h3)]) : ((wire3 >= (8'ha7)) ?
                      wire2 : (~|reg4))));
              reg5 <= (wire3 ?
                  (reg4[(3'h5):(2'h3)] <= (!$signed(reg4))) : $unsigned(wire0));
              reg6 <= ($signed((8'hae)) <= $unsigned({(!(8'ha4))}));
            end
          reg7 <= (~|wire3[(2'h2):(2'h2)]);
        end
      else
        begin
          reg4 <= $unsigned($unsigned($unsigned(reg6[(3'h4):(2'h2)])));
          if ($signed(reg7[(1'h0):(1'h0)]))
            begin
              reg5 <= reg4[(1'h1):(1'h1)];
              reg6 <= (($unsigned(reg6) ?
                      wire0[(2'h2):(2'h2)] : (^$unsigned(reg6))) ?
                  {(wire1 <= wire0[(1'h0):(1'h0)])} : $signed((reg6 ?
                      reg6 : wire3[(1'h0):(1'h0)])));
              reg7 <= wire1;
            end
          else
            begin
              reg5 <= wire2[(3'h6):(2'h2)];
            end
        end
    end
  assign wire8 = wire2;
  always
    @(posedge clk) begin
      reg9 <= (wire8[(2'h2):(2'h2)] ?
          {(reg5[(3'h4):(2'h3)] ^ ((8'ha4) || (8'hab)))} : $unsigned($signed(wire0)));
    end
  module10 #() modinst24 (.wire14(wire1), .y(wire23), .wire12(wire3), .clk(clk), .wire13(wire8), .wire11(reg6));
  always
    @(posedge clk) begin
      reg25 <= (|wire23[(1'h0):(1'h0)]);
    end
  assign wire26 = $signed({($signed(reg5) ?
                          $unsigned(reg25) : (reg25 ? reg6 : wire3))});
  assign wire27 = (+wire23[(1'h1):(1'h1)]);
  assign wire28 = ($signed((reg5[(2'h3):(1'h0)] >>> (|wire26))) ?
                      reg6[(4'h9):(1'h1)] : $signed($signed(((8'hac) ^~ wire0))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire14;
  input wire [(3'h6):(1'h0)] wire13;
  input wire signed [(3'h7):(1'h0)] wire12;
  input wire signed [(4'h9):(1'h0)] wire11;
  wire [(3'h4):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire21;
  wire signed [(4'hb):(1'h0)] wire20;
  wire [(3'h4):(1'h0)] wire19;
  reg [(4'h9):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg15 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire20,
                 wire19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire14[(2'h3):(1'h0)])
        begin
          reg15 <= ({(!(&(8'ha8)))} <<< (&wire13));
          if (($signed((^$unsigned(wire12))) == wire12[(3'h4):(2'h3)]))
            begin
              reg16 <= (reg15[(2'h2):(1'h1)] || wire14[(1'h1):(1'h1)]);
            end
          else
            begin
              reg16 <= wire14;
            end
          reg17 <= $signed($signed((~^(&wire12))));
        end
      else
        begin
          reg15 <= $unsigned((wire13 >= {(reg15 == wire14)}));
          reg16 <= reg16;
          reg17 <= wire14[(2'h3):(2'h3)];
        end
      reg18 <= ((wire11 - ((wire13 < reg15) || wire12)) ?
          ($signed(wire14) ?
              reg17[(2'h2):(1'h1)] : (~|$signed(wire11))) : $unsigned({(|reg17)}));
    end
  assign wire19 = $unsigned($unsigned((~|$unsigned((8'ha6)))));
  assign wire20 = wire11[(3'h5):(2'h3)];
  assign wire21 = (wire13[(1'h0):(1'h0)] + (~^(wire19 ?
                      $signed(reg17) : wire11[(4'h8):(2'h2)])));
  assign wire22 = wire20;
endmodule