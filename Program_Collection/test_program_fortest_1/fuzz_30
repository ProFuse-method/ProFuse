(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire59;
  wire [(3'h4):(1'h0)] wire58;
  wire signed [(4'h9):(1'h0)] wire57;
  wire signed [(4'ha):(1'h0)] wire53;
  wire signed [(4'h8):(1'h0)] wire52;
  wire [(2'h2):(1'h0)] wire51;
  wire [(4'hb):(1'h0)] wire46;
  wire signed [(4'hb):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg56 = (1'h0);
  reg [(4'hb):(1'h0)] reg55 = (1'h0);
  reg [(4'ha):(1'h0)] reg54 = (1'h0);
  reg [(4'h9):(1'h0)] reg50 = (1'h0);
  reg [(3'h5):(1'h0)] reg49 = (1'h0);
  reg [(4'h8):(1'h0)] reg48 = (1'h0);
  assign y = {wire59,
                 wire58,
                 wire57,
                 wire53,
                 wire52,
                 wire51,
                 wire46,
                 wire5,
                 wire4,
                 reg56,
                 reg55,
                 reg54,
                 reg50,
                 reg49,
                 reg48,
                 (1'h0)};
  assign wire4 = (-($signed((wire1 < wire1)) - (&$unsigned(wire2))));
  assign wire5 = (wire3[(3'h4):(1'h1)] ?
                     {wire3[(1'h0):(1'h0)]} : $signed((|(wire1 >= wire2))));
  module6 #() modinst47 (wire46, clk, wire0, wire2, wire1, wire5);
  always
    @(posedge clk) begin
      reg48 <= $signed((&((wire46 ~^ wire0) && {wire0})));
      if (((^~(~|$unsigned(wire46))) >= (~|wire46)))
        begin
          reg49 <= wire4[(4'ha):(2'h2)];
          reg50 <= $unsigned($signed((!((8'ha0) || wire1))));
        end
      else
        begin
          if (((8'ha8) | (!{$unsigned(wire2)})))
            begin
              reg49 <= $signed(({(wire46 - (8'ha1))} ?
                  $unsigned(wire0) : $signed($signed((8'ha4)))));
              reg50 <= (wire5[(2'h3):(1'h1)] * $signed(wire2));
            end
          else
            begin
              reg49 <= {(((8'ha6) < (^wire5)) ?
                      wire5[(4'ha):(4'h8)] : $signed({wire46}))};
              reg50 <= ($signed(wire46[(3'h6):(3'h4)]) != ((wire0[(1'h0):(1'h0)] ?
                      (wire2 ? wire46 : (8'ha4)) : $unsigned(reg49)) ?
                  (wire0[(3'h6):(1'h0)] ?
                      $unsigned(reg48) : (wire2 ?
                          wire0 : wire1)) : (-$unsigned(reg48))));
            end
        end
    end
  assign wire51 = (+($unsigned(((8'ha4) != wire4)) ?
                      (^~$signed(wire0)) : ((wire2 + wire46) < {(8'ha3)})));
  assign wire52 = wire4;
  assign wire53 = ((8'ha4) ? wire52 : $signed(wire52[(3'h6):(1'h1)]));
  always
    @(posedge clk) begin
      reg54 <= {$unsigned(wire46)};
      reg55 <= reg50[(2'h2):(2'h2)];
      reg56 <= (~|$signed((!(wire53 ? wire3 : wire53))));
    end
  assign wire57 = (&$unsigned($unsigned((wire3 ? wire2 : reg55))));
  assign wire58 = {(wire51[(2'h2):(1'h1)] || wire5[(1'h0):(1'h0)])};
  assign wire59 = (&reg55[(4'hb):(4'ha)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param45 = ({(!(8'haa))} < ({(8'ha2)} ? ({(8'had)} == ((8'ha3) ? (8'ha3) : (8'ha8))) : ((~|(8'hae)) ? ((8'h9d) >> (8'h9d)) : ((8'had) & (8'had))))))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire10;
  input wire signed [(3'h6):(1'h0)] wire9;
  input wire [(3'h6):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire43;
  wire signed [(4'hb):(1'h0)] wire13;
  wire [(3'h5):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire11;
  assign y = {wire43, wire13, wire12, wire11, (1'h0)};
  assign wire11 = (~^((((8'had) && wire8) < wire7[(3'h5):(3'h5)]) == (!wire9)));
  assign wire12 = (^(wire7[(1'h1):(1'h1)] ?
                      $signed((^wire7)) : (|(wire8 + wire11))));
  assign wire13 = ((wire9[(1'h0):(1'h0)] << wire11[(2'h3):(2'h3)]) || $signed($signed($unsigned(wire7))));
  module14 #() modinst44 (.wire17(wire12), .clk(clk), .wire16(wire13), .wire18(wire8), .wire15(wire11), .y(wire43));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'ha9):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire18;
  input wire [(2'h2):(1'h0)] wire17;
  input wire signed [(4'hb):(1'h0)] wire16;
  input wire signed [(3'h5):(1'h0)] wire15;
  wire [(4'ha):(1'h0)] wire41;
  wire [(3'h7):(1'h0)] wire40;
  wire signed [(4'hb):(1'h0)] wire39;
  wire [(3'h7):(1'h0)] wire38;
  wire signed [(3'h7):(1'h0)] wire37;
  wire [(4'ha):(1'h0)] wire34;
  wire [(3'h6):(1'h0)] wire33;
  wire signed [(3'h7):(1'h0)] wire32;
  wire signed [(4'ha):(1'h0)] wire19;
  reg signed [(2'h3):(1'h0)] reg42 = (1'h0);
  reg [(4'h9):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg31 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg29 = (1'h0);
  reg [(2'h3):(1'h0)] reg28 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg27 = (1'h0);
  reg [(2'h2):(1'h0)] reg26 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg25 = (1'h0);
  reg [(3'h5):(1'h0)] reg24 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg23 = (1'h0);
  reg [(3'h6):(1'h0)] reg22 = (1'h0);
  reg [(3'h6):(1'h0)] reg21 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg20 = (1'h0);
  assign y = {wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire34,
                 wire33,
                 wire32,
                 wire19,
                 reg42,
                 reg36,
                 reg35,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  assign wire19 = (|(^~(|$unsigned(wire16))));
  always
    @(posedge clk) begin
      reg20 <= $unsigned($unsigned(wire16[(3'h4):(2'h3)]));
      if (reg20)
        begin
          if (({reg20} ~^ wire16[(3'h4):(1'h1)]))
            begin
              reg21 <= (^wire17);
              reg22 <= $signed((wire17 != reg20[(3'h5):(1'h0)]));
              reg23 <= reg20;
            end
          else
            begin
              reg21 <= (~&wire15);
            end
        end
      else
        begin
          reg21 <= wire18[(3'h4):(2'h3)];
        end
      reg24 <= reg22[(2'h3):(1'h1)];
    end
  always
    @(posedge clk) begin
      if (((&(((8'h9c) ? wire16 : (8'hac)) ?
              reg23[(4'h9):(3'h6)] : (wire17 - reg22))) ?
          {reg22} : {($signed(wire16) ? (~reg24) : $unsigned(reg24))}))
        begin
          reg25 <= (^((~|(reg21 >> reg22)) ?
              ($signed(reg21) ^~ (wire17 ? (8'ha5) : reg24)) : wire19));
        end
      else
        begin
          reg25 <= (-$unsigned($unsigned((wire18 ? reg20 : reg21))));
          reg26 <= ((((^reg22) != (wire16 ? wire19 : reg22)) ?
              ($signed(wire18) ?
                  $signed(wire17) : wire15) : {(8'ha5)}) - (|(^{(8'hab)})));
          reg27 <= (reg24[(3'h4):(2'h3)] <<< wire17[(1'h1):(1'h1)]);
        end
      if ($unsigned(reg25[(2'h2):(1'h1)]))
        begin
          reg28 <= ((-((^reg25) >> (reg27 ? reg25 : reg25))) ?
              ({(8'h9e)} >> (8'ha3)) : wire15[(3'h5):(2'h3)]);
          reg29 <= (^~wire16);
          reg30 <= (8'ha9);
        end
      else
        begin
          reg28 <= reg29[(1'h1):(1'h0)];
          reg29 <= ($signed(($signed(reg22) <= (reg21 * reg25))) ?
              {$unsigned($unsigned(reg21))} : $signed(($unsigned(reg23) ?
                  (|wire19) : $signed((8'ha3)))));
          reg30 <= (~^reg26);
        end
      reg31 <= ($signed(reg25[(2'h3):(2'h3)]) ?
          reg29 : (|((8'hae) ? reg25[(3'h6):(2'h2)] : (~^reg24))));
    end
  assign wire32 = $signed((reg26[(1'h1):(1'h0)] >> ((wire19 ? reg23 : reg29) ?
                      (8'ha0) : (8'hb0))));
  assign wire33 = $signed($unsigned(((|reg20) ^ (&reg25))));
  assign wire34 = $unsigned($unsigned(((~^(8'hac)) ?
                      {reg27} : reg27[(3'h6):(3'h5)])));
  always
    @(posedge clk) begin
      reg35 <= ((~^{reg28[(1'h1):(1'h1)]}) < reg31);
      reg36 <= reg31;
    end
  assign wire37 = reg21;
  assign wire38 = (~((reg36 ? (-reg24) : (8'ha2)) ?
                      reg30[(4'h8):(1'h0)] : reg23));
  assign wire39 = $signed((~&reg35));
  assign wire40 = reg36[(3'h6):(2'h2)];
  assign wire41 = ((wire33[(3'h5):(1'h1)] ?
                      $unsigned((~^(8'ha2))) : $signed($signed(reg31))) + wire16);
  always
    @(posedge clk) begin
      reg42 <= (reg36[(3'h6):(2'h2)] == (((reg23 ?
          wire41 : (8'ha1)) == $unsigned((8'h9d))) >> ((reg29 ~^ (8'ha2)) >>> $signed(wire38))));
    end
endmodule