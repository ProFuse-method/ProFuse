(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h9c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire0;
  input wire [(4'h9):(1'h0)] wire1;
  input wire [(2'h2):(1'h0)] wire2;
  input wire signed [(2'h2):(1'h0)] wire3;
  wire [(2'h3):(1'h0)] wire88;
  wire signed [(3'h5):(1'h0)] wire87;
  wire [(3'h6):(1'h0)] wire86;
  wire signed [(3'h7):(1'h0)] wire84;
  wire [(4'h9):(1'h0)] wire4;
  wire [(4'h9):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire9;
  wire signed [(4'ha):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire82;
  reg signed [(3'h7):(1'h0)] reg6 = (1'h0);
  reg [(3'h4):(1'h0)] reg7 = (1'h0);
  reg [(4'h9):(1'h0)] reg8 = (1'h0);
  reg [(4'ha):(1'h0)] reg10 = (1'h0);
  reg [(4'h9):(1'h0)] reg11 = (1'h0);
  reg [(2'h2):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg14 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg15 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg16 = (1'h0);
  reg [(4'hb):(1'h0)] reg17 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg18 = (1'h0);
  assign y = {wire88,
                 wire87,
                 wire86,
                 wire84,
                 wire4,
                 wire5,
                 wire9,
                 wire13,
                 wire82,
                 reg6,
                 reg7,
                 reg8,
                 reg10,
                 reg11,
                 reg12,
                 reg14,
                 reg15,
                 reg16,
                 reg17,
                 reg18,
                 (1'h0)};
  assign wire4 = wire0[(3'h5):(3'h4)];
  assign wire5 = wire3;
  always
    @(posedge clk) begin
      reg6 <= (((!wire4[(1'h1):(1'h1)]) < (|$signed(wire2))) ?
          $signed($signed(wire5)) : (($signed((8'ha1)) ?
                  (wire4 ? wire4 : wire5) : (!wire0)) ?
              ({wire5} && wire0[(3'h6):(2'h3)]) : (8'hac)));
      reg7 <= (((|(wire3 < wire0)) ? {wire2} : {(wire3 > wire1)}) ?
          $signed(($unsigned(wire0) ?
              {(8'h9e)} : $signed(wire1))) : $signed(($unsigned(wire3) | wire2)));
      reg8 <= (~&{wire3});
    end
  assign wire9 = reg6;
  always
    @(posedge clk) begin
      reg10 <= ($signed(wire9) == {(~(-wire0))});
      reg11 <= $signed({(|wire5[(2'h3):(2'h2)])});
      reg12 <= {$signed($unsigned(wire5[(2'h3):(1'h1)]))};
    end
  assign wire13 = {wire5};
  always
    @(posedge clk) begin
      if ((8'h9f))
        begin
          reg14 <= ({($unsigned((8'hac)) ^~ (8'h9c))} && (wire5 >> (wire4[(3'h6):(1'h1)] ?
              wire1[(3'h4):(1'h1)] : reg6)));
          reg15 <= $unsigned(reg6);
          reg16 <= ((8'hae) ?
              (8'hb0) : $signed(((reg11 >= reg10) * (wire4 ? reg10 : wire4))));
        end
      else
        begin
          if (wire0)
            begin
              reg14 <= ((((wire13 <<< reg8) <= wire4[(3'h6):(2'h3)]) ?
                  wire2 : (|(~^reg15))) - (~|{(&(8'h9c))}));
              reg15 <= (~|wire0);
            end
          else
            begin
              reg14 <= wire13[(1'h0):(1'h0)];
              reg15 <= reg12;
            end
          reg16 <= $unsigned(reg11[(3'h4):(2'h2)]);
          reg17 <= $unsigned(((((8'h9d) - wire4) == wire1) + $signed((wire4 ?
              wire5 : reg7))));
        end
      reg18 <= reg16;
    end
  module19 #() modinst83 (.wire21(reg14), .wire22(reg18), .wire23(reg11), .wire20(wire0), .clk(clk), .y(wire82));
  module25 #() modinst85 (wire84, clk, reg10, wire1, wire9, reg15);
  assign wire86 = ((8'h9f) ?
                      ((~|reg15[(3'h6):(3'h6)]) ?
                          $signed((&reg12)) : ((wire84 <= wire3) ?
                              $unsigned(reg12) : (wire82 ?
                                  (8'ha3) : (8'ha7)))) : wire2[(1'h0):(1'h0)]);
  assign wire87 = (~&{(~^(~&reg16))});
  module52 #() modinst89 (wire88, clk, reg8, wire82, reg10, wire13);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module19  (y, clk, wire23, wire22, wire21, wire20);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire23;
  input wire [(4'h9):(1'h0)] wire22;
  input wire [(3'h6):(1'h0)] wire21;
  input wire signed [(4'ha):(1'h0)] wire20;
  wire [(3'h7):(1'h0)] wire81;
  wire [(3'h7):(1'h0)] wire80;
  wire [(3'h7):(1'h0)] wire79;
  wire [(4'h8):(1'h0)] wire78;
  wire signed [(2'h2):(1'h0)] wire76;
  wire signed [(4'hb):(1'h0)] wire75;
  wire signed [(3'h5):(1'h0)] wire72;
  wire signed [(4'ha):(1'h0)] wire71;
  wire [(4'ha):(1'h0)] wire69;
  wire [(4'ha):(1'h0)] wire50;
  wire [(4'ha):(1'h0)] wire24;
  reg [(2'h3):(1'h0)] reg74 = (1'h0);
  reg [(3'h7):(1'h0)] reg73 = (1'h0);
  assign y = {wire81,
                 wire80,
                 wire79,
                 wire78,
                 wire76,
                 wire75,
                 wire72,
                 wire71,
                 wire69,
                 wire50,
                 wire24,
                 reg74,
                 reg73,
                 (1'h0)};
  assign wire24 = wire23[(1'h0):(1'h0)];
  module25 #() modinst51 (wire50, clk, wire22, wire24, wire23, wire21);
  module52 #() modinst70 (.clk(clk), .y(wire69), .wire53(wire24), .wire55(wire21), .wire54(wire23), .wire56(wire50));
  assign wire71 = ((8'h9c) <= wire21);
  assign wire72 = (({wire50[(4'h8):(3'h4)]} ?
                      $unsigned(((8'ha4) ~^ wire22)) : (+wire24)) - (wire21 ?
                      $unsigned((^~wire23)) : wire69));
  always
    @(posedge clk) begin
      reg73 <= wire72[(3'h5):(2'h2)];
      reg74 <= $unsigned(wire22[(4'h9):(1'h0)]);
    end
  assign wire75 = wire24[(2'h3):(2'h3)];
  module52 #() modinst77 (.wire56(wire50), .wire53(wire71), .y(wire76), .clk(clk), .wire54(wire23), .wire55(wire72));
  assign wire78 = {(8'h9d)};
  assign wire79 = ($unsigned({wire72}) ?
                      {$unsigned((~^wire50))} : ({((8'hb0) ?
                              wire21 : wire24)} << {wire50}));
  assign wire80 = $unsigned(($unsigned(wire71[(3'h5):(2'h2)]) <= (!((8'ha6) <<< (8'h9d)))));
  assign wire81 = wire71;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module52  (y, clk, wire56, wire55, wire54, wire53);
  output wire [(32'h57):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire56;
  input wire [(2'h3):(1'h0)] wire55;
  input wire signed [(4'h9):(1'h0)] wire54;
  input wire [(4'ha):(1'h0)] wire53;
  wire signed [(2'h3):(1'h0)] wire68;
  wire [(2'h2):(1'h0)] wire67;
  wire [(3'h5):(1'h0)] wire66;
  wire [(4'h9):(1'h0)] wire65;
  wire [(4'h9):(1'h0)] wire64;
  wire [(4'hb):(1'h0)] wire62;
  wire [(4'hb):(1'h0)] wire61;
  wire [(3'h5):(1'h0)] wire60;
  wire signed [(4'h8):(1'h0)] wire59;
  wire [(4'ha):(1'h0)] wire58;
  wire signed [(4'h8):(1'h0)] wire57;
  reg [(3'h5):(1'h0)] reg63 = (1'h0);
  assign y = {wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire64,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire57,
                 reg63,
                 (1'h0)};
  assign wire57 = $unsigned($unsigned($unsigned((wire56 ? wire56 : wire53))));
  assign wire58 = ((^{wire53[(4'ha):(4'h9)]}) & ($unsigned((wire55 | wire53)) ?
                      (^((8'h9e) - wire53)) : (((8'ha3) ? wire56 : wire54) ?
                          wire53[(3'h4):(1'h0)] : ((8'ha6) <<< wire53))));
  assign wire59 = wire57;
  assign wire60 = ($signed($signed(wire59)) ?
                      {(~|(8'ha9))} : $unsigned((wire54 ?
                          {(8'ha7)} : (wire53 ? wire53 : wire58))));
  assign wire61 = wire54;
  assign wire62 = (^~wire56[(1'h1):(1'h1)]);
  always
    @(posedge clk) begin
      reg63 <= wire56;
    end
  assign wire64 = (~&wire62[(2'h3):(2'h2)]);
  assign wire65 = ($unsigned($signed((+reg63))) >>> (wire62[(4'hb):(3'h5)] ?
                      ((^wire57) ? wire56 : wire61) : $signed({wire53})));
  assign wire66 = $signed((-(wire54 > (|reg63))));
  assign wire67 = $unsigned((((~&(8'ha9)) ? wire56 : (+wire58)) ?
                      reg63[(3'h4):(1'h0)] : wire64));
  assign wire68 = ((wire56[(1'h1):(1'h0)] > $unsigned((-reg63))) ?
                      reg63[(1'h0):(1'h0)] : (($unsigned(wire56) != $signed(wire62)) <<< {(!(8'ha0))}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25  (y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h7a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire29;
  input wire [(4'h9):(1'h0)] wire28;
  input wire signed [(3'h7):(1'h0)] wire27;
  input wire [(3'h6):(1'h0)] wire26;
  wire [(3'h5):(1'h0)] wire49;
  wire signed [(4'h8):(1'h0)] wire42;
  wire [(4'hb):(1'h0)] wire34;
  wire [(3'h6):(1'h0)] wire33;
  wire [(3'h7):(1'h0)] wire32;
  wire signed [(3'h4):(1'h0)] wire31;
  wire [(3'h7):(1'h0)] wire30;
  reg [(3'h5):(1'h0)] reg48 = (1'h0);
  reg [(2'h3):(1'h0)] reg47 = (1'h0);
  reg [(4'h9):(1'h0)] reg46 = (1'h0);
  reg [(3'h6):(1'h0)] reg45 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg41 = (1'h0);
  reg [(3'h7):(1'h0)] reg40 = (1'h0);
  reg [(2'h3):(1'h0)] reg39 = (1'h0);
  reg [(2'h2):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg37 = (1'h0);
  reg [(3'h5):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg35 = (1'h0);
  assign y = {wire49,
                 wire42,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 (1'h0)};
  assign wire30 = wire29;
  assign wire31 = (((~^wire26[(3'h5):(2'h3)]) <= $signed((~|wire29))) ?
                      (&wire30) : wire29);
  assign wire32 = $signed(wire27);
  assign wire33 = ({wire27[(2'h3):(2'h2)]} ?
                      $unsigned((^(wire30 ? wire30 : wire27))) : wire28);
  assign wire34 = {wire31[(1'h1):(1'h1)]};
  always
    @(posedge clk) begin
      reg35 <= $unsigned(wire29[(4'h8):(1'h0)]);
      reg36 <= (~^wire31[(3'h4):(1'h1)]);
      reg37 <= (~|(wire30 << {wire26[(3'h4):(1'h0)]}));
    end
  always
    @(posedge clk) begin
      if ((8'ha4))
        begin
          reg38 <= {$signed($signed(wire29))};
          reg39 <= ({$signed($unsigned(wire34))} ?
              $signed((reg38 && (wire30 ^ wire29))) : $signed((8'h9c)));
        end
      else
        begin
          reg38 <= $signed(reg35[(1'h1):(1'h1)]);
        end
      reg40 <= ($signed(reg36[(3'h4):(1'h0)]) + ($signed(wire30[(1'h1):(1'h0)]) ?
          $unsigned($signed(wire28)) : ($signed(reg38) ?
              (wire32 << reg36) : (reg35 ? wire26 : reg38))));
      reg41 <= wire29[(3'h5):(2'h2)];
    end
  assign wire42 = $unsigned($unsigned(wire33[(2'h3):(1'h1)]));
  always
    @(posedge clk) begin
      reg43 <= $signed($signed(reg41));
      if (($signed(wire26[(3'h6):(3'h4)]) ^ wire33))
        begin
          if (((((^~reg41) ? (wire30 | reg35) : (wire28 ? wire29 : reg41)) ?
              $signed({reg39}) : $signed($signed((8'ha6)))) ^ ($unsigned($signed(wire30)) ^ {reg38[(1'h0):(1'h0)]})))
            begin
              reg44 <= $unsigned(wire27[(2'h3):(2'h3)]);
              reg45 <= (&wire34[(1'h1):(1'h0)]);
              reg46 <= $unsigned($unsigned(((wire29 ?
                  wire31 : wire34) | $unsigned(reg37))));
            end
          else
            begin
              reg44 <= $signed(($signed(wire28[(3'h5):(2'h3)]) ?
                  $unsigned((reg39 && wire28)) : ((^wire42) << (wire29 <<< reg44))));
              reg45 <= wire31[(2'h3):(2'h3)];
              reg46 <= $unsigned($signed($unsigned(reg43)));
            end
          reg47 <= wire27;
        end
      else
        begin
          reg44 <= wire30[(3'h4):(1'h0)];
          reg45 <= ((8'ha1) <= wire26[(1'h0):(1'h0)]);
          reg46 <= reg40[(3'h5):(1'h0)];
        end
      reg48 <= $unsigned($signed($unsigned(reg43[(2'h3):(1'h1)])));
    end
  assign wire49 = $signed($signed((reg46 < $unsigned(reg36))));
endmodule