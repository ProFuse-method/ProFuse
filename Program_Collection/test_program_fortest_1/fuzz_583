(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'hb8):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire79;
  wire signed [(3'h7):(1'h0)] wire69;
  wire signed [(4'hb):(1'h0)] wire12;
  wire [(4'hb):(1'h0)] wire11;
  wire [(3'h7):(1'h0)] wire4;
  wire [(3'h5):(1'h0)] wire76;
  wire [(3'h5):(1'h0)] wire77;
  reg [(4'ha):(1'h0)] reg84 = (1'h0);
  reg [(3'h7):(1'h0)] reg83 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg82 = (1'h0);
  reg [(3'h7):(1'h0)] reg81 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg80 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg9 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg [(4'hb):(1'h0)] reg7 = (1'h0);
  reg [(4'ha):(1'h0)] reg6 = (1'h0);
  reg [(4'hb):(1'h0)] reg5 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg71 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg72 = (1'h0);
  reg [(4'h9):(1'h0)] reg73 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg74 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg75 = (1'h0);
  assign y = {wire79,
                 wire69,
                 wire12,
                 wire11,
                 wire4,
                 wire76,
                 wire77,
                 reg84,
                 reg83,
                 reg82,
                 reg81,
                 reg80,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 reg71,
                 reg72,
                 reg73,
                 reg74,
                 reg75,
                 (1'h0)};
  assign wire4 = wire2[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg5 <= wire0;
      if ((^~$signed({wire3[(1'h0):(1'h0)]})))
        begin
          reg6 <= (-$unsigned((~(8'h9f))));
          if ((wire0 ?
              $signed(($unsigned(wire2) <= reg5)) : (wire0[(3'h4):(2'h3)] | $signed(wire4))))
            begin
              reg7 <= $unsigned($unsigned($unsigned(wire0[(4'hb):(1'h0)])));
              reg8 <= (~reg7[(2'h2):(2'h2)]);
            end
          else
            begin
              reg7 <= $signed(wire4);
              reg8 <= reg7[(3'h5):(1'h1)];
              reg9 <= $unsigned(({reg8} ? {$unsigned((8'hb0))} : wire2));
            end
        end
      else
        begin
          if ($unsigned($signed((+$signed((8'ha4))))))
            begin
              reg6 <= (~^(((reg9 ~^ wire2) >> wire0) ?
                  (8'had) : (&wire1[(1'h0):(1'h0)])));
            end
          else
            begin
              reg6 <= {{($signed(reg7) ?
                          wire4[(1'h1):(1'h1)] : $unsigned(reg8))}};
              reg7 <= {(reg9[(1'h1):(1'h1)] ?
                      wire4[(3'h5):(3'h5)] : $signed($unsigned((8'ha5))))};
            end
        end
      reg10 <= {reg7};
    end
  assign wire11 = reg10;
  assign wire12 = ($signed(wire11) != ((~^{wire1}) ?
                      (~^((8'h9c) * reg7)) : reg8[(4'h9):(3'h4)]));
  module13 #() modinst70 (.clk(clk), .wire17(reg10), .wire15(wire12), .wire16(reg8), .y(wire69), .wire14(reg5));
  always
    @(posedge clk) begin
      reg71 <= (&(&(reg10[(2'h3):(1'h0)] ? (^(8'ha0)) : (reg6 & reg5))));
    end
  always
    @(posedge clk) begin
      reg72 <= (wire69 & (^~((reg9 ? wire3 : wire11) & $unsigned((8'ha7)))));
      reg73 <= (!$unsigned((^~(^wire2))));
      if (wire2[(2'h2):(1'h0)])
        begin
          reg74 <= (^(8'hab));
          reg75 <= ((^$signed((^wire11))) && ($unsigned(wire69[(2'h3):(1'h1)]) <= $signed($signed((8'haa)))));
        end
      else
        begin
          reg74 <= $signed($signed((|(reg73 ? reg71 : reg9))));
        end
    end
  assign wire76 = $unsigned((^~reg73));
  module43 #() modinst78 (wire77, clk, wire11, reg8, wire2, wire76);
  assign wire79 = reg5[(2'h3):(2'h3)];
  always
    @(posedge clk) begin
      if ($unsigned($unsigned($unsigned((~wire77)))))
        begin
          reg80 <= $unsigned(reg7);
          reg81 <= $unsigned($unsigned(((wire76 && reg8) * $unsigned(reg5))));
        end
      else
        begin
          reg80 <= (8'ha8);
          reg81 <= (^$unsigned((reg73 > (wire79 ? reg6 : (8'hae)))));
        end
      reg82 <= ((($unsigned(reg75) ?
                  wire11[(4'ha):(3'h5)] : (wire11 ? (8'ha8) : wire1)) ?
              reg8[(3'h7):(2'h2)] : reg7[(1'h0):(1'h0)]) ?
          ($unsigned(reg74[(2'h2):(1'h1)]) ?
              $unsigned((&wire69)) : reg72[(1'h0):(1'h0)]) : (|{$unsigned(reg6)}));
    end
  always
    @(posedge clk) begin
      reg83 <= (8'ha0);
      reg84 <= $signed(wire77[(3'h5):(2'h2)]);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire14, wire15, wire16, wire17);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire14;
  input wire [(4'hb):(1'h0)] wire15;
  input wire signed [(4'hb):(1'h0)] wire16;
  input wire signed [(4'hb):(1'h0)] wire17;
  wire signed [(4'hb):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire19;
  wire [(4'hb):(1'h0)] wire41;
  wire [(3'h6):(1'h0)] wire57;
  wire [(3'h7):(1'h0)] wire60;
  wire [(4'ha):(1'h0)] wire61;
  wire signed [(4'hb):(1'h0)] wire62;
  wire [(4'h8):(1'h0)] wire63;
  wire [(3'h4):(1'h0)] wire65;
  wire signed [(4'h9):(1'h0)] wire66;
  wire signed [(4'h9):(1'h0)] wire67;
  reg [(4'ha):(1'h0)] reg59 = (1'h0);
  assign y = {wire18,
                 wire19,
                 wire41,
                 wire57,
                 wire60,
                 wire61,
                 wire62,
                 wire63,
                 wire65,
                 wire66,
                 wire67,
                 reg59,
                 (1'h0)};
  assign wire18 = wire15[(4'h8):(3'h5)];
  assign wire19 = (~^(^{$unsigned(wire15)}));
  module20 #() modinst42 (wire41, clk, wire19, wire17, wire16, wire18);
  module43 #() modinst58 (wire57, clk, wire16, wire41, wire15, wire14);
  always
    @(posedge clk) begin
      reg59 <= wire57;
    end
  assign wire60 = (wire41 ? (~{(wire15 ? wire16 : wire14)}) : (8'ha6));
  assign wire61 = wire17[(3'h4):(1'h1)];
  assign wire62 = (($signed((wire14 ? wire60 : (8'h9d))) ?
                      $signed((8'h9d)) : wire19[(1'h0):(1'h0)]) ^~ wire61[(3'h4):(1'h0)]);
  module43 #() modinst64 (wire63, clk, wire17, wire60, wire14, wire15);
  assign wire65 = {wire57};
  assign wire66 = {(((~&wire65) ? (8'ha3) : $unsigned(wire41)) ?
                          ((|wire14) ?
                              $unsigned(wire57) : (wire62 << wire62)) : ({wire15} ?
                              $signed(wire17) : (wire57 || wire19)))};
  module20 #() modinst68 (.wire21(wire66), .wire24(wire16), .y(wire67), .wire22(reg59), .clk(clk), .wire23(wire41));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module43  (y, clk, wire47, wire46, wire45, wire44);
  output wire [(32'h38):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire47;
  input wire signed [(2'h2):(1'h0)] wire46;
  input wire signed [(4'hb):(1'h0)] wire45;
  input wire signed [(2'h3):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire56;
  wire signed [(3'h7):(1'h0)] wire55;
  wire [(3'h6):(1'h0)] wire54;
  wire signed [(4'ha):(1'h0)] wire53;
  wire [(3'h6):(1'h0)] wire49;
  wire signed [(3'h5):(1'h0)] wire48;
  reg signed [(3'h5):(1'h0)] reg52 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg50 = (1'h0);
  assign y = {wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire49,
                 wire48,
                 reg52,
                 reg51,
                 reg50,
                 (1'h0)};
  assign wire48 = $signed(wire46);
  assign wire49 = $signed((~^$signed({(8'haf)})));
  always
    @(posedge clk) begin
      reg50 <= (&(^~$signed(wire46)));
      reg51 <= ({wire44} ?
          ((~^{wire45}) ?
              $unsigned($signed((8'hac))) : ((wire44 ? (8'h9e) : reg50) ?
                  $unsigned(wire45) : (wire45 ? wire44 : wire48))) : {(8'ha3)});
      reg52 <= (!wire45[(3'h5):(3'h5)]);
    end
  assign wire53 = (|($unsigned((reg52 != reg51)) ?
                      reg50 : $unsigned($signed(wire45))));
  assign wire54 = ($signed(($unsigned(wire47) ? {wire46} : $unsigned(wire47))) ?
                      reg51 : (($signed(reg52) == $unsigned(wire48)) ?
                          (!(|wire53)) : {reg52}));
  assign wire55 = ((^~wire44) >= (wire54 ?
                      (wire54 ?
                          wire45[(4'ha):(4'h8)] : (wire47 & (8'h9c))) : wire54[(3'h5):(1'h1)]));
  assign wire56 = (wire54[(3'h5):(1'h1)] <= wire44[(1'h1):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param40 = {(&(((8'ha9) ~^ (8'h9f)) ? {(8'hac)} : {(8'hac)}))})
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h6d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire24;
  input wire [(4'hb):(1'h0)] wire23;
  input wire [(2'h3):(1'h0)] wire22;
  input wire signed [(2'h3):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire39;
  wire signed [(4'h8):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire32;
  wire [(3'h4):(1'h0)] wire31;
  wire signed [(4'h9):(1'h0)] wire30;
  wire [(4'h9):(1'h0)] wire29;
  wire [(4'ha):(1'h0)] wire28;
  wire signed [(2'h3):(1'h0)] wire27;
  wire signed [(4'hb):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire25;
  reg signed [(3'h4):(1'h0)] reg37 = (1'h0);
  reg [(4'h9):(1'h0)] reg36 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg34 = (1'h0);
  reg [(4'h9):(1'h0)] reg33 = (1'h0);
  assign y = {wire39,
                 wire38,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 (1'h0)};
  assign wire25 = (-$signed(wire22[(1'h1):(1'h1)]));
  assign wire26 = (({{wire23}} ^~ wire21[(1'h1):(1'h0)]) ?
                      $signed($unsigned((8'ha5))) : ((^~(wire24 << wire22)) ?
                          ($signed(wire23) * $signed((8'hae))) : (^~(+wire21))));
  assign wire27 = wire22[(1'h1):(1'h1)];
  assign wire28 = (+$signed($signed(((8'haa) - wire26))));
  assign wire29 = $unsigned(wire25);
  assign wire30 = ($unsigned(wire28[(4'h9):(2'h3)]) ?
                      wire28 : $signed(wire25[(3'h4):(3'h4)]));
  assign wire31 = $unsigned(wire22[(1'h0):(1'h0)]);
  assign wire32 = wire31;
  always
    @(posedge clk) begin
      reg33 <= (wire23[(3'h4):(3'h4)] >= ($signed(wire28[(3'h4):(1'h0)]) ?
          ((-wire26) == (wire29 - wire31)) : {{wire22}}));
      reg34 <= (8'hae);
    end
  always
    @(posedge clk) begin
      reg35 <= wire24[(1'h0):(1'h0)];
      reg36 <= (wire31 ?
          $unsigned(wire25) : $signed((reg33[(1'h1):(1'h0)] ?
              wire23 : (wire23 ? wire32 : wire22))));
    end
  always
    @(posedge clk) begin
      reg37 <= ($unsigned(((8'hab) ?
          (+wire24) : $unsigned(wire28))) <= (~^(^(~^wire32))));
    end
  assign wire38 = wire32[(3'h6):(1'h1)];
  assign wire39 = $unsigned((|(~(reg34 ? wire27 : (8'ha5)))));
endmodule