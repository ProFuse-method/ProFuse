(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h8e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(2'h2):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire25;
  wire signed [(3'h6):(1'h0)] wire24;
  wire signed [(3'h7):(1'h0)] wire17;
  wire [(3'h4):(1'h0)] wire16;
  wire [(2'h2):(1'h0)] wire15;
  wire signed [(4'hb):(1'h0)] wire13;
  wire [(4'h8):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire11;
  wire signed [(2'h3):(1'h0)] wire4;
  reg [(4'ha):(1'h0)] reg23 = (1'h0);
  reg [(4'ha):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg21 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg20 = (1'h0);
  reg [(4'h9):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg14 = (1'h0);
  reg [(3'h5):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg9 = (1'h0);
  reg [(4'h9):(1'h0)] reg8 = (1'h0);
  reg [(3'h7):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg6 = (1'h0);
  reg [(3'h6):(1'h0)] reg5 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire17,
                 wire16,
                 wire15,
                 wire13,
                 wire12,
                 wire11,
                 wire4,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg14,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = {(!{$unsigned(wire3)})};
  always
    @(posedge clk) begin
      reg5 <= wire2;
      reg6 <= (^((wire3 ? $signed(wire3) : (wire4 >= wire3)) ?
          (wire2 | wire2) : wire1[(1'h1):(1'h1)]));
      if (wire3)
        begin
          reg7 <= (8'h9d);
          if ($unsigned($signed($unsigned(reg7[(1'h0):(1'h0)]))))
            begin
              reg8 <= ((~^(|(&(8'h9d)))) >>> wire2);
            end
          else
            begin
              reg8 <= $unsigned({((reg6 ? wire0 : reg5) ?
                      $signed(reg8) : (reg7 << wire3))});
              reg9 <= reg5[(1'h0):(1'h0)];
              reg10 <= ($unsigned(((reg6 << reg9) ?
                      reg6 : (reg8 ? wire1 : wire1))) ?
                  (($unsigned(reg6) << (^~reg7)) ?
                      (~^(wire2 ?
                          wire0 : wire2)) : $unsigned($unsigned(wire4))) : (reg5 >> (-reg8)));
            end
        end
      else
        begin
          reg7 <= wire1;
          reg8 <= (+$signed(reg6));
        end
    end
  assign wire11 = reg9[(3'h6):(3'h6)];
  assign wire12 = wire4[(1'h0):(1'h0)];
  assign wire13 = reg6[(3'h5):(3'h5)];
  always
    @(posedge clk) begin
      reg14 <= reg5[(2'h3):(2'h2)];
    end
  assign wire15 = $signed($signed(reg5));
  assign wire16 = reg6[(2'h2):(1'h0)];
  assign wire17 = wire16[(3'h4):(1'h0)];
  always
    @(posedge clk) begin
      reg18 <= reg6[(3'h6):(2'h3)];
      if ($unsigned((|(~|(wire12 ? wire13 : wire3)))))
        begin
          reg19 <= (&{(((8'ha6) >> wire12) & reg10)});
        end
      else
        begin
          reg19 <= reg8;
          if ($signed(wire0[(1'h1):(1'h0)]))
            begin
              reg20 <= reg6;
              reg21 <= $unsigned(({wire0[(3'h7):(1'h1)]} * {$unsigned((8'ha2))}));
              reg22 <= (~&(({wire1} ?
                  {wire2} : ((8'ha2) && (8'had))) != (&(wire17 ?
                  reg8 : wire3))));
            end
          else
            begin
              reg20 <= ((wire13[(3'h4):(2'h3)] >> ((reg14 ?
                      (8'ha8) : wire1) << wire13)) ?
                  reg22 : $unsigned($unsigned((^wire2))));
              reg21 <= $signed((reg20 - (-(&wire0))));
              reg22 <= (+$signed({(reg14 ? wire12 : reg20)}));
            end
          reg23 <= {(wire13 ? (8'ha4) : {$unsigned((8'ha5))})};
        end
    end
  assign wire24 = ($unsigned((~&$unsigned(reg14))) | (reg9 ?
                      (wire17[(2'h3):(1'h1)] ?
                          ((8'ha8) * wire1) : {wire13}) : $unsigned((wire15 >>> reg23))));
  assign wire25 = wire11[(3'h6):(1'h1)];
endmodule