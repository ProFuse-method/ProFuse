(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param68 = (&(8'ha9)))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire0;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire3;
  wire [(3'h6):(1'h0)] wire67;
  wire [(4'h8):(1'h0)] wire66;
  wire [(4'ha):(1'h0)] wire7;
  wire signed [(3'h5):(1'h0)] wire64;
  reg [(3'h6):(1'h0)] reg4 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg5 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg6 = (1'h0);
  assign y = {wire67, wire66, wire7, wire64, reg4, reg5, reg6, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= wire0[(2'h2):(1'h1)];
      reg5 <= wire0[(2'h3):(1'h0)];
      reg6 <= $signed(wire2);
    end
  assign wire7 = (+$unsigned(((reg4 > wire3) | {reg5})));
  module8 #() modinst65 (.wire9(wire1), .wire11(wire7), .clk(clk), .wire10(reg6), .y(wire64), .wire12(wire3));
  assign wire66 = ((wire3[(4'ha):(3'h7)] ? (^{(8'ha1)}) : reg5[(1'h0):(1'h0)]) ?
                      (!$unsigned($unsigned(reg6))) : $unsigned(wire64));
  assign wire67 = $signed({wire3[(3'h7):(2'h2)]});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param63 = ((|(~&((8'ha0) >> (8'had)))) ? (((~(8'ha7)) != (|(8'ha4))) ^ ((+(8'h9d)) ? ((8'haf) ? (8'hae) : (8'haf)) : {(8'had)})) : ((~|(8'hab)) ? ({(8'ha4)} ? ((8'h9e) ? (8'ha5) : (8'h9d)) : ((8'hae) ~^ (8'hab))) : (((8'ha6) ? (8'ha9) : (8'ha9)) != ((8'ha9) == (8'ha2))))))
(y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire12;
  input wire [(4'ha):(1'h0)] wire11;
  input wire [(2'h2):(1'h0)] wire10;
  input wire [(3'h7):(1'h0)] wire9;
  wire [(2'h2):(1'h0)] wire62;
  wire signed [(3'h6):(1'h0)] wire56;
  wire [(3'h4):(1'h0)] wire54;
  wire [(4'h9):(1'h0)] wire38;
  wire [(4'h8):(1'h0)] wire37;
  wire signed [(4'h8):(1'h0)] wire36;
  wire [(2'h2):(1'h0)] wire34;
  wire signed [(3'h5):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire13;
  reg signed [(3'h6):(1'h0)] reg61 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg60 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg59 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg58 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg57 = (1'h0);
  assign y = {wire62,
                 wire56,
                 wire54,
                 wire38,
                 wire37,
                 wire36,
                 wire34,
                 wire14,
                 wire13,
                 reg61,
                 reg60,
                 reg59,
                 reg58,
                 reg57,
                 (1'h0)};
  assign wire13 = wire12;
  assign wire14 = ($unsigned(wire11[(2'h2):(1'h1)]) ?
                      (^(^~wire12[(3'h7):(1'h0)])) : wire13);
  module15 #() modinst35 (.clk(clk), .wire18(wire12), .wire17(wire14), .wire19(wire11), .wire16(wire13), .y(wire34));
  assign wire36 = $signed(((wire10 ? (8'h9c) : (8'h9e)) * wire9));
  assign wire37 = ((+($signed(wire12) & (wire12 & wire14))) ?
                      $signed($unsigned($unsigned(wire10))) : wire34);
  assign wire38 = ($signed($unsigned($unsigned(wire9))) + wire37[(4'h8):(3'h5)]);
  module39 #() modinst55 (.wire41(wire37), .wire40(wire12), .wire43(wire14), .y(wire54), .clk(clk), .wire42(wire38));
  assign wire56 = ((-$signed((~^wire10))) ? wire54[(1'h1):(1'h1)] : (|wire54));
  always
    @(posedge clk) begin
      if (wire10)
        begin
          if (wire37[(3'h6):(1'h1)])
            begin
              reg57 <= {$unsigned((~&((8'h9f) ? wire12 : wire38)))};
              reg58 <= wire9;
            end
          else
            begin
              reg57 <= $unsigned(wire34[(1'h1):(1'h1)]);
              reg58 <= (~(^~($signed(wire14) ^~ (|wire10))));
            end
          reg59 <= {(({wire11} - wire10[(1'h1):(1'h1)]) <= wire34)};
        end
      else
        begin
          reg57 <= {wire36};
        end
      reg60 <= (^~$signed($signed((!reg58))));
      reg61 <= $unsigned(($unsigned($signed(wire38)) ?
          (~^(wire37 ? reg57 : (8'ha5))) : ($signed(wire54) ?
              (wire9 || (8'ha7)) : (wire37 <= wire9))));
    end
  assign wire62 = (!$unsigned($signed({wire37})));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module39
#(parameter param53 = ((+({(8'ha4)} ^~ ((8'ha6) ? (8'hae) : (8'hac)))) ? (((+(8'haf)) << ((8'had) ? (8'ha8) : (8'ha2))) ? {((8'ha9) ? (8'haa) : (8'ha8))} : (^~(^~(8'ha7)))) : {(((8'haa) * (8'had)) + ((8'haf) ^ (8'hb0)))}))
(y, clk, wire43, wire42, wire41, wire40);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire43;
  input wire [(4'h9):(1'h0)] wire42;
  input wire signed [(3'h6):(1'h0)] wire41;
  input wire signed [(3'h5):(1'h0)] wire40;
  wire [(3'h5):(1'h0)] wire52;
  wire signed [(3'h4):(1'h0)] wire51;
  wire [(3'h7):(1'h0)] wire50;
  wire signed [(3'h6):(1'h0)] wire49;
  wire [(2'h2):(1'h0)] wire48;
  wire [(3'h5):(1'h0)] wire47;
  wire signed [(3'h5):(1'h0)] wire46;
  wire [(4'h8):(1'h0)] wire45;
  wire [(4'h8):(1'h0)] wire44;
  assign y = {wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 (1'h0)};
  assign wire44 = {wire40[(2'h3):(1'h1)]};
  assign wire45 = (wire44[(3'h5):(1'h1)] | (wire40 ?
                      $signed({(8'ha7)}) : wire41[(2'h2):(2'h2)]));
  assign wire46 = ($unsigned(($unsigned(wire42) ?
                      wire41 : ((8'ha9) ? wire45 : wire43))) ^~ (wire45 ?
                      wire42[(1'h0):(1'h0)] : $signed((~|wire45))));
  assign wire47 = (~|wire40[(2'h2):(1'h1)]);
  assign wire48 = (wire42[(3'h6):(3'h5)] ~^ $unsigned(wire47[(3'h5):(3'h4)]));
  assign wire49 = $signed((wire46 ?
                      (|wire48) : (((8'had) != wire45) * wire41[(2'h2):(2'h2)])));
  assign wire50 = (($signed(wire41) ?
                      wire45[(3'h4):(1'h0)] : $signed($unsigned((8'h9f)))) && wire40);
  assign wire51 = ($unsigned(wire44) ?
                      (wire42[(2'h2):(1'h1)] ?
                          wire50 : ((~^wire41) >> (^wire46))) : ({wire40} == ((wire40 && wire45) ?
                          (|(8'hac)) : wire49)));
  assign wire52 = {wire48[(1'h0):(1'h0)]};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15  (y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire19;
  input wire signed [(2'h2):(1'h0)] wire18;
  input wire signed [(3'h5):(1'h0)] wire17;
  input wire signed [(2'h3):(1'h0)] wire16;
  wire [(3'h4):(1'h0)] wire32;
  wire signed [(3'h7):(1'h0)] wire24;
  wire signed [(3'h6):(1'h0)] wire23;
  wire signed [(4'h8):(1'h0)] wire22;
  wire [(4'hb):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire20;
  reg [(3'h4):(1'h0)] reg33 = (1'h0);
  reg [(4'ha):(1'h0)] reg31 = (1'h0);
  reg [(2'h2):(1'h0)] reg30 = (1'h0);
  reg [(4'h9):(1'h0)] reg29 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg28 = (1'h0);
  reg [(4'h9):(1'h0)] reg27 = (1'h0);
  reg [(3'h4):(1'h0)] reg26 = (1'h0);
  reg [(4'ha):(1'h0)] reg25 = (1'h0);
  assign y = {wire32,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 reg33,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 (1'h0)};
  assign wire20 = wire18[(1'h0):(1'h0)];
  assign wire21 = {wire19[(1'h1):(1'h1)]};
  assign wire22 = (8'hae);
  assign wire23 = ({(^$unsigned(wire18))} | $signed(wire16));
  assign wire24 = (wire17 ?
                      (^$unsigned((wire16 ?
                          wire19 : wire22))) : $unsigned($unsigned((wire18 && wire22))));
  always
    @(posedge clk) begin
      reg25 <= wire24;
      if ($unsigned($signed($signed(wire22[(3'h6):(1'h1)]))))
        begin
          reg26 <= ($unsigned(wire18[(1'h1):(1'h0)]) ?
              (({(8'ha7)} ? $unsigned(wire18) : ((8'ha3) ^~ wire16)) ?
                  $signed(wire16) : {wire20}) : $signed($signed(wire20[(1'h1):(1'h1)])));
        end
      else
        begin
          reg26 <= (((+(wire23 + reg25)) != $signed((wire23 == wire17))) ?
              (wire21 ?
                  $unsigned((wire21 ?
                      wire23 : reg25)) : {$signed((8'haf))}) : ($signed(wire20) | ($unsigned(reg26) >> (wire16 ?
                  wire16 : wire21))));
          reg27 <= reg26[(1'h0):(1'h0)];
          if (($signed($unsigned($signed(wire23))) ?
              $signed($signed((wire21 && wire23))) : wire22[(1'h1):(1'h0)]))
            begin
              reg28 <= reg26[(1'h0):(1'h0)];
              reg29 <= ($signed((((8'ha7) ? (8'ha4) : wire20) ?
                  {reg27} : $signed(reg28))) * wire23);
            end
          else
            begin
              reg28 <= {$signed($signed($signed((8'ha4))))};
              reg29 <= $signed((wire21 >= (-wire24)));
              reg30 <= (wire22 >= $unsigned((~(wire24 ? reg26 : reg26))));
            end
        end
      reg31 <= reg25;
    end
  assign wire32 = $unsigned((reg25 ^ ((wire18 > reg27) ?
                      reg28 : (reg25 ? wire21 : (8'h9e)))));
  always
    @(posedge clk) begin
      reg33 <= (^~(~^(8'ha5)));
    end
endmodule