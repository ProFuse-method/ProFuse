(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire46;
  wire signed [(4'h8):(1'h0)] wire44;
  wire signed [(3'h4):(1'h0)] wire43;
  wire signed [(4'hb):(1'h0)] wire41;
  wire signed [(4'hb):(1'h0)] wire40;
  wire [(4'h8):(1'h0)] wire39;
  wire signed [(4'hb):(1'h0)] wire38;
  wire [(4'ha):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire4;
  reg signed [(4'h8):(1'h0)] reg42 = (1'h0);
  assign y = {wire46,
                 wire44,
                 wire43,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire36,
                 wire5,
                 wire4,
                 reg42,
                 (1'h0)};
  assign wire4 = wire1;
  assign wire5 = {wire0};
  module6 #() modinst37 (.wire9(wire2), .wire8(wire3), .y(wire36), .wire10(wire4), .clk(clk), .wire7(wire5));
  assign wire38 = ((wire3[(1'h0):(1'h0)] > wire1[(4'h8):(2'h2)]) ?
                      $unsigned(((~^wire1) ? wire2 : (^wire1))) : wire0);
  assign wire39 = $signed(((wire4[(3'h5):(3'h5)] ?
                      (8'hae) : wire38[(3'h6):(3'h6)]) < (~^$signed(wire0))));
  assign wire40 = $unsigned(wire4);
  assign wire41 = (wire5[(3'h6):(2'h3)] != ((~{wire38}) > wire36[(2'h2):(1'h1)]));
  always
    @(posedge clk) begin
      reg42 <= (~^($signed(wire3[(3'h7):(3'h5)]) ^ $unsigned((wire1 * wire0))));
    end
  assign wire43 = wire38[(3'h6):(2'h2)];
  module6 #() modinst45 (wire44, clk, wire41, wire2, wire36, wire0);
  assign wire46 = {wire5[(4'h9):(4'h9)]};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param35 = (((((8'h9f) ? (8'haa) : (8'haf)) ^ ((8'hb0) ? (8'ha9) : (8'h9e))) ? ((~|(8'ha2)) << ((8'hb0) & (8'h9d))) : ({(8'ha2)} ? (~|(8'ha9)) : (8'h9c))) > (~&{((8'ha6) ~^ (8'h9d))})))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire signed [(2'h3):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(4'ha):(1'h0)] wire7;
  wire [(3'h5):(1'h0)] wire34;
  wire [(2'h2):(1'h0)] wire33;
  wire [(3'h5):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire14;
  wire [(4'hb):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire12;
  wire [(3'h5):(1'h0)] wire11;
  assign y = {wire34, wire33, wire31, wire14, wire13, wire12, wire11, (1'h0)};
  assign wire11 = ((~^{((8'ha1) <= (8'hab))}) ?
                      $unsigned(((8'ha8) + $unsigned(wire10))) : (((&wire10) ?
                              ((8'hae) ? (8'h9c) : wire10) : (~wire9)) ?
                          wire10 : wire10));
  assign wire12 = (!wire8[(1'h1):(1'h1)]);
  assign wire13 = wire9;
  assign wire14 = ($signed($signed(wire10)) | (8'h9e));
  module15 #() modinst32 (wire31, clk, wire10, wire13, wire11, wire12);
  assign wire33 = $signed((&wire12[(3'h4):(1'h0)]));
  assign wire34 = (~|$unsigned($signed($signed(wire9))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param30 = (((~((8'ha3) >> (8'h9d))) ? ((!(8'h9f)) == ((8'h9d) == (8'h9c))) : {((8'ha8) != (8'hb0))}) ? {(((8'ha2) ? (8'haa) : (8'hae)) ? {(8'hae)} : (^~(8'hab)))} : ((((8'h9c) ? (8'h9d) : (8'h9f)) == (^(8'ha3))) != {((8'ha7) ? (8'ha3) : (8'ha7))})))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h49):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire19;
  input wire signed [(3'h6):(1'h0)] wire18;
  input wire [(3'h4):(1'h0)] wire17;
  input wire [(3'h7):(1'h0)] wire16;
  wire [(2'h2):(1'h0)] wire29;
  wire signed [(3'h6):(1'h0)] wire28;
  wire [(4'hb):(1'h0)] wire27;
  wire signed [(3'h6):(1'h0)] wire26;
  wire signed [(2'h3):(1'h0)] wire25;
  wire [(4'h8):(1'h0)] wire24;
  wire signed [(4'hb):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire21;
  wire [(3'h7):(1'h0)] wire20;
  assign y = {wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 (1'h0)};
  assign wire20 = {wire16[(2'h3):(2'h3)]};
  assign wire21 = ($unsigned((wire20[(3'h5):(1'h1)] || $signed(wire18))) ?
                      wire19 : ((8'haf) ^ $unsigned((wire16 * wire16))));
  assign wire22 = $signed($signed((-(wire21 ? wire17 : wire16))));
  assign wire23 = $unsigned((wire22[(4'ha):(2'h2)] <<< wire21));
  assign wire24 = wire19[(3'h5):(1'h1)];
  assign wire25 = (^$unsigned($unsigned((|wire18))));
  assign wire26 = $unsigned($signed(((wire16 ~^ (8'ha6)) ?
                      (&wire24) : $signed(wire17))));
  assign wire27 = wire23[(2'h2):(2'h2)];
  assign wire28 = ((&wire16) ? (^~{(wire17 ? wire25 : (8'hb0))}) : wire27);
  assign wire29 = $unsigned(wire17[(3'h4):(3'h4)]);
endmodule