(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param11 = (-({((8'haf) * (8'haa))} ? {{(8'h9d)}} : {((8'h9e) + (8'ha1))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(3'h4):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire10;
  wire [(4'h8):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire4;
  reg signed [(3'h4):(1'h0)] reg9 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg6 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg5 = (1'h0);
  assign y = {wire10, wire7, wire4, reg9, reg8, reg6, reg5, (1'h0)};
  assign wire4 = wire0[(2'h3):(1'h0)];
  always
    @(posedge clk) begin
      reg5 <= wire3[(2'h3):(2'h2)];
      reg6 <= (wire1 ? (~^$unsigned((wire3 ? wire0 : wire2))) : $signed(wire3));
    end
  assign wire7 = (!wire4[(4'ha):(1'h1)]);
  always
    @(posedge clk) begin
      reg8 <= (^~{((wire7 ? wire7 : wire4) ?
              (wire7 ? (8'h9e) : wire7) : (^~wire0))});
      reg9 <= $unsigned(wire0);
    end
  assign wire10 = (&wire4[(3'h4):(3'h4)]);
endmodule