(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire47;
  wire [(2'h2):(1'h0)] wire45;
  wire signed [(4'ha):(1'h0)] wire29;
  wire signed [(3'h7):(1'h0)] wire28;
  wire signed [(4'h9):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire26;
  wire [(4'ha):(1'h0)] wire24;
  assign y = {wire47, wire45, wire29, wire28, wire27, wire26, wire24, (1'h0)};
  module4 #() modinst25 (.y(wire24), .wire6(wire1), .clk(clk), .wire8(wire3), .wire5(wire2), .wire7(wire0));
  assign wire26 = (wire3[(4'h8):(3'h7)] ?
                      $signed({{wire3}}) : (~(~&(wire2 ? wire0 : wire2))));
  assign wire27 = wire2[(3'h6):(3'h4)];
  assign wire28 = (({(wire2 ? wire2 : wire3)} ^ (|((8'hb0) ?
                      wire27 : wire0))) == (((wire0 > wire1) ?
                          (wire26 ? wire26 : wire27) : {wire27}) ?
                      ((wire24 >> wire26) ^~ (wire0 & wire24)) : wire2[(2'h3):(2'h2)]));
  assign wire29 = ($unsigned(($signed(wire27) ?
                          ((8'h9e) ? wire2 : wire26) : $signed(wire27))) ?
                      (wire3[(3'h5):(3'h5)] ~^ ((wire0 ?
                          wire27 : wire3) >= wire0)) : $signed($unsigned($unsigned(wire28))));
  module30 #() modinst46 (wire45, clk, wire26, wire27, wire24, wire2);
  assign wire47 = (~wire28[(1'h1):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module30
#(parameter param44 = {(~&((8'ha8) ? ((8'hae) ~^ (8'ha4)) : (+(8'had))))})
(y, clk, wire34, wire33, wire32, wire31);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire34;
  input wire [(4'h9):(1'h0)] wire33;
  input wire [(4'ha):(1'h0)] wire32;
  input wire signed [(3'h7):(1'h0)] wire31;
  wire signed [(3'h6):(1'h0)] wire43;
  wire signed [(4'h8):(1'h0)] wire42;
  wire [(2'h3):(1'h0)] wire41;
  wire [(4'h9):(1'h0)] wire40;
  wire signed [(3'h4):(1'h0)] wire39;
  wire signed [(4'hb):(1'h0)] wire38;
  wire signed [(3'h5):(1'h0)] wire37;
  wire [(3'h6):(1'h0)] wire36;
  wire signed [(2'h2):(1'h0)] wire35;
  assign y = {wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 (1'h0)};
  assign wire35 = wire33[(3'h7):(3'h7)];
  assign wire36 = (wire32[(4'h9):(1'h1)] + wire35);
  assign wire37 = ($unsigned((8'hb0)) ?
                      wire33[(2'h3):(1'h1)] : (~&wire34[(2'h3):(2'h3)]));
  assign wire38 = {(-$unsigned(wire33[(3'h7):(1'h1)]))};
  assign wire39 = $signed(wire34);
  assign wire40 = (($unsigned(wire33) ?
                          $unsigned((wire35 >= wire34)) : (wire39 << wire38)) ?
                      wire34 : wire32[(1'h1):(1'h0)]);
  assign wire41 = ($signed($signed((-wire32))) != {$signed((8'ha4))});
  assign wire42 = ($signed({wire40[(3'h7):(2'h3)]}) ?
                      wire38 : wire34[(1'h0):(1'h0)]);
  assign wire43 = ($signed(wire38) & $unsigned($signed((wire37 ?
                      wire41 : wire36))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param23 = (({((8'hac) ? (8'ha5) : (8'ha7))} && (((8'haa) > (8'hac)) <= ((8'h9d) - (8'hb0)))) ? (((~|(8'h9c)) ? {(8'haa)} : ((8'ha3) << (8'ha1))) ? ((~|(8'ha6)) ? ((8'haa) ? (8'ha6) : (8'had)) : (|(8'ha5))) : ((~^(8'haa)) ? ((8'hae) >> (8'ha4)) : {(8'ha3)})) : (^({(8'haf)} < (^~(8'ha2))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire8;
  input wire signed [(3'h4):(1'h0)] wire7;
  input wire signed [(2'h3):(1'h0)] wire6;
  input wire signed [(4'hb):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire22;
  wire [(4'h8):(1'h0)] wire21;
  wire [(3'h5):(1'h0)] wire20;
  wire [(4'h8):(1'h0)] wire19;
  wire [(4'ha):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire10;
  wire [(3'h5):(1'h0)] wire9;
  reg signed [(3'h6):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg16 = (1'h0);
  reg [(3'h6):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg14 = (1'h0);
  reg [(3'h6):(1'h0)] reg13 = (1'h0);
  reg [(3'h4):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg11 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire10,
                 wire9,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 (1'h0)};
  assign wire9 = $signed(wire7[(2'h3):(2'h3)]);
  assign wire10 = $signed((8'ha1));
  always
    @(posedge clk) begin
      if ((wire5[(3'h4):(2'h2)] & $signed({wire10[(1'h0):(1'h0)]})))
        begin
          reg11 <= ($unsigned($signed(wire10[(2'h2):(2'h2)])) ?
              (^~$unsigned($signed(wire10))) : wire8);
          reg12 <= ($signed(((wire8 ? wire5 : (8'hae)) ^ ((8'h9c) ?
              reg11 : wire6))) | wire9);
        end
      else
        begin
          reg11 <= (-(({(8'ha5)} ? (wire6 ? (8'ha7) : wire6) : wire9) ?
              (~|wire7) : reg11[(1'h1):(1'h0)]));
        end
      reg13 <= $signed(wire5);
      if ((^~(($unsigned(wire6) ? (reg12 << wire7) : wire9) || {(wire8 ?
              wire8 : wire8)})))
        begin
          if ((wire10 ? wire8 : $signed(wire10[(2'h2):(1'h1)])))
            begin
              reg14 <= wire9[(1'h0):(1'h0)];
              reg15 <= $unsigned((wire9[(1'h1):(1'h1)] ?
                  $unsigned($signed(wire10)) : (((8'hac) + wire7) >> wire6)));
              reg16 <= {$signed(reg11[(3'h4):(2'h2)])};
            end
          else
            begin
              reg14 <= ($unsigned($signed((^(8'hb0)))) ?
                  ($unsigned({wire7}) ?
                      $signed($unsigned(wire7)) : wire7[(2'h2):(1'h0)]) : $unsigned(((wire10 ?
                      wire10 : reg15) > (reg12 ? wire10 : reg11))));
              reg15 <= $unsigned(((^~$unsigned(wire9)) == $unsigned((reg12 << reg13))));
              reg16 <= $unsigned(reg12);
            end
          reg17 <= (wire5 <<< $signed(reg11));
        end
      else
        begin
          reg14 <= wire7;
        end
    end
  assign wire18 = $signed({($signed(wire7) << $signed(wire5))});
  assign wire19 = ({(wire6[(2'h3):(1'h0)] <= $signed((8'h9e)))} ?
                      (((wire6 ? wire8 : reg13) ? $signed(reg16) : reg13) ?
                          ((~reg12) ?
                              (reg17 ?
                                  reg15 : reg17) : {wire8}) : $signed(reg16)) : reg15[(1'h0):(1'h0)]);
  assign wire20 = {(^~{{(8'h9f)}})};
  assign wire21 = $unsigned(((wire6[(2'h2):(2'h2)] << wire10) != (wire20[(1'h1):(1'h0)] && $signed(reg13))));
  assign wire22 = ($signed($signed((^~wire19))) <= wire19);
endmodule