(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param82 = {(~&((|(8'ha8)) | (~(8'ha7))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire3;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire74;
  wire signed [(2'h3):(1'h0)] wire15;
  wire [(3'h7):(1'h0)] wire14;
  wire [(3'h7):(1'h0)] wire13;
  wire signed [(4'hb):(1'h0)] wire12;
  wire signed [(4'ha):(1'h0)] wire11;
  wire [(3'h6):(1'h0)] wire76;
  reg signed [(4'h9):(1'h0)] reg81 = (1'h0);
  reg [(3'h5):(1'h0)] reg80 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg79 = (1'h0);
  reg [(3'h4):(1'h0)] reg78 = (1'h0);
  reg [(4'ha):(1'h0)] reg10 = (1'h0);
  reg [(4'h9):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg8 = (1'h0);
  reg [(4'h9):(1'h0)] reg7 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg5 = (1'h0);
  reg [(3'h5):(1'h0)] reg4 = (1'h0);
  assign y = {wire74,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire76,
                 reg81,
                 reg80,
                 reg79,
                 reg78,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($signed(wire2[(2'h3):(2'h3)]))
        begin
          reg4 <= (wire3 ?
              $unsigned($signed(wire0)) : (~$signed((wire3 > wire3))));
          if ((wire1[(2'h2):(2'h2)] + wire0[(3'h7):(2'h3)]))
            begin
              reg5 <= reg4;
              reg6 <= (~$unsigned(reg5[(3'h6):(2'h2)]));
            end
          else
            begin
              reg5 <= (8'haf);
            end
          if ($unsigned(($signed(reg4[(1'h0):(1'h0)]) & wire0)))
            begin
              reg7 <= (8'ha5);
              reg8 <= ((+wire1) ? wire1 : {reg7[(3'h5):(3'h4)]});
            end
          else
            begin
              reg7 <= $signed({{$unsigned(reg8)}});
              reg8 <= (reg4[(3'h4):(3'h4)] | (^{wire3}));
            end
        end
      else
        begin
          if ($unsigned($unsigned($unsigned((8'ha5)))))
            begin
              reg4 <= reg4[(1'h0):(1'h0)];
            end
          else
            begin
              reg4 <= $signed(reg6[(3'h7):(3'h7)]);
              reg5 <= (($signed(wire2) ?
                      reg8[(2'h3):(2'h3)] : ($unsigned((8'h9d)) ?
                          wire0 : $unsigned(reg7))) ?
                  reg5[(2'h2):(1'h1)] : $unsigned((8'hac)));
              reg6 <= {$unsigned($signed($signed(reg8)))};
            end
          reg7 <= wire3[(1'h1):(1'h0)];
          if ({reg6})
            begin
              reg8 <= $unsigned($unsigned(($unsigned(wire0) ?
                  (reg7 ? reg8 : (8'ha0)) : reg6)));
              reg9 <= {(8'haa)};
              reg10 <= reg5;
            end
          else
            begin
              reg8 <= ({(!((8'haa) ?
                      wire2 : reg7))} >> {(((8'hb0) >> reg8) <<< (!reg4))});
            end
        end
    end
  assign wire11 = $signed($unsigned((~&{reg7})));
  assign wire12 = $signed(reg7[(2'h3):(1'h0)]);
  assign wire13 = $unsigned((~|($signed(wire3) ?
                      (reg5 ? reg4 : (8'h9f)) : $unsigned(reg8))));
  assign wire14 = ($signed(((reg7 ? reg6 : wire12) ?
                          (~|(8'ha3)) : $unsigned(wire12))) ?
                      (^~($signed(reg7) > reg4[(1'h0):(1'h0)])) : (8'ha4));
  assign wire15 = $signed(wire12);
  module16 #() modinst75 (.wire20(wire1), .wire18(wire11), .wire17(wire0), .clk(clk), .wire19(reg10), .y(wire74));
  module45 #() modinst77 (wire76, clk, wire13, reg10, wire11, wire74);
  always
    @(posedge clk) begin
      reg78 <= $signed(((&$signed(wire0)) | reg7));
      if ($signed(((((8'hac) ? reg78 : wire74) ?
          {(8'had)} : $unsigned(wire13)) * wire2)))
        begin
          reg79 <= $signed($signed((~&((8'ha6) + wire74))));
          reg80 <= ($signed(($unsigned(reg8) ?
              {reg78} : {reg9})) != (^~reg9[(3'h6):(3'h4)]));
          reg81 <= $signed((~$unsigned($unsigned(reg4))));
        end
      else
        begin
          reg79 <= reg8[(2'h3):(2'h3)];
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire20;
  input wire signed [(4'ha):(1'h0)] wire19;
  input wire signed [(4'ha):(1'h0)] wire18;
  input wire [(3'h4):(1'h0)] wire17;
  wire signed [(3'h4):(1'h0)] wire72;
  wire signed [(3'h6):(1'h0)] wire65;
  wire signed [(4'ha):(1'h0)] wire40;
  wire signed [(2'h3):(1'h0)] wire39;
  wire signed [(4'ha):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire69;
  wire [(2'h3):(1'h0)] wire70;
  reg [(4'h8):(1'h0)] reg73 = (1'h0);
  reg [(3'h6):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg43 = (1'h0);
  reg [(4'h9):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg41 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg67 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg68 = (1'h0);
  assign y = {wire72,
                 wire65,
                 wire40,
                 wire39,
                 wire37,
                 wire69,
                 wire70,
                 reg73,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg67,
                 reg68,
                 (1'h0)};
  module21 #() modinst38 (.wire24(wire19), .wire22(wire20), .clk(clk), .wire25(wire17), .wire23(wire18), .y(wire37));
  assign wire39 = wire20[(1'h1):(1'h1)];
  assign wire40 = wire17[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg41 <= ($unsigned(wire17) * ({wire18[(3'h6):(2'h3)]} != $signed((wire19 ?
          wire19 : wire37))));
    end
  always
    @(posedge clk) begin
      if ((wire40[(4'ha):(1'h1)] ^~ wire39[(1'h0):(1'h0)]))
        begin
          reg42 <= wire19;
        end
      else
        begin
          reg42 <= $unsigned(wire19);
        end
      reg43 <= ($signed((!wire20[(3'h6):(3'h6)])) && (&$signed($unsigned(wire19))));
      reg44 <= wire18;
    end
  module45 #() modinst66 (wire65, clk, wire37, reg44, wire20, wire18);
  always
    @(posedge clk) begin
      reg67 <= reg44;
      reg68 <= ({$unsigned($unsigned(reg44))} & wire65);
    end
  assign wire69 = (~|reg43);
  module21 #() modinst71 (wire70, clk, reg67, reg68, wire37, reg42);
  assign wire72 = {reg41};
  always
    @(posedge clk) begin
      reg73 <= ({(+$signed(reg44))} ?
          $unsigned((&(-(8'ha6)))) : ($signed($unsigned(wire70)) ?
              (~&(wire70 ? wire37 : (8'h9d))) : wire40[(3'h7):(3'h4)]));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module45
#(parameter param64 = ((((~^(8'h9f)) ? ((8'haa) ? (8'hae) : (8'h9c)) : ((8'ha1) ? (8'ha2) : (8'ha7))) << (((8'ha4) << (8'ha3)) ? {(8'ha2)} : ((8'h9c) ^~ (8'h9e)))) & ((((8'ha7) ? (8'hac) : (8'ha2)) ? ((8'had) ? (8'ha4) : (8'h9d)) : (-(8'h9c))) ? ((~&(8'ha4)) != ((8'ha4) + (8'hae))) : (&(^(8'hb0))))))
(y, clk, wire49, wire48, wire47, wire46);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire49;
  input wire signed [(3'h6):(1'h0)] wire48;
  input wire [(4'ha):(1'h0)] wire47;
  input wire [(2'h2):(1'h0)] wire46;
  wire signed [(3'h5):(1'h0)] wire63;
  wire [(3'h5):(1'h0)] wire62;
  wire [(3'h7):(1'h0)] wire61;
  wire [(4'hb):(1'h0)] wire53;
  wire signed [(2'h2):(1'h0)] wire52;
  wire [(3'h5):(1'h0)] wire51;
  wire signed [(3'h7):(1'h0)] wire50;
  reg [(4'h9):(1'h0)] reg60 = (1'h0);
  reg [(4'hb):(1'h0)] reg59 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg58 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg57 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg56 = (1'h0);
  reg [(3'h4):(1'h0)] reg55 = (1'h0);
  reg [(3'h7):(1'h0)] reg54 = (1'h0);
  assign y = {wire63,
                 wire62,
                 wire61,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 reg60,
                 reg59,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 (1'h0)};
  assign wire50 = (wire48[(1'h0):(1'h0)] ~^ $signed(wire46[(1'h0):(1'h0)]));
  assign wire51 = wire46[(1'h0):(1'h0)];
  assign wire52 = ((!($unsigned(wire50) ~^ (wire49 ? wire48 : wire51))) ?
                      (wire51[(1'h0):(1'h0)] < $signed(wire48)) : wire46[(1'h1):(1'h0)]);
  assign wire53 = {{(^~$signed(wire49))}};
  always
    @(posedge clk) begin
      if ({wire47})
        begin
          if (wire47[(2'h2):(1'h0)])
            begin
              reg54 <= wire51[(1'h1):(1'h1)];
              reg55 <= {((wire53[(2'h2):(1'h0)] | (wire51 ~^ wire50)) > (wire47 ?
                      (reg54 ? (8'ha8) : wire48) : ((8'ha6) + wire50)))};
              reg56 <= ((((-wire50) << wire48[(3'h5):(3'h5)]) ^ {{wire53}}) - (8'ha1));
            end
          else
            begin
              reg54 <= reg56[(1'h1):(1'h1)];
              reg55 <= (((~&reg56[(2'h2):(1'h0)]) ?
                  $unsigned((+wire49)) : $signed($signed(reg56))) <<< $unsigned($signed(wire46)));
              reg56 <= {$signed(wire50)};
            end
          reg57 <= $unsigned(($signed($unsigned(wire49)) && $signed(((8'ha9) ?
              reg55 : wire50))));
          reg58 <= $signed((&$unsigned($unsigned((8'hb0)))));
        end
      else
        begin
          reg54 <= (($signed(wire50[(2'h2):(1'h1)]) ?
              ($unsigned(wire50) + wire50) : ($signed(wire53) ?
                  (wire47 ^~ wire52) : wire48)) != $unsigned($signed((reg56 ~^ wire46))));
          reg55 <= (~wire48[(3'h6):(1'h1)]);
        end
      reg59 <= ({$signed($signed(wire46))} ?
          $unsigned(wire51) : $unsigned(({(8'haa)} + (wire50 ?
              (8'haa) : wire47))));
      reg60 <= (wire49[(3'h4):(2'h2)] ?
          ((reg56 ? {reg58} : {wire51}) ?
              $unsigned(wire48[(3'h4):(2'h2)]) : (^wire52)) : $signed(((^wire51) | (wire47 << wire51))));
    end
  assign wire61 = ($unsigned(wire52) ?
                      (8'hae) : ($unsigned($unsigned(wire49)) ?
                          $unsigned((reg54 ? reg54 : reg59)) : wire49));
  assign wire62 = $signed(((((8'h9d) ? reg60 : wire52) || $signed((8'h9d))) ?
                      $signed($unsigned(reg58)) : wire48));
  assign wire63 = reg60;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21
#(parameter param36 = ((((~|(8'ha7)) >= ((8'hab) >>> (8'haf))) ? (8'ha9) : {((8'ha7) < (8'h9f))}) * (((8'ha2) ? (~&(8'ha0)) : {(8'haf)}) ? (((8'ha0) & (8'ha2)) ? ((8'h9c) ? (8'haf) : (8'ha6)) : (8'ha9)) : (|{(8'h9c)}))))
(y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire25;
  input wire [(4'ha):(1'h0)] wire24;
  input wire signed [(4'ha):(1'h0)] wire23;
  input wire signed [(3'h5):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire35;
  wire signed [(4'ha):(1'h0)] wire34;
  wire [(4'hb):(1'h0)] wire33;
  wire signed [(4'ha):(1'h0)] wire29;
  wire [(4'h9):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire27;
  wire [(2'h2):(1'h0)] wire26;
  reg signed [(2'h3):(1'h0)] reg32 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg30 = (1'h0);
  assign y = {wire35,
                 wire34,
                 wire33,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 reg32,
                 reg31,
                 reg30,
                 (1'h0)};
  assign wire26 = $unsigned(wire24[(1'h1):(1'h1)]);
  assign wire27 = wire25[(1'h0):(1'h0)];
  assign wire28 = ((((wire24 ? wire23 : wire22) >> (!wire26)) ?
                          (^~$signed(wire23)) : $signed((wire24 ?
                              wire23 : (8'hab)))) ?
                      (($unsigned(wire24) ~^ $unsigned((8'ha5))) ?
                          (wire27[(4'h8):(3'h7)] ?
                              $unsigned(wire23) : wire27[(2'h3):(2'h3)]) : wire26[(2'h2):(2'h2)]) : $signed(wire24));
  assign wire29 = $signed(wire27);
  always
    @(posedge clk) begin
      reg30 <= ((wire24[(4'h8):(3'h7)] && wire26[(2'h2):(1'h1)]) >>> ((~{wire28}) | wire22));
      reg31 <= wire22[(2'h3):(1'h1)];
      reg32 <= wire26;
    end
  assign wire33 = {$unsigned($unsigned(reg31))};
  assign wire34 = (~&$unsigned(reg30[(1'h1):(1'h1)]));
  assign wire35 = $unsigned(($unsigned((wire25 ?
                      (8'h9f) : (8'hae))) && wire33[(4'hb):(3'h5)]));
endmodule