(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire0;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire3;
  wire signed [(4'ha):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire4;
  wire signed [(4'h8):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire6;
  wire signed [(2'h3):(1'h0)] wire10;
  wire [(2'h3):(1'h0)] wire32;
  reg [(2'h3):(1'h0)] reg7 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg9 = (1'h0);
  assign y = {wire34,
                 wire4,
                 wire5,
                 wire6,
                 wire10,
                 wire32,
                 reg7,
                 reg8,
                 reg9,
                 (1'h0)};
  assign wire4 = (wire0[(2'h2):(1'h1)] == $unsigned($signed({wire3})));
  assign wire5 = (8'hae);
  assign wire6 = ((-(&(8'ha6))) != wire3);
  always
    @(posedge clk) begin
      if (($unsigned(wire4[(2'h2):(2'h2)]) - wire6))
        begin
          if ((-(($signed(wire6) ? (wire6 ? wire1 : wire1) : wire1) ?
              $unsigned(wire4) : $unsigned(wire0[(2'h2):(1'h1)]))))
            begin
              reg7 <= {((8'ha6) >>> wire5[(1'h0):(1'h0)])};
              reg8 <= (-($signed((-wire2)) ?
                  ((~reg7) >>> $unsigned(wire2)) : ($signed(wire5) ?
                      $unsigned(wire5) : $unsigned(wire0))));
              reg9 <= $signed({reg7[(1'h0):(1'h0)]});
            end
          else
            begin
              reg7 <= (((!$unsigned(reg8)) << (|(wire0 < wire3))) ~^ reg9);
            end
        end
      else
        begin
          reg7 <= reg7[(1'h0):(1'h0)];
          reg8 <= $signed($unsigned($signed(wire0)));
          reg9 <= $unsigned(wire5);
        end
    end
  assign wire10 = wire3;
  module11 #() modinst33 (.wire13(wire5), .wire15(wire6), .y(wire32), .clk(clk), .wire14(reg9), .wire12(wire2));
  assign wire34 = wire3;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param31 = (+({{(8'ha3)}} >= (((8'h9e) ? (8'ha1) : (8'hab)) ? ((8'hb0) >> (8'h9e)) : {(8'ha9)}))))
(y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h71):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire15;
  input wire [(4'h9):(1'h0)] wire14;
  input wire signed [(4'h8):(1'h0)] wire13;
  input wire [(4'hb):(1'h0)] wire12;
  wire signed [(4'h9):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire29;
  wire signed [(3'h6):(1'h0)] wire23;
  wire [(4'h8):(1'h0)] wire22;
  wire [(3'h6):(1'h0)] wire21;
  wire signed [(4'h8):(1'h0)] wire20;
  wire signed [(3'h4):(1'h0)] wire19;
  wire signed [(3'h5):(1'h0)] wire18;
  wire [(3'h7):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire16;
  reg [(4'hb):(1'h0)] reg28 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg25 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg24 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 (1'h0)};
  assign wire16 = $unsigned($unsigned($unsigned($unsigned(wire14))));
  assign wire17 = (~^{(~(~&(8'haf)))});
  assign wire18 = (wire15[(4'h8):(1'h1)] ? wire15 : wire15);
  assign wire19 = $signed(wire17);
  assign wire20 = $signed($signed($unsigned((wire19 ? wire12 : wire17))));
  assign wire21 = ($signed(((~&wire19) ?
                      $unsigned((8'ha8)) : $unsigned(wire13))) + $unsigned({$unsigned(wire13)}));
  assign wire22 = ($signed(wire18) ^ $unsigned($signed((&(8'ha5)))));
  assign wire23 = $signed((^(^wire20[(3'h6):(2'h3)])));
  always
    @(posedge clk) begin
      if (wire23)
        begin
          reg24 <= $signed($signed((+{wire20})));
          if ((|wire23))
            begin
              reg25 <= $unsigned((reg24[(2'h2):(1'h1)] < $unsigned((~^wire12))));
              reg26 <= $unsigned(($signed({reg25}) & ((wire14 < reg25) == (wire23 ?
                  wire18 : wire22))));
            end
          else
            begin
              reg25 <= wire20[(1'h0):(1'h0)];
              reg26 <= wire23[(3'h5):(2'h3)];
            end
          reg27 <= wire17[(2'h3):(1'h0)];
        end
      else
        begin
          reg24 <= reg25[(3'h6):(3'h4)];
        end
      reg28 <= (~^$unsigned(wire12));
    end
  assign wire29 = (^~(~|wire14[(3'h5):(3'h4)]));
  assign wire30 = (|$signed(((reg26 ? reg24 : wire16) == wire22)));
endmodule