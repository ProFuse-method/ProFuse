(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param51 = (({{(8'ha1)}} ? (((8'ha6) ? (8'ha7) : (8'ha7)) && ((8'ha6) ? (8'ha5) : (8'ha1))) : ((~^(8'hac)) * {(8'ha3)})) < ((((8'haa) * (8'ha1)) & {(8'hab)}) ? (((8'hb0) ? (8'haa) : (8'ha2)) ? ((8'hac) ? (8'h9c) : (8'ha0)) : ((8'haa) ? (8'h9d) : (8'h9e))) : (-((8'h9d) == (8'ha4))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h82):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire50;
  wire signed [(4'hb):(1'h0)] wire49;
  wire signed [(3'h4):(1'h0)] wire39;
  wire signed [(4'h8):(1'h0)] wire38;
  wire [(4'h9):(1'h0)] wire37;
  wire signed [(3'h6):(1'h0)] wire36;
  wire [(3'h5):(1'h0)] wire35;
  wire signed [(3'h7):(1'h0)] wire34;
  wire signed [(3'h7):(1'h0)] wire32;
  wire [(4'hb):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire4;
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg47 = (1'h0);
  reg [(2'h3):(1'h0)] reg46 = (1'h0);
  reg [(3'h6):(1'h0)] reg45 = (1'h0);
  reg [(2'h3):(1'h0)] reg44 = (1'h0);
  reg [(2'h2):(1'h0)] reg43 = (1'h0);
  reg [(3'h4):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire32,
                 wire5,
                 wire4,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 (1'h0)};
  assign wire4 = (wire2[(2'h3):(1'h0)] >> {$unsigned(((8'hae) + wire1))});
  assign wire5 = (~$signed(wire2));
  module6 #() modinst33 (.wire10(wire2), .wire7(wire1), .wire8(wire4), .y(wire32), .wire9(wire0), .clk(clk));
  assign wire34 = ($signed((8'hb0)) ~^ ($unsigned((~(8'haf))) ?
                      ($unsigned(wire4) ?
                          $signed((8'hae)) : wire4) : ((|wire32) ?
                          (+wire4) : (8'hac))));
  assign wire35 = $unsigned((~&$signed(wire34)));
  assign wire36 = $unsigned((8'haf));
  assign wire37 = (-(~|wire2[(2'h2):(2'h2)]));
  assign wire38 = ($unsigned($unsigned({wire36})) | ({(wire5 ?
                              wire1 : (8'haf))} ?
                      {(~(8'ha5))} : (~&$signed(wire35))));
  assign wire39 = ($signed((^~$unsigned(wire2))) <<< ($unsigned($signed((8'ha4))) ?
                      ($signed(wire34) ?
                          (wire0 ?
                              wire35 : wire32) : wire5[(4'h8):(1'h1)]) : $unsigned((wire35 | wire5))));
  always
    @(posedge clk) begin
      if (wire5[(1'h0):(1'h0)])
        begin
          reg40 <= wire3[(2'h3):(1'h0)];
          if (wire36)
            begin
              reg41 <= (wire38[(3'h4):(2'h3)] < $signed($signed((~|wire3))));
              reg42 <= wire39[(1'h0):(1'h0)];
              reg43 <= (~^$signed($signed(wire38[(1'h0):(1'h0)])));
            end
          else
            begin
              reg41 <= wire2[(1'h1):(1'h1)];
              reg42 <= wire4;
            end
        end
      else
        begin
          reg40 <= wire39;
        end
    end
  always
    @(posedge clk) begin
      if ((&{$signed((wire3 ? wire35 : wire36))}))
        begin
          if (wire2)
            begin
              reg44 <= reg40[(3'h4):(2'h2)];
            end
          else
            begin
              reg44 <= (8'haa);
              reg45 <= ((wire5[(3'h6):(3'h5)] > (!{wire34})) <<< $signed(reg42));
              reg46 <= (8'hae);
            end
          reg47 <= wire2;
        end
      else
        begin
          reg44 <= wire35;
          reg45 <= reg43;
          if (wire34)
            begin
              reg46 <= (&($unsigned(wire32[(3'h6):(3'h4)]) && (^(~^wire34))));
            end
          else
            begin
              reg46 <= wire32;
              reg47 <= ($unsigned(reg42[(1'h1):(1'h1)]) ?
                  ($unsigned($signed(wire1)) ~^ $signed((reg45 != wire38))) : wire36);
            end
        end
      reg48 <= (~&$unsigned(wire35[(2'h3):(2'h2)]));
    end
  assign wire49 = reg45;
  assign wire50 = (^wire36[(3'h5):(2'h3)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h93):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire10;
  input wire signed [(2'h3):(1'h0)] wire9;
  input wire signed [(3'h6):(1'h0)] wire8;
  input wire signed [(2'h2):(1'h0)] wire7;
  wire signed [(4'ha):(1'h0)] wire31;
  wire [(3'h6):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire20;
  wire [(4'h9):(1'h0)] wire11;
  reg [(4'h9):(1'h0)] reg30 = (1'h0);
  reg [(3'h7):(1'h0)] reg29 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg28 = (1'h0);
  reg [(4'h8):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg25 = (1'h0);
  reg [(3'h4):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg23 = (1'h0);
  reg [(3'h5):(1'h0)] reg22 = (1'h0);
  reg [(3'h6):(1'h0)] reg19 = (1'h0);
  reg [(3'h6):(1'h0)] reg18 = (1'h0);
  reg [(4'h9):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg15 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg14 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg13 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg12 = (1'h0);
  assign y = {wire31,
                 wire27,
                 wire21,
                 wire20,
                 wire11,
                 reg30,
                 reg29,
                 reg28,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 (1'h0)};
  assign wire11 = ($unsigned($signed($unsigned(wire8))) <= wire10[(3'h5):(2'h3)]);
  always
    @(posedge clk) begin
      if (((wire10 != wire10) ?
          {$unsigned(wire11[(1'h1):(1'h0)])} : {$signed({wire10})}))
        begin
          reg12 <= ($unsigned(((~|wire11) ? wire8 : wire7[(2'h2):(1'h1)])) ?
              wire11 : {wire11[(3'h5):(2'h3)]});
          reg13 <= (-$signed((|(wire7 ? wire11 : wire9))));
        end
      else
        begin
          if ($unsigned((~((^~wire7) ? $unsigned(wire10) : $signed(wire7)))))
            begin
              reg12 <= wire11;
              reg13 <= wire9;
              reg14 <= wire10;
            end
          else
            begin
              reg12 <= $signed(wire7);
            end
          if ((|(($signed((8'h9e)) ? $unsigned(wire8) : reg12[(1'h0):(1'h0)]) ?
              $signed($unsigned((8'ha2))) : wire10)))
            begin
              reg15 <= (((reg13[(4'h8):(2'h2)] ?
                      reg14 : wire11[(1'h0):(1'h0)]) ?
                  ($unsigned(wire10) < $signed(wire7)) : reg14[(2'h3):(2'h3)]) != (8'ha6));
              reg16 <= (wire9[(1'h1):(1'h0)] ^~ $signed($unsigned((reg13 ?
                  wire11 : (8'ha1)))));
            end
          else
            begin
              reg15 <= (8'ha1);
            end
          reg17 <= (^~$signed((+{reg16})));
        end
      reg18 <= $signed(wire7[(1'h1):(1'h0)]);
      reg19 <= (~^$signed((^~((8'ha4) >>> wire9))));
    end
  assign wire20 = ($signed(reg16) > wire7[(1'h1):(1'h1)]);
  assign wire21 = reg17[(3'h7):(3'h5)];
  always
    @(posedge clk) begin
      if ((reg16 ?
          (^~reg12) : (($signed(reg13) < (reg15 ? wire11 : reg18)) ?
              $unsigned({reg18}) : ({reg18} * wire21))))
        begin
          reg22 <= reg17;
          reg23 <= wire11;
        end
      else
        begin
          reg22 <= $unsigned($signed(reg15[(1'h1):(1'h1)]));
          reg23 <= reg15[(3'h5):(1'h1)];
          reg24 <= $signed($signed($signed({wire21})));
        end
      reg25 <= (|(~&(((8'hb0) + wire21) ? reg19 : wire10[(1'h1):(1'h1)])));
      reg26 <= (^$signed((+(reg16 ? reg15 : reg17))));
    end
  assign wire27 = {$unsigned(wire21[(3'h7):(3'h7)])};
  always
    @(posedge clk) begin
      reg28 <= (^~(^~(~(8'had))));
      reg29 <= ((($signed(reg15) | $signed(wire11)) ?
          (~reg23[(3'h7):(1'h1)]) : reg22) | reg28[(4'h9):(1'h1)]);
      reg30 <= (~reg14[(1'h0):(1'h0)]);
    end
  assign wire31 = wire8;
endmodule