(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param56 = (^((~(-(8'had))) ^ ({(8'h9c)} | ((8'ha5) * (8'ha1))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h72):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(2'h2):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire55;
  wire signed [(3'h4):(1'h0)] wire49;
  wire signed [(4'ha):(1'h0)] wire14;
  wire signed [(4'ha):(1'h0)] wire13;
  wire [(4'ha):(1'h0)] wire12;
  wire signed [(3'h5):(1'h0)] wire11;
  wire [(4'h9):(1'h0)] wire10;
  wire [(3'h5):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire4;
  wire [(4'ha):(1'h0)] wire51;
  wire signed [(4'h9):(1'h0)] wire53;
  reg [(3'h5):(1'h0)] reg9 = (1'h0);
  reg [(3'h5):(1'h0)] reg8 = (1'h0);
  reg [(4'hb):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg6 = (1'h0);
  assign y = {wire55,
                 wire49,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire5,
                 wire4,
                 wire51,
                 wire53,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = $signed(($signed(wire1) ? (wire1 >>> wire0) : wire1));
  assign wire5 = {(~|$unsigned(((8'had) ? wire1 : wire0)))};
  always
    @(posedge clk) begin
      reg6 <= (((^wire3[(1'h1):(1'h1)]) ^~ {wire2}) ?
          wire3 : (wire2[(3'h4):(1'h0)] > (^(wire0 << wire3))));
      if (((|wire0) <= (($unsigned(wire0) - (~&wire0)) ?
          ($unsigned(wire1) ? $signed(wire2) : wire5) : reg6)))
        begin
          reg7 <= $unsigned({$signed((wire5 ^ wire1))});
          reg8 <= (~&wire0[(2'h3):(1'h1)]);
          reg9 <= (8'ha4);
        end
      else
        begin
          reg7 <= (wire3 ~^ ((wire1[(1'h1):(1'h0)] ?
              (reg6 ?
                  wire4 : reg8) : wire1[(1'h0):(1'h0)]) < $unsigned((!wire1))));
        end
    end
  assign wire10 = $signed(wire1);
  assign wire11 = ((((wire1 ? wire1 : wire3) ?
                          (wire0 ? wire5 : reg8) : (~reg9)) ?
                      $signed(reg8[(3'h5):(3'h5)]) : (wire2 ?
                          wire3[(1'h0):(1'h0)] : $unsigned(wire1))) && ((+reg7) > ((!wire4) ?
                      $unsigned(wire10) : wire2)));
  assign wire12 = wire0;
  assign wire13 = ($unsigned({{wire0}}) ?
                      ((~&(|wire5)) | wire1) : $unsigned(reg8[(2'h2):(2'h2)]));
  assign wire14 = wire3[(1'h1):(1'h0)];
  module15 #() modinst50 (wire49, clk, reg7, wire12, wire11, wire13);
  module20 #() modinst52 (wire51, clk, wire10, wire12, wire11, wire0);
  module15 #() modinst54 (.wire17(reg6), .clk(clk), .wire19(wire2), .wire16(wire14), .y(wire53), .wire18(wire3));
  assign wire55 = (~$signed(reg8[(3'h5):(3'h5)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15  (y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h29):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire19;
  input wire signed [(3'h6):(1'h0)] wire18;
  input wire signed [(3'h5):(1'h0)] wire17;
  input wire [(4'ha):(1'h0)] wire16;
  wire [(4'h9):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire47;
  wire signed [(4'h8):(1'h0)] wire46;
  wire signed [(4'ha):(1'h0)] wire45;
  wire [(2'h2):(1'h0)] wire43;
  assign y = {wire48, wire47, wire46, wire45, wire43, (1'h0)};
  module20 #() modinst44 (wire43, clk, wire19, wire16, wire17, wire18);
  assign wire45 = (wire43[(2'h2):(2'h2)] ?
                      wire17[(3'h4):(1'h0)] : {wire16[(4'ha):(2'h2)]});
  assign wire46 = $signed(wire19[(4'hb):(1'h0)]);
  assign wire47 = wire17;
  assign wire48 = $unsigned(wire43);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20  (y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h7b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire24;
  input wire [(4'ha):(1'h0)] wire23;
  input wire signed [(3'h5):(1'h0)] wire22;
  input wire signed [(3'h6):(1'h0)] wire21;
  wire [(3'h4):(1'h0)] wire42;
  wire [(4'h9):(1'h0)] wire41;
  wire [(4'ha):(1'h0)] wire37;
  wire signed [(3'h7):(1'h0)] wire35;
  wire [(2'h3):(1'h0)] wire27;
  wire signed [(4'h9):(1'h0)] wire26;
  wire signed [(4'hb):(1'h0)] wire25;
  reg signed [(3'h4):(1'h0)] reg40 = (1'h0);
  reg [(3'h7):(1'h0)] reg39 = (1'h0);
  reg [(4'h9):(1'h0)] reg38 = (1'h0);
  reg [(4'ha):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg34 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg33 = (1'h0);
  reg [(3'h7):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg31 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg30 = (1'h0);
  reg [(3'h6):(1'h0)] reg29 = (1'h0);
  reg [(4'hb):(1'h0)] reg28 = (1'h0);
  assign y = {wire42,
                 wire41,
                 wire37,
                 wire35,
                 wire27,
                 wire26,
                 wire25,
                 reg40,
                 reg39,
                 reg38,
                 reg36,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 (1'h0)};
  assign wire25 = $unsigned((wire22[(3'h5):(3'h5)] ?
                      $unsigned(wire23[(3'h7):(1'h1)]) : $unsigned((~&wire24))));
  assign wire26 = wire23[(1'h0):(1'h0)];
  assign wire27 = $unsigned($unsigned($signed($unsigned(wire23))));
  always
    @(posedge clk) begin
      if (($unsigned(wire23[(3'h7):(1'h0)]) >> wire21))
        begin
          reg28 <= wire21[(2'h2):(1'h1)];
          reg29 <= $unsigned(wire27[(1'h1):(1'h0)]);
        end
      else
        begin
          reg28 <= wire24;
          reg29 <= {$signed(($unsigned(reg29) | wire25[(2'h3):(1'h1)]))};
          reg30 <= reg29[(2'h2):(1'h1)];
        end
      reg31 <= reg28;
      if ($signed(wire27[(1'h1):(1'h1)]))
        begin
          reg32 <= {(($unsigned(wire24) ?
                      (wire24 ? reg28 : reg28) : (wire27 == reg31)) ?
                  wire21[(2'h3):(1'h0)] : $signed((^(8'haa))))};
        end
      else
        begin
          reg32 <= (&((~|(8'hae)) * (&(^~reg32))));
          reg33 <= (-reg32[(3'h5):(2'h2)]);
          reg34 <= reg31[(2'h3):(2'h2)];
        end
    end
  assign wire35 = (8'hae);
  always
    @(posedge clk) begin
      reg36 <= ($signed(reg30) >> wire26[(2'h2):(1'h1)]);
    end
  assign wire37 = wire23[(2'h2):(1'h0)];
  always
    @(posedge clk) begin
      reg38 <= $unsigned($unsigned({$unsigned(reg30)}));
      reg39 <= reg30;
      reg40 <= (^~(($unsigned(wire35) ? reg30 : (!(8'hae))) ? reg34 : reg31));
    end
  assign wire41 = $signed((((wire25 ? wire26 : wire23) <<< (wire23 ?
                      (8'had) : wire24)) ^ $signed((~^(8'hae)))));
  assign wire42 = reg39[(2'h3):(1'h1)];
endmodule