(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire37;
  wire signed [(3'h6):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire6;
  wire [(4'h8):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire4;
  assign y = {wire37, wire35, wire6, wire5, wire4, (1'h0)};
  assign wire4 = (~^{$signed((~&wire1))});
  assign wire5 = {$signed(wire4)};
  assign wire6 = (wire0 ?
                     (~|((wire2 + wire1) ?
                         $signed(wire3) : $unsigned(wire3))) : $unsigned({$signed(wire2)}));
  module7 #() modinst36 (wire35, clk, wire2, wire5, wire3, wire4);
  module16 #() modinst38 (wire37, clk, wire2, wire5, wire1, wire0);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param34 = (|((8'ha2) ? (8'ha4) : (((8'h9e) >= (8'ha5)) >> {(8'ha8)}))))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h32):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire11;
  input wire signed [(4'h8):(1'h0)] wire10;
  input wire [(2'h2):(1'h0)] wire9;
  input wire [(2'h2):(1'h0)] wire8;
  wire signed [(4'hb):(1'h0)] wire33;
  wire [(4'ha):(1'h0)] wire31;
  wire signed [(3'h4):(1'h0)] wire15;
  wire signed [(4'h9):(1'h0)] wire14;
  reg signed [(3'h4):(1'h0)] reg13 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg12 = (1'h0);
  assign y = {wire33, wire31, wire15, wire14, reg13, reg12, (1'h0)};
  always
    @(posedge clk) begin
      reg12 <= (8'hac);
      reg13 <= wire8[(1'h0):(1'h0)];
    end
  assign wire14 = (!(wire11 ?
                      wire8[(2'h2):(2'h2)] : $signed((reg13 != reg12))));
  assign wire15 = $signed($signed(wire11));
  module16 #() modinst32 (wire31, clk, reg12, reg13, wire14, wire15);
  assign wire33 = (^~wire9[(2'h2):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h39):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire20;
  input wire signed [(3'h4):(1'h0)] wire19;
  input wire [(4'h9):(1'h0)] wire18;
  input wire signed [(3'h4):(1'h0)] wire17;
  wire signed [(3'h7):(1'h0)] wire30;
  wire [(3'h4):(1'h0)] wire29;
  wire signed [(3'h6):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire25;
  wire signed [(2'h2):(1'h0)] wire24;
  wire signed [(3'h5):(1'h0)] wire23;
  wire signed [(2'h2):(1'h0)] wire22;
  wire [(3'h4):(1'h0)] wire21;
  reg [(4'h9):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg27 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 reg28,
                 reg27,
                 (1'h0)};
  assign wire21 = ($unsigned({((8'ha9) + wire18)}) ? wire19 : wire18);
  assign wire22 = $unsigned({wire21});
  assign wire23 = ((^~wire20[(3'h6):(1'h1)]) & ($unsigned({wire19}) ?
                      ($unsigned(wire19) ?
                          $unsigned(wire18) : ((8'h9c) ~^ wire20)) : (&wire22)));
  assign wire24 = $unsigned($signed(wire20));
  assign wire25 = wire17[(1'h0):(1'h0)];
  assign wire26 = wire18[(2'h3):(2'h3)];
  always
    @(posedge clk) begin
      reg27 <= (^$signed($unsigned(((8'ha3) ? (8'ha3) : wire26))));
      reg28 <= wire19;
    end
  assign wire29 = (((^reg28) >>> (((8'h9c) >= wire25) < $signed((8'haa)))) ~^ wire19);
  assign wire30 = $signed((wire21[(3'h4):(1'h0)] ?
                      ($unsigned(wire18) ^ wire23) : wire24));
endmodule