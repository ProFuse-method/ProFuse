(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire67;
  wire signed [(2'h3):(1'h0)] wire66;
  wire signed [(4'h8):(1'h0)] wire64;
  wire [(3'h4):(1'h0)] wire63;
  wire signed [(3'h5):(1'h0)] wire62;
  wire [(3'h5):(1'h0)] wire61;
  wire signed [(4'ha):(1'h0)] wire59;
  wire [(4'h8):(1'h0)] wire58;
  wire signed [(4'hb):(1'h0)] wire56;
  wire [(4'ha):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  assign y = {wire67,
                 wire66,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire59,
                 wire58,
                 wire56,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = {$unsigned(wire1[(2'h2):(1'h1)])};
  assign wire5 = (($unsigned(wire1[(2'h3):(2'h2)]) ~^ $unsigned(wire4[(1'h0):(1'h0)])) ~^ wire0[(2'h2):(2'h2)]);
  assign wire6 = wire3[(2'h3):(2'h2)];
  module7 #() modinst57 (.wire9(wire5), .wire8(wire2), .wire11(wire4), .wire10(wire6), .clk(clk), .y(wire56));
  assign wire58 = $signed($unsigned(wire56[(1'h1):(1'h1)]));
  module18 #() modinst60 (wire59, clk, wire56, wire4, wire0, wire6);
  assign wire61 = (((wire0[(1'h1):(1'h0)] >= wire4) << $unsigned((&wire2))) ?
                      ((wire4[(3'h6):(1'h0)] ?
                          {(8'ha0)} : (8'ha7)) < (wire6 << (~|wire59))) : $signed(wire6));
  assign wire62 = wire56;
  assign wire63 = wire1;
  module7 #() modinst65 (.y(wire64), .clk(clk), .wire10(wire59), .wire8(wire0), .wire11(wire5), .wire9(wire2));
  assign wire66 = wire61[(1'h1):(1'h0)];
  assign wire67 = wire64;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param55 = (((~&((8'ha9) && (8'ha6))) ? (((8'ha1) < (8'hac)) | ((8'hae) ? (8'ha7) : (8'ha8))) : (((8'h9d) && (8'haa)) ^ (!(8'h9d)))) & ((((8'h9e) | (8'h9e)) || ((8'ha4) ? (8'haa) : (8'ha8))) ? (^~((8'ha5) << (8'h9e))) : (((8'ha6) < (8'ha9)) ? (&(8'h9e)) : ((8'hac) ? (8'hab) : (8'h9f))))))
(y, clk, wire8, wire9, wire10, wire11);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire [(4'ha):(1'h0)] wire11;
  wire [(4'h8):(1'h0)] wire54;
  wire signed [(2'h3):(1'h0)] wire12;
  wire signed [(3'h5):(1'h0)] wire15;
  wire [(3'h4):(1'h0)] wire16;
  wire [(3'h4):(1'h0)] wire17;
  wire signed [(4'hb):(1'h0)] wire52;
  reg signed [(3'h5):(1'h0)] reg13 = (1'h0);
  reg [(3'h7):(1'h0)] reg14 = (1'h0);
  assign y = {wire54,
                 wire12,
                 wire15,
                 wire16,
                 wire17,
                 wire52,
                 reg13,
                 reg14,
                 (1'h0)};
  assign wire12 = $signed(wire9);
  always
    @(posedge clk) begin
      reg13 <= $signed(wire11);
      reg14 <= ($unsigned($signed(wire12)) ?
          (wire8[(3'h6):(3'h5)] == wire9[(4'ha):(3'h4)]) : wire11[(1'h1):(1'h1)]);
    end
  assign wire15 = (|$signed(reg13));
  assign wire16 = reg13;
  assign wire17 = ({wire9[(1'h1):(1'h0)]} + (wire15 >>> reg14[(1'h1):(1'h1)]));
  module18 #() modinst53 (.y(wire52), .wire19(wire15), .clk(clk), .wire20(reg14), .wire22(wire8), .wire21(wire10));
  assign wire54 = {($unsigned((^wire10)) | ($signed((8'ha0)) ~^ wire52))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18  (y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'hbe):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire22;
  input wire signed [(4'h9):(1'h0)] wire21;
  input wire [(3'h7):(1'h0)] wire20;
  input wire signed [(2'h3):(1'h0)] wire19;
  wire [(4'h8):(1'h0)] wire51;
  wire signed [(4'h8):(1'h0)] wire50;
  wire [(3'h6):(1'h0)] wire49;
  wire [(3'h5):(1'h0)] wire48;
  wire signed [(4'h9):(1'h0)] wire47;
  wire [(2'h3):(1'h0)] wire37;
  wire signed [(2'h2):(1'h0)] wire23;
  reg signed [(3'h7):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg44 = (1'h0);
  reg [(3'h5):(1'h0)] reg43 = (1'h0);
  reg [(4'h9):(1'h0)] reg42 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  reg [(3'h5):(1'h0)] reg39 = (1'h0);
  reg [(3'h6):(1'h0)] reg38 = (1'h0);
  reg [(2'h3):(1'h0)] reg36 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg33 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg31 = (1'h0);
  reg [(4'ha):(1'h0)] reg30 = (1'h0);
  reg [(3'h6):(1'h0)] reg29 = (1'h0);
  reg [(4'h8):(1'h0)] reg28 = (1'h0);
  reg [(4'h9):(1'h0)] reg27 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg26 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg24 = (1'h0);
  assign y = {wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire37,
                 wire23,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 (1'h0)};
  assign wire23 = $unsigned((~|wire22));
  always
    @(posedge clk) begin
      reg24 <= wire23;
      if (wire20)
        begin
          reg25 <= $signed({((wire19 ? wire21 : (8'ha7)) || wire22)});
        end
      else
        begin
          reg25 <= (8'ha2);
          reg26 <= (reg24 ?
              $unsigned(reg24[(3'h5):(3'h5)]) : wire20[(1'h1):(1'h0)]);
        end
      reg27 <= reg24[(1'h0):(1'h0)];
    end
  always
    @(posedge clk) begin
      if ({(-$unsigned(wire20))})
        begin
          reg28 <= reg24[(3'h6):(2'h2)];
          reg29 <= (~^(~$unsigned((reg28 ? reg26 : (8'had)))));
          reg30 <= ($signed(wire21) ?
              $signed($signed($signed((8'ha5)))) : {($unsigned(wire20) ?
                      wire22[(3'h6):(3'h5)] : (wire21 != wire19))});
        end
      else
        begin
          reg28 <= wire21;
        end
      if ($signed((-(&$signed(reg25)))))
        begin
          reg31 <= reg28[(2'h3):(1'h1)];
          reg32 <= (&reg29);
        end
      else
        begin
          if ((~&(reg26[(2'h2):(2'h2)] ?
              ($unsigned(wire21) ?
                  (-(8'haa)) : (+reg29)) : $signed(reg29[(3'h4):(2'h2)]))))
            begin
              reg31 <= (&wire23);
              reg32 <= reg27;
            end
          else
            begin
              reg31 <= $unsigned(reg27);
            end
          reg33 <= ($unsigned($signed((reg28 ? wire20 : reg25))) ?
              $unsigned(((wire19 ^ reg30) ?
                  $unsigned(reg24) : wire21[(3'h4):(2'h2)])) : ({(reg29 ?
                          (8'had) : (8'h9e))} ?
                  ($unsigned(reg31) >>> $signed(reg30)) : $signed(reg25)));
        end
      if (reg29)
        begin
          reg34 <= $unsigned(($signed({reg28}) ?
              ((reg28 < reg29) ?
                  $unsigned(reg26) : (wire23 <= wire23)) : $unsigned((reg24 ?
                  reg31 : reg33))));
          reg35 <= ((reg33[(1'h1):(1'h0)] ?
              (+(wire23 ? (8'h9c) : reg31)) : {{reg27}}) * $unsigned(reg31));
          reg36 <= $unsigned((((~&wire19) ^ (reg24 >>> reg26)) - ((wire21 ?
                  wire23 : wire22) ?
              (~^reg26) : $unsigned(reg29))));
        end
      else
        begin
          reg34 <= (((8'h9f) || (|(wire20 ? reg35 : reg25))) ?
              ($signed((~reg25)) + reg25) : reg24[(3'h7):(2'h3)]);
          reg35 <= $unsigned(reg31);
          reg36 <= reg25;
        end
    end
  assign wire37 = wire20;
  always
    @(posedge clk) begin
      reg38 <= (!{reg25});
      if (wire22)
        begin
          if (($unsigned(reg32) ?
              reg26 : ((reg38[(3'h6):(2'h2)] >> {reg36}) ?
                  reg27[(3'h5):(2'h2)] : {wire37})))
            begin
              reg39 <= $signed(reg32[(2'h3):(2'h2)]);
              reg40 <= (~^(8'had));
              reg41 <= $unsigned($unsigned(reg33[(1'h1):(1'h1)]));
            end
          else
            begin
              reg39 <= (reg31 ~^ reg35[(4'h9):(3'h7)]);
              reg40 <= reg24[(3'h4):(1'h1)];
            end
          if ($unsigned(reg32))
            begin
              reg42 <= (~^reg29);
              reg43 <= $signed(reg27);
              reg44 <= $signed((+reg34));
            end
          else
            begin
              reg42 <= reg39[(1'h1):(1'h1)];
            end
          reg45 <= (reg26[(2'h3):(2'h3)] ?
              reg44[(4'h9):(3'h7)] : $signed($unsigned($signed(reg32))));
        end
      else
        begin
          reg39 <= reg26;
        end
      reg46 <= (($unsigned((wire37 ?
          reg36 : reg40)) > reg36[(2'h3):(2'h2)]) - {wire19});
    end
  assign wire47 = reg38[(1'h1):(1'h1)];
  assign wire48 = $signed($signed(wire23[(1'h0):(1'h0)]));
  assign wire49 = (wire47[(1'h1):(1'h0)] & $unsigned(reg31[(2'h2):(1'h0)]));
  assign wire50 = ($signed(((reg30 ? reg41 : reg29) <<< (reg41 * reg42))) ?
                      wire48 : (($unsigned(wire21) && reg26) ?
                          wire49 : {$signed(reg44)}));
  assign wire51 = $unsigned(reg42[(2'h2):(1'h0)]);
endmodule