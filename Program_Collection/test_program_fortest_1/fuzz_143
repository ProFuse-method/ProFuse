(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire0;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire3;
  wire [(3'h4):(1'h0)] wire61;
  wire signed [(2'h3):(1'h0)] wire60;
  wire signed [(2'h2):(1'h0)] wire59;
  wire [(3'h4):(1'h0)] wire4;
  wire [(4'hb):(1'h0)] wire5;
  wire signed [(3'h4):(1'h0)] wire6;
  wire [(3'h5):(1'h0)] wire9;
  wire [(3'h5):(1'h0)] wire10;
  wire [(2'h3):(1'h0)] wire57;
  reg signed [(2'h3):(1'h0)] reg7 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg8 = (1'h0);
  assign y = {wire61,
                 wire60,
                 wire59,
                 wire4,
                 wire5,
                 wire6,
                 wire9,
                 wire10,
                 wire57,
                 reg7,
                 reg8,
                 (1'h0)};
  assign wire4 = (wire0[(1'h1):(1'h0)] ?
                     (8'h9f) : $signed($signed(((8'ha1) ? wire2 : wire2))));
  assign wire5 = wire0;
  assign wire6 = ($unsigned(wire1) >> (8'ha9));
  always
    @(posedge clk) begin
      reg7 <= (($unsigned($signed(wire5)) & $unsigned((wire1 != wire4))) ?
          {$unsigned($unsigned(wire5))} : wire4[(1'h0):(1'h0)]);
      reg8 <= (-((((8'hb0) || wire4) >= $unsigned((8'hac))) >>> (8'ha0)));
    end
  assign wire9 = wire6;
  assign wire10 = wire3[(3'h4):(2'h2)];
  module11 #() modinst58 (wire57, clk, wire2, wire5, wire0, reg8);
  assign wire59 = ($unsigned(reg7[(1'h0):(1'h0)]) ?
                      (+($unsigned(wire0) <= (8'ha0))) : (8'hae));
  assign wire60 = wire0[(2'h3):(1'h1)];
  assign wire61 = wire60;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param56 = (|{(^((8'ha6) ? (8'ha5) : (8'ha4)))}))
(y, clk, wire12, wire13, wire14, wire15);
  output wire [(32'h5d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire12;
  input wire [(4'hb):(1'h0)] wire13;
  input wire signed [(4'h9):(1'h0)] wire14;
  input wire [(4'h9):(1'h0)] wire15;
  wire [(2'h3):(1'h0)] wire54;
  wire signed [(2'h2):(1'h0)] wire49;
  wire signed [(3'h6):(1'h0)] wire48;
  wire [(4'h9):(1'h0)] wire47;
  wire [(2'h3):(1'h0)] wire16;
  wire [(4'hb):(1'h0)] wire17;
  wire [(3'h4):(1'h0)] wire18;
  wire [(3'h6):(1'h0)] wire45;
  reg signed [(4'ha):(1'h0)] reg55 = (1'h0);
  reg [(3'h7):(1'h0)] reg53 = (1'h0);
  reg [(4'ha):(1'h0)] reg52 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg51 = (1'h0);
  reg [(3'h5):(1'h0)] reg50 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg19 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg20 = (1'h0);
  assign y = {wire54,
                 wire49,
                 wire48,
                 wire47,
                 wire16,
                 wire17,
                 wire18,
                 wire45,
                 reg55,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg19,
                 reg20,
                 (1'h0)};
  assign wire16 = {$unsigned((^~wire15[(2'h2):(1'h0)]))};
  assign wire17 = {$unsigned(((!(8'ha4)) ?
                          $signed(wire13) : $unsigned(wire14)))};
  assign wire18 = $unsigned($signed($signed(wire16[(2'h2):(2'h2)])));
  always
    @(posedge clk) begin
      reg19 <= (wire15[(4'h9):(3'h7)] ?
          wire13 : (|($signed(wire16) ? (|wire16) : $signed(wire13))));
      reg20 <= (8'h9d);
    end
  module21 #() modinst46 (wire45, clk, wire18, reg19, wire15, wire17);
  assign wire47 = {$signed({wire16[(2'h3):(2'h3)]})};
  assign wire48 = (^(wire12[(2'h3):(2'h2)] ?
                      ($signed((8'ha7)) ?
                          (wire45 >>> wire18) : wire17[(2'h3):(1'h1)]) : wire15[(1'h1):(1'h1)]));
  assign wire49 = (-($signed(wire13) ? {{(8'ha6)}} : (~^(wire18 != reg19))));
  always
    @(posedge clk) begin
      if ((-(&$signed((wire15 ? wire18 : wire13)))))
        begin
          reg50 <= wire18[(1'h1):(1'h1)];
          reg51 <= (!wire18[(1'h1):(1'h1)]);
          reg52 <= ((wire12 ^ wire47) >= wire17[(1'h1):(1'h1)]);
        end
      else
        begin
          reg50 <= $unsigned(wire18);
        end
      reg53 <= wire48[(3'h4):(2'h2)];
    end
  assign wire54 = (-(^~wire17));
  always
    @(posedge clk) begin
      reg55 <= ({(^((8'haa) & wire15))} ?
          $unsigned((&$signed((8'hb0)))) : $signed((-$signed(wire45))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21
#(parameter param44 = {((&((8'hab) ? (8'had) : (8'h9d))) ? ((-(8'ha3)) ? ((8'hae) ? (8'ha1) : (8'ha4)) : ((8'ha0) ? (8'ha5) : (8'ha2))) : (((8'ha0) ^~ (8'ha7)) ? ((8'ha8) <= (8'ha7)) : (^(8'h9f))))})
(y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h65):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire25;
  input wire signed [(4'ha):(1'h0)] wire24;
  input wire signed [(3'h4):(1'h0)] wire23;
  input wire [(3'h6):(1'h0)] wire22;
  wire signed [(2'h2):(1'h0)] wire43;
  wire signed [(4'h9):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire26;
  reg signed [(3'h4):(1'h0)] reg42 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  reg [(3'h5):(1'h0)] reg39 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg38 = (1'h0);
  reg [(3'h4):(1'h0)] reg37 = (1'h0);
  reg [(2'h3):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg33 = (1'h0);
  reg [(4'h8):(1'h0)] reg32 = (1'h0);
  reg [(3'h7):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg30 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg29 = (1'h0);
  reg [(3'h4):(1'h0)] reg28 = (1'h0);
  assign y = {wire43,
                 wire27,
                 wire26,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 (1'h0)};
  assign wire26 = $unsigned($unsigned(wire25[(1'h1):(1'h0)]));
  assign wire27 = ($signed(($unsigned((8'ha5)) ?
                      {wire22} : ((8'ha8) || wire25))) * ($signed($unsigned(wire25)) ?
                      {$signed(wire25)} : wire26[(2'h3):(1'h0)]));
  always
    @(posedge clk) begin
      reg28 <= $unsigned(((~&(wire22 ?
          (8'haf) : (8'hae))) ~^ wire24[(3'h7):(2'h2)]));
      if (wire25)
        begin
          reg29 <= {wire27[(3'h7):(2'h2)]};
          reg30 <= ((~&((~|wire22) ?
                  (wire25 ? wire26 : (8'h9f)) : reg29[(1'h1):(1'h1)])) ?
              (wire23[(1'h0):(1'h0)] ?
                  reg29 : (wire24 ?
                      wire27 : $signed(wire25))) : $signed($signed((reg29 ?
                  reg28 : wire22))));
          reg31 <= reg29;
        end
      else
        begin
          reg29 <= {({{(8'haa)}} < (-((8'ha2) >> (8'haf))))};
          if (((((wire26 ~^ reg29) >> {wire22}) ?
              $signed($signed(wire22)) : reg29[(2'h3):(1'h0)]) <= (~^$signed($signed(reg31)))))
            begin
              reg30 <= ((|(&$unsigned(wire25))) >>> reg30[(3'h6):(1'h0)]);
              reg31 <= wire26;
            end
          else
            begin
              reg30 <= $unsigned(wire26[(2'h3):(2'h2)]);
              reg31 <= $signed(reg28);
              reg32 <= ($unsigned((wire25[(1'h1):(1'h0)] ?
                  {reg29} : (+reg31))) > wire27[(1'h1):(1'h0)]);
            end
        end
      if ((~|$signed(wire27[(1'h0):(1'h0)])))
        begin
          reg33 <= $unsigned($signed((&reg31[(3'h7):(3'h6)])));
          reg34 <= (({((8'ha8) ? reg33 : reg31)} ^ wire27[(4'h8):(2'h3)]) ?
              $signed(((~reg32) ?
                  $signed(wire24) : (~^wire24))) : $signed({wire27}));
          reg35 <= $signed($unsigned($signed($unsigned(reg33))));
        end
      else
        begin
          reg33 <= wire24;
          if ($unsigned((^reg28[(2'h3):(2'h2)])))
            begin
              reg34 <= $unsigned($unsigned(wire23));
              reg35 <= (~|($signed(wire23) + $unsigned((wire23 >>> reg31))));
            end
          else
            begin
              reg34 <= reg34;
              reg35 <= reg31[(1'h1):(1'h1)];
            end
          if (reg32)
            begin
              reg36 <= (((!$unsigned(wire24)) ?
                  reg33[(2'h3):(1'h0)] : reg34) <= ((&$signed(reg28)) >= wire25));
              reg37 <= wire24;
            end
          else
            begin
              reg36 <= ({wire25[(2'h2):(1'h1)]} ?
                  $signed(reg36) : $signed(((reg30 - wire27) ?
                      wire25 : reg36[(1'h1):(1'h0)])));
              reg37 <= $signed(($unsigned(((8'ha2) ~^ reg31)) ?
                  $unsigned((reg33 || wire24)) : ($unsigned(reg33) < $unsigned(reg34))));
              reg38 <= reg34;
            end
        end
    end
  always
    @(posedge clk) begin
      if (reg37[(2'h3):(1'h1)])
        begin
          reg39 <= reg29[(1'h0):(1'h0)];
          reg40 <= reg32;
          reg41 <= {$signed(reg34)};
        end
      else
        begin
          if ({(^wire23[(1'h1):(1'h0)])})
            begin
              reg39 <= ($signed((!(wire26 || reg29))) ?
                  ({(~^wire22)} - ((reg29 ?
                      reg39 : reg39) << (&reg40))) : {$signed(((8'ha6) ?
                          reg34 : reg29))});
            end
          else
            begin
              reg39 <= ({wire24[(3'h4):(1'h0)]} ?
                  {$unsigned((reg37 ? reg39 : (8'ha8)))} : (!(8'h9f)));
            end
          reg40 <= $unsigned({reg36});
        end
      reg42 <= $signed((+(+$unsigned(wire25))));
    end
  assign wire43 = reg37[(1'h1):(1'h0)];
endmodule