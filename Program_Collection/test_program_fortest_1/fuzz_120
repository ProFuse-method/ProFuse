(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire71;
  wire signed [(3'h6):(1'h0)] wire69;
  wire [(3'h6):(1'h0)] wire8;
  wire [(4'hb):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire6;
  wire [(3'h4):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  assign y = {wire71, wire69, wire8, wire7, wire6, wire5, wire4, (1'h0)};
  assign wire4 = $unsigned(((~(wire1 ? wire0 : wire3)) >> wire2));
  assign wire5 = wire0;
  assign wire6 = wire4;
  assign wire7 = $signed(wire0);
  assign wire8 = ((-$signed({wire2})) < (8'ha2));
  module9 #() modinst70 (wire69, clk, wire4, wire3, wire7, wire8);
  assign wire71 = wire8[(3'h6):(3'h5)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9  (y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h3b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire13;
  input wire [(4'ha):(1'h0)] wire12;
  input wire [(4'hb):(1'h0)] wire11;
  input wire signed [(3'h4):(1'h0)] wire10;
  wire signed [(2'h3):(1'h0)] wire68;
  wire signed [(2'h3):(1'h0)] wire67;
  wire signed [(3'h4):(1'h0)] wire66;
  wire signed [(4'h8):(1'h0)] wire64;
  wire [(3'h4):(1'h0)] wire62;
  wire [(4'hb):(1'h0)] wire42;
  wire signed [(4'h9):(1'h0)] wire16;
  wire signed [(3'h7):(1'h0)] wire15;
  wire [(4'h9):(1'h0)] wire14;
  assign y = {wire68,
                 wire67,
                 wire66,
                 wire64,
                 wire62,
                 wire42,
                 wire16,
                 wire15,
                 wire14,
                 (1'h0)};
  assign wire14 = $unsigned({(~|(|wire13))});
  assign wire15 = $signed((({wire12} ? $signed(wire12) : wire14) ?
                      wire13 : (wire14[(1'h0):(1'h0)] ?
                          wire10[(3'h4):(1'h1)] : $signed(wire10))));
  assign wire16 = $unsigned(wire12);
  module17 #() modinst43 (.y(wire42), .clk(clk), .wire19(wire13), .wire20(wire12), .wire18(wire15), .wire21(wire11));
  module44 #() modinst63 (wire62, clk, wire15, wire13, wire14, wire16);
  module17 #() modinst65 (.wire18(wire14), .wire19(wire12), .y(wire64), .clk(clk), .wire21(wire42), .wire20(wire62));
  assign wire66 = $signed($signed((~|$unsigned(wire11))));
  assign wire67 = ((wire11[(2'h3):(2'h3)] << $signed($signed((8'had)))) ?
                      (((+(8'hab)) ? $signed(wire10) : $unsigned((8'had))) ?
                          (8'ha0) : $signed(wire10)) : wire42[(3'h6):(1'h0)]);
  assign wire68 = {(^$signed(((8'ha7) ^~ wire64)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module44
#(parameter param61 = ((~{((8'haa) >> (8'ha2))}) ? (((8'ha6) <<< (-(8'ha9))) || ((-(8'ha9)) > (|(8'ha0)))) : (8'hac)))
(y, clk, wire48, wire47, wire46, wire45);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire48;
  input wire [(4'hb):(1'h0)] wire47;
  input wire [(4'h9):(1'h0)] wire46;
  input wire signed [(4'h9):(1'h0)] wire45;
  wire signed [(4'h8):(1'h0)] wire60;
  wire [(2'h3):(1'h0)] wire59;
  wire signed [(3'h5):(1'h0)] wire56;
  wire [(3'h7):(1'h0)] wire55;
  wire signed [(3'h4):(1'h0)] wire54;
  wire [(4'h9):(1'h0)] wire53;
  wire [(3'h5):(1'h0)] wire52;
  wire [(3'h4):(1'h0)] wire51;
  wire signed [(2'h2):(1'h0)] wire50;
  wire [(3'h6):(1'h0)] wire49;
  reg [(3'h7):(1'h0)] reg58 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg57 = (1'h0);
  assign y = {wire60,
                 wire59,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 reg58,
                 reg57,
                 (1'h0)};
  assign wire49 = wire46[(3'h7):(2'h2)];
  assign wire50 = (~^wire45[(2'h3):(2'h2)]);
  assign wire51 = wire49[(2'h2):(2'h2)];
  assign wire52 = $unsigned(((-(wire47 ? wire50 : (8'ha0))) ?
                      wire45[(3'h4):(1'h1)] : $signed((wire51 ^ (8'hac)))));
  assign wire53 = ($signed($unsigned((~|wire45))) ?
                      $unsigned(wire52) : (wire48 - wire50[(2'h2):(1'h0)]));
  assign wire54 = (((wire48 ? (wire50 >= wire46) : (wire53 ? wire45 : wire46)) ?
                      $signed(wire50[(1'h1):(1'h0)]) : wire49[(3'h6):(1'h1)]) ~^ (~^((wire48 ?
                      wire48 : wire53) != {wire47})));
  assign wire55 = $unsigned(wire51[(2'h3):(1'h1)]);
  assign wire56 = $signed((((wire50 >> wire47) ?
                      wire47 : (wire55 ? wire50 : wire45)) || wire54));
  always
    @(posedge clk) begin
      reg57 <= wire49[(2'h3):(2'h3)];
      reg58 <= (~|$unsigned(($unsigned(wire50) ?
          wire53[(3'h4):(3'h4)] : wire53[(3'h7):(3'h6)])));
    end
  assign wire59 = wire53[(3'h7):(3'h4)];
  assign wire60 = wire48[(3'h5):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17
#(parameter param41 = (~{(((8'ha5) >> (8'hac)) >> ((8'h9d) ? (8'ha5) : (8'hac)))}))
(y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h7b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire21;
  input wire signed [(3'h4):(1'h0)] wire20;
  input wire [(3'h4):(1'h0)] wire19;
  input wire [(2'h2):(1'h0)] wire18;
  wire [(4'ha):(1'h0)] wire36;
  wire signed [(4'hb):(1'h0)] wire35;
  wire [(2'h3):(1'h0)] wire34;
  wire signed [(2'h3):(1'h0)] wire33;
  wire [(4'hb):(1'h0)] wire28;
  wire signed [(3'h7):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire23;
  wire signed [(3'h6):(1'h0)] wire22;
  reg signed [(3'h5):(1'h0)] reg40 = (1'h0);
  reg [(2'h3):(1'h0)] reg39 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg32 = (1'h0);
  reg [(3'h7):(1'h0)] reg31 = (1'h0);
  reg [(2'h2):(1'h0)] reg30 = (1'h0);
  reg [(3'h4):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg26 = (1'h0);
  reg [(4'h8):(1'h0)] reg25 = (1'h0);
  reg [(3'h6):(1'h0)] reg24 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire28,
                 wire27,
                 wire23,
                 wire22,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg26,
                 reg25,
                 reg24,
                 (1'h0)};
  assign wire22 = (wire18[(1'h1):(1'h1)] + (^wire19));
  assign wire23 = (^~wire19);
  always
    @(posedge clk) begin
      reg24 <= (^(8'had));
      reg25 <= $unsigned((|(|{wire19})));
      reg26 <= (($signed($signed(wire19)) ~^ reg25) * wire22);
    end
  assign wire27 = $unsigned(wire18[(2'h2):(2'h2)]);
  assign wire28 = wire20;
  always
    @(posedge clk) begin
      reg29 <= $signed(wire27);
      if (($unsigned({wire18[(1'h1):(1'h0)]}) ^ ((8'ha7) > {$unsigned(wire27)})))
        begin
          reg30 <= (8'hac);
        end
      else
        begin
          reg30 <= $unsigned(($signed((-wire22)) + (wire19[(1'h1):(1'h0)] ?
              (&wire22) : reg25)));
          reg31 <= $unsigned((8'h9f));
          reg32 <= ({wire22[(2'h3):(2'h2)]} ?
              $unsigned(reg31[(3'h4):(2'h3)]) : ((((8'ha5) ? reg25 : reg31) ?
                  (wire21 ? wire22 : reg24) : (wire18 ?
                      wire27 : reg24)) >>> $unsigned(reg31)));
        end
    end
  assign wire33 = $unsigned(wire20);
  assign wire34 = {reg31};
  assign wire35 = $signed(($unsigned($unsigned(reg29)) || (~wire33)));
  assign wire36 = wire33;
  always
    @(posedge clk) begin
      reg37 <= wire36[(2'h2):(2'h2)];
    end
  always
    @(posedge clk) begin
      reg38 <= (~&(wire36 ?
          ((^~reg26) ?
              {reg30} : reg32[(3'h4):(2'h3)]) : $signed($signed(reg37))));
      reg39 <= $signed(reg29[(2'h2):(1'h1)]);
    end
  always
    @(posedge clk) begin
      reg40 <= reg24;
    end
endmodule