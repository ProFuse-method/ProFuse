(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param21 = ((~^(((8'had) ? (8'haa) : (8'haa)) ? ((8'hab) ? (8'haf) : (8'ha3)) : {(8'ha4)})) | (&(-(~&(8'had))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h61):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire20;
  wire signed [(3'h4):(1'h0)] wire19;
  wire [(4'h9):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire17;
  wire [(4'hb):(1'h0)] wire16;
  wire signed [(3'h4):(1'h0)] wire15;
  wire signed [(2'h2):(1'h0)] wire14;
  wire [(3'h5):(1'h0)] wire13;
  wire signed [(3'h5):(1'h0)] wire4;
  reg [(2'h2):(1'h0)] reg12 = (1'h0);
  reg [(3'h7):(1'h0)] reg11 = (1'h0);
  reg [(3'h6):(1'h0)] reg10 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg9 = (1'h0);
  reg [(4'h9):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg7 = (1'h0);
  reg [(4'ha):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg5 = (1'h0);
  assign y = {wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire4,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = (~(8'hac));
  always
    @(posedge clk) begin
      reg5 <= $signed($signed($unsigned($unsigned(wire1))));
      if ((8'ha3))
        begin
          reg6 <= (wire2[(1'h0):(1'h0)] >= (($signed(reg5) ?
                  wire4[(1'h1):(1'h0)] : (~|wire0)) ?
              ((wire4 ? wire3 : wire1) ?
                  $unsigned((8'ha1)) : $signed(wire2)) : reg5));
          reg7 <= (^$unsigned(reg5));
        end
      else
        begin
          if ((+$signed(({(8'ha9)} ? $signed(wire3) : (~^wire4)))))
            begin
              reg6 <= $signed($unsigned(reg6));
            end
          else
            begin
              reg6 <= reg5;
              reg7 <= (reg7 ?
                  (($signed(reg5) ? $signed((8'had)) : (wire3 ? wire2 : reg6)) ?
                      {(~|wire2)} : ((|wire0) ?
                          $signed(wire3) : (reg7 ?
                              (8'ha4) : (8'ha6)))) : {({reg6} & (~&reg7))});
            end
          if (((8'ha8) < $signed({(reg7 ? wire0 : reg5)})))
            begin
              reg8 <= (8'hb0);
              reg9 <= $unsigned({(~^$signed(reg6))});
            end
          else
            begin
              reg8 <= ((wire2 ?
                  $unsigned(reg6) : $unsigned(wire3)) >> $unsigned(wire2));
              reg9 <= reg6;
            end
        end
      if (wire4[(3'h4):(1'h1)])
        begin
          reg10 <= reg5[(1'h1):(1'h0)];
          if (reg8[(3'h7):(2'h2)])
            begin
              reg11 <= reg8[(4'h8):(1'h1)];
              reg12 <= wire0[(1'h1):(1'h0)];
            end
          else
            begin
              reg11 <= $unsigned({$signed(((8'ha2) > wire0))});
              reg12 <= $unsigned(wire2);
            end
        end
      else
        begin
          reg10 <= (~&(($unsigned(reg5) ?
                  wire1[(2'h2):(1'h0)] : (wire0 ? wire2 : reg8)) ?
              $unsigned((wire3 ? reg5 : (8'ha2))) : {reg7[(2'h2):(1'h0)]}));
        end
    end
  assign wire13 = (^~((~|(8'ha8)) << ((&reg12) >> (reg6 ? wire2 : (8'hab)))));
  assign wire14 = {$unsigned(((wire4 ^ reg11) ? (!reg8) : reg6))};
  assign wire15 = $unsigned($unsigned(wire0[(3'h5):(3'h4)]));
  assign wire16 = $signed((wire0[(1'h0):(1'h0)] << reg7));
  assign wire17 = (($signed(wire15) ? wire15[(2'h3):(1'h0)] : reg8) ?
                      wire15 : wire15[(2'h3):(1'h1)]);
  assign wire18 = reg9[(2'h3):(2'h2)];
  assign wire19 = wire0[(1'h1):(1'h1)];
  assign wire20 = ($unsigned(((reg8 ? (8'hac) : (8'hb0)) ?
                      wire0[(4'h9):(3'h5)] : (|wire1))) == reg11[(1'h1):(1'h0)]);
endmodule