(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param55 = (~|((~|((8'ha5) ? (8'ha4) : (8'hac))) - (((8'ha6) || (8'h9d)) ? ((8'ha8) ? (8'ha3) : (8'ha4)) : ((8'ha4) ? (8'ha6) : (8'hb0))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire54;
  wire signed [(2'h2):(1'h0)] wire50;
  wire [(4'ha):(1'h0)] wire49;
  wire signed [(4'hb):(1'h0)] wire46;
  wire signed [(3'h5):(1'h0)] wire44;
  wire signed [(4'h9):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire4;
  reg [(2'h2):(1'h0)] reg53 = (1'h0);
  reg [(3'h6):(1'h0)] reg52 = (1'h0);
  reg [(3'h7):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg48 = (1'h0);
  reg [(4'ha):(1'h0)] reg47 = (1'h0);
  assign y = {wire54,
                 wire50,
                 wire49,
                 wire46,
                 wire44,
                 wire5,
                 wire4,
                 reg53,
                 reg52,
                 reg51,
                 reg48,
                 reg47,
                 (1'h0)};
  assign wire4 = ($signed(wire0[(1'h1):(1'h1)]) ?
                     $unsigned(($signed(wire1) * $unsigned(wire2))) : ((|wire2[(2'h3):(2'h2)]) ?
                         wire1[(2'h3):(1'h0)] : ($signed(wire1) >>> {wire2})));
  assign wire5 = wire4[(2'h3):(2'h3)];
  module6 #() modinst45 (.wire9(wire1), .clk(clk), .wire7(wire5), .wire10(wire2), .wire8(wire0), .y(wire44));
  assign wire46 = (|wire44);
  always
    @(posedge clk) begin
      reg47 <= {($signed($unsigned(wire3)) ?
              (wire3 ?
                  wire2[(1'h0):(1'h0)] : $signed((8'ha0))) : (!$unsigned(wire5)))};
      reg48 <= $signed({$unsigned((wire44 ? wire3 : wire46))});
    end
  assign wire49 = reg48;
  assign wire50 = reg48;
  always
    @(posedge clk) begin
      reg51 <= wire2;
      reg52 <= wire50[(1'h1):(1'h0)];
      reg53 <= $unsigned((wire2 != $unsigned(wire3)));
    end
  assign wire54 = (((~|(^reg47)) < reg48[(1'h1):(1'h0)]) ?
                      wire50[(2'h2):(1'h1)] : $signed(wire2[(4'hb):(4'h9)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h5d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire10;
  input wire [(4'h8):(1'h0)] wire9;
  input wire [(4'ha):(1'h0)] wire8;
  input wire signed [(4'h9):(1'h0)] wire7;
  wire signed [(3'h6):(1'h0)] wire43;
  wire signed [(4'h9):(1'h0)] wire42;
  wire [(2'h2):(1'h0)] wire41;
  wire signed [(2'h2):(1'h0)] wire40;
  wire signed [(4'h9):(1'h0)] wire39;
  wire signed [(4'hb):(1'h0)] wire38;
  wire [(4'ha):(1'h0)] wire34;
  wire signed [(2'h2):(1'h0)] wire33;
  wire signed [(4'hb):(1'h0)] wire32;
  wire signed [(3'h5):(1'h0)] wire31;
  wire [(3'h6):(1'h0)] wire29;
  reg signed [(4'h9):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg35 = (1'h0);
  assign y = {wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire29,
                 reg37,
                 reg36,
                 reg35,
                 (1'h0)};
  module11 #() modinst30 (.wire15(wire9), .wire13(wire10), .clk(clk), .wire14(wire7), .y(wire29), .wire12(wire8));
  assign wire31 = $unsigned(wire8);
  assign wire32 = wire31[(1'h1):(1'h0)];
  assign wire33 = (8'ha9);
  assign wire34 = (wire7 || (wire29 ?
                      $signed(wire29[(2'h3):(2'h3)]) : $signed((~|wire32))));
  always
    @(posedge clk) begin
      reg35 <= wire10;
      reg36 <= ((~|(wire31[(2'h3):(1'h1)] ? (~wire34) : (wire31 >= wire32))) ?
          wire8 : $unsigned((!wire8[(3'h5):(2'h2)])));
      reg37 <= ({reg35[(3'h5):(1'h1)]} >> {(wire29[(3'h4):(1'h0)] ?
              reg36[(2'h3):(2'h3)] : wire31)});
    end
  assign wire38 = wire10;
  assign wire39 = reg37[(3'h6):(3'h6)];
  assign wire40 = (wire31[(2'h3):(1'h1)] != $unsigned((-wire34[(3'h7):(1'h1)])));
  assign wire41 = wire31;
  assign wire42 = reg36[(1'h0):(1'h0)];
  assign wire43 = wire38;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire15;
  input wire signed [(4'h9):(1'h0)] wire14;
  input wire [(4'hb):(1'h0)] wire13;
  input wire signed [(4'ha):(1'h0)] wire12;
  wire [(3'h7):(1'h0)] wire28;
  wire [(4'ha):(1'h0)] wire26;
  wire [(4'h8):(1'h0)] wire25;
  wire signed [(4'hb):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire23;
  wire signed [(3'h5):(1'h0)] wire22;
  wire [(4'ha):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire20;
  wire [(2'h3):(1'h0)] wire17;
  wire signed [(3'h5):(1'h0)] wire16;
  reg [(3'h7):(1'h0)] reg27 = (1'h0);
  reg [(2'h3):(1'h0)] reg19 = (1'h0);
  reg [(3'h4):(1'h0)] reg18 = (1'h0);
  assign y = {wire28,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire17,
                 wire16,
                 reg27,
                 reg19,
                 reg18,
                 (1'h0)};
  assign wire16 = ((wire14[(4'h9):(1'h1)] ?
                      {$signed(wire15)} : $unsigned($signed(wire14))) - wire12[(1'h0):(1'h0)]);
  assign wire17 = (!wire15);
  always
    @(posedge clk) begin
      reg18 <= {wire16};
      reg19 <= (8'h9f);
    end
  assign wire20 = ($signed(reg19[(1'h0):(1'h0)]) >= reg18[(1'h0):(1'h0)]);
  assign wire21 = wire17;
  assign wire22 = ((~&{(reg18 >> wire15)}) >>> wire21[(2'h2):(1'h1)]);
  assign wire23 = ((reg18[(3'h4):(2'h3)] ?
                          $signed(wire16) : ((wire22 == wire13) ?
                              $unsigned(wire20) : (8'ha6))) ?
                      ({((8'ha8) + wire17)} >> ($signed(reg18) < (~&wire14))) : wire14[(4'h8):(2'h2)]);
  assign wire24 = (^reg19);
  assign wire25 = (wire15 > wire14[(3'h6):(3'h4)]);
  assign wire26 = $signed(wire21[(2'h3):(2'h3)]);
  always
    @(posedge clk) begin
      reg27 <= wire16[(3'h5):(1'h0)];
    end
  assign wire28 = (((~|(reg19 < reg18)) >>> (!{wire25})) ?
                      (((wire23 | reg19) ?
                          wire20[(1'h1):(1'h0)] : (+wire25)) ~^ wire23[(3'h7):(2'h3)]) : $unsigned(wire13));
endmodule