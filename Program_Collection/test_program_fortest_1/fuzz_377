(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire74;
  wire signed [(3'h7):(1'h0)] wire73;
  wire [(4'ha):(1'h0)] wire72;
  wire [(4'hb):(1'h0)] wire71;
  wire signed [(4'h9):(1'h0)] wire69;
  wire signed [(3'h6):(1'h0)] wire9;
  wire [(4'h8):(1'h0)] wire8;
  wire signed [(3'h4):(1'h0)] wire7;
  wire [(4'ha):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire4;
  assign y = {wire74,
                 wire73,
                 wire72,
                 wire71,
                 wire69,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = ((($unsigned(wire1) >> $unsigned(wire2)) ?
                         ((wire1 ?
                             wire3 : wire3) >>> (8'h9d)) : ((~&wire3) && wire3)) ?
                     $unsigned((wire2 << (wire2 <<< wire3))) : (~&wire2[(3'h5):(2'h2)]));
  assign wire5 = (|{($signed(wire1) ? wire4[(1'h1):(1'h1)] : $signed(wire2))});
  assign wire6 = wire2;
  assign wire7 = {wire1};
  assign wire8 = wire0[(3'h6):(3'h5)];
  assign wire9 = (^~$signed((&(|wire6))));
  module10 #() modinst70 (wire69, clk, wire6, wire1, wire2, wire8);
  assign wire71 = wire5;
  assign wire72 = (~^$unsigned(wire8));
  assign wire73 = ((+(wire71 <= wire7[(2'h2):(1'h1)])) ?
                      ($unsigned((8'had)) ?
                          wire8[(3'h7):(3'h7)] : $signed((~wire0))) : ($signed({wire0}) ?
                          ((wire3 ? wire69 : wire4) ?
                              wire7[(1'h0):(1'h0)] : $unsigned(wire2)) : ($signed(wire71) ?
                              $signed(wire5) : $unsigned(wire8))));
  module10 #() modinst75 (.wire14(wire5), .wire13(wire4), .clk(clk), .y(wire74), .wire12(wire69), .wire11(wire71));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param68 = (((~(8'haa)) ? {(-(8'hae))} : (((8'ha2) << (8'ha5)) && ((8'ha1) + (8'ha6)))) ? (^(((8'h9d) ? (8'ha4) : (8'ha5)) | {(8'hae)})) : (8'ha6)))
(y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire14;
  input wire signed [(4'hb):(1'h0)] wire13;
  input wire [(4'h9):(1'h0)] wire12;
  input wire [(3'h7):(1'h0)] wire11;
  wire [(4'h8):(1'h0)] wire67;
  wire signed [(3'h7):(1'h0)] wire66;
  wire [(4'ha):(1'h0)] wire63;
  wire signed [(3'h4):(1'h0)] wire41;
  wire [(3'h7):(1'h0)] wire40;
  wire signed [(2'h2):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire16;
  wire signed [(3'h5):(1'h0)] wire15;
  reg [(3'h7):(1'h0)] reg65 = (1'h0);
  assign y = {wire67,
                 wire66,
                 wire63,
                 wire41,
                 wire40,
                 wire38,
                 wire16,
                 wire15,
                 reg65,
                 (1'h0)};
  assign wire15 = $unsigned(($signed((8'h9c)) ?
                      $unsigned(wire13[(1'h1):(1'h0)]) : ((8'ha0) * $signed(wire11))));
  assign wire16 = ($signed($signed($signed((8'haa)))) ?
                      {$signed((wire15 << wire13))} : (wire13 ?
                          $unsigned(wire11[(3'h4):(1'h1)]) : $signed((!wire13))));
  module17 #() modinst39 (wire38, clk, wire16, wire12, wire13, wire11);
  assign wire40 = (($signed(wire16[(2'h3):(1'h1)]) ?
                          $signed(wire13[(4'ha):(4'h9)]) : (~|{wire38})) ?
                      (8'h9e) : (+(+(-(8'ha0)))));
  assign wire41 = $signed((-wire11));
  module42 #() modinst64 (.wire43(wire40), .wire46(wire14), .clk(clk), .wire45(wire12), .y(wire63), .wire44(wire16));
  always
    @(posedge clk) begin
      reg65 <= $unsigned(wire15[(1'h0):(1'h0)]);
    end
  assign wire66 = (~&$unsigned(($signed(wire40) ?
                      (^~wire63) : $signed(wire12))));
  assign wire67 = ({{(wire66 || reg65)}} ?
                      $signed(wire41) : (wire41 | ((reg65 ?
                          reg65 : wire38) && {wire14})));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module42
#(parameter param62 = ((({(8'ha7)} ? ((8'h9e) ? (8'ha3) : (8'hb0)) : ((8'hac) & (8'ha2))) ? (((8'hb0) ? (8'ha8) : (8'hae)) > ((8'h9c) ? (8'h9e) : (8'ha2))) : (((8'ha9) ^~ (8'h9f)) >> ((8'haa) ? (8'ha8) : (8'ha8)))) >>> (~&(((8'ha7) >> (8'ha8)) ^ (-(8'ha5))))))
(y, clk, wire46, wire45, wire44, wire43);
  output wire [(32'h58):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire46;
  input wire signed [(3'h4):(1'h0)] wire45;
  input wire [(3'h7):(1'h0)] wire44;
  input wire [(3'h7):(1'h0)] wire43;
  wire [(4'h8):(1'h0)] wire61;
  wire signed [(2'h3):(1'h0)] wire60;
  wire [(2'h3):(1'h0)] wire59;
  wire [(4'hb):(1'h0)] wire58;
  wire signed [(3'h6):(1'h0)] wire57;
  wire signed [(4'h9):(1'h0)] wire56;
  wire signed [(3'h7):(1'h0)] wire55;
  wire [(3'h6):(1'h0)] wire54;
  wire signed [(4'h8):(1'h0)] wire48;
  wire [(3'h4):(1'h0)] wire47;
  reg [(2'h2):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg52 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg49 = (1'h0);
  assign y = {wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire48,
                 wire47,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 (1'h0)};
  assign wire47 = (-(~&{$signed(wire46)}));
  assign wire48 = ({(|$signed(wire45))} ?
                      wire47[(1'h1):(1'h1)] : wire43[(2'h2):(2'h2)]);
  always
    @(posedge clk) begin
      reg49 <= wire44;
      if ((8'had))
        begin
          reg50 <= (&wire47);
        end
      else
        begin
          if (wire45)
            begin
              reg50 <= $signed(wire48[(1'h0):(1'h0)]);
            end
          else
            begin
              reg50 <= ((wire48[(1'h1):(1'h0)] + ((wire48 > wire48) >> (reg50 ^~ wire44))) ?
                  (-$signed({wire45})) : $signed((!(wire48 ?
                      wire44 : wire48))));
              reg51 <= wire48[(1'h0):(1'h0)];
              reg52 <= wire47;
            end
          reg53 <= $unsigned(reg51[(4'h8):(1'h1)]);
        end
    end
  assign wire54 = wire46;
  assign wire55 = (~$unsigned($signed((reg51 == wire48))));
  assign wire56 = $signed(wire45);
  assign wire57 = reg50[(1'h0):(1'h0)];
  assign wire58 = $unsigned((8'ha6));
  assign wire59 = (~^(~|(^(~|(8'ha6)))));
  assign wire60 = $unsigned($signed($signed((&reg52))));
  assign wire61 = $unsigned(wire60[(2'h2):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17
#(parameter param37 = {((((8'hb0) == (8'ha9)) ? (~(8'hac)) : {(8'ha6)}) * ({(8'haf)} * ((8'h9c) ? (8'ha2) : (8'h9d))))})
(y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h70):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire21;
  input wire signed [(4'h8):(1'h0)] wire20;
  input wire [(4'ha):(1'h0)] wire19;
  input wire signed [(3'h5):(1'h0)] wire18;
  wire [(3'h6):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire35;
  wire [(4'hb):(1'h0)] wire34;
  wire signed [(2'h2):(1'h0)] wire33;
  wire [(4'ha):(1'h0)] wire32;
  wire signed [(3'h6):(1'h0)] wire26;
  wire [(2'h3):(1'h0)] wire25;
  wire [(4'h9):(1'h0)] wire24;
  wire [(3'h7):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire22;
  reg signed [(4'h8):(1'h0)] reg31 = (1'h0);
  reg [(4'h9):(1'h0)] reg30 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg27 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 (1'h0)};
  assign wire22 = (|((~|(wire21 * wire21)) ~^ ((wire21 >= wire20) ?
                      (+wire18) : (wire20 ? wire21 : wire20))));
  assign wire23 = ($unsigned(wire18) ?
                      $signed($signed(((8'ha0) ?
                          wire21 : wire18))) : $unsigned(($unsigned(wire21) ~^ $unsigned((8'had)))));
  assign wire24 = (((8'haf) >> wire23[(3'h5):(1'h1)]) - ($signed({wire23}) ?
                      {(+(8'ha0))} : $unsigned($signed(wire19))));
  assign wire25 = (~^$signed((8'h9d)));
  assign wire26 = (($signed(wire22) ^~ (wire18[(1'h1):(1'h1)] & (~wire21))) <<< $signed(wire22));
  always
    @(posedge clk) begin
      reg27 <= $signed((^~$unsigned(wire21[(2'h2):(2'h2)])));
      reg28 <= (reg27 ~^ wire22);
      if ($signed((+(~&(~&wire21)))))
        begin
          reg29 <= {wire26};
        end
      else
        begin
          reg29 <= {(~reg28)};
          if (wire20)
            begin
              reg30 <= reg29[(3'h6):(3'h6)];
            end
          else
            begin
              reg30 <= $unsigned($signed({reg30[(3'h7):(2'h2)]}));
              reg31 <= ($signed((~((8'h9e) ?
                  reg27 : (8'ha5)))) ^~ (~&{wire20}));
            end
        end
    end
  assign wire32 = $signed(($unsigned($unsigned(wire25)) ?
                      $signed($signed(reg28)) : (8'ha9)));
  assign wire33 = ((~|$signed($signed(wire20))) ?
                      (reg31 ?
                          ($signed(wire19) ?
                              $unsigned(wire32) : (wire21 > reg31)) : ($signed((8'hab)) ?
                              $signed(reg29) : (^wire21))) : $signed(((wire21 && wire25) && $unsigned((8'ha2)))));
  assign wire34 = $signed($signed((^~(~&reg29))));
  assign wire35 = wire34;
  assign wire36 = $signed((reg29 ? (|{wire20}) : $signed($signed(reg27))));
endmodule