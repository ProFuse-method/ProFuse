(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire signed [(2'h2):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire19;
  wire [(4'hb):(1'h0)] wire18;
  wire [(3'h7):(1'h0)] wire17;
  wire [(4'hb):(1'h0)] wire16;
  wire signed [(4'h8):(1'h0)] wire15;
  wire [(3'h4):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire13;
  wire [(3'h5):(1'h0)] wire12;
  wire [(3'h7):(1'h0)] wire11;
  wire [(2'h2):(1'h0)] wire4;
  reg [(4'hb):(1'h0)] reg10 = (1'h0);
  reg [(4'ha):(1'h0)] reg9 = (1'h0);
  reg [(3'h6):(1'h0)] reg8 = (1'h0);
  reg [(4'ha):(1'h0)] reg7 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg5 = (1'h0);
  assign y = {wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire4,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = (8'ha2);
  always
    @(posedge clk) begin
      if ((wire4[(1'h0):(1'h0)] << (|$unsigned(wire0))))
        begin
          reg5 <= (8'h9f);
        end
      else
        begin
          if (wire0[(3'h6):(1'h0)])
            begin
              reg5 <= ((wire2[(1'h0):(1'h0)] && wire4) >= $signed(({wire4} < wire3)));
              reg6 <= ((wire2 ?
                  (~((8'h9d) ? (8'had) : wire0)) : $signed(((8'hac) ?
                      wire4 : wire0))) + (((^~wire3) ?
                      (wire0 ? wire4 : wire2) : (wire1 ? wire4 : wire1)) ?
                  ($signed(wire3) | wire0) : wire2[(1'h1):(1'h1)]));
              reg7 <= $signed((((|wire1) ~^ (reg5 ?
                  wire0 : wire3)) & $signed(reg5[(3'h6):(1'h0)])));
            end
          else
            begin
              reg5 <= wire0;
            end
          reg8 <= $signed((-(~^$signed(reg5))));
        end
    end
  always
    @(posedge clk) begin
      reg9 <= reg6;
      reg10 <= ({{{reg8}}} & (-((~&reg7) != (reg5 ? wire4 : reg7))));
    end
  assign wire11 = reg8;
  assign wire12 = reg5;
  assign wire13 = $signed($unsigned((+$signed(reg7))));
  assign wire14 = $unsigned(($unsigned({wire0}) ?
                      $unsigned((~|reg10)) : reg10));
  assign wire15 = (|(($unsigned(wire2) ?
                      $unsigned(wire4) : (~&wire4)) ^~ ((wire12 ?
                      wire1 : wire2) == reg10[(1'h0):(1'h0)])));
  assign wire16 = wire15;
  assign wire17 = reg9[(3'h4):(1'h0)];
  assign wire18 = (^$unsigned($signed((wire1 ? wire4 : (8'hac)))));
  assign wire19 = reg8[(1'h0):(1'h0)];
endmodule