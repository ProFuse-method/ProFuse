(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire43;
  wire [(3'h7):(1'h0)] wire42;
  wire signed [(4'h9):(1'h0)] wire40;
  wire signed [(4'h9):(1'h0)] wire11;
  wire signed [(2'h3):(1'h0)] wire10;
  wire [(4'h9):(1'h0)] wire8;
  wire [(4'h8):(1'h0)] wire7;
  wire [(4'h9):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire4;
  reg signed [(3'h5):(1'h0)] reg47 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg9 = (1'h0);
  assign y = {wire43,
                 wire42,
                 wire40,
                 wire11,
                 wire10,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg47,
                 reg46,
                 reg45,
                 reg9,
                 (1'h0)};
  assign wire4 = $unsigned(wire1[(3'h7):(3'h5)]);
  assign wire5 = {((&(wire4 * wire1)) & $signed((wire0 ? wire1 : wire4)))};
  assign wire6 = wire4;
  assign wire7 = $signed((&$signed(wire2[(3'h6):(3'h5)])));
  assign wire8 = (~|$unsigned(((wire5 ? wire7 : (8'ha9)) << $unsigned(wire4))));
  always
    @(posedge clk) begin
      reg9 <= wire6[(3'h4):(2'h2)];
    end
  assign wire10 = wire7[(3'h5):(1'h0)];
  assign wire11 = $unsigned(reg9);
  module12 #() modinst41 (wire40, clk, wire2, wire8, wire1, wire4);
  assign wire42 = wire11;
  module12 #() modinst44 (wire43, clk, wire4, wire40, wire0, wire3);
  always
    @(posedge clk) begin
      reg45 <= wire0;
      reg46 <= ((!(~|wire3)) ? {(8'ha6)} : wire7[(1'h0):(1'h0)]);
      reg47 <= ($signed(($unsigned(reg9) ? wire7 : (reg46 ? wire10 : wire42))) ?
          (wire11[(2'h3):(1'h0)] ?
              $unsigned(wire6) : wire7) : $unsigned({wire43}));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param39 = (!(|(((8'ha6) || (8'hac)) ? ((8'hac) ^~ (8'hae)) : (8'h9e)))))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire16;
  input wire signed [(4'h9):(1'h0)] wire15;
  input wire [(4'hb):(1'h0)] wire14;
  input wire signed [(4'ha):(1'h0)] wire13;
  wire [(4'h9):(1'h0)] wire31;
  wire [(4'h9):(1'h0)] wire18;
  wire [(4'h8):(1'h0)] wire17;
  reg [(2'h3):(1'h0)] reg38 = (1'h0);
  reg [(3'h7):(1'h0)] reg37 = (1'h0);
  reg [(3'h7):(1'h0)] reg36 = (1'h0);
  reg [(3'h7):(1'h0)] reg35 = (1'h0);
  reg [(3'h5):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg33 = (1'h0);
  assign y = {wire31,
                 wire18,
                 wire17,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 (1'h0)};
  assign wire17 = $unsigned((~$signed($unsigned(wire14))));
  assign wire18 = {(~|(~&(8'ha1)))};
  module19 #() modinst32 (wire31, clk, wire14, wire17, wire16, wire13);
  always
    @(posedge clk) begin
      reg33 <= wire17[(3'h6):(3'h6)];
      if (reg33[(4'h9):(1'h0)])
        begin
          reg34 <= wire16[(2'h3):(2'h2)];
          reg35 <= (((wire18[(2'h3):(1'h1)] ?
                      wire13[(4'h8):(4'h8)] : wire16[(1'h0):(1'h0)]) ?
                  ($unsigned(wire18) ?
                      (!wire18) : {wire17}) : $unsigned({wire31})) ?
              ((~&(-wire14)) == (^(8'hac))) : wire31);
        end
      else
        begin
          reg34 <= ($signed($unsigned((reg34 >> (8'h9f)))) ?
              $unsigned($unsigned((wire13 << wire18))) : $unsigned((wire15 ?
                  (wire17 >> wire17) : wire14)));
          reg35 <= (~&{$signed((reg35 ? wire17 : wire31))});
        end
    end
  always
    @(posedge clk) begin
      if (wire14)
        begin
          reg36 <= $signed(wire13);
          reg37 <= (wire16[(2'h3):(2'h2)] >> wire15);
          reg38 <= reg35;
        end
      else
        begin
          reg36 <= (+$unsigned($unsigned((+wire15))));
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module19  (y, clk, wire23, wire22, wire21, wire20);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire23;
  input wire [(4'h8):(1'h0)] wire22;
  input wire [(3'h4):(1'h0)] wire21;
  input wire [(4'ha):(1'h0)] wire20;
  wire signed [(3'h7):(1'h0)] wire30;
  wire [(4'ha):(1'h0)] wire29;
  wire [(3'h6):(1'h0)] wire28;
  wire [(4'hb):(1'h0)] wire27;
  wire signed [(2'h3):(1'h0)] wire26;
  wire [(2'h3):(1'h0)] wire25;
  wire signed [(3'h7):(1'h0)] wire24;
  assign y = {wire30, wire29, wire28, wire27, wire26, wire25, wire24, (1'h0)};
  assign wire24 = (wire22 ? wire23 : wire20);
  assign wire25 = $unsigned(wire23[(1'h1):(1'h0)]);
  assign wire26 = wire21;
  assign wire27 = (&($unsigned((wire20 ? wire24 : wire23)) ?
                      wire24[(2'h2):(1'h1)] : wire23));
  assign wire28 = wire26;
  assign wire29 = (((8'ha5) ~^ (wire23[(1'h0):(1'h0)] | (~|(8'ha6)))) ?
                      wire24[(2'h2):(1'h0)] : wire28[(3'h6):(1'h1)]);
  assign wire30 = (+wire28[(2'h2):(1'h0)]);
endmodule