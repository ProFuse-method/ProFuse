(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param60 = ((+(((8'ha9) - (8'ha3)) ? (~&(8'h9c)) : ((8'hac) << (8'h9d)))) && (((~(8'hb0)) ? ((8'ha8) >>> (8'hb0)) : ((8'hab) + (8'ha7))) || (((8'ha1) | (8'h9d)) ? ((8'ha8) ? (8'had) : (8'had)) : (~(8'ha5))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire56;
  wire signed [(3'h4):(1'h0)] wire55;
  wire [(4'h8):(1'h0)] wire54;
  wire [(2'h3):(1'h0)] wire53;
  wire signed [(2'h3):(1'h0)] wire52;
  wire signed [(3'h4):(1'h0)] wire50;
  wire signed [(4'ha):(1'h0)] wire7;
  wire [(4'ha):(1'h0)] wire6;
  wire signed [(3'h6):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire4;
  reg signed [(4'hb):(1'h0)] reg59 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg58 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg57 = (1'h0);
  assign y = {wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire50,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg59,
                 reg58,
                 reg57,
                 (1'h0)};
  assign wire4 = ($signed(((wire2 ? wire1 : wire2) == $signed(wire1))) ?
                     $signed(wire0[(3'h6):(3'h6)]) : (~&$unsigned(wire0[(2'h2):(1'h0)])));
  assign wire5 = $unsigned((^~wire0));
  assign wire6 = (|$signed((~|wire5[(2'h3):(1'h1)])));
  assign wire7 = {({(wire2 ? wire0 : (8'hac))} <<< $signed((wire6 ?
                         wire4 : wire1)))};
  module8 #() modinst51 (.wire10(wire7), .wire9(wire4), .wire11(wire2), .clk(clk), .y(wire50), .wire12(wire0));
  assign wire52 = wire2[(1'h0):(1'h0)];
  assign wire53 = (!$unsigned(wire0[(1'h0):(1'h0)]));
  assign wire54 = wire7;
  assign wire55 = $unsigned((|$signed((wire5 - (8'h9e)))));
  assign wire56 = wire53[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg57 <= (8'h9d);
      reg58 <= $signed((~^(wire5[(1'h0):(1'h0)] * $unsigned(reg57))));
      reg59 <= $signed((wire2 ?
          wire5[(3'h6):(2'h2)] : (wire0 > (wire53 ? wire4 : (8'hae)))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param49 = ((((+(8'hb0)) ? ((8'h9c) ? (8'h9c) : (8'hae)) : (8'hac)) && {((8'ha8) != (8'ha4))}) * ({(~|(8'h9f))} && (&((8'ha1) ? (8'ha6) : (8'haa))))))
(y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h9d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire12;
  input wire signed [(3'h7):(1'h0)] wire11;
  input wire [(4'ha):(1'h0)] wire10;
  input wire signed [(4'hb):(1'h0)] wire9;
  wire [(4'hb):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire47;
  wire signed [(3'h5):(1'h0)] wire46;
  wire signed [(3'h5):(1'h0)] wire44;
  wire signed [(2'h2):(1'h0)] wire43;
  wire [(2'h3):(1'h0)] wire42;
  wire [(2'h3):(1'h0)] wire29;
  wire signed [(4'hb):(1'h0)] wire28;
  wire [(2'h2):(1'h0)] wire26;
  wire signed [(2'h2):(1'h0)] wire14;
  wire [(3'h6):(1'h0)] wire13;
  reg signed [(3'h5):(1'h0)] reg45 = (1'h0);
  reg [(4'h8):(1'h0)] reg41 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg40 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg39 = (1'h0);
  reg [(4'h9):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg37 = (1'h0);
  reg [(3'h5):(1'h0)] reg36 = (1'h0);
  reg [(4'h9):(1'h0)] reg35 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg34 = (1'h0);
  reg [(3'h4):(1'h0)] reg33 = (1'h0);
  reg [(4'h8):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg31 = (1'h0);
  reg [(4'hb):(1'h0)] reg30 = (1'h0);
  assign y = {wire48,
                 wire47,
                 wire46,
                 wire44,
                 wire43,
                 wire42,
                 wire29,
                 wire28,
                 wire26,
                 wire14,
                 wire13,
                 reg45,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 (1'h0)};
  assign wire13 = wire12;
  assign wire14 = ({$signed((wire12 != (8'hab)))} ~^ ((^wire12) <= $unsigned({wire12})));
  module15 #() modinst27 (.y(wire26), .wire18(wire11), .clk(clk), .wire17(wire12), .wire19(wire13), .wire16(wire10));
  assign wire28 = (!$unsigned((-$signed((8'had)))));
  assign wire29 = ((-wire11) >= $unsigned($signed(wire14)));
  always
    @(posedge clk) begin
      if (wire9[(3'h7):(3'h5)])
        begin
          reg30 <= wire26[(1'h0):(1'h0)];
          reg31 <= wire29[(1'h1):(1'h1)];
        end
      else
        begin
          if (wire12)
            begin
              reg30 <= wire14;
              reg31 <= $unsigned({((~wire11) ?
                      $signed(wire14) : $signed((8'ha8)))});
              reg32 <= reg31[(1'h0):(1'h0)];
            end
          else
            begin
              reg30 <= {$unsigned($signed(((8'ha7) ? reg32 : wire9)))};
            end
          reg33 <= wire10[(3'h7):(3'h5)];
        end
      reg34 <= $signed((|$signed($unsigned(wire29))));
      if (reg32)
        begin
          if (((reg34[(3'h7):(3'h4)] || wire14) ?
              (reg31 | reg31) : (wire12[(2'h2):(2'h2)] ?
                  reg31[(2'h3):(2'h2)] : ((wire12 >>> wire28) | $unsigned(reg30)))))
            begin
              reg35 <= $unsigned((&wire29[(1'h0):(1'h0)]));
            end
          else
            begin
              reg35 <= (~&$unsigned(({wire10} ^~ (~^reg32))));
            end
          if (reg35[(3'h6):(3'h4)])
            begin
              reg36 <= ($unsigned((8'hab)) << wire12[(3'h4):(3'h4)]);
              reg37 <= wire26;
              reg38 <= reg34[(1'h0):(1'h0)];
            end
          else
            begin
              reg36 <= wire29[(2'h3):(1'h0)];
              reg37 <= (~^wire10[(3'h5):(3'h4)]);
              reg38 <= wire26;
            end
          reg39 <= $unsigned((((~wire10) ?
              (reg38 ? (8'ha7) : reg37) : (wire13 ?
                  reg38 : wire29)) ^~ wire29));
        end
      else
        begin
          if ($unsigned($signed((~^wire11[(3'h4):(2'h3)]))))
            begin
              reg35 <= (^($signed((reg38 && reg39)) | (wire26[(2'h2):(1'h0)] ?
                  (reg35 ? wire10 : wire9) : $signed(reg31))));
              reg36 <= ((({reg39} ?
                      wire12[(3'h4):(1'h0)] : (wire29 ?
                          wire14 : wire12)) & (wire11[(3'h7):(3'h5)] ?
                      {wire13} : $signed(reg33))) ?
                  ($unsigned((^~wire29)) + (8'hae)) : $signed($unsigned({wire12})));
              reg37 <= reg33;
            end
          else
            begin
              reg35 <= ((~|{{wire29}}) ^~ ((^~$signed((8'h9c))) ^~ $signed((wire13 ?
                  wire9 : wire14))));
            end
          if ($signed(reg34[(4'h8):(3'h6)]))
            begin
              reg38 <= (({$unsigned((8'h9f))} ?
                  $unsigned((~&(8'haa))) : reg30) ^ (|$unsigned(wire29[(1'h0):(1'h0)])));
            end
          else
            begin
              reg38 <= $signed(reg37);
              reg39 <= wire13;
              reg40 <= {reg32[(1'h0):(1'h0)]};
            end
          if (wire12)
            begin
              reg41 <= reg40[(1'h0):(1'h0)];
            end
          else
            begin
              reg41 <= (reg30 ?
                  ((reg36[(3'h4):(2'h3)] ? (wire28 || (8'hb0)) : wire9) ?
                      {wire13[(2'h2):(1'h0)]} : wire14[(2'h2):(1'h1)]) : {$signed((wire14 ?
                          wire10 : wire11))});
            end
        end
    end
  assign wire42 = reg33[(1'h0):(1'h0)];
  assign wire43 = wire29[(2'h3):(1'h0)];
  assign wire44 = ((8'ha3) >>> {$signed($signed(reg35))});
  always
    @(posedge clk) begin
      reg45 <= (8'ha9);
    end
  assign wire46 = (8'ha4);
  assign wire47 = $unsigned($signed($unsigned($signed((8'h9c)))));
  assign wire48 = $unsigned((~^(~&$unsigned(reg30))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param25 = (((~|((8'ha8) ? (8'ha4) : (8'hae))) || (((8'ha4) ? (8'hac) : (8'hb0)) < {(8'haa)})) ? {(((8'h9c) && (8'h9f)) * ((8'h9c) ? (8'haa) : (8'ha6)))} : (8'hae)))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire19;
  input wire [(3'h6):(1'h0)] wire18;
  input wire [(2'h2):(1'h0)] wire17;
  input wire signed [(4'ha):(1'h0)] wire16;
  wire [(4'hb):(1'h0)] wire24;
  wire signed [(4'hb):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire22;
  wire [(4'hb):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire20;
  assign y = {wire24, wire23, wire22, wire21, wire20, (1'h0)};
  assign wire20 = $unsigned((($unsigned(wire18) ?
                      wire16[(4'h9):(3'h6)] : (wire17 ?
                          wire17 : wire17)) << wire18));
  assign wire21 = ($signed(wire17) ?
                      ({$signed(wire20)} - (wire19[(2'h2):(1'h0)] && $signed(wire19))) : $signed($unsigned($unsigned(wire18))));
  assign wire22 = (+$unsigned($signed($signed(wire20))));
  assign wire23 = (^$signed(wire16));
  assign wire24 = (^wire20);
endmodule