(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3, wire4);
  output wire [(32'h3b8):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hf):(1'h0)] wire0;
  input wire [(3'h7):(1'h0)] wire1;
  input wire [(5'h15):(1'h0)] wire2;
  input wire signed [(5'h10):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire4;
  wire [(4'h8):(1'h0)] wire331;
  wire signed [(2'h3):(1'h0)] wire330;
  wire [(3'h5):(1'h0)] wire328;
  wire [(4'hd):(1'h0)] wire5;
  wire [(5'h13):(1'h0)] wire58;
  wire signed [(3'h7):(1'h0)] wire105;
  wire [(3'h7):(1'h0)] wire106;
  wire [(2'h3):(1'h0)] wire107;
  wire [(3'h4):(1'h0)] wire108;
  wire signed [(2'h3):(1'h0)] wire109;
  wire signed [(5'h12):(1'h0)] wire112;
  wire [(5'h14):(1'h0)] wire113;
  wire [(5'h11):(1'h0)] wire326;
  reg [(5'h15):(1'h0)] reg352 = (1'h0);
  reg [(5'h15):(1'h0)] reg351 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg350 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg348 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg347 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg336 = (1'h0);
  reg [(3'h7):(1'h0)] reg61 = (1'h0);
  reg [(4'hc):(1'h0)] reg63 = (1'h0);
  reg [(5'h13):(1'h0)] reg67 = (1'h0);
  reg [(5'h13):(1'h0)] reg68 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg69 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg71 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg73 = (1'h0);
  reg [(3'h5):(1'h0)] reg74 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg75 = (1'h0);
  reg [(4'h9):(1'h0)] reg78 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg79 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg81 = (1'h0);
  reg [(3'h6):(1'h0)] reg85 = (1'h0);
  reg [(4'he):(1'h0)] reg87 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg89 = (1'h0);
  reg [(5'h14):(1'h0)] reg90 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg92 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg93 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg94 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg98 = (1'h0);
  reg [(2'h2):(1'h0)] reg99 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg101 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg102 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg103 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg97 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg110 = (1'h0);
  reg [(4'hd):(1'h0)] reg111 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar349 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar346 = (1'h0);
  reg [(5'h11):(1'h0)] forvar345 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg344 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar343 = (1'h0);
  reg [(5'h10):(1'h0)] reg342 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg341 = (1'h0);
  reg [(5'h10):(1'h0)] forvar340 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg339 = (1'h0);
  reg [(4'hd):(1'h0)] forvar338 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg337 = (1'h0);
  reg [(5'h10):(1'h0)] forvar335 = (1'h0);
  reg [(4'h8):(1'h0)] reg334 = (1'h0);
  reg [(4'hc):(1'h0)] forvar333 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar332 = (1'h0);
  reg [(3'h5):(1'h0)] reg91 = (1'h0);
  reg [(4'hd):(1'h0)] reg104 = (1'h0);
  reg [(4'hf):(1'h0)] forvar100 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar97 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg96 = (1'h0);
  reg [(4'h8):(1'h0)] reg95 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar91 = (1'h0);
  reg [(4'he):(1'h0)] reg88 = (1'h0);
  reg [(5'h14):(1'h0)] reg86 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg84 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg83 = (1'h0);
  reg [(2'h3):(1'h0)] reg82 = (1'h0);
  reg [(5'h13):(1'h0)] forvar81 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg80 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar77 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg76 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg72 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar70 = (1'h0);
  reg [(3'h4):(1'h0)] reg66 = (1'h0);
  reg [(4'ha):(1'h0)] reg65 = (1'h0);
  reg [(3'h5):(1'h0)] forvar64 = (1'h0);
  reg [(4'hf):(1'h0)] forvar62 = (1'h0);
  reg [(4'ha):(1'h0)] forvar60 = (1'h0);
  assign y = {wire331,
                 wire330,
                 wire328,
                 wire5,
                 wire58,
                 wire105,
                 wire106,
                 wire107,
                 wire108,
                 wire109,
                 wire112,
                 wire113,
                 wire326,
                 reg352,
                 reg351,
                 reg350,
                 reg348,
                 reg347,
                 reg336,
                 reg61,
                 reg63,
                 reg67,
                 reg68,
                 reg69,
                 reg71,
                 reg73,
                 reg74,
                 reg75,
                 reg78,
                 reg79,
                 reg81,
                 reg85,
                 reg87,
                 reg89,
                 reg90,
                 reg92,
                 reg93,
                 reg94,
                 reg98,
                 reg99,
                 reg101,
                 reg102,
                 reg103,
                 reg97,
                 reg110,
                 reg111,
                 forvar349,
                 forvar346,
                 forvar345,
                 reg344,
                 forvar343,
                 reg342,
                 reg341,
                 forvar340,
                 reg339,
                 forvar338,
                 reg337,
                 forvar335,
                 reg334,
                 forvar333,
                 forvar332,
                 reg91,
                 reg104,
                 forvar100,
                 forvar97,
                 reg96,
                 reg95,
                 forvar91,
                 reg88,
                 reg86,
                 reg84,
                 reg83,
                 reg82,
                 forvar81,
                 reg80,
                 forvar77,
                 reg76,
                 reg72,
                 forvar70,
                 reg66,
                 reg65,
                 forvar64,
                 forvar62,
                 forvar60,
                 (1'h0)};
  assign wire5 = $signed((~$unsigned((^~(wire2 << wire0)))));
  module6 #() modinst59 (wire58, clk, wire2, wire4, wire0, wire5);
  always
    @(posedge clk) begin
      for (forvar60 = (1'h0); (forvar60 < (3'h4)); forvar60 = (forvar60 + (1'h1)))
        begin
          reg61 <= (^~(forvar60[(3'h4):(2'h2)] < $unsigned($unsigned($unsigned((8'h9e))))));
          for (forvar62 = (1'h0); (forvar62 < (2'h2)); forvar62 = (forvar62 + (1'h1)))
            begin
              reg63 <= reg61[(3'h7):(2'h2)];
            end
          for (forvar64 = (1'h0); (forvar64 < (1'h0)); forvar64 = (forvar64 + (1'h1)))
            begin
              reg65 = forvar64[(2'h2):(1'h1)];
              reg66 = ((&(wire4 ?
                  wire58 : (reg63[(3'h6):(2'h2)] ?
                      (wire58 ? forvar62 : reg63) : (wire2 ?
                          reg63 : wire3)))) == forvar60);
              reg67 <= $signed(($signed(($signed(forvar62) < (reg63 ?
                      wire2 : reg65))) ?
                  reg61 : (&wire5)));
              reg68 <= wire2;
              reg69 <= ((~^$signed(((~wire4) - (!wire3)))) != ($signed($unsigned((8'ha7))) ?
                  {wire5[(4'ha):(3'h7)]} : (~&(forvar62 ?
                      {(7'h44), wire1} : (~^wire58)))));
            end
          for (forvar70 = (1'h0); (forvar70 < (3'h4)); forvar70 = (forvar70 + (1'h1)))
            begin
              reg71 <= $signed($unsigned(forvar60));
              reg72 = reg61[(3'h6):(1'h0)];
              reg73 <= ((^~reg72) ?
                  forvar70 : ((8'had) ?
                      wire3[(2'h2):(1'h0)] : forvar64[(1'h0):(1'h0)]));
              reg74 <= wire0[(4'hd):(3'h4)];
              reg75 <= (+$unsigned(((7'h40) ?
                  forvar60 : ($unsigned((8'ha7)) ?
                      $unsigned(reg71) : reg74[(3'h5):(3'h5)]))));
            end
        end
      reg76 = $unsigned((reg69[(4'ha):(3'h7)] + wire5[(4'hb):(1'h1)]));
      if ($unsigned({(~|$unsigned({reg68, wire2})),
          (~&(reg72 ? (wire5 ? wire4 : wire5) : wire58))}))
        begin
          for (forvar77 = (1'h0); (forvar77 < (1'h1)); forvar77 = (forvar77 + (1'h1)))
            begin
              reg78 <= reg65;
              reg79 <= wire1;
              reg80 = ($unsigned((^$signed($signed(forvar70)))) ?
                  (^~(~$signed((|wire5)))) : $unsigned(($signed(reg69[(4'hd):(3'h4)]) ?
                      reg69[(4'h9):(2'h3)] : $unsigned($unsigned((8'hb9))))));
            end
          reg81 <= ((~|$unsigned($signed(reg78[(3'h7):(3'h4)]))) ?
              $unsigned((!((wire3 ^ wire0) ?
                  {reg63} : forvar64))) : {(+$unsigned(reg73)),
                  $unsigned((~|wire2[(3'h7):(3'h4)]))});
        end
      else
        begin
          for (forvar77 = (1'h0); (forvar77 < (1'h1)); forvar77 = (forvar77 + (1'h1)))
            begin
              reg80 = (8'hb1);
            end
          for (forvar81 = (1'h0); (forvar81 < (2'h2)); forvar81 = (forvar81 + (1'h1)))
            begin
              reg82 = (|reg63);
              reg83 = (|wire1[(2'h2):(1'h1)]);
              reg84 = $unsigned((({(^(8'ha2)), (wire5 << wire58)} ?
                      (^$signed(wire1)) : $unsigned(wire2[(1'h1):(1'h0)])) ?
                  reg67 : (forvar81 <= ({reg69, reg80} ?
                      (reg83 ? reg79 : (8'hbf)) : reg68))));
              reg85 <= ({(~&($unsigned(wire5) < reg63))} ?
                  {($signed(reg66[(2'h2):(1'h0)]) ?
                          reg67[(4'hf):(4'h8)] : ((forvar60 ? (8'ha5) : reg65) ?
                              reg73[(5'h10):(4'hd)] : $unsigned(reg82)))} : (7'h43));
              reg86 = forvar62;
            end
          reg87 <= $unsigned(reg73[(5'h14):(1'h1)]);
          reg88 = (reg78 ?
              ($signed($unsigned($unsigned(reg76))) ?
                  $unsigned(($signed(wire2) - reg73[(5'h13):(5'h13)])) : {$unsigned($unsigned(reg85)),
                      (reg85 <= wire58[(2'h2):(2'h2)])}) : ($unsigned($signed((reg80 || reg74))) != $signed({reg82[(1'h1):(1'h1)],
                  (forvar81 ? (8'hb5) : wire3)})));
        end
      if ($unsigned($signed(((reg76 <= reg76[(2'h2):(2'h2)]) ?
          reg88 : $signed(reg72)))))
        begin
          if ($unsigned(reg83))
            begin
              reg89 <= ($signed(reg81) ?
                  {(&($signed(reg85) >>> $signed(reg84)))} : reg63);
              reg90 <= $signed($unsigned(reg82[(2'h3):(1'h1)]));
            end
          else
            begin
              reg89 <= ($unsigned((~|$unsigned((~&forvar62)))) ?
                  reg90[(4'hc):(1'h0)] : (7'h42));
            end
          for (forvar91 = (1'h0); (forvar91 < (1'h1)); forvar91 = (forvar91 + (1'h1)))
            begin
              reg92 <= $signed(wire5[(4'hd):(1'h1)]);
              reg93 <= (&(~{(reg66[(1'h0):(1'h0)] ? reg65 : {reg71, reg69})}));
              reg94 <= ({wire2,
                      {{$unsigned(reg66), reg90}, {(reg75 >> reg78)}}} ?
                  ((^~((wire58 ? (8'hb3) : forvar62) <<< $unsigned(wire0))) ?
                      (reg61[(3'h6):(3'h5)] ?
                          $signed(reg66) : {reg85[(3'h5):(2'h3)],
                              $signed(reg80)}) : ({(wire2 - reg71)} ?
                          $signed(((8'hb9) ?
                              wire1 : forvar91)) : (reg85[(2'h3):(1'h1)] <= (!reg87)))) : $signed(((|(reg89 <<< reg81)) == (7'h43))));
              reg95 = (^~wire0);
              reg96 = $signed(((reg86 >>> $unsigned($unsigned((8'hba)))) && wire1));
            end
          for (forvar97 = (1'h0); (forvar97 < (2'h2)); forvar97 = (forvar97 + (1'h1)))
            begin
              reg98 <= ((($signed(reg84) ?
                      $signed($unsigned(reg92)) : ((|wire0) << $unsigned(forvar97))) > reg76) ?
                  reg92[(4'h8):(3'h6)] : {reg69});
              reg99 <= forvar81;
            end
          for (forvar100 = (1'h0); (forvar100 < (2'h2)); forvar100 = (forvar100 + (1'h1)))
            begin
              reg101 <= (reg82 - $unsigned(reg65[(4'ha):(1'h0)]));
              reg102 <= $signed(reg61[(2'h3):(1'h0)]);
              reg103 <= (8'hbf);
              reg104 = {$signed(($signed($unsigned(reg75)) + (^(reg79 - reg98)))),
                  $signed({(&reg81), {reg99[(2'h2):(1'h1)], forvar100}})};
            end
        end
      else
        begin
          reg91 = reg82;
          reg95 = (reg93[(1'h0):(1'h0)] ?
              $unsigned($unsigned({$unsigned(reg85)})) : reg82[(1'h0):(1'h0)]);
          reg97 <= $signed($signed($signed(wire58[(3'h4):(3'h4)])));
        end
    end
  assign wire105 = (reg98[(4'h8):(3'h6)] ^~ ($signed(reg87) ?
                       reg75[(1'h1):(1'h0)] : (reg74[(1'h0):(1'h0)] ?
                           (^$signed(reg69)) : ($signed(reg94) * (!reg87)))));
  assign wire106 = (8'ha5);
  assign wire107 = $unsigned({(($signed(reg92) ?
                           reg97[(3'h4):(1'h1)] : (wire2 >= (7'h44))) | reg67[(4'hf):(3'h4)])});
  assign wire108 = $unsigned(wire106);
  assign wire109 = wire1[(3'h6):(3'h6)];
  always
    @(posedge clk) begin
      reg110 <= reg69[(2'h3):(2'h2)];
      reg111 <= (~&{reg98[(3'h4):(3'h4)]});
    end
  assign wire112 = (^~{((~^(wire109 ? wire1 : reg81)) || (|reg71)), wire109});
  assign wire113 = ($signed((|$signed((wire0 ?
                       reg61 : reg68)))) <= reg68[(3'h6):(3'h6)]);
  module114 #() modinst327 (.wire118(reg87), .wire117(reg71), .wire116(reg63), .wire115(wire113), .clk(clk), .y(wire326));
  module171 #() modinst329 (wire328, clk, reg89, reg90, reg103, reg81);
  assign wire330 = {$unsigned(((+{wire5}) & wire105)), $signed(wire105)};
  assign wire331 = (&$signed((($signed(reg61) < (wire109 ? reg103 : wire5)) ?
                       $unsigned((8'hb5)) : ((reg102 ?
                           reg90 : reg93) <= (8'ha2)))));
  always
    @(posedge clk) begin
      for (forvar332 = (1'h0); (forvar332 < (2'h3)); forvar332 = (forvar332 + (1'h1)))
        begin
          for (forvar333 = (1'h0); (forvar333 < (1'h0)); forvar333 = (forvar333 + (1'h1)))
            begin
              reg334 = $signed(((~reg68) ?
                  (wire1 - $unsigned(wire1)) : $signed($signed(reg110))));
            end
          for (forvar335 = (1'h0); (forvar335 < (2'h3)); forvar335 = (forvar335 + (1'h1)))
            begin
              reg336 <= (wire113 ?
                  reg79[(2'h2):(2'h2)] : wire112[(4'hc):(4'hc)]);
              reg337 = {(wire2[(4'ha):(3'h4)] >= {$signed({wire330, reg111})}),
                  {(~&((reg90 ? wire326 : wire328) <<< ((8'hbb) ?
                          reg68 : wire3))),
                      (^($unsigned(reg67) ? wire0 : (~&wire3)))}};
            end
          for (forvar338 = (1'h0); (forvar338 < (3'h4)); forvar338 = (forvar338 + (1'h1)))
            begin
              reg339 = ($signed($unsigned(wire328[(2'h2):(1'h1)])) <<< wire328[(3'h4):(3'h4)]);
            end
          for (forvar340 = (1'h0); (forvar340 < (3'h4)); forvar340 = (forvar340 + (1'h1)))
            begin
              reg341 = (^~wire331[(1'h1):(1'h1)]);
              reg342 = ($signed($signed((reg78 ?
                  (8'h9c) : (reg336 != reg102)))) * (8'hb6));
            end
          for (forvar343 = (1'h0); (forvar343 < (1'h0)); forvar343 = (forvar343 + (1'h1)))
            begin
              reg344 = ($signed((~|$signed((wire0 ? wire58 : reg337)))) ?
                  {reg74} : (reg92 && wire2[(4'h9):(4'h8)]));
            end
        end
      for (forvar345 = (1'h0); (forvar345 < (2'h3)); forvar345 = (forvar345 + (1'h1)))
        begin
          for (forvar346 = (1'h0); (forvar346 < (2'h2)); forvar346 = (forvar346 + (1'h1)))
            begin
              reg347 <= ((reg81 ?
                      $unsigned($signed((reg61 != wire0))) : $signed($signed(reg99))) ?
                  reg75[(3'h5):(1'h1)] : ((|reg99[(2'h2):(1'h0)]) ?
                      $signed((|$unsigned(reg78))) : ($unsigned(reg334) ?
                          reg102 : ((wire3 >> (8'h9f)) <= $signed(reg61)))));
              reg348 <= (~|$unsigned($unsigned(wire4[(4'h9):(4'h8)])));
            end
          for (forvar349 = (1'h0); (forvar349 < (3'h4)); forvar349 = (forvar349 + (1'h1)))
            begin
              reg350 <= {reg348};
              reg351 <= forvar343[(4'hb):(1'h1)];
              reg352 <= reg110;
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module114  (y, clk, wire118, wire117, wire116, wire115);
  output wire [(32'h85):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire118;
  input wire [(5'h15):(1'h0)] wire117;
  input wire [(3'h6):(1'h0)] wire116;
  input wire signed [(5'h14):(1'h0)] wire115;
  wire [(3'h5):(1'h0)] wire324;
  wire [(4'h8):(1'h0)] wire170;
  wire [(4'h9):(1'h0)] wire168;
  wire signed [(5'h14):(1'h0)] wire147;
  wire signed [(4'hc):(1'h0)] wire146;
  wire signed [(4'h8):(1'h0)] wire145;
  wire [(4'h9):(1'h0)] wire144;
  wire [(5'h14):(1'h0)] wire143;
  wire [(5'h11):(1'h0)] wire141;
  wire [(4'he):(1'h0)] wire120;
  wire [(4'ha):(1'h0)] wire119;
  assign y = {wire324,
                 wire170,
                 wire168,
                 wire147,
                 wire146,
                 wire145,
                 wire144,
                 wire143,
                 wire141,
                 wire120,
                 wire119,
                 (1'h0)};
  assign wire119 = (wire115[(4'hc):(2'h3)] >>> wire115);
  assign wire120 = (wire116[(2'h2):(1'h1)] ?
                       wire119[(1'h1):(1'h1)] : {$unsigned($signed($unsigned(wire116))),
                           wire119});
  module121 #() modinst142 (wire141, clk, wire119, wire117, wire120, wire118);
  assign wire143 = $unsigned(wire115);
  assign wire144 = ((-wire141[(5'h10):(5'h10)]) ~^ $signed(($unsigned(((7'h42) ^~ wire141)) << wire143)));
  assign wire145 = $unsigned(wire119[(3'h5):(1'h0)]);
  assign wire146 = $unsigned($signed(((~(wire119 ? (7'h42) : wire143)) ?
                       $unsigned($signed((8'ha8))) : ((^~wire141) + {wire141}))));
  assign wire147 = $signed((((wire144 ?
                       wire117[(2'h3):(2'h2)] : (wire146 ?
                           wire117 : wire118)) >> $signed((wire144 ?
                       wire146 : wire145))) ~^ $unsigned((~&$unsigned((8'ha8))))));
  module148 #() modinst169 (.wire149(wire146), .y(wire168), .clk(clk), .wire151(wire144), .wire150(wire147), .wire152(wire141));
  assign wire170 = (|wire146);
  module171 #() modinst325 (wire324, clk, wire120, wire147, wire117, wire170);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param57 = (!(((((7'h43) < (8'hb3)) >> (~(8'ha9))) < (~|(8'hb6))) ^~ {((~(8'ha4)) > ((8'ha4) ? (8'hb4) : (8'ha8)))})))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h236):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h13):(1'h0)] wire10;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire signed [(4'hf):(1'h0)] wire8;
  input wire [(4'hd):(1'h0)] wire7;
  wire signed [(4'hf):(1'h0)] wire56;
  wire signed [(4'h9):(1'h0)] wire22;
  wire signed [(5'h10):(1'h0)] wire21;
  wire [(4'he):(1'h0)] wire20;
  wire [(2'h3):(1'h0)] wire19;
  wire signed [(4'he):(1'h0)] wire18;
  wire signed [(4'hc):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire16;
  wire signed [(5'h12):(1'h0)] wire15;
  wire signed [(4'hb):(1'h0)] wire14;
  wire [(3'h4):(1'h0)] wire13;
  wire signed [(4'h9):(1'h0)] wire12;
  wire [(2'h2):(1'h0)] wire11;
  reg signed [(5'h12):(1'h0)] reg55 = (1'h0);
  reg [(5'h11):(1'h0)] reg54 = (1'h0);
  reg [(2'h2):(1'h0)] reg52 = (1'h0);
  reg [(3'h4):(1'h0)] reg51 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg49 = (1'h0);
  reg [(5'h12):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg45 = (1'h0);
  reg [(5'h15):(1'h0)] reg34 = (1'h0);
  reg [(2'h2):(1'h0)] reg38 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg37 = (1'h0);
  reg [(3'h6):(1'h0)] reg33 = (1'h0);
  reg [(4'hb):(1'h0)] reg28 = (1'h0);
  reg [(4'hd):(1'h0)] reg27 = (1'h0);
  reg [(3'h6):(1'h0)] reg23 = (1'h0);
  reg [(4'hd):(1'h0)] reg53 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar50 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg48 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar44 = (1'h0);
  reg [(4'hc):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg42 = (1'h0);
  reg [(2'h2):(1'h0)] forvar41 = (1'h0);
  reg [(4'hf):(1'h0)] reg40 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg39 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar35 = (1'h0);
  reg [(5'h15):(1'h0)] forvar30 = (1'h0);
  reg [(2'h2):(1'h0)] reg29 = (1'h0);
  reg [(4'hb):(1'h0)] forvar27 = (1'h0);
  reg [(3'h7):(1'h0)] reg36 = (1'h0);
  reg [(5'h11):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar34 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg32 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg30 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar29 = (1'h0);
  reg [(5'h11):(1'h0)] reg26 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg25 = (1'h0);
  reg [(4'hf):(1'h0)] forvar24 = (1'h0);
  assign y = {wire56,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 reg55,
                 reg54,
                 reg52,
                 reg51,
                 reg49,
                 reg47,
                 reg46,
                 reg45,
                 reg34,
                 reg38,
                 reg37,
                 reg33,
                 reg28,
                 reg27,
                 reg23,
                 reg53,
                 forvar50,
                 reg48,
                 forvar44,
                 reg43,
                 reg42,
                 forvar41,
                 reg40,
                 reg39,
                 forvar35,
                 forvar30,
                 reg29,
                 forvar27,
                 reg36,
                 reg35,
                 forvar34,
                 reg32,
                 reg31,
                 reg30,
                 forvar29,
                 reg26,
                 reg25,
                 forvar24,
                 (1'h0)};
  assign wire11 = $signed($signed(wire9[(4'ha):(3'h4)]));
  assign wire12 = (&(wire10 ^ ((+(~wire9)) ~^ $unsigned(wire7))));
  assign wire13 = ((!wire10) <<< $unsigned(wire11[(1'h1):(1'h0)]));
  assign wire14 = $signed(((((wire11 ? wire8 : wire13) + $signed(wire11)) ?
                      (((7'h40) ?
                          wire12 : wire11) && (8'hb9)) : ((&(8'hae)) & {wire13,
                          wire11})) | (^~$unsigned($unsigned(wire10)))));
  assign wire15 = ((!($unsigned((!wire9)) ?
                      (wire10 ~^ (~^(8'hae))) : wire13)) > $signed(($unsigned({wire13}) ?
                      {(|wire13)} : $unsigned(wire11[(1'h1):(1'h1)]))));
  assign wire16 = (~wire13[(2'h2):(1'h1)]);
  assign wire17 = {(+$unsigned((^(~&wire8)))),
                      ((wire10 < (|wire15[(3'h5):(1'h0)])) >> $unsigned(wire7))};
  assign wire18 = wire13[(2'h2):(1'h0)];
  assign wire19 = (-(wire14[(1'h0):(1'h0)] >>> (!wire13)));
  assign wire20 = $unsigned(wire9[(1'h1):(1'h0)]);
  assign wire21 = ($unsigned((({wire17} ? wire17[(4'hb):(4'h8)] : {wire18}) ?
                      $unsigned(wire18[(2'h3):(2'h2)]) : (wire8[(4'h9):(3'h7)] ?
                          wire20 : (wire11 ^~ wire10)))) && (({(-(8'hba)),
                          $unsigned(wire14)} ?
                      wire11 : (~^wire10[(4'he):(4'ha)])) && $signed(((8'hb1) ?
                      wire15[(5'h11):(4'h9)] : $unsigned((8'hb4))))));
  assign wire22 = wire11[(1'h1):(1'h0)];
  always
    @(posedge clk) begin
      reg23 <= wire19;
      if (($signed(((|wire16) ?
              $unsigned($unsigned((8'hb8))) : (wire7 ^~ $unsigned(wire9)))) ?
          (!(wire13 < wire20)) : wire11[(1'h1):(1'h0)]))
        begin
          for (forvar24 = (1'h0); (forvar24 < (1'h1)); forvar24 = (forvar24 + (1'h1)))
            begin
              reg25 = $signed(wire20[(4'hc):(1'h1)]);
              reg26 = reg25[(3'h5):(3'h4)];
              reg27 <= {($signed(forvar24) ?
                      ({(!wire10), wire22[(1'h0):(1'h0)]} ?
                          (-(|wire10)) : {$unsigned((8'h9f)),
                              wire21[(4'hb):(3'h4)]}) : wire13),
                  $signed($unsigned($signed($unsigned(reg23))))};
              reg28 <= reg25;
            end
          for (forvar29 = (1'h0); (forvar29 < (1'h0)); forvar29 = (forvar29 + (1'h1)))
            begin
              reg30 = $unsigned((reg27 ?
                  $unsigned(reg23) : forvar29[(4'hf):(2'h3)]));
              reg31 = (~&wire12[(1'h0):(1'h0)]);
              reg32 = (~^(($signed(wire11[(1'h1):(1'h0)]) ?
                      (8'hb1) : ((~|wire12) <<< (8'hab))) ?
                  $unsigned((((8'h9d) ? wire14 : wire13) ?
                      $signed((8'haf)) : $signed(wire20))) : ($signed({reg31}) | (((8'ha1) <= reg27) ?
                      (wire15 ? (8'ha4) : reg27) : (reg26 && reg30)))));
              reg33 <= $unsigned((forvar29[(5'h13):(5'h10)] + reg23[(2'h3):(1'h0)]));
            end
          for (forvar34 = (1'h0); (forvar34 < (3'h4)); forvar34 = (forvar34 + (1'h1)))
            begin
              reg35 = (reg27 ?
                  $signed((wire22 ?
                      ({wire12} ?
                          (-wire14) : (wire15 ?
                              wire9 : wire12)) : wire22[(3'h4):(2'h2)])) : $unsigned(forvar34));
              reg36 = reg35;
              reg37 <= (-(wire9 || wire8));
              reg38 <= ({$signed(($unsigned(forvar24) & (reg27 ?
                      reg36 : wire19)))} > (wire17[(4'hb):(3'h6)] ?
                  wire16[(2'h2):(1'h0)] : (wire11 != ((8'hb8) >= {(8'hac)}))));
            end
        end
      else
        begin
          for (forvar24 = (1'h0); (forvar24 < (2'h3)); forvar24 = (forvar24 + (1'h1)))
            begin
              reg25 = reg33;
              reg26 = $unsigned((reg28 ?
                  ({$signed(wire11)} <= ((reg33 <= wire16) != reg38)) : forvar24));
            end
          for (forvar27 = (1'h0); (forvar27 < (3'h4)); forvar27 = (forvar27 + (1'h1)))
            begin
              reg28 <= wire22[(4'h9):(2'h2)];
            end
          reg29 = (8'h9d);
          for (forvar30 = (1'h0); (forvar30 < (2'h3)); forvar30 = (forvar30 + (1'h1)))
            begin
              reg31 = (+(!(-$signed((&forvar34)))));
              reg32 = {reg36};
              reg33 <= $unsigned($unsigned((~|wire8[(4'hd):(4'ha)])));
              reg34 <= $signed({reg23[(2'h3):(1'h1)]});
            end
          for (forvar35 = (1'h0); (forvar35 < (3'h4)); forvar35 = (forvar35 + (1'h1)))
            begin
              reg37 <= reg35;
              reg38 <= (($signed((((7'h41) <<< wire15) < (forvar34 | reg32))) ?
                      $unsigned(((forvar24 & reg31) ?
                          (reg35 && wire8) : (-wire15))) : (((-wire14) ?
                              (^forvar30) : (wire11 + wire14)) ?
                          $signed(wire10[(4'ha):(3'h6)]) : $unsigned((reg34 ?
                              (8'hbb) : reg30)))) ?
                  (forvar34 & (|{(~^forvar34),
                      wire18[(3'h4):(3'h4)]})) : (($signed(((8'hbb) && (8'hbe))) >> $signed((+(8'haa)))) ?
                      (8'ha8) : (^(~^(reg26 ? wire22 : reg29)))));
              reg39 = wire10;
            end
        end
      reg40 = ({$signed(($unsigned((7'h42)) ?
              reg38 : reg26))} <= ($unsigned(({wire22,
              reg33} == $unsigned(wire19))) ?
          $signed($signed($unsigned((8'h9c)))) : ((((8'hb2) ?
                      forvar27 : reg38) ?
                  (wire13 && forvar30) : forvar34[(3'h6):(3'h4)]) ?
              forvar34 : (8'had))));
      for (forvar41 = (1'h0); (forvar41 < (1'h0)); forvar41 = (forvar41 + (1'h1)))
        begin
          reg42 = (wire9 ?
              ((reg23 ? $unsigned(reg30[(3'h5):(1'h1)]) : $unsigned(reg38)) ?
                  $signed($unsigned(forvar35)) : ((~$signed(wire13)) * $unsigned((reg30 ?
                      reg30 : (8'hae))))) : $signed({$signed(forvar27[(2'h3):(2'h3)])}));
          reg43 = $unsigned($unsigned((reg37[(1'h1):(1'h0)] ?
              $signed((&wire12)) : ((reg39 && reg25) + ((7'h42) ^ reg37)))));
          for (forvar44 = (1'h0); (forvar44 < (3'h4)); forvar44 = (forvar44 + (1'h1)))
            begin
              reg45 <= $signed({(reg43[(4'h8):(1'h0)] ?
                      ((!wire10) ? $signed((8'h9c)) : reg25) : ((forvar24 ?
                              reg40 : wire18) ?
                          $signed(wire8) : $signed(wire15))),
                  ({$signed(reg34), {wire11}} | ($signed(wire17) ?
                      $signed(reg27) : (reg34 & reg25)))});
            end
          if (reg36)
            begin
              reg46 <= reg30[(2'h3):(1'h0)];
              reg47 <= $unsigned({(($signed(forvar29) >= reg45) ?
                      ($signed(reg32) ?
                          (^~reg29) : {forvar34}) : (wire21[(4'h8):(3'h5)] > (wire8 ?
                          reg31 : wire17))),
                  (((-wire9) >> wire14[(1'h0):(1'h0)]) | $signed($signed((8'ha7))))});
              reg48 = ((&(!$unsigned(((8'had) ? forvar44 : wire19)))) ?
                  $unsigned((&$signed(wire8[(4'hf):(4'ha)]))) : (+reg28));
              reg49 <= reg47[(4'hf):(3'h7)];
            end
          else
            begin
              reg46 <= ($signed(((~forvar30) ?
                      $unsigned(forvar27) : wire21[(4'hc):(3'h5)])) ?
                  $signed(reg29[(1'h1):(1'h0)]) : wire14[(3'h5):(3'h5)]);
              reg47 <= (~|$unsigned($unsigned(reg33[(2'h3):(2'h3)])));
            end
          for (forvar50 = (1'h0); (forvar50 < (1'h1)); forvar50 = (forvar50 + (1'h1)))
            begin
              reg51 <= (~$signed($unsigned(((wire7 < forvar44) ?
                  {forvar27, wire20} : $unsigned((7'h42))))));
              reg52 <= ($signed($signed($signed($signed(wire19)))) ^ reg49);
              reg53 = wire21[(4'h8):(3'h6)];
              reg54 <= {$signed((|(^~(reg51 ? reg49 : (8'ha7)))))};
              reg55 <= (~reg36);
            end
        end
    end
  assign wire56 = ((|reg55) ^ reg27);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module171
#(parameter param323 = {(({((8'ha1) ^~ (8'ha2)), (~^(8'haf))} >> ((~(8'hbb)) & (8'had))) ? (~^(((8'h9d) ? (8'hb7) : (8'ha9)) ? ((7'h42) ? (8'ha7) : (8'hab)) : ((8'hb9) < (8'ha7)))) : {((!(8'hac)) <<< {(8'hb4)})}), (^~(!{(|(8'hb2))}))})
(y, clk, wire175, wire174, wire173, wire172);
  output wire [(32'h6e3):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire175;
  input wire signed [(5'h14):(1'h0)] wire174;
  input wire signed [(4'hd):(1'h0)] wire173;
  input wire [(4'h8):(1'h0)] wire172;
  wire signed [(3'h5):(1'h0)] wire322;
  wire [(5'h11):(1'h0)] wire321;
  wire signed [(4'h9):(1'h0)] wire320;
  wire [(3'h6):(1'h0)] wire284;
  wire signed [(2'h2):(1'h0)] wire258;
  wire signed [(4'h9):(1'h0)] wire250;
  wire signed [(5'h13):(1'h0)] wire249;
  wire [(4'h8):(1'h0)] wire248;
  reg signed [(2'h3):(1'h0)] reg319 = (1'h0);
  reg [(5'h13):(1'h0)] reg317 = (1'h0);
  reg [(4'hd):(1'h0)] reg315 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg311 = (1'h0);
  reg signed [(4'he):(1'h0)] reg308 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg305 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg302 = (1'h0);
  reg [(5'h14):(1'h0)] reg299 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg297 = (1'h0);
  reg [(5'h11):(1'h0)] reg292 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg291 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg289 = (1'h0);
  reg [(4'hd):(1'h0)] reg287 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg282 = (1'h0);
  reg [(2'h2):(1'h0)] reg281 = (1'h0);
  reg [(2'h3):(1'h0)] reg278 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg277 = (1'h0);
  reg [(4'ha):(1'h0)] reg272 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg271 = (1'h0);
  reg [(4'he):(1'h0)] reg270 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg269 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg267 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg266 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg264 = (1'h0);
  reg [(4'hd):(1'h0)] reg263 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg260 = (1'h0);
  reg [(4'he):(1'h0)] reg259 = (1'h0);
  reg [(4'ha):(1'h0)] reg257 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg256 = (1'h0);
  reg [(4'he):(1'h0)] reg255 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg254 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg253 = (1'h0);
  reg [(4'hf):(1'h0)] reg246 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg244 = (1'h0);
  reg [(2'h2):(1'h0)] reg242 = (1'h0);
  reg [(4'ha):(1'h0)] reg237 = (1'h0);
  reg [(5'h14):(1'h0)] reg236 = (1'h0);
  reg [(4'h8):(1'h0)] reg233 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg231 = (1'h0);
  reg [(4'he):(1'h0)] reg230 = (1'h0);
  reg [(4'hc):(1'h0)] reg227 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg226 = (1'h0);
  reg [(3'h7):(1'h0)] reg224 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg223 = (1'h0);
  reg [(4'h8):(1'h0)] reg219 = (1'h0);
  reg [(3'h7):(1'h0)] reg218 = (1'h0);
  reg [(2'h2):(1'h0)] reg214 = (1'h0);
  reg [(5'h10):(1'h0)] reg212 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg205 = (1'h0);
  reg [(4'ha):(1'h0)] reg203 = (1'h0);
  reg [(3'h4):(1'h0)] reg199 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg198 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg197 = (1'h0);
  reg [(5'h14):(1'h0)] reg194 = (1'h0);
  reg [(5'h12):(1'h0)] reg189 = (1'h0);
  reg [(4'hb):(1'h0)] reg187 = (1'h0);
  reg [(4'ha):(1'h0)] reg186 = (1'h0);
  reg [(4'he):(1'h0)] reg177 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg185 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg182 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg180 = (1'h0);
  reg [(5'h14):(1'h0)] reg178 = (1'h0);
  reg [(5'h13):(1'h0)] forvar318 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg316 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg314 = (1'h0);
  reg [(4'he):(1'h0)] reg313 = (1'h0);
  reg [(4'h8):(1'h0)] reg312 = (1'h0);
  reg [(5'h12):(1'h0)] reg310 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar309 = (1'h0);
  reg [(5'h14):(1'h0)] reg307 = (1'h0);
  reg [(5'h12):(1'h0)] reg306 = (1'h0);
  reg [(4'he):(1'h0)] forvar304 = (1'h0);
  reg [(5'h10):(1'h0)] forvar303 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar301 = (1'h0);
  reg [(5'h15):(1'h0)] reg300 = (1'h0);
  reg [(4'hf):(1'h0)] reg298 = (1'h0);
  reg [(4'hc):(1'h0)] reg296 = (1'h0);
  reg [(3'h6):(1'h0)] reg295 = (1'h0);
  reg [(5'h13):(1'h0)] forvar294 = (1'h0);
  reg [(4'hc):(1'h0)] forvar293 = (1'h0);
  reg [(4'hc):(1'h0)] reg290 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar288 = (1'h0);
  reg [(5'h10):(1'h0)] forvar286 = (1'h0);
  reg [(4'hf):(1'h0)] forvar285 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg283 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar280 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg279 = (1'h0);
  reg [(4'hc):(1'h0)] reg276 = (1'h0);
  reg [(3'h7):(1'h0)] reg275 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar274 = (1'h0);
  reg [(2'h3):(1'h0)] reg273 = (1'h0);
  reg [(3'h5):(1'h0)] forvar268 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg265 = (1'h0);
  reg [(5'h15):(1'h0)] forvar262 = (1'h0);
  reg [(5'h12):(1'h0)] forvar261 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar252 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar251 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg247 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg245 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar243 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg241 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar240 = (1'h0);
  reg [(3'h4):(1'h0)] reg239 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg238 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg235 = (1'h0);
  reg [(3'h5):(1'h0)] forvar234 = (1'h0);
  reg [(4'h9):(1'h0)] reg232 = (1'h0);
  reg [(5'h10):(1'h0)] forvar229 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar228 = (1'h0);
  reg [(4'h9):(1'h0)] forvar225 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg222 = (1'h0);
  reg [(3'h5):(1'h0)] reg221 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar220 = (1'h0);
  reg [(4'hf):(1'h0)] reg217 = (1'h0);
  reg [(5'h15):(1'h0)] reg216 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg215 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar213 = (1'h0);
  reg [(4'he):(1'h0)] forvar211 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg210 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg209 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar208 = (1'h0);
  reg [(5'h10):(1'h0)] forvar207 = (1'h0);
  reg [(3'h7):(1'h0)] reg206 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg204 = (1'h0);
  reg [(3'h4):(1'h0)] reg202 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar201 = (1'h0);
  reg [(4'hc):(1'h0)] reg200 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg196 = (1'h0);
  reg [(3'h6):(1'h0)] forvar195 = (1'h0);
  reg [(5'h15):(1'h0)] forvar193 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg192 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar191 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar190 = (1'h0);
  reg [(4'hb):(1'h0)] reg188 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar182 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg181 = (1'h0);
  reg [(5'h14):(1'h0)] forvar176 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg184 = (1'h0);
  reg [(3'h7):(1'h0)] reg183 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar181 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg179 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar177 = (1'h0);
  reg [(3'h4):(1'h0)] reg176 = (1'h0);
  assign y = {wire322,
                 wire321,
                 wire320,
                 wire284,
                 wire258,
                 wire250,
                 wire249,
                 wire248,
                 reg319,
                 reg317,
                 reg315,
                 reg311,
                 reg308,
                 reg305,
                 reg302,
                 reg299,
                 reg297,
                 reg292,
                 reg291,
                 reg289,
                 reg287,
                 reg282,
                 reg281,
                 reg278,
                 reg277,
                 reg272,
                 reg271,
                 reg270,
                 reg269,
                 reg267,
                 reg266,
                 reg264,
                 reg263,
                 reg260,
                 reg259,
                 reg257,
                 reg256,
                 reg255,
                 reg254,
                 reg253,
                 reg246,
                 reg244,
                 reg242,
                 reg237,
                 reg236,
                 reg233,
                 reg231,
                 reg230,
                 reg227,
                 reg226,
                 reg224,
                 reg223,
                 reg219,
                 reg218,
                 reg214,
                 reg212,
                 reg205,
                 reg203,
                 reg199,
                 reg198,
                 reg197,
                 reg194,
                 reg189,
                 reg187,
                 reg186,
                 reg177,
                 reg185,
                 reg182,
                 reg180,
                 reg178,
                 forvar318,
                 reg316,
                 reg314,
                 reg313,
                 reg312,
                 reg310,
                 forvar309,
                 reg307,
                 reg306,
                 forvar304,
                 forvar303,
                 forvar301,
                 reg300,
                 reg298,
                 reg296,
                 reg295,
                 forvar294,
                 forvar293,
                 reg290,
                 forvar288,
                 forvar286,
                 forvar285,
                 reg283,
                 forvar280,
                 reg279,
                 reg276,
                 reg275,
                 forvar274,
                 reg273,
                 forvar268,
                 reg265,
                 forvar262,
                 forvar261,
                 forvar252,
                 forvar251,
                 reg247,
                 reg245,
                 forvar243,
                 reg241,
                 forvar240,
                 reg239,
                 reg238,
                 reg235,
                 forvar234,
                 reg232,
                 forvar229,
                 forvar228,
                 forvar225,
                 reg222,
                 reg221,
                 forvar220,
                 reg217,
                 reg216,
                 reg215,
                 forvar213,
                 forvar211,
                 reg210,
                 reg209,
                 forvar208,
                 forvar207,
                 reg206,
                 reg204,
                 reg202,
                 forvar201,
                 reg200,
                 reg196,
                 forvar195,
                 forvar193,
                 reg192,
                 forvar191,
                 forvar190,
                 reg188,
                 forvar182,
                 reg181,
                 forvar176,
                 reg184,
                 reg183,
                 forvar181,
                 reg179,
                 forvar177,
                 reg176,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($signed(wire172))
        begin
          reg176 = ((~&{wire174, wire172[(1'h0):(1'h0)]}) ?
              $signed((($unsigned(wire175) - wire172[(1'h1):(1'h0)]) > $unsigned(wire172))) : wire173);
          for (forvar177 = (1'h0); (forvar177 < (3'h4)); forvar177 = (forvar177 + (1'h1)))
            begin
              reg178 <= $signed({(($unsigned(wire172) || ((8'hbf) ?
                      wire175 : wire175)) ^ ($unsigned(forvar177) - (+wire175)))});
              reg179 = wire173[(3'h6):(2'h2)];
              reg180 <= (wire175 >> $unsigned(reg176[(1'h0):(1'h0)]));
            end
          for (forvar181 = (1'h0); (forvar181 < (1'h0)); forvar181 = (forvar181 + (1'h1)))
            begin
              reg182 <= (reg176[(3'h4):(2'h3)] ?
                  ((&($unsigned(forvar177) ?
                          $unsigned(reg180) : (reg179 - reg179))) ?
                      forvar177[(3'h4):(3'h4)] : wire173[(3'h4):(2'h3)]) : ($unsigned(reg176[(3'h4):(2'h3)]) >= $unsigned(reg178[(4'hc):(4'hc)])));
              reg183 = (^(~&($signed($signed(wire175)) << wire172)));
            end
          reg184 = ((8'hb6) >> (^~reg183));
          reg185 <= (wire172 >= ((wire172 - wire174) ~^ $unsigned((&(|reg178)))));
        end
      else
        begin
          for (forvar176 = (1'h0); (forvar176 < (2'h2)); forvar176 = (forvar176 + (1'h1)))
            begin
              reg177 <= $signed((((8'ha2) ?
                      {reg184, reg184} : $signed($signed(reg183))) ?
                  (^~(forvar176[(3'h4):(3'h4)] < $unsigned(reg179))) : (reg183[(2'h2):(1'h0)] - (~&(forvar181 ?
                      reg180 : reg180)))));
              reg179 = $signed(wire175);
              reg180 <= wire175[(1'h1):(1'h1)];
              reg181 = (($signed(reg176[(1'h0):(1'h0)]) ?
                      ((|reg178) ?
                          $unsigned(((8'hbf) ?
                              reg176 : forvar181)) : reg180[(1'h1):(1'h1)]) : ($signed({wire175}) ?
                          $unsigned(reg185) : (8'hab))) ?
                  {wire175} : $unsigned({wire172[(3'h6):(3'h5)]}));
            end
          for (forvar182 = (1'h0); (forvar182 < (2'h3)); forvar182 = (forvar182 + (1'h1)))
            begin
              reg185 <= (-reg185);
              reg186 <= {$unsigned((((~wire175) * (8'h9e)) >>> (~&((8'ha3) ?
                      reg179 : forvar176)))),
                  $signed((&wire172[(3'h4):(2'h3)]))};
              reg187 <= ($unsigned(wire173[(4'h8):(2'h3)]) ?
                  $signed(wire172) : $signed((~|$unsigned($unsigned((7'h41))))));
              reg188 = ($signed(wire172[(1'h0):(1'h0)]) ?
                  $signed(wire175[(3'h4):(1'h1)]) : ($signed(($unsigned(forvar176) ?
                          (reg176 <= wire174) : (forvar182 ?
                              wire172 : (8'hb7)))) ?
                      ((wire175 ? reg176 : (forvar176 ? wire173 : forvar176)) ?
                          {forvar177[(3'h4):(1'h1)]} : ((-reg184) + {(8'h9d)})) : reg187[(2'h3):(1'h1)]));
              reg189 <= reg178[(3'h4):(2'h2)];
            end
        end
      for (forvar190 = (1'h0); (forvar190 < (1'h0)); forvar190 = (forvar190 + (1'h1)))
        begin
          for (forvar191 = (1'h0); (forvar191 < (2'h2)); forvar191 = (forvar191 + (1'h1)))
            begin
              reg192 = $unsigned($unsigned($signed(reg188[(2'h3):(2'h3)])));
            end
          for (forvar193 = (1'h0); (forvar193 < (1'h1)); forvar193 = (forvar193 + (1'h1)))
            begin
              reg194 <= $signed($unsigned(reg178));
            end
          for (forvar195 = (1'h0); (forvar195 < (3'h4)); forvar195 = (forvar195 + (1'h1)))
            begin
              reg196 = {reg187, reg188};
              reg197 <= $unsigned($signed(reg184[(3'h5):(1'h0)]));
              reg198 <= (reg176[(1'h1):(1'h1)] ?
                  (reg187 == reg197[(5'h10):(4'hb)]) : reg192);
              reg199 <= ((^($signed((7'h41)) ?
                  ({reg185} ?
                      forvar182 : (^~reg187)) : forvar191[(2'h3):(1'h1)])) + forvar176[(4'h9):(2'h3)]);
              reg200 = $signed({{{(8'hbb), (8'hb1)},
                      ((reg192 ? reg179 : forvar195) ?
                          $signed(reg187) : (^(8'ha6)))}});
            end
          for (forvar201 = (1'h0); (forvar201 < (2'h3)); forvar201 = (forvar201 + (1'h1)))
            begin
              reg202 = $signed(reg180);
              reg203 <= reg181[(4'hc):(2'h2)];
              reg204 = (|$unsigned(($unsigned($unsigned(reg200)) ?
                  ((reg192 & forvar177) || reg182) : reg180)));
              reg205 <= $unsigned(((~&(reg203[(4'ha):(3'h6)] >> reg197)) ?
                  (~|(reg182[(4'hb):(4'h9)] != reg182[(3'h4):(2'h3)])) : forvar177));
            end
          reg206 = ($signed(($signed($signed(wire172)) ?
              reg183 : reg200[(3'h4):(3'h4)])) >= reg184[(1'h0):(1'h0)]);
        end
      for (forvar207 = (1'h0); (forvar207 < (3'h4)); forvar207 = (forvar207 + (1'h1)))
        begin
          for (forvar208 = (1'h0); (forvar208 < (3'h4)); forvar208 = (forvar208 + (1'h1)))
            begin
              reg209 = (-forvar176);
              reg210 = ((($unsigned($signed(forvar208)) ?
                      ($signed(forvar193) ?
                          forvar190[(2'h2):(1'h1)] : (reg200 + reg199)) : ((reg204 ?
                          reg186 : (8'ha3)) | $unsigned(reg197))) << reg197[(1'h1):(1'h0)]) ?
                  reg194 : ({reg197[(4'hc):(4'h8)],
                          {forvar190[(4'h8):(1'h1)], ((8'hab) > reg197)}} ?
                      $signed(reg192[(4'hb):(4'h8)]) : reg177));
            end
        end
      for (forvar211 = (1'h0); (forvar211 < (2'h3)); forvar211 = (forvar211 + (1'h1)))
        begin
          reg212 <= (forvar195 ?
              reg210[(4'hb):(2'h3)] : $unsigned((^(forvar191 < reg192[(2'h2):(1'h0)]))));
          for (forvar213 = (1'h0); (forvar213 < (3'h4)); forvar213 = (forvar213 + (1'h1)))
            begin
              reg214 <= $unsigned((($signed((forvar190 >> reg203)) ?
                      (8'hae) : ((reg200 ? reg203 : reg197) <= reg196)) ?
                  (($unsigned(reg182) <<< reg182) - (+reg178[(4'hb):(2'h3)])) : $signed(forvar191)));
              reg215 = wire173[(3'h7):(2'h3)];
              reg216 = ((8'hab) >= $unsigned(reg196[(4'hb):(4'ha)]));
              reg217 = $signed($unsigned(reg196));
              reg218 <= (forvar207[(4'hd):(3'h4)] ? forvar195 : (8'hb8));
            end
          reg219 <= reg186;
          for (forvar220 = (1'h0); (forvar220 < (2'h2)); forvar220 = (forvar220 + (1'h1)))
            begin
              reg221 = $signed((+reg198[(4'hf):(1'h1)]));
              reg222 = (^~(~|(($signed(reg203) ?
                      (reg212 ? reg221 : forvar177) : ((8'h9e) > reg180)) ?
                  ((|forvar191) ~^ {(8'hb3),
                      forvar182}) : {forvar201[(4'h9):(1'h1)]})));
              reg223 <= (((((forvar176 ^~ reg178) ?
                  forvar220 : (|reg205)) + reg202) < reg197[(4'ha):(1'h0)]) && reg214);
              reg224 <= reg205[(3'h6):(2'h2)];
            end
          for (forvar225 = (1'h0); (forvar225 < (1'h0)); forvar225 = (forvar225 + (1'h1)))
            begin
              reg226 <= (&(($unsigned($unsigned(forvar176)) <<< wire174[(4'hf):(3'h5)]) ^ $unsigned($unsigned($signed((8'ha9))))));
              reg227 <= (~&({$unsigned($signed(reg180))} + (reg202 >>> (8'ha9))));
            end
        end
      for (forvar228 = (1'h0); (forvar228 < (2'h2)); forvar228 = (forvar228 + (1'h1)))
        begin
          for (forvar229 = (1'h0); (forvar229 < (2'h3)); forvar229 = (forvar229 + (1'h1)))
            begin
              reg230 <= (reg223[(2'h2):(1'h0)] ?
                  $unsigned(reg212) : $signed((forvar220[(2'h3):(1'h1)] ?
                      $signed((reg200 && forvar228)) : (reg218 ?
                          ((8'hb7) ? reg218 : reg216) : (^reg180)))));
              reg231 <= ({$unsigned(forvar207)} == ($unsigned($unsigned($unsigned(forvar220))) ?
                  $signed($unsigned((|reg218))) : reg199));
              reg232 = (forvar177 > $signed($signed($unsigned($signed(reg185)))));
            end
          reg233 <= (+$signed(reg188));
          for (forvar234 = (1'h0); (forvar234 < (2'h2)); forvar234 = (forvar234 + (1'h1)))
            begin
              reg235 = forvar207;
              reg236 <= reg210;
              reg237 <= {(7'h41)};
              reg238 = ($signed({wire175[(2'h3):(1'h1)]}) + $unsigned(((&(reg214 ?
                      (8'hae) : reg197)) ?
                  $signed($unsigned((7'h43))) : reg236)));
              reg239 = ($unsigned((reg192[(4'hc):(3'h7)] ?
                  $unsigned(reg212) : $unsigned(reg204))) | (-(&{(~&forvar208),
                  $signed(forvar220)})));
            end
          for (forvar240 = (1'h0); (forvar240 < (2'h3)); forvar240 = (forvar240 + (1'h1)))
            begin
              reg241 = $unsigned({reg183});
              reg242 <= $signed((wire174 <= wire172[(1'h1):(1'h0)]));
            end
          for (forvar243 = (1'h0); (forvar243 < (1'h1)); forvar243 = (forvar243 + (1'h1)))
            begin
              reg244 <= reg202[(3'h4):(2'h2)];
              reg245 = forvar190;
              reg246 <= $unsigned((^~((|$signed(reg187)) || $unsigned((!reg176)))));
              reg247 = forvar181;
            end
        end
    end
  assign wire248 = {reg218[(1'h1):(1'h0)]};
  assign wire249 = $unsigned($unsigned((+reg205[(3'h7):(1'h1)])));
  assign wire250 = reg180;
  always
    @(posedge clk) begin
      for (forvar251 = (1'h0); (forvar251 < (1'h1)); forvar251 = (forvar251 + (1'h1)))
        begin
          for (forvar252 = (1'h0); (forvar252 < (2'h3)); forvar252 = (forvar252 + (1'h1)))
            begin
              reg253 <= {{(+$unsigned($unsigned(reg242))), (8'hab)}};
              reg254 <= (((($signed(reg244) ?
                      (reg230 || forvar251) : (wire250 + (8'ha2))) ?
                  $signed((reg242 ?
                      reg224 : reg186)) : reg205[(1'h1):(1'h0)]) ^~ reg197[(4'hf):(4'h9)]) + reg231);
              reg255 <= (+$signed(({reg185[(2'h2):(2'h2)]} ?
                  $signed((8'hbb)) : $unsigned({wire250}))));
              reg256 <= reg205[(3'h4):(2'h3)];
            end
          reg257 <= reg253[(2'h2):(1'h1)];
        end
    end
  assign wire258 = reg246;
  always
    @(posedge clk) begin
      reg259 <= $unsigned($signed($unsigned($signed($signed(reg198)))));
      reg260 <= {$signed({$signed($unsigned(reg253)),
              (reg231 ? (8'hbd) : $unsigned((8'hb0)))})};
      for (forvar261 = (1'h0); (forvar261 < (1'h1)); forvar261 = (forvar261 + (1'h1)))
        begin
          for (forvar262 = (1'h0); (forvar262 < (1'h1)); forvar262 = (forvar262 + (1'h1)))
            begin
              reg263 <= (reg242 >>> (reg259 + (reg230 ?
                  (!$unsigned(reg259)) : $signed((reg189 ?
                      reg203 : wire174)))));
              reg264 <= (reg219[(3'h7):(2'h3)] || $signed($unsigned(reg256)));
              reg265 = (^reg253[(1'h1):(1'h0)]);
              reg266 <= {reg194,
                  ((wire173 ^~ (~(reg197 <<< wire250))) >> (&$signed($signed(reg253))))};
              reg267 <= $signed((reg199[(2'h2):(1'h1)] ?
                  (($unsigned(reg199) <= wire173[(3'h6):(1'h0)]) ?
                      reg194[(5'h14):(4'hb)] : ($signed(reg224) & reg231)) : (($unsigned((8'hac)) ?
                      reg230[(4'hc):(3'h4)] : (reg255 | reg219)) - {$signed(reg230)})));
            end
          for (forvar268 = (1'h0); (forvar268 < (1'h0)); forvar268 = (forvar268 + (1'h1)))
            begin
              reg269 <= ($unsigned((~|wire258)) < (^reg223[(4'h9):(3'h4)]));
              reg270 <= $unsigned($signed({$signed(reg269),
                  ($signed((8'ha0)) ?
                      (reg212 ? reg177 : reg233) : (reg233 ^~ reg260))}));
              reg271 <= (reg254[(3'h5):(1'h1)] * $signed((~|reg205)));
              reg272 <= ($unsigned(((((8'hbe) ?
                      (8'hbe) : reg230) + $unsigned(reg256)) ?
                  reg267 : $signed((forvar261 ?
                      reg185 : reg269)))) || ($signed((&reg263)) > $signed((reg203 ?
                  (forvar268 ? reg203 : reg267) : $signed(reg199)))));
              reg273 = reg263;
            end
          for (forvar274 = (1'h0); (forvar274 < (3'h4)); forvar274 = (forvar274 + (1'h1)))
            begin
              reg275 = {(^~(8'hbe)), reg205[(4'hd):(4'hd)]};
              reg276 = ($signed(reg244[(1'h1):(1'h0)]) ^~ (!(-$unsigned((reg259 ?
                  reg212 : (8'haa))))));
              reg277 <= (|$unsigned($unsigned($signed(reg269))));
              reg278 <= (((~((~reg212) && reg224[(3'h5):(3'h4)])) ?
                  $signed(reg269[(5'h14):(3'h7)]) : (-(-reg186[(4'h9):(4'h9)]))) * {reg182[(2'h2):(1'h1)]});
              reg279 = (wire173[(4'hc):(4'h9)] ~^ $signed(((reg278[(2'h3):(2'h3)] ?
                  (&wire174) : ((7'h41) ~^ reg269)) << reg230)));
            end
          for (forvar280 = (1'h0); (forvar280 < (1'h0)); forvar280 = (forvar280 + (1'h1)))
            begin
              reg281 <= (reg271[(3'h7):(2'h3)] ?
                  $unsigned((&(~&$unsigned(wire172)))) : (~((wire175[(2'h3):(1'h0)] - $signed(reg266)) ?
                      (!(reg255 + reg264)) : $signed($unsigned((7'h42))))));
              reg282 <= $unsigned((8'h9f));
            end
          reg283 = reg267[(1'h1):(1'h1)];
        end
    end
  assign wire284 = reg227;
  always
    @(posedge clk) begin
      for (forvar285 = (1'h0); (forvar285 < (3'h4)); forvar285 = (forvar285 + (1'h1)))
        begin
          for (forvar286 = (1'h0); (forvar286 < (1'h0)); forvar286 = (forvar286 + (1'h1)))
            begin
              reg287 <= $unsigned(wire172[(1'h0):(1'h0)]);
            end
          for (forvar288 = (1'h0); (forvar288 < (3'h4)); forvar288 = (forvar288 + (1'h1)))
            begin
              reg289 <= {(reg282 >>> reg269[(1'h1):(1'h1)]),
                  $signed($signed((~^wire248[(2'h3):(2'h2)])))};
              reg290 = {($unsigned(({reg205} << (reg182 || reg205))) + $unsigned(wire284[(2'h3):(1'h1)])),
                  ($signed(reg277) ?
                      (~|(reg231[(4'h8):(3'h6)] ?
                          ((8'hba) && reg246) : reg186)) : reg259[(3'h4):(1'h0)])};
              reg291 <= (^~(&$unsigned(((8'ha1) ?
                  (reg263 ? reg270 : reg233) : reg271))));
              reg292 <= (~^reg233[(2'h2):(1'h0)]);
            end
        end
      for (forvar293 = (1'h0); (forvar293 < (1'h1)); forvar293 = (forvar293 + (1'h1)))
        begin
          for (forvar294 = (1'h0); (forvar294 < (1'h1)); forvar294 = (forvar294 + (1'h1)))
            begin
              reg295 = (8'hb1);
              reg296 = ({$signed((wire248[(1'h1):(1'h0)] == ((8'hae) > (8'ha6))))} ?
                  reg230 : ({(^wire175)} - ($signed({(8'hb6)}) || {(8'ha7)})));
              reg297 <= $signed((-(!$unsigned($signed(reg189)))));
              reg298 = (~$signed(reg226));
              reg299 <= (^(8'hb4));
            end
          reg300 = (&($signed($unsigned(reg277[(2'h2):(2'h2)])) ?
              (!(reg233[(3'h5):(3'h4)] & reg227[(1'h0):(1'h0)])) : reg244));
          for (forvar301 = (1'h0); (forvar301 < (1'h1)); forvar301 = (forvar301 + (1'h1)))
            begin
              reg302 <= reg187;
            end
        end
      for (forvar303 = (1'h0); (forvar303 < (2'h2)); forvar303 = (forvar303 + (1'h1)))
        begin
          for (forvar304 = (1'h0); (forvar304 < (2'h3)); forvar304 = (forvar304 + (1'h1)))
            begin
              reg305 <= $signed(reg259[(3'h4):(2'h3)]);
              reg306 = ($unsigned(((!(^~reg224)) ?
                  {{reg199, reg281}} : {$signed(reg223),
                      (+reg178)})) < wire284[(2'h3):(2'h3)]);
              reg307 = $unsigned(($unsigned(((forvar288 || reg199) ?
                      (reg266 ^ reg197) : reg186[(4'h8):(4'h8)])) ?
                  reg272 : reg236[(4'ha):(2'h2)]));
              reg308 <= $signed(forvar294[(3'h4):(2'h2)]);
            end
          for (forvar309 = (1'h0); (forvar309 < (3'h4)); forvar309 = (forvar309 + (1'h1)))
            begin
              reg310 = ((!$unsigned((|(&wire174)))) && reg194);
              reg311 <= ($unsigned((8'ha1)) ?
                  $signed(($unsigned(reg253[(2'h2):(2'h2)]) ?
                      $unsigned(reg218) : reg254)) : ((~^$unsigned((reg227 <= reg244))) ?
                      (reg256 ?
                          {(^reg214),
                              reg281} : reg267[(2'h2):(1'h0)]) : (~^(8'hb8))));
              reg312 = reg305;
              reg313 = (reg290[(4'h9):(3'h6)] ?
                  $signed(((wire284[(2'h2):(2'h2)] ^ (reg242 ?
                      reg281 : reg256)) >> (^~(reg194 ?
                      wire250 : (8'ha9))))) : $unsigned((7'h42)));
            end
          reg314 = (((((wire174 ? wire173 : reg306) << $signed((8'hb8))) ?
                  reg246 : ($unsigned((8'ha5)) ?
                      (reg178 - reg246) : (reg272 ? reg180 : reg308))) ?
              $unsigned((~&(reg214 ?
                  reg205 : (7'h44)))) : reg287) * (|$unsigned(((-(8'hb5)) ?
              $signed(reg295) : (reg242 >> reg307)))));
          if ((^~$unsigned((~^(8'h9d)))))
            begin
              reg315 <= $signed((($signed(reg254[(1'h1):(1'h0)]) | (+reg186[(3'h5):(3'h5)])) ?
                  reg224[(3'h5):(1'h0)] : (($unsigned(reg313) >= (reg269 ?
                      (8'hbb) : reg246)) * $unsigned(reg260))));
            end
          else
            begin
              reg315 <= reg189[(4'h9):(2'h2)];
              reg316 = (^(($signed($signed(reg227)) ?
                  ($signed(reg214) >>> (reg300 ?
                      reg203 : (8'hbe))) : $unsigned(reg315[(4'ha):(1'h0)])) + reg185[(4'he):(2'h2)]));
              reg317 <= reg287;
            end
        end
      for (forvar318 = (1'h0); (forvar318 < (3'h4)); forvar318 = (forvar318 + (1'h1)))
        begin
          reg319 <= $signed($unsigned(reg296));
        end
    end
  assign wire320 = $unsigned((|((reg267[(2'h2):(1'h1)] ?
                           (|reg278) : (reg266 ^ reg315)) ?
                       $unsigned(reg242) : $signed($signed(reg178)))));
  assign wire321 = {$unsigned(((8'hbd) | $signed(reg311)))};
  assign wire322 = ($signed((!reg282)) + wire173);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module148  (y, clk, wire152, wire151, wire150, wire149);
  output wire [(32'hb9):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire152;
  input wire [(4'h9):(1'h0)] wire151;
  input wire signed [(4'hb):(1'h0)] wire150;
  input wire signed [(4'hb):(1'h0)] wire149;
  wire [(3'h6):(1'h0)] wire167;
  wire signed [(5'h10):(1'h0)] wire166;
  wire signed [(2'h2):(1'h0)] wire165;
  wire signed [(4'hc):(1'h0)] wire164;
  wire signed [(5'h15):(1'h0)] wire163;
  wire [(2'h3):(1'h0)] wire162;
  wire signed [(4'ha):(1'h0)] wire161;
  wire signed [(4'hd):(1'h0)] wire160;
  wire [(4'hd):(1'h0)] wire157;
  wire [(4'h9):(1'h0)] wire156;
  wire signed [(4'hf):(1'h0)] wire155;
  wire signed [(5'h13):(1'h0)] wire154;
  wire [(5'h10):(1'h0)] wire153;
  reg signed [(4'h9):(1'h0)] reg159 = (1'h0);
  reg [(5'h14):(1'h0)] forvar158 = (1'h0);
  assign y = {wire167,
                 wire166,
                 wire165,
                 wire164,
                 wire163,
                 wire162,
                 wire161,
                 wire160,
                 wire157,
                 wire156,
                 wire155,
                 wire154,
                 wire153,
                 reg159,
                 forvar158,
                 (1'h0)};
  assign wire153 = (wire150 ?
                       ((!($signed(wire151) ?
                               (wire149 ^ wire151) : (wire151 ?
                                   wire150 : wire150))) ?
                           $unsigned((wire149[(3'h6):(3'h5)] ?
                               (wire149 ?
                                   wire151 : wire151) : (!wire152))) : (~&((wire149 ?
                               (8'hb0) : wire151) < (wire151 ?
                               wire152 : wire151)))) : (~&$unsigned($unsigned($unsigned(wire149)))));
  assign wire154 = $signed(wire153);
  assign wire155 = $unsigned(($signed({(~wire153)}) > (&((+wire150) ?
                       {wire154} : (~^wire154)))));
  assign wire156 = $unsigned((^{$signed((~|wire155)),
                       $signed(wire149[(4'ha):(2'h3)])}));
  assign wire157 = ($unsigned((^~{(wire149 > wire155), (^~(8'ha2))})) ?
                       $signed($signed(wire153[(4'ha):(4'ha)])) : wire155[(3'h7):(2'h3)]);
  always
    @(posedge clk) begin
      for (forvar158 = (1'h0); (forvar158 < (2'h2)); forvar158 = (forvar158 + (1'h1)))
        begin
          reg159 = (^{(wire154 ?
                  $signed(wire153[(4'hf):(4'hf)]) : forvar158[(4'hc):(2'h3)]),
              (8'ha7)});
        end
    end
  assign wire160 = ({{$signed((wire152 ? (8'hae) : (8'ha2)))},
                       (~|$signed((~wire153)))} | (~^wire153[(4'h8):(3'h6)]));
  assign wire161 = $signed(($unsigned(($signed((8'ha3)) * $unsigned(wire150))) ?
                       $unsigned(wire150[(4'ha):(1'h0)]) : $unsigned((!(wire160 ^~ wire156)))));
  assign wire162 = wire150[(4'h8):(1'h1)];
  assign wire163 = (!({$unsigned($signed(wire155))} ^~ $signed(($signed(wire160) ?
                       wire157 : $signed((8'ha0))))));
  assign wire164 = $signed($unsigned((!(^~(wire160 * wire153)))));
  assign wire165 = (wire149[(4'h9):(3'h5)] ^~ (^~$unsigned((&wire164))));
  assign wire166 = $signed(($unsigned((+(~(8'ha6)))) ?
                       ({wire149[(3'h5):(1'h1)]} * $unsigned((wire164 ?
                           wire163 : wire162))) : ($unsigned((8'hba)) <<< (!((8'hb6) || (8'hb0))))));
  assign wire167 = (8'h9d);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module121  (y, clk, wire125, wire124, wire123, wire122);
  output wire [(32'h9c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire125;
  input wire [(5'h15):(1'h0)] wire124;
  input wire signed [(4'he):(1'h0)] wire123;
  input wire [(4'h8):(1'h0)] wire122;
  wire [(4'hd):(1'h0)] wire140;
  wire signed [(4'he):(1'h0)] wire139;
  wire signed [(4'h8):(1'h0)] wire138;
  wire signed [(3'h5):(1'h0)] wire137;
  wire [(4'hf):(1'h0)] wire136;
  wire [(5'h13):(1'h0)] wire135;
  wire signed [(4'he):(1'h0)] wire134;
  wire [(4'hd):(1'h0)] wire133;
  wire signed [(3'h5):(1'h0)] wire127;
  wire signed [(2'h3):(1'h0)] wire126;
  reg [(3'h6):(1'h0)] reg132 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg131 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg130 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar129 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar128 = (1'h0);
  assign y = {wire140,
                 wire139,
                 wire138,
                 wire137,
                 wire136,
                 wire135,
                 wire134,
                 wire133,
                 wire127,
                 wire126,
                 reg132,
                 reg131,
                 reg130,
                 forvar129,
                 forvar128,
                 (1'h0)};
  assign wire126 = (wire125[(4'h8):(1'h0)] ?
                       {{(8'hb5),
                               wire122[(2'h3):(2'h3)]}} : wire122[(3'h5):(1'h0)]);
  assign wire127 = wire124;
  always
    @(posedge clk) begin
      for (forvar128 = (1'h0); (forvar128 < (1'h0)); forvar128 = (forvar128 + (1'h1)))
        begin
          for (forvar129 = (1'h0); (forvar129 < (2'h3)); forvar129 = (forvar129 + (1'h1)))
            begin
              reg130 = (|$signed((({forvar129, forvar128} ?
                  (wire125 ? wire125 : wire124) : wire122) | wire127)));
              reg131 <= $signed(({{(~&forvar129), forvar129},
                      wire127[(3'h4):(2'h3)]} ?
                  $signed(wire126[(1'h1):(1'h1)]) : (!($unsigned(wire123) ?
                      (reg130 << (8'hac)) : $signed(wire124)))));
            end
        end
    end
  always
    @(posedge clk) begin
      reg132 <= $signed($signed($signed(($unsigned(wire122) >= {reg131}))));
    end
  assign wire133 = {(($unsigned($unsigned(wire125)) ?
                           wire122 : (-$unsigned((8'h9e)))) * $unsigned((~&wire122)))};
  assign wire134 = ((~$signed(($signed(reg132) ?
                       wire123[(1'h1):(1'h0)] : $unsigned(wire127)))) <= $unsigned($unsigned($unsigned($signed(wire127)))));
  assign wire135 = (($unsigned(($signed(reg132) < wire124)) || {$unsigned(reg131[(3'h4):(3'h4)])}) * $unsigned(wire125[(3'h4):(2'h2)]));
  assign wire136 = {wire122};
  assign wire137 = $unsigned(wire122[(4'h8):(3'h6)]);
  assign wire138 = wire133[(2'h3):(2'h3)];
  assign wire139 = ((~|((wire135[(2'h3):(2'h2)] | wire133) ?
                       wire137[(3'h4):(1'h0)] : $unsigned((wire125 << wire127)))) - reg132);
  assign wire140 = (wire122 ?
                       (wire135[(1'h1):(1'h1)] ?
                           ((wire134 == {(8'h9c)}) ?
                               ((wire139 ?
                                   (8'ha7) : (8'haf)) >> (&(7'h41))) : (^reg132[(1'h0):(1'h0)])) : wire139) : $unsigned(reg131));
endmodule