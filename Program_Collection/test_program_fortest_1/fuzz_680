(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire0;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire3;
  wire signed [(2'h3):(1'h0)] wire4;
  wire [(3'h4):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire6;
  wire signed [(2'h3):(1'h0)] wire8;
  wire [(4'h8):(1'h0)] wire9;
  wire [(4'ha):(1'h0)] wire10;
  wire [(2'h2):(1'h0)] wire12;
  wire signed [(4'hb):(1'h0)] wire13;
  wire [(3'h4):(1'h0)] wire14;
  wire [(4'hb):(1'h0)] wire46;
  reg [(4'h8):(1'h0)] reg7 = (1'h0);
  reg [(3'h5):(1'h0)] reg11 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg15 = (1'h0);
  reg [(2'h2):(1'h0)] reg16 = (1'h0);
  assign y = {wire4,
                 wire5,
                 wire6,
                 wire8,
                 wire9,
                 wire10,
                 wire12,
                 wire13,
                 wire14,
                 wire46,
                 reg7,
                 reg11,
                 reg15,
                 reg16,
                 (1'h0)};
  assign wire4 = {wire1[(4'h8):(4'h8)]};
  assign wire5 = {wire4};
  assign wire6 = (($signed(wire4) ? wire3[(2'h3):(1'h0)] : wire3) * wire1);
  always
    @(posedge clk) begin
      reg7 <= (~|wire1);
    end
  assign wire8 = {(^~(8'had))};
  assign wire9 = wire8[(1'h0):(1'h0)];
  assign wire10 = wire6[(2'h2):(1'h0)];
  always
    @(posedge clk) begin
      reg11 <= (wire10 && (wire2[(2'h3):(1'h0)] ?
          ($signed(wire2) < $signed(wire8)) : (wire6 | $signed(wire9))));
    end
  assign wire12 = ($signed((~|reg11[(1'h0):(1'h0)])) && wire1[(1'h0):(1'h0)]);
  assign wire13 = wire12;
  assign wire14 = {(($unsigned(wire2) ?
                          (+reg7) : (-wire8)) >>> wire12[(1'h0):(1'h0)])};
  always
    @(posedge clk) begin
      reg15 <= {{(8'h9f)}};
      reg16 <= ($signed($unsigned((wire14 & wire5))) ?
          ((reg7[(2'h2):(1'h1)] & {wire12}) != wire2[(2'h3):(1'h1)]) : $signed((8'h9e)));
    end
  module17 #() modinst47 (.y(wire46), .wire21(wire2), .wire18(wire10), .wire20(reg11), .wire19(wire1), .clk(clk));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17  (y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire21;
  input wire [(3'h5):(1'h0)] wire20;
  input wire signed [(2'h3):(1'h0)] wire19;
  input wire signed [(4'ha):(1'h0)] wire18;
  wire signed [(3'h6):(1'h0)] wire44;
  wire [(4'h9):(1'h0)] wire28;
  wire signed [(3'h7):(1'h0)] wire27;
  wire [(4'hb):(1'h0)] wire26;
  wire [(4'h9):(1'h0)] wire25;
  wire signed [(4'hb):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire23;
  wire signed [(4'h9):(1'h0)] wire22;
  assign y = {wire44,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 (1'h0)};
  assign wire22 = ($unsigned((~$unsigned(wire21))) || $unsigned(wire20[(2'h2):(2'h2)]));
  assign wire23 = wire20[(2'h2):(2'h2)];
  assign wire24 = {(8'ha6)};
  assign wire25 = (wire20[(3'h5):(2'h3)] || ({$signed((8'hae))} ^ ($signed(wire24) ?
                      {wire24} : wire22[(3'h6):(3'h4)])));
  assign wire26 = (+($signed((wire25 ? (8'ha9) : wire18)) == (^~(^wire19))));
  assign wire27 = wire20[(2'h2):(1'h0)];
  assign wire28 = (wire21[(2'h2):(1'h0)] ?
                      ((wire20 ^ $unsigned(wire22)) ?
                          ((|wire25) || {wire18}) : wire26[(3'h5):(3'h4)]) : ($signed((wire19 * wire20)) ?
                          ((^~wire19) * $signed(wire18)) : (~&(!wire19))));
  module29 #() modinst45 (.wire31(wire25), .wire33(wire18), .y(wire44), .clk(clk), .wire32(wire27), .wire30(wire22));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module29  (y, clk, wire33, wire32, wire31, wire30);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire33;
  input wire [(3'h7):(1'h0)] wire32;
  input wire [(3'h7):(1'h0)] wire31;
  input wire [(4'h8):(1'h0)] wire30;
  wire signed [(2'h2):(1'h0)] wire43;
  wire [(2'h2):(1'h0)] wire42;
  wire [(4'ha):(1'h0)] wire41;
  wire [(4'hb):(1'h0)] wire40;
  wire [(3'h5):(1'h0)] wire39;
  wire signed [(2'h3):(1'h0)] wire38;
  wire [(3'h5):(1'h0)] wire37;
  wire [(2'h2):(1'h0)] wire36;
  wire signed [(2'h2):(1'h0)] wire35;
  wire [(2'h3):(1'h0)] wire34;
  assign y = {wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 (1'h0)};
  assign wire34 = ({{$signed(wire33)}} && $signed((((8'hac) ? wire31 : wire30) ?
                      (~wire32) : wire33[(3'h4):(1'h1)])));
  assign wire35 = (~^(((wire32 ? wire30 : (8'h9c)) ?
                          wire31 : (wire30 * wire30)) ?
                      wire31[(1'h0):(1'h0)] : $unsigned((+(8'ha9)))));
  assign wire36 = $signed((8'ha9));
  assign wire37 = ($signed(wire32) <= $signed($signed((!wire33))));
  assign wire38 = wire34[(2'h2):(2'h2)];
  assign wire39 = wire32;
  assign wire40 = $signed(wire34);
  assign wire41 = wire31[(2'h3):(2'h2)];
  assign wire42 = $unsigned(wire31);
  assign wire43 = wire33[(2'h2):(1'h1)];
endmodule