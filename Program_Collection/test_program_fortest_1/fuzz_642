(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param78 = {({((8'h9c) << (8'hab))} ? (((8'ha4) >>> (8'h9f)) ? ((8'hac) ? (8'ha6) : (8'ha0)) : {(8'hb0)}) : (~^{(8'ha5)}))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h63):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire77;
  wire [(4'ha):(1'h0)] wire76;
  wire signed [(4'hb):(1'h0)] wire75;
  wire [(3'h4):(1'h0)] wire74;
  wire [(4'hb):(1'h0)] wire73;
  wire [(4'ha):(1'h0)] wire72;
  wire signed [(2'h2):(1'h0)] wire70;
  wire [(4'ha):(1'h0)] wire9;
  wire [(3'h5):(1'h0)] wire8;
  wire [(3'h4):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire6;
  wire signed [(4'h9):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire4;
  assign y = {wire77,
                 wire76,
                 wire75,
                 wire74,
                 wire73,
                 wire72,
                 wire70,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = $unsigned(wire3[(3'h5):(2'h3)]);
  assign wire5 = wire0[(1'h1):(1'h1)];
  assign wire6 = ($signed($signed(wire1)) ?
                     (wire2 >> wire0) : (-(wire5[(4'h8):(3'h4)] >= (wire3 == wire0))));
  assign wire7 = {$unsigned(wire1[(4'hb):(1'h1)])};
  assign wire8 = ({wire3[(3'h6):(3'h5)]} ?
                     ((wire2 ? (~^wire1) : $signed(wire5)) ?
                         $signed((8'ha1)) : ((^wire4) ?
                             wire6 : $unsigned(wire6))) : (8'h9e));
  assign wire9 = (8'ha3);
  module10 #() modinst71 (wire70, clk, wire6, wire9, wire3, wire0);
  assign wire72 = $unsigned({$unsigned((wire3 < wire1))});
  assign wire73 = wire0[(1'h1):(1'h0)];
  assign wire74 = (wire4 > $signed($unsigned((wire8 ? wire3 : (8'h9d)))));
  assign wire75 = $signed((8'hab));
  assign wire76 = wire72[(1'h0):(1'h0)];
  assign wire77 = $signed((8'ha6));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param69 = ({(((8'ha8) ? (8'hab) : (8'ha8)) || {(8'h9c)})} ? ((((8'ha5) ? (8'ha9) : (8'ha3)) || (~|(8'ha0))) ? (((8'ha6) ? (8'h9d) : (8'ha0)) ? ((8'h9f) - (8'hb0)) : ((8'hb0) << (8'ha8))) : {{(8'ha8)}}) : {{((8'ha7) >= (8'ha0))}}))
(y, clk, wire11, wire12, wire13, wire14);
  output wire [(32'h72):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire11;
  input wire [(3'h5):(1'h0)] wire12;
  input wire [(4'ha):(1'h0)] wire13;
  input wire [(3'h5):(1'h0)] wire14;
  wire signed [(3'h6):(1'h0)] wire64;
  wire signed [(2'h3):(1'h0)] wire62;
  wire [(4'h9):(1'h0)] wire15;
  wire [(4'h9):(1'h0)] wire16;
  wire signed [(4'h9):(1'h0)] wire17;
  wire [(4'h8):(1'h0)] wire40;
  wire [(4'hb):(1'h0)] wire47;
  wire [(4'ha):(1'h0)] wire60;
  reg signed [(3'h7):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg67 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg66 = (1'h0);
  reg [(2'h3):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg45 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg46 = (1'h0);
  assign y = {wire64,
                 wire62,
                 wire15,
                 wire16,
                 wire17,
                 wire40,
                 wire47,
                 wire60,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 reg42,
                 reg43,
                 reg44,
                 reg45,
                 reg46,
                 (1'h0)};
  assign wire15 = ((wire12 >> {(8'ha5)}) ?
                      $unsigned((8'ha0)) : (wire12 ~^ ({wire13} ?
                          (&wire13) : $signed(wire13))));
  assign wire16 = ((~wire15) > (~&wire11));
  assign wire17 = {(8'h9d)};
  module18 #() modinst41 (wire40, clk, wire15, wire12, wire11, wire13);
  always
    @(posedge clk) begin
      if ((wire16[(1'h1):(1'h0)] >= {wire16}))
        begin
          if (((wire17 ?
              {wire40[(3'h7):(2'h2)]} : $signed({wire15})) > {((~(8'had)) ?
                  {wire12} : (wire14 ? wire15 : (8'ha3)))}))
            begin
              reg42 <= (wire11[(3'h4):(1'h0)] ?
                  ($signed((wire13 ? (8'ha6) : wire17)) ?
                      $signed((|wire12)) : $unsigned(wire12[(1'h1):(1'h0)])) : $unsigned((~^wire11[(2'h2):(2'h2)])));
              reg43 <= (^{{wire14}});
            end
          else
            begin
              reg42 <= (!((((8'hae) == wire11) ?
                      ((8'ha2) & wire14) : $signed(reg43)) ?
                  (^wire40) : (+$signed(wire40))));
              reg43 <= $signed((8'ha0));
            end
          reg44 <= wire11;
          reg45 <= (wire12[(2'h2):(1'h1)] ?
              $unsigned({$signed(wire14)}) : (($signed(wire13) << $signed((8'h9d))) ?
                  $unsigned(wire15) : wire15));
        end
      else
        begin
          reg42 <= wire17[(2'h2):(1'h0)];
          reg43 <= ((reg45 < {$signed(wire40)}) - {$signed(wire16)});
          reg44 <= wire16;
        end
    end
  always
    @(posedge clk) begin
      reg46 <= (reg43[(3'h5):(1'h1)] != wire13);
    end
  assign wire47 = (((^~(wire13 ? wire11 : wire12)) ?
                      $signed(wire40[(3'h6):(3'h6)]) : $signed((wire17 << reg46))) - {((^reg43) >> (reg42 - reg43))});
  module48 #() modinst61 (.wire51(wire13), .wire50(reg46), .wire49(wire15), .y(wire60), .clk(clk), .wire52(wire40));
  module18 #() modinst63 (wire62, clk, wire14, wire47, wire12, wire15);
  assign wire64 = {$signed((^(wire62 << wire15)))};
  always
    @(posedge clk) begin
      reg65 <= $unsigned($signed(reg46));
      if (($signed(($signed(wire15) * reg43[(3'h5):(1'h1)])) - $signed((-{reg43}))))
        begin
          reg66 <= reg65[(2'h3):(1'h0)];
          reg67 <= (+$unsigned(((|wire64) ? reg46[(2'h2):(1'h1)] : reg45)));
        end
      else
        begin
          reg66 <= ((($signed(reg44) ? reg67 : (~(8'haf))) ?
              (wire15 ?
                  $unsigned(wire40) : (wire14 ?
                      wire62 : reg66)) : ($signed(reg43) ?
                  $signed(wire62) : $unsigned((8'ha9)))) + (($unsigned(wire12) ?
              wire11 : $unsigned(reg65)) & (+(wire15 ? wire16 : wire12))));
          reg67 <= $signed($unsigned(wire16[(3'h7):(3'h7)]));
        end
      reg68 <= ((&$signed($signed(wire17))) ?
          ($unsigned($signed(wire12)) ?
              (wire62[(2'h3):(2'h3)] ^~ (wire62 ?
                  wire13 : wire16)) : $unsigned({wire47})) : wire40[(2'h3):(2'h2)]);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module48  (y, clk, wire52, wire51, wire50, wire49);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire52;
  input wire signed [(4'ha):(1'h0)] wire51;
  input wire [(2'h3):(1'h0)] wire50;
  input wire signed [(4'h9):(1'h0)] wire49;
  wire signed [(4'hb):(1'h0)] wire59;
  wire [(4'h8):(1'h0)] wire58;
  wire signed [(3'h6):(1'h0)] wire57;
  wire signed [(2'h2):(1'h0)] wire56;
  wire [(4'hb):(1'h0)] wire55;
  reg signed [(3'h7):(1'h0)] reg54 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg53 = (1'h0);
  assign y = {wire59, wire58, wire57, wire56, wire55, reg54, reg53, (1'h0)};
  always
    @(posedge clk) begin
      reg53 <= (($signed(wire49) ?
          $unsigned(wire51[(2'h3):(1'h1)]) : wire51) < $signed(wire49[(2'h2):(1'h1)]));
      reg54 <= reg53[(2'h2):(1'h1)];
    end
  assign wire55 = {(&$unsigned(reg53[(3'h7):(2'h3)]))};
  assign wire56 = (^wire52);
  assign wire57 = (~reg53);
  assign wire58 = wire49;
  assign wire59 = $unsigned(($signed((-(8'ha4))) ?
                      {(wire56 ^~ wire56)} : $signed($signed(wire56))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18
#(parameter param39 = ((({(8'hac)} ? {(8'ha2)} : ((8'hac) > (8'hae))) ? (^~{(8'ha7)}) : (((8'ha6) ? (8'hab) : (8'hac)) > (^(8'ha3)))) & ({{(8'haa)}} ? (~((8'hab) != (8'had))) : (~&(^~(8'hb0))))))
(y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h86):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire22;
  input wire signed [(3'h5):(1'h0)] wire21;
  input wire signed [(3'h4):(1'h0)] wire20;
  input wire signed [(3'h7):(1'h0)] wire19;
  wire signed [(4'h9):(1'h0)] wire38;
  wire signed [(4'ha):(1'h0)] wire37;
  wire signed [(4'h9):(1'h0)] wire36;
  wire [(4'h9):(1'h0)] wire35;
  wire [(4'hb):(1'h0)] wire34;
  wire [(4'hb):(1'h0)] wire33;
  wire signed [(2'h2):(1'h0)] wire25;
  wire signed [(4'hb):(1'h0)] wire24;
  wire signed [(4'h9):(1'h0)] wire23;
  reg [(3'h5):(1'h0)] reg32 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg29 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg28 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg27 = (1'h0);
  reg [(4'ha):(1'h0)] reg26 = (1'h0);
  assign y = {wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire25,
                 wire24,
                 wire23,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire23 = $unsigned({$unsigned((wire19 ^~ wire19))});
  assign wire24 = wire20;
  assign wire25 = ({({wire22} ?
                          wire23[(4'h9):(3'h7)] : (wire23 >>> wire20))} > (-(~wire24)));
  always
    @(posedge clk) begin
      reg26 <= wire24[(3'h7):(3'h4)];
      if ((wire21[(2'h2):(1'h1)] ?
          (((-wire23) + wire25) ?
              ((8'ha6) ^~ (wire20 == wire23)) : ({wire23} != wire25)) : wire21))
        begin
          reg27 <= $unsigned($unsigned(wire24));
          reg28 <= (reg26 == wire19[(3'h4):(1'h1)]);
          reg29 <= reg27;
        end
      else
        begin
          if ((^wire23))
            begin
              reg27 <= (^((wire24[(3'h6):(1'h0)] >> wire23[(1'h0):(1'h0)]) ~^ wire24[(3'h5):(1'h0)]));
              reg28 <= ((~^{(&reg26)}) ? reg29 : wire24);
            end
          else
            begin
              reg27 <= (wire24[(1'h1):(1'h1)] ? $signed({wire24}) : {wire25});
            end
          reg29 <= ((($signed(reg27) ?
                  (&wire19) : ((8'h9f) || wire22)) == wire20) ?
              $signed(($unsigned(wire22) || $signed((8'ha0)))) : ({$signed(wire22)} ?
                  (+$unsigned(reg28)) : ($unsigned(wire19) * reg26[(1'h1):(1'h1)])));
          reg30 <= (8'ha0);
        end
    end
  always
    @(posedge clk) begin
      reg31 <= $unsigned((!$signed((wire23 + (8'h9f)))));
      reg32 <= $unsigned($signed($unsigned(wire25[(1'h0):(1'h0)])));
    end
  assign wire33 = reg30;
  assign wire34 = $signed(reg28[(4'ha):(2'h3)]);
  assign wire35 = reg30[(2'h2):(1'h1)];
  assign wire36 = wire21[(1'h1):(1'h0)];
  assign wire37 = reg29[(2'h2):(1'h0)];
  assign wire38 = (-{wire34[(3'h4):(1'h0)]});
endmodule