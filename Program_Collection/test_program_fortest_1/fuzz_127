(* use_dsp48="no" *) (* use_dsp="no" *) module top #(parameter param85 = (8'ha4)) (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire0;
  input wire [(4'h9):(1'h0)] wire1;
  input wire [(3'h5):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire3;
  wire signed [(4'h9):(1'h0)] wire84;
  wire [(3'h4):(1'h0)] wire83;
  wire signed [(3'h6):(1'h0)] wire14;
  wire [(4'hb):(1'h0)] wire16;
  wire signed [(3'h5):(1'h0)] wire17;
  wire signed [(3'h7):(1'h0)] wire18;
  wire signed [(2'h2):(1'h0)] wire22;
  wire signed [(4'ha):(1'h0)] wire81;
  reg signed [(4'ha):(1'h0)] reg19 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg21 = (1'h0);
  assign y = {wire84,
                 wire83,
                 wire14,
                 wire16,
                 wire17,
                 wire18,
                 wire22,
                 wire81,
                 reg19,
                 reg20,
                 reg21,
                 (1'h0)};
  module4 #() modinst15 (wire14, clk, wire2, wire3, wire0, wire1);
  assign wire16 = (8'ha5);
  assign wire17 = $signed(wire14[(3'h5):(2'h3)]);
  assign wire18 = (+((wire14[(2'h3):(2'h2)] ^ (wire0 ?
                      wire14 : wire16)) >>> $unsigned($unsigned(wire2))));
  always
    @(posedge clk) begin
      reg19 <= (wire3 ? (|(-wire18)) : (-$signed(wire14)));
      reg20 <= wire17;
      reg21 <= (~($signed((reg20 ? reg19 : wire18)) ?
          {{(8'haf)}} : (wire16[(1'h0):(1'h0)] ? {(8'hae)} : {(8'hb0)})));
    end
  assign wire22 = ($signed((wire0 ?
                      (wire0 > wire2) : (^reg20))) >> $unsigned(wire2[(3'h5):(1'h1)]));
  module23 #() modinst82 (.wire25(wire16), .wire26(wire14), .wire24(reg20), .wire27(wire18), .clk(clk), .y(wire81));
  assign wire83 = $signed(wire81[(1'h1):(1'h1)]);
  assign wire84 = (((~&(wire1 ? wire14 : (8'ha1))) ?
                      ((wire1 ?
                          wire0 : (8'ha8)) < {wire81}) : $unsigned($signed((8'ha2)))) << reg19);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23
#(parameter param80 = (~^(&((8'had) | ((8'h9d) >> (8'ha3))))))
(y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire27;
  input wire signed [(3'h6):(1'h0)] wire26;
  input wire signed [(4'hb):(1'h0)] wire25;
  input wire signed [(4'h9):(1'h0)] wire24;
  wire [(3'h6):(1'h0)] wire79;
  wire signed [(2'h3):(1'h0)] wire78;
  wire [(2'h2):(1'h0)] wire77;
  wire signed [(3'h4):(1'h0)] wire75;
  wire [(3'h4):(1'h0)] wire61;
  wire signed [(4'hb):(1'h0)] wire60;
  wire signed [(4'h9):(1'h0)] wire59;
  wire [(4'h9):(1'h0)] wire56;
  reg [(3'h6):(1'h0)] reg58 = (1'h0);
  assign y = {wire79,
                 wire78,
                 wire77,
                 wire75,
                 wire61,
                 wire60,
                 wire59,
                 wire56,
                 reg58,
                 (1'h0)};
  module28 #() modinst57 (.wire31(wire25), .clk(clk), .wire30(wire24), .wire29(wire26), .wire32(wire27), .y(wire56));
  always
    @(posedge clk) begin
      reg58 <= (({wire24[(3'h7):(3'h5)]} ^~ $unsigned($unsigned((8'h9e)))) || (((wire26 ?
              wire24 : wire27) ?
          wire56 : (wire24 <<< wire26)) << (wire24[(3'h4):(2'h3)] ?
          ((8'ha4) >= wire25) : $unsigned(wire56))));
    end
  assign wire59 = wire25;
  assign wire60 = (!(^~$unsigned((~^wire27))));
  assign wire61 = $signed($signed((^(8'h9e))));
  module62 #() modinst76 (.wire66(wire25), .wire64(wire59), .clk(clk), .y(wire75), .wire65(wire61), .wire63(wire26));
  assign wire77 = (wire61[(2'h3):(2'h2)] ? wire25 : wire56);
  assign wire78 = $signed((|$signed($unsigned(reg58))));
  assign wire79 = $signed($unsigned(wire25[(3'h5):(1'h1)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h1e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire7;
  input wire signed [(4'ha):(1'h0)] wire6;
  input wire signed [(4'h9):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire13;
  wire signed [(2'h2):(1'h0)] wire12;
  wire signed [(2'h3):(1'h0)] wire10;
  wire [(4'ha):(1'h0)] wire9;
  reg signed [(4'h9):(1'h0)] reg11 = (1'h0);
  assign y = {wire13, wire12, wire10, wire9, reg11, (1'h0)};
  assign wire9 = (|{wire7[(1'h0):(1'h0)]});
  assign wire10 = $unsigned((+(wire5[(1'h0):(1'h0)] + ((8'h9c) ?
                      wire9 : wire8))));
  always
    @(posedge clk) begin
      reg11 <= (+wire10[(1'h1):(1'h1)]);
    end
  assign wire12 = {wire9[(2'h2):(1'h0)]};
  assign wire13 = wire10;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module62
#(parameter param74 = ((!(&(~^(8'haf)))) ~^ (({(8'ha9)} & ((8'ha1) & (8'ha5))) ? (~&((8'ha0) >= (8'had))) : ((~&(8'ha6)) ? ((8'had) & (8'haa)) : ((8'ha6) ^~ (8'h9e))))))
(y, clk, wire66, wire65, wire64, wire63);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire66;
  input wire [(2'h2):(1'h0)] wire65;
  input wire [(4'h8):(1'h0)] wire64;
  input wire signed [(2'h3):(1'h0)] wire63;
  wire [(3'h7):(1'h0)] wire73;
  wire signed [(4'h9):(1'h0)] wire72;
  wire [(2'h3):(1'h0)] wire71;
  wire [(3'h7):(1'h0)] wire70;
  wire signed [(4'ha):(1'h0)] wire69;
  wire [(4'hb):(1'h0)] wire68;
  wire [(3'h5):(1'h0)] wire67;
  assign y = {wire73, wire72, wire71, wire70, wire69, wire68, wire67, (1'h0)};
  assign wire67 = $signed($signed(((wire64 ? wire65 : wire66) ?
                      (~&(8'h9d)) : (wire66 ? (8'haf) : wire63))));
  assign wire68 = $signed(wire66);
  assign wire69 = wire68[(3'h6):(1'h0)];
  assign wire70 = (wire67[(1'h1):(1'h1)] ?
                      $signed(($unsigned(wire63) > $unsigned(wire69))) : ($unsigned((!wire69)) ?
                          wire64[(3'h5):(1'h1)] : wire68[(4'ha):(1'h0)]));
  assign wire71 = ($signed($signed((wire69 ~^ wire67))) ?
                      ((^wire65[(1'h0):(1'h0)]) ?
                          wire67 : $unsigned(wire65[(2'h2):(2'h2)])) : (^wire65[(1'h0):(1'h0)]));
  assign wire72 = wire71[(1'h0):(1'h0)];
  assign wire73 = (~wire67[(1'h1):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module28  (y, clk, wire32, wire31, wire30, wire29);
  output wire [(32'h84):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire32;
  input wire [(2'h2):(1'h0)] wire31;
  input wire [(2'h2):(1'h0)] wire30;
  input wire [(3'h6):(1'h0)] wire29;
  wire signed [(3'h7):(1'h0)] wire55;
  wire [(2'h2):(1'h0)] wire54;
  wire signed [(3'h4):(1'h0)] wire50;
  wire [(4'h8):(1'h0)] wire49;
  wire [(3'h6):(1'h0)] wire48;
  wire [(2'h3):(1'h0)] wire47;
  wire signed [(4'hb):(1'h0)] wire35;
  wire [(4'h9):(1'h0)] wire34;
  wire signed [(2'h3):(1'h0)] wire33;
  reg signed [(4'h8):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg52 = (1'h0);
  reg [(3'h7):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg46 = (1'h0);
  reg [(3'h5):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg44 = (1'h0);
  reg [(3'h6):(1'h0)] reg43 = (1'h0);
  reg [(3'h6):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg41 = (1'h0);
  reg [(2'h2):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg39 = (1'h0);
  reg [(3'h5):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg37 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg36 = (1'h0);
  assign y = {wire55,
                 wire54,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire35,
                 wire34,
                 wire33,
                 reg53,
                 reg52,
                 reg51,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 (1'h0)};
  assign wire33 = $signed({$unsigned((8'haa))});
  assign wire34 = ((+(-(&wire29))) ?
                      wire30[(1'h1):(1'h1)] : (wire30 ^ ((wire32 ?
                              wire33 : wire31) ?
                          $unsigned(wire31) : (wire30 ? wire32 : wire30))));
  assign wire35 = ($signed(wire32) >>> (((wire30 ?
                      wire33 : wire33) ~^ (wire34 >>> wire32)) <<< wire33));
  always
    @(posedge clk) begin
      if ((((^~wire35[(3'h6):(2'h3)]) ?
          wire31[(1'h0):(1'h0)] : $unsigned($unsigned(wire31))) ^ wire35[(3'h6):(3'h5)]))
        begin
          reg36 <= ($signed(({wire29} ?
              (wire30 <= wire31) : wire29[(2'h2):(1'h1)])) - wire30[(1'h1):(1'h0)]);
        end
      else
        begin
          reg36 <= ((~&wire34[(4'h9):(2'h3)]) ~^ ($signed((wire31 >= wire32)) && ((8'h9c) ~^ wire33[(2'h2):(1'h0)])));
          reg37 <= wire32[(2'h2):(1'h1)];
          if ((^~wire35[(1'h1):(1'h1)]))
            begin
              reg38 <= $signed($unsigned({wire33[(1'h1):(1'h1)]}));
            end
          else
            begin
              reg38 <= (+(8'hac));
              reg39 <= (&wire34[(3'h6):(3'h4)]);
            end
        end
    end
  always
    @(posedge clk) begin
      reg40 <= (wire32[(3'h6):(2'h2)] & (|$unsigned(wire35)));
      if (reg37)
        begin
          if ((8'ha5))
            begin
              reg41 <= {$unsigned((reg37[(3'h6):(1'h1)] ?
                      (~|wire34) : $unsigned(reg40)))};
              reg42 <= $unsigned((wire33[(2'h2):(1'h0)] ?
                  $unsigned((wire29 ? wire30 : wire32)) : $signed((|reg37))));
            end
          else
            begin
              reg41 <= (((wire34[(1'h1):(1'h1)] ?
                      $signed(wire29) : (+reg38)) ~^ (&$unsigned(reg42))) ?
                  wire32 : $signed(reg41));
            end
        end
      else
        begin
          reg41 <= ((^($signed(reg41) || (reg41 ? reg37 : wire30))) ?
              (|(~^(!wire33))) : wire33[(2'h2):(1'h1)]);
        end
      if (wire35[(1'h1):(1'h1)])
        begin
          if ($unsigned(wire34[(4'h9):(3'h4)]))
            begin
              reg43 <= wire32[(2'h2):(2'h2)];
              reg44 <= wire33[(2'h2):(1'h0)];
              reg45 <= ($unsigned($unsigned((reg37 ? reg42 : reg39))) ?
                  wire34[(3'h6):(1'h1)] : $signed({reg41[(1'h0):(1'h0)]}));
            end
          else
            begin
              reg43 <= (wire35[(3'h7):(1'h0)] >>> ($unsigned((&wire30)) >> $unsigned((+(8'h9d)))));
              reg44 <= (8'hac);
            end
          reg46 <= $signed($unsigned((wire35 * reg40[(1'h1):(1'h1)])));
        end
      else
        begin
          reg43 <= $signed((8'ha1));
        end
    end
  assign wire47 = ({reg39[(2'h2):(2'h2)]} ?
                      $unsigned($signed(reg46)) : $unsigned(($signed(wire35) ?
                          reg44 : (reg39 ? reg42 : wire33))));
  assign wire48 = ((reg40 ?
                          $signed($unsigned((8'ha4))) : (~^(wire35 >> reg39))) ?
                      ({$signed(wire33)} ?
                          (wire29 ?
                              (&reg37) : $unsigned(reg42)) : $signed((wire29 ?
                              reg42 : reg44))) : (($signed(reg44) ?
                              $signed(wire31) : (wire32 ? reg42 : reg45)) ?
                          ($signed(wire47) ?
                              (reg37 < reg46) : wire29) : reg45));
  assign wire49 = $unsigned((((-reg41) << (wire31 ? (8'ha8) : wire33)) ?
                      (reg43[(1'h1):(1'h0)] != (~&reg41)) : wire35[(4'hb):(3'h4)]));
  assign wire50 = {($signed({wire31}) ?
                          ((reg37 <= wire48) == $signed(reg45)) : (+$signed(reg41)))};
  always
    @(posedge clk) begin
      reg51 <= $signed(reg45);
      reg52 <= {(wire30[(2'h2):(1'h0)] < wire35[(4'hb):(4'hb)])};
      reg53 <= (^~$unsigned($signed((~^reg43))));
    end
  assign wire54 = reg43[(1'h0):(1'h0)];
  assign wire55 = (8'ha3);
endmodule