(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param76 = ((8'h9f) ? (^~{((8'hae) <<< (8'hb0))}) : (((+(8'hab)) <<< (8'ha3)) & ((+(8'ha5)) ? ((8'ha6) ? (8'had) : (8'ha5)) : (&(8'hac))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire74;
  wire signed [(3'h6):(1'h0)] wire73;
  wire [(4'hb):(1'h0)] wire72;
  wire signed [(4'h9):(1'h0)] wire71;
  wire [(3'h7):(1'h0)] wire70;
  wire [(3'h7):(1'h0)] wire68;
  assign y = {wire74, wire73, wire72, wire71, wire70, wire68, (1'h0)};
  module4 #() modinst69 (wire68, clk, wire0, wire3, wire1, wire2);
  assign wire70 = ($signed(wire68[(3'h7):(2'h3)]) ~^ (~wire0[(4'h9):(3'h4)]));
  assign wire71 = (8'ha1);
  assign wire72 = (~|wire70[(2'h2):(2'h2)]);
  assign wire73 = ($unsigned($unsigned((-wire2))) - $signed(wire68));
  module31 #() modinst75 (wire74, clk, wire72, wire0, wire70, wire73);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h74):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire5;
  input wire [(4'hb):(1'h0)] wire6;
  input wire [(4'h8):(1'h0)] wire7;
  input wire [(4'hb):(1'h0)] wire8;
  wire signed [(3'h4):(1'h0)] wire67;
  wire [(4'ha):(1'h0)] wire9;
  wire [(4'hb):(1'h0)] wire10;
  wire signed [(3'h6):(1'h0)] wire28;
  wire [(2'h2):(1'h0)] wire30;
  wire signed [(4'h9):(1'h0)] wire53;
  wire signed [(4'hb):(1'h0)] wire60;
  wire [(4'h9):(1'h0)] wire61;
  wire signed [(3'h7):(1'h0)] wire62;
  wire [(4'hb):(1'h0)] wire63;
  wire signed [(4'h9):(1'h0)] wire65;
  reg signed [(4'hb):(1'h0)] reg55 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg56 = (1'h0);
  reg [(2'h2):(1'h0)] reg57 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg58 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg59 = (1'h0);
  reg [(3'h6):(1'h0)] reg64 = (1'h0);
  assign y = {wire67,
                 wire9,
                 wire10,
                 wire28,
                 wire30,
                 wire53,
                 wire60,
                 wire61,
                 wire62,
                 wire63,
                 wire65,
                 reg55,
                 reg56,
                 reg57,
                 reg58,
                 reg59,
                 reg64,
                 (1'h0)};
  assign wire9 = wire7[(2'h3):(1'h1)];
  assign wire10 = (^~{(^~$unsigned(wire5))});
  module11 #() modinst29 (.wire13(wire8), .wire15(wire10), .y(wire28), .wire12(wire6), .wire14(wire9), .clk(clk));
  assign wire30 = wire6[(1'h0):(1'h0)];
  module31 #() modinst54 (.y(wire53), .wire32(wire28), .clk(clk), .wire35(wire10), .wire34(wire6), .wire33(wire9));
  always
    @(posedge clk) begin
      reg55 <= {($unsigned($signed(wire8)) <= ($unsigned(wire7) + (wire8 ?
              wire8 : (8'ha5))))};
      if (($signed($signed((|wire8))) ?
          (8'h9c) : (((wire7 < (8'ha7)) >> (wire8 == wire6)) > $unsigned((wire8 && wire10)))))
        begin
          reg56 <= wire53;
          reg57 <= (wire28 + $unsigned((wire5 ?
              $unsigned(reg56) : (reg55 ? wire8 : wire9))));
          reg58 <= (+$signed((~reg57)));
        end
      else
        begin
          reg56 <= wire53;
          reg57 <= wire9[(1'h1):(1'h1)];
        end
      reg59 <= (^$unsigned($signed(reg58)));
    end
  assign wire60 = $unsigned(((8'h9c) ?
                      (!{(8'ha1)}) : ((wire10 ?
                          reg59 : wire53) >> ((8'hb0) | reg56))));
  assign wire61 = $unsigned((~^$unsigned(reg58[(1'h1):(1'h0)])));
  assign wire62 = {wire28[(3'h6):(3'h6)]};
  assign wire63 = $unsigned(wire9);
  always
    @(posedge clk) begin
      reg64 <= wire30[(1'h1):(1'h1)];
    end
  module11 #() modinst66 (wire65, clk, wire53, wire5, reg55, wire60);
  assign wire67 = $unsigned((^wire61[(3'h5):(3'h5)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module31  (y, clk, wire35, wire34, wire33, wire32);
  output wire [(32'h64):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire35;
  input wire [(2'h2):(1'h0)] wire34;
  input wire signed [(3'h7):(1'h0)] wire33;
  input wire [(3'h6):(1'h0)] wire32;
  wire [(3'h4):(1'h0)] wire52;
  wire signed [(3'h4):(1'h0)] wire51;
  wire [(2'h2):(1'h0)] wire50;
  wire signed [(2'h3):(1'h0)] wire49;
  wire signed [(3'h7):(1'h0)] wire41;
  wire signed [(2'h3):(1'h0)] wire40;
  wire signed [(4'ha):(1'h0)] wire39;
  wire [(4'ha):(1'h0)] wire38;
  wire [(4'hb):(1'h0)] wire36;
  reg signed [(3'h6):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg44 = (1'h0);
  reg [(2'h3):(1'h0)] reg43 = (1'h0);
  reg [(3'h7):(1'h0)] reg42 = (1'h0);
  reg [(3'h6):(1'h0)] reg37 = (1'h0);
  assign y = {wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire36,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg37,
                 (1'h0)};
  assign wire36 = ($unsigned(wire33[(1'h0):(1'h0)]) ?
                      $unsigned($signed($unsigned(wire33))) : wire32[(2'h2):(2'h2)]);
  always
    @(posedge clk) begin
      reg37 <= {$signed($signed($signed(wire34)))};
    end
  assign wire38 = (($signed($unsigned((8'ha9))) ? wire36 : {wire36}) ?
                      ({wire34} ?
                          $signed($unsigned((8'ha2))) : (~&{wire36})) : (^((~reg37) | wire36[(1'h0):(1'h0)])));
  assign wire39 = reg37;
  assign wire40 = ($unsigned(wire38) ?
                      wire36[(3'h6):(1'h0)] : $unsigned($signed(wire33[(3'h5):(2'h2)])));
  assign wire41 = $signed(wire34[(2'h2):(1'h1)]);
  always
    @(posedge clk) begin
      reg42 <= wire34;
      if ({($unsigned((^wire41)) >= $signed(wire32))})
        begin
          reg43 <= $unsigned($unsigned($unsigned(wire38)));
          reg44 <= (wire41 != (wire39 < wire38[(3'h5):(3'h5)]));
        end
      else
        begin
          reg43 <= $signed(($signed($unsigned(reg43)) & $unsigned($signed((8'ha4)))));
          reg44 <= wire38[(3'h5):(1'h0)];
          if ((((8'ha8) == $unsigned(wire38)) ?
              (((~wire34) * (~&wire39)) ?
                  (8'h9f) : ((-wire35) <<< reg42)) : wire40[(1'h0):(1'h0)]))
            begin
              reg45 <= wire35[(4'ha):(3'h5)];
            end
          else
            begin
              reg45 <= (-(^~($unsigned(wire35) && (reg45 ? reg43 : reg37))));
              reg46 <= $unsigned((((&reg42) >> $signed(reg45)) >>> ((wire35 ?
                      wire41 : wire39) ?
                  wire33[(2'h2):(2'h2)] : $signed(reg42))));
              reg47 <= (&wire41);
            end
        end
      reg48 <= $unsigned(($signed(wire38[(3'h7):(2'h2)]) >>> $signed((wire35 ?
          wire32 : (8'h9f)))));
    end
  assign wire49 = wire36[(3'h4):(2'h3)];
  assign wire50 = {{$signed(((8'ha3) << (8'h9c)))}};
  assign wire51 = reg42[(3'h4):(1'h1)];
  assign wire52 = {(&(wire35 ~^ (wire32 ? reg37 : reg44)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param27 = ((((!(8'ha1)) * (~&(8'ha3))) ? (|((8'ha0) != (8'ha8))) : ((8'haa) == (&(8'hac)))) >= (({(8'haf)} ? ((8'hb0) ^ (8'ha5)) : (|(8'ha0))) | {(&(8'ha6))})))
(y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h57):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire15;
  input wire [(4'ha):(1'h0)] wire14;
  input wire [(2'h3):(1'h0)] wire13;
  input wire signed [(4'hb):(1'h0)] wire12;
  wire signed [(3'h6):(1'h0)] wire25;
  wire [(4'h8):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  wire signed [(2'h2):(1'h0)] wire22;
  wire [(4'h8):(1'h0)] wire18;
  wire [(4'hb):(1'h0)] wire17;
  wire signed [(2'h2):(1'h0)] wire16;
  reg signed [(4'h9):(1'h0)] reg26 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg21 = (1'h0);
  reg [(4'hb):(1'h0)] reg20 = (1'h0);
  reg [(4'ha):(1'h0)] reg19 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire18,
                 wire17,
                 wire16,
                 reg26,
                 reg21,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire16 = $unsigned((~^((wire14 ?
                      (8'h9f) : wire14) || (wire15 > wire13))));
  assign wire17 = (^$unsigned(((8'ha0) >> (|wire15))));
  assign wire18 = wire15;
  always
    @(posedge clk) begin
      reg19 <= ($unsigned($unsigned(wire16)) ?
          (!wire14[(4'ha):(2'h2)]) : {$signed({(8'ha6)})});
      reg20 <= (+wire13[(1'h1):(1'h1)]);
      reg21 <= wire15;
    end
  assign wire22 = ($signed({{(8'ha7)}}) ?
                      {(|wire12[(3'h7):(1'h0)])} : ($unsigned((+(8'ha3))) & $unsigned(reg20[(3'h5):(3'h5)])));
  assign wire23 = $unsigned($unsigned(wire16));
  assign wire24 = $signed(($signed((-wire23)) ?
                      $unsigned(wire15[(2'h3):(2'h3)]) : ($signed(wire14) ?
                          wire15 : ((8'ha0) ? wire13 : wire12))));
  assign wire25 = ((-{(wire16 < wire22)}) ?
                      (~&$signed((wire14 ?
                          wire22 : (8'ha4)))) : $unsigned(wire17[(1'h0):(1'h0)]));
  always
    @(posedge clk) begin
      reg26 <= reg20[(1'h1):(1'h1)];
    end
endmodule