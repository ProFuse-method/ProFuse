(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param17 = ((&({(8'ha2)} ? ((8'ha3) ? (8'haf) : (8'h9c)) : {(8'ha3)})) + (8'ha1)))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h66):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(3'h5):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire15;
  wire signed [(3'h5):(1'h0)] wire12;
  wire [(4'hb):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg14 = (1'h0);
  reg [(4'h8):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg11 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg6 = (1'h0);
  assign y = {wire16,
                 wire15,
                 wire12,
                 wire5,
                 wire4,
                 reg14,
                 reg13,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = wire2[(3'h7):(3'h6)];
  assign wire5 = (wire3[(1'h1):(1'h0)] ?
                     {{wire4[(2'h3):(2'h3)]}} : {(wire1 >>> (wire0 < wire0))});
  always
    @(posedge clk) begin
      reg6 <= wire3[(1'h1):(1'h1)];
      reg7 <= (~&wire5[(4'h9):(2'h3)]);
    end
  always
    @(posedge clk) begin
      if ($unsigned($unsigned($unsigned((&reg7)))))
        begin
          if (reg7)
            begin
              reg8 <= $signed({$signed($signed(reg6))});
              reg9 <= $signed($signed((wire5 ?
                  (~^(8'h9c)) : ((8'ha5) ? reg7 : wire5))));
              reg10 <= ($unsigned(((~|(8'haa)) ?
                  reg6 : $unsigned(reg7))) ^~ wire0);
            end
          else
            begin
              reg8 <= wire4[(1'h0):(1'h0)];
              reg9 <= reg9[(1'h1):(1'h1)];
              reg10 <= reg7;
            end
          reg11 <= {$unsigned($unsigned(reg7[(2'h3):(1'h1)]))};
        end
      else
        begin
          if ($signed(($unsigned(reg10) ? {$unsigned(wire2)} : {(~^(8'hab))})))
            begin
              reg8 <= {{({(8'ha2)} - (wire3 ? reg10 : (8'hac)))}};
            end
          else
            begin
              reg8 <= $signed(wire4);
              reg9 <= {{{(~^wire3)}}};
            end
        end
    end
  assign wire12 = reg9;
  always
    @(posedge clk) begin
      reg13 <= $signed((reg8[(3'h6):(3'h6)] == $signed(wire1)));
      reg14 <= ($unsigned(((reg7 * wire4) ? {wire4} : (reg11 == (8'haa)))) ?
          $unsigned({$signed(wire2)}) : wire4);
    end
  assign wire15 = (-(~^(reg10 ? (wire1 - wire2) : $signed(reg10))));
  assign wire16 = ({reg7} ?
                      $unsigned($unsigned({reg13})) : (~|$signed((wire1 >> wire5))));
endmodule