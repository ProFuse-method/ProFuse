(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire33;
  wire signed [(4'hb):(1'h0)] wire32;
  wire [(4'h8):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire4;
  assign y = {wire35, wire33, wire32, wire31, wire29, wire4, (1'h0)};
  assign wire4 = wire0;
  module5 #() modinst30 (wire29, clk, wire3, wire0, wire2, wire1);
  assign wire31 = $unsigned(wire0);
  assign wire32 = ($unsigned(($unsigned(wire2) ?
                          wire3[(3'h4):(3'h4)] : (wire1 ? (8'hae) : wire31))) ?
                      {wire4} : $signed((8'h9d)));
  module12 #() modinst34 (.wire13(wire1), .clk(clk), .wire16(wire32), .y(wire33), .wire15(wire2), .wire14(wire29));
  assign wire35 = ((!(+wire31[(3'h5):(2'h2)])) + ($unsigned(((8'ha0) >>> wire1)) >>> (wire0 > $signed(wire33))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param28 = {{({(8'ha7)} && ((8'h9e) ? (8'ha2) : (8'h9c)))}})
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h1a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire9;
  input wire signed [(4'h8):(1'h0)] wire8;
  input wire [(4'h8):(1'h0)] wire7;
  input wire [(3'h6):(1'h0)] wire6;
  wire signed [(2'h2):(1'h0)] wire27;
  wire [(3'h5):(1'h0)] wire25;
  wire [(4'h9):(1'h0)] wire11;
  wire signed [(4'h9):(1'h0)] wire10;
  assign y = {wire27, wire25, wire11, wire10, (1'h0)};
  assign wire10 = $unsigned($signed($unsigned({(8'h9f)})));
  assign wire11 = ($signed(((!wire9) == $unsigned((8'ha4)))) ?
                      ($unsigned((wire7 && wire6)) ?
                          wire6[(3'h4):(1'h0)] : $signed((wire10 ?
                              (8'haf) : wire6))) : wire7[(4'h8):(3'h7)]);
  module12 #() modinst26 (wire25, clk, wire11, wire9, wire10, wire6);
  assign wire27 = $unsigned($unsigned(((wire7 & wire7) ? (!wire11) : (8'ha3))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h2a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire16;
  input wire signed [(2'h2):(1'h0)] wire15;
  input wire [(2'h3):(1'h0)] wire14;
  input wire [(3'h6):(1'h0)] wire13;
  wire [(3'h4):(1'h0)] wire22;
  wire [(2'h2):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  wire signed [(3'h6):(1'h0)] wire19;
  wire [(3'h5):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire17;
  reg [(3'h4):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg23 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 reg24,
                 reg23,
                 (1'h0)};
  assign wire17 = ({(wire16 ? ((8'ha2) + wire16) : (~&wire13))} ?
                      ($signed((!wire14)) ?
                          wire16[(4'h8):(2'h3)] : (^$unsigned(wire13))) : ({((8'ha5) ?
                                  wire13 : wire13)} ?
                          $signed((&wire16)) : (~(~&wire13))));
  assign wire18 = $unsigned(wire15);
  assign wire19 = ($signed((-wire18)) >= (-wire18));
  assign wire20 = $signed(((~|(~wire17)) ?
                      ((wire13 < wire15) >= {wire15}) : ($signed(wire18) ~^ (wire14 ?
                          wire19 : wire13))));
  assign wire21 = wire17;
  assign wire22 = $signed($unsigned(wire17[(4'h9):(3'h5)]));
  always
    @(posedge clk) begin
      reg23 <= (((8'ha3) ? $signed((wire14 ~^ wire19)) : (~^$signed(wire16))) ?
          $signed({$unsigned(wire21)}) : $unsigned((wire18[(1'h0):(1'h0)] << (~&wire20))));
      reg24 <= reg23;
    end
endmodule