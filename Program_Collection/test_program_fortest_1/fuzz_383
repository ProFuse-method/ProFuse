(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param77 = (((((8'hab) && (8'ha6)) - ((8'h9f) != (8'h9f))) ? (~^((8'h9c) ? (8'ha4) : (8'ha7))) : {{(8'ha2)}}) ? {(((8'had) ~^ (8'hae)) ? ((8'haf) * (8'hab)) : {(8'h9c)})} : ((^~((8'hb0) + (8'hab))) ? {((8'ha0) ? (8'ha5) : (8'haf))} : ((&(8'haa)) ? ((8'haf) ? (8'ha0) : (8'ha5)) : ((8'ha9) == (8'ha3))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h8b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire0;
  input wire [(3'h7):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire3;
  wire [(4'h8):(1'h0)] wire76;
  wire signed [(4'h8):(1'h0)] wire75;
  wire signed [(3'h5):(1'h0)] wire74;
  wire [(3'h5):(1'h0)] wire73;
  wire [(3'h5):(1'h0)] wire72;
  wire signed [(3'h7):(1'h0)] wire71;
  wire [(4'ha):(1'h0)] wire68;
  wire [(4'ha):(1'h0)] wire9;
  wire signed [(4'hb):(1'h0)] wire24;
  reg signed [(2'h3):(1'h0)] reg70 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg4 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg5 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg6 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg7 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg8 = (1'h0);
  reg [(4'ha):(1'h0)] reg10 = (1'h0);
  reg [(2'h3):(1'h0)] reg11 = (1'h0);
  reg [(4'ha):(1'h0)] reg12 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg13 = (1'h0);
  reg [(4'ha):(1'h0)] reg14 = (1'h0);
  assign y = {wire76,
                 wire75,
                 wire74,
                 wire73,
                 wire72,
                 wire71,
                 wire68,
                 wire9,
                 wire24,
                 reg70,
                 reg4,
                 reg5,
                 reg6,
                 reg7,
                 reg8,
                 reg10,
                 reg11,
                 reg12,
                 reg13,
                 reg14,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire3)
        begin
          reg4 <= ((($unsigned(wire1) ? $unsigned((8'hae)) : (~|wire2)) ?
              $unsigned(wire0[(2'h3):(2'h2)]) : wire2[(2'h2):(1'h1)]) ~^ (wire2[(1'h0):(1'h0)] ?
              $unsigned((wire0 || wire3)) : ((wire1 ? wire3 : wire1) ?
                  (wire0 - (8'ha0)) : (wire0 ^~ wire1))));
        end
      else
        begin
          if ({$signed($unsigned($signed(wire0)))})
            begin
              reg4 <= wire0[(2'h3):(2'h3)];
            end
          else
            begin
              reg4 <= ((8'ha5) ?
                  (wire2 >> wire1[(2'h2):(1'h0)]) : ((~|(^wire1)) ?
                      ((reg4 ? wire0 : reg4) ?
                          wire3[(1'h0):(1'h0)] : $unsigned(wire0)) : $signed((+(8'ha8)))));
            end
          reg5 <= reg4;
          reg6 <= $signed($unsigned(wire2));
        end
      reg7 <= ((^~wire0) ?
          ($unsigned((+wire3)) ? wire1 : $unsigned($signed(wire2))) : wire1);
      reg8 <= $unsigned((+((8'ha1) ^~ reg7[(2'h3):(2'h2)])));
    end
  assign wire9 = $signed({$signed($unsigned(reg8))});
  always
    @(posedge clk) begin
      reg10 <= {reg8[(1'h1):(1'h0)]};
      if (reg7[(1'h1):(1'h1)])
        begin
          reg11 <= {$unsigned(reg5[(3'h7):(1'h0)])};
        end
      else
        begin
          reg11 <= wire3[(2'h2):(2'h2)];
          reg12 <= ({wire2} <= (wire0 * (wire3 >> reg5)));
          reg13 <= (8'ha1);
        end
      reg14 <= ((($unsigned(wire1) ? (~|wire3) : (&reg8)) >>> $signed((wire3 ?
              wire1 : wire1))) ?
          reg4 : reg11[(1'h0):(1'h0)]);
    end
  module15 #() modinst25 (.clk(clk), .wire19(reg5), .wire17(reg14), .wire16(wire2), .wire18(reg10), .y(wire24));
  module26 #() modinst69 (.wire27(wire24), .wire30(reg8), .clk(clk), .wire29(reg14), .y(wire68), .wire28(wire9));
  always
    @(posedge clk) begin
      reg70 <= reg10;
    end
  assign wire71 = reg5[(2'h2):(2'h2)];
  assign wire72 = {$signed(reg8[(1'h1):(1'h1)])};
  assign wire73 = {{{$unsigned((8'hb0))}}};
  assign wire74 = reg4;
  assign wire75 = reg10;
  assign wire76 = $signed({wire9[(3'h7):(2'h2)]});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module26
#(parameter param67 = ((-(((8'h9e) >> (8'ha1)) + ((8'haa) ? (8'hae) : (8'ha3)))) >> (({(8'ha7)} ? ((8'ha4) == (8'ha4)) : ((8'h9c) & (8'ha5))) | (|((8'h9e) > (8'ha9))))))
(y, clk, wire30, wire29, wire28, wire27);
  output wire [(32'h77):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire30;
  input wire signed [(4'ha):(1'h0)] wire29;
  input wire signed [(4'ha):(1'h0)] wire28;
  input wire signed [(4'ha):(1'h0)] wire27;
  wire signed [(3'h4):(1'h0)] wire66;
  wire [(3'h5):(1'h0)] wire65;
  wire [(4'h9):(1'h0)] wire64;
  wire [(3'h7):(1'h0)] wire63;
  wire signed [(4'h8):(1'h0)] wire62;
  wire signed [(4'h9):(1'h0)] wire60;
  wire [(4'hb):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire37;
  wire signed [(4'hb):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire35;
  wire signed [(4'h8):(1'h0)] wire31;
  reg signed [(3'h6):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg34 = (1'h0);
  reg [(4'ha):(1'h0)] reg33 = (1'h0);
  reg [(3'h6):(1'h0)] reg32 = (1'h0);
  assign y = {wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire60,
                 wire39,
                 wire37,
                 wire36,
                 wire35,
                 wire31,
                 reg38,
                 reg34,
                 reg33,
                 reg32,
                 (1'h0)};
  assign wire31 = ($signed(wire27) ?
                      $signed($signed({wire28})) : {$signed(wire29)});
  always
    @(posedge clk) begin
      reg32 <= (!$signed(wire31[(2'h3):(2'h2)]));
      reg33 <= (^$unsigned(wire28[(3'h6):(3'h4)]));
      reg34 <= ((|(+wire29)) - (wire30[(1'h0):(1'h0)] < $signed((~^wire28))));
    end
  assign wire35 = (^wire27[(1'h0):(1'h0)]);
  assign wire36 = reg34[(3'h5):(1'h0)];
  assign wire37 = wire35;
  always
    @(posedge clk) begin
      reg38 <= wire37;
    end
  assign wire39 = (wire28[(4'h8):(3'h6)] >= {{(wire28 ? reg32 : wire30)}});
  module40 #() modinst61 (wire60, clk, reg32, wire39, wire27, reg34);
  assign wire62 = wire39[(3'h6):(3'h4)];
  assign wire63 = $signed($signed(wire60));
  assign wire64 = wire36;
  assign wire65 = ((+$unsigned((wire31 ^~ wire60))) - (8'haa));
  assign wire66 = (wire30[(2'h2):(1'h1)] - {(wire62[(3'h7):(1'h0)] ?
                          wire64 : reg38[(3'h5):(3'h4)])});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15  (y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h1f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire19;
  input wire signed [(4'ha):(1'h0)] wire18;
  input wire signed [(3'h4):(1'h0)] wire17;
  input wire [(3'h6):(1'h0)] wire16;
  wire [(4'hb):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire22;
  wire [(2'h3):(1'h0)] wire21;
  wire [(3'h5):(1'h0)] wire20;
  assign y = {wire23, wire22, wire21, wire20, (1'h0)};
  assign wire20 = (({(wire19 ^ wire18)} ?
                          wire16 : ((+wire16) << (wire18 >>> wire18))) ?
                      ($signed({(8'h9f)}) ?
                          $signed({wire17}) : (8'h9d)) : $signed((~{wire19})));
  assign wire21 = (~|($signed((-wire16)) <<< (~&{wire20})));
  assign wire22 = wire21[(2'h3):(2'h3)];
  assign wire23 = $unsigned($unsigned({(wire22 > wire21)}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module40
#(parameter param59 = ({{((8'ha0) ^ (8'ha8))}} ^ (((-(8'ha3)) ? {(8'h9c)} : {(8'ha0)}) * (((8'had) ? (8'haf) : (8'ha3)) ? {(8'ha7)} : {(8'ha7)}))))
(y, clk, wire44, wire43, wire42, wire41);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire44;
  input wire signed [(3'h5):(1'h0)] wire43;
  input wire [(4'ha):(1'h0)] wire42;
  input wire signed [(4'h8):(1'h0)] wire41;
  wire [(2'h3):(1'h0)] wire57;
  wire signed [(4'h9):(1'h0)] wire55;
  wire signed [(3'h7):(1'h0)] wire54;
  wire signed [(3'h7):(1'h0)] wire53;
  wire signed [(3'h6):(1'h0)] wire45;
  reg [(3'h7):(1'h0)] reg58 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg52 = (1'h0);
  reg [(3'h6):(1'h0)] reg51 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg50 = (1'h0);
  reg [(4'ha):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  reg [(3'h7):(1'h0)] reg47 = (1'h0);
  reg [(3'h5):(1'h0)] reg46 = (1'h0);
  assign y = {wire57,
                 wire55,
                 wire54,
                 wire53,
                 wire45,
                 reg58,
                 reg56,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 (1'h0)};
  assign wire45 = ($signed($signed($unsigned(wire43))) ?
                      wire43[(1'h0):(1'h0)] : (^~$signed((wire44 ?
                          wire44 : wire43))));
  always
    @(posedge clk) begin
      reg46 <= {(wire44 << (-(~&wire44)))};
    end
  always
    @(posedge clk) begin
      reg47 <= $signed(({wire41[(4'h8):(1'h1)]} ?
          ($unsigned(wire45) <= $signed(wire44)) : wire43[(1'h1):(1'h0)]));
      if ({(^(+{reg46}))})
        begin
          reg48 <= (($unsigned((reg47 ? (8'ha2) : reg46)) ?
                  ($signed(wire41) ?
                      (!(8'ha5)) : $unsigned((8'hac))) : (~^(wire44 ?
                      wire45 : wire44))) ?
              (reg46 ^~ wire42[(2'h2):(2'h2)]) : reg47);
          reg49 <= (wire45 & reg48[(2'h2):(2'h2)]);
          reg50 <= (~^$signed((wire44 ^ $signed(reg47))));
        end
      else
        begin
          if ($unsigned($signed((((8'haf) ?
              wire45 : (8'h9e)) ^ $signed((8'ha6))))))
            begin
              reg48 <= (((reg48 - $unsigned(reg50)) ?
                      $signed(reg47[(2'h2):(2'h2)]) : {(^reg49)}) ?
                  wire42[(3'h5):(2'h2)] : {(|{reg49})});
            end
          else
            begin
              reg48 <= ((~&wire42[(2'h3):(2'h3)]) != (&wire41));
            end
          reg49 <= ($signed((8'h9d)) ?
              (~|((reg46 || reg48) ? (!wire42) : $signed((8'ha9)))) : (reg48 ?
                  reg48[(2'h3):(2'h3)] : {(~&reg48)}));
          if (($signed(wire42[(3'h4):(1'h0)]) ?
              reg49[(4'h8):(3'h5)] : ((|(reg47 ? (8'ha8) : reg48)) ?
                  wire42[(3'h5):(3'h4)] : $signed($unsigned(wire42)))))
            begin
              reg50 <= $signed({($signed(reg48) * (wire45 ? wire41 : reg50))});
              reg51 <= reg49[(4'ha):(3'h6)];
              reg52 <= {({wire43[(2'h2):(2'h2)]} <<< $signed($unsigned(wire45)))};
            end
          else
            begin
              reg50 <= ((reg49 == (+wire45)) >>> reg52);
            end
        end
    end
  assign wire53 = (({((8'h9f) ? wire43 : reg51)} ?
                      $signed(wire43[(2'h2):(1'h0)]) : $signed($signed(wire44))) & reg49[(4'h8):(3'h6)]);
  assign wire54 = (reg48 & (&$signed((^(8'ha4)))));
  assign wire55 = ($signed($signed((8'had))) ?
                      wire42[(3'h4):(1'h0)] : (($unsigned(wire43) ?
                          (8'hac) : (reg50 ? wire43 : reg47)) - wire42));
  always
    @(posedge clk) begin
      reg56 <= (~{reg46[(3'h5):(1'h0)]});
    end
  assign wire57 = (8'ha5);
  always
    @(posedge clk) begin
      reg58 <= (wire45 ? wire42[(4'h9):(4'h8)] : (reg48 && {$unsigned(reg48)}));
    end
endmodule