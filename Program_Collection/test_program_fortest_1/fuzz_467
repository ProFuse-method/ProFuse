(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h71):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire0;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire3;
  wire [(4'hb):(1'h0)] wire11;
  wire [(3'h5):(1'h0)] wire12;
  wire [(3'h5):(1'h0)] wire13;
  wire signed [(4'hb):(1'h0)] wire14;
  wire signed [(4'h8):(1'h0)] wire35;
  reg signed [(3'h6):(1'h0)] reg4 = (1'h0);
  reg [(4'hb):(1'h0)] reg5 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg6 = (1'h0);
  reg [(3'h4):(1'h0)] reg7 = (1'h0);
  reg [(4'h9):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg [(3'h5):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg16 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg19 = (1'h0);
  assign y = {wire11,
                 wire12,
                 wire13,
                 wire14,
                 wire35,
                 reg4,
                 reg5,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 reg15,
                 reg16,
                 reg17,
                 reg18,
                 reg19,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ((&wire2[(1'h1):(1'h0)]))
        begin
          reg4 <= (({$signed(wire1)} - wire0) ?
              ($signed(wire2) > $signed({wire0})) : $unsigned((wire3[(3'h7):(3'h4)] >> wire0)));
        end
      else
        begin
          reg4 <= ((+(wire1 > $unsigned(reg4))) ?
              wire1 : {(~^$unsigned(wire0))});
        end
      if ($signed(wire0))
        begin
          if ((($signed($unsigned(wire0)) ?
              (~&((8'had) ?
                  reg4 : wire1)) : (^$unsigned(wire3))) ~^ wire1[(3'h7):(1'h0)]))
            begin
              reg5 <= $signed(($signed((reg4 ?
                  (8'ha4) : wire0)) < $signed((wire2 ^ (8'ha4)))));
            end
          else
            begin
              reg5 <= (|wire0[(1'h0):(1'h0)]);
            end
          if (((((~&(8'h9d)) | $unsigned(wire3)) ?
                  wire3 : wire2[(2'h2):(1'h0)]) ?
              ((wire2[(3'h7):(2'h3)] ?
                  (&reg5) : ((8'ha3) < (8'h9c))) != $unsigned(wire3)) : $unsigned({(wire0 >> wire3)})))
            begin
              reg6 <= $signed(({wire3} || $signed((wire3 ~^ wire1))));
              reg7 <= (~|reg5[(2'h2):(1'h0)]);
              reg8 <= wire1;
            end
          else
            begin
              reg6 <= (wire1 ?
                  reg4[(1'h1):(1'h1)] : ($signed((wire1 ? (8'ha1) : wire2)) ?
                      $unsigned((reg8 ? reg4 : reg6)) : {((8'ha8) || reg7)}));
              reg7 <= (~^wire2[(4'h8):(3'h6)]);
            end
          reg9 <= reg8[(1'h0):(1'h0)];
        end
      else
        begin
          reg5 <= $signed($signed((reg9[(3'h6):(3'h6)] ?
              $unsigned(reg9) : (8'h9d))));
          reg6 <= (8'ha5);
        end
      reg10 <= ((((-wire0) ? {(8'hae)} : $signed(wire0)) ?
          (wire2 ^ reg5[(4'h9):(3'h4)]) : reg5) && ($signed((^~wire0)) ?
          (+wire3[(1'h0):(1'h0)]) : $unsigned((~reg8))));
    end
  assign wire11 = reg9[(2'h2):(2'h2)];
  assign wire12 = wire2;
  assign wire13 = wire2[(4'h8):(3'h6)];
  assign wire14 = (8'ha5);
  always
    @(posedge clk) begin
      if ((&$unsigned(wire1)))
        begin
          reg15 <= (&$unsigned(wire2));
        end
      else
        begin
          reg15 <= (~&(~|wire12[(1'h1):(1'h1)]));
          reg16 <= (((reg10[(1'h1):(1'h1)] ? reg7 : $unsigned(reg5)) ?
                  $signed((wire1 ? (8'hab) : wire3)) : reg15) ?
              reg10[(3'h4):(3'h4)] : $signed($signed((reg9 & wire14))));
          if ($signed(wire14[(3'h4):(1'h1)]))
            begin
              reg17 <= ((&wire11[(3'h7):(3'h6)]) ?
                  (($signed(wire0) ?
                      (reg16 | wire2) : wire14[(3'h5):(3'h4)]) << ((8'hae) ^ wire11)) : {$signed($signed(wire1))});
              reg18 <= wire12[(1'h0):(1'h0)];
              reg19 <= (~|(reg18[(1'h0):(1'h0)] == {reg15}));
            end
          else
            begin
              reg17 <= (((+$unsigned((8'ha0))) ?
                  {reg19} : ((wire13 >= reg18) || ((8'had) ?
                      reg6 : (8'h9e)))) <= reg4[(2'h2):(1'h1)]);
              reg18 <= ((~|{$unsigned(reg15)}) == (reg7[(3'h4):(3'h4)] ?
                  $unsigned(wire3[(3'h5):(2'h2)]) : ((~reg8) ?
                      wire12 : (!(8'ha5)))));
              reg19 <= wire1[(1'h0):(1'h0)];
            end
        end
    end
  module20 #() modinst36 (.wire21(wire12), .wire23(reg6), .wire22(wire2), .wire24(wire14), .clk(clk), .y(wire35));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20  (y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire24;
  input wire [(2'h3):(1'h0)] wire23;
  input wire [(4'h8):(1'h0)] wire22;
  input wire signed [(3'h5):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire34;
  wire [(3'h4):(1'h0)] wire33;
  wire [(3'h5):(1'h0)] wire32;
  wire [(4'ha):(1'h0)] wire31;
  wire signed [(4'ha):(1'h0)] wire30;
  wire signed [(4'h8):(1'h0)] wire29;
  wire signed [(4'ha):(1'h0)] wire28;
  reg signed [(3'h5):(1'h0)] reg27 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg26 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg25 = (1'h0);
  assign y = {wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 reg27,
                 reg26,
                 reg25,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg25 <= wire22[(4'h8):(2'h3)];
      reg26 <= ((&(wire24[(3'h7):(2'h2)] >>> wire22[(2'h2):(1'h1)])) ~^ wire24[(3'h6):(3'h6)]);
      reg27 <= {$signed($unsigned({(8'ha3)}))};
    end
  assign wire28 = (8'h9d);
  assign wire29 = $signed(wire24);
  assign wire30 = {wire24};
  assign wire31 = $unsigned($unsigned(wire21[(1'h0):(1'h0)]));
  assign wire32 = (^~(!$signed($unsigned(wire22))));
  assign wire33 = wire22[(3'h7):(1'h1)];
  assign wire34 = (($signed((wire33 >= wire23)) ?
                      ($signed(wire22) ?
                          wire24 : $signed((8'had))) : (+(wire32 ?
                          wire22 : (8'ha9)))) * ((~|wire22[(2'h2):(2'h2)]) ?
                      {$unsigned((8'h9f))} : (reg27[(3'h4):(3'h4)] ?
                          wire30[(4'h9):(4'h8)] : $unsigned(wire29))));
endmodule