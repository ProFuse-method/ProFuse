(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param23 = {(-(((8'h9e) ? (8'ha8) : (8'hb0)) || (&(8'ha9))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h38):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire22;
  wire signed [(4'h9):(1'h0)] wire21;
  wire [(4'h9):(1'h0)] wire20;
  wire [(3'h5):(1'h0)] wire18;
  wire signed [(4'hb):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  assign y = {wire22, wire21, wire20, wire18, wire5, wire4, (1'h0)};
  assign wire4 = $unsigned($signed({((8'haf) & wire0)}));
  assign wire5 = $unsigned({wire3[(1'h1):(1'h1)]});
  module6 #() modinst19 (wire18, clk, wire2, wire5, wire0, wire1);
  assign wire20 = wire1[(1'h0):(1'h0)];
  assign wire21 = wire4;
  assign wire22 = wire0;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param17 = (((~{(8'h9f)}) && (((8'h9c) + (8'hb0)) == ((8'ha2) ? (8'ha6) : (8'ha8)))) < (-{((8'ha7) ? (8'ha6) : (8'h9f))})))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire10;
  input wire [(2'h3):(1'h0)] wire9;
  input wire [(2'h3):(1'h0)] wire8;
  input wire [(2'h2):(1'h0)] wire7;
  wire signed [(3'h5):(1'h0)] wire16;
  wire signed [(4'h9):(1'h0)] wire14;
  wire [(2'h3):(1'h0)] wire11;
  reg signed [(4'hb):(1'h0)] reg15 = (1'h0);
  reg [(3'h5):(1'h0)] reg13 = (1'h0);
  reg [(3'h4):(1'h0)] reg12 = (1'h0);
  assign y = {wire16, wire14, wire11, reg15, reg13, reg12, (1'h0)};
  assign wire11 = wire8[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg12 <= wire10[(1'h1):(1'h0)];
    end
  always
    @(posedge clk) begin
      reg13 <= {$signed((wire7[(1'h1):(1'h0)] && $unsigned(wire11)))};
    end
  assign wire14 = reg12[(3'h4):(2'h2)];
  always
    @(posedge clk) begin
      reg15 <= (8'haf);
    end
  assign wire16 = ((wire9 ?
                      ($signed(wire9) >> wire14[(2'h2):(1'h1)]) : (reg13 ?
                          wire9[(1'h0):(1'h0)] : (wire9 <<< wire8))) | reg12);
endmodule