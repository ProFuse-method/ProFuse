(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param48 = ((~|{((8'h9e) << (8'ha3))}) >>> ((8'ha3) != (8'ha6))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire47;
  wire [(3'h6):(1'h0)] wire46;
  wire signed [(3'h4):(1'h0)] wire45;
  wire signed [(3'h5):(1'h0)] wire39;
  wire signed [(4'h8):(1'h0)] wire38;
  wire [(3'h6):(1'h0)] wire37;
  wire [(3'h7):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire33;
  reg signed [(2'h3):(1'h0)] reg44 = (1'h0);
  reg [(3'h6):(1'h0)] reg43 = (1'h0);
  reg [(4'h8):(1'h0)] reg42 = (1'h0);
  reg [(4'ha):(1'h0)] reg41 = (1'h0);
  assign y = {wire47,
                 wire46,
                 wire45,
                 wire39,
                 wire38,
                 wire37,
                 wire35,
                 wire33,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 (1'h0)};
  module4 #() modinst34 (.wire5(wire3), .y(wire33), .wire6(wire2), .wire8(wire0), .wire7(wire1), .clk(clk));
  module16 #() modinst36 (wire35, clk, wire33, wire1, wire2, wire3);
  assign wire37 = (~(+(wire3[(1'h0):(1'h0)] ?
                      $signed(wire1) : ((8'ha5) ? wire1 : wire0))));
  assign wire38 = ({(8'ha7)} ?
                      $unsigned($unsigned((wire0 ?
                          wire33 : wire35))) : $signed(($unsigned(wire35) ?
                          $unsigned(wire35) : $unsigned(wire3))));
  module16 #() modinst40 (.clk(clk), .wire18(wire3), .wire19(wire38), .wire17(wire33), .y(wire39), .wire20(wire35));
  always
    @(posedge clk) begin
      if (($unsigned(wire3) <= (8'ha3)))
        begin
          reg41 <= wire39[(2'h3):(2'h2)];
          reg42 <= $unsigned(((wire37[(3'h5):(1'h0)] >> $signed(wire0)) >>> ($signed(wire37) <= $signed(wire0))));
        end
      else
        begin
          reg41 <= ((8'hb0) + wire3[(3'h6):(2'h3)]);
        end
      reg43 <= (-({{wire1}} * ((wire37 ? reg42 : wire3) << {wire39})));
      reg44 <= ({$unsigned(reg41[(1'h1):(1'h0)])} | ((~|(8'hae)) >= wire2[(4'h8):(3'h7)]));
    end
  assign wire45 = $unsigned((wire39[(1'h0):(1'h0)] <= $signed(reg41[(1'h1):(1'h1)])));
  assign wire46 = $unsigned((($unsigned(wire1) ?
                      (wire2 ?
                          wire0 : (8'ha6)) : (~^wire37)) <= $signed((wire3 | reg41))));
  assign wire47 = {(((~|wire0) ? wire45 : wire33) + ((wire2 ?
                          reg41 : wire37) & (wire1 | (8'ha9))))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param32 = (~&({{(8'h9d)}} ? (-((8'hb0) <= (8'ha0))) : ((~(8'hae)) >>> ((8'h9d) == (8'had))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h64):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire8;
  input wire signed [(4'h9):(1'h0)] wire7;
  input wire [(3'h6):(1'h0)] wire6;
  input wire signed [(3'h5):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire30;
  wire [(3'h6):(1'h0)] wire29;
  wire [(4'h8):(1'h0)] wire28;
  wire [(4'hb):(1'h0)] wire27;
  wire [(4'ha):(1'h0)] wire25;
  wire [(4'ha):(1'h0)] wire15;
  wire [(3'h5):(1'h0)] wire14;
  wire [(2'h2):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire12;
  wire [(2'h2):(1'h0)] wire11;
  wire signed [(4'h8):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire9;
  assign y = {wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire25,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 (1'h0)};
  assign wire9 = wire5[(3'h4):(3'h4)];
  assign wire10 = (!(wire7[(3'h7):(1'h1)] < (&wire6[(1'h1):(1'h1)])));
  assign wire11 = wire10[(1'h0):(1'h0)];
  assign wire12 = ($unsigned((|(wire5 ? wire8 : wire11))) ?
                      $unsigned(({wire7} ?
                          (^wire6) : (wire10 >> wire6))) : ($signed(wire7) && ((&wire7) == (^~wire9))));
  assign wire13 = wire12;
  assign wire14 = ($signed($signed((wire10 != wire9))) + {(wire5 ?
                          ((8'h9f) - wire9) : {wire10})});
  assign wire15 = (((~&wire10) ~^ ((8'ha8) ^ $unsigned((8'ha5)))) ?
                      (~^(wire7 ?
                          $unsigned((8'ha4)) : wire11[(2'h2):(2'h2)])) : ({$unsigned(wire6)} ?
                          {(wire12 >> wire6)} : wire7));
  module16 #() modinst26 (.wire20(wire6), .y(wire25), .wire17(wire9), .wire19(wire10), .clk(clk), .wire18(wire8));
  assign wire27 = $unsigned(((|$unsigned((8'h9f))) ?
                      $signed(((8'h9e) + wire7)) : $unsigned(wire6)));
  assign wire28 = $signed(($unsigned(wire14[(2'h2):(1'h1)]) <= wire25));
  assign wire29 = (8'ha0);
  assign wire30 = ($signed((wire8 ^ $unsigned(wire8))) ?
                      (!$signed(wire25[(2'h3):(2'h2)])) : wire28[(4'h8):(2'h2)]);
  assign wire31 = wire29;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h17):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire20;
  input wire signed [(4'h8):(1'h0)] wire19;
  input wire [(2'h3):(1'h0)] wire18;
  input wire signed [(4'h9):(1'h0)] wire17;
  wire signed [(3'h4):(1'h0)] wire24;
  wire [(3'h4):(1'h0)] wire23;
  wire [(3'h5):(1'h0)] wire22;
  wire [(4'h9):(1'h0)] wire21;
  assign y = {wire24, wire23, wire22, wire21, (1'h0)};
  assign wire21 = ($signed(((wire17 & wire20) ?
                      $signed(wire19) : (~^(8'h9d)))) <= $signed(wire17[(1'h1):(1'h1)]));
  assign wire22 = wire18;
  assign wire23 = wire19[(2'h2):(1'h0)];
  assign wire24 = (&(wire21 ?
                      ((~&wire20) ?
                          wire23 : $signed((8'h9d))) : (~|wire20[(3'h6):(2'h3)])));
endmodule