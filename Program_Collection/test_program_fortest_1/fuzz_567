(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param82 = (((~|((8'ha2) + (8'had))) | ({(8'haa)} ? (~|(8'ha8)) : (~^(8'ha2)))) ^~ ((~|((8'h9d) ? (8'h9c) : (8'ha3))) >= (((8'h9e) >= (8'ha8)) ? ((8'hab) ^ (8'hae)) : ((8'ha8) ? (8'h9e) : (8'ha1))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'hd6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire0;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire3;
  wire signed [(4'h8):(1'h0)] wire79;
  wire [(4'hb):(1'h0)] wire78;
  wire signed [(3'h7):(1'h0)] wire71;
  wire signed [(3'h5):(1'h0)] wire15;
  wire signed [(3'h4):(1'h0)] wire57;
  wire signed [(2'h3):(1'h0)] wire73;
  wire signed [(4'h8):(1'h0)] wire74;
  wire signed [(3'h4):(1'h0)] wire75;
  reg signed [(2'h3):(1'h0)] reg81 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg80 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg77 = (1'h0);
  reg [(4'h8):(1'h0)] reg70 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg69 = (1'h0);
  reg [(2'h2):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg67 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg66 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg65 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg64 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg63 = (1'h0);
  reg [(3'h4):(1'h0)] reg62 = (1'h0);
  reg [(2'h2):(1'h0)] reg61 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg60 = (1'h0);
  reg [(3'h5):(1'h0)] reg59 = (1'h0);
  reg [(4'h9):(1'h0)] reg4 = (1'h0);
  reg [(2'h2):(1'h0)] reg5 = (1'h0);
  reg [(3'h5):(1'h0)] reg6 = (1'h0);
  reg [(3'h6):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg9 = (1'h0);
  reg [(4'ha):(1'h0)] reg10 = (1'h0);
  reg [(3'h7):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg12 = (1'h0);
  reg [(4'h8):(1'h0)] reg13 = (1'h0);
  reg [(4'ha):(1'h0)] reg14 = (1'h0);
  assign y = {wire79,
                 wire78,
                 wire71,
                 wire15,
                 wire57,
                 wire73,
                 wire74,
                 wire75,
                 reg81,
                 reg80,
                 reg77,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 reg4,
                 reg5,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 reg11,
                 reg12,
                 reg13,
                 reg14,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire3[(3'h4):(1'h1)])
        begin
          reg4 <= $unsigned({(~|$signed(wire3))});
          if (wire2[(1'h0):(1'h0)])
            begin
              reg5 <= $signed(($signed($unsigned(wire2)) >>> (~&(reg4 ?
                  (8'h9c) : reg4))));
              reg6 <= ((~&$unsigned((wire2 << wire1))) ^~ {{(!wire0)}});
              reg7 <= (&$unsigned((~&$unsigned(wire1))));
            end
          else
            begin
              reg5 <= ((~wire1) * (reg4[(1'h0):(1'h0)] + reg4[(1'h0):(1'h0)]));
              reg6 <= wire0[(1'h1):(1'h0)];
              reg7 <= ((^~(8'ha6)) ? (8'ha8) : reg6[(2'h3):(2'h3)]);
            end
          reg8 <= ((~(!(!wire0))) ?
              (wire1 ?
                  $unsigned((~&(8'haf))) : $signed((~^(8'ha7)))) : $unsigned(reg6));
        end
      else
        begin
          reg4 <= (^~$unsigned({reg5}));
          reg5 <= ({$signed($unsigned(wire0))} ?
              $signed($unsigned((8'hac))) : $signed({$signed(wire0)}));
          if (reg6[(2'h3):(2'h3)])
            begin
              reg6 <= reg8[(1'h0):(1'h0)];
              reg7 <= wire0;
              reg8 <= ($signed(wire3) || wire1[(2'h2):(2'h2)]);
            end
          else
            begin
              reg6 <= wire1;
            end
        end
      if (($signed(reg7) >>> reg7))
        begin
          if ($signed((($unsigned(wire3) - $signed((8'h9f))) <= (8'ha2))))
            begin
              reg9 <= (($signed({reg6}) >> $unsigned($unsigned(reg7))) ?
                  wire3[(3'h4):(1'h1)] : $signed((+{reg4})));
              reg10 <= $unsigned(((~&(wire3 ?
                  reg9 : (8'ha5))) + ($unsigned(reg4) ?
                  (reg5 ? reg9 : (8'ha4)) : (reg6 != reg6))));
              reg11 <= wire3[(3'h5):(3'h4)];
            end
          else
            begin
              reg9 <= (~^wire0);
              reg10 <= reg4[(1'h0):(1'h0)];
              reg11 <= wire2[(3'h5):(3'h4)];
            end
          reg12 <= $signed($signed(((reg5 ? wire3 : (8'ha8)) | {reg5})));
          reg13 <= ((({wire3} < {reg8}) >= (&(~&(8'haf)))) ^~ reg9);
        end
      else
        begin
          reg9 <= $unsigned((({(8'h9d)} < (reg12 | reg7)) & ($signed(wire0) ?
              reg10[(1'h1):(1'h0)] : {reg12})));
        end
      reg14 <= ((($signed(reg6) - (reg5 || (8'haf))) ?
          ($unsigned(reg6) ?
              wire2[(2'h3):(2'h2)] : {reg12}) : reg7[(3'h6):(1'h1)]) >>> $unsigned({(+reg4)}));
    end
  assign wire15 = reg10[(3'h5):(2'h2)];
  module16 #() modinst58 (.clk(clk), .wire18(reg14), .wire19(reg9), .wire20(wire0), .y(wire57), .wire17(reg11));
  always
    @(posedge clk) begin
      if ($unsigned((((~|reg10) ? wire0[(3'h6):(3'h5)] : (!reg8)) ?
          ((reg12 >> wire0) + (reg6 ?
              reg11 : reg13)) : $signed($unsigned(wire0)))))
        begin
          if ({(({(8'ha4)} ?
                  wire15 : (~|wire2)) | $signed(wire15[(2'h2):(1'h1)]))})
            begin
              reg59 <= (wire0[(4'ha):(2'h2)] ?
                  reg9 : (~|(reg5[(1'h0):(1'h0)] ?
                      $signed(wire3) : wire57[(1'h1):(1'h1)])));
              reg60 <= reg11;
            end
          else
            begin
              reg59 <= $unsigned((reg60 || {(~(8'h9e))}));
            end
          if (wire1[(2'h2):(2'h2)])
            begin
              reg61 <= wire3[(2'h3):(2'h3)];
              reg62 <= $unsigned(reg13[(2'h3):(2'h2)]);
              reg63 <= $signed($unsigned(((wire0 != reg61) | reg8)));
            end
          else
            begin
              reg61 <= {$signed(($signed(reg10) ?
                      (reg62 <= reg59) : wire3[(1'h1):(1'h0)]))};
              reg62 <= ({reg59} | $signed((~^$unsigned(wire0))));
              reg63 <= reg13[(3'h4):(2'h2)];
            end
          if (reg10[(4'h9):(1'h1)])
            begin
              reg64 <= $unsigned(((reg4[(2'h3):(2'h2)] ?
                  $unsigned(reg6) : reg59) >= {$unsigned(wire3)}));
              reg65 <= ($signed((!reg5[(1'h0):(1'h0)])) ?
                  $unsigned(((reg5 ^ reg63) ?
                      (wire0 ?
                          (8'ha9) : wire1) : (reg64 <<< (8'h9d)))) : {(reg14 > $signed(reg8))});
              reg66 <= reg10[(2'h3):(2'h3)];
            end
          else
            begin
              reg64 <= reg10;
              reg65 <= (-reg4[(2'h3):(2'h3)]);
            end
        end
      else
        begin
          reg59 <= ((reg10[(2'h2):(1'h0)] >= (reg5[(1'h1):(1'h1)] - $signed(reg11))) ^~ $unsigned($signed((wire2 != (8'hb0)))));
          reg60 <= $unsigned(reg59);
        end
      reg67 <= (reg60[(4'h8):(2'h3)] ^~ $unsigned({reg7}));
      if (($signed($signed(reg63)) != $signed(($signed(reg7) ~^ {reg9}))))
        begin
          reg68 <= reg62[(3'h4):(1'h0)];
          if (reg5)
            begin
              reg69 <= (^($signed(reg68[(2'h2):(1'h1)]) + reg59));
            end
          else
            begin
              reg69 <= (~&reg4);
              reg70 <= (reg10 ?
                  $signed($signed((&reg5))) : ((~|$unsigned(wire3)) ?
                      $signed((reg14 ^ reg12)) : ($signed(wire15) == $signed(wire3))));
            end
        end
      else
        begin
          reg68 <= $unsigned(reg8[(1'h1):(1'h0)]);
          reg69 <= $unsigned((reg10 >> (wire1 == (&(8'haf)))));
          reg70 <= wire57[(3'h4):(1'h0)];
        end
    end
  module16 #() modinst72 (wire71, clk, reg10, reg4, wire2, reg65);
  assign wire73 = $signed($unsigned({{reg6}}));
  assign wire74 = (($signed(reg9) < ((reg4 ? reg64 : reg8) ?
                      reg68 : (|wire3))) <<< reg67);
  module21 #() modinst76 (wire75, clk, reg14, wire3, wire15, wire71);
  always
    @(posedge clk) begin
      reg77 <= ($unsigned(reg62) ? {wire74[(1'h0):(1'h0)]} : reg66);
    end
  assign wire78 = wire57[(2'h2):(1'h0)];
  assign wire79 = (&$unsigned(reg59[(1'h0):(1'h0)]));
  always
    @(posedge clk) begin
      reg80 <= $signed((!(~&(8'hb0))));
      reg81 <= $signed(reg80[(2'h3):(2'h2)]);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16
#(parameter param56 = (({((8'ha8) ? (8'h9d) : (8'haf))} + (~|(&(8'h9e)))) >>> (~|((+(8'ha6)) ? (~&(8'ha2)) : ((8'ha6) < (8'hac))))))
(y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h57):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire20;
  input wire [(4'h9):(1'h0)] wire19;
  input wire signed [(3'h6):(1'h0)] wire18;
  input wire signed [(3'h5):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire55;
  wire signed [(3'h4):(1'h0)] wire54;
  wire signed [(4'ha):(1'h0)] wire53;
  wire [(3'h7):(1'h0)] wire51;
  wire signed [(4'h8):(1'h0)] wire39;
  wire [(3'h6):(1'h0)] wire38;
  wire signed [(4'ha):(1'h0)] wire37;
  wire [(3'h6):(1'h0)] wire36;
  wire signed [(4'h8):(1'h0)] wire35;
  wire [(2'h3):(1'h0)] wire34;
  wire signed [(4'ha):(1'h0)] wire33;
  wire [(4'h9):(1'h0)] wire31;
  assign y = {wire55,
                 wire54,
                 wire53,
                 wire51,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire31,
                 (1'h0)};
  module21 #() modinst32 (wire31, clk, wire19, wire20, wire17, wire18);
  assign wire33 = $unsigned((^~wire17));
  assign wire34 = (~&wire18);
  assign wire35 = ((^((|wire17) ~^ $unsigned(wire17))) + wire34[(1'h0):(1'h0)]);
  assign wire36 = wire18[(2'h2):(1'h1)];
  assign wire37 = ($signed((8'hb0)) ? $signed({$unsigned(wire20)}) : (8'hab));
  assign wire38 = $signed(((wire20 ~^ (wire17 != wire36)) < $signed($signed(wire20))));
  assign wire39 = $unsigned(wire17[(3'h4):(2'h2)]);
  module40 #() modinst52 (.y(wire51), .wire44(wire39), .wire43(wire31), .wire41(wire33), .wire42(wire38), .clk(clk));
  assign wire53 = (wire38[(2'h3):(1'h0)] ?
                      $signed(wire19[(1'h1):(1'h1)]) : $signed(((8'ha1) ?
                          wire51[(3'h6):(2'h3)] : $signed(wire37))));
  assign wire54 = ($signed(wire35) ~^ (wire34 >= ($unsigned(wire33) ?
                      $unsigned(wire35) : $signed(wire34))));
  assign wire55 = {(8'ha4)};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module40
#(parameter param50 = (~(-{(~|(8'haf))})))
(y, clk, wire44, wire43, wire42, wire41);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire44;
  input wire signed [(3'h4):(1'h0)] wire43;
  input wire signed [(3'h6):(1'h0)] wire42;
  input wire signed [(3'h7):(1'h0)] wire41;
  wire signed [(3'h4):(1'h0)] wire49;
  wire [(3'h7):(1'h0)] wire48;
  wire signed [(4'h9):(1'h0)] wire47;
  wire [(3'h4):(1'h0)] wire46;
  wire [(4'hb):(1'h0)] wire45;
  assign y = {wire49, wire48, wire47, wire46, wire45, (1'h0)};
  assign wire45 = (~&(&$unsigned((~wire42))));
  assign wire46 = $signed(((~|(^wire42)) ?
                      ((~&wire41) ?
                          wire45 : (wire43 | wire41)) : ((&(8'haa)) << (wire44 ?
                          wire41 : wire43))));
  assign wire47 = (~&wire46[(3'h4):(2'h3)]);
  assign wire48 = (8'ha8);
  assign wire49 = $unsigned(($unsigned({wire41}) > $signed(wire43[(3'h4):(2'h2)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21
#(parameter param30 = {((8'h9f) ^~ {((8'ha6) <= (8'ha6))})})
(y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h1c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire25;
  input wire signed [(3'h6):(1'h0)] wire24;
  input wire [(2'h2):(1'h0)] wire23;
  input wire signed [(3'h6):(1'h0)] wire22;
  wire [(3'h6):(1'h0)] wire29;
  wire [(3'h6):(1'h0)] wire26;
  reg [(4'hb):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg27 = (1'h0);
  assign y = {wire29, wire26, reg28, reg27, (1'h0)};
  assign wire26 = {$unsigned(((wire24 ? wire25 : wire24) ?
                          $signed((8'ha7)) : (wire24 ? (8'ha3) : wire24)))};
  always
    @(posedge clk) begin
      reg27 <= wire26[(2'h2):(1'h0)];
    end
  always
    @(posedge clk) begin
      reg28 <= (&$unsigned($signed((wire25 <<< wire25))));
    end
  assign wire29 = wire22[(1'h0):(1'h0)];
endmodule