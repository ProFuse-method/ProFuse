(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param10 = ((-{{(8'hb0)}}) ? {(^{(8'ha2)})} : {((~^(8'h9e)) ? (~^(8'ha4)) : {(8'haf)})}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire9;
  wire signed [(4'ha):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire4;
  reg signed [(2'h2):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg7 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg6 = (1'h0);
  assign y = {wire9, wire5, wire4, reg8, reg7, reg6, (1'h0)};
  assign wire4 = (8'haa);
  assign wire5 = (((wire1 ? wire0 : $unsigned(wire3)) ~^ (wire4 ?
                         $unsigned((8'ha8)) : (wire0 == wire3))) ?
                     (~|(|$unsigned(wire0))) : (~^(+$signed(wire1))));
  always
    @(posedge clk) begin
      reg6 <= (+$signed($signed((wire1 && wire0))));
      reg7 <= $unsigned($signed((+$signed(wire5))));
      reg8 <= (wire2 * (wire2[(2'h2):(1'h0)] >> (~&reg7[(2'h3):(2'h2)])));
    end
  assign wire9 = reg8[(1'h1):(1'h0)];
endmodule