(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire3;
  wire signed [(4'h8):(1'h0)] wire48;
  wire signed [(4'hb):(1'h0)] wire4;
  wire signed [(3'h7):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire36;
  wire [(3'h5):(1'h0)] wire41;
  wire signed [(4'h9):(1'h0)] wire43;
  wire signed [(2'h3):(1'h0)] wire44;
  wire signed [(2'h2):(1'h0)] wire45;
  wire signed [(4'h8):(1'h0)] wire46;
  reg [(4'hb):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg39 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg40 = (1'h0);
  assign y = {wire48,
                 wire4,
                 wire5,
                 wire6,
                 wire36,
                 wire41,
                 wire43,
                 wire44,
                 wire45,
                 wire46,
                 reg38,
                 reg39,
                 reg40,
                 (1'h0)};
  assign wire4 = $unsigned((&$unsigned(wire2[(3'h4):(3'h4)])));
  assign wire5 = wire1[(4'h8):(2'h2)];
  assign wire6 = (~{{wire1[(1'h0):(1'h0)]}});
  module7 #() modinst37 (wire36, clk, wire2, wire0, wire3, wire4);
  always
    @(posedge clk) begin
      reg38 <= {wire2};
      reg39 <= {$unsigned((wire4 ? $unsigned(wire3) : $unsigned(wire0)))};
      reg40 <= $signed((wire3 ?
          ((wire3 | (8'ha1)) ?
              reg39 : wire6) : ({(8'had)} & $unsigned(wire6))));
    end
  module14 #() modinst42 (.wire17(reg38), .y(wire41), .wire18(reg40), .wire15(wire6), .wire16(wire0), .clk(clk));
  assign wire43 = ($signed(($unsigned(wire5) || (^~wire36))) ?
                      reg39[(2'h2):(1'h0)] : wire3[(4'hb):(2'h3)]);
  assign wire44 = $signed(wire1[(2'h2):(1'h1)]);
  assign wire45 = {$signed((8'h9d))};
  module7 #() modinst47 (wire46, clk, wire3, reg38, wire4, wire0);
  assign wire48 = {((8'had) ~^ $signed({(8'h9c)}))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param35 = ((8'h9e) <<< ((8'h9e) > (|{(8'h9c)}))))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h2b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire11;
  input wire [(4'h9):(1'h0)] wire10;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire signed [(4'hb):(1'h0)] wire8;
  wire signed [(4'hb):(1'h0)] wire34;
  wire signed [(3'h6):(1'h0)] wire33;
  wire signed [(2'h3):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire30;
  wire [(3'h7):(1'h0)] wire13;
  reg signed [(3'h7):(1'h0)] reg12 = (1'h0);
  assign y = {wire34, wire33, wire32, wire30, wire13, reg12, (1'h0)};
  always
    @(posedge clk) begin
      reg12 <= $unsigned((-(((8'haf) ? wire9 : wire10) & (-wire9))));
    end
  assign wire13 = (wire9 << ($unsigned((wire8 > reg12)) ?
                      ((wire11 << wire9) ?
                          reg12 : wire9) : $signed(wire10[(3'h7):(2'h2)])));
  module14 #() modinst31 (wire30, clk, wire8, wire10, wire11, wire9);
  assign wire32 = $unsigned(({(wire13 + wire8)} <= $unsigned($unsigned(wire8))));
  assign wire33 = reg12;
  assign wire34 = (wire32 > (~|wire30[(1'h1):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire18;
  input wire signed [(3'h7):(1'h0)] wire17;
  input wire [(4'h8):(1'h0)] wire16;
  input wire signed [(4'ha):(1'h0)] wire15;
  wire [(4'h8):(1'h0)] wire29;
  wire signed [(4'h9):(1'h0)] wire28;
  wire signed [(2'h2):(1'h0)] wire27;
  wire [(2'h3):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire22;
  wire signed [(4'ha):(1'h0)] wire21;
  wire [(3'h6):(1'h0)] wire20;
  wire signed [(2'h2):(1'h0)] wire19;
  reg signed [(4'h9):(1'h0)] reg25 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg23 = (1'h0);
  assign y = {wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 reg25,
                 reg24,
                 reg23,
                 (1'h0)};
  assign wire19 = (8'ha3);
  assign wire20 = (^~$signed((wire18[(2'h3):(2'h2)] >> {wire17})));
  assign wire21 = $unsigned(wire17);
  assign wire22 = (wire20[(2'h3):(1'h1)] ?
                      $signed((-$unsigned(wire18))) : {$signed((8'haf))});
  always
    @(posedge clk) begin
      if ({$signed(($unsigned(wire18) != $unsigned(wire22)))})
        begin
          if ($unsigned({(wire15[(3'h7):(1'h0)] ?
                  wire22[(3'h5):(3'h5)] : (wire21 ? wire19 : wire21))}))
            begin
              reg23 <= wire18[(4'h8):(1'h0)];
              reg24 <= ((8'ha8) ? (~|{$unsigned(wire17)}) : wire17);
            end
          else
            begin
              reg23 <= $unsigned((^~{(8'ha1)}));
            end
          reg25 <= ((wire20 ~^ {$unsigned(wire16)}) <<< $unsigned(($unsigned(wire21) ?
              wire17 : (8'ha7))));
        end
      else
        begin
          reg23 <= (wire16 * reg24[(2'h2):(1'h0)]);
          reg24 <= $unsigned((~$unsigned((wire18 == reg24))));
        end
    end
  assign wire26 = (wire17 ?
                      {$signed($unsigned(reg23))} : (reg24[(2'h3):(1'h1)] ~^ wire19));
  assign wire27 = (wire16[(4'h8):(4'h8)] ?
                      $signed($signed(wire22[(3'h6):(3'h6)])) : $signed({wire15}));
  assign wire28 = wire18;
  assign wire29 = (wire28 <<< ($unsigned(wire18[(2'h3):(1'h1)]) ?
                      $signed($signed(wire15)) : wire21));
endmodule