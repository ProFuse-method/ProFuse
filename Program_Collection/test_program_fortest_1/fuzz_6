(* use_dsp48="no" *) (* use_dsp="no" *) module top #(parameter param79 = (8'ha6)) (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h65):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(2'h3):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire78;
  wire signed [(2'h2):(1'h0)] wire77;
  wire signed [(4'ha):(1'h0)] wire76;
  wire signed [(4'h9):(1'h0)] wire75;
  wire [(2'h3):(1'h0)] wire73;
  wire [(3'h6):(1'h0)] wire13;
  wire signed [(2'h3):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire4;
  reg signed [(4'h8):(1'h0)] reg11 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg [(3'h4):(1'h0)] reg8 = (1'h0);
  reg [(3'h7):(1'h0)] reg7 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg6 = (1'h0);
  assign y = {wire78,
                 wire77,
                 wire76,
                 wire75,
                 wire73,
                 wire13,
                 wire12,
                 wire5,
                 wire4,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = ($unsigned((wire1 ?
                     $signed(wire3) : $unsigned(wire2))) && ((~|(+wire0)) ^~ {wire0}));
  assign wire5 = $signed((^~({wire3} ? (wire1 ~^ wire2) : (~wire1))));
  always
    @(posedge clk) begin
      if (wire3[(3'h5):(1'h1)])
        begin
          if ((wire0 ? $unsigned(wire3) : wire1[(1'h0):(1'h0)]))
            begin
              reg6 <= $signed($unsigned(wire2[(2'h2):(1'h1)]));
              reg7 <= $signed((^wire4));
              reg8 <= (-(wire1[(1'h1):(1'h1)] ?
                  $unsigned($signed((8'haa))) : {reg6[(3'h4):(3'h4)]}));
            end
          else
            begin
              reg6 <= ({(wire5[(3'h7):(1'h1)] ? (~^wire4) : $signed(reg7))} ?
                  wire4[(1'h1):(1'h0)] : ($unsigned((reg6 == reg8)) ?
                      $signed((reg7 ?
                          wire4 : reg8)) : $unsigned(wire4[(2'h3):(1'h1)])));
              reg7 <= wire5[(2'h2):(2'h2)];
            end
          reg9 <= wire5[(3'h4):(2'h2)];
        end
      else
        begin
          reg6 <= $signed((^(wire5[(3'h4):(2'h3)] ^ ((8'haf) & wire2))));
          reg7 <= ((reg9[(3'h5):(3'h5)] ? reg6 : wire5[(3'h7):(2'h2)]) ?
              wire2 : (8'h9f));
          reg8 <= reg7;
        end
      reg10 <= (($unsigned($unsigned(reg9)) ? {(wire2 - reg8)} : (8'h9f)) ?
          wire3 : ($signed(reg8) || (8'ha4)));
      reg11 <= reg8;
    end
  assign wire12 = reg7;
  assign wire13 = ((^~wire1[(2'h2):(2'h2)]) ?
                      reg8[(1'h0):(1'h0)] : {wire3[(2'h2):(1'h1)]});
  module14 #() modinst74 (wire73, clk, wire0, reg7, reg10, wire1);
  assign wire75 = $signed(wire5);
  assign wire76 = ((!$unsigned(((8'ha1) ? reg9 : wire73))) ?
                      $signed($signed((wire13 ?
                          reg6 : reg10))) : wire5[(3'h5):(3'h5)]);
  assign wire77 = {(($unsigned(reg6) && (!wire5)) ?
                          ((wire2 - reg7) ?
                              (reg7 > wire13) : (&wire3)) : (wire3[(3'h7):(2'h3)] <<< $signed(wire2)))};
  assign wire78 = (wire1[(1'h1):(1'h1)] && wire2[(2'h3):(2'h2)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param72 = {((((8'ha9) >>> (8'h9d)) & ((8'ha0) ? (8'ha0) : (8'ha3))) ? ((^~(8'h9f)) | (~(8'ha5))) : {{(8'ha7)}})})
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h4d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire18;
  input wire [(3'h7):(1'h0)] wire17;
  input wire [(4'h8):(1'h0)] wire16;
  input wire [(4'h8):(1'h0)] wire15;
  wire signed [(3'h7):(1'h0)] wire40;
  wire [(4'ha):(1'h0)] wire22;
  wire signed [(3'h5):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire42;
  wire signed [(3'h6):(1'h0)] wire47;
  wire [(2'h2):(1'h0)] wire70;
  reg [(4'ha):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg19 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg43 = (1'h0);
  reg [(3'h7):(1'h0)] reg44 = (1'h0);
  reg [(3'h6):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg46 = (1'h0);
  assign y = {wire40,
                 wire22,
                 wire21,
                 wire42,
                 wire47,
                 wire70,
                 reg20,
                 reg19,
                 reg43,
                 reg44,
                 reg45,
                 reg46,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg19 <= (!wire17[(3'h4):(2'h2)]);
      reg20 <= $signed(reg19);
    end
  assign wire21 = (!{(^$signed((8'ha4)))});
  assign wire22 = reg19[(2'h2):(1'h0)];
  module23 #() modinst41 (.wire24(reg19), .wire25(wire22), .clk(clk), .wire27(wire18), .y(wire40), .wire26(wire16));
  assign wire42 = wire16[(3'h7):(3'h5)];
  always
    @(posedge clk) begin
      reg43 <= wire40;
      reg44 <= (8'h9f);
      if ($signed(reg43))
        begin
          reg45 <= {(~&{$unsigned(wire42)})};
          reg46 <= $unsigned((~&(!(~wire18))));
        end
      else
        begin
          reg45 <= $signed(wire16[(3'h5):(2'h2)]);
        end
    end
  assign wire47 = wire17;
  module48 #() modinst71 (wire70, clk, wire18, wire40, reg44, wire47);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module48  (y, clk, wire52, wire51, wire50, wire49);
  output wire [(32'h74):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire52;
  input wire signed [(2'h3):(1'h0)] wire51;
  input wire [(3'h7):(1'h0)] wire50;
  input wire [(2'h3):(1'h0)] wire49;
  wire [(3'h6):(1'h0)] wire69;
  wire [(3'h4):(1'h0)] wire63;
  wire [(3'h7):(1'h0)] wire62;
  wire signed [(4'ha):(1'h0)] wire61;
  wire signed [(4'h8):(1'h0)] wire60;
  wire [(4'hb):(1'h0)] wire59;
  wire signed [(4'ha):(1'h0)] wire58;
  wire signed [(3'h6):(1'h0)] wire57;
  wire [(2'h2):(1'h0)] wire56;
  wire signed [(3'h7):(1'h0)] wire55;
  wire [(4'h8):(1'h0)] wire54;
  wire [(3'h5):(1'h0)] wire53;
  reg signed [(2'h3):(1'h0)] reg68 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg67 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg66 = (1'h0);
  reg [(3'h5):(1'h0)] reg65 = (1'h0);
  reg [(4'ha):(1'h0)] reg64 = (1'h0);
  assign y = {wire69,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 reg64,
                 (1'h0)};
  assign wire53 = wire51[(2'h3):(2'h2)];
  assign wire54 = (&(~&wire50[(3'h4):(2'h3)]));
  assign wire55 = wire49;
  assign wire56 = $unsigned({(&wire49[(1'h0):(1'h0)])});
  assign wire57 = (~&$unsigned({{wire55}}));
  assign wire58 = $signed(wire56);
  assign wire59 = {wire51[(1'h1):(1'h0)]};
  assign wire60 = {{(|(wire59 ? wire57 : wire56))}};
  assign wire61 = (wire52 ? (~wire57[(3'h4):(2'h3)]) : {$unsigned((|wire59))});
  assign wire62 = wire53;
  assign wire63 = (wire60 > $signed($signed((wire60 ? wire54 : wire57))));
  always
    @(posedge clk) begin
      if ($unsigned($signed($signed($signed((8'ha0))))))
        begin
          reg64 <= ({(!(wire50 * (8'h9e)))} ~^ $signed(($signed(wire53) ?
              $unsigned(wire56) : wire61)));
          reg65 <= $signed(wire63);
        end
      else
        begin
          if (wire54)
            begin
              reg64 <= ($unsigned(wire56) ?
                  ($unsigned((wire52 ?
                      (8'ha3) : (8'ha8))) <= {(!reg65)}) : (^~{$signed(wire55)}));
              reg65 <= wire60;
            end
          else
            begin
              reg64 <= (^({(!reg64)} > {wire54}));
              reg65 <= wire53[(2'h2):(2'h2)];
            end
          reg66 <= $signed(({wire55} ?
              (+wire56[(2'h2):(1'h1)]) : $unsigned({wire55})));
          reg67 <= $signed((!$unsigned((wire63 >> (8'ha9)))));
        end
      reg68 <= (({wire49} <= ((reg66 ? wire58 : (8'ha1)) * {wire49})) ?
          (({(8'ha4)} && (wire51 + wire53)) ?
              wire49[(2'h3):(2'h2)] : $unsigned($unsigned(wire61))) : wire62);
    end
  assign wire69 = wire53;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23  (y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'h57):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire27;
  input wire [(2'h3):(1'h0)] wire26;
  input wire signed [(4'ha):(1'h0)] wire25;
  input wire signed [(3'h7):(1'h0)] wire24;
  wire signed [(3'h5):(1'h0)] wire38;
  wire signed [(3'h4):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire36;
  wire signed [(4'hb):(1'h0)] wire35;
  wire [(4'hb):(1'h0)] wire34;
  wire [(4'hb):(1'h0)] wire33;
  wire [(3'h4):(1'h0)] wire32;
  wire [(2'h2):(1'h0)] wire31;
  wire [(4'hb):(1'h0)] wire30;
  wire [(4'ha):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire28;
  reg [(3'h6):(1'h0)] reg39 = (1'h0);
  assign y = {wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 reg39,
                 (1'h0)};
  assign wire28 = $signed((~^wire26));
  assign wire29 = wire25;
  assign wire30 = wire25[(4'ha):(3'h7)];
  assign wire31 = wire26;
  assign wire32 = wire24[(2'h3):(1'h0)];
  assign wire33 = $signed(wire28);
  assign wire34 = (wire29[(3'h5):(2'h2)] | ((wire30[(3'h6):(2'h2)] ?
                          $signed((8'hb0)) : (wire27 ? wire32 : wire25)) ?
                      ((8'hac) ? (8'had) : $signed(wire31)) : wire30));
  assign wire35 = ({((~&wire28) | (wire26 >>> wire26))} ?
                      {{wire32[(2'h2):(1'h0)]}} : (~&({wire32} ?
                          {wire28} : $unsigned(wire31))));
  assign wire36 = ((((wire32 ? wire29 : wire25) ?
                              wire27[(3'h6):(2'h3)] : {wire26}) ?
                          $signed((wire25 ?
                              wire34 : wire28)) : ($unsigned(wire25) ?
                              $unsigned(wire28) : (-wire31))) ?
                      wire26 : ((-wire34) && wire32[(2'h3):(1'h0)]));
  assign wire37 = (~&(-wire28[(1'h0):(1'h0)]));
  assign wire38 = $signed((^~$unsigned((-wire32))));
  always
    @(posedge clk) begin
      reg39 <= wire31;
    end
endmodule