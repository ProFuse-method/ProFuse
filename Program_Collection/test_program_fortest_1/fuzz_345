(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param52 = ({((~|(8'h9e)) ? (~(8'ha2)) : ((8'ha6) ? (8'hab) : (8'ha8)))} ? {(~^((8'ha9) * (8'h9e)))} : {((~|(8'h9c)) ? {(8'h9e)} : ((8'ha8) ~^ (8'ha0)))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire [(3'h7):(1'h0)] wire48;
  wire [(2'h2):(1'h0)] wire46;
  wire [(3'h7):(1'h0)] wire28;
  wire signed [(2'h2):(1'h0)] wire27;
  wire signed [(3'h6):(1'h0)] wire26;
  wire [(2'h3):(1'h0)] wire25;
  wire signed [(2'h3):(1'h0)] wire24;
  wire [(4'hb):(1'h0)] wire22;
  reg [(3'h4):(1'h0)] reg51 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg50 = (1'h0);
  reg [(4'ha):(1'h0)] reg49 = (1'h0);
  assign y = {wire48,
                 wire46,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire22,
                 reg51,
                 reg50,
                 reg49,
                 (1'h0)};
  module4 #() modinst23 (wire22, clk, wire0, wire2, wire1, wire3);
  assign wire24 = (wire0[(3'h4):(2'h2)] > wire2);
  assign wire25 = {wire2};
  assign wire26 = wire0;
  assign wire27 = ($signed(wire1[(4'h9):(4'h8)]) <= wire25[(1'h1):(1'h0)]);
  assign wire28 = (~wire27[(1'h0):(1'h0)]);
  module29 #() modinst47 (.wire33(wire2), .wire32(wire22), .wire30(wire28), .wire31(wire0), .clk(clk), .y(wire46));
  assign wire48 = (wire2[(1'h0):(1'h0)] + $unsigned($unsigned($signed(wire22))));
  always
    @(posedge clk) begin
      reg49 <= wire1[(3'h4):(3'h4)];
    end
  always
    @(posedge clk) begin
      reg50 <= ((wire0 ^ $unsigned($signed(wire3))) && $unsigned({$unsigned(wire24)}));
      reg51 <= reg49;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module29  (y, clk, wire33, wire32, wire31, wire30);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire33;
  input wire [(3'h6):(1'h0)] wire32;
  input wire signed [(3'h7):(1'h0)] wire31;
  input wire signed [(3'h7):(1'h0)] wire30;
  wire signed [(4'hb):(1'h0)] wire35;
  wire signed [(3'h5):(1'h0)] wire34;
  reg signed [(4'h8):(1'h0)] reg45 = (1'h0);
  reg [(3'h4):(1'h0)] reg44 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg43 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg40 = (1'h0);
  reg [(4'hb):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg38 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg37 = (1'h0);
  reg [(3'h5):(1'h0)] reg36 = (1'h0);
  assign y = {wire35,
                 wire34,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 (1'h0)};
  assign wire34 = ((~&wire32) ? wire33 : wire31);
  assign wire35 = wire34;
  always
    @(posedge clk) begin
      reg36 <= {(8'ha9)};
      reg37 <= wire34[(3'h4):(2'h3)];
      reg38 <= (^wire32);
    end
  always
    @(posedge clk) begin
      reg39 <= (~^$unsigned({(wire33 ? reg36 : wire32)}));
      if ($signed(wire32))
        begin
          if (wire33[(3'h5):(2'h2)])
            begin
              reg40 <= (^~(-wire35));
              reg41 <= (({$signed(wire31)} | $unsigned((!wire30))) ~^ reg37);
            end
          else
            begin
              reg40 <= (~^(!wire35[(3'h6):(3'h6)]));
            end
          reg42 <= (({wire35[(3'h4):(2'h3)]} <= {{wire35}}) ?
              wire34 : (reg38 - (wire33[(1'h0):(1'h0)] ? {(8'haa)} : wire35)));
        end
      else
        begin
          if ({$unsigned(reg42[(1'h1):(1'h1)])})
            begin
              reg40 <= wire32[(3'h4):(3'h4)];
              reg41 <= $unsigned((($signed(reg38) <<< (^~wire32)) ?
                  {$signed(wire34)} : reg36[(2'h3):(1'h0)]));
            end
          else
            begin
              reg40 <= (((reg41[(2'h3):(2'h3)] >> (wire35 ?
                      (8'ha2) : wire31)) >> (reg42 ?
                      {reg40} : (reg42 ? (8'ha7) : reg39))) ?
                  (wire31 ?
                      reg40[(1'h1):(1'h1)] : $unsigned((reg42 * reg40))) : (|wire33[(3'h7):(3'h5)]));
            end
        end
      if ((($signed(wire34) >= (|reg42[(3'h6):(1'h0)])) ?
          (((reg40 ? reg42 : (8'ha2)) ?
              {wire30} : $signed((8'hab))) && (~^$unsigned((8'ha2)))) : {$unsigned(wire33[(3'h4):(1'h0)])}))
        begin
          reg43 <= $signed($unsigned($unsigned(reg42[(1'h0):(1'h0)])));
        end
      else
        begin
          reg43 <= ($signed($unsigned(reg38[(1'h1):(1'h0)])) + $signed((((8'hab) + wire32) ^ ((8'ha0) ?
              wire31 : wire30))));
          if (wire33)
            begin
              reg44 <= ((8'h9d) << reg39[(3'h5):(1'h0)]);
            end
          else
            begin
              reg44 <= wire30[(3'h7):(3'h7)];
            end
          reg45 <= (wire35 != reg37[(1'h0):(1'h0)]);
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param21 = {(~({(8'hac)} + ((8'ha5) >>> (8'ha0))))})
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h5f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire8;
  input wire [(4'h8):(1'h0)] wire7;
  input wire [(4'hb):(1'h0)] wire6;
  input wire [(4'ha):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire20;
  wire signed [(4'h8):(1'h0)] wire19;
  wire signed [(4'h9):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire17;
  wire signed [(4'h9):(1'h0)] wire16;
  wire [(4'h8):(1'h0)] wire15;
  wire signed [(2'h3):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire13;
  wire signed [(4'h9):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire11;
  wire [(3'h6):(1'h0)] wire10;
  wire signed [(3'h6):(1'h0)] wire9;
  assign y = {wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 (1'h0)};
  assign wire9 = wire6[(3'h5):(1'h0)];
  assign wire10 = ({$signed(wire7)} > wire7[(3'h4):(3'h4)]);
  assign wire11 = (8'had);
  assign wire12 = ((((~wire8) * (~|wire5)) ?
                      ((wire8 != (8'h9c)) ?
                          {wire10} : $unsigned(wire8)) : wire5) - wire5);
  assign wire13 = wire10;
  assign wire14 = wire10;
  assign wire15 = ((^~(!wire12[(1'h1):(1'h1)])) + {$unsigned(wire7[(3'h5):(1'h1)])});
  assign wire16 = wire10[(1'h1):(1'h1)];
  assign wire17 = wire11[(2'h3):(2'h3)];
  assign wire18 = wire8[(2'h2):(2'h2)];
  assign wire19 = $signed({wire18[(4'h8):(3'h6)]});
  assign wire20 = {((wire15[(1'h0):(1'h0)] ?
                          (wire18 ?
                              wire7 : wire13) : wire8[(1'h1):(1'h0)]) != (|wire5[(2'h2):(2'h2)]))};
endmodule