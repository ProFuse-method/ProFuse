(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param54 = (!(&{(~(8'ha0))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h83):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire53;
  wire [(2'h2):(1'h0)] wire52;
  wire signed [(3'h5):(1'h0)] wire47;
  wire [(4'hb):(1'h0)] wire40;
  wire [(4'hb):(1'h0)] wire39;
  wire signed [(4'h8):(1'h0)] wire37;
  wire signed [(2'h3):(1'h0)] wire49;
  wire signed [(4'hb):(1'h0)] wire50;
  reg [(4'ha):(1'h0)] reg46 = (1'h0);
  reg [(4'h9):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg44 = (1'h0);
  reg [(2'h3):(1'h0)] reg43 = (1'h0);
  reg [(4'h9):(1'h0)] reg42 = (1'h0);
  reg [(4'ha):(1'h0)] reg41 = (1'h0);
  reg [(2'h3):(1'h0)] reg6 = (1'h0);
  reg [(4'ha):(1'h0)] reg5 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg4 = (1'h0);
  assign y = {wire53,
                 wire52,
                 wire47,
                 wire40,
                 wire39,
                 wire37,
                 wire49,
                 wire50,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= wire0[(2'h2):(2'h2)];
      reg5 <= {wire1[(2'h2):(1'h1)]};
      reg6 <= $unsigned($signed(((wire3 ? reg5 : wire1) >= $unsigned(wire3))));
    end
  module7 #() modinst38 (wire37, clk, reg5, wire2, wire3, reg4);
  assign wire39 = (($signed((wire1 <= reg6)) <<< wire37) * wire1[(1'h1):(1'h0)]);
  assign wire40 = ((&((!wire2) <<< (~|(8'h9d)))) != $signed(wire1));
  always
    @(posedge clk) begin
      reg41 <= wire39;
      reg42 <= (reg5 ? $unsigned($signed((+wire1))) : wire2[(3'h6):(2'h3)]);
      if ((!reg5))
        begin
          reg43 <= wire37;
          reg44 <= ($unsigned(reg6) ?
              (wire2[(2'h2):(2'h2)] ?
                  (8'haf) : $unsigned((reg41 << (8'haf)))) : $unsigned((8'ha5)));
          reg45 <= wire2;
        end
      else
        begin
          reg43 <= reg5;
          if ((|wire0))
            begin
              reg44 <= (+wire0);
              reg45 <= reg43;
              reg46 <= reg43;
            end
          else
            begin
              reg44 <= $signed(((8'h9f) ?
                  (!$unsigned(wire40)) : $unsigned($signed((8'ha7)))));
            end
        end
    end
  module13 #() modinst48 (.wire17(wire37), .wire14(reg4), .wire15(reg41), .wire16(reg45), .y(wire47), .clk(clk));
  assign wire49 = reg42[(1'h0):(1'h0)];
  module7 #() modinst51 (.wire10(reg46), .wire9(wire2), .clk(clk), .wire11(wire1), .y(wire50), .wire8(wire3));
  assign wire52 = wire47;
  assign wire53 = (reg4 ?
                      $unsigned(((8'hac) ?
                          {reg44} : ((8'haa) & reg42))) : ((^$unsigned(reg42)) ?
                          (wire37 >= (wire37 ?
                              reg45 : wire0)) : (!$signed(wire2))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h40):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire11;
  input wire [(4'ha):(1'h0)] wire10;
  input wire signed [(3'h6):(1'h0)] wire9;
  input wire signed [(4'h8):(1'h0)] wire8;
  wire signed [(4'h8):(1'h0)] wire36;
  wire [(2'h3):(1'h0)] wire35;
  wire [(4'h8):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire33;
  wire [(2'h3):(1'h0)] wire32;
  wire signed [(3'h4):(1'h0)] wire31;
  wire signed [(4'h9):(1'h0)] wire30;
  wire signed [(2'h3):(1'h0)] wire29;
  wire [(3'h7):(1'h0)] wire27;
  wire [(4'hb):(1'h0)] wire12;
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire27,
                 wire12,
                 (1'h0)};
  assign wire12 = ((((~&wire9) ? wire8 : wire10[(3'h6):(3'h4)]) ?
                      $unsigned(wire11) : ((wire10 ?
                          wire10 : wire9) ^~ $signed(wire10))) ^ (^(~^(&wire9))));
  module13 #() modinst28 (.y(wire27), .wire16(wire10), .wire17(wire9), .clk(clk), .wire15(wire11), .wire14(wire12));
  assign wire29 = ($signed($unsigned((wire10 ^~ wire8))) ?
                      {(((8'ha7) - wire12) & {wire9})} : wire8[(2'h2):(1'h0)]);
  assign wire30 = wire27;
  assign wire31 = (wire8[(3'h6):(3'h5)] == $unsigned($signed({wire12})));
  assign wire32 = ((wire11 ? (^~(|wire29)) : wire27) ?
                      $signed(((wire12 ^ wire12) ?
                          ((8'haf) & wire10) : $signed(wire8))) : (~wire31));
  assign wire33 = wire8[(3'h4):(1'h1)];
  assign wire34 = ($unsigned(wire10) + wire31);
  assign wire35 = wire30;
  assign wire36 = {$signed((^{wire8}))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire17;
  input wire signed [(2'h3):(1'h0)] wire16;
  input wire [(4'ha):(1'h0)] wire15;
  input wire signed [(4'hb):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire25;
  wire signed [(3'h4):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire21;
  wire [(4'h9):(1'h0)] wire20;
  wire [(4'hb):(1'h0)] wire19;
  wire signed [(3'h4):(1'h0)] wire18;
  reg signed [(3'h7):(1'h0)] reg24 = (1'h0);
  reg [(4'hb):(1'h0)] reg23 = (1'h0);
  assign y = {wire26,
                 wire25,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 reg24,
                 reg23,
                 (1'h0)};
  assign wire18 = wire15[(3'h4):(2'h2)];
  assign wire19 = (|wire14[(3'h6):(2'h2)]);
  assign wire20 = {wire14[(4'ha):(3'h7)]};
  assign wire21 = ($unsigned($unsigned((wire15 * wire16))) ?
                      $signed((8'ha3)) : (^wire19));
  assign wire22 = wire17;
  always
    @(posedge clk) begin
      reg23 <= (wire21[(1'h0):(1'h0)] ? (8'ha1) : $unsigned((~^wire14)));
      reg24 <= $unsigned(wire19[(2'h2):(2'h2)]);
    end
  assign wire25 = {$unsigned(({(8'h9d)} || (wire16 != wire14)))};
  assign wire26 = wire15;
endmodule