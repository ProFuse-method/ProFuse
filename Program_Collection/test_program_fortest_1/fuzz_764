(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire71;
  wire [(4'hb):(1'h0)] wire67;
  wire [(4'h9):(1'h0)] wire66;
  wire signed [(3'h6):(1'h0)] wire64;
  wire signed [(3'h4):(1'h0)] wire4;
  reg signed [(4'ha):(1'h0)] reg70 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg69 = (1'h0);
  reg [(2'h2):(1'h0)] reg68 = (1'h0);
  assign y = {wire71,
                 wire67,
                 wire66,
                 wire64,
                 wire4,
                 reg70,
                 reg69,
                 reg68,
                 (1'h0)};
  assign wire4 = {{((wire1 ? wire3 : wire3) ?
                             $unsigned(wire2) : $signed(wire2))}};
  module5 #() modinst65 (wire64, clk, wire1, wire4, wire2, wire0);
  assign wire66 = (~^(&wire4[(1'h1):(1'h1)]));
  assign wire67 = $signed((($unsigned(wire0) ?
                      wire64[(2'h2):(1'h1)] : $signed(wire64)) || $signed(wire1)));
  always
    @(posedge clk) begin
      if (wire1[(3'h5):(1'h1)])
        begin
          reg68 <= (wire1 ?
              (wire1[(3'h5):(3'h5)] ?
                  ((-wire64) ? wire4[(1'h1):(1'h0)] : {wire0}) : (((8'ha6) ?
                          (8'hb0) : wire64) ?
                      {wire67} : ((8'ha6) ?
                          wire66 : wire2))) : (|((wire2 - (8'ha3)) ?
                  $signed(wire64) : (wire64 <<< (8'ha9)))));
        end
      else
        begin
          reg68 <= $signed($unsigned(wire2[(3'h6):(3'h5)]));
          reg69 <= reg68[(1'h1):(1'h1)];
        end
      reg70 <= $signed($signed($unsigned($unsigned(wire3))));
    end
  assign wire71 = ({wire64[(2'h3):(2'h2)]} ?
                      $signed({wire1}) : $signed(($unsigned((8'h9c)) & wire2)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire9;
  input wire signed [(3'h4):(1'h0)] wire8;
  input wire signed [(3'h4):(1'h0)] wire7;
  input wire [(4'h8):(1'h0)] wire6;
  wire [(4'h9):(1'h0)] wire62;
  wire signed [(3'h6):(1'h0)] wire60;
  wire [(3'h6):(1'h0)] wire41;
  wire [(4'h8):(1'h0)] wire40;
  wire signed [(4'h8):(1'h0)] wire39;
  wire [(4'h8):(1'h0)] wire38;
  wire [(4'h8):(1'h0)] wire37;
  wire signed [(2'h3):(1'h0)] wire35;
  wire [(4'h9):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire11;
  wire [(2'h2):(1'h0)] wire10;
  reg signed [(4'h9):(1'h0)] reg42 = (1'h0);
  assign y = {wire62,
                 wire60,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire35,
                 wire12,
                 wire11,
                 wire10,
                 reg42,
                 (1'h0)};
  assign wire10 = $signed((({wire9} ?
                      $unsigned((8'ha7)) : wire6) ~^ $signed(wire8[(2'h3):(1'h0)])));
  assign wire11 = (~|wire6);
  assign wire12 = $unsigned({{$signed(wire8)}});
  module13 #() modinst36 (wire35, clk, wire9, wire6, wire11, wire12);
  assign wire37 = wire12;
  assign wire38 = ($signed($unsigned(wire6[(2'h3):(2'h3)])) != (wire35 && ($signed(wire10) & wire35)));
  assign wire39 = $signed($signed($signed($signed(wire6))));
  assign wire40 = (~^($signed((-wire39)) ?
                      $unsigned($unsigned(wire10)) : ((wire7 ?
                              wire38 : wire11) ?
                          (~wire37) : $unsigned(wire35))));
  assign wire41 = $unsigned((~|wire8));
  always
    @(posedge clk) begin
      reg42 <= wire8;
    end
  module43 #() modinst61 (.wire46(wire7), .y(wire60), .wire44(wire38), .wire47(wire41), .wire45(wire9), .clk(clk));
  module43 #() modinst63 (.y(wire62), .wire47(wire11), .clk(clk), .wire44(wire40), .wire45(wire9), .wire46(wire8));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module43
#(parameter param59 = (((((8'ha4) >= (8'haa)) ? {(8'hae)} : ((8'ha4) ? (8'haa) : (8'ha8))) ? {((8'hb0) > (8'h9d))} : ({(8'hab)} + ((8'ha4) < (8'hab)))) >> (+((+(8'h9e)) ? ((8'h9e) ? (8'h9f) : (8'hab)) : ((8'ha9) ^~ (8'hb0))))))
(y, clk, wire47, wire46, wire45, wire44);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire47;
  input wire [(3'h4):(1'h0)] wire46;
  input wire signed [(3'h6):(1'h0)] wire45;
  input wire signed [(4'h8):(1'h0)] wire44;
  wire signed [(4'hb):(1'h0)] wire58;
  wire signed [(3'h6):(1'h0)] wire57;
  wire signed [(3'h5):(1'h0)] wire49;
  wire signed [(4'ha):(1'h0)] wire48;
  reg [(3'h5):(1'h0)] reg56 = (1'h0);
  reg [(4'hb):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg54 = (1'h0);
  reg [(4'h9):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg52 = (1'h0);
  reg [(4'h8):(1'h0)] reg51 = (1'h0);
  reg [(4'h8):(1'h0)] reg50 = (1'h0);
  assign y = {wire58,
                 wire57,
                 wire49,
                 wire48,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 (1'h0)};
  assign wire48 = (wire46 <<< $signed($signed(wire44[(4'h8):(2'h2)])));
  assign wire49 = ((!((wire46 ? wire45 : wire46) * wire48[(3'h7):(3'h6)])) ?
                      $signed(wire45[(1'h1):(1'h1)]) : wire44);
  always
    @(posedge clk) begin
      reg50 <= wire48[(4'ha):(4'ha)];
      if ($signed($unsigned(wire45[(1'h0):(1'h0)])))
        begin
          reg51 <= $signed($signed((+(wire44 < wire49))));
        end
      else
        begin
          reg51 <= {$unsigned((~reg50))};
          if (reg50)
            begin
              reg52 <= wire44[(3'h4):(2'h2)];
              reg53 <= $unsigned(wire44);
              reg54 <= wire45[(2'h3):(1'h1)];
            end
          else
            begin
              reg52 <= ((~wire49) >>> $unsigned($signed($unsigned(wire44))));
            end
          reg55 <= (wire49 ?
              $unsigned(wire46) : $unsigned((~wire45[(1'h0):(1'h0)])));
        end
      reg56 <= ($signed(($signed((8'ha6)) && (wire45 ?
          wire45 : reg55))) || $unsigned($signed((reg51 ? wire44 : reg51))));
    end
  assign wire57 = $signed($signed(((-reg55) ? (!wire47) : {wire47})));
  assign wire58 = {$unsigned($signed(wire57[(3'h4):(1'h1)]))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire17;
  input wire [(4'h8):(1'h0)] wire16;
  input wire signed [(4'h9):(1'h0)] wire15;
  input wire [(4'h9):(1'h0)] wire14;
  wire [(4'h8):(1'h0)] wire34;
  wire signed [(3'h6):(1'h0)] wire33;
  wire [(4'hb):(1'h0)] wire32;
  wire [(2'h2):(1'h0)] wire31;
  wire signed [(3'h7):(1'h0)] wire30;
  wire signed [(4'ha):(1'h0)] wire29;
  wire [(2'h2):(1'h0)] wire28;
  wire signed [(3'h5):(1'h0)] wire27;
  wire signed [(4'hb):(1'h0)] wire20;
  wire [(2'h2):(1'h0)] wire19;
  wire signed [(3'h5):(1'h0)] wire18;
  reg signed [(4'ha):(1'h0)] reg26 = (1'h0);
  reg [(4'h9):(1'h0)] reg25 = (1'h0);
  reg [(2'h3):(1'h0)] reg24 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg21 = (1'h0);
  assign y = {wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire20,
                 wire19,
                 wire18,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 (1'h0)};
  assign wire18 = {(^~(wire16[(3'h4):(1'h1)] ?
                          $unsigned((8'ha3)) : $unsigned(wire14)))};
  assign wire19 = (wire18[(3'h5):(3'h5)] ? wire16[(2'h2):(1'h1)] : wire15);
  assign wire20 = (!(&wire19));
  always
    @(posedge clk) begin
      if (wire20[(2'h3):(1'h1)])
        begin
          reg21 <= wire17[(1'h1):(1'h0)];
          reg22 <= wire17;
          if ((wire17[(1'h0):(1'h0)] >> {($signed(wire18) * reg21[(2'h3):(2'h2)])}))
            begin
              reg23 <= wire14;
            end
          else
            begin
              reg23 <= $unsigned($signed(wire14));
              reg24 <= $unsigned($signed(reg22[(2'h2):(1'h0)]));
              reg25 <= $signed($unsigned(wire19));
            end
        end
      else
        begin
          reg21 <= wire15[(2'h3):(2'h3)];
          reg22 <= ($signed(((wire15 ? wire14 : (8'hae)) ?
                  (wire15 ? wire15 : wire14) : {wire15})) ?
              (((~reg23) ?
                  (wire17 ?
                      reg25 : (8'ha4)) : {reg22}) != (&$unsigned((8'ha1)))) : wire14);
          reg23 <= ($signed($signed((^reg25))) + $unsigned(($unsigned(reg21) < $signed(wire18))));
        end
      reg26 <= (~^wire14);
    end
  assign wire27 = reg25[(2'h2):(2'h2)];
  assign wire28 = {$signed(($signed((8'ha6)) >>> wire17[(1'h1):(1'h1)]))};
  assign wire29 = (wire19[(2'h2):(2'h2)] ^ ((^~reg26[(1'h0):(1'h0)]) ?
                      ({wire16} - wire20) : ((wire16 >> wire15) && ((8'hb0) < wire27))));
  assign wire30 = $unsigned(wire20);
  assign wire31 = (wire15[(3'h5):(1'h0)] >> (~^wire16));
  assign wire32 = $signed(reg22[(1'h0):(1'h0)]);
  assign wire33 = (+wire16[(3'h5):(1'h0)]);
  assign wire34 = $unsigned($signed(wire17));
endmodule