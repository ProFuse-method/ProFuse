(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire4;
  reg signed [(3'h4):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg7 = (1'h0);
  assign y = {wire6, wire5, wire4, reg8, reg7, (1'h0)};
  assign wire4 = wire1[(1'h1):(1'h0)];
  assign wire5 = ($signed(wire0) ?
                     (wire2[(3'h6):(2'h3)] ?
                         $unsigned($signed(wire2)) : wire2) : wire3);
  assign wire6 = ({wire5} - (^~$signed({wire4})));
  always
    @(posedge clk) begin
      reg7 <= $signed({$signed($unsigned(wire3))});
      reg8 <= wire5[(1'h0):(1'h0)];
    end
endmodule