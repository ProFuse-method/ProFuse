(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire0;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire3;
  wire [(4'h8):(1'h0)] wire30;
  wire [(4'hb):(1'h0)] wire4;
  wire signed [(4'hb):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire10;
  wire [(2'h2):(1'h0)] wire11;
  wire [(4'h9):(1'h0)] wire12;
  wire signed [(2'h3):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire28;
  reg signed [(4'ha):(1'h0)] reg5 = (1'h0);
  reg [(4'hb):(1'h0)] reg6 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg7 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg8 = (1'h0);
  assign y = {wire30,
                 wire4,
                 wire9,
                 wire10,
                 wire11,
                 wire12,
                 wire13,
                 wire28,
                 reg5,
                 reg6,
                 reg7,
                 reg8,
                 (1'h0)};
  assign wire4 = $unsigned(wire0);
  always
    @(posedge clk) begin
      if ((wire4 + (($unsigned(wire0) > wire3) ?
          $unsigned((wire2 ? wire2 : wire0)) : wire4[(2'h3):(2'h2)])))
        begin
          if ((-(^~$signed(wire4))))
            begin
              reg5 <= {$unsigned((8'haa))};
              reg6 <= (wire0[(4'h8):(2'h2)] ? $signed((+(|wire0))) : reg5);
            end
          else
            begin
              reg5 <= ($unsigned($unsigned($unsigned(wire4))) ?
                  (-$unsigned((~&wire4))) : $unsigned(((-wire3) ^~ $signed(reg6))));
            end
        end
      else
        begin
          if ((((!reg6) ?
                  (8'ha7) : ($unsigned(wire4) ?
                      wire4[(4'h9):(2'h3)] : $signed((8'had)))) ?
              (|{$signed((8'haf))}) : (wire3 ?
                  (^(wire1 ? wire1 : wire1)) : wire0)))
            begin
              reg5 <= reg6;
              reg6 <= {(~&$unsigned(wire1[(2'h2):(2'h2)]))};
              reg7 <= reg6;
            end
          else
            begin
              reg5 <= $unsigned(wire2);
            end
          reg8 <= wire3;
        end
    end
  assign wire9 = (((~(reg5 << reg8)) ~^ (reg8 * wire3[(4'h9):(3'h7)])) ^ {(8'hb0)});
  assign wire10 = $unsigned($unsigned({(wire2 ? reg5 : reg8)}));
  assign wire11 = reg5[(4'ha):(2'h2)];
  assign wire12 = wire4[(3'h6):(3'h4)];
  assign wire13 = (((wire12 ^ $signed((8'ha3))) && ($unsigned(wire1) ?
                      (~wire12) : $unsigned((8'ha3)))) & wire2);
  module14 #() modinst29 (.wire17(reg6), .clk(clk), .wire18(wire10), .wire15(wire3), .wire16(wire9), .y(wire28));
  assign wire30 = $signed((reg6 ? wire9[(2'h3):(2'h2)] : wire4[(3'h5):(2'h2)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire18;
  input wire signed [(4'hb):(1'h0)] wire17;
  input wire signed [(3'h5):(1'h0)] wire16;
  input wire signed [(4'hb):(1'h0)] wire15;
  wire signed [(3'h7):(1'h0)] wire27;
  wire signed [(4'hb):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire25;
  wire [(3'h4):(1'h0)] wire24;
  wire [(4'hb):(1'h0)] wire23;
  reg [(4'hb):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg21 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg20 = (1'h0);
  reg [(4'h9):(1'h0)] reg19 = (1'h0);
  assign y = {wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire16[(1'h1):(1'h0)])
        begin
          reg19 <= wire18[(1'h0):(1'h0)];
          reg20 <= {{$signed(wire15)}};
          reg21 <= reg19;
        end
      else
        begin
          if (((reg19 ?
              (wire17 <= wire16[(1'h0):(1'h0)]) : (wire18 + $unsigned(reg19))) ~^ reg21[(2'h3):(1'h0)]))
            begin
              reg19 <= reg21;
              reg20 <= (^$signed(($unsigned(reg21) << (|wire17))));
            end
          else
            begin
              reg19 <= wire16[(3'h4):(1'h1)];
            end
          reg21 <= (8'had);
        end
      reg22 <= (~wire15[(2'h2):(2'h2)]);
    end
  assign wire23 = (|(reg19 ? wire16 : (^~{wire15})));
  assign wire24 = {(+$unsigned($signed(wire16)))};
  assign wire25 = reg21;
  assign wire26 = (~&$unsigned($signed((wire25 < reg20))));
  assign wire27 = $signed(wire23[(1'h1):(1'h0)]);
endmodule