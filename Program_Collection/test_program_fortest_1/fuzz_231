(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param80 = (((((8'hb0) ? (8'ha5) : (8'haf)) ? ((8'ha4) > (8'ha3)) : ((8'ha3) ? (8'ha4) : (8'hb0))) || (!(~&(8'haa)))) ? (-({(8'h9e)} >> ((8'h9e) && (8'hac)))) : {((!(8'ha0)) - ((8'h9e) <= (8'ha1)))}))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h7c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire3;
  wire signed [(2'h2):(1'h0)] wire79;
  wire signed [(4'ha):(1'h0)] wire78;
  wire [(3'h4):(1'h0)] wire77;
  wire signed [(2'h2):(1'h0)] wire60;
  wire signed [(4'h9):(1'h0)] wire63;
  wire signed [(3'h5):(1'h0)] wire64;
  wire [(4'hb):(1'h0)] wire65;
  wire [(4'h8):(1'h0)] wire66;
  wire [(2'h3):(1'h0)] wire67;
  wire signed [(4'hb):(1'h0)] wire75;
  reg [(2'h3):(1'h0)] reg62 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg69 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg70 = (1'h0);
  reg [(4'ha):(1'h0)] reg71 = (1'h0);
  reg [(2'h2):(1'h0)] reg72 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg73 = (1'h0);
  reg [(4'h8):(1'h0)] reg74 = (1'h0);
  assign y = {wire79,
                 wire78,
                 wire77,
                 wire60,
                 wire63,
                 wire64,
                 wire65,
                 wire66,
                 wire67,
                 wire75,
                 reg62,
                 reg68,
                 reg69,
                 reg70,
                 reg71,
                 reg72,
                 reg73,
                 reg74,
                 (1'h0)};
  module4 #() modinst61 (.wire5(wire0), .wire6(wire2), .clk(clk), .wire7(wire3), .y(wire60), .wire8(wire1));
  always
    @(posedge clk) begin
      reg62 <= $signed(wire0);
    end
  assign wire63 = wire3;
  assign wire64 = wire0[(4'ha):(3'h7)];
  assign wire65 = wire63[(1'h1):(1'h1)];
  assign wire66 = $unsigned(({(^~wire63)} ?
                      ($signed((8'h9e)) >> ((8'h9c) ?
                          (8'had) : reg62)) : $signed(((8'hac) || reg62))));
  assign wire67 = (wire64[(3'h4):(1'h1)] ^ $unsigned(wire64));
  always
    @(posedge clk) begin
      if ((|{(wire64 ? (wire3 ? (8'haa) : wire0) : $signed((8'hab)))}))
        begin
          reg68 <= wire1[(1'h0):(1'h0)];
          reg69 <= wire67[(2'h3):(2'h2)];
          reg70 <= $unsigned(wire64);
        end
      else
        begin
          reg68 <= ({wire64} | (reg68[(2'h2):(2'h2)] >> $unsigned((~wire63))));
          reg69 <= {(((reg62 >>> wire1) ?
                  $unsigned(wire1) : {wire64}) * wire63)};
        end
      if (wire60)
        begin
          if (({($signed(wire64) + (wire63 ? reg69 : wire66))} >>> wire2))
            begin
              reg71 <= ($unsigned({(wire0 ? reg68 : wire3)}) ?
                  $signed($signed($signed(reg69))) : wire3);
            end
          else
            begin
              reg71 <= wire3;
              reg72 <= (($unsigned(reg62[(1'h1):(1'h0)]) ?
                      (8'ha1) : $signed((wire65 ? reg62 : wire67))) ?
                  $unsigned($unsigned((wire1 ^ wire65))) : $unsigned(($signed((8'h9c)) < (8'ha4))));
              reg73 <= (~&(^(&{reg70})));
            end
          reg74 <= (((wire63 >= {wire64}) - wire2[(1'h1):(1'h1)]) ?
              (reg72 ?
                  (~&(reg62 ?
                      (8'h9e) : (8'ha6))) : $signed($signed((8'ha3)))) : (((8'ha3) ?
                      (~^reg72) : $signed(reg69)) ?
                  ((wire1 ? wire67 : (8'ha9)) <= $signed(wire1)) : wire0));
        end
      else
        begin
          reg71 <= (reg71[(3'h5):(2'h2)] >>> $signed($signed($unsigned(reg70))));
          if ((wire2[(1'h1):(1'h0)] ? wire63 : {{$unsigned(wire65)}}))
            begin
              reg72 <= ({{$unsigned(wire1)}} < {(+$unsigned(wire0))});
            end
          else
            begin
              reg72 <= wire3[(4'h8):(2'h2)];
              reg73 <= {wire1[(2'h3):(2'h3)]};
              reg74 <= (wire60 != wire2);
            end
        end
    end
  module43 #() modinst76 (wire75, clk, wire64, reg71, wire2, wire66);
  assign wire77 = (!wire66[(1'h1):(1'h0)]);
  assign wire78 = wire60[(2'h2):(1'h1)];
  assign wire79 = ((((reg69 | wire63) >>> (wire66 | (8'hae))) && ((wire77 ?
                              wire3 : (8'hae)) ?
                          wire66[(1'h1):(1'h1)] : (wire64 ? reg70 : reg69))) ?
                      wire63 : (wire2 ?
                          reg74 : ((reg74 > wire1) > $signed(wire2))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire5;
  input wire signed [(3'h5):(1'h0)] wire6;
  input wire [(4'h8):(1'h0)] wire7;
  input wire signed [(4'h9):(1'h0)] wire8;
  wire signed [(3'h7):(1'h0)] wire59;
  wire [(3'h5):(1'h0)] wire32;
  wire signed [(2'h3):(1'h0)] wire34;
  wire [(4'h8):(1'h0)] wire35;
  wire [(4'h8):(1'h0)] wire36;
  wire [(2'h3):(1'h0)] wire38;
  wire signed [(2'h2):(1'h0)] wire39;
  wire signed [(3'h7):(1'h0)] wire40;
  wire signed [(3'h7):(1'h0)] wire41;
  wire [(4'hb):(1'h0)] wire42;
  wire signed [(4'h9):(1'h0)] wire57;
  reg signed [(3'h7):(1'h0)] reg9 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg10 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg37 = (1'h0);
  assign y = {wire59,
                 wire32,
                 wire34,
                 wire35,
                 wire36,
                 wire38,
                 wire39,
                 wire40,
                 wire41,
                 wire42,
                 wire57,
                 reg9,
                 reg10,
                 reg37,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg9 <= (|({(wire7 ^ wire5)} ? wire8 : (~|wire8)));
      reg10 <= wire6;
    end
  module11 #() modinst33 (.y(wire32), .wire15(reg10), .clk(clk), .wire12(reg9), .wire14(wire5), .wire13(wire6));
  assign wire34 = $unsigned(((wire6 >> $signed(reg9)) ?
                      ($unsigned(reg10) && $signed((8'ha8))) : (wire7[(3'h6):(3'h6)] * $unsigned(wire5))));
  assign wire35 = ({reg9[(3'h6):(3'h4)]} ?
                      wire7[(3'h4):(2'h2)] : (wire5 ?
                          wire7[(3'h5):(1'h0)] : $signed(((8'ha1) >> (8'ha2)))));
  assign wire36 = $unsigned(wire6[(2'h3):(2'h3)]);
  always
    @(posedge clk) begin
      reg37 <= wire5[(3'h7):(3'h4)];
    end
  assign wire38 = wire32[(3'h4):(1'h0)];
  assign wire39 = $unsigned($unsigned($unsigned(wire32)));
  assign wire40 = (8'h9d);
  assign wire41 = (~|(^($unsigned(wire40) ? wire7[(3'h6):(3'h6)] : (^wire39))));
  assign wire42 = (wire40[(3'h5):(1'h1)] ?
                      $signed(wire6[(3'h4):(2'h3)]) : (^~reg9));
  module43 #() modinst58 (wire57, clk, wire7, wire5, reg37, wire35);
  assign wire59 = $unsigned(wire39);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module43  (y, clk, wire47, wire46, wire45, wire44);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire47;
  input wire [(4'ha):(1'h0)] wire46;
  input wire [(4'ha):(1'h0)] wire45;
  input wire signed [(4'h8):(1'h0)] wire44;
  wire signed [(3'h6):(1'h0)] wire56;
  wire [(2'h2):(1'h0)] wire55;
  wire signed [(4'h8):(1'h0)] wire54;
  wire [(4'h8):(1'h0)] wire50;
  wire [(4'h9):(1'h0)] wire49;
  wire signed [(4'h8):(1'h0)] wire48;
  reg signed [(3'h5):(1'h0)] reg53 = (1'h0);
  reg [(3'h7):(1'h0)] reg52 = (1'h0);
  reg [(3'h4):(1'h0)] reg51 = (1'h0);
  assign y = {wire56,
                 wire55,
                 wire54,
                 wire50,
                 wire49,
                 wire48,
                 reg53,
                 reg52,
                 reg51,
                 (1'h0)};
  assign wire48 = $signed(({$signed((8'ha6))} ?
                      {$signed(wire47)} : wire45[(1'h0):(1'h0)]));
  assign wire49 = wire46;
  assign wire50 = (wire49[(3'h5):(1'h0)] * (($signed(wire48) > (&wire44)) != {{wire45}}));
  always
    @(posedge clk) begin
      reg51 <= (~&(wire48[(1'h1):(1'h0)] + $signed((~^wire44))));
      reg52 <= ($unsigned({$unsigned(reg51)}) + (wire48[(3'h4):(2'h2)] <<< (~|(+wire48))));
      reg53 <= ($unsigned((8'h9c)) ?
          $signed({$signed(wire45)}) : (-($unsigned(wire46) ?
              reg51[(3'h4):(1'h0)] : wire45[(2'h3):(1'h0)])));
    end
  assign wire54 = (8'ha6);
  assign wire55 = wire48;
  assign wire56 = $unsigned(reg51[(1'h1):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param31 = (+((8'hb0) ? (&(+(8'ha2))) : (((8'ha7) ? (8'h9c) : (8'h9d)) * ((8'h9e) ? (8'h9f) : (8'ha0))))))
(y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire15;
  input wire signed [(4'hb):(1'h0)] wire14;
  input wire signed [(2'h3):(1'h0)] wire13;
  input wire [(3'h7):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire30;
  wire signed [(4'hb):(1'h0)] wire29;
  wire signed [(3'h4):(1'h0)] wire28;
  wire [(2'h3):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire26;
  wire signed [(4'h9):(1'h0)] wire25;
  wire signed [(4'hb):(1'h0)] wire24;
  wire [(2'h2):(1'h0)] wire23;
  wire [(3'h5):(1'h0)] wire22;
  wire [(2'h3):(1'h0)] wire21;
  wire [(3'h7):(1'h0)] wire16;
  reg [(4'h8):(1'h0)] reg20 = (1'h0);
  reg [(3'h4):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg18 = (1'h0);
  reg [(3'h5):(1'h0)] reg17 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire16,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 (1'h0)};
  assign wire16 = $unsigned(wire12);
  always
    @(posedge clk) begin
      if ((wire14[(3'h7):(1'h0)] ? wire16 : wire14))
        begin
          reg17 <= ({((&wire13) ?
                      ((8'ha9) ? wire16 : wire13) : (wire13 | wire13))} ?
              wire15 : (8'h9f));
          if (wire12[(2'h2):(1'h0)])
            begin
              reg18 <= ((~&$unsigned((wire13 ^~ (8'haa)))) >>> (~|(+(!wire14))));
              reg19 <= wire14[(3'h7):(3'h4)];
            end
          else
            begin
              reg18 <= (-(~^$signed((wire13 << reg17))));
            end
        end
      else
        begin
          reg17 <= (|(~&(8'ha0)));
        end
      reg20 <= (+(^~((wire13 - reg19) ? (8'ha3) : (reg19 + (8'hac)))));
    end
  assign wire21 = wire14[(3'h5):(2'h3)];
  assign wire22 = reg18;
  assign wire23 = $signed((8'hb0));
  assign wire24 = ((8'ha7) ?
                      reg18[(1'h1):(1'h0)] : (wire14[(3'h6):(3'h5)] ?
                          (wire22 < (~&wire15)) : ((wire16 * (8'hae)) < (reg20 ?
                              reg18 : wire15))));
  assign wire25 = reg20;
  assign wire26 = (|(((wire22 ? wire23 : wire22) ?
                      $unsigned(reg19) : wire14[(4'h9):(3'h6)]) & (((8'haf) ?
                      wire23 : wire13) ^~ (wire25 * wire23))));
  assign wire27 = (^(wire15[(2'h2):(2'h2)] - $unsigned((~|reg17))));
  assign wire28 = ((($unsigned(wire23) << (wire23 << reg17)) ?
                          $unsigned((^~wire22)) : $signed((^wire25))) ?
                      (~&wire13) : wire25[(2'h3):(2'h3)]);
  assign wire29 = $unsigned(wire14[(3'h6):(1'h0)]);
  assign wire30 = wire25;
endmodule