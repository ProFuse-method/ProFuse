(* use_dsp48="no" *) (* use_dsp="no" *) module top #(parameter param51 = (8'ha1)) (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire49;
  wire [(4'h9):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire25;
  wire [(4'hb):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire22;
  assign y = {wire49, wire26, wire25, wire24, wire22, (1'h0)};
  module4 #() modinst23 (wire22, clk, wire1, wire2, wire3, wire0);
  assign wire24 = $unsigned(wire1);
  assign wire25 = {$unsigned($unsigned($unsigned(wire3)))};
  assign wire26 = ($unsigned($signed({wire1})) ?
                      wire0 : (^~(wire25 * $signed(wire1))));
  module27 #() modinst50 (.wire29(wire26), .y(wire49), .wire28(wire0), .wire31(wire22), .clk(clk), .wire30(wire24));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module27  (y, clk, wire31, wire30, wire29, wire28);
  output wire [(32'h21):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire31;
  input wire [(4'hb):(1'h0)] wire30;
  input wire [(4'h9):(1'h0)] wire29;
  input wire signed [(4'ha):(1'h0)] wire28;
  wire [(2'h2):(1'h0)] wire48;
  wire signed [(3'h4):(1'h0)] wire47;
  wire signed [(3'h7):(1'h0)] wire46;
  wire signed [(4'h8):(1'h0)] wire45;
  wire signed [(3'h7):(1'h0)] wire44;
  wire signed [(3'h4):(1'h0)] wire42;
  assign y = {wire48, wire47, wire46, wire45, wire44, wire42, (1'h0)};
  module32 #() modinst43 (.clk(clk), .wire33(wire28), .y(wire42), .wire34(wire29), .wire35(wire30), .wire36(wire31));
  assign wire44 = ($signed($unsigned($signed(wire29))) * $unsigned(wire42[(2'h3):(1'h1)]));
  assign wire45 = (!$unsigned({wire29[(1'h1):(1'h0)]}));
  assign wire46 = (((-(&wire42)) <= wire28[(3'h7):(3'h7)]) ?
                      wire44[(1'h1):(1'h0)] : $signed((+$signed(wire44))));
  assign wire47 = wire44[(2'h2):(2'h2)];
  assign wire48 = $signed(wire44[(2'h2):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param21 = {({(+(8'ha9))} & ((+(8'h9c)) + (-(8'had))))})
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire8;
  input wire [(3'h4):(1'h0)] wire7;
  input wire [(3'h5):(1'h0)] wire6;
  input wire [(3'h5):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire20;
  wire signed [(4'hb):(1'h0)] wire19;
  wire [(3'h6):(1'h0)] wire18;
  wire signed [(3'h5):(1'h0)] wire17;
  wire signed [(4'h9):(1'h0)] wire15;
  wire [(3'h7):(1'h0)] wire14;
  wire signed [(3'h5):(1'h0)] wire13;
  wire signed [(3'h6):(1'h0)] wire12;
  wire [(3'h4):(1'h0)] wire11;
  wire signed [(3'h7):(1'h0)] wire10;
  wire [(3'h5):(1'h0)] wire9;
  reg [(3'h7):(1'h0)] reg16 = (1'h0);
  assign y = {wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 reg16,
                 (1'h0)};
  assign wire9 = $signed((^~$signed(wire5[(2'h2):(1'h0)])));
  assign wire10 = $unsigned(wire6[(2'h3):(2'h3)]);
  assign wire11 = (&($unsigned(wire6) <= $signed((wire5 < wire9))));
  assign wire12 = (~|wire9[(2'h2):(1'h0)]);
  assign wire13 = {(wire9[(2'h2):(2'h2)] ? wire8 : (~|wire7))};
  assign wire14 = wire6;
  assign wire15 = (wire11[(1'h1):(1'h1)] || (~|$unsigned($unsigned(wire11))));
  always
    @(posedge clk) begin
      reg16 <= {(^~wire6)};
    end
  assign wire17 = $unsigned($unsigned($signed({wire14})));
  assign wire18 = wire9[(2'h2):(1'h0)];
  assign wire19 = wire13;
  assign wire20 = (~(($unsigned(reg16) ?
                          (wire12 ^~ wire12) : (wire11 >= wire19)) ?
                      wire17[(2'h2):(1'h1)] : $signed((wire9 ?
                          wire15 : wire9))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module32  (y, clk, wire36, wire35, wire34, wire33);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire36;
  input wire [(2'h2):(1'h0)] wire35;
  input wire signed [(3'h5):(1'h0)] wire34;
  input wire signed [(4'ha):(1'h0)] wire33;
  wire signed [(3'h5):(1'h0)] wire39;
  wire signed [(4'hb):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire37;
  reg [(4'h8):(1'h0)] reg41 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg40 = (1'h0);
  assign y = {wire39, wire38, wire37, reg41, reg40, (1'h0)};
  assign wire37 = (wire33 << wire36[(4'h9):(3'h7)]);
  assign wire38 = (wire33[(3'h5):(1'h0)] ? (8'h9d) : wire35[(2'h2):(2'h2)]);
  assign wire39 = $signed((((wire36 ? (8'ha5) : wire34) ?
                      wire33[(3'h7):(2'h2)] : (!wire33)) >> (8'ha1)));
  always
    @(posedge clk) begin
      reg40 <= $signed({wire38});
      reg41 <= wire37;
    end
endmodule