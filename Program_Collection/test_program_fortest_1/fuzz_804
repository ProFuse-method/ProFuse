(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param29 = (+(-((^(~^(8'hb0))) ? (!((8'hba) == (8'ha2))) : (((8'ha5) ? (8'hb4) : (8'haf)) ? ((8'hb6) ? (8'hbf) : (8'hb8)) : ((8'hb6) ? (8'hba) : (8'hae)))))))
(y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h14e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hc):(1'h0)] wire4;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire [(5'h13):(1'h0)] wire2;
  input wire [(5'h10):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(5'h12):(1'h0)] wire28;
  wire signed [(2'h2):(1'h0)] wire27;
  wire signed [(3'h4):(1'h0)] wire26;
  wire signed [(5'h14):(1'h0)] wire25;
  wire signed [(4'he):(1'h0)] wire6;
  wire signed [(5'h13):(1'h0)] wire5;
  reg signed [(4'ha):(1'h0)] reg22 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg21 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg20 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg19 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg15 = (1'h0);
  reg [(4'hb):(1'h0)] reg14 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg13 = (1'h0);
  reg [(5'h15):(1'h0)] reg9 = (1'h0);
  reg signed [(4'he):(1'h0)] reg8 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg24 = (1'h0);
  reg [(5'h10):(1'h0)] forvar23 = (1'h0);
  reg [(5'h15):(1'h0)] reg18 = (1'h0);
  reg [(5'h10):(1'h0)] forvar17 = (1'h0);
  reg [(3'h4):(1'h0)] reg16 = (1'h0);
  reg [(4'hf):(1'h0)] reg12 = (1'h0);
  reg [(4'h8):(1'h0)] forvar11 = (1'h0);
  reg [(4'h9):(1'h0)] forvar10 = (1'h0);
  reg [(4'hc):(1'h0)] forvar7 = (1'h0);
  assign y = {wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire6,
                 wire5,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg15,
                 reg14,
                 reg13,
                 reg9,
                 reg8,
                 reg24,
                 forvar23,
                 reg18,
                 forvar17,
                 reg16,
                 reg12,
                 forvar11,
                 forvar10,
                 forvar7,
                 (1'h0)};
  assign wire5 = $signed({($signed(wire1) << wire2[(3'h4):(3'h4)]),
                     (&$signed((wire1 <= wire4)))});
  assign wire6 = {($signed(({wire4, wire0} ?
                         wire4 : (^~wire3))) - $unsigned((8'ha1)))};
  always
    @(posedge clk) begin
      for (forvar7 = (1'h0); (forvar7 < (2'h3)); forvar7 = (forvar7 + (1'h1)))
        begin
          if (wire3)
            begin
              reg8 <= $signed($signed(wire0));
              reg9 <= wire5;
            end
          else
            begin
              reg8 <= ($unsigned((($signed((8'ha5)) ?
                      {reg8} : wire1[(4'hc):(4'hc)]) & ((wire2 ?
                      (8'hab) : wire4) >> (~|(8'h9e))))) ?
                  wire4 : (((|$signed(wire1)) ?
                      (~&(wire4 ? (8'h9e) : forvar7)) : $unsigned((wire3 ?
                          wire3 : wire4))) >>> wire3));
              reg9 <= wire5[(4'hb):(3'h4)];
            end
        end
      for (forvar10 = (1'h0); (forvar10 < (1'h1)); forvar10 = (forvar10 + (1'h1)))
        begin
          for (forvar11 = (1'h0); (forvar11 < (2'h3)); forvar11 = (forvar11 + (1'h1)))
            begin
              reg12 = $signed($unsigned((|((reg8 ? reg9 : forvar7) >> wire2))));
              reg13 <= (forvar7[(3'h6):(1'h0)] ?
                  $signed($unsigned(forvar10)) : (|$unsigned(wire0)));
              reg14 <= (((((8'ha7) ^~ (reg9 ? wire0 : wire1)) ?
                  (7'h41) : reg13) << (+wire3[(2'h3):(2'h3)])) != ((^reg9[(2'h3):(2'h3)]) << $unsigned((forvar11 > forvar7[(4'hb):(4'h8)]))));
              reg15 <= $signed(reg12[(2'h2):(1'h1)]);
            end
          reg16 = (wire5 ?
              (($unsigned((forvar7 ?
                  wire3 : reg14)) && (+$unsigned(forvar10))) ^~ forvar7[(2'h2):(1'h1)]) : (^$unsigned(($unsigned(reg8) ?
                  (reg9 ? wire5 : reg15) : reg9[(5'h14):(4'he)]))));
          for (forvar17 = (1'h0); (forvar17 < (1'h0)); forvar17 = (forvar17 + (1'h1)))
            begin
              reg18 = $signed((reg13 ?
                  (~|wire1[(4'h8):(4'h8)]) : ({$unsigned(wire5)} >>> $unsigned($unsigned(reg12)))));
              reg19 <= {wire6};
              reg20 <= $unsigned($signed((^~(-(-forvar11)))));
              reg21 <= $signed(reg9[(2'h2):(2'h2)]);
              reg22 <= reg9;
            end
          for (forvar23 = (1'h0); (forvar23 < (1'h0)); forvar23 = (forvar23 + (1'h1)))
            begin
              reg24 = $signed((^reg16[(1'h0):(1'h0)]));
            end
        end
    end
  assign wire25 = wire2;
  assign wire26 = ((^wire0) - wire2);
  assign wire27 = wire3;
  assign wire28 = $unsigned($signed(({{reg20},
                      (wire0 | wire26)} * reg15[(1'h0):(1'h0)])));
endmodule