(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire52;
  wire signed [(4'hb):(1'h0)] wire51;
  wire signed [(2'h2):(1'h0)] wire50;
  wire signed [(3'h4):(1'h0)] wire48;
  wire signed [(3'h7):(1'h0)] wire47;
  wire signed [(3'h4):(1'h0)] wire46;
  wire signed [(3'h7):(1'h0)] wire45;
  wire signed [(3'h7):(1'h0)] wire43;
  wire signed [(4'h8):(1'h0)] wire41;
  wire signed [(3'h5):(1'h0)] wire4;
  assign y = {wire52,
                 wire51,
                 wire50,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire43,
                 wire41,
                 wire4,
                 (1'h0)};
  assign wire4 = wire2;
  module5 #() modinst42 (wire41, clk, wire0, wire4, wire1, wire2);
  module5 #() modinst44 (.y(wire43), .clk(clk), .wire8(wire4), .wire7(wire0), .wire9(wire3), .wire6(wire2));
  assign wire45 = $unsigned($signed(wire2));
  assign wire46 = wire43[(2'h3):(2'h2)];
  assign wire47 = ({{wire46[(1'h1):(1'h1)]}} ?
                      ((((8'h9f) ? (8'h9e) : (8'ha1)) ?
                          wire2 : wire45) <= {$signed((8'h9d))}) : wire45[(3'h6):(3'h5)]);
  module15 #() modinst49 (wire48, clk, wire2, wire43, wire0, wire47);
  assign wire50 = $unsigned(wire2[(2'h3):(1'h0)]);
  assign wire51 = $signed($signed(wire47));
  assign wire52 = (wire51 - (~^$signed((~wire43))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire9;
  input wire [(3'h5):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire7;
  input wire signed [(4'h9):(1'h0)] wire6;
  wire [(2'h3):(1'h0)] wire39;
  wire signed [(2'h3):(1'h0)] wire38;
  wire signed [(3'h4):(1'h0)] wire37;
  wire [(3'h6):(1'h0)] wire36;
  wire [(3'h7):(1'h0)] wire32;
  wire signed [(3'h4):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire14;
  wire [(3'h6):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire12;
  wire [(2'h3):(1'h0)] wire11;
  wire [(4'h9):(1'h0)] wire10;
  reg [(4'hb):(1'h0)] reg40 = (1'h0);
  reg [(2'h2):(1'h0)] reg35 = (1'h0);
  reg [(2'h3):(1'h0)] reg34 = (1'h0);
  reg [(4'ha):(1'h0)] reg33 = (1'h0);
  assign y = {wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire32,
                 wire30,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 reg40,
                 reg35,
                 reg34,
                 reg33,
                 (1'h0)};
  assign wire10 = ((8'ha3) >>> (-$unsigned($signed((8'h9c)))));
  assign wire11 = (($signed(((8'hac) & wire9)) <= {(wire10 && wire8)}) || ({((8'ha1) <<< (8'ha6))} ?
                      (wire8[(3'h4):(1'h1)] ^ ((8'h9c) ?
                          wire8 : wire6)) : (8'haa)));
  assign wire12 = wire9[(1'h0):(1'h0)];
  assign wire13 = $unsigned({wire10});
  assign wire14 = (({(^wire10)} - ({wire12} > {wire6})) ?
                      wire8 : {$signed((~|wire6))});
  module15 #() modinst31 (.wire17(wire8), .wire19(wire13), .wire16(wire12), .clk(clk), .y(wire30), .wire18(wire7));
  assign wire32 = (|($signed(wire13) ~^ wire13));
  always
    @(posedge clk) begin
      reg33 <= wire12[(1'h1):(1'h0)];
      reg34 <= ((^~reg33[(4'h9):(2'h2)]) * wire9);
      reg35 <= {wire12[(3'h6):(3'h6)]};
    end
  assign wire36 = (wire8 && wire11[(2'h3):(1'h1)]);
  assign wire37 = $unsigned({$unsigned(wire10)});
  assign wire38 = wire30;
  assign wire39 = wire36;
  always
    @(posedge clk) begin
      reg40 <= wire32;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param29 = ((~^(((8'ha6) ? (8'h9c) : (8'hae)) == (~&(8'ha4)))) ? ((~|((8'hae) <= (8'hb0))) ? ((+(8'h9d)) >= ((8'haf) <= (8'hac))) : (((8'hae) ? (8'haa) : (8'hb0)) ? ((8'h9d) <<< (8'ha2)) : (^~(8'ha4)))) : ((((8'haa) == (8'h9c)) >= {(8'ha3)}) ? ((!(8'ha6)) >> ((8'ha6) ~^ (8'hac))) : (!(-(8'hab))))))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire19;
  input wire [(3'h6):(1'h0)] wire18;
  input wire signed [(3'h5):(1'h0)] wire17;
  input wire [(3'h6):(1'h0)] wire16;
  wire signed [(2'h2):(1'h0)] wire28;
  wire signed [(3'h5):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire26;
  wire signed [(4'hb):(1'h0)] wire25;
  wire signed [(4'ha):(1'h0)] wire24;
  wire signed [(2'h2):(1'h0)] wire23;
  wire [(3'h5):(1'h0)] wire22;
  wire signed [(4'h8):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire20;
  assign y = {wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 (1'h0)};
  assign wire20 = {wire17[(1'h1):(1'h0)]};
  assign wire21 = $unsigned(wire20);
  assign wire22 = ($unsigned($signed((wire20 > wire20))) ?
                      wire21[(3'h4):(3'h4)] : ((&(&wire18)) ^ (+$unsigned(wire21))));
  assign wire23 = $unsigned(wire21[(3'h5):(2'h3)]);
  assign wire24 = (wire23[(2'h2):(2'h2)] | $signed(((^~(8'ha1)) ?
                      wire23[(1'h0):(1'h0)] : wire22[(2'h3):(2'h3)])));
  assign wire25 = (-wire16[(2'h2):(2'h2)]);
  assign wire26 = (($unsigned(wire23) + $unsigned($signed(wire19))) >= (((wire18 ?
                          wire22 : wire18) ?
                      (~&wire16) : wire23[(1'h0):(1'h0)]) | wire16[(2'h3):(1'h1)]));
  assign wire27 = $unsigned((wire26 ?
                      $unsigned((wire22 != wire26)) : (|(wire19 <= (8'had)))));
  assign wire28 = wire20[(1'h1):(1'h1)];
endmodule