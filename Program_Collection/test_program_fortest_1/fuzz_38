(* use_dsp48="no" *) (* use_dsp="no" *) module top #(parameter param86 = (8'ha4)) (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h82):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire82;
  wire [(4'ha):(1'h0)] wire71;
  wire signed [(4'h9):(1'h0)] wire70;
  wire signed [(4'ha):(1'h0)] wire69;
  wire signed [(4'h8):(1'h0)] wire68;
  wire [(4'h9):(1'h0)] wire66;
  reg [(4'ha):(1'h0)] reg85 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg84 = (1'h0);
  reg [(4'hb):(1'h0)] reg83 = (1'h0);
  reg [(3'h4):(1'h0)] reg81 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg80 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg79 = (1'h0);
  reg [(2'h2):(1'h0)] reg78 = (1'h0);
  reg [(4'h9):(1'h0)] reg77 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg76 = (1'h0);
  reg [(3'h5):(1'h0)] reg75 = (1'h0);
  reg [(3'h6):(1'h0)] reg74 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg73 = (1'h0);
  assign y = {wire82,
                 wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire66,
                 reg85,
                 reg84,
                 reg83,
                 reg81,
                 reg80,
                 reg79,
                 reg78,
                 reg77,
                 reg76,
                 reg75,
                 reg74,
                 reg73,
                 (1'h0)};
  module4 #() modinst67 (wire66, clk, wire3, wire0, wire2, wire1);
  assign wire68 = (-(8'ha7));
  assign wire69 = $signed(($unsigned((8'hab)) ? $signed({wire0}) : {wire2}));
  assign wire70 = wire1[(3'h6):(1'h1)];
  module4 #() modinst72 (.y(wire71), .wire6(wire0), .clk(clk), .wire8(wire2), .wire5(wire1), .wire7(wire3));
  always
    @(posedge clk) begin
      if ($signed((~&$signed($unsigned(wire70)))))
        begin
          reg73 <= wire3;
          reg74 <= wire3[(1'h0):(1'h0)];
        end
      else
        begin
          if (reg73)
            begin
              reg73 <= reg74[(1'h0):(1'h0)];
              reg74 <= $unsigned(wire0[(4'h8):(2'h2)]);
              reg75 <= wire71;
            end
          else
            begin
              reg73 <= (reg75 ?
                  $signed(wire71[(4'h9):(3'h4)]) : (^(((8'hb0) ?
                          wire0 : reg73) ?
                      (wire1 || (8'had)) : (+(8'hac)))));
              reg74 <= wire0[(4'ha):(3'h6)];
              reg75 <= $signed($signed((8'ha2)));
            end
          reg76 <= reg74[(2'h2):(1'h0)];
          reg77 <= wire70;
        end
      reg78 <= reg76;
      if (((&$signed($unsigned((8'h9d)))) ^~ {{(^wire71)}}))
        begin
          reg79 <= (wire66 & (^{wire68}));
          if ((wire3[(1'h1):(1'h1)] * wire2[(2'h2):(2'h2)]))
            begin
              reg80 <= (|{$unsigned((reg78 << reg73))});
            end
          else
            begin
              reg80 <= ({wire70[(3'h4):(2'h2)]} | wire69[(1'h1):(1'h1)]);
              reg81 <= $unsigned((!(^~(8'ha1))));
            end
        end
      else
        begin
          reg79 <= reg75;
          reg80 <= wire69;
        end
    end
  assign wire82 = $signed(reg76);
  always
    @(posedge clk) begin
      reg83 <= {(-(wire70[(1'h1):(1'h0)] <= {reg81}))};
      reg84 <= $unsigned((wire71[(3'h7):(3'h4)] != ((^reg74) | ((8'hae) * wire66))));
      reg85 <= $unsigned(($signed((reg75 && (8'hac))) ?
          (8'ha7) : $unsigned((!wire0))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param65 = {(8'hac)})
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire8;
  input wire signed [(3'h5):(1'h0)] wire7;
  input wire [(4'ha):(1'h0)] wire6;
  input wire [(4'h8):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire64;
  wire [(3'h4):(1'h0)] wire62;
  wire [(4'h8):(1'h0)] wire44;
  wire [(3'h7):(1'h0)] wire12;
  wire [(3'h7):(1'h0)] wire11;
  wire signed [(4'h8):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire9;
  assign y = {wire64, wire62, wire44, wire12, wire11, wire10, wire9, (1'h0)};
  assign wire9 = {$signed({wire8})};
  assign wire10 = (wire5 < wire8[(2'h2):(1'h1)]);
  assign wire11 = ((-wire9) <<< (((wire6 <<< wire5) ^ wire9[(3'h5):(3'h5)]) ?
                      {(wire8 > wire9)} : wire6[(1'h0):(1'h0)]));
  assign wire12 = ($unsigned((wire7[(2'h3):(2'h2)] ^~ (wire10 >= wire9))) ?
                      wire8[(3'h4):(1'h0)] : (^~wire11));
  module13 #() modinst45 (.y(wire44), .clk(clk), .wire15(wire11), .wire14(wire8), .wire17(wire7), .wire16(wire10));
  module46 #() modinst63 (wire62, clk, wire5, wire6, wire7, wire12);
  assign wire64 = wire7[(1'h1):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module46  (y, clk, wire50, wire49, wire48, wire47);
  output wire [(32'h40):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire50;
  input wire [(4'ha):(1'h0)] wire49;
  input wire [(3'h5):(1'h0)] wire48;
  input wire signed [(3'h7):(1'h0)] wire47;
  wire signed [(3'h7):(1'h0)] wire61;
  wire [(4'h9):(1'h0)] wire60;
  wire signed [(3'h4):(1'h0)] wire59;
  wire signed [(3'h4):(1'h0)] wire55;
  wire signed [(4'h9):(1'h0)] wire54;
  wire signed [(3'h7):(1'h0)] wire51;
  reg signed [(3'h6):(1'h0)] reg58 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg57 = (1'h0);
  reg [(2'h2):(1'h0)] reg56 = (1'h0);
  reg [(4'h9):(1'h0)] reg53 = (1'h0);
  reg [(2'h2):(1'h0)] reg52 = (1'h0);
  assign y = {wire61,
                 wire60,
                 wire59,
                 wire55,
                 wire54,
                 wire51,
                 reg58,
                 reg57,
                 reg56,
                 reg53,
                 reg52,
                 (1'h0)};
  assign wire51 = wire47[(1'h1):(1'h0)];
  always
    @(posedge clk) begin
      reg52 <= (((wire48 | ((8'ha6) + (8'haf))) ~^ wire47[(2'h2):(2'h2)]) || (((~|wire47) > wire51) ?
          {wire47} : wire48));
      reg53 <= wire49[(1'h1):(1'h0)];
    end
  assign wire54 = ({wire49} ? (8'hac) : (^$signed(wire47)));
  assign wire55 = (~&wire48[(2'h2):(2'h2)]);
  always
    @(posedge clk) begin
      if (((reg52[(1'h0):(1'h0)] >> $signed($unsigned((8'hae)))) >>> (((wire55 || wire47) < reg53) <= (8'h9f))))
        begin
          reg56 <= {wire55};
        end
      else
        begin
          reg56 <= (|$unsigned($unsigned((|reg53))));
        end
      if (((~reg56) | ($signed(reg56[(1'h1):(1'h0)]) ?
          (reg56 * wire47[(3'h5):(3'h4)]) : ((-(8'ha0)) <= wire47[(2'h2):(2'h2)]))))
        begin
          reg57 <= wire50[(2'h3):(2'h2)];
        end
      else
        begin
          reg57 <= ((~(^((8'haa) * wire49))) ?
              ($signed((wire55 ? reg52 : wire49)) || $signed(((8'ha0) ?
                  wire51 : wire55))) : (((wire55 << (8'ha4)) >>> reg53) ?
                  $unsigned(wire49) : ((~^wire51) ?
                      ((8'ha3) ? reg52 : wire54) : $unsigned(reg53))));
        end
      reg58 <= ($unsigned($unsigned(wire48)) == ($unsigned(reg53) ?
          reg57[(3'h4):(1'h0)] : wire49));
    end
  assign wire59 = ($unsigned(((reg56 ? wire54 : reg58) <= (wire51 ?
                      wire54 : reg58))) > wire51[(2'h3):(2'h3)]);
  assign wire60 = wire49;
  assign wire61 = $signed((wire49[(2'h3):(2'h3)] <= {(wire47 >> reg57)}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param43 = {(({(8'h9f)} < (8'ha6)) ? {{(8'hac)}} : (-(^~(8'ha0))))})
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h9a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire17;
  input wire signed [(2'h3):(1'h0)] wire16;
  input wire [(3'h7):(1'h0)] wire15;
  input wire [(3'h6):(1'h0)] wire14;
  wire [(4'ha):(1'h0)] wire42;
  wire [(2'h3):(1'h0)] wire41;
  wire signed [(4'h8):(1'h0)] wire40;
  wire signed [(3'h4):(1'h0)] wire39;
  wire signed [(2'h2):(1'h0)] wire38;
  wire signed [(3'h7):(1'h0)] wire37;
  wire signed [(3'h7):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire20;
  wire signed [(3'h4):(1'h0)] wire18;
  reg signed [(4'ha):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg33 = (1'h0);
  reg [(3'h4):(1'h0)] reg32 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg31 = (1'h0);
  reg [(3'h5):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg29 = (1'h0);
  reg [(4'ha):(1'h0)] reg28 = (1'h0);
  reg [(4'hb):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg26 = (1'h0);
  reg [(3'h7):(1'h0)] reg25 = (1'h0);
  reg [(3'h6):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg23 = (1'h0);
  reg [(3'h7):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg19 = (1'h0);
  assign y = {wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire21,
                 wire20,
                 wire18,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg19,
                 (1'h0)};
  assign wire18 = $unsigned((((wire17 ? (8'ha8) : (8'had)) != (~wire16)) ?
                      wire15[(1'h0):(1'h0)] : (((8'ha2) <<< wire14) ?
                          $unsigned(wire15) : (^~wire14))));
  always
    @(posedge clk) begin
      reg19 <= wire16;
    end
  assign wire20 = reg19;
  assign wire21 = wire16;
  always
    @(posedge clk) begin
      reg22 <= $unsigned(wire14);
      reg23 <= (8'ha2);
      reg24 <= $unsigned((+wire16[(1'h1):(1'h0)]));
    end
  always
    @(posedge clk) begin
      if ($unsigned($signed((+{wire18}))))
        begin
          reg25 <= $unsigned($signed(wire16[(2'h2):(1'h1)]));
          reg26 <= $signed(((+(&wire21)) ? {(!reg24)} : $signed(reg19)));
        end
      else
        begin
          reg25 <= $unsigned(wire18[(3'h4):(2'h3)]);
          if ($signed({(&$unsigned((8'h9d)))}))
            begin
              reg26 <= $unsigned((reg25[(3'h7):(1'h1)] | ((reg26 && wire14) < (reg23 >= (8'ha4)))));
              reg27 <= ((((wire17 >> wire17) ?
                      (wire15 <<< (8'ha1)) : (reg24 ?
                          wire16 : wire17)) << {(wire16 ? (8'ha1) : wire17)}) ?
                  reg23 : wire18);
              reg28 <= $unsigned(wire20);
            end
          else
            begin
              reg26 <= (~reg19[(3'h5):(3'h4)]);
            end
          if ($signed(reg23))
            begin
              reg29 <= $unsigned((&$signed((~|wire16))));
              reg30 <= $unsigned({(~^(^reg26))});
              reg31 <= {{wire21}};
            end
          else
            begin
              reg29 <= ({((&reg22) ? (reg29 <= wire18) : $unsigned(reg27))} ?
                  (&$signed(reg23)) : (^~($signed(reg27) | $unsigned(reg30))));
            end
        end
      if ({((reg30[(2'h2):(2'h2)] > wire18[(1'h1):(1'h0)]) * reg29)})
        begin
          reg32 <= (!(^~reg26));
          reg33 <= $signed(reg19[(1'h0):(1'h0)]);
        end
      else
        begin
          reg32 <= (^~(($signed(reg27) | (!reg28)) ?
              reg26[(3'h4):(3'h4)] : reg30[(3'h5):(1'h0)]));
          if ($signed({{$signed(wire17)}}))
            begin
              reg33 <= reg26;
              reg34 <= (-(({wire16} ? $signed(wire15) : (wire21 & reg23)) ?
                  (reg30 | (~|reg22)) : (~&{reg33})));
            end
          else
            begin
              reg33 <= reg34[(1'h1):(1'h0)];
              reg34 <= reg22[(3'h4):(2'h2)];
              reg35 <= {{wire16}};
            end
        end
      reg36 <= ((wire14[(1'h1):(1'h0)] ?
              $unsigned((^~wire20)) : (~|reg27[(4'hb):(4'ha)])) ?
          reg28[(3'h6):(3'h6)] : (~&(reg32[(1'h0):(1'h0)] <= (reg22 && reg23))));
    end
  assign wire37 = reg33[(3'h6):(3'h6)];
  assign wire38 = ((reg29[(2'h2):(2'h2)] ~^ (+(wire14 << wire17))) ?
                      {$unsigned($unsigned((8'ha3)))} : ((reg33[(1'h0):(1'h0)] & (!wire14)) ?
                          ($unsigned(reg29) <<< $unsigned(wire16)) : $unsigned((reg27 <= reg32))));
  assign wire39 = (reg26 ?
                      ((&$signed(reg35)) ^~ reg34[(3'h5):(3'h5)]) : {reg28[(4'h9):(3'h6)]});
  assign wire40 = wire14[(2'h3):(1'h0)];
  assign wire41 = ($signed($signed($unsigned((8'haf)))) ?
                      reg29 : (&$signed((-reg19))));
  assign wire42 = reg36[(1'h0):(1'h0)];
endmodule