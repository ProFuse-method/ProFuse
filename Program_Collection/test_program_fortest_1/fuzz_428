(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param41 = {(~|{(+(8'ha9))})})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h42):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire [(3'h5):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire40;
  wire signed [(4'h9):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire38;
  wire signed [(2'h3):(1'h0)] wire37;
  wire [(3'h6):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire35;
  wire [(3'h6):(1'h0)] wire33;
  wire signed [(4'h9):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire4;
  assign y = {wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire33,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = $signed(wire1);
  assign wire5 = $signed((|((wire2 ? wire1 : (8'h9e)) ?
                     $unsigned(wire2) : wire3[(1'h0):(1'h0)])));
  assign wire6 = $unsigned($unsigned((((8'ha4) ? wire0 : wire2) >> (wire3 ?
                     wire1 : wire4))));
  module7 #() modinst34 (wire33, clk, wire0, wire1, wire3, wire5);
  assign wire35 = $unsigned(($unsigned($unsigned(wire33)) ?
                      (wire1 * wire2) : {(~wire33)}));
  assign wire36 = (~^wire2);
  assign wire37 = (wire2 ?
                      wire4[(2'h2):(2'h2)] : $unsigned({wire1[(2'h3):(2'h2)]}));
  assign wire38 = $signed({{$signed(wire4)}});
  assign wire39 = $unsigned((((wire37 ~^ (8'ha2)) ?
                      (wire2 && wire1) : wire33[(3'h6):(3'h4)]) << (+(wire36 ?
                      wire36 : wire1))));
  assign wire40 = $unsigned($signed($unsigned((!wire37))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param32 = {({((8'haf) ? (8'ha7) : (8'ha3))} ? ({(8'ha3)} < (~(8'ha8))) : (~|((8'ha2) ? (8'ha2) : (8'hac))))})
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h2a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire11;
  input wire [(3'h7):(1'h0)] wire10;
  input wire signed [(3'h6):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire8;
  wire [(2'h2):(1'h0)] wire30;
  wire signed [(3'h7):(1'h0)] wire18;
  wire signed [(3'h5):(1'h0)] wire17;
  wire signed [(3'h4):(1'h0)] wire16;
  wire signed [(4'ha):(1'h0)] wire14;
  wire [(4'h8):(1'h0)] wire13;
  wire signed [(2'h2):(1'h0)] wire12;
  reg [(2'h3):(1'h0)] reg15 = (1'h0);
  assign y = {wire30,
                 wire18,
                 wire17,
                 wire16,
                 wire14,
                 wire13,
                 wire12,
                 reg15,
                 (1'h0)};
  assign wire12 = ({wire10} ? {wire10[(1'h1):(1'h0)]} : wire9[(2'h3):(2'h2)]);
  assign wire13 = $signed((-$signed(wire10)));
  assign wire14 = $signed((($signed(wire13) ?
                      (wire10 ?
                          (8'ha0) : wire8) : wire10[(3'h4):(2'h3)]) - (wire9 ~^ $unsigned(wire11))));
  always
    @(posedge clk) begin
      reg15 <= (|wire8[(1'h1):(1'h1)]);
    end
  assign wire16 = ($signed({(wire12 * wire9)}) >= ({(wire11 != wire8)} >> {$unsigned(reg15)}));
  assign wire17 = $unsigned(wire11);
  assign wire18 = (wire8 ? (-reg15) : wire14[(2'h2):(1'h0)]);
  module19 #() modinst31 (.y(wire30), .wire23(wire8), .clk(clk), .wire20(wire12), .wire22(wire17), .wire21(wire13));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module19  (y, clk, wire23, wire22, wire21, wire20);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire23;
  input wire signed [(3'h5):(1'h0)] wire22;
  input wire [(2'h3):(1'h0)] wire21;
  input wire [(2'h2):(1'h0)] wire20;
  wire [(4'h8):(1'h0)] wire29;
  wire [(2'h2):(1'h0)] wire28;
  wire signed [(3'h6):(1'h0)] wire27;
  wire signed [(4'ha):(1'h0)] wire26;
  wire signed [(3'h7):(1'h0)] wire25;
  wire [(2'h2):(1'h0)] wire24;
  assign y = {wire29, wire28, wire27, wire26, wire25, wire24, (1'h0)};
  assign wire24 = (~|wire23);
  assign wire25 = (wire24 > wire24[(2'h2):(1'h0)]);
  assign wire26 = {(({wire23} & {(8'hac)}) ?
                          (-$unsigned(wire25)) : ((~|wire20) ?
                              $unsigned(wire24) : $signed((8'h9e))))};
  assign wire27 = (wire25[(1'h0):(1'h0)] ?
                      $unsigned($signed($unsigned(wire26))) : $unsigned(wire22[(1'h0):(1'h0)]));
  assign wire28 = wire25;
  assign wire29 = $signed((~^$unsigned($signed(wire27))));
endmodule