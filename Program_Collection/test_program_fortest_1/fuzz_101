(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param37 = (-((8'haf) ? {{(8'haa)}} : ((~^(8'ha6)) && ((8'h9c) ? (8'ha1) : (8'ha0))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire36;
  wire [(3'h7):(1'h0)] wire34;
  wire [(2'h2):(1'h0)] wire33;
  wire [(2'h3):(1'h0)] wire32;
  wire signed [(4'hb):(1'h0)] wire31;
  wire [(3'h7):(1'h0)] wire30;
  wire signed [(3'h7):(1'h0)] wire29;
  wire signed [(4'h8):(1'h0)] wire27;
  assign y = {wire36,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire27,
                 (1'h0)};
  module4 #() modinst28 (wire27, clk, wire1, wire2, wire3, wire0);
  assign wire29 = (wire0[(2'h2):(1'h1)] || (wire1 ^~ wire1));
  assign wire30 = ($signed(wire3[(2'h2):(2'h2)]) >= $signed($unsigned((wire1 ?
                      wire29 : wire0))));
  assign wire31 = ((($unsigned(wire1) || (wire1 ? (8'h9e) : wire2)) ?
                          wire2 : $signed((wire27 ? wire30 : (8'ha1)))) ?
                      wire29 : $signed((~&(^wire29))));
  assign wire32 = {{(wire27 <= $signed(wire1))}};
  assign wire33 = wire31;
  module4 #() modinst35 (.wire6(wire2), .wire8(wire31), .wire7(wire29), .clk(clk), .wire5(wire0), .y(wire34));
  assign wire36 = $unsigned(($unsigned({wire27}) < wire32[(1'h1):(1'h1)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param26 = (8'h9f))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h1b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire8;
  input wire signed [(3'h5):(1'h0)] wire7;
  input wire signed [(4'h8):(1'h0)] wire6;
  input wire [(4'ha):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire11;
  wire signed [(2'h3):(1'h0)] wire10;
  wire [(2'h3):(1'h0)] wire9;
  assign y = {wire24, wire11, wire10, wire9, (1'h0)};
  assign wire9 = wire8;
  assign wire10 = {wire6};
  assign wire11 = wire5[(1'h1):(1'h1)];
  module12 #() modinst25 (.clk(clk), .y(wire24), .wire14(wire10), .wire15(wire11), .wire13(wire6), .wire16(wire7));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param23 = ((~|(~^((8'ha8) ? (8'ha6) : (8'ha8)))) * ({((8'h9f) >> (8'ha8))} == (((8'ha0) ? (8'h9e) : (8'hb0)) ? (~^(8'ha5)) : (!(8'h9f))))))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire16;
  input wire signed [(4'h9):(1'h0)] wire15;
  input wire signed [(2'h3):(1'h0)] wire14;
  input wire [(2'h3):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire20;
  wire [(2'h2):(1'h0)] wire19;
  wire signed [(2'h2):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire17;
  assign y = {wire22, wire21, wire20, wire19, wire18, wire17, (1'h0)};
  assign wire17 = (~^{wire13[(2'h2):(1'h1)]});
  assign wire18 = wire14;
  assign wire19 = (wire13[(2'h3):(1'h1)] ?
                      $unsigned(wire14) : wire18[(2'h2):(2'h2)]);
  assign wire20 = $unsigned($unsigned($signed((wire15 ? wire14 : wire19))));
  assign wire21 = $signed($unsigned((!$unsigned(wire20))));
  assign wire22 = $signed((!wire20[(3'h5):(3'h4)]));
endmodule