(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param395 = (^(((~|(|(7'h41))) >= (((8'hb6) ? (8'hbb) : (8'hbc)) ? ((8'ha1) != (8'hbd)) : (-(8'hb1)))) && ((8'hb9) ? (^((8'had) ? (8'hb4) : (8'hb7))) : (7'h44)))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h294):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h15):(1'h0)] wire0;
  input wire signed [(5'h14):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire3;
  wire signed [(4'h9):(1'h0)] wire394;
  wire signed [(5'h13):(1'h0)] wire392;
  wire signed [(4'hc):(1'h0)] wire330;
  wire [(3'h7):(1'h0)] wire332;
  wire signed [(3'h6):(1'h0)] wire333;
  wire signed [(2'h2):(1'h0)] wire334;
  wire [(4'hd):(1'h0)] wire335;
  wire signed [(4'ha):(1'h0)] wire369;
  wire [(4'he):(1'h0)] wire370;
  wire signed [(4'hc):(1'h0)] wire371;
  wire [(5'h11):(1'h0)] wire372;
  wire [(4'hc):(1'h0)] wire389;
  wire [(2'h3):(1'h0)] wire390;
  reg [(5'h13):(1'h0)] reg336 = (1'h0);
  reg [(3'h5):(1'h0)] reg337 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg342 = (1'h0);
  reg [(4'hb):(1'h0)] reg343 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg345 = (1'h0);
  reg [(5'h12):(1'h0)] reg347 = (1'h0);
  reg [(3'h4):(1'h0)] reg348 = (1'h0);
  reg [(2'h3):(1'h0)] reg349 = (1'h0);
  reg [(4'hd):(1'h0)] reg353 = (1'h0);
  reg [(4'hd):(1'h0)] reg354 = (1'h0);
  reg [(5'h12):(1'h0)] reg356 = (1'h0);
  reg [(2'h3):(1'h0)] reg359 = (1'h0);
  reg signed [(4'he):(1'h0)] reg362 = (1'h0);
  reg [(4'hf):(1'h0)] reg363 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg366 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg367 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg368 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg376 = (1'h0);
  reg [(3'h7):(1'h0)] reg380 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg381 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg382 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg384 = (1'h0);
  reg [(2'h2):(1'h0)] reg386 = (1'h0);
  reg [(4'hf):(1'h0)] reg387 = (1'h0);
  reg [(2'h2):(1'h0)] reg388 = (1'h0);
  reg [(3'h7):(1'h0)] reg385 = (1'h0);
  reg [(5'h10):(1'h0)] forvar383 = (1'h0);
  reg [(4'hd):(1'h0)] reg379 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar378 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg377 = (1'h0);
  reg [(4'hf):(1'h0)] forvar375 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar374 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg373 = (1'h0);
  reg [(5'h11):(1'h0)] reg365 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar364 = (1'h0);
  reg [(4'h8):(1'h0)] forvar361 = (1'h0);
  reg [(3'h6):(1'h0)] reg360 = (1'h0);
  reg [(2'h3):(1'h0)] forvar358 = (1'h0);
  reg [(4'h8):(1'h0)] forvar357 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar355 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg352 = (1'h0);
  reg [(4'h8):(1'h0)] reg351 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar350 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg346 = (1'h0);
  reg [(4'hf):(1'h0)] forvar344 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg341 = (1'h0);
  reg [(4'hb):(1'h0)] reg340 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar339 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar338 = (1'h0);
  assign y = {wire394,
                 wire392,
                 wire330,
                 wire332,
                 wire333,
                 wire334,
                 wire335,
                 wire369,
                 wire370,
                 wire371,
                 wire372,
                 wire389,
                 wire390,
                 reg336,
                 reg337,
                 reg342,
                 reg343,
                 reg345,
                 reg347,
                 reg348,
                 reg349,
                 reg353,
                 reg354,
                 reg356,
                 reg359,
                 reg362,
                 reg363,
                 reg366,
                 reg367,
                 reg368,
                 reg376,
                 reg380,
                 reg381,
                 reg382,
                 reg384,
                 reg386,
                 reg387,
                 reg388,
                 reg385,
                 forvar383,
                 reg379,
                 forvar378,
                 reg377,
                 forvar375,
                 forvar374,
                 reg373,
                 reg365,
                 forvar364,
                 forvar361,
                 reg360,
                 forvar358,
                 forvar357,
                 forvar355,
                 reg352,
                 reg351,
                 forvar350,
                 reg346,
                 forvar344,
                 reg341,
                 reg340,
                 forvar339,
                 forvar338,
                 (1'h0)};
  module4 #() modinst331 (.wire5((8'haf)), .wire6(wire1), .wire9(wire0), .y(wire330), .clk(clk), .wire7(wire2), .wire8(wire3));
  assign wire332 = $signed($unsigned(wire0));
  assign wire333 = $signed(wire332);
  assign wire334 = wire2[(2'h2):(1'h1)];
  assign wire335 = $unsigned({(~$unsigned(wire334))});
  always
    @(posedge clk) begin
      reg336 <= (($signed(({wire1,
              wire0} * $unsigned(wire0))) - $signed($signed((~^(7'h43))))) ?
          ({$signed({wire3}),
                  (((8'hbb) ? wire335 : wire335) ? {wire333} : wire333)} ?
              (~&$unsigned((wire0 >> wire330))) : wire335[(1'h1):(1'h0)]) : $unsigned($signed((wire1 && $signed((8'ha6))))));
      reg337 <= $unsigned($signed(wire0));
      for (forvar338 = (1'h0); (forvar338 < (3'h4)); forvar338 = (forvar338 + (1'h1)))
        begin
          for (forvar339 = (1'h0); (forvar339 < (2'h3)); forvar339 = (forvar339 + (1'h1)))
            begin
              reg340 = (^wire333[(3'h6):(2'h3)]);
              reg341 = forvar338;
              reg342 <= ({((8'hba) ?
                          (+(+wire335)) : ((reg337 ? forvar339 : (7'h40)) ?
                              (~^(8'hb5)) : (wire3 ? wire0 : (8'hbf))))} ?
                  {($signed((wire335 << forvar339)) == wire333[(3'h6):(2'h2)])} : $signed(wire333[(1'h0):(1'h0)]));
              reg343 <= forvar338[(2'h2):(1'h0)];
            end
          for (forvar344 = (1'h0); (forvar344 < (2'h3)); forvar344 = (forvar344 + (1'h1)))
            begin
              reg345 <= $unsigned(wire330[(3'h4):(1'h0)]);
              reg346 = $signed($signed((&$signed($unsigned(wire332)))));
              reg347 <= reg346;
              reg348 <= (^~(!($unsigned(wire330) ?
                  reg342[(4'h9):(1'h1)] : ((reg342 ?
                      reg340 : reg342) >= $signed(wire0)))));
              reg349 <= ((&(&(!reg347))) != forvar338[(1'h0):(1'h0)]);
            end
          for (forvar350 = (1'h0); (forvar350 < (2'h3)); forvar350 = (forvar350 + (1'h1)))
            begin
              reg351 = (~|$unsigned(((8'h9f) - $signed(reg348[(3'h4):(2'h3)]))));
              reg352 = $signed(reg347[(4'he):(4'h8)]);
              reg353 <= forvar339;
              reg354 <= ($unsigned((^~($unsigned((8'h9e)) ?
                  wire334 : ((8'hb7) < reg340)))) * ((({reg337} ?
                      $signed((8'hb0)) : $signed(wire1)) ?
                  wire2 : $unsigned((reg353 ^ forvar344))) * {((wire3 << (7'h40)) ?
                      (^~wire3) : {reg349, forvar338})}));
            end
          for (forvar355 = (1'h0); (forvar355 < (2'h3)); forvar355 = (forvar355 + (1'h1)))
            begin
              reg356 <= {reg345, wire330[(4'hb):(4'h9)]};
            end
        end
      for (forvar357 = (1'h0); (forvar357 < (2'h3)); forvar357 = (forvar357 + (1'h1)))
        begin
          for (forvar358 = (1'h0); (forvar358 < (2'h3)); forvar358 = (forvar358 + (1'h1)))
            begin
              reg359 <= (~|forvar344);
              reg360 = ({$signed(wire333), reg343[(4'h9):(4'h9)]} ?
                  (^~$unsigned($unsigned(reg356))) : $unsigned((^((forvar357 >>> (7'h40)) ?
                      $signed(forvar358) : $signed(reg354)))));
            end
          for (forvar361 = (1'h0); (forvar361 < (2'h2)); forvar361 = (forvar361 + (1'h1)))
            begin
              reg362 <= reg343;
              reg363 <= (reg360[(1'h0):(1'h0)] << ($unsigned((&(reg341 * reg362))) || $unsigned((-(wire335 * wire0)))));
            end
          for (forvar364 = (1'h0); (forvar364 < (1'h0)); forvar364 = (forvar364 + (1'h1)))
            begin
              reg365 = $signed($unsigned($signed($signed($signed(forvar364)))));
              reg366 <= (~&$unsigned((($unsigned(reg351) ?
                  ((8'hbc) ?
                      reg359 : wire333) : (~&wire332)) + ((wire3 | reg362) ?
                  (reg359 ? (8'ha1) : (8'hb0)) : (-wire0)))));
              reg367 <= reg353[(3'h5):(1'h0)];
              reg368 <= (reg341 ?
                  (reg359[(2'h3):(2'h2)] + (reg336 ?
                      forvar364 : reg343)) : ($unsigned(forvar338) > $signed(reg342)));
            end
        end
    end
  assign wire369 = (~&((^(-(~&reg363))) ~^ $signed($signed(reg342))));
  assign wire370 = $signed((~{reg362, ((^reg347) >> (wire369 - wire1))}));
  assign wire371 = $signed({((reg353 ? {reg336} : wire333[(2'h3):(1'h0)]) ?
                           (reg349 ?
                               reg337[(3'h5):(3'h4)] : wire370) : wire369),
                       {(8'hb8), ((-reg368) ^ (reg356 ? reg347 : reg349))}});
  assign wire372 = ({reg354} ?
                       ((wire335 ? $signed({reg362}) : (^reg342)) * ({(reg359 ?
                                   wire333 : reg348),
                               (reg368 ? reg362 : wire330)} ?
                           ({wire1,
                               wire0} * wire369[(1'h0):(1'h0)]) : (wire332 ?
                               $unsigned((8'hac)) : (&reg363)))) : $signed({($unsigned(reg347) ?
                               reg342 : (~&reg356)),
                           (~^(reg336 >> reg363))}));
  always
    @(posedge clk) begin
      reg373 = reg349;
      for (forvar374 = (1'h0); (forvar374 < (1'h1)); forvar374 = (forvar374 + (1'h1)))
        begin
          for (forvar375 = (1'h0); (forvar375 < (1'h1)); forvar375 = (forvar375 + (1'h1)))
            begin
              reg376 <= $unsigned(($signed($signed(reg363)) <= $signed(wire371[(4'ha):(3'h4)])));
            end
          reg377 = ((~|(-reg362)) ^ $unsigned(((reg347[(4'hc):(3'h6)] ?
              $signed(reg353) : (reg376 ~^ reg354)) << ((reg343 ?
              reg366 : wire330) - $signed(reg366)))));
          for (forvar378 = (1'h0); (forvar378 < (1'h0)); forvar378 = (forvar378 + (1'h1)))
            begin
              reg379 = (reg362 || {$unsigned({$unsigned(wire369)}),
                  ($unsigned((|wire3)) ~^ (8'hbf))});
              reg380 <= wire2;
              reg381 <= ($signed((|reg377)) < $unsigned($unsigned(($unsigned(reg343) || $signed((8'hb3))))));
              reg382 <= (8'hac);
            end
          for (forvar383 = (1'h0); (forvar383 < (1'h1)); forvar383 = (forvar383 + (1'h1)))
            begin
              reg384 <= ({($signed(reg362) ?
                      {(reg379 >>> reg373)} : $signed((8'h9e))),
                  ($unsigned($signed(forvar374)) > reg367)} | $signed($unsigned($unsigned((wire333 << wire369)))));
              reg385 = (8'hb0);
              reg386 <= $signed($unsigned($unsigned(reg380)));
              reg387 <= reg359;
              reg388 = ({wire334[(1'h0):(1'h0)]} ?
                  ({(|(reg386 ?
                          reg368 : reg337))} + (&$unsigned(reg363))) : {reg373[(3'h7):(3'h7)]});
            end
        end
    end
  assign wire389 = reg366[(4'ha):(3'h7)];
  module38 #() modinst391 (wire390, clk, reg345, reg368, wire389, wire1, wire2);
  module21 #() modinst393 (wire392, clk, wire371, reg362, wire369, reg359, reg376);
  assign wire394 = $signed((~reg356[(4'hc):(4'ha)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param328 = ((~|((^((8'hbf) ? (8'hb9) : (8'hb4))) && {((8'hba) ? (8'hb2) : (8'ha9))})) ? (~((((8'hbd) ? (8'ha6) : (8'ha4)) ^ ((8'hb7) ? (7'h41) : (8'ha2))) <= (((8'ha3) ? (8'hbf) : (8'hb4)) ? ((7'h43) >> (7'h40)) : ((8'ha5) ? (7'h43) : (8'hb4))))) : (|((((8'h9f) >>> (8'ha8)) ? (~|(7'h43)) : (|(8'ha4))) ? ((+(8'h9d)) + (8'hbf)) : (~^(~&(8'hb8)))))), 
parameter param329 = (^~(~^{(^(param328 ? param328 : (8'hb6)))})))
(y, clk, wire9, wire8, wire7, wire6, wire5);
  output wire [(32'h173):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hd):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(3'h4):(1'h0)] wire7;
  input wire [(4'hc):(1'h0)] wire6;
  input wire [(3'h5):(1'h0)] wire5;
  wire [(4'hc):(1'h0)] wire326;
  wire [(4'hd):(1'h0)] wire250;
  wire signed [(3'h6):(1'h0)] wire238;
  wire signed [(4'hb):(1'h0)] wire236;
  wire signed [(4'h8):(1'h0)] wire149;
  wire signed [(5'h11):(1'h0)] wire35;
  wire signed [(5'h15):(1'h0)] wire20;
  wire signed [(5'h14):(1'h0)] wire19;
  wire [(4'h8):(1'h0)] wire37;
  wire signed [(5'h13):(1'h0)] wire147;
  reg signed [(4'h9):(1'h0)] reg12 = (1'h0);
  reg [(4'hc):(1'h0)] reg242 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg244 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg245 = (1'h0);
  reg [(4'ha):(1'h0)] reg246 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg247 = (1'h0);
  reg [(3'h6):(1'h0)] reg248 = (1'h0);
  reg [(5'h10):(1'h0)] reg249 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar243 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg241 = (1'h0);
  reg [(2'h2):(1'h0)] forvar240 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar239 = (1'h0);
  reg [(4'hd):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg17 = (1'h0);
  reg [(5'h13):(1'h0)] forvar16 = (1'h0);
  reg [(5'h14):(1'h0)] forvar15 = (1'h0);
  reg [(3'h4):(1'h0)] reg14 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg13 = (1'h0);
  reg [(2'h2):(1'h0)] forvar11 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar10 = (1'h0);
  assign y = {wire326,
                 wire250,
                 wire238,
                 wire236,
                 wire149,
                 wire35,
                 wire20,
                 wire19,
                 wire37,
                 wire147,
                 reg12,
                 reg242,
                 reg244,
                 reg245,
                 reg246,
                 reg247,
                 reg248,
                 reg249,
                 forvar243,
                 reg241,
                 forvar240,
                 forvar239,
                 reg18,
                 reg17,
                 forvar16,
                 forvar15,
                 reg14,
                 reg13,
                 forvar11,
                 forvar10,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar10 = (1'h0); (forvar10 < (2'h3)); forvar10 = (forvar10 + (1'h1)))
        begin
          for (forvar11 = (1'h0); (forvar11 < (2'h2)); forvar11 = (forvar11 + (1'h1)))
            begin
              reg12 <= ($signed(($unsigned((!wire5)) ?
                      ((^~(8'h9c)) ?
                          $unsigned(wire8) : wire5) : $unsigned((wire7 ?
                          wire9 : wire7)))) ?
                  forvar11 : $signed(forvar11));
              reg13 = ({{$unsigned((wire6 ? reg12 : (8'h9f)))}} ?
                  (((&$signed(wire9)) ? wire5 : $signed({wire5})) ?
                      (wire8[(3'h7):(2'h3)] ?
                          {wire8,
                              $unsigned(wire9)} : $signed($signed(wire6))) : ({((8'ha7) ?
                                  wire7 : forvar11)} ?
                          wire6[(3'h6):(1'h0)] : {reg12})) : $signed((-(~|wire8))));
              reg14 = (~wire9[(4'h8):(3'h4)]);
            end
        end
      for (forvar15 = (1'h0); (forvar15 < (1'h0)); forvar15 = (forvar15 + (1'h1)))
        begin
          for (forvar16 = (1'h0); (forvar16 < (2'h2)); forvar16 = (forvar16 + (1'h1)))
            begin
              reg17 = (&$unsigned($signed($signed((+wire9)))));
              reg18 = $unsigned((^~{$signed($unsigned(wire5))}));
            end
        end
    end
  assign wire19 = $unsigned(({wire7[(1'h0):(1'h0)],
                      $unsigned((|(8'hbe)))} - $unsigned($unsigned(wire6))));
  assign wire20 = ($signed(((+(reg12 ? wire5 : wire9)) + ((~(8'hac)) ?
                          $signed(reg12) : $unsigned(wire5)))) ?
                      $signed((((wire6 != wire5) > (wire8 && wire9)) >= $signed((-wire7)))) : wire7);
  module21 #() modinst36 (.wire22(wire9), .wire23(wire5), .wire26(wire7), .y(wire35), .wire25(wire20), .clk(clk), .wire24(wire8));
  assign wire37 = ((({(wire35 << wire7)} ? {$unsigned(wire20)} : wire19) ?
                          ({$unsigned(wire19)} | wire6[(3'h4):(1'h0)]) : wire20[(4'hc):(3'h6)]) ?
                      (wire20 >>> (~{{wire35, wire35},
                          (reg12 ?
                              wire5 : wire8)})) : ($signed(wire20[(5'h10):(4'h9)]) ?
                          (^wire9) : ($signed(reg12) < ((wire19 ?
                                  wire20 : (8'hb8)) ?
                              wire9[(3'h4):(3'h4)] : {wire35}))));
  module38 #() modinst148 (wire147, clk, wire20, wire35, wire6, wire19, wire37);
  assign wire149 = $unsigned(({{{wire9}, $signed(wire9)}} ?
                       (~wire35[(3'h4):(2'h3)]) : $unsigned((~^(reg12 ?
                           wire37 : wire20)))));
  module150 #() modinst237 (.wire153(wire35), .y(wire236), .wire154(wire5), .wire152(wire149), .wire151(wire147), .clk(clk));
  assign wire238 = ((~&$unsigned({{wire19},
                       (8'ha3)})) ~^ $unsigned((~|$signed((wire20 ?
                       reg12 : wire6)))));
  always
    @(posedge clk) begin
      for (forvar239 = (1'h0); (forvar239 < (1'h0)); forvar239 = (forvar239 + (1'h1)))
        begin
          for (forvar240 = (1'h0); (forvar240 < (1'h0)); forvar240 = (forvar240 + (1'h1)))
            begin
              reg241 = (($signed($unsigned(((8'haf) || wire6))) ^ ($signed((forvar239 - wire6)) >= reg12[(4'h8):(3'h7)])) ~^ (8'ha6));
              reg242 <= (wire8 != $unsigned((forvar240[(1'h1):(1'h0)] ?
                  wire37 : $unsigned($unsigned(wire20)))));
            end
          for (forvar243 = (1'h0); (forvar243 < (1'h0)); forvar243 = (forvar243 + (1'h1)))
            begin
              reg244 <= (+reg241);
              reg245 <= $signed({((|(~wire147)) * $unsigned((~|wire238))),
                  ((8'hb2) ? (~$unsigned(wire149)) : wire236[(1'h1):(1'h1)])});
              reg246 <= (~|$signed((-($unsigned(wire35) ?
                  $signed(reg12) : {forvar243, wire5}))));
              reg247 <= ((wire37 ?
                      (+(-wire20[(1'h0):(1'h0)])) : (+(wire35 ?
                          (wire149 | forvar240) : {wire6, reg241}))) ?
                  ({$unsigned({(8'hbe)})} + $signed(wire236)) : $unsigned((^~$unsigned(reg242[(2'h3):(2'h2)]))));
            end
          reg248 <= (($signed(($signed(wire7) ?
                      reg241[(5'h14):(5'h13)] : $unsigned(wire147))) ?
                  (!wire5[(2'h3):(1'h0)]) : (8'ha2)) ?
              ((((-wire37) ? $signed(wire20) : wire238) ?
                      (8'haf) : (wire19[(5'h10):(1'h0)] ?
                          (wire19 ? (8'hb0) : reg246) : $unsigned(reg242))) ?
                  {(((8'hb9) ? wire236 : wire5) ? wire8 : $unsigned((8'hac))),
                      ($unsigned(wire19) - wire9)} : (^(~^(wire37 < wire37)))) : wire147);
          reg249 <= forvar243[(4'ha):(3'h4)];
        end
    end
  assign wire250 = ({(~|wire7[(1'h0):(1'h0)]), (!$signed((~^reg246)))} ?
                       $unsigned((~(reg248 ?
                           $signed(reg242) : (wire6 ?
                               wire6 : wire5)))) : (&wire8));
  module251 #() modinst327 (.clk(clk), .wire256(wire8), .wire254(wire20), .wire255(wire236), .y(wire326), .wire252(reg248), .wire253(wire6));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module251
#(parameter param324 = (~^{(({(8'had)} >> ((8'ha7) - (8'hae))) * ((8'ha5) ? ((8'hbd) << (8'haf)) : (~(8'hb9)))), (({(8'hb4)} ? (+(8'hae)) : {(7'h43), (8'hb4)}) < ((+(8'hbf)) ? ((8'hba) & (8'hb9)) : (^~(7'h44))))}), 
parameter param325 = ((param324 ^ param324) * (({{param324}, (param324 + param324)} ? ({param324} ? {(8'ha8), param324} : param324) : (param324 ? param324 : param324)) ? {((~^(8'ha6)) * ((7'h43) ~^ param324)), ((param324 * (8'hb8)) ^ param324)} : param324)))
(y, clk, wire256, wire255, wire254, wire253, wire252);
  output wire [(32'h340):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire256;
  input wire [(4'hb):(1'h0)] wire255;
  input wire [(4'ha):(1'h0)] wire254;
  input wire [(4'h8):(1'h0)] wire253;
  input wire signed [(3'h4):(1'h0)] wire252;
  wire [(4'h9):(1'h0)] wire323;
  wire [(5'h15):(1'h0)] wire322;
  wire signed [(3'h5):(1'h0)] wire311;
  wire signed [(5'h14):(1'h0)] wire310;
  wire [(5'h13):(1'h0)] wire309;
  wire [(4'h8):(1'h0)] wire308;
  wire [(4'he):(1'h0)] wire307;
  wire signed [(4'he):(1'h0)] wire306;
  wire [(3'h6):(1'h0)] wire289;
  wire [(5'h11):(1'h0)] wire288;
  wire signed [(3'h6):(1'h0)] wire260;
  wire [(4'ha):(1'h0)] wire259;
  wire [(4'hf):(1'h0)] wire258;
  wire signed [(5'h15):(1'h0)] wire257;
  reg [(5'h10):(1'h0)] reg318 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg316 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg315 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg305 = (1'h0);
  reg [(5'h13):(1'h0)] reg304 = (1'h0);
  reg signed [(4'he):(1'h0)] reg303 = (1'h0);
  reg [(5'h11):(1'h0)] reg300 = (1'h0);
  reg [(4'hc):(1'h0)] reg297 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg296 = (1'h0);
  reg [(4'hf):(1'h0)] reg294 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg287 = (1'h0);
  reg [(5'h10):(1'h0)] reg286 = (1'h0);
  reg [(2'h2):(1'h0)] reg281 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg279 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg277 = (1'h0);
  reg [(2'h3):(1'h0)] reg276 = (1'h0);
  reg [(3'h4):(1'h0)] reg275 = (1'h0);
  reg signed [(4'he):(1'h0)] reg270 = (1'h0);
  reg [(4'he):(1'h0)] reg269 = (1'h0);
  reg [(4'h9):(1'h0)] reg268 = (1'h0);
  reg [(3'h6):(1'h0)] reg267 = (1'h0);
  reg [(4'hc):(1'h0)] reg265 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg264 = (1'h0);
  reg [(4'hd):(1'h0)] reg262 = (1'h0);
  reg [(3'h7):(1'h0)] reg321 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg320 = (1'h0);
  reg [(5'h13):(1'h0)] forvar319 = (1'h0);
  reg [(4'hb):(1'h0)] forvar317 = (1'h0);
  reg [(5'h13):(1'h0)] reg314 = (1'h0);
  reg [(4'hc):(1'h0)] forvar313 = (1'h0);
  reg [(4'hd):(1'h0)] reg312 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar302 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg301 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar299 = (1'h0);
  reg [(4'h9):(1'h0)] forvar298 = (1'h0);
  reg [(4'h9):(1'h0)] reg295 = (1'h0);
  reg [(4'hb):(1'h0)] reg293 = (1'h0);
  reg [(3'h4):(1'h0)] forvar292 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg291 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar290 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg285 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg284 = (1'h0);
  reg [(4'h8):(1'h0)] forvar283 = (1'h0);
  reg [(3'h5):(1'h0)] reg282 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg280 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg278 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar274 = (1'h0);
  reg [(5'h15):(1'h0)] forvar273 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg272 = (1'h0);
  reg [(3'h4):(1'h0)] forvar271 = (1'h0);
  reg [(4'hb):(1'h0)] forvar266 = (1'h0);
  reg [(5'h12):(1'h0)] forvar263 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar261 = (1'h0);
  assign y = {wire323,
                 wire322,
                 wire311,
                 wire310,
                 wire309,
                 wire308,
                 wire307,
                 wire306,
                 wire289,
                 wire288,
                 wire260,
                 wire259,
                 wire258,
                 wire257,
                 reg318,
                 reg316,
                 reg315,
                 reg305,
                 reg304,
                 reg303,
                 reg300,
                 reg297,
                 reg296,
                 reg294,
                 reg287,
                 reg286,
                 reg281,
                 reg279,
                 reg277,
                 reg276,
                 reg275,
                 reg270,
                 reg269,
                 reg268,
                 reg267,
                 reg265,
                 reg264,
                 reg262,
                 reg321,
                 reg320,
                 forvar319,
                 forvar317,
                 reg314,
                 forvar313,
                 reg312,
                 forvar302,
                 reg301,
                 forvar299,
                 forvar298,
                 reg295,
                 reg293,
                 forvar292,
                 reg291,
                 forvar290,
                 reg285,
                 reg284,
                 forvar283,
                 reg282,
                 reg280,
                 reg278,
                 forvar274,
                 forvar273,
                 reg272,
                 forvar271,
                 forvar266,
                 forvar263,
                 forvar261,
                 (1'h0)};
  assign wire257 = (wire253 && (&wire254[(1'h0):(1'h0)]));
  assign wire258 = $unsigned(wire257[(1'h0):(1'h0)]);
  assign wire259 = (!(^($unsigned($unsigned(wire257)) ?
                       (wire255[(3'h6):(2'h2)] <= $signed(wire256)) : (~|(wire254 - (7'h40))))));
  assign wire260 = $unsigned(wire254);
  always
    @(posedge clk) begin
      for (forvar261 = (1'h0); (forvar261 < (1'h0)); forvar261 = (forvar261 + (1'h1)))
        begin
          reg262 <= ($signed(wire252[(1'h1):(1'h0)]) ?
              wire252 : {wire259[(4'h9):(3'h6)],
                  $unsigned({(wire258 & wire258)})});
          for (forvar263 = (1'h0); (forvar263 < (2'h2)); forvar263 = (forvar263 + (1'h1)))
            begin
              reg264 <= {(forvar261[(2'h2):(1'h1)] <= $unsigned({$unsigned(wire259),
                      $signed(forvar263)})),
                  wire254};
              reg265 <= $unsigned(((reg262[(3'h4):(1'h1)] <<< ($signed(wire258) >= wire259)) ?
                  reg262[(2'h3):(2'h2)] : $unsigned($signed(wire254[(4'ha):(4'ha)]))));
            end
          for (forvar266 = (1'h0); (forvar266 < (1'h0)); forvar266 = (forvar266 + (1'h1)))
            begin
              reg267 <= (!$signed((({reg264} * (-(8'hab))) ?
                  ((~&wire258) ?
                      (7'h44) : $signed(forvar263)) : ({reg265} * reg262))));
              reg268 <= $unsigned($signed(reg267));
              reg269 <= wire260[(3'h6):(2'h3)];
            end
          reg270 <= (~^(wire252 ?
              $signed($signed(((8'ha4) ?
                  reg269 : forvar266))) : ($unsigned($unsigned(wire255)) + (^(wire257 < reg264)))));
          for (forvar271 = (1'h0); (forvar271 < (3'h4)); forvar271 = (forvar271 + (1'h1)))
            begin
              reg272 = (!({(~|(forvar271 <= reg268))} <= $signed(wire258)));
            end
        end
      for (forvar273 = (1'h0); (forvar273 < (2'h3)); forvar273 = (forvar273 + (1'h1)))
        begin
          for (forvar274 = (1'h0); (forvar274 < (2'h3)); forvar274 = (forvar274 + (1'h1)))
            begin
              reg275 <= {(8'hb1),
                  ((reg262 ?
                          ((|forvar271) ?
                              ((8'hb4) ?
                                  forvar271 : (8'ha3)) : $unsigned(reg262)) : {{wire260,
                                  forvar271},
                              $unsigned(reg268)}) ?
                      forvar261 : $signed((8'ha6)))};
              reg276 <= reg265;
              reg277 <= $unsigned({$unsigned({(forvar263 ?
                          forvar271 : wire252)})});
            end
          if ((!(+forvar271[(2'h3):(2'h2)])))
            begin
              reg278 = reg265;
              reg279 <= (~&(reg272[(2'h3):(1'h0)] != {(&(^~reg265)),
                  $signed(reg265[(1'h1):(1'h0)])}));
              reg280 = reg270[(4'ha):(3'h4)];
            end
          else
            begin
              reg279 <= $signed($unsigned((wire253 ^~ $signed($signed(reg268)))));
              reg281 <= (wire260[(2'h3):(1'h1)] ^~ (-(^$unsigned((~|forvar261)))));
              reg282 = (reg265 ?
                  forvar273 : $unsigned((((wire254 == wire257) ?
                      forvar273[(5'h13):(4'hb)] : (wire257 << (8'ha9))) + (reg272[(2'h3):(1'h1)] != ((8'hb2) && forvar266)))));
            end
          for (forvar283 = (1'h0); (forvar283 < (2'h2)); forvar283 = (forvar283 + (1'h1)))
            begin
              reg284 = (forvar274[(1'h1):(1'h0)] ?
                  reg276[(2'h3):(2'h3)] : (^~reg262));
              reg285 = reg276;
              reg286 <= ((reg281[(1'h0):(1'h0)] & (reg265[(4'ha):(3'h5)] >= (reg272[(1'h0):(1'h0)] + $unsigned(wire257)))) || $signed((($unsigned(reg276) ?
                      reg281[(2'h2):(2'h2)] : $signed(reg278)) ?
                  $signed(reg285[(2'h2):(1'h0)]) : ((^~wire260) ?
                      $signed(forvar263) : (wire255 ? wire260 : forvar266)))));
              reg287 <= $signed(reg277);
            end
        end
    end
  assign wire288 = (|$unsigned(reg281[(2'h2):(1'h1)]));
  assign wire289 = wire258;
  always
    @(posedge clk) begin
      for (forvar290 = (1'h0); (forvar290 < (1'h1)); forvar290 = (forvar290 + (1'h1)))
        begin
          reg291 = (~|($signed($signed($signed(wire260))) != $unsigned((reg281 ?
              $unsigned((8'h9f)) : $signed(reg277)))));
          for (forvar292 = (1'h0); (forvar292 < (1'h1)); forvar292 = (forvar292 + (1'h1)))
            begin
              reg293 = wire252;
              reg294 <= (^~$signed((&wire259)));
              reg295 = ($signed($signed(((~&(8'hab)) <= (reg264 ?
                  reg267 : reg264)))) >> $signed($unsigned((reg293[(1'h1):(1'h0)] ?
                  reg265 : (^wire252)))));
              reg296 <= (wire288[(1'h1):(1'h1)] != $signed(reg267[(3'h5):(2'h3)]));
              reg297 <= ($signed(($signed((reg268 >> reg262)) ?
                  (reg276[(1'h0):(1'h0)] - (reg293 ?
                      reg281 : forvar290)) : forvar292)) << {($unsigned((wire253 + reg291)) ?
                      {$signed(wire260), $signed(reg270)} : (wire260 ?
                          (forvar292 ? reg262 : wire288) : (reg268 ?
                              wire255 : reg287))),
                  wire252[(2'h2):(1'h1)]});
            end
        end
      for (forvar298 = (1'h0); (forvar298 < (2'h2)); forvar298 = (forvar298 + (1'h1)))
        begin
          for (forvar299 = (1'h0); (forvar299 < (1'h1)); forvar299 = (forvar299 + (1'h1)))
            begin
              reg300 <= (((wire260[(1'h0):(1'h0)] || wire254[(3'h7):(3'h5)]) ?
                      $signed((~^$unsigned(reg279))) : (($unsigned(reg276) >>> $signed(wire288)) ?
                          $signed($unsigned(reg294)) : ((|(8'hb6)) ?
                              $unsigned((7'h42)) : $signed(wire259)))) ?
                  $signed(reg276) : $unsigned($signed($unsigned(wire255))));
            end
          reg301 = $signed((&(~^((reg270 & forvar292) ?
              $unsigned(wire260) : $signed(reg267)))));
          for (forvar302 = (1'h0); (forvar302 < (2'h2)); forvar302 = (forvar302 + (1'h1)))
            begin
              reg303 <= ((8'ha1) ?
                  (8'ha7) : ($signed((~$unsigned(wire253))) ?
                      $unsigned($unsigned(reg286)) : $unsigned(($signed(wire252) ?
                          (!wire288) : (forvar290 ~^ reg291)))));
              reg304 <= reg265[(4'h8):(2'h3)];
              reg305 <= $signed($unsigned($unsigned((-reg295[(3'h7):(2'h2)]))));
            end
        end
    end
  assign wire306 = ((($signed(reg269) ?
                               ((&reg270) != ((8'ha5) ?
                                   (7'h41) : reg277)) : (-reg277[(3'h4):(2'h3)])) ?
                           $signed(({(8'ha8)} || reg287[(2'h2):(2'h2)])) : $signed($signed(reg303[(4'hd):(4'h8)]))) ?
                       reg276[(2'h2):(1'h0)] : {((~|$signed(reg279)) || ((|wire255) ?
                               wire255 : {(8'ha4)})),
                           $signed(reg264[(5'h10):(4'hd)])});
  assign wire307 = (wire253[(2'h2):(1'h1)] * (reg265 ?
                       $unsigned(reg270[(4'hc):(2'h2)]) : {$unsigned((reg279 == wire253)),
                           $signed({reg268})}));
  assign wire308 = $unsigned($unsigned(reg262));
  assign wire309 = $signed(reg264[(4'hb):(1'h0)]);
  assign wire310 = reg275[(1'h0):(1'h0)];
  assign wire311 = reg262[(2'h2):(2'h2)];
  always
    @(posedge clk) begin
      reg312 = $signed(reg277[(4'h8):(3'h4)]);
      for (forvar313 = (1'h0); (forvar313 < (3'h4)); forvar313 = (forvar313 + (1'h1)))
        begin
          reg314 = (7'h41);
          reg315 <= $unsigned($unsigned($unsigned(((wire310 ?
              wire258 : wire308) <<< (wire252 ? wire310 : reg297)))));
          reg316 <= $signed((reg276 <<< (reg275 ?
              (~&{wire259}) : wire307[(2'h2):(1'h1)])));
          for (forvar317 = (1'h0); (forvar317 < (2'h2)); forvar317 = (forvar317 + (1'h1)))
            begin
              reg318 <= ($signed($signed(((~wire254) ?
                      $signed((8'hb2)) : $unsigned(reg303)))) ?
                  ($unsigned({wire289[(3'h4):(3'h4)]}) == reg305) : (($unsigned(wire254[(4'h9):(3'h6)]) ?
                      {(-reg287)} : $signed($signed((8'hbc)))) ~^ $signed(reg315[(4'hb):(1'h0)])));
            end
          for (forvar319 = (1'h0); (forvar319 < (1'h1)); forvar319 = (forvar319 + (1'h1)))
            begin
              reg320 = reg281;
              reg321 = ({reg305, $signed((8'hbe))} || wire307[(4'hd):(3'h7)]);
            end
        end
    end
  assign wire322 = (~^wire257);
  assign wire323 = reg315[(2'h2):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module150
#(parameter param234 = (~&({(((8'ha9) ? (8'hb0) : (8'hb5)) || ((7'h43) ? (8'ha0) : (8'hb4))), (|((8'hbe) ? (8'h9d) : (8'ha5)))} ? (((&(7'h41)) && ((8'hab) ? (8'hbe) : (8'ha1))) <<< {(~|(8'ha5))}) : ((^((8'haa) == (7'h42))) ? (((7'h43) != (7'h40)) >= {(8'hb1), (8'h9d)}) : (((7'h40) ? (8'haa) : (8'hb0)) ? ((8'ha4) * (8'ha9)) : (!(8'ha6)))))), 
parameter param235 = ((param234 ? (param234 >>> param234) : param234) >= (&{(+(param234 * param234))})))
(y, clk, wire154, wire153, wire152, wire151);
  output wire [(32'h39f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire154;
  input wire signed [(4'hc):(1'h0)] wire153;
  input wire [(4'h8):(1'h0)] wire152;
  input wire signed [(5'h11):(1'h0)] wire151;
  wire [(2'h3):(1'h0)] wire233;
  wire [(5'h11):(1'h0)] wire232;
  wire signed [(2'h3):(1'h0)] wire231;
  wire signed [(4'h8):(1'h0)] wire230;
  wire signed [(5'h14):(1'h0)] wire206;
  wire [(4'h8):(1'h0)] wire205;
  wire signed [(4'h8):(1'h0)] wire204;
  wire [(5'h12):(1'h0)] wire203;
  wire signed [(3'h6):(1'h0)] wire202;
  wire signed [(5'h13):(1'h0)] wire201;
  wire [(3'h5):(1'h0)] wire200;
  wire signed [(4'hb):(1'h0)] wire199;
  wire signed [(5'h14):(1'h0)] wire198;
  wire [(5'h14):(1'h0)] wire197;
  wire [(4'hf):(1'h0)] wire159;
  wire signed [(4'hd):(1'h0)] wire158;
  wire signed [(5'h13):(1'h0)] wire157;
  wire signed [(5'h14):(1'h0)] wire156;
  wire [(5'h14):(1'h0)] wire155;
  reg signed [(2'h3):(1'h0)] reg229 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg228 = (1'h0);
  reg [(4'h9):(1'h0)] reg225 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg222 = (1'h0);
  reg [(2'h3):(1'h0)] reg218 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg216 = (1'h0);
  reg [(5'h11):(1'h0)] reg214 = (1'h0);
  reg [(4'h8):(1'h0)] reg211 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg210 = (1'h0);
  reg [(4'ha):(1'h0)] reg196 = (1'h0);
  reg [(4'hf):(1'h0)] reg192 = (1'h0);
  reg [(4'ha):(1'h0)] reg191 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg189 = (1'h0);
  reg [(4'hb):(1'h0)] reg187 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg184 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg182 = (1'h0);
  reg [(3'h7):(1'h0)] reg179 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg176 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg167 = (1'h0);
  reg [(5'h12):(1'h0)] reg165 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg164 = (1'h0);
  reg signed [(4'he):(1'h0)] reg163 = (1'h0);
  reg signed [(4'he):(1'h0)] reg161 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg227 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg226 = (1'h0);
  reg [(4'hc):(1'h0)] forvar224 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg223 = (1'h0);
  reg [(5'h15):(1'h0)] reg221 = (1'h0);
  reg [(3'h4):(1'h0)] forvar220 = (1'h0);
  reg [(2'h3):(1'h0)] forvar219 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg217 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar215 = (1'h0);
  reg [(3'h5):(1'h0)] reg213 = (1'h0);
  reg [(5'h15):(1'h0)] reg212 = (1'h0);
  reg [(5'h14):(1'h0)] forvar209 = (1'h0);
  reg [(4'hd):(1'h0)] reg208 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar207 = (1'h0);
  reg [(5'h10):(1'h0)] reg195 = (1'h0);
  reg [(4'hc):(1'h0)] reg194 = (1'h0);
  reg [(2'h2):(1'h0)] reg193 = (1'h0);
  reg [(5'h10):(1'h0)] forvar190 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar188 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg186 = (1'h0);
  reg [(2'h2):(1'h0)] reg185 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar183 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg181 = (1'h0);
  reg [(4'hb):(1'h0)] reg180 = (1'h0);
  reg [(5'h10):(1'h0)] reg178 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar177 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg175 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg174 = (1'h0);
  reg [(3'h5):(1'h0)] reg173 = (1'h0);
  reg [(2'h2):(1'h0)] reg172 = (1'h0);
  reg [(2'h2):(1'h0)] reg171 = (1'h0);
  reg signed [(4'he):(1'h0)] reg170 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg169 = (1'h0);
  reg [(3'h5):(1'h0)] forvar168 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg166 = (1'h0);
  reg [(5'h15):(1'h0)] reg162 = (1'h0);
  reg [(3'h7):(1'h0)] forvar160 = (1'h0);
  assign y = {wire233,
                 wire232,
                 wire231,
                 wire230,
                 wire206,
                 wire205,
                 wire204,
                 wire203,
                 wire202,
                 wire201,
                 wire200,
                 wire199,
                 wire198,
                 wire197,
                 wire159,
                 wire158,
                 wire157,
                 wire156,
                 wire155,
                 reg229,
                 reg228,
                 reg225,
                 reg222,
                 reg218,
                 reg216,
                 reg214,
                 reg211,
                 reg210,
                 reg196,
                 reg192,
                 reg191,
                 reg189,
                 reg187,
                 reg184,
                 reg182,
                 reg179,
                 reg176,
                 reg167,
                 reg165,
                 reg164,
                 reg163,
                 reg161,
                 reg227,
                 reg226,
                 forvar224,
                 reg223,
                 reg221,
                 forvar220,
                 forvar219,
                 reg217,
                 forvar215,
                 reg213,
                 reg212,
                 forvar209,
                 reg208,
                 forvar207,
                 reg195,
                 reg194,
                 reg193,
                 forvar190,
                 forvar188,
                 reg186,
                 reg185,
                 forvar183,
                 reg181,
                 reg180,
                 reg178,
                 forvar177,
                 reg175,
                 reg174,
                 reg173,
                 reg172,
                 reg171,
                 reg170,
                 reg169,
                 forvar168,
                 reg166,
                 reg162,
                 forvar160,
                 (1'h0)};
  assign wire155 = (~|($signed($unsigned((~^wire153))) << $unsigned(wire152)));
  assign wire156 = $unsigned((wire153[(1'h0):(1'h0)] | (wire155 ?
                       $unsigned($unsigned(wire152)) : wire155)));
  assign wire157 = wire154[(1'h0):(1'h0)];
  assign wire158 = $signed($unsigned($signed((&$unsigned(wire153)))));
  assign wire159 = $unsigned(wire154[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      if ((^(wire151 + (~^(-(wire157 ? wire155 : wire152))))))
        begin
          for (forvar160 = (1'h0); (forvar160 < (2'h3)); forvar160 = (forvar160 + (1'h1)))
            begin
              reg161 <= $signed($signed(($signed(wire158) & wire159)));
            end
        end
      else
        begin
          for (forvar160 = (1'h0); (forvar160 < (2'h3)); forvar160 = (forvar160 + (1'h1)))
            begin
              reg162 = ($signed({$unsigned((wire156 ?
                      wire158 : wire155))}) && wire157[(4'hc):(1'h0)]);
              reg163 <= ((reg161 ?
                  wire158 : wire157[(4'hf):(4'he)]) | ((8'hb9) ?
                  ((!(~wire156)) ?
                      {((8'ha1) >= reg162)} : $signed($unsigned((8'hba)))) : $unsigned($signed((~|reg162)))));
              reg164 <= (~&(+(wire158[(1'h0):(1'h0)] || $unsigned(wire153))));
              reg165 <= ((((|reg163) | {(wire151 ? reg162 : wire154),
                  ((8'hb6) <<< wire157)}) ~^ (~^((8'hb9) - (~&reg162)))) >= $signed(reg161[(4'hc):(4'hb)]));
              reg166 = (&(wire159 >>> ((reg163[(2'h3):(1'h0)] ?
                      ((8'h9f) < wire151) : (!wire152)) ?
                  $unsigned((~&wire157)) : reg161[(2'h2):(1'h0)])));
            end
          reg167 <= (~&wire152);
          for (forvar168 = (1'h0); (forvar168 < (3'h4)); forvar168 = (forvar168 + (1'h1)))
            begin
              reg169 = (!$unsigned(((forvar160[(2'h2):(2'h2)] ?
                      (+(8'h9c)) : (forvar168 ? reg165 : wire155)) ?
                  $signed((^wire156)) : $signed(wire159))));
              reg170 = ((^~((!wire153) ?
                      $signed($signed(reg163)) : $unsigned({(8'h9d)}))) ?
                  wire157[(4'h8):(1'h1)] : ($unsigned((((8'hbf) - wire154) == (reg166 < reg167))) * wire154[(1'h1):(1'h0)]));
              reg171 = reg170;
              reg172 = $signed({$unsigned({$unsigned(reg161),
                      ((8'had) < wire155)})});
              reg173 = (~&$signed($unsigned(reg163[(4'ha):(1'h1)])));
            end
          if (wire151)
            begin
              reg174 = (^~reg172[(1'h0):(1'h0)]);
              reg175 = $unsigned(reg163[(4'h9):(1'h0)]);
            end
          else
            begin
              reg174 = $unsigned((&reg169[(3'h5):(1'h1)]));
              reg176 <= wire154[(1'h0):(1'h0)];
            end
          for (forvar177 = (1'h0); (forvar177 < (1'h0)); forvar177 = (forvar177 + (1'h1)))
            begin
              reg178 = wire159;
              reg179 <= wire153[(4'hc):(3'h4)];
              reg180 = $signed((~&$signed(((reg178 + forvar177) < forvar168[(1'h0):(1'h0)]))));
              reg181 = (&($signed(reg167[(2'h3):(1'h1)]) ?
                  ({$unsigned(reg165)} == ((~^forvar160) >> $unsigned(reg176))) : ({reg164} ?
                      (|reg172[(2'h2):(1'h1)]) : ($signed(reg166) ~^ forvar168[(1'h0):(1'h0)]))));
              reg182 <= ({$unsigned(wire159[(4'ha):(3'h7)])} >= (+{(|reg166)}));
            end
        end
      for (forvar183 = (1'h0); (forvar183 < (2'h3)); forvar183 = (forvar183 + (1'h1)))
        begin
          if ($unsigned(reg172))
            begin
              reg184 <= (((8'had) * ($unsigned(forvar168[(3'h4):(3'h4)]) ?
                      ((|wire159) ?
                          (reg175 <= forvar160) : (reg182 + reg169)) : $signed($signed(reg165)))) ?
                  {(~^reg164[(3'h5):(2'h3)])} : $signed(({(reg169 ?
                          reg173 : forvar168)} <= forvar168[(2'h3):(1'h1)])));
              reg185 = (((+$signed((reg172 ?
                  wire158 : (8'hb0)))) >>> reg184) >= $unsigned($signed(((forvar168 ?
                      reg162 : reg184) ?
                  reg178 : (!reg172)))));
              reg186 = reg176[(1'h1):(1'h1)];
            end
          else
            begin
              reg184 <= (reg166[(4'hc):(4'hc)] ?
                  reg186 : $unsigned(($signed(((8'hbb) ?
                      reg184 : reg184)) ^ reg161)));
            end
          reg187 <= $signed(((&(wire156[(1'h0):(1'h0)] ?
              $signed(reg175) : (|wire159))) >>> $unsigned(wire157[(5'h12):(4'hc)])));
          for (forvar188 = (1'h0); (forvar188 < (1'h1)); forvar188 = (forvar188 + (1'h1)))
            begin
              reg189 <= {reg186};
            end
          for (forvar190 = (1'h0); (forvar190 < (2'h2)); forvar190 = (forvar190 + (1'h1)))
            begin
              reg191 <= $signed(((wire153[(1'h0):(1'h0)] ?
                  (&$unsigned(reg172)) : {$unsigned(reg170),
                      (^~wire153)}) * (~&(+$signed(reg185)))));
              reg192 <= $unsigned(forvar177[(4'h8):(1'h1)]);
              reg193 = {$unsigned((forvar183 << $signed(reg191[(1'h1):(1'h0)]))),
                  {(+$unsigned(reg171)),
                      ((-$unsigned(reg170)) ? wire158 : (-$signed((8'had))))}};
              reg194 = reg175;
              reg195 = $unsigned((&(^~reg162[(1'h0):(1'h0)])));
            end
        end
      reg196 <= wire158;
    end
  assign wire197 = $unsigned({{((reg167 ? wire156 : wire157) ?
                               wire159[(1'h0):(1'h0)] : (wire157 << wire151)),
                           reg167},
                       reg182});
  assign wire198 = (~^$unsigned($unsigned(wire153[(3'h4):(1'h1)])));
  assign wire199 = $signed($signed($unsigned($signed(reg176))));
  assign wire200 = $signed((($signed(reg182) ?
                       ({reg182} + ((7'h44) ?
                           (8'hb4) : reg176)) : wire198) + (^$signed($signed(wire198)))));
  assign wire201 = ((+($signed(wire154) == {$unsigned(reg165)})) * ((!wire157[(4'ha):(3'h5)]) * $unsigned(reg176[(2'h2):(2'h2)])));
  assign wire202 = $unsigned($signed((&(^$signed(wire155)))));
  assign wire203 = wire153[(4'h8):(2'h2)];
  assign wire204 = $signed(wire203);
  assign wire205 = ((~(((wire204 <= wire157) + (8'hb9)) ?
                       wire155[(3'h5):(1'h0)] : (&(reg189 ?
                           wire159 : reg191)))) ^ {wire201,
                       (reg184 < (8'ha1))});
  assign wire206 = (reg176[(3'h7):(1'h0)] * ($signed(wire156) ?
                       wire199 : $signed(reg189[(1'h1):(1'h0)])));
  always
    @(posedge clk) begin
      for (forvar207 = (1'h0); (forvar207 < (3'h4)); forvar207 = (forvar207 + (1'h1)))
        begin
          reg208 = $signed(({(|(wire151 ? wire202 : wire157)),
              {wire205[(2'h2):(1'h0)],
                  {wire153, reg182}}} <= (((wire198 ~^ wire203) ?
              {wire199} : {reg192}) | (wire154[(2'h2):(2'h2)] < (|wire152)))));
          for (forvar209 = (1'h0); (forvar209 < (1'h1)); forvar209 = (forvar209 + (1'h1)))
            begin
              reg210 <= (!(reg167 ? reg164 : reg161));
              reg211 <= (~$unsigned($signed($signed(wire197))));
              reg212 = ((!(~&(reg187 ?
                  (wire157 ?
                      reg179 : reg176) : wire155))) >>> ((+$unsigned(wire153[(3'h7):(3'h4)])) < $signed($signed($unsigned(reg176)))));
              reg213 = reg167[(4'h8):(3'h4)];
              reg214 <= ((wire198 | $signed(((reg182 ?
                      reg167 : reg191) | forvar209))) ?
                  ($unsigned($unsigned((reg192 << wire197))) ?
                      $signed((|((8'ha6) && reg189))) : (($signed(reg179) ?
                              $signed((8'ha8)) : $unsigned((8'hb7))) ?
                          ((reg164 ? wire159 : reg164) ?
                              $signed((8'ha7)) : (~^wire159)) : $signed({(8'h9e),
                              wire203}))) : (~|wire198[(2'h2):(1'h0)]));
            end
          for (forvar215 = (1'h0); (forvar215 < (1'h1)); forvar215 = (forvar215 + (1'h1)))
            begin
              reg216 <= reg161[(3'h5):(1'h1)];
              reg217 = $unsigned(wire152);
              reg218 <= reg192;
            end
        end
      for (forvar219 = (1'h0); (forvar219 < (1'h1)); forvar219 = (forvar219 + (1'h1)))
        begin
          for (forvar220 = (1'h0); (forvar220 < (1'h0)); forvar220 = (forvar220 + (1'h1)))
            begin
              reg221 = wire203[(4'he):(2'h2)];
              reg222 <= forvar209;
            end
          reg223 = reg216;
          for (forvar224 = (1'h0); (forvar224 < (1'h1)); forvar224 = (forvar224 + (1'h1)))
            begin
              reg225 <= (|(wire197 >> $signed({(reg211 ?
                      reg212 : forvar207)})));
              reg226 = (reg161 ?
                  $unsigned(((-(wire151 || (8'hab))) <= $unsigned((-wire203)))) : forvar219);
              reg227 = $signed(wire206[(4'he):(4'he)]);
            end
          reg228 <= $signed($signed((reg211[(3'h7):(3'h7)] < reg227)));
          reg229 <= $signed(wire158);
        end
    end
  assign wire230 = (($unsigned(wire203) ~^ {({reg214} ?
                           {wire159} : {reg176, reg163}),
                       ((~&wire157) <<< $signed(wire153))}) ^ ($unsigned(wire204[(3'h7):(3'h7)]) ^~ (^(|(8'hb9)))));
  assign wire231 = {{($unsigned($signed(reg161)) << $unsigned($signed(reg211))),
                           (~reg184)},
                       ((($signed((8'h9c)) >> reg163) ?
                           ((wire157 ?
                               reg176 : reg191) & wire204[(2'h2):(1'h0)]) : ((reg214 ~^ reg228) ?
                               $signed(wire151) : (+wire206))) ^~ $unsigned((^~(reg225 ?
                           wire204 : wire156))))};
  assign wire232 = $unsigned($signed(($unsigned(reg228[(3'h7):(3'h7)]) ?
                       reg163[(3'h6):(1'h1)] : (wire202[(3'h5):(1'h0)] || ((8'hbb) ?
                           wire197 : wire206)))));
  assign wire233 = (reg182 <= $signed(wire159[(3'h6):(1'h1)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module38  (y, clk, wire43, wire42, wire41, wire40, wire39);
  output wire [(32'h437):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hc):(1'h0)] wire43;
  input wire signed [(5'h11):(1'h0)] wire42;
  input wire signed [(4'hc):(1'h0)] wire41;
  input wire [(5'h14):(1'h0)] wire40;
  input wire signed [(3'h4):(1'h0)] wire39;
  wire signed [(4'h9):(1'h0)] wire146;
  wire [(3'h5):(1'h0)] wire145;
  wire [(4'h9):(1'h0)] wire144;
  wire signed [(2'h2):(1'h0)] wire143;
  wire [(5'h15):(1'h0)] wire142;
  wire signed [(2'h3):(1'h0)] wire124;
  wire [(3'h6):(1'h0)] wire123;
  wire signed [(2'h2):(1'h0)] wire100;
  wire [(3'h5):(1'h0)] wire99;
  wire [(3'h7):(1'h0)] wire98;
  wire [(4'hb):(1'h0)] wire97;
  wire signed [(4'he):(1'h0)] wire96;
  wire signed [(4'h8):(1'h0)] wire95;
  wire signed [(4'he):(1'h0)] wire49;
  wire [(4'ha):(1'h0)] wire48;
  wire signed [(3'h5):(1'h0)] wire47;
  wire signed [(5'h12):(1'h0)] wire46;
  wire signed [(4'he):(1'h0)] wire45;
  wire [(4'h8):(1'h0)] wire44;
  reg signed [(3'h4):(1'h0)] reg136 = (1'h0);
  reg [(4'hc):(1'h0)] reg134 = (1'h0);
  reg [(4'hb):(1'h0)] reg133 = (1'h0);
  reg [(5'h13):(1'h0)] reg132 = (1'h0);
  reg [(5'h12):(1'h0)] reg131 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg130 = (1'h0);
  reg [(2'h2):(1'h0)] reg122 = (1'h0);
  reg [(4'h8):(1'h0)] reg121 = (1'h0);
  reg [(3'h5):(1'h0)] reg116 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg115 = (1'h0);
  reg [(5'h15):(1'h0)] reg114 = (1'h0);
  reg [(3'h6):(1'h0)] reg110 = (1'h0);
  reg [(4'hd):(1'h0)] reg108 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg107 = (1'h0);
  reg [(2'h2):(1'h0)] reg103 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg93 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg92 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg87 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg86 = (1'h0);
  reg [(4'h9):(1'h0)] reg83 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg82 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg74 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg80 = (1'h0);
  reg [(5'h10):(1'h0)] reg79 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg77 = (1'h0);
  reg [(4'h9):(1'h0)] reg76 = (1'h0);
  reg [(3'h6):(1'h0)] reg75 = (1'h0);
  reg [(4'h9):(1'h0)] reg57 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg56 = (1'h0);
  reg [(5'h10):(1'h0)] reg55 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg54 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg52 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg141 = (1'h0);
  reg [(4'h8):(1'h0)] forvar140 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg139 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg138 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar137 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar135 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar129 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar128 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg127 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar126 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar125 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg120 = (1'h0);
  reg [(5'h11):(1'h0)] reg119 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg118 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar117 = (1'h0);
  reg [(4'h9):(1'h0)] forvar113 = (1'h0);
  reg [(4'h8):(1'h0)] forvar112 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg111 = (1'h0);
  reg [(3'h7):(1'h0)] reg109 = (1'h0);
  reg [(3'h4):(1'h0)] forvar106 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg105 = (1'h0);
  reg [(4'hb):(1'h0)] reg104 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar102 = (1'h0);
  reg [(5'h12):(1'h0)] forvar101 = (1'h0);
  reg [(4'h8):(1'h0)] reg94 = (1'h0);
  reg [(4'hb):(1'h0)] reg91 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar90 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar89 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg88 = (1'h0);
  reg [(5'h13):(1'h0)] forvar85 = (1'h0);
  reg [(5'h15):(1'h0)] reg84 = (1'h0);
  reg [(5'h13):(1'h0)] forvar81 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg78 = (1'h0);
  reg [(3'h6):(1'h0)] forvar74 = (1'h0);
  reg [(4'h8):(1'h0)] reg73 = (1'h0);
  reg [(4'hc):(1'h0)] reg72 = (1'h0);
  reg [(2'h2):(1'h0)] forvar71 = (1'h0);
  reg [(5'h14):(1'h0)] reg70 = (1'h0);
  reg [(5'h11):(1'h0)] reg69 = (1'h0);
  reg [(2'h2):(1'h0)] forvar68 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar67 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg66 = (1'h0);
  reg [(5'h10):(1'h0)] reg65 = (1'h0);
  reg [(5'h13):(1'h0)] reg64 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar63 = (1'h0);
  reg [(3'h7):(1'h0)] forvar62 = (1'h0);
  reg [(5'h10):(1'h0)] reg61 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar60 = (1'h0);
  reg [(4'ha):(1'h0)] reg59 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar58 = (1'h0);
  reg [(4'h9):(1'h0)] forvar53 = (1'h0);
  reg [(5'h12):(1'h0)] forvar51 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar50 = (1'h0);
  assign y = {wire146,
                 wire145,
                 wire144,
                 wire143,
                 wire142,
                 wire124,
                 wire123,
                 wire100,
                 wire99,
                 wire98,
                 wire97,
                 wire96,
                 wire95,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 reg136,
                 reg134,
                 reg133,
                 reg132,
                 reg131,
                 reg130,
                 reg122,
                 reg121,
                 reg116,
                 reg115,
                 reg114,
                 reg110,
                 reg108,
                 reg107,
                 reg103,
                 reg93,
                 reg92,
                 reg87,
                 reg86,
                 reg83,
                 reg82,
                 reg74,
                 reg80,
                 reg79,
                 reg77,
                 reg76,
                 reg75,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg52,
                 reg141,
                 forvar140,
                 reg139,
                 reg138,
                 forvar137,
                 forvar135,
                 forvar129,
                 forvar128,
                 reg127,
                 forvar126,
                 forvar125,
                 reg120,
                 reg119,
                 reg118,
                 forvar117,
                 forvar113,
                 forvar112,
                 reg111,
                 reg109,
                 forvar106,
                 reg105,
                 reg104,
                 forvar102,
                 forvar101,
                 reg94,
                 reg91,
                 forvar90,
                 forvar89,
                 reg88,
                 forvar85,
                 reg84,
                 forvar81,
                 reg78,
                 forvar74,
                 reg73,
                 reg72,
                 forvar71,
                 reg70,
                 reg69,
                 forvar68,
                 forvar67,
                 reg66,
                 reg65,
                 reg64,
                 forvar63,
                 forvar62,
                 reg61,
                 forvar60,
                 reg59,
                 forvar58,
                 forvar53,
                 forvar51,
                 forvar50,
                 (1'h0)};
  assign wire44 = {$signed(wire39)};
  assign wire45 = wire44[(4'h8):(2'h2)];
  assign wire46 = (-wire41);
  assign wire47 = $unsigned(((($signed(wire43) ?
                      (wire44 ?
                          wire46 : wire40) : (wire39 <= wire45)) ^~ wire40) <= (^wire44[(2'h3):(1'h1)])));
  assign wire48 = (wire45 ?
                      ($unsigned({((8'hb3) ? wire47 : wire42),
                          (wire45 ?
                              wire45 : wire43)}) && wire45[(1'h0):(1'h0)]) : $unsigned((~($unsigned((8'ha4)) == $unsigned(wire42)))));
  assign wire49 = wire47[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      for (forvar50 = (1'h0); (forvar50 < (1'h0)); forvar50 = (forvar50 + (1'h1)))
        begin
          for (forvar51 = (1'h0); (forvar51 < (1'h1)); forvar51 = (forvar51 + (1'h1)))
            begin
              reg52 <= {(((!wire43) ^~ wire47) - forvar50)};
            end
          for (forvar53 = (1'h0); (forvar53 < (1'h0)); forvar53 = (forvar53 + (1'h1)))
            begin
              reg54 <= $unsigned(($unsigned($unsigned((~forvar51))) ?
                  wire43[(3'h7):(2'h2)] : (~wire48)));
              reg55 <= ((wire41[(2'h2):(1'h1)] >> ($signed(forvar50[(2'h3):(1'h0)]) ^ $signed({wire45}))) ?
                  (forvar53 ?
                      (!$signed((wire45 ? wire49 : wire46))) : ((wire44 ?
                              wire48 : wire45) ?
                          wire46 : (|(&wire41)))) : $signed($unsigned(((forvar50 ?
                      reg54 : forvar53) + (wire48 ? (8'hbd) : wire45)))));
              reg56 <= wire46;
              reg57 <= $signed((+(-$unsigned($signed(reg54)))));
            end
          for (forvar58 = (1'h0); (forvar58 < (1'h1)); forvar58 = (forvar58 + (1'h1)))
            begin
              reg59 = $signed(($signed((8'hbd)) == wire43[(2'h2):(2'h2)]));
            end
          for (forvar60 = (1'h0); (forvar60 < (2'h2)); forvar60 = (forvar60 + (1'h1)))
            begin
              reg61 = $unsigned(wire44[(3'h7):(1'h0)]);
            end
        end
      for (forvar62 = (1'h0); (forvar62 < (2'h2)); forvar62 = (forvar62 + (1'h1)))
        begin
          for (forvar63 = (1'h0); (forvar63 < (2'h2)); forvar63 = (forvar63 + (1'h1)))
            begin
              reg64 = $unsigned((!$signed(((!forvar58) == (^reg56)))));
              reg65 = wire48;
            end
          reg66 = forvar58[(1'h1):(1'h1)];
        end
      for (forvar67 = (1'h0); (forvar67 < (1'h1)); forvar67 = (forvar67 + (1'h1)))
        begin
          for (forvar68 = (1'h0); (forvar68 < (2'h3)); forvar68 = (forvar68 + (1'h1)))
            begin
              reg69 = wire39;
              reg70 = (((8'hbc) ?
                  ({(reg69 ? (8'hb7) : reg65), wire40[(3'h7):(3'h5)]} ?
                      wire48[(4'h8):(2'h2)] : forvar67) : reg52) >>> (wire40[(5'h13):(5'h13)] ?
                  ($unsigned(((8'ha7) | wire42)) ?
                      ($signed(wire44) ?
                          (^reg56) : wire49[(4'hd):(1'h0)]) : $signed((~^(7'h41)))) : reg57[(3'h7):(3'h4)]));
            end
        end
      if (wire40)
        begin
          for (forvar71 = (1'h0); (forvar71 < (1'h0)); forvar71 = (forvar71 + (1'h1)))
            begin
              reg72 = (^($signed(($signed(reg59) >>> ((8'hb5) ?
                  wire39 : wire42))) == forvar60));
            end
          reg73 = $signed($signed($unsigned($unsigned((reg56 ?
              forvar67 : reg72)))));
          for (forvar74 = (1'h0); (forvar74 < (1'h1)); forvar74 = (forvar74 + (1'h1)))
            begin
              reg75 <= reg59[(2'h3):(2'h2)];
              reg76 <= wire41[(4'h9):(3'h5)];
              reg77 <= (forvar62 | (~&(reg69[(4'hb):(3'h5)] ?
                  wire39 : wire45)));
              reg78 = forvar60[(3'h4):(2'h3)];
              reg79 <= (-$signed($unsigned(({reg64} == (forvar51 ?
                  reg72 : wire39)))));
            end
          reg80 <= (forvar60 >= (reg72 ?
              $unsigned(wire48[(4'h9):(1'h1)]) : $unsigned($signed(reg59))));
        end
      else
        begin
          for (forvar71 = (1'h0); (forvar71 < (1'h0)); forvar71 = (forvar71 + (1'h1)))
            begin
              reg72 = wire48[(3'h4):(1'h1)];
              reg74 <= $unsigned(wire41[(4'hc):(3'h6)]);
              reg78 = ($unsigned(((~^(8'hac)) ?
                      reg66[(4'h8):(3'h4)] : $unsigned($unsigned((8'hbe))))) ?
                  {{$signed({(8'ha2), reg52}),
                          $unsigned($unsigned(reg79))}} : {(forvar62 ?
                          (~^reg55[(4'hb):(4'ha)]) : (forvar60 == (reg79 ^ wire49)))});
              reg79 <= reg80[(4'h8):(3'h5)];
              reg80 <= (+{$signed(reg75), reg61[(4'hb):(4'hb)]});
            end
          for (forvar81 = (1'h0); (forvar81 < (3'h4)); forvar81 = (forvar81 + (1'h1)))
            begin
              reg82 <= wire40;
              reg83 <= forvar51;
              reg84 = (wire39[(2'h2):(2'h2)] ?
                  (((^~forvar67[(1'h1):(1'h1)]) | $unsigned((&forvar51))) ?
                      reg76[(2'h2):(1'h0)] : $signed(reg73)) : (((8'h9e) ^~ ((reg77 ?
                              reg82 : forvar62) ?
                          (forvar50 * (8'hb2)) : $signed(wire43))) ?
                      wire48[(2'h2):(1'h0)] : {reg65[(4'hf):(4'ha)]}));
            end
          for (forvar85 = (1'h0); (forvar85 < (2'h2)); forvar85 = (forvar85 + (1'h1)))
            begin
              reg86 <= {reg77};
              reg87 <= (^~(((forvar51 > (reg66 ~^ wire39)) || {(^~(8'had))}) ?
                  (!$unsigned((8'haf))) : {(^wire47)}));
              reg88 = (($unsigned($unsigned((reg64 ?
                  wire48 : reg82))) ~^ wire44) ^~ wire42);
            end
        end
      for (forvar89 = (1'h0); (forvar89 < (3'h4)); forvar89 = (forvar89 + (1'h1)))
        begin
          for (forvar90 = (1'h0); (forvar90 < (1'h0)); forvar90 = (forvar90 + (1'h1)))
            begin
              reg91 = ((^$unsigned({(forvar67 >= reg84)})) ?
                  {reg79[(4'hb):(4'ha)],
                      reg59[(3'h7):(1'h0)]} : (+($signed($unsigned(wire44)) >>> {(reg55 ?
                          wire41 : forvar90)})));
              reg92 <= reg80;
              reg93 <= (wire40 <= wire44);
              reg94 = ($signed(reg54) ?
                  ((+((~&forvar81) >= (reg70 ?
                      reg56 : (8'hb6)))) <= {$signed((reg86 ? wire43 : wire43)),
                      (!{reg92})}) : $unsigned((8'haf)));
            end
        end
    end
  assign wire95 = (~(+({$unsigned(wire40)} ?
                      ($unsigned(wire42) ?
                          $unsigned(reg56) : $signed(wire41)) : (((8'haa) && wire45) ?
                          $signed(reg82) : $signed(wire39)))));
  assign wire96 = $signed($unsigned({{(reg86 ? (8'h9f) : reg54)}}));
  assign wire97 = ((~|$signed({$unsigned((8'hb7)),
                      {reg87, reg75}})) + $signed(reg80));
  assign wire98 = $unsigned((((reg86[(4'hd):(3'h6)] ?
                          ((8'hb3) ? reg56 : (8'hab)) : (reg87 ?
                              reg80 : wire47)) >> $signed($unsigned(wire46))) ?
                      wire96 : (wire43 ^ ({wire49, wire97} ?
                          wire49 : $unsigned(reg77)))));
  assign wire99 = (!(8'ha4));
  assign wire100 = $unsigned((~|reg83[(2'h3):(2'h2)]));
  always
    @(posedge clk) begin
      for (forvar101 = (1'h0); (forvar101 < (2'h2)); forvar101 = (forvar101 + (1'h1)))
        begin
          for (forvar102 = (1'h0); (forvar102 < (2'h2)); forvar102 = (forvar102 + (1'h1)))
            begin
              reg103 <= wire99[(3'h4):(1'h0)];
              reg104 = $signed((|(($signed(wire40) - ((8'hbd) | wire42)) ?
                  (forvar101 ?
                      wire96[(3'h6):(2'h2)] : wire95[(1'h1):(1'h1)]) : reg74[(3'h7):(2'h3)])));
            end
          reg105 = $unsigned($signed({wire43[(3'h7):(3'h4)]}));
          for (forvar106 = (1'h0); (forvar106 < (1'h0)); forvar106 = (forvar106 + (1'h1)))
            begin
              reg107 <= (!$signed(reg52));
              reg108 <= $unsigned($unsigned(($unsigned(wire44) + (~&((8'hb5) ?
                  reg93 : reg104)))));
              reg109 = $unsigned((wire98[(3'h5):(3'h4)] <= (~$unsigned({(7'h41),
                  reg104}))));
              reg110 <= (~^$signed(reg103[(1'h0):(1'h0)]));
            end
        end
      reg111 = wire99;
      for (forvar112 = (1'h0); (forvar112 < (2'h3)); forvar112 = (forvar112 + (1'h1)))
        begin
          for (forvar113 = (1'h0); (forvar113 < (1'h0)); forvar113 = (forvar113 + (1'h1)))
            begin
              reg114 <= wire46[(4'hf):(1'h1)];
              reg115 <= reg109[(3'h4):(1'h1)];
            end
        end
      reg116 <= (8'hbd);
      for (forvar117 = (1'h0); (forvar117 < (3'h4)); forvar117 = (forvar117 + (1'h1)))
        begin
          reg118 = ((reg103[(1'h0):(1'h0)] & {$unsigned((8'hb3))}) + reg109[(3'h5):(3'h4)]);
          reg119 = $unsigned((~|wire97[(4'ha):(1'h1)]));
          reg120 = reg57[(2'h2):(1'h1)];
        end
    end
  always
    @(posedge clk) begin
      reg121 <= ((({$signed(wire47), (reg79 ? reg92 : (8'ha2))} ?
          wire44 : reg110) || $unsigned({wire95})) & $unsigned($signed(reg114)));
      reg122 <= {(reg93[(4'he):(4'ha)] ?
              wire39[(2'h2):(1'h1)] : wire48[(4'ha):(2'h3)])};
    end
  assign wire123 = $signed((((+(~|wire98)) <= ($signed(wire95) ?
                       ((7'h40) ?
                           reg107 : reg82) : reg114[(3'h6):(2'h3)])) ~^ (~&wire49)));
  assign wire124 = $unsigned(wire96);
  always
    @(posedge clk) begin
      for (forvar125 = (1'h0); (forvar125 < (1'h1)); forvar125 = (forvar125 + (1'h1)))
        begin
          for (forvar126 = (1'h0); (forvar126 < (1'h0)); forvar126 = (forvar126 + (1'h1)))
            begin
              reg127 = $signed($unsigned(wire42[(4'ha):(3'h6)]));
            end
        end
      for (forvar128 = (1'h0); (forvar128 < (1'h0)); forvar128 = (forvar128 + (1'h1)))
        begin
          for (forvar129 = (1'h0); (forvar129 < (2'h2)); forvar129 = (forvar129 + (1'h1)))
            begin
              reg130 <= $signed(wire99[(2'h3):(2'h2)]);
              reg131 <= $signed(reg55[(4'hd):(4'hc)]);
              reg132 <= $unsigned(($signed(wire98[(3'h5):(1'h0)]) > {(~^(forvar128 ?
                      reg82 : reg122)),
                  (!$unsigned(reg130))}));
              reg133 <= {$unsigned($unsigned({(reg93 * forvar128),
                      reg130[(4'h8):(1'h0)]})),
                  $signed(({reg55[(3'h4):(3'h4)]} << $unsigned((reg107 > reg54))))};
              reg134 <= (({{(reg74 >> (8'h9e)), (forvar129 ? reg131 : reg108)},
                  ((reg130 << forvar128) ?
                      (~^(8'haa)) : ((8'haa) ? (8'hbb) : wire43))} <<< (wire48 ?
                  $signed($signed(reg133)) : (-$unsigned(wire39)))) * {(+(~&(wire39 << reg107))),
                  ($unsigned(reg86) ?
                      (reg130[(1'h1):(1'h1)] ^ (8'ha8)) : (+reg131[(1'h1):(1'h1)]))});
            end
          for (forvar135 = (1'h0); (forvar135 < (2'h3)); forvar135 = (forvar135 + (1'h1)))
            begin
              reg136 <= $signed($signed((wire49[(4'hd):(3'h7)] ?
                  (((8'h9c) ?
                      (8'ha8) : wire99) >= $signed(reg121)) : ($unsigned(wire49) ?
                      (wire49 >> wire42) : $unsigned(reg56)))));
            end
          for (forvar137 = (1'h0); (forvar137 < (1'h1)); forvar137 = (forvar137 + (1'h1)))
            begin
              reg138 = $unsigned((8'ha9));
              reg139 = ((wire44 ?
                  $signed((!(reg77 ?
                      reg87 : reg86))) : reg121[(2'h2):(1'h0)]) << ((^(reg93[(5'h12):(4'ha)] + {reg133,
                      forvar129})) ?
                  ($signed($signed((7'h42))) ~^ ((-wire95) == (|reg138))) : $unsigned(reg115[(1'h1):(1'h0)])));
            end
          for (forvar140 = (1'h0); (forvar140 < (1'h1)); forvar140 = (forvar140 + (1'h1)))
            begin
              reg141 = ((-(~|(wire44[(3'h5):(2'h3)] ?
                      reg77[(1'h1):(1'h0)] : (reg79 ? reg75 : (8'haa))))) ?
                  wire99 : $unsigned(($unsigned($signed(reg138)) || $signed($unsigned(reg127)))));
            end
        end
    end
  assign wire142 = {wire46[(5'h11):(4'h9)],
                       ($signed(reg133[(3'h4):(1'h1)]) == ((^{reg93,
                           wire98}) >>> $unsigned($signed(wire96))))};
  assign wire143 = (~|(^{$signed(reg76)}));
  assign wire144 = $signed(($unsigned(wire40) ?
                       {reg56, $unsigned((&wire39))} : $unsigned(((8'hb0) ?
                           $unsigned(wire43) : ((8'h9c) << wire47)))));
  assign wire145 = wire124[(1'h0):(1'h0)];
  assign wire146 = {((~^$unsigned(reg77[(1'h0):(1'h0)])) - reg75)};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21  (y, clk, wire26, wire25, wire24, wire23, wire22);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire26;
  input wire [(2'h3):(1'h0)] wire25;
  input wire signed [(4'ha):(1'h0)] wire24;
  input wire [(2'h2):(1'h0)] wire23;
  input wire [(3'h4):(1'h0)] wire22;
  wire signed [(4'hc):(1'h0)] wire34;
  wire [(2'h2):(1'h0)] wire33;
  wire signed [(4'h8):(1'h0)] wire32;
  wire [(5'h10):(1'h0)] wire31;
  wire [(4'he):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire29;
  wire signed [(3'h5):(1'h0)] wire28;
  wire [(4'he):(1'h0)] wire27;
  assign y = {wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 (1'h0)};
  assign wire27 = {(wire24 | (~&{wire25}))};
  assign wire28 = (^wire24);
  assign wire29 = $signed(wire23);
  assign wire30 = ((~&((~|((8'hbe) ? wire23 : (8'hb8))) ?
                          ((wire22 ? wire26 : wire27) ?
                              (8'hb7) : {wire26}) : $signed((+wire28)))) ?
                      {($signed(wire26) == $signed(((8'had) ?
                              wire22 : wire26))),
                          (wire22[(1'h1):(1'h0)] << wire28)} : wire26);
  assign wire31 = $signed(wire24[(3'h4):(1'h0)]);
  assign wire32 = ((~|($unsigned((wire24 ^ (8'hbf))) ?
                          wire25 : ((wire30 ? wire28 : wire22) ?
                              $unsigned((8'haf)) : wire26))) ?
                      (wire22[(3'h4):(2'h2)] ?
                          (wire25 + wire26) : (wire22 ?
                              {((8'hba) <= wire26)} : ({wire26} ?
                                  ((8'hb8) ?
                                      wire24 : wire22) : (wire28 <= wire25)))) : wire31[(3'h7):(3'h4)]);
  assign wire33 = $signed(wire29);
  assign wire34 = wire26[(2'h3):(2'h3)];
endmodule