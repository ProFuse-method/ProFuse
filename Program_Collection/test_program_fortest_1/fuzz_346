(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h20):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire65;
  wire [(2'h2):(1'h0)] wire64;
  wire signed [(2'h3):(1'h0)] wire62;
  wire signed [(4'ha):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  assign y = {wire65, wire64, wire62, wire5, wire4, (1'h0)};
  assign wire4 = {wire2};
  assign wire5 = (~|$signed($signed($unsigned(wire2))));
  module6 #() modinst63 (.wire7(wire4), .wire10(wire0), .wire9(wire3), .y(wire62), .wire8(wire1), .clk(clk));
  assign wire64 = (wire1 ?
                      ({(-wire2)} ?
                          {wire0} : $signed($signed(wire1))) : wire0[(4'h9):(3'h4)]);
  assign wire65 = ($unsigned(((wire64 ? wire5 : wire2) ?
                          (wire2 ? wire4 : (8'ha9)) : (wire0 ~^ (8'ha6)))) ?
                      $unsigned((wire0[(1'h0):(1'h0)] ?
                          wire64[(2'h2):(2'h2)] : (&wire64))) : wire2);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h5f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire10;
  input wire signed [(3'h6):(1'h0)] wire9;
  input wire signed [(3'h7):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire7;
  wire signed [(4'ha):(1'h0)] wire60;
  wire [(4'hb):(1'h0)] wire34;
  wire [(4'ha):(1'h0)] wire33;
  wire signed [(3'h7):(1'h0)] wire32;
  wire [(4'h9):(1'h0)] wire31;
  wire signed [(3'h6):(1'h0)] wire30;
  wire signed [(4'h8):(1'h0)] wire29;
  wire signed [(4'hb):(1'h0)] wire27;
  wire [(3'h5):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire11;
  assign y = {wire60,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire27,
                 wire13,
                 wire12,
                 wire11,
                 (1'h0)};
  assign wire11 = (|wire9[(1'h0):(1'h0)]);
  assign wire12 = ($unsigned((~$unsigned(wire7))) ?
                      ($signed((wire10 == (8'ha5))) >> {(~wire8)}) : (wire9 >>> wire7));
  assign wire13 = wire12[(3'h7):(1'h1)];
  module14 #() modinst28 (wire27, clk, wire13, wire11, wire10, wire7);
  assign wire29 = $unsigned(wire9);
  assign wire30 = (~^$unsigned(($unsigned(wire13) ?
                      {wire27} : wire9[(1'h1):(1'h1)])));
  assign wire31 = $unsigned((~{wire13}));
  assign wire32 = wire7[(4'h8):(1'h0)];
  assign wire33 = $signed(($signed($unsigned(wire31)) - wire32[(2'h2):(1'h0)]));
  assign wire34 = (wire32[(1'h1):(1'h1)] ?
                      wire29 : ((8'ha8) ?
                          $signed((wire33 ? wire12 : wire30)) : wire12));
  module35 #() modinst61 (.wire39(wire10), .wire38(wire29), .clk(clk), .wire37(wire32), .wire36(wire8), .y(wire60));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module35  (y, clk, wire39, wire38, wire37, wire36);
  output wire [(32'h89):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire39;
  input wire signed [(4'h8):(1'h0)] wire38;
  input wire signed [(3'h7):(1'h0)] wire37;
  input wire [(3'h7):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire59;
  wire signed [(3'h4):(1'h0)] wire57;
  wire [(4'ha):(1'h0)] wire53;
  wire [(4'h8):(1'h0)] wire52;
  wire signed [(3'h7):(1'h0)] wire51;
  wire signed [(4'hb):(1'h0)] wire50;
  wire signed [(4'hb):(1'h0)] wire42;
  wire signed [(2'h3):(1'h0)] wire41;
  wire [(3'h5):(1'h0)] wire40;
  reg [(3'h4):(1'h0)] reg58 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg56 = (1'h0);
  reg [(2'h3):(1'h0)] reg55 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg54 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg49 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg48 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg47 = (1'h0);
  reg [(2'h3):(1'h0)] reg46 = (1'h0);
  reg [(3'h4):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg43 = (1'h0);
  assign y = {wire59,
                 wire57,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire42,
                 wire41,
                 wire40,
                 reg58,
                 reg56,
                 reg55,
                 reg54,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 (1'h0)};
  assign wire40 = $unsigned((wire36 ? (+(wire37 | wire38)) : wire36));
  assign wire41 = (!(~&wire36[(2'h2):(1'h0)]));
  assign wire42 = {($signed((wire38 & (8'haa))) == (+wire39[(3'h4):(2'h3)]))};
  always
    @(posedge clk) begin
      if (((($signed((8'haa)) ^ wire41) * (8'ha4)) ?
          ({$signed(wire38)} ?
              $unsigned($unsigned(wire37)) : {wire41[(2'h3):(1'h1)]}) : wire36))
        begin
          if (((~^(&(!(8'ha9)))) ?
              $signed({$unsigned(wire40)}) : $unsigned($unsigned(((8'hab) >>> wire42)))))
            begin
              reg43 <= wire38;
            end
          else
            begin
              reg43 <= wire40;
              reg44 <= (($unsigned(reg43[(2'h3):(2'h3)]) * $signed((wire42 || wire37))) ?
                  reg43[(3'h5):(2'h2)] : (8'haf));
            end
          if ((^$signed($signed((wire42 * reg44)))))
            begin
              reg45 <= wire40[(3'h5):(2'h2)];
              reg46 <= reg43[(2'h3):(1'h1)];
              reg47 <= ($signed($unsigned(reg43[(4'h8):(3'h6)])) >> (($signed(reg46) * $unsigned(wire38)) ?
                  (~^wire36) : (~|$unsigned(wire37))));
            end
          else
            begin
              reg45 <= ((((wire41 ? wire37 : wire40) ? {wire40} : (^~reg46)) ?
                      (8'h9c) : ($unsigned(wire39) ?
                          ((8'h9c) ? wire38 : wire36) : (wire41 ?
                              wire38 : wire38))) ?
                  {(~|wire40)} : $signed(reg47));
              reg46 <= $signed((reg44 == reg43[(2'h2):(1'h1)]));
              reg47 <= reg46[(1'h0):(1'h0)];
            end
          reg48 <= reg44;
        end
      else
        begin
          reg43 <= {{$signed(wire38[(4'h8):(4'h8)])}};
        end
      reg49 <= wire42[(3'h6):(3'h5)];
    end
  assign wire50 = $signed((reg49[(1'h0):(1'h0)] >> {$signed(reg45)}));
  assign wire51 = $signed($unsigned(({reg47} ?
                      (reg47 || wire36) : $signed(reg46))));
  assign wire52 = reg43[(2'h2):(1'h1)];
  assign wire53 = (($signed((wire40 ^~ reg45)) ?
                          (wire51[(2'h2):(1'h1)] <<< $unsigned(wire36)) : (wire51 ?
                              reg47[(2'h3):(1'h0)] : wire42[(4'ha):(3'h6)])) ?
                      $signed($unsigned(reg46)) : (^$signed(wire51)));
  always
    @(posedge clk) begin
      reg54 <= $unsigned((-{((8'ha1) ? (8'ha6) : reg49)}));
      if (reg45[(2'h2):(1'h0)])
        begin
          reg55 <= ({(reg45[(1'h1):(1'h0)] ~^ $signed(wire42))} != reg47[(1'h0):(1'h0)]);
        end
      else
        begin
          reg55 <= wire42[(3'h5):(3'h4)];
        end
      reg56 <= wire36;
    end
  assign wire57 = reg55[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg58 <= wire36;
    end
  assign wire59 = (8'h9c);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param26 = ((-({(8'haf)} ? ((8'ha5) ? (8'ha7) : (8'hab)) : (8'h9f))) ? (8'hac) : {(8'ha5)}))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire18;
  input wire signed [(3'h6):(1'h0)] wire17;
  input wire signed [(4'h9):(1'h0)] wire16;
  input wire signed [(4'hb):(1'h0)] wire15;
  wire [(3'h4):(1'h0)] wire25;
  wire [(3'h4):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire23;
  wire [(3'h7):(1'h0)] wire22;
  reg [(4'ha):(1'h0)] reg21 = (1'h0);
  reg [(3'h6):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg19 = (1'h0);
  assign y = {wire25, wire24, wire23, wire22, reg21, reg20, reg19, (1'h0)};
  always
    @(posedge clk) begin
      if (wire18)
        begin
          if ((-wire15[(2'h2):(2'h2)]))
            begin
              reg19 <= $signed($unsigned(($signed((8'ha6)) ^ {(8'hae)})));
              reg20 <= $unsigned(wire17);
            end
          else
            begin
              reg19 <= {((+(8'hb0)) ?
                      $unsigned(((8'ha8) ^ wire18)) : $signed(reg20[(3'h5):(1'h0)]))};
            end
          reg21 <= reg19;
        end
      else
        begin
          if (($signed(reg20) ~^ (reg21 ^ $unsigned((+reg19)))))
            begin
              reg19 <= {wire18};
            end
          else
            begin
              reg19 <= {((8'ha5) ? $unsigned(reg20[(1'h0):(1'h0)]) : wire16)};
            end
          reg20 <= $unsigned($signed((&wire18)));
          reg21 <= ((reg21[(2'h3):(2'h2)] ?
                  $signed($unsigned(wire15)) : $signed({(8'haf)})) ?
              reg20[(1'h1):(1'h1)] : ($signed($unsigned(wire17)) ?
                  $signed(wire17) : (reg20[(3'h4):(2'h2)] ^ wire17)));
        end
    end
  assign wire22 = (!$signed(((wire17 ? (8'h9e) : wire17) && (~|wire15))));
  assign wire23 = ((~reg20[(3'h5):(1'h1)]) && reg20[(3'h4):(2'h3)]);
  assign wire24 = wire15;
  assign wire25 = wire18;
endmodule