(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param40 = (({((8'ha0) ? (8'ha4) : (8'ha3))} ? (~((8'hb0) ? (8'ha9) : (8'ha8))) : (((8'had) ? (8'ha7) : (8'ha1)) ? (&(8'hab)) : ((8'haa) >>> (8'ha3)))) ^~ ({((8'h9d) >> (8'haf))} >>> ({(8'h9c)} ? (+(8'h9d)) : ((8'ha7) | (8'ha1))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h4d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire3;
  wire signed [(4'h8):(1'h0)] wire34;
  wire [(4'hb):(1'h0)] wire20;
  wire signed [(3'h5):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire18;
  wire signed [(4'ha):(1'h0)] wire36;
  wire [(3'h4):(1'h0)] wire38;
  reg [(3'h7):(1'h0)] reg4 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg5 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg6 = (1'h0);
  assign y = {wire34,
                 wire20,
                 wire7,
                 wire18,
                 wire36,
                 wire38,
                 reg4,
                 reg5,
                 reg6,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= wire3[(1'h0):(1'h0)];
    end
  always
    @(posedge clk) begin
      reg5 <= $signed((((+wire0) ? {wire1} : reg4) ?
          (!wire1) : $unsigned((~^wire2))));
      reg6 <= {($signed((reg4 >> reg4)) ? wire0 : (~(wire0 ? wire2 : reg4)))};
    end
  assign wire7 = wire0[(2'h3):(1'h0)];
  module8 #() modinst19 (.clk(clk), .wire12(wire3), .y(wire18), .wire11(wire1), .wire10(wire2), .wire9(reg5));
  assign wire20 = wire18[(1'h0):(1'h0)];
  module21 #() modinst35 (wire34, clk, wire7, wire3, wire18, reg5);
  module21 #() modinst37 (wire36, clk, wire7, reg6, wire0, reg4);
  module8 #() modinst39 (.wire11(wire20), .y(wire38), .wire9(wire18), .wire10(reg4), .wire12(wire7), .clk(clk));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21  (y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h3e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire25;
  input wire signed [(4'hb):(1'h0)] wire24;
  input wire [(4'hb):(1'h0)] wire23;
  input wire [(2'h3):(1'h0)] wire22;
  wire [(4'hb):(1'h0)] wire32;
  wire [(4'hb):(1'h0)] wire31;
  wire signed [(2'h3):(1'h0)] wire30;
  wire [(4'ha):(1'h0)] wire29;
  wire signed [(4'ha):(1'h0)] wire28;
  wire [(3'h6):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire26;
  reg signed [(2'h3):(1'h0)] reg33 = (1'h0);
  assign y = {wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 reg33,
                 (1'h0)};
  assign wire26 = wire25[(3'h5):(2'h2)];
  assign wire27 = ($signed(wire25) ?
                      (+(^~(wire24 ?
                          wire22 : wire23))) : $unsigned({{(8'hac)}}));
  assign wire28 = $unsigned((wire22 ?
                      wire23[(1'h1):(1'h1)] : wire26[(3'h4):(2'h3)]));
  assign wire29 = wire25[(1'h1):(1'h1)];
  assign wire30 = $unsigned(wire28[(1'h1):(1'h1)]);
  assign wire31 = wire27;
  assign wire32 = (-(|wire27));
  always
    @(posedge clk) begin
      reg33 <= ((8'haf) ?
          ((8'ha7) ? $unsigned((wire32 == wire32)) : wire27) : wire25);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param17 = (~|(((&(8'ha3)) ? ((8'haf) != (8'ha1)) : ((8'ha7) & (8'hab))) ? (!((8'hb0) ~^ (8'haa))) : (~&(+(8'ha2))))))
(y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h18):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire12;
  input wire [(4'hb):(1'h0)] wire11;
  input wire [(3'h7):(1'h0)] wire10;
  input wire [(4'h8):(1'h0)] wire9;
  wire [(3'h5):(1'h0)] wire16;
  wire [(4'h9):(1'h0)] wire15;
  wire [(3'h6):(1'h0)] wire14;
  wire signed [(2'h3):(1'h0)] wire13;
  assign y = {wire16, wire15, wire14, wire13, (1'h0)};
  assign wire13 = $signed($signed($signed(wire12[(2'h2):(2'h2)])));
  assign wire14 = wire11;
  assign wire15 = wire9[(3'h6):(1'h0)];
  assign wire16 = wire11;
endmodule