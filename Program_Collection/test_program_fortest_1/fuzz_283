(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param26 = ({((^~(8'h9e)) ? ((8'ha5) ? (8'ha8) : (8'had)) : ((8'ha9) & (8'ha9)))} <<< {(~&(&(8'haa)))}))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h5d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire0;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire3;
  wire [(3'h5):(1'h0)] wire25;
  wire signed [(2'h3):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire8;
  wire signed [(4'hb):(1'h0)] wire9;
  wire signed [(4'h9):(1'h0)] wire10;
  wire signed [(4'ha):(1'h0)] wire11;
  wire [(4'h8):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire22;
  reg [(2'h3):(1'h0)] reg4 = (1'h0);
  reg [(4'h9):(1'h0)] reg5 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg6 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire7,
                 wire8,
                 wire9,
                 wire10,
                 wire11,
                 wire12,
                 wire22,
                 reg4,
                 reg5,
                 reg6,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= wire2;
      reg5 <= $signed(((!{wire2}) ?
          $unsigned(wire2[(3'h6):(3'h4)]) : $signed((+(8'hac)))));
      reg6 <= (-((reg5[(4'h9):(3'h6)] ?
              (wire1 ? wire1 : reg4) : $unsigned(wire0)) ?
          $signed((wire1 ? wire0 : wire3)) : ((wire1 >= wire3) ?
              (wire2 <= wire0) : wire2[(2'h3):(2'h2)])));
    end
  assign wire7 = (+(8'hac));
  assign wire8 = ({$signed(((8'ha5) && reg5))} ?
                     reg4[(2'h3):(1'h0)] : $signed($unsigned(reg5[(2'h3):(1'h1)])));
  assign wire9 = (reg4[(1'h1):(1'h0)] <<< $signed($signed({wire8})));
  assign wire10 = (~&$unsigned(wire1));
  assign wire11 = $signed((8'ha6));
  assign wire12 = $unsigned((({reg5} >= wire11) - (!(wire7 ? wire3 : wire7))));
  module13 #() modinst23 (wire22, clk, reg6, wire10, wire11, wire9);
  assign wire24 = $unsigned($signed((((8'ha9) ? reg5 : wire22) >= wire12)));
  assign wire25 = (($signed((reg4 ? wire24 : wire9)) ?
                      reg4 : ({wire8} ?
                          (reg4 ?
                              wire8 : wire3) : (wire1 + wire9))) && $signed(({wire24} != (^~wire10))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h19):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire17;
  input wire signed [(3'h7):(1'h0)] wire16;
  input wire [(4'ha):(1'h0)] wire15;
  input wire [(2'h2):(1'h0)] wire14;
  wire [(4'h8):(1'h0)] wire21;
  wire [(2'h3):(1'h0)] wire20;
  wire [(4'h8):(1'h0)] wire19;
  wire signed [(3'h5):(1'h0)] wire18;
  assign y = {wire21, wire20, wire19, wire18, (1'h0)};
  assign wire18 = ((wire15[(2'h3):(2'h3)] == {$signed((8'hab))}) != (~|wire15));
  assign wire19 = $signed((($unsigned((8'ha0)) <= ((8'ha6) != wire15)) ?
                      ($signed((8'ha4)) << $unsigned(wire17)) : {(~wire15)}));
  assign wire20 = ($signed(wire15[(1'h0):(1'h0)]) ?
                      $signed((wire17 ~^ {wire16})) : {(~|wire17[(3'h6):(1'h1)])});
  assign wire21 = (8'h9e);
endmodule