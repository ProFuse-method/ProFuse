(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param38 = ((8'hb0) ? ((((8'ha7) ? (8'haf) : (8'hb0)) | ((8'h9c) ? (8'h9d) : (8'ha5))) ? (((8'had) << (8'hae)) ~^ {(8'ha5)}) : {(^(8'ha0))}) : (((^(8'ha3)) || ((8'hae) != (8'ha2))) & (|(8'h9f)))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire33;
  wire [(4'hb):(1'h0)] wire32;
  wire signed [(4'h9):(1'h0)] wire31;
  wire signed [(4'h9):(1'h0)] wire30;
  wire [(3'h4):(1'h0)] wire29;
  wire signed [(3'h6):(1'h0)] wire27;
  reg [(4'h9):(1'h0)] reg36 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg34 = (1'h0);
  assign y = {wire37,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire27,
                 reg36,
                 reg35,
                 reg34,
                 (1'h0)};
  module4 #() modinst28 (wire27, clk, wire0, wire2, wire1, wire3);
  assign wire29 = $signed($unsigned($unsigned((wire0 ? wire2 : wire3))));
  assign wire30 = (wire29 >>> wire2);
  assign wire31 = $signed(($signed($signed(wire1)) >> wire2));
  assign wire32 = $signed(($unsigned($unsigned((8'hac))) ?
                      $signed(((8'hac) & wire0)) : $signed((wire31 > wire2))));
  assign wire33 = wire1;
  always
    @(posedge clk) begin
      reg34 <= wire32[(3'h7):(2'h3)];
      reg35 <= $unsigned(wire30);
      reg36 <= wire32;
    end
  assign wire37 = $signed(wire0[(1'h0):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param26 = ((~^({(8'ha8)} >= (-(8'ha0)))) >>> ({((8'ha1) ? (8'ha8) : (8'haa))} << (((8'ha6) ? (8'ha1) : (8'haf)) > ((8'ha0) ? (8'h9d) : (8'h9f))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h74):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire8;
  input wire signed [(3'h7):(1'h0)] wire7;
  input wire [(4'h8):(1'h0)] wire6;
  input wire signed [(3'h7):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire25;
  wire [(3'h6):(1'h0)] wire22;
  wire signed [(4'h8):(1'h0)] wire21;
  wire [(3'h5):(1'h0)] wire20;
  wire signed [(4'ha):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire11;
  wire [(4'h8):(1'h0)] wire10;
  wire signed [(2'h2):(1'h0)] wire9;
  reg signed [(3'h6):(1'h0)] reg24 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  reg [(3'h4):(1'h0)] reg17 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg14 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg13 = (1'h0);
  assign y = {wire25,
                 wire22,
                 wire21,
                 wire20,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 reg24,
                 reg23,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 (1'h0)};
  assign wire9 = ($unsigned((~^wire5)) ^~ (~(~|(wire6 ? wire7 : wire5))));
  assign wire10 = (wire6[(3'h6):(3'h6)] ?
                      wire6 : {$unsigned(((8'hae) > wire6))});
  assign wire11 = $signed(wire10);
  assign wire12 = $unsigned(wire8);
  always
    @(posedge clk) begin
      reg13 <= $unsigned((8'hac));
      if ($signed($signed((~|((8'h9d) ? wire7 : wire7)))))
        begin
          reg14 <= {{{$signed((8'haf))}}};
          reg15 <= ($signed($unsigned((reg13 * (8'ha4)))) ?
              (8'ha8) : (wire9 + wire10[(3'h4):(3'h4)]));
        end
      else
        begin
          reg14 <= (wire8 ?
              ((8'ha4) ~^ wire9) : $signed($signed((wire11 ? reg14 : wire7))));
          reg15 <= (wire9[(2'h2):(1'h1)] ?
              $unsigned({(wire5 >>> wire12)}) : {(+(~|wire8))});
          reg16 <= (($unsigned(reg13) ~^ $unsigned((reg15 << wire12))) ?
              wire10 : wire10);
        end
    end
  always
    @(posedge clk) begin
      reg17 <= reg15;
      reg18 <= (($signed(wire11[(1'h0):(1'h0)]) ? wire8 : $unsigned((8'h9d))) ?
          reg13[(1'h1):(1'h1)] : (8'ha0));
      reg19 <= (reg16 ?
          (($unsigned(wire11) | reg13[(1'h0):(1'h0)]) ?
              (reg15 > wire12[(3'h7):(3'h7)]) : reg16[(2'h2):(1'h0)]) : $unsigned(({wire8} ?
              (reg16 ^ wire9) : wire5)));
    end
  assign wire20 = wire12;
  assign wire21 = {($signed((~|(8'ha1))) * reg15)};
  assign wire22 = (^~wire5[(3'h7):(3'h4)]);
  always
    @(posedge clk) begin
      if ($unsigned($signed((8'had))))
        begin
          reg23 <= $signed(reg17);
          reg24 <= (~|((wire6[(3'h5):(2'h3)] >> reg14[(3'h7):(2'h3)]) ?
              $signed(reg13[(1'h1):(1'h1)]) : (~|$signed(wire22))));
        end
      else
        begin
          reg23 <= (reg23[(3'h6):(2'h2)] ?
              {(8'ha4)} : ($unsigned((wire5 <= wire22)) ?
                  ({reg17} ?
                      ((8'h9e) ? wire20 : reg24) : (reg13 ^~ wire9)) : reg19));
          reg24 <= reg19[(3'h4):(2'h2)];
        end
    end
  assign wire25 = ($signed(((wire5 ?
                      reg14 : reg24) || ((8'ha0) < (8'h9f)))) ^ (reg23 >= (wire7 | (reg19 ?
                      reg24 : (8'ha5)))));
endmodule