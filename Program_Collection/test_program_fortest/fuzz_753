(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h42):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire66;
  wire [(4'h9):(1'h0)] wire65;
  wire [(4'ha):(1'h0)] wire64;
  wire [(4'h9):(1'h0)] wire63;
  wire signed [(4'ha):(1'h0)] wire62;
  wire [(4'h8):(1'h0)] wire61;
  wire [(3'h7):(1'h0)] wire59;
  wire signed [(3'h6):(1'h0)] wire5;
  wire [(3'h4):(1'h0)] wire4;
  assign y = {wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire59,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = wire1;
  assign wire5 = (({(^wire0)} || wire2[(2'h3):(1'h1)]) ?
                     $unsigned(wire0[(3'h6):(3'h6)]) : ($signed(wire4[(2'h3):(2'h3)]) <<< $unsigned(wire3)));
  module6 #() modinst60 (.y(wire59), .wire10(wire1), .wire9(wire3), .wire8(wire0), .clk(clk), .wire7(wire2));
  assign wire61 = wire1;
  assign wire62 = {$signed(wire3)};
  assign wire63 = $signed(wire61);
  assign wire64 = $unsigned($signed(wire4[(2'h3):(2'h3)]));
  assign wire65 = $unsigned((wire64 >> $signed((wire2 ? wire63 : wire63))));
  module26 #() modinst67 (.wire30(wire64), .wire27(wire0), .wire28(wire3), .wire29(wire59), .y(wire66), .clk(clk));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire10;
  input wire signed [(4'ha):(1'h0)] wire9;
  input wire [(3'h7):(1'h0)] wire8;
  input wire [(4'hb):(1'h0)] wire7;
  wire signed [(4'h8):(1'h0)] wire58;
  wire signed [(4'ha):(1'h0)] wire57;
  wire [(3'h6):(1'h0)] wire56;
  wire [(3'h7):(1'h0)] wire51;
  wire [(3'h6):(1'h0)] wire49;
  wire signed [(4'ha):(1'h0)] wire24;
  wire signed [(4'hb):(1'h0)] wire12;
  wire signed [(3'h5):(1'h0)] wire11;
  reg [(4'h9):(1'h0)] reg55 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg54 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg53 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg52 = (1'h0);
  assign y = {wire58,
                 wire57,
                 wire56,
                 wire51,
                 wire49,
                 wire24,
                 wire12,
                 wire11,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 (1'h0)};
  assign wire11 = $signed($unsigned(({wire10} ?
                      (wire9 ? wire8 : wire7) : wire8[(1'h1):(1'h0)])));
  assign wire12 = {wire8[(1'h1):(1'h1)]};
  module13 #() modinst25 (.clk(clk), .wire14(wire7), .wire16(wire8), .y(wire24), .wire15(wire9), .wire17(wire12));
  module26 #() modinst50 (.y(wire49), .wire29(wire8), .clk(clk), .wire27(wire9), .wire30(wire24), .wire28(wire12));
  assign wire51 = wire9;
  always
    @(posedge clk) begin
      reg52 <= $signed((~&{(!wire10)}));
      if ($signed($unsigned($unsigned($signed(wire8)))))
        begin
          reg53 <= (wire24 + wire49[(3'h4):(2'h3)]);
        end
      else
        begin
          reg53 <= wire10[(3'h5):(3'h5)];
          reg54 <= ($unsigned(((8'hab) >> (~wire24))) ?
              $unsigned(($unsigned(wire7) ?
                  wire8 : wire24)) : {$unsigned(wire12)});
        end
      reg55 <= wire11[(3'h4):(1'h0)];
    end
  assign wire56 = wire8;
  assign wire57 = reg53;
  assign wire58 = $signed(reg55);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module26
#(parameter param48 = (+(8'h9d)))
(y, clk, wire30, wire29, wire28, wire27);
  output wire [(32'h82):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire30;
  input wire [(3'h7):(1'h0)] wire29;
  input wire [(3'h7):(1'h0)] wire28;
  input wire [(3'h7):(1'h0)] wire27;
  wire signed [(4'ha):(1'h0)] wire47;
  wire signed [(4'h8):(1'h0)] wire40;
  wire signed [(4'hb):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire38;
  wire [(3'h5):(1'h0)] wire31;
  reg [(2'h2):(1'h0)] reg46 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg45 = (1'h0);
  reg [(4'hb):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg42 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg41 = (1'h0);
  reg [(4'h8):(1'h0)] reg37 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg36 = (1'h0);
  reg [(4'h9):(1'h0)] reg35 = (1'h0);
  reg [(2'h3):(1'h0)] reg34 = (1'h0);
  reg [(4'hb):(1'h0)] reg33 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg32 = (1'h0);
  assign y = {wire47,
                 wire40,
                 wire39,
                 wire38,
                 wire31,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 (1'h0)};
  assign wire31 = ((~(&$unsigned(wire28))) ?
                      (((wire30 ? wire27 : (8'ha8)) ?
                          wire30 : {wire28}) < {(wire29 ?
                              wire28 : wire30)}) : {((wire30 ?
                              (8'ha1) : wire30) << {wire28})});
  always
    @(posedge clk) begin
      reg32 <= ($signed(((~^wire31) ?
              (wire31 >> wire29) : wire27[(3'h7):(2'h3)])) ?
          ($signed((wire31 && wire28)) ?
              wire29 : $signed((wire27 + wire27))) : wire28);
    end
  always
    @(posedge clk) begin
      reg33 <= ({wire29[(3'h4):(2'h2)]} ?
          wire30[(4'ha):(1'h0)] : $signed(((wire31 ? wire28 : (8'h9f)) ?
              (wire30 ? wire28 : wire31) : {(8'ha6)})));
      if ($signed(reg33[(1'h0):(1'h0)]))
        begin
          if (((($signed((8'haa)) ? $signed((8'hae)) : $unsigned(wire31)) ?
                  ((wire28 || reg33) <<< {reg32}) : ((-reg32) ?
                      {wire30} : $signed(wire30))) ?
              wire27 : $signed(reg32)))
            begin
              reg34 <= {$signed(($signed(wire29) ? (&wire29) : {wire28}))};
            end
          else
            begin
              reg34 <= ($unsigned((~|(&reg33))) ?
                  (reg32 <= reg34[(1'h0):(1'h0)]) : ({(~&wire30)} ?
                      ({reg33} ^~ $signed(reg33)) : (((8'had) >= wire31) ?
                          $unsigned(wire30) : (wire29 ? wire30 : wire31))));
              reg35 <= (8'hac);
              reg36 <= (~((wire30 <<< $unsigned(wire31)) ?
                  reg33 : $unsigned((reg34 ? reg33 : wire28))));
            end
          reg37 <= ({wire30} ? {$unsigned((-reg33))} : {reg33});
        end
      else
        begin
          if (reg37[(3'h7):(3'h4)])
            begin
              reg34 <= $unsigned(reg33[(2'h2):(2'h2)]);
            end
          else
            begin
              reg34 <= {{$signed((^~wire28))}};
            end
        end
    end
  assign wire38 = ($unsigned((~&(!reg32))) ?
                      ((^~$signed(reg35)) ~^ wire31[(3'h4):(3'h4)]) : $signed(((wire31 ^~ reg34) ?
                          reg36 : (reg35 ? wire28 : wire29))));
  assign wire39 = reg34;
  assign wire40 = (~|(wire38[(2'h2):(2'h2)] && (-(reg34 ? (8'hab) : wire28))));
  always
    @(posedge clk) begin
      reg41 <= wire39;
      reg42 <= wire38;
      reg43 <= (^~{(~(wire40 * wire29))});
    end
  always
    @(posedge clk) begin
      reg44 <= (~reg42);
      reg45 <= {$unsigned((8'ha4))};
      reg46 <= (8'haf);
    end
  assign wire47 = wire28[(3'h4):(2'h3)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param23 = (~((((8'h9e) == (8'h9c)) ? (+(8'haf)) : (^(8'haa))) ? ({(8'hab)} | {(8'ha1)}) : {((8'h9d) | (8'hb0))})))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h21):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire17;
  input wire signed [(2'h3):(1'h0)] wire16;
  input wire [(2'h2):(1'h0)] wire15;
  input wire signed [(4'h9):(1'h0)] wire14;
  wire [(3'h4):(1'h0)] wire22;
  wire [(2'h3):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire20;
  wire signed [(3'h6):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire18;
  assign y = {wire22, wire21, wire20, wire19, wire18, (1'h0)};
  assign wire18 = wire17;
  assign wire19 = ($signed($unsigned((-(8'ha0)))) <<< {{$unsigned(wire14)}});
  assign wire20 = wire19[(1'h0):(1'h0)];
  assign wire21 = $unsigned($signed(((|wire16) ?
                      (-wire14) : $unsigned(wire17))));
  assign wire22 = wire19;
endmodule