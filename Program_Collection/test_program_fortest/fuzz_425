(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire71;
  wire [(4'h8):(1'h0)] wire70;
  wire signed [(3'h7):(1'h0)] wire69;
  wire signed [(4'ha):(1'h0)] wire67;
  wire signed [(4'ha):(1'h0)] wire65;
  wire signed [(3'h5):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg68 = (1'h0);
  assign y = {wire71, wire70, wire69, wire67, wire65, wire4, reg68, (1'h0)};
  assign wire4 = wire3[(3'h4):(3'h4)];
  module5 #() modinst66 (wire65, clk, wire2, wire1, wire3, wire0);
  assign wire67 = $signed((|$unsigned(wire3[(4'h8):(3'h5)])));
  always
    @(posedge clk) begin
      reg68 <= $unsigned(((wire4 ?
          wire3 : wire4[(1'h0):(1'h0)]) | $unsigned(((8'h9e) | wire3))));
    end
  assign wire69 = ((wire65[(4'ha):(3'h7)] || (~&wire65)) < (wire1[(3'h4):(2'h2)] ?
                      wire0[(3'h5):(1'h1)] : ((|wire2) ?
                          (wire67 >= wire65) : wire4)));
  assign wire70 = (~&(!$signed(wire69)));
  module21 #() modinst72 (.wire22(wire67), .clk(clk), .wire25(wire0), .y(wire71), .wire23(wire70), .wire24(wire69));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h63):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire9;
  input wire [(3'h4):(1'h0)] wire8;
  input wire signed [(4'h8):(1'h0)] wire7;
  input wire [(4'hb):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire64;
  wire signed [(2'h2):(1'h0)] wire62;
  wire signed [(3'h5):(1'h0)] wire40;
  wire signed [(3'h7):(1'h0)] wire38;
  wire signed [(4'ha):(1'h0)] wire20;
  wire [(4'ha):(1'h0)] wire16;
  wire [(3'h4):(1'h0)] wire15;
  wire [(4'h8):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire12;
  wire [(3'h7):(1'h0)] wire11;
  wire signed [(3'h4):(1'h0)] wire10;
  reg signed [(3'h7):(1'h0)] reg19 = (1'h0);
  reg [(3'h6):(1'h0)] reg18 = (1'h0);
  reg [(4'h8):(1'h0)] reg17 = (1'h0);
  assign y = {wire64,
                 wire62,
                 wire40,
                 wire38,
                 wire20,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 reg19,
                 reg18,
                 reg17,
                 (1'h0)};
  assign wire10 = wire7[(4'h8):(1'h1)];
  assign wire11 = (-wire9);
  assign wire12 = ((wire6 ? wire7 : wire8[(2'h3):(2'h3)]) >> ((wire9 ?
                          $unsigned(wire7) : ((8'hac) <<< wire8)) ?
                      wire9 : wire7));
  assign wire13 = {($unsigned($unsigned((8'ha6))) ?
                          ($unsigned((8'h9c)) ?
                              (wire9 ^ (8'hac)) : wire12[(3'h7):(1'h0)]) : ((wire9 ?
                                  wire9 : (8'had)) ?
                              {wire7} : wire6))};
  assign wire14 = (&{(~wire12)});
  assign wire15 = ((8'ha1) ?
                      (wire14[(2'h2):(1'h1)] ?
                          {$signed(wire14)} : (|((8'hb0) == wire7))) : $unsigned((+(!(8'ha5)))));
  assign wire16 = ($signed($signed($unsigned((8'h9d)))) == ($signed($unsigned(wire12)) + wire14));
  always
    @(posedge clk) begin
      reg17 <= {(((~^wire16) != (~|wire16)) <= (!wire9[(3'h5):(2'h3)]))};
      reg18 <= (^~wire12[(1'h1):(1'h1)]);
      reg19 <= (~|$unsigned(($unsigned((8'ha6)) ?
          wire14 : (wire12 ? reg18 : reg17))));
    end
  assign wire20 = wire14[(3'h6):(3'h4)];
  module21 #() modinst39 (wire38, clk, wire12, wire11, wire14, wire7);
  assign wire40 = wire38;
  module41 #() modinst63 (wire62, clk, wire9, wire11, wire20, wire10);
  assign wire64 = (wire7[(1'h1):(1'h0)] ?
                      $unsigned(wire15) : wire9[(3'h4):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module41
#(parameter param61 = ({(8'h9d)} ? (((8'hb0) ^ ((8'ha7) && (8'haf))) ? (~((8'ha8) ? (8'ha4) : (8'haa))) : ((^(8'ha8)) ? {(8'h9c)} : (-(8'h9c)))) : ((&((8'h9e) + (8'ha0))) << (((8'h9d) ^~ (8'ha8)) != ((8'hac) ? (8'h9c) : (8'ha9))))))
(y, clk, wire45, wire44, wire43, wire42);
  output wire [(32'h61):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire45;
  input wire signed [(3'h7):(1'h0)] wire44;
  input wire signed [(2'h3):(1'h0)] wire43;
  input wire signed [(3'h4):(1'h0)] wire42;
  wire [(4'ha):(1'h0)] wire60;
  wire [(2'h3):(1'h0)] wire59;
  wire [(4'h9):(1'h0)] wire58;
  wire [(2'h3):(1'h0)] wire57;
  wire signed [(4'h9):(1'h0)] wire55;
  wire signed [(3'h4):(1'h0)] wire54;
  wire signed [(3'h4):(1'h0)] wire53;
  wire [(4'h8):(1'h0)] wire52;
  wire signed [(2'h3):(1'h0)] wire51;
  reg [(3'h6):(1'h0)] reg56 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg47 = (1'h0);
  reg [(4'ha):(1'h0)] reg46 = (1'h0);
  assign y = {wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 reg56,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg46 <= (($unsigned((wire45 ? wire42 : (8'h9f))) ?
              ((wire44 ? wire42 : wire43) == (8'h9e)) : wire42[(1'h1):(1'h0)]) ?
          $unsigned(({wire43} ? (8'haf) : $unsigned(wire43))) : wire44);
      if ((~|$unsigned((+wire44[(1'h0):(1'h0)]))))
        begin
          reg47 <= {wire43};
          reg48 <= (|$signed(($signed(wire44) ? wire44 : {wire45})));
          if ($signed((^~$unsigned(wire42[(2'h2):(2'h2)]))))
            begin
              reg49 <= $unsigned(reg48[(1'h1):(1'h1)]);
            end
          else
            begin
              reg49 <= $signed({(-(8'hb0))});
              reg50 <= ({(!$unsigned((8'h9e)))} | reg46[(4'ha):(4'h9)]);
            end
        end
      else
        begin
          if (reg50[(3'h7):(3'h6)])
            begin
              reg47 <= (|$signed(wire43));
              reg48 <= $signed($signed($unsigned(wire45)));
            end
          else
            begin
              reg47 <= {reg47};
            end
          reg49 <= ((wire43[(1'h1):(1'h0)] || (^~(8'ha5))) >>> {wire42[(2'h2):(1'h0)]});
        end
    end
  assign wire51 = (($signed((reg48 ^~ reg50)) ^~ $unsigned((wire44 ?
                      wire42 : wire44))) ~^ (wire42[(2'h2):(2'h2)] ^~ ((wire43 & wire43) ?
                      reg48[(3'h5):(2'h2)] : $signed(wire42))));
  assign wire52 = ($signed((wire44 - wire43[(1'h1):(1'h0)])) ?
                      $unsigned($unsigned($unsigned(reg46))) : (|((wire51 > wire51) <= reg48[(1'h1):(1'h0)])));
  assign wire53 = $signed((~$signed(wire44)));
  assign wire54 = (~|(wire42 > $signed(wire53[(3'h4):(3'h4)])));
  assign wire55 = (^(8'ha2));
  always
    @(posedge clk) begin
      reg56 <= (reg46 ?
          wire43 : ({wire51[(2'h3):(1'h0)]} && ((wire53 >= wire45) ?
              (-reg50) : (reg50 ? wire45 : wire55))));
    end
  assign wire57 = reg48[(2'h3):(2'h3)];
  assign wire58 = (^wire44);
  assign wire59 = ((|$signed($signed(wire58))) ?
                      {((-wire55) ?
                              $unsigned(reg50) : (+wire57))} : $unsigned(wire53[(1'h0):(1'h0)]));
  assign wire60 = ($signed($unsigned(((8'haf) ? wire53 : wire43))) ?
                      (((~^(8'ha6)) ?
                          (reg46 >= wire55) : $unsigned(reg47)) <<< $unsigned(wire54[(1'h0):(1'h0)])) : reg47);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21  (y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire25;
  input wire signed [(3'h6):(1'h0)] wire24;
  input wire [(4'h8):(1'h0)] wire23;
  input wire signed [(2'h2):(1'h0)] wire22;
  wire [(4'hb):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire36;
  wire [(3'h7):(1'h0)] wire35;
  wire signed [(2'h2):(1'h0)] wire30;
  wire [(3'h5):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire26;
  reg [(3'h7):(1'h0)] reg34 = (1'h0);
  reg [(3'h5):(1'h0)] reg33 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg32 = (1'h0);
  reg [(4'h9):(1'h0)] reg31 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire35,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 (1'h0)};
  assign wire26 = wire25[(1'h1):(1'h0)];
  assign wire27 = wire25[(3'h5):(3'h5)];
  assign wire28 = (wire22 ? $unsigned($unsigned($signed(wire27))) : wire26);
  assign wire29 = {(^~$signed(wire28))};
  assign wire30 = wire29[(3'h5):(3'h5)];
  always
    @(posedge clk) begin
      if ((&(((^wire26) * ((8'haf) < (8'ha9))) >= wire28)))
        begin
          if ($unsigned(wire22))
            begin
              reg31 <= wire27[(2'h3):(1'h1)];
            end
          else
            begin
              reg31 <= (8'ha6);
            end
        end
      else
        begin
          if ($unsigned(((&wire25) ^~ $signed(wire23[(1'h1):(1'h1)]))))
            begin
              reg31 <= ($signed($unsigned(wire27)) ?
                  reg31[(2'h2):(1'h1)] : wire28);
              reg32 <= {wire29};
            end
          else
            begin
              reg31 <= (wire26 || ($unsigned(wire23[(1'h0):(1'h0)]) && reg32));
              reg32 <= wire23;
            end
        end
      reg33 <= wire26;
    end
  always
    @(posedge clk) begin
      reg34 <= wire26[(2'h3):(1'h0)];
    end
  assign wire35 = $unsigned(reg33);
  assign wire36 = (wire28 ?
                      ({wire25[(1'h0):(1'h0)]} ?
                          wire25 : wire35) : {($signed(wire28) ?
                              (wire23 ? (8'h9f) : (8'had)) : wire24)});
  assign wire37 = $unsigned({$signed((wire26 ? reg34 : wire22))});
endmodule