(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param62 = (({((8'h9e) ? (8'hae) : (8'ha7))} ? (&{(8'haf)}) : ((&(8'ha6)) ? {(8'ha1)} : (8'h9c))) ? (+((~&(8'h9d)) ? {(8'h9e)} : ((8'ha0) ? (8'hac) : (8'h9c)))) : ((((8'ha7) >>> (8'h9c)) ^ {(8'had)}) ? {{(8'haf)}} : (^~((8'hab) ^~ (8'h9f))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire3;
  wire [(4'ha):(1'h0)] wire61;
  wire [(4'h8):(1'h0)] wire60;
  wire [(3'h6):(1'h0)] wire59;
  wire [(2'h2):(1'h0)] wire4;
  wire [(3'h7):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire7;
  wire signed [(2'h3):(1'h0)] wire57;
  reg signed [(4'hb):(1'h0)] reg8 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg9 = (1'h0);
  reg [(3'h5):(1'h0)] reg10 = (1'h0);
  assign y = {wire61,
                 wire60,
                 wire59,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire57,
                 reg8,
                 reg9,
                 reg10,
                 (1'h0)};
  assign wire4 = (({wire0[(1'h1):(1'h1)]} ?
                         {(wire2 << wire0)} : $unsigned((wire2 << (8'h9e)))) ?
                     $unsigned((^wire0[(3'h4):(2'h3)])) : ($signed(wire3) ?
                         $unsigned($signed(wire0)) : ($signed((8'ha1)) ?
                             $unsigned(wire0) : wire2)));
  assign wire5 = ($signed($signed(wire2)) == ((~{wire3}) ^ ({wire1} ?
                     wire3[(2'h2):(1'h1)] : (!wire3))));
  assign wire6 = (($unsigned(wire4) <= wire5) ?
                     wire2 : {((wire0 >> wire2) ?
                             wire5[(2'h2):(1'h0)] : wire4[(1'h0):(1'h0)])});
  assign wire7 = (^~($unsigned($unsigned(wire1)) >>> (wire5[(3'h5):(2'h2)] ?
                     $unsigned(wire5) : wire0)));
  always
    @(posedge clk) begin
      if ({{$unsigned(((8'ha5) ? wire3 : (8'ha5)))}})
        begin
          if ((^wire2))
            begin
              reg8 <= $unsigned({$unsigned($unsigned(wire1))});
            end
          else
            begin
              reg8 <= ($signed(reg8[(2'h2):(2'h2)]) ?
                  $signed((wire4[(1'h1):(1'h0)] ?
                      (!wire1) : $unsigned(wire0))) : (&wire0));
            end
          reg9 <= wire2[(2'h2):(1'h0)];
          reg10 <= {wire6};
        end
      else
        begin
          reg8 <= wire5[(3'h6):(2'h2)];
          reg9 <= ($signed(wire1[(2'h2):(1'h0)]) >> (&wire1));
          reg10 <= wire7;
        end
    end
  module11 #() modinst58 (.wire15(wire0), .y(wire57), .clk(clk), .wire12(wire1), .wire14(reg8), .wire13(wire6));
  assign wire59 = $unsigned(reg10);
  assign wire60 = $signed($signed($unsigned((!wire7))));
  assign wire61 = wire4;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire15;
  input wire [(4'hb):(1'h0)] wire14;
  input wire [(4'hb):(1'h0)] wire13;
  input wire signed [(3'h7):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire56;
  wire [(2'h2):(1'h0)] wire55;
  wire signed [(4'hb):(1'h0)] wire54;
  wire signed [(3'h4):(1'h0)] wire53;
  wire signed [(4'hb):(1'h0)] wire52;
  wire [(4'hb):(1'h0)] wire50;
  wire signed [(3'h6):(1'h0)] wire48;
  wire signed [(2'h2):(1'h0)] wire47;
  wire signed [(3'h5):(1'h0)] wire45;
  wire signed [(4'hb):(1'h0)] wire32;
  wire [(4'h9):(1'h0)] wire30;
  reg [(4'ha):(1'h0)] reg49 = (1'h0);
  assign y = {wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire50,
                 wire48,
                 wire47,
                 wire45,
                 wire32,
                 wire30,
                 reg49,
                 (1'h0)};
  module16 #() modinst31 (wire30, clk, wire13, wire14, wire15, wire12);
  assign wire32 = wire13[(3'h4):(3'h4)];
  module33 #() modinst46 (.wire37(wire12), .wire35(wire15), .wire36(wire30), .y(wire45), .clk(clk), .wire34(wire32));
  assign wire47 = wire45;
  assign wire48 = {(&(&(wire14 ? wire30 : wire13)))};
  always
    @(posedge clk) begin
      reg49 <= wire32;
    end
  module33 #() modinst51 (.wire34(wire14), .y(wire50), .clk(clk), .wire37(wire15), .wire36(wire45), .wire35(wire13));
  assign wire52 = (({((8'ha6) - wire15)} != ({(8'h9f)} > (wire45 < wire50))) ?
                      wire13[(4'h9):(1'h1)] : $unsigned($unsigned((wire47 ?
                          wire48 : wire13))));
  assign wire53 = (^(8'ha6));
  assign wire54 = (wire47 ?
                      $unsigned({(wire32 ?
                              wire30 : wire13)}) : $signed($unsigned($signed(wire14))));
  assign wire55 = ($signed(($unsigned(wire47) << wire14[(2'h2):(1'h0)])) >> ($unsigned((!wire12)) >>> ((wire48 ?
                          wire30 : wire52) ?
                      $unsigned(wire15) : (wire52 ^ wire53))));
  assign wire56 = (|((~&wire32[(1'h1):(1'h1)]) >> ({wire54} ?
                      wire52 : wire30[(2'h3):(1'h1)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module33  (y, clk, wire37, wire36, wire35, wire34);
  output wire [(32'h39):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire37;
  input wire signed [(3'h4):(1'h0)] wire36;
  input wire [(4'hb):(1'h0)] wire35;
  input wire [(3'h5):(1'h0)] wire34;
  wire [(4'h9):(1'h0)] wire44;
  wire [(4'h8):(1'h0)] wire40;
  wire [(3'h7):(1'h0)] wire39;
  wire [(4'h9):(1'h0)] wire38;
  reg [(3'h7):(1'h0)] reg43 = (1'h0);
  reg [(3'h5):(1'h0)] reg42 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg41 = (1'h0);
  assign y = {wire44, wire40, wire39, wire38, reg43, reg42, reg41, (1'h0)};
  assign wire38 = wire34[(2'h2):(2'h2)];
  assign wire39 = (-wire34);
  assign wire40 = ($signed($signed($signed(wire38))) + (^(-(+wire39))));
  always
    @(posedge clk) begin
      reg41 <= $signed({($unsigned(wire34) ? $signed(wire37) : (8'had))});
      reg42 <= wire38[(1'h0):(1'h0)];
      reg43 <= {{{$signed(wire36)}}};
    end
  assign wire44 = wire38;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h39):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire20;
  input wire [(4'h9):(1'h0)] wire19;
  input wire signed [(3'h6):(1'h0)] wire18;
  input wire [(3'h4):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire29;
  wire [(3'h7):(1'h0)] wire28;
  wire [(3'h5):(1'h0)] wire25;
  wire signed [(2'h3):(1'h0)] wire24;
  wire [(3'h5):(1'h0)] wire23;
  wire signed [(4'h9):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire21;
  reg [(4'hb):(1'h0)] reg27 = (1'h0);
  reg [(4'h8):(1'h0)] reg26 = (1'h0);
  assign y = {wire29,
                 wire28,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire21 = wire19;
  assign wire22 = $unsigned({$signed(wire20)});
  assign wire23 = wire19[(3'h6):(2'h3)];
  assign wire24 = (($unsigned(wire23[(2'h3):(1'h1)]) ?
                      $signed((wire23 << wire17)) : wire22) <<< (~wire18));
  assign wire25 = (((wire17[(1'h1):(1'h0)] ?
                          wire19 : (wire21 ? wire20 : wire17)) ?
                      (~|wire17[(1'h0):(1'h0)]) : wire20) ^~ wire24[(1'h1):(1'h0)]);
  always
    @(posedge clk) begin
      reg26 <= wire20;
      reg27 <= (((^~wire21[(2'h2):(1'h1)]) ~^ $signed(wire25[(2'h3):(2'h3)])) <<< $signed(wire25[(1'h0):(1'h0)]));
    end
  assign wire28 = $signed((((wire19 <<< reg26) ^~ (wire21 >= wire18)) ?
                      {wire18[(1'h0):(1'h0)]} : (&$unsigned(wire24))));
  assign wire29 = wire23[(2'h3):(2'h2)];
endmodule