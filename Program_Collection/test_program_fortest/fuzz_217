(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param58 = (&(-{(8'ha8)})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h15):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire57;
  wire signed [(2'h2):(1'h0)] wire56;
  wire [(3'h7):(1'h0)] wire55;
  wire [(3'h4):(1'h0)] wire54;
  wire [(2'h2):(1'h0)] wire52;
  assign y = {wire57, wire56, wire55, wire54, wire52, (1'h0)};
  module4 #() modinst53 (wire52, clk, wire3, wire1, wire0, wire2);
  assign wire54 = wire2;
  assign wire55 = wire3;
  assign wire56 = (wire54[(1'h1):(1'h1)] & (wire1[(2'h2):(1'h1)] ?
                      (~|$signed(wire52)) : $unsigned($signed((8'hb0)))));
  assign wire57 = ($signed(($unsigned((8'ha7)) ?
                      $signed((8'h9d)) : (&wire55))) | $unsigned((wire3[(1'h1):(1'h1)] ?
                      wire2[(4'h8):(2'h3)] : wire2)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h63):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire5;
  input wire signed [(4'h8):(1'h0)] wire6;
  input wire [(4'hb):(1'h0)] wire7;
  input wire signed [(4'ha):(1'h0)] wire8;
  wire signed [(4'h8):(1'h0)] wire10;
  wire [(4'h8):(1'h0)] wire26;
  wire [(3'h6):(1'h0)] wire28;
  wire [(4'hb):(1'h0)] wire29;
  wire signed [(3'h5):(1'h0)] wire33;
  wire [(3'h6):(1'h0)] wire50;
  reg [(3'h5):(1'h0)] reg9 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg11 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg12 = (1'h0);
  reg [(4'h9):(1'h0)] reg13 = (1'h0);
  reg [(3'h7):(1'h0)] reg30 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg31 = (1'h0);
  reg [(4'ha):(1'h0)] reg32 = (1'h0);
  assign y = {wire10,
                 wire26,
                 wire28,
                 wire29,
                 wire33,
                 wire50,
                 reg9,
                 reg11,
                 reg12,
                 reg13,
                 reg30,
                 reg31,
                 reg32,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg9 <= (wire7[(3'h7):(1'h1)] - ((wire7[(2'h3):(1'h1)] ?
          $signed(wire6) : (wire7 ? wire7 : (8'ha0))) > wire7));
    end
  assign wire10 = (wire5[(2'h2):(2'h2)] << (((wire8 || wire8) ^ (wire8 ?
                          (8'hae) : wire8)) ?
                      {wire6[(3'h4):(2'h2)]} : ((wire7 + reg9) <<< wire6)));
  always
    @(posedge clk) begin
      reg11 <= ((+$unsigned($signed((8'ha2)))) ?
          (wire10[(4'h8):(3'h5)] ?
              wire6 : $unsigned(((8'ha7) ~^ wire10))) : (reg9 << $unsigned((~&wire8))));
      reg12 <= $unsigned($signed((8'ha1)));
      reg13 <= {$signed({reg11})};
    end
  module14 #() modinst27 (wire26, clk, wire8, wire10, wire5, wire6);
  assign wire28 = (reg13 ?
                      ($unsigned($unsigned(wire6)) | wire10[(1'h0):(1'h0)]) : ((!(wire8 ?
                          reg13 : wire10)) <<< wire6[(3'h7):(1'h1)]));
  assign wire29 = wire6;
  always
    @(posedge clk) begin
      reg30 <= $unsigned((^((~&reg13) ? wire7 : reg9[(3'h4):(3'h4)])));
      reg31 <= ($signed((((8'had) - (8'hac)) ?
              (reg9 ? wire8 : reg30) : reg9[(2'h2):(1'h0)])) ?
          ($unsigned($unsigned(wire7)) ?
              ($signed((8'h9d)) ?
                  reg11 : (wire8 + reg9)) : {$signed((8'had))}) : $signed({wire8}));
      reg32 <= $signed($signed($signed(((8'h9d) ? reg11 : wire28))));
    end
  assign wire33 = ($signed({((8'had) <= wire7)}) ?
                      wire26[(2'h2):(1'h1)] : (&$signed({reg31})));
  module34 #() modinst51 (wire50, clk, wire33, wire7, reg31, wire5);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34  (y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire38;
  input wire [(2'h3):(1'h0)] wire37;
  input wire [(4'hb):(1'h0)] wire36;
  input wire signed [(4'h8):(1'h0)] wire35;
  wire [(4'h9):(1'h0)] wire49;
  wire signed [(3'h6):(1'h0)] wire48;
  wire [(3'h4):(1'h0)] wire47;
  wire [(3'h6):(1'h0)] wire46;
  wire signed [(4'hb):(1'h0)] wire45;
  wire [(3'h4):(1'h0)] wire44;
  wire signed [(4'h8):(1'h0)] wire43;
  wire signed [(3'h5):(1'h0)] wire42;
  wire signed [(3'h6):(1'h0)] wire41;
  wire signed [(3'h4):(1'h0)] wire40;
  wire signed [(3'h6):(1'h0)] wire39;
  assign y = {wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 (1'h0)};
  assign wire39 = ((^~wire36[(4'h9):(3'h7)]) > $signed((8'hae)));
  assign wire40 = (~|(wire37[(1'h1):(1'h0)] ? $unsigned(wire35) : wire35));
  assign wire41 = wire37;
  assign wire42 = (-$unsigned(wire36[(4'hb):(1'h0)]));
  assign wire43 = ($unsigned($signed({(8'hac)})) ?
                      wire41[(2'h3):(1'h1)] : $unsigned((wire35 ?
                          wire37[(1'h1):(1'h0)] : (~|wire40))));
  assign wire44 = (wire38 * ($signed($unsigned(wire42)) ?
                      ((!wire41) ?
                          ((8'ha6) - wire37) : wire41[(2'h2):(1'h0)]) : {(!wire35)}));
  assign wire45 = (&(~|(wire40 ? wire38[(2'h2):(2'h2)] : $signed((8'hab)))));
  assign wire46 = ($signed((~^wire36[(4'h8):(3'h5)])) ?
                      (wire37 || wire45[(2'h3):(1'h0)]) : (~|(8'ha3)));
  assign wire47 = wire43;
  assign wire48 = ((((wire41 ? wire45 : wire36) ?
                          wire37[(1'h0):(1'h0)] : (wire41 <= wire43)) ?
                      (8'h9f) : {(8'h9f)}) ^~ (&$signed($unsigned(wire46))));
  assign wire49 = {($unsigned($unsigned(wire38)) > wire39[(3'h4):(1'h0)])};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire18;
  input wire [(3'h7):(1'h0)] wire17;
  input wire [(4'ha):(1'h0)] wire16;
  input wire [(3'h6):(1'h0)] wire15;
  wire [(4'h8):(1'h0)] wire25;
  wire signed [(2'h3):(1'h0)] wire24;
  wire [(4'ha):(1'h0)] wire22;
  wire [(4'ha):(1'h0)] wire19;
  reg signed [(3'h6):(1'h0)] reg23 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg21 = (1'h0);
  reg [(3'h5):(1'h0)] reg20 = (1'h0);
  assign y = {wire25, wire24, wire22, wire19, reg23, reg21, reg20, (1'h0)};
  assign wire19 = (^~$unsigned({wire17[(2'h3):(2'h2)]}));
  always
    @(posedge clk) begin
      reg20 <= {(($signed(wire17) ?
              $unsigned(wire16) : (wire17 << wire18)) && wire18)};
      reg21 <= wire17;
    end
  assign wire22 = (reg21 != wire16);
  always
    @(posedge clk) begin
      reg23 <= (reg20[(2'h3):(2'h2)] <= $signed({(|(8'h9f))}));
    end
  assign wire24 = ((($signed(reg20) <= (wire22 | wire16)) << wire22) * $unsigned(reg23[(1'h1):(1'h0)]));
  assign wire25 = ((!(wire19[(2'h2):(2'h2)] << (8'haa))) << {wire18});
endmodule