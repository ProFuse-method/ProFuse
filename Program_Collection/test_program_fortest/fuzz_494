(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire0;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire3;
  wire signed [(4'h8):(1'h0)] wire4;
  wire signed [(4'hb):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire66;
  wire signed [(4'hb):(1'h0)] wire68;
  wire signed [(4'ha):(1'h0)] wire69;
  wire signed [(2'h3):(1'h0)] wire70;
  wire [(3'h4):(1'h0)] wire71;
  wire [(3'h4):(1'h0)] wire75;
  wire [(2'h3):(1'h0)] wire76;
  wire [(4'ha):(1'h0)] wire77;
  reg [(3'h4):(1'h0)] reg72 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg73 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg74 = (1'h0);
  assign y = {wire4,
                 wire5,
                 wire66,
                 wire68,
                 wire69,
                 wire70,
                 wire71,
                 wire75,
                 wire76,
                 wire77,
                 reg72,
                 reg73,
                 reg74,
                 (1'h0)};
  assign wire4 = (~(-(~&(wire2 ? wire1 : wire3))));
  assign wire5 = (8'ha4);
  module6 #() modinst67 (wire66, clk, wire3, wire5, wire4, wire1);
  assign wire68 = $unsigned($signed($signed(((8'ha8) * wire5))));
  assign wire69 = (-($signed((wire1 ? wire66 : wire4)) ?
                      $unsigned(wire66[(3'h7):(2'h2)]) : (8'h9d)));
  assign wire70 = (~|(wire0[(3'h4):(1'h1)] >= $unsigned(((8'ha1) ?
                      (8'h9c) : wire0))));
  assign wire71 = ({(wire0[(3'h6):(2'h2)] <<< ((8'h9c) ?
                          wire3 : (8'ha8)))} <<< ($signed((+wire1)) < $unsigned(wire66[(3'h4):(1'h1)])));
  always
    @(posedge clk) begin
      reg72 <= $signed((8'haf));
      reg73 <= {(~^({wire0} ? $unsigned(wire69) : $unsigned(wire70)))};
      reg74 <= (-$signed($unsigned((wire2 >> reg72))));
    end
  assign wire75 = $unsigned($signed({wire68}));
  assign wire76 = $signed(wire2);
  module14 #() modinst78 (wire77, clk, wire3, wire75, wire68, reg73);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire10;
  input wire [(4'h9):(1'h0)] wire9;
  input wire signed [(4'h8):(1'h0)] wire8;
  input wire [(3'h6):(1'h0)] wire7;
  wire signed [(4'h9):(1'h0)] wire65;
  wire signed [(3'h7):(1'h0)] wire63;
  wire signed [(4'hb):(1'h0)] wire51;
  wire [(3'h5):(1'h0)] wire50;
  wire [(4'h9):(1'h0)] wire49;
  wire [(3'h4):(1'h0)] wire48;
  wire [(2'h2):(1'h0)] wire47;
  wire [(4'ha):(1'h0)] wire46;
  wire signed [(2'h3):(1'h0)] wire44;
  wire signed [(4'h8):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire12;
  wire [(2'h3):(1'h0)] wire11;
  assign y = {wire65,
                 wire63,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire44,
                 wire13,
                 wire12,
                 wire11,
                 (1'h0)};
  assign wire11 = wire8;
  assign wire12 = $unsigned(wire9);
  assign wire13 = (8'ha8);
  module14 #() modinst45 (.y(wire44), .wire18(wire7), .wire17(wire12), .clk(clk), .wire16(wire10), .wire15(wire9));
  assign wire46 = wire11;
  assign wire47 = (~^((((8'h9e) ? wire8 : wire10) ?
                          (wire7 * wire12) : (wire12 ? (8'ha3) : wire8)) ?
                      $unsigned(wire8[(1'h0):(1'h0)]) : (wire8 ?
                          ((8'ha2) != wire12) : (wire10 ? wire10 : wire10))));
  assign wire48 = (((wire47[(1'h1):(1'h0)] ? {wire44} : wire11[(1'h1):(1'h1)]) ?
                          ((wire13 ?
                              wire47 : wire12) > wire11[(1'h0):(1'h0)]) : ((wire46 - (8'hae)) ?
                              {wire12} : {wire8})) ?
                      (((~&wire44) ?
                          wire44 : wire46) >= wire44[(2'h2):(1'h0)]) : wire46[(3'h7):(2'h2)]);
  assign wire49 = (8'hb0);
  assign wire50 = $signed($signed(wire12[(4'hb):(4'hb)]));
  assign wire51 = $signed((((wire11 != wire8) - {wire13}) || ($unsigned(wire46) << (-wire44))));
  module52 #() modinst64 (wire63, clk, wire12, wire48, wire13, wire7);
  assign wire65 = $unsigned(wire8[(4'h8):(3'h4)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module52  (y, clk, wire56, wire55, wire54, wire53);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire56;
  input wire signed [(2'h2):(1'h0)] wire55;
  input wire [(4'h8):(1'h0)] wire54;
  input wire signed [(2'h2):(1'h0)] wire53;
  wire [(4'hb):(1'h0)] wire62;
  wire [(4'h8):(1'h0)] wire61;
  wire signed [(3'h5):(1'h0)] wire60;
  wire signed [(3'h7):(1'h0)] wire59;
  wire [(4'hb):(1'h0)] wire58;
  wire [(4'hb):(1'h0)] wire57;
  assign y = {wire62, wire61, wire60, wire59, wire58, wire57, (1'h0)};
  assign wire57 = $signed((($signed(wire54) ?
                      $unsigned(wire54) : (wire55 & wire55)) - (&$unsigned(wire53))));
  assign wire58 = $signed((^(wire55[(1'h0):(1'h0)] == {(8'ha7)})));
  assign wire59 = $unsigned($unsigned((wire58[(4'hb):(3'h6)] ?
                      (wire56 || wire58) : $signed(wire58))));
  assign wire60 = ((wire57 ^~ wire53) * (($signed(wire53) ?
                      wire54[(2'h3):(2'h2)] : wire57) | $signed((~wire54))));
  assign wire61 = wire58[(2'h2):(1'h1)];
  assign wire62 = (((&(wire58 ?
                      wire58 : wire57)) + ($signed(wire53) != wire53)) * ($signed($unsigned((8'hab))) <= $unsigned(wire55)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param43 = ((+(+((8'ha6) ? (8'hae) : (8'ha5)))) ? (((~&(8'hb0)) ? {(8'haf)} : ((8'h9c) >>> (8'ha2))) ~^ {((8'hab) ? (8'hb0) : (8'h9c))}) : ((~^(|(8'haf))) < (+((8'hb0) || (8'ha5))))))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h9a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire18;
  input wire [(2'h2):(1'h0)] wire17;
  input wire [(2'h3):(1'h0)] wire16;
  input wire signed [(2'h3):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire42;
  wire [(3'h5):(1'h0)] wire25;
  wire [(4'ha):(1'h0)] wire24;
  wire [(4'hb):(1'h0)] wire23;
  wire [(3'h6):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire19;
  reg signed [(2'h2):(1'h0)] reg41 = (1'h0);
  reg [(3'h4):(1'h0)] reg40 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg37 = (1'h0);
  reg [(2'h2):(1'h0)] reg36 = (1'h0);
  reg [(4'h9):(1'h0)] reg35 = (1'h0);
  reg [(4'h8):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg33 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg32 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg31 = (1'h0);
  reg [(2'h2):(1'h0)] reg30 = (1'h0);
  reg [(4'hb):(1'h0)] reg29 = (1'h0);
  reg [(3'h6):(1'h0)] reg28 = (1'h0);
  reg [(3'h6):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg26 = (1'h0);
  reg [(4'ha):(1'h0)] reg22 = (1'h0);
  reg [(2'h3):(1'h0)] reg20 = (1'h0);
  assign y = {wire42,
                 wire25,
                 wire24,
                 wire23,
                 wire21,
                 wire19,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg22,
                 reg20,
                 (1'h0)};
  assign wire19 = $unsigned((&($signed(wire15) ^ wire15)));
  always
    @(posedge clk) begin
      reg20 <= $signed((~^wire19));
    end
  assign wire21 = wire19[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      reg22 <= wire16;
    end
  assign wire23 = wire16;
  assign wire24 = {(~|((!reg22) ? wire18 : (wire19 * reg22)))};
  assign wire25 = wire17[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      if ($unsigned(({(wire19 | wire18)} >= $signed((wire25 ?
          wire23 : wire25)))))
        begin
          if (($signed(wire24) ^ {$signed((wire16 ? wire23 : wire21))}))
            begin
              reg26 <= (8'had);
            end
          else
            begin
              reg26 <= (wire24[(2'h2):(1'h1)] ?
                  ((~^(8'h9c)) ?
                      ((reg26 ? wire16 : (8'haa)) || (wire17 ?
                          wire23 : wire24)) : $signed((wire21 || wire19))) : wire19);
              reg27 <= (($unsigned(reg20[(2'h3):(2'h3)]) == wire25[(2'h2):(1'h1)]) - reg22[(4'h8):(3'h5)]);
            end
          if ($unsigned({wire17[(1'h1):(1'h0)]}))
            begin
              reg28 <= $unsigned($signed($signed((wire18 << wire16))));
              reg29 <= (((wire18 ?
                          (reg26 ? reg20 : (8'ha3)) : reg28[(3'h4):(1'h1)]) ?
                      ((reg26 ^~ reg28) ?
                          (reg22 ?
                              reg20 : wire17) : (^wire19)) : wire15[(1'h1):(1'h0)]) ?
                  (reg22[(1'h1):(1'h0)] ?
                      (~|$signed(wire23)) : {$signed((8'hb0))}) : $unsigned((reg28[(1'h0):(1'h0)] < (wire19 ?
                      wire16 : wire25))));
            end
          else
            begin
              reg28 <= wire21;
              reg29 <= wire19[(1'h1):(1'h1)];
            end
          if ($signed((!$signed((wire25 ? wire17 : reg22)))))
            begin
              reg30 <= (~wire18);
              reg31 <= $unsigned(($unsigned((~^(8'ha8))) <<< (^~$signed(reg26))));
            end
          else
            begin
              reg30 <= $signed(($signed(((8'hab) ?
                  wire25 : reg22)) - {((8'hab) >= wire25)}));
            end
        end
      else
        begin
          reg26 <= wire16[(1'h0):(1'h0)];
          reg27 <= $signed(reg30[(1'h0):(1'h0)]);
        end
      reg32 <= reg26;
    end
  always
    @(posedge clk) begin
      reg33 <= {{(wire25[(2'h3):(1'h0)] <= wire24[(2'h2):(1'h0)])}};
      reg34 <= (+wire18[(1'h0):(1'h0)]);
      reg35 <= ($unsigned((|(wire24 ? (8'ha8) : wire15))) >= $unsigned(reg31));
    end
  always
    @(posedge clk) begin
      reg36 <= wire17;
      reg37 <= (|(reg36[(1'h0):(1'h0)] <<< (reg35 << (^reg29))));
      reg38 <= (($signed(reg31) != wire21) ?
          (~&(^~(8'ha7))) : wire19[(2'h3):(1'h0)]);
    end
  always
    @(posedge clk) begin
      reg39 <= wire18;
      reg40 <= (-$signed(((wire25 ? reg37 : reg30) > (wire21 ?
          wire18 : wire24))));
      reg41 <= ($unsigned(reg27) == {((wire16 ? reg32 : (8'h9f)) ?
              reg30 : wire16)});
    end
  assign wire42 = ((^reg39) ?
                      reg39[(2'h3):(2'h2)] : $unsigned(($unsigned(wire17) ?
                          {wire25} : reg27)));
endmodule