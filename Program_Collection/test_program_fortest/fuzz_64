(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param21 = {(((!(8'h9e)) | ((8'ha5) ? (8'hb0) : (8'ha3))) - (((8'hae) ^~ (8'ha8)) ^ (|(8'ha8))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire3;
  input wire [(3'h5):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire20;
  wire signed [(4'h9):(1'h0)] wire16;
  wire [(4'ha):(1'h0)] wire15;
  wire signed [(2'h3):(1'h0)] wire14;
  wire signed [(3'h7):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire12;
  wire signed [(4'hb):(1'h0)] wire11;
  wire signed [(2'h2):(1'h0)] wire7;
  wire signed [(4'h8):(1'h0)] wire6;
  wire signed [(2'h2):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire4;
  reg signed [(3'h5):(1'h0)] reg19 = (1'h0);
  reg [(4'hb):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg10 = (1'h0);
  reg [(3'h7):(1'h0)] reg9 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg8 = (1'h0);
  assign y = {wire20,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg19,
                 reg18,
                 reg17,
                 reg10,
                 reg9,
                 reg8,
                 (1'h0)};
  assign wire4 = (-{((wire3 * (8'hae)) || (wire2 * wire1))});
  assign wire5 = $unsigned(($unsigned(((8'ha7) == wire0)) ?
                     (&(|wire4)) : (^~(wire4 - wire2))));
  assign wire6 = $signed(wire5[(1'h0):(1'h0)]);
  assign wire7 = $signed((wire4[(3'h6):(2'h2)] ?
                     wire5 : ((wire4 ^ wire6) ?
                         $signed(wire0) : (wire0 ? wire6 : wire6))));
  always
    @(posedge clk) begin
      reg8 <= wire2;
      reg9 <= wire1[(3'h5):(3'h5)];
      reg10 <= ($unsigned((&wire3)) | (8'had));
    end
  assign wire11 = $unsigned($unsigned(wire1[(1'h0):(1'h0)]));
  assign wire12 = (~(8'haf));
  assign wire13 = (wire12 ? wire4 : $unsigned($signed($signed(wire5))));
  assign wire14 = wire3;
  assign wire15 = wire13[(2'h3):(2'h2)];
  assign wire16 = (+wire5);
  always
    @(posedge clk) begin
      reg17 <= wire0;
      reg18 <= $unsigned(((wire3 ?
          (wire13 >> reg8) : $unsigned(wire5)) ^ ($unsigned(reg8) << (wire13 ^~ (8'had)))));
      reg19 <= {reg10};
    end
  assign wire20 = (|((wire16 << $signed(reg8)) << $unsigned(((8'ha5) ?
                      reg9 : wire7))));
endmodule