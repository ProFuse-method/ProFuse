(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire14;
  wire [(4'hb):(1'h0)] wire13;
  wire signed [(2'h2):(1'h0)] wire12;
  wire signed [(3'h6):(1'h0)] wire6;
  wire signed [(4'h8):(1'h0)] wire5;
  reg signed [(4'h8):(1'h0)] reg11 = (1'h0);
  reg [(2'h3):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg [(2'h3):(1'h0)] reg8 = (1'h0);
  reg [(4'hb):(1'h0)] reg7 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg4 = (1'h0);
  assign y = {wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire6,
                 wire5,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= ((|((!wire1) * (!(8'ha4)))) ?
          wire0[(1'h1):(1'h0)] : (+((^wire0) ?
              wire3 : (wire1 ? wire1 : wire0))));
    end
  assign wire5 = wire3[(1'h0):(1'h0)];
  assign wire6 = $signed(wire3);
  always
    @(posedge clk) begin
      reg7 <= ($unsigned(((reg4 ? wire2 : wire6) ?
          wire2[(3'h4):(2'h2)] : wire2[(1'h0):(1'h0)])) ~^ (wire2[(2'h2):(1'h1)] <= (~&(!wire1))));
      reg8 <= {(($signed(wire5) >> $signed((8'ha1))) > $unsigned((wire5 <<< wire5)))};
      if ({(|wire3[(2'h2):(1'h0)])})
        begin
          reg9 <= ($unsigned({(wire5 - reg7)}) >> wire1[(2'h2):(1'h0)]);
          reg10 <= $unsigned(reg8);
          reg11 <= ((8'hb0) <= wire3);
        end
      else
        begin
          if ($unsigned(($signed($unsigned(wire1)) ?
              {$unsigned(reg7)} : ((~&wire5) ?
                  $unsigned(reg10) : (wire6 ? (8'hae) : reg8)))))
            begin
              reg9 <= $unsigned((((~|reg4) >> wire1[(1'h0):(1'h0)]) ?
                  $signed((wire1 != wire2)) : ((^~reg11) && $signed(reg10))));
              reg10 <= (reg11[(3'h6):(1'h1)] ?
                  ($unsigned(reg4[(2'h2):(2'h2)]) - ((!reg7) ?
                      wire1[(1'h0):(1'h0)] : wire2[(3'h4):(3'h4)])) : {$signed(reg10[(2'h2):(1'h1)])});
            end
          else
            begin
              reg9 <= $unsigned(($unsigned($signed(wire2)) >= ((wire5 ?
                  reg4 : reg8) <= $unsigned(wire2))));
              reg10 <= ((-wire2) ?
                  $signed({$unsigned((8'ha3))}) : $signed(wire0[(4'ha):(1'h0)]));
            end
          reg11 <= $unsigned($unsigned(((reg4 & wire2) << {reg11})));
        end
    end
  assign wire12 = $unsigned($unsigned((wire3[(1'h1):(1'h0)] ?
                      (~wire2) : wire3[(2'h2):(2'h2)])));
  assign wire13 = wire12[(1'h1):(1'h1)];
  assign wire14 = (^(!reg9));
  assign wire15 = {(((reg7 ?
                          wire12 : (8'haf)) || (wire2 ~^ wire2)) > reg11[(3'h4):(1'h1)])};
endmodule