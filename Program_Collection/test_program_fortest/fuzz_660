(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h40):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire [(3'h7):(1'h0)] wire78;
  wire signed [(4'hb):(1'h0)] wire77;
  wire [(3'h7):(1'h0)] wire75;
  wire [(3'h4):(1'h0)] wire74;
  wire signed [(3'h7):(1'h0)] wire72;
  wire [(3'h6):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire4;
  reg [(4'hb):(1'h0)] reg76 = (1'h0);
  assign y = {wire78,
                 wire77,
                 wire75,
                 wire74,
                 wire72,
                 wire5,
                 wire4,
                 reg76,
                 (1'h0)};
  assign wire4 = (wire0[(3'h5):(2'h3)] <= $unsigned(($signed((8'haf)) ^ $signed(wire0))));
  assign wire5 = $signed($unsigned((~^((8'ha1) ? wire1 : wire4))));
  module6 #() modinst73 (wire72, clk, wire2, wire0, wire5, wire4);
  assign wire74 = ((wire0[(3'h4):(2'h2)] != wire3[(3'h7):(2'h2)]) ^~ $unsigned($unsigned($signed(wire3))));
  assign wire75 = ((wire4 - wire4[(2'h2):(2'h2)]) >= (wire0 + {(wire2 - (8'ha3))}));
  always
    @(posedge clk) begin
      reg76 <= (8'haf);
    end
  assign wire77 = (~{(-(+(8'ha2)))});
  assign wire78 = (8'ha5);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param71 = (^(~((&(8'haf)) ? ((8'ha3) * (8'h9d)) : {(8'haf)}))))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h8f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire10;
  input wire [(3'h7):(1'h0)] wire9;
  input wire [(3'h6):(1'h0)] wire8;
  input wire [(4'ha):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire70;
  wire signed [(3'h7):(1'h0)] wire69;
  wire signed [(4'ha):(1'h0)] wire68;
  wire signed [(3'h7):(1'h0)] wire62;
  wire signed [(4'h9):(1'h0)] wire61;
  wire [(4'h8):(1'h0)] wire59;
  wire signed [(2'h3):(1'h0)] wire34;
  wire signed [(3'h4):(1'h0)] wire33;
  wire [(4'hb):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire28;
  wire [(4'h8):(1'h0)] wire26;
  reg signed [(3'h4):(1'h0)] reg67 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg66 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg65 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg64 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg63 = (1'h0);
  reg [(4'hb):(1'h0)] reg32 = (1'h0);
  reg [(3'h5):(1'h0)] reg31 = (1'h0);
  reg [(3'h7):(1'h0)] reg30 = (1'h0);
  assign y = {wire70,
                 wire69,
                 wire68,
                 wire62,
                 wire61,
                 wire59,
                 wire34,
                 wire33,
                 wire29,
                 wire28,
                 wire26,
                 reg67,
                 reg66,
                 reg65,
                 reg64,
                 reg63,
                 reg32,
                 reg31,
                 reg30,
                 (1'h0)};
  module11 #() modinst27 (wire26, clk, wire10, wire7, wire8, wire9);
  assign wire28 = (|(^wire7[(1'h0):(1'h0)]));
  assign wire29 = $signed($signed((~^wire8[(3'h4):(1'h1)])));
  always
    @(posedge clk) begin
      reg30 <= (~^$signed(wire28[(2'h2):(1'h1)]));
      reg31 <= (8'hae);
      if ((({wire26} <= wire26) ?
          ((~^((8'hae) ? wire29 : wire26)) ?
              {$signed(wire29)} : (~|{wire10})) : $unsigned(reg30)))
        begin
          reg32 <= $unsigned(({(wire10 == reg31)} ?
              ($unsigned(wire9) - $signed(wire10)) : wire29[(1'h0):(1'h0)]));
        end
      else
        begin
          reg32 <= (({(wire7 ?
                  wire9 : (8'had))} & reg30) >> wire9[(1'h0):(1'h0)]);
        end
    end
  assign wire33 = (!(wire26 | (wire7 ? $unsigned(reg31) : wire26)));
  assign wire34 = (^{(~(~wire33))});
  module35 #() modinst60 (.wire39(reg32), .clk(clk), .wire36(wire34), .wire38(reg31), .y(wire59), .wire37(wire26));
  assign wire61 = wire34;
  assign wire62 = $unsigned(wire33[(1'h1):(1'h1)]);
  always
    @(posedge clk) begin
      reg63 <= $unsigned((|($unsigned(wire29) ?
          (wire9 & wire9) : $unsigned(wire29))));
      reg64 <= (|(wire62[(3'h7):(2'h3)] ?
          $signed(((8'hab) ? (8'hae) : wire9)) : {$unsigned(wire59)}));
      if ((8'ha8))
        begin
          reg65 <= $signed((wire7[(2'h3):(2'h2)] || $signed(wire59[(4'h8):(3'h6)])));
          reg66 <= (wire33[(2'h2):(1'h0)] ?
              ($signed(reg64) ^~ {reg31[(2'h3):(1'h1)]}) : wire29);
        end
      else
        begin
          reg65 <= ($unsigned($signed($unsigned(wire59))) << ($signed((wire61 | reg66)) ?
              $unsigned(((8'haa) | wire10)) : wire29[(1'h1):(1'h0)]));
          reg66 <= {$signed(reg31)};
          reg67 <= $unsigned(reg66);
        end
    end
  assign wire68 = reg66[(2'h3):(2'h2)];
  assign wire69 = $signed($signed(($unsigned(wire28) ^ (8'hae))));
  assign wire70 = ((~^(wire59 ? reg64 : (wire59 - wire26))) ? wire68 : (8'ha3));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module35
#(parameter param58 = (8'had))
(y, clk, wire39, wire38, wire37, wire36);
  output wire [(32'h73):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire39;
  input wire signed [(3'h5):(1'h0)] wire38;
  input wire [(4'h8):(1'h0)] wire37;
  input wire [(2'h3):(1'h0)] wire36;
  wire signed [(3'h7):(1'h0)] wire57;
  wire [(4'h8):(1'h0)] wire52;
  wire [(2'h2):(1'h0)] wire51;
  wire signed [(4'h8):(1'h0)] wire50;
  wire signed [(3'h4):(1'h0)] wire47;
  wire [(3'h6):(1'h0)] wire46;
  wire signed [(3'h5):(1'h0)] wire45;
  wire [(4'h8):(1'h0)] wire44;
  reg [(4'hb):(1'h0)] reg56 = (1'h0);
  reg [(4'ha):(1'h0)] reg55 = (1'h0);
  reg [(2'h3):(1'h0)] reg54 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg49 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg43 = (1'h0);
  reg [(3'h5):(1'h0)] reg42 = (1'h0);
  reg [(3'h4):(1'h0)] reg41 = (1'h0);
  reg [(3'h4):(1'h0)] reg40 = (1'h0);
  assign y = {wire57,
                 wire52,
                 wire51,
                 wire50,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg49,
                 reg48,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg40 <= {wire37[(1'h1):(1'h0)]};
      reg41 <= $signed(($unsigned((~^wire37)) ?
          {(wire38 == wire38)} : (wire37 ^~ wire36[(2'h2):(2'h2)])));
    end
  always
    @(posedge clk) begin
      reg42 <= $unsigned(($signed(wire36) ?
          $signed((wire39 - reg41)) : ($signed(wire39) | (~(8'ha7)))));
      reg43 <= wire38;
    end
  assign wire44 = $unsigned(($unsigned(reg41[(1'h0):(1'h0)]) ~^ reg41));
  assign wire45 = reg43;
  assign wire46 = ($unsigned(reg43[(2'h2):(1'h1)]) * wire36[(1'h0):(1'h0)]);
  assign wire47 = $signed(({$signed(wire44)} == ((-wire37) ?
                      $signed(reg40) : reg41)));
  always
    @(posedge clk) begin
      reg48 <= (!$signed($unsigned((reg42 ? (8'hae) : wire39))));
      reg49 <= $unsigned(((8'ha4) && wire37[(4'h8):(3'h5)]));
    end
  assign wire50 = $signed(wire44[(3'h7):(3'h4)]);
  assign wire51 = $unsigned(((~reg43[(2'h2):(1'h1)]) + reg49));
  assign wire52 = ($unsigned($signed(reg42)) ?
                      $signed(((~reg41) ?
                          (^wire37) : reg42[(3'h4):(3'h4)])) : $signed(wire37[(3'h4):(2'h2)]));
  always
    @(posedge clk) begin
      if ((~|wire45[(1'h0):(1'h0)]))
        begin
          reg53 <= $unsigned(reg40);
        end
      else
        begin
          reg53 <= {($signed((reg43 < wire51)) ?
                  wire36 : (wire36 ? reg48[(4'h8):(4'h8)] : (~^reg48)))};
          reg54 <= ($unsigned(wire38) ? {wire44[(3'h5):(1'h1)]} : reg48);
          reg55 <= wire45;
        end
      reg56 <= $signed($unsigned((+(^wire38))));
    end
  assign wire57 = (+$unsigned((&$signed(reg49))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param25 = (({((8'had) ? (8'hb0) : (8'ha3))} ? (((8'hae) ? (8'ha3) : (8'ha9)) ? ((8'had) && (8'h9e)) : (~&(8'ha8))) : (((8'ha0) <= (8'h9e)) <<< ((8'ha6) ~^ (8'h9f)))) ^ {(((8'hab) ? (8'ha1) : (8'ha6)) ~^ (-(8'h9c)))}))
(y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire15;
  input wire signed [(4'ha):(1'h0)] wire14;
  input wire signed [(2'h3):(1'h0)] wire13;
  input wire signed [(3'h4):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire23;
  wire [(3'h4):(1'h0)] wire22;
  wire [(3'h6):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire20;
  wire signed [(4'ha):(1'h0)] wire19;
  wire signed [(3'h6):(1'h0)] wire18;
  wire signed [(4'hb):(1'h0)] wire17;
  wire [(3'h7):(1'h0)] wire16;
  assign y = {wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 (1'h0)};
  assign wire16 = {(((~wire13) ? (|wire14) : (~wire15)) ? wire14 : wire12)};
  assign wire17 = ($unsigned(($unsigned(wire16) ?
                      (wire15 ?
                          wire12 : wire14) : $unsigned((8'hab)))) * ((8'had) >= wire14[(2'h3):(2'h3)]));
  assign wire18 = $signed($signed(wire14));
  assign wire19 = $unsigned($signed(wire12[(1'h0):(1'h0)]));
  assign wire20 = wire14;
  assign wire21 = $signed((+wire18));
  assign wire22 = $signed((!((wire12 ? (8'hac) : wire12) ?
                      $unsigned(wire19) : (~|wire12))));
  assign wire23 = ((~^{$unsigned(wire21)}) ?
                      (({wire14} - $signed(wire13)) ?
                          $signed(wire21[(3'h4):(2'h2)]) : wire14[(4'h9):(3'h5)]) : wire12);
  assign wire24 = ($signed((|wire23)) ?
                      $unsigned({(wire22 | wire14)}) : wire13[(2'h2):(1'h1)]);
endmodule