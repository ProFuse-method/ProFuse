(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param10 = (((-(~&(8'hae))) ? ((8'ha5) ? {(8'haf)} : ((8'ha8) >>> (8'hb0))) : {(+(8'ha1))}) ? ((&{(8'ha6)}) ^~ (~((8'hae) ? (8'ha8) : (8'hab)))) : ({(8'h9d)} ? (~|((8'haf) ^ (8'ha0))) : ({(8'ha1)} <<< ((8'ha0) ? (8'hab) : (8'h9f))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire8;
  wire [(4'h8):(1'h0)] wire7;
  wire signed [(2'h3):(1'h0)] wire6;
  reg [(2'h3):(1'h0)] reg5 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg4 = (1'h0);
  assign y = {wire9, wire8, wire7, wire6, reg5, reg4, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= wire3;
      reg5 <= {wire0[(3'h4):(1'h0)]};
    end
  assign wire6 = reg4[(4'h9):(3'h6)];
  assign wire7 = (-reg4);
  assign wire8 = $unsigned($signed($unsigned(wire3)));
  assign wire9 = (&$unsigned((reg4[(1'h1):(1'h1)] ^~ (wire2 ? wire7 : wire2))));
endmodule