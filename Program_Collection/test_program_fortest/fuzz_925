(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param359 = (+((~|(8'hb4)) * (^((~&(8'hab)) ? (8'ha4) : {(8'hbf)})))), 
parameter param360 = param359)
(y, clk, wire0, wire1, wire2, wire3, wire4);
  output wire [(32'h40a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hd):(1'h0)] wire0;
  input wire signed [(5'h15):(1'h0)] wire1;
  input wire signed [(4'he):(1'h0)] wire2;
  input wire signed [(5'h11):(1'h0)] wire3;
  input wire signed [(5'h13):(1'h0)] wire4;
  wire signed [(2'h2):(1'h0)] wire357;
  wire signed [(3'h4):(1'h0)] wire195;
  wire [(2'h3):(1'h0)] wire194;
  wire [(3'h5):(1'h0)] wire135;
  wire signed [(5'h13):(1'h0)] wire134;
  wire signed [(2'h2):(1'h0)] wire133;
  wire signed [(3'h6):(1'h0)] wire117;
  wire [(4'he):(1'h0)] wire116;
  wire signed [(4'ha):(1'h0)] wire115;
  wire [(5'h15):(1'h0)] wire114;
  wire signed [(4'hf):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire112;
  reg signed [(4'hf):(1'h0)] reg190 = (1'h0);
  reg [(3'h5):(1'h0)] reg189 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg188 = (1'h0);
  reg [(4'hd):(1'h0)] reg187 = (1'h0);
  reg [(5'h12):(1'h0)] reg186 = (1'h0);
  reg [(4'h9):(1'h0)] reg183 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg177 = (1'h0);
  reg [(5'h15):(1'h0)] reg176 = (1'h0);
  reg [(5'h10):(1'h0)] reg175 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg172 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg171 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg168 = (1'h0);
  reg [(5'h10):(1'h0)] reg167 = (1'h0);
  reg [(5'h13):(1'h0)] reg166 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg165 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg162 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg160 = (1'h0);
  reg [(4'h8):(1'h0)] reg158 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg157 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg156 = (1'h0);
  reg [(5'h12):(1'h0)] reg154 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg147 = (1'h0);
  reg [(4'he):(1'h0)] reg142 = (1'h0);
  reg signed [(4'he):(1'h0)] reg140 = (1'h0);
  reg [(5'h14):(1'h0)] reg139 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg136 = (1'h0);
  reg [(5'h11):(1'h0)] reg132 = (1'h0);
  reg [(4'hf):(1'h0)] reg131 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg130 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg129 = (1'h0);
  reg [(3'h7):(1'h0)] reg127 = (1'h0);
  reg [(5'h12):(1'h0)] reg126 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg125 = (1'h0);
  reg [(4'hb):(1'h0)] reg123 = (1'h0);
  reg [(4'hb):(1'h0)] reg122 = (1'h0);
  reg [(5'h14):(1'h0)] reg121 = (1'h0);
  reg [(5'h15):(1'h0)] reg120 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg193 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg192 = (1'h0);
  reg [(4'hb):(1'h0)] reg191 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg185 = (1'h0);
  reg [(5'h12):(1'h0)] reg184 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar182 = (1'h0);
  reg [(5'h12):(1'h0)] reg181 = (1'h0);
  reg [(3'h7):(1'h0)] reg180 = (1'h0);
  reg [(5'h11):(1'h0)] reg179 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar178 = (1'h0);
  reg [(4'hd):(1'h0)] forvar174 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar173 = (1'h0);
  reg [(4'h8):(1'h0)] forvar170 = (1'h0);
  reg [(4'hb):(1'h0)] reg169 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar164 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg163 = (1'h0);
  reg [(4'hc):(1'h0)] reg161 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar159 = (1'h0);
  reg [(4'h9):(1'h0)] reg155 = (1'h0);
  reg [(4'ha):(1'h0)] forvar153 = (1'h0);
  reg [(4'hd):(1'h0)] reg152 = (1'h0);
  reg [(3'h7):(1'h0)] forvar151 = (1'h0);
  reg [(2'h2):(1'h0)] forvar150 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg149 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar148 = (1'h0);
  reg signed [(4'he):(1'h0)] reg146 = (1'h0);
  reg [(4'hf):(1'h0)] reg145 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg144 = (1'h0);
  reg [(3'h4):(1'h0)] reg143 = (1'h0);
  reg [(4'h9):(1'h0)] forvar141 = (1'h0);
  reg [(4'h9):(1'h0)] forvar138 = (1'h0);
  reg [(5'h14):(1'h0)] forvar137 = (1'h0);
  reg [(5'h15):(1'h0)] forvar128 = (1'h0);
  reg [(3'h7):(1'h0)] forvar124 = (1'h0);
  reg [(5'h11):(1'h0)] forvar119 = (1'h0);
  reg [(4'hb):(1'h0)] forvar118 = (1'h0);
  assign y = {wire357,
                 wire195,
                 wire194,
                 wire135,
                 wire134,
                 wire133,
                 wire117,
                 wire116,
                 wire115,
                 wire114,
                 wire5,
                 wire112,
                 reg190,
                 reg189,
                 reg188,
                 reg187,
                 reg186,
                 reg183,
                 reg177,
                 reg176,
                 reg175,
                 reg172,
                 reg171,
                 reg168,
                 reg167,
                 reg166,
                 reg165,
                 reg162,
                 reg160,
                 reg158,
                 reg157,
                 reg156,
                 reg154,
                 reg147,
                 reg142,
                 reg140,
                 reg139,
                 reg136,
                 reg132,
                 reg131,
                 reg130,
                 reg129,
                 reg127,
                 reg126,
                 reg125,
                 reg123,
                 reg122,
                 reg121,
                 reg120,
                 reg193,
                 reg192,
                 reg191,
                 reg185,
                 reg184,
                 forvar182,
                 reg181,
                 reg180,
                 reg179,
                 forvar178,
                 forvar174,
                 forvar173,
                 forvar170,
                 reg169,
                 forvar164,
                 reg163,
                 reg161,
                 forvar159,
                 reg155,
                 forvar153,
                 reg152,
                 forvar151,
                 forvar150,
                 reg149,
                 forvar148,
                 reg146,
                 reg145,
                 reg144,
                 reg143,
                 forvar141,
                 forvar138,
                 forvar137,
                 forvar128,
                 forvar124,
                 forvar119,
                 forvar118,
                 (1'h0)};
  assign wire5 = $signed($signed((((wire0 <<< wire1) | $unsigned(wire3)) + (+(~&(8'hbc))))));
  module6 #() modinst113 (.wire9(wire5), .wire11(wire4), .wire10(wire2), .wire8(wire1), .clk(clk), .y(wire112), .wire7(wire3));
  assign wire114 = ($signed($unsigned($signed($signed(wire4)))) ?
                       wire2[(3'h4):(2'h3)] : $signed(wire2[(4'ha):(2'h2)]));
  assign wire115 = ((~&(^~$signed((~|wire2)))) + wire112[(3'h4):(3'h4)]);
  assign wire116 = $signed($unsigned((((wire1 ?
                           wire112 : (8'ha4)) * $unsigned(wire5)) ?
                       (!$unsigned(wire115)) : $unsigned((wire0 >>> wire5)))));
  assign wire117 = (($signed($signed((wire4 ?
                           wire1 : (8'ha6)))) > wire2[(3'h4):(2'h2)]) ?
                       wire115 : ((~&wire5[(1'h1):(1'h0)]) ~^ (~&wire112[(3'h6):(2'h2)])));
  always
    @(posedge clk) begin
      for (forvar118 = (1'h0); (forvar118 < (2'h2)); forvar118 = (forvar118 + (1'h1)))
        begin
          for (forvar119 = (1'h0); (forvar119 < (2'h3)); forvar119 = (forvar119 + (1'h1)))
            begin
              reg120 <= wire3;
              reg121 <= $signed((wire114 << $signed((&(8'hbf)))));
              reg122 <= {$unsigned(wire2), wire112[(2'h2):(1'h0)]};
              reg123 <= {wire116};
            end
          for (forvar124 = (1'h0); (forvar124 < (3'h4)); forvar124 = (forvar124 + (1'h1)))
            begin
              reg125 <= ({forvar124[(1'h1):(1'h0)]} ?
                  $signed((~(~wire2[(4'hc):(4'h9)]))) : $unsigned(reg120));
              reg126 <= ((^~($signed((~wire3)) <= ((~&wire116) > {reg122}))) ?
                  ($unsigned(reg122) >= {{wire116},
                      $unsigned((wire115 - wire116))}) : $signed(wire117[(3'h6):(3'h6)]));
              reg127 <= reg121[(4'h9):(3'h7)];
            end
          for (forvar128 = (1'h0); (forvar128 < (2'h3)); forvar128 = (forvar128 + (1'h1)))
            begin
              reg129 <= ($unsigned(wire2[(3'h5):(1'h0)]) ?
                  ($unsigned(($unsigned(reg120) ?
                          (wire4 <= forvar128) : wire116)) ?
                      wire117 : ($signed($signed((8'hb8))) ?
                          {{reg122, wire0}} : wire3)) : reg125);
              reg130 <= wire5;
              reg131 <= (8'hba);
            end
        end
      reg132 <= reg121[(1'h1):(1'h0)];
    end
  assign wire133 = ({$signed($signed(reg125))} ?
                       $signed({reg122[(1'h0):(1'h0)],
                           $signed(((8'hb1) ?
                               reg130 : (8'ha1)))}) : ((~^$unsigned($signed(reg132))) ?
                           wire117 : (~&wire1)));
  assign wire134 = (8'hb9);
  assign wire135 = wire112[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      reg136 <= $signed(wire112);
      for (forvar137 = (1'h0); (forvar137 < (1'h0)); forvar137 = (forvar137 + (1'h1)))
        begin
          for (forvar138 = (1'h0); (forvar138 < (1'h1)); forvar138 = (forvar138 + (1'h1)))
            begin
              reg139 <= $unsigned(wire117[(3'h4):(3'h4)]);
              reg140 <= {reg126, (|$unsigned(reg125))};
            end
          for (forvar141 = (1'h0); (forvar141 < (1'h1)); forvar141 = (forvar141 + (1'h1)))
            begin
              reg142 <= (~|(~|reg120[(5'h13):(2'h2)]));
              reg143 = reg126[(4'hc):(3'h6)];
              reg144 = ((^~wire5[(1'h0):(1'h0)]) ?
                  ((&(8'hb0)) ?
                      reg140 : $signed((+(forvar138 ?
                          reg143 : wire134)))) : {{(8'ha4),
                          (^~$unsigned(reg129))},
                      reg126[(4'h9):(3'h7)]});
              reg145 = $unsigned((($signed((+wire116)) <<< $unsigned(wire135[(1'h0):(1'h0)])) & wire135[(1'h0):(1'h0)]));
              reg146 = (reg131[(4'h9):(1'h0)] ?
                  wire2 : (((&wire114[(5'h15):(4'hc)]) <<< (forvar137 << (~^(8'hbf)))) <<< {wire5}));
            end
          reg147 <= $signed(($unsigned(({wire114} <<< (wire135 ?
                  reg143 : wire0))) ?
              reg145[(1'h0):(1'h0)] : forvar137));
        end
      for (forvar148 = (1'h0); (forvar148 < (2'h3)); forvar148 = (forvar148 + (1'h1)))
        begin
          reg149 = reg131;
        end
      for (forvar150 = (1'h0); (forvar150 < (1'h1)); forvar150 = (forvar150 + (1'h1)))
        begin
          for (forvar151 = (1'h0); (forvar151 < (2'h3)); forvar151 = (forvar151 + (1'h1)))
            begin
              reg152 = wire5[(4'hd):(4'hb)];
            end
          for (forvar153 = (1'h0); (forvar153 < (1'h1)); forvar153 = (forvar153 + (1'h1)))
            begin
              reg154 <= reg149[(1'h1):(1'h0)];
              reg155 = {$signed(forvar141), forvar141};
              reg156 <= $unsigned((~(((wire3 ? reg154 : wire0) <<< wire3) ?
                  reg131 : $unsigned((^~reg131)))));
              reg157 <= {(+((~|reg149[(1'h1):(1'h0)]) ?
                      $signed((reg156 != wire115)) : $unsigned(reg139[(4'hf):(1'h0)])))};
              reg158 <= reg131;
            end
          for (forvar159 = (1'h0); (forvar159 < (1'h0)); forvar159 = (forvar159 + (1'h1)))
            begin
              reg160 <= reg136;
              reg161 = wire5[(3'h7):(3'h5)];
              reg162 <= reg136;
              reg163 = reg147[(3'h6):(1'h0)];
            end
          for (forvar164 = (1'h0); (forvar164 < (2'h2)); forvar164 = (forvar164 + (1'h1)))
            begin
              reg165 <= (-(forvar138[(2'h2):(1'h1)] && {$unsigned((reg154 >= forvar148)),
                  forvar138}));
              reg166 <= (reg122[(1'h0):(1'h0)] & (-wire116[(3'h5):(2'h2)]));
              reg167 <= {$unsigned((-(7'h40))), reg129};
              reg168 <= ({(8'hba)} >>> reg130[(1'h0):(1'h0)]);
              reg169 = $signed(wire134[(4'hb):(4'h8)]);
            end
          for (forvar170 = (1'h0); (forvar170 < (1'h1)); forvar170 = (forvar170 + (1'h1)))
            begin
              reg171 <= $signed(reg130[(4'hb):(4'hb)]);
              reg172 <= reg167[(1'h0):(1'h0)];
            end
        end
      for (forvar173 = (1'h0); (forvar173 < (2'h2)); forvar173 = (forvar173 + (1'h1)))
        begin
          for (forvar174 = (1'h0); (forvar174 < (1'h0)); forvar174 = (forvar174 + (1'h1)))
            begin
              reg175 <= (((reg172[(1'h0):(1'h0)] ^~ reg169[(1'h1):(1'h1)]) ?
                  reg163[(2'h3):(2'h2)] : $unsigned($unsigned(reg120))) >= {(forvar173 ?
                      reg121 : (reg144[(1'h0):(1'h0)] != $signed(reg160)))});
              reg176 <= $unsigned(reg169);
              reg177 <= {$signed(forvar148),
                  ($unsigned(($signed(reg163) << $signed(forvar174))) <= wire112[(3'h5):(3'h4)])};
            end
          for (forvar178 = (1'h0); (forvar178 < (2'h3)); forvar178 = (forvar178 + (1'h1)))
            begin
              reg179 = wire117[(3'h5):(1'h1)];
              reg180 = {$signed(reg126)};
              reg181 = reg122;
            end
          for (forvar182 = (1'h0); (forvar182 < (3'h4)); forvar182 = (forvar182 + (1'h1)))
            begin
              reg183 <= (($signed((reg162 - (forvar170 ? reg167 : reg127))) ?
                  (&$unsigned((reg145 ?
                      forvar138 : reg136))) : (!$signed((^~wire115)))) && {$signed(((forvar138 ?
                      forvar182 : wire2) * ((8'hbd) ? forvar164 : reg156))),
                  (~$signed((reg126 && (8'hbe))))});
              reg184 = (!{$unsigned($unsigned(reg183[(3'h6):(3'h5)]))});
              reg185 = forvar137[(4'hc):(4'hb)];
              reg186 <= reg184;
              reg187 <= (~|($unsigned((reg122[(4'h9):(3'h4)] ?
                  ((8'hbe) ?
                      reg158 : reg143) : $signed((8'hac)))) >>> {($signed(reg140) ?
                      (reg162 <= reg184) : (+reg147)),
                  ($signed(forvar153) ?
                      (wire1 ? wire5 : (7'h43)) : forvar148[(5'h11):(3'h6)])}));
            end
          if (($unsigned(reg187) ?
              $unsigned($signed($signed((8'hb7)))) : reg176))
            begin
              reg188 <= {(8'hb9)};
              reg189 <= ((-forvar148[(3'h7):(2'h2)]) != $unsigned({($unsigned(reg162) ^~ (forvar174 <= reg185))}));
              reg190 <= reg121;
            end
          else
            begin
              reg188 <= reg154;
              reg189 <= (|reg185[(1'h1):(1'h0)]);
              reg191 = (reg147 ^ $unsigned(reg125[(1'h1):(1'h1)]));
              reg192 = $signed($signed(($unsigned($unsigned(reg166)) ?
                  (~|$unsigned(reg172)) : $unsigned((reg168 | reg146)))));
              reg193 = ((reg136[(3'h7):(3'h5)] ?
                      $signed($signed(reg162)) : {reg139}) ?
                  reg183[(3'h5):(1'h0)] : {wire135});
            end
        end
    end
  assign wire194 = {(^reg125),
                       ((reg147[(4'hb):(4'hb)] ?
                           {(|reg177)} : (&(~^reg140))) || {$signed(wire0[(2'h3):(2'h2)])})};
  assign wire195 = wire3;
  module196 #() modinst358 (.y(wire357), .wire200(wire112), .clk(clk), .wire198(reg189), .wire197(wire0), .wire199(reg167));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module196
#(parameter param356 = (7'h41))
(y, clk, wire200, wire199, wire198, wire197);
  output wire [(32'h3b7):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire200;
  input wire signed [(3'h6):(1'h0)] wire199;
  input wire signed [(3'h5):(1'h0)] wire198;
  input wire signed [(4'hd):(1'h0)] wire197;
  wire [(4'hb):(1'h0)] wire355;
  wire signed [(4'he):(1'h0)] wire354;
  wire [(3'h7):(1'h0)] wire353;
  wire signed [(5'h12):(1'h0)] wire352;
  wire [(4'hd):(1'h0)] wire350;
  wire [(4'he):(1'h0)] wire337;
  wire [(4'h8):(1'h0)] wire336;
  wire [(4'ha):(1'h0)] wire335;
  wire signed [(5'h13):(1'h0)] wire334;
  wire signed [(2'h3):(1'h0)] wire318;
  wire signed [(5'h15):(1'h0)] wire255;
  wire signed [(3'h7):(1'h0)] wire203;
  wire signed [(5'h12):(1'h0)] wire202;
  wire [(4'hc):(1'h0)] wire201;
  reg [(4'h9):(1'h0)] reg254 = (1'h0);
  reg [(4'hf):(1'h0)] reg253 = (1'h0);
  reg [(5'h14):(1'h0)] reg252 = (1'h0);
  reg [(3'h5):(1'h0)] reg251 = (1'h0);
  reg [(3'h5):(1'h0)] reg250 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg248 = (1'h0);
  reg [(4'h8):(1'h0)] reg245 = (1'h0);
  reg [(4'hd):(1'h0)] reg243 = (1'h0);
  reg [(5'h13):(1'h0)] reg241 = (1'h0);
  reg [(5'h13):(1'h0)] reg240 = (1'h0);
  reg [(4'h9):(1'h0)] reg239 = (1'h0);
  reg [(4'he):(1'h0)] reg236 = (1'h0);
  reg [(4'h9):(1'h0)] reg235 = (1'h0);
  reg [(4'ha):(1'h0)] reg234 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg232 = (1'h0);
  reg [(4'hf):(1'h0)] reg231 = (1'h0);
  reg [(2'h2):(1'h0)] reg228 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg227 = (1'h0);
  reg [(5'h11):(1'h0)] reg226 = (1'h0);
  reg signed [(4'he):(1'h0)] reg225 = (1'h0);
  reg [(2'h2):(1'h0)] reg223 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg219 = (1'h0);
  reg [(4'ha):(1'h0)] reg215 = (1'h0);
  reg [(4'hc):(1'h0)] reg214 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg212 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg211 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg210 = (1'h0);
  reg [(4'h9):(1'h0)] reg207 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg204 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg324 = (1'h0);
  reg [(5'h10):(1'h0)] reg330 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg331 = (1'h0);
  reg [(3'h7):(1'h0)] reg332 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg333 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar329 = (1'h0);
  reg [(5'h12):(1'h0)] forvar328 = (1'h0);
  reg [(5'h10):(1'h0)] reg327 = (1'h0);
  reg [(4'h8):(1'h0)] forvar326 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar325 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg323 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar322 = (1'h0);
  reg [(4'ha):(1'h0)] forvar321 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg320 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar249 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg247 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg246 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar244 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg242 = (1'h0);
  reg [(4'he):(1'h0)] forvar238 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar237 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar233 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg230 = (1'h0);
  reg [(5'h11):(1'h0)] forvar229 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar224 = (1'h0);
  reg [(5'h14):(1'h0)] reg222 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg221 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg220 = (1'h0);
  reg [(5'h10):(1'h0)] forvar218 = (1'h0);
  reg [(4'hc):(1'h0)] forvar217 = (1'h0);
  reg [(3'h4):(1'h0)] reg216 = (1'h0);
  reg [(4'hf):(1'h0)] forvar213 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar209 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar208 = (1'h0);
  reg [(4'he):(1'h0)] forvar206 = (1'h0);
  reg [(3'h4):(1'h0)] forvar205 = (1'h0);
  assign y = {wire355,
                 wire354,
                 wire353,
                 wire352,
                 wire350,
                 wire337,
                 wire336,
                 wire335,
                 wire334,
                 wire318,
                 wire255,
                 wire203,
                 wire202,
                 wire201,
                 reg254,
                 reg253,
                 reg252,
                 reg251,
                 reg250,
                 reg248,
                 reg245,
                 reg243,
                 reg241,
                 reg240,
                 reg239,
                 reg236,
                 reg235,
                 reg234,
                 reg232,
                 reg231,
                 reg228,
                 reg227,
                 reg226,
                 reg225,
                 reg223,
                 reg219,
                 reg215,
                 reg214,
                 reg212,
                 reg211,
                 reg210,
                 reg207,
                 reg204,
                 reg324,
                 reg330,
                 reg331,
                 reg332,
                 reg333,
                 forvar329,
                 forvar328,
                 reg327,
                 forvar326,
                 forvar325,
                 reg323,
                 forvar322,
                 forvar321,
                 reg320,
                 forvar249,
                 reg247,
                 reg246,
                 forvar244,
                 reg242,
                 forvar238,
                 forvar237,
                 forvar233,
                 reg230,
                 forvar229,
                 forvar224,
                 reg222,
                 reg221,
                 reg220,
                 forvar218,
                 forvar217,
                 reg216,
                 forvar213,
                 forvar209,
                 forvar208,
                 forvar206,
                 forvar205,
                 (1'h0)};
  assign wire201 = wire200[(2'h3):(1'h0)];
  assign wire202 = (8'hbb);
  assign wire203 = (wire198 > wire199);
  always
    @(posedge clk) begin
      reg204 <= {((~|(~|{(8'h9d), wire203})) ?
              $unsigned($signed($unsigned(wire197))) : wire198[(3'h4):(1'h0)]),
          $unsigned((wire203 <= (8'h9c)))};
      for (forvar205 = (1'h0); (forvar205 < (2'h2)); forvar205 = (forvar205 + (1'h1)))
        begin
          for (forvar206 = (1'h0); (forvar206 < (3'h4)); forvar206 = (forvar206 + (1'h1)))
            begin
              reg207 <= (!{$signed((~^(wire200 ? (8'had) : wire198)))});
            end
        end
      for (forvar208 = (1'h0); (forvar208 < (3'h4)); forvar208 = (forvar208 + (1'h1)))
        begin
          for (forvar209 = (1'h0); (forvar209 < (2'h3)); forvar209 = (forvar209 + (1'h1)))
            begin
              reg210 <= (~{wire198});
              reg211 <= $signed(((8'hb0) != wire197[(4'h9):(3'h7)]));
              reg212 <= (8'ha3);
            end
          for (forvar213 = (1'h0); (forvar213 < (3'h4)); forvar213 = (forvar213 + (1'h1)))
            begin
              reg214 <= $unsigned(wire198);
              reg215 <= $signed($signed((^({reg210} ~^ forvar206))));
            end
          reg216 = ({{$unsigned((^~wire200)), reg214[(4'h9):(1'h1)]},
              $signed((forvar205 ?
                  (^~reg212) : (reg212 && forvar213)))} >> $signed(reg204[(3'h6):(3'h4)]));
        end
      for (forvar217 = (1'h0); (forvar217 < (2'h3)); forvar217 = (forvar217 + (1'h1)))
        begin
          for (forvar218 = (1'h0); (forvar218 < (3'h4)); forvar218 = (forvar218 + (1'h1)))
            begin
              reg219 <= {(|(8'ha4)),
                  {$signed((^forvar209[(4'h9):(3'h6)])), (8'hb7)}};
              reg220 = $signed($unsigned((~$signed($signed((8'hba))))));
              reg221 = ($unsigned($unsigned(($signed(reg207) ^ (wire198 >> reg207)))) || ({forvar209} ?
                  $signed(wire199) : (reg210 ?
                      (-(!reg207)) : (((8'haf) & wire197) ?
                          ((8'ha2) ^~ (8'haa)) : $signed(wire202)))));
              reg222 = (~(-$unsigned(({forvar217} << (^~reg211)))));
              reg223 <= forvar208;
            end
          for (forvar224 = (1'h0); (forvar224 < (2'h2)); forvar224 = (forvar224 + (1'h1)))
            begin
              reg225 <= (-forvar218[(4'ha):(4'ha)]);
              reg226 <= wire203[(3'h7):(1'h1)];
              reg227 <= $unsigned(reg212[(4'h8):(3'h6)]);
              reg228 <= ({($signed((reg223 ?
                      (8'hae) : forvar209)) <<< (|reg215))} & $unsigned(($unsigned({wire200,
                  (8'hab)}) ^ $signed($signed(forvar208)))));
            end
          for (forvar229 = (1'h0); (forvar229 < (1'h1)); forvar229 = (forvar229 + (1'h1)))
            begin
              reg230 = $unsigned($unsigned($unsigned(forvar224[(4'hf):(4'hc)])));
              reg231 <= forvar205[(2'h3):(2'h2)];
              reg232 <= $unsigned($signed($signed($signed({forvar209}))));
            end
          for (forvar233 = (1'h0); (forvar233 < (2'h2)); forvar233 = (forvar233 + (1'h1)))
            begin
              reg234 <= (^(+{wire203}));
              reg235 <= {reg212[(4'hd):(4'h9)], $unsigned(reg219)};
            end
          reg236 <= reg227;
        end
      for (forvar237 = (1'h0); (forvar237 < (2'h3)); forvar237 = (forvar237 + (1'h1)))
        begin
          for (forvar238 = (1'h0); (forvar238 < (3'h4)); forvar238 = (forvar238 + (1'h1)))
            begin
              reg239 <= forvar237;
              reg240 <= $signed((forvar218[(3'h4):(3'h4)] >= $signed((reg216[(1'h1):(1'h1)] > wire197))));
              reg241 <= $signed($signed($unsigned(wire203[(3'h4):(2'h3)])));
              reg242 = reg214[(2'h2):(1'h1)];
              reg243 <= ((reg210 != ((|reg204[(4'h9):(4'h8)]) ^~ $unsigned(forvar209[(3'h6):(2'h2)]))) ?
                  $signed($unsigned(forvar233)) : reg212);
            end
          for (forvar244 = (1'h0); (forvar244 < (1'h0)); forvar244 = (forvar244 + (1'h1)))
            begin
              reg245 <= (!(wire197 ?
                  $unsigned((~^(reg204 ? reg223 : forvar244))) : ((8'ha3) ?
                      reg219[(2'h3):(2'h3)] : (~|wire203))));
              reg246 = forvar244[(2'h3):(2'h2)];
              reg247 = ($signed((reg214 == {(forvar224 ~^ wire198),
                      (!reg226)})) ?
                  {($unsigned($signed(forvar237)) ?
                          (|forvar238[(2'h2):(1'h1)]) : ((forvar233 ?
                              reg221 : (8'hb7)) >>> (reg207 <= forvar244))),
                      $signed(reg211)} : $signed((&((reg236 ?
                          wire202 : (8'hb5)) ?
                      (8'hb6) : ((7'h41) ? reg236 : forvar224)))));
              reg248 <= (~&$unsigned((!forvar237[(4'he):(1'h1)])));
            end
          for (forvar249 = (1'h0); (forvar249 < (2'h2)); forvar249 = (forvar249 + (1'h1)))
            begin
              reg250 <= (8'ha7);
              reg251 <= forvar208[(1'h1):(1'h0)];
              reg252 <= ($unsigned($unsigned(reg214[(4'hb):(2'h2)])) ?
                  (8'hbe) : $signed((({reg240, reg242} ?
                      reg227[(3'h6):(2'h2)] : {reg214,
                          forvar237}) >>> ((7'h42) ?
                      (reg243 > forvar213) : forvar213[(4'h9):(3'h5)]))));
              reg253 <= ($unsigned(({(!forvar224),
                      (wire202 ? reg220 : reg207)} || (reg239 ?
                      {reg231, (8'ha4)} : wire198))) ?
                  {(8'hb6),
                      $unsigned($unsigned((~reg226)))} : ($signed($signed($signed(reg220))) < ((8'h9c) ?
                      forvar224[(5'h11):(2'h2)] : reg235[(1'h1):(1'h1)])));
              reg254 <= reg247;
            end
        end
    end
  assign wire255 = $signed(reg210[(2'h3):(1'h0)]);
  module256 #() modinst319 (wire318, clk, reg236, reg243, reg240, reg227, reg210);
  always
    @(posedge clk) begin
      reg320 = $unsigned((($signed((^~reg254)) & $signed($signed(reg223))) > (8'hbc)));
      for (forvar321 = (1'h0); (forvar321 < (3'h4)); forvar321 = (forvar321 + (1'h1)))
        begin
          for (forvar322 = (1'h0); (forvar322 < (2'h2)); forvar322 = (forvar322 + (1'h1)))
            begin
              reg323 = $unsigned(($unsigned($signed($signed(reg248))) ?
                  (^~(^wire203[(2'h2):(1'h1)])) : (^~(!$signed(reg248)))));
              reg324 <= wire318;
            end
        end
      for (forvar325 = (1'h0); (forvar325 < (2'h2)); forvar325 = (forvar325 + (1'h1)))
        begin
          for (forvar326 = (1'h0); (forvar326 < (3'h4)); forvar326 = (forvar326 + (1'h1)))
            begin
              reg327 = (((((8'hab) | forvar325) ?
                  reg324[(1'h0):(1'h0)] : {(~reg207),
                      (forvar325 ? reg240 : reg236)}) <= ($unsigned((forvar322 ?
                  (8'h9e) : reg228)) - ((~^(8'hab)) ?
                  (reg215 + reg204) : {reg207}))) ^~ reg210);
            end
        end
      for (forvar328 = (1'h0); (forvar328 < (2'h2)); forvar328 = (forvar328 + (1'h1)))
        begin
          for (forvar329 = (1'h0); (forvar329 < (3'h4)); forvar329 = (forvar329 + (1'h1)))
            begin
              reg330 <= $unsigned(reg227[(5'h10):(5'h10)]);
              reg331 <= (^~((~($signed(reg324) ?
                      (reg204 < reg228) : (-reg251))) ?
                  reg323[(3'h5):(1'h1)] : forvar321));
              reg332 <= (|($unsigned(((reg226 ?
                  wire199 : forvar329) - (+reg250))) >= ($signed($unsigned(reg207)) ^ reg324)));
              reg333 <= $unsigned(reg253);
            end
        end
    end
  assign wire334 = wire255;
  assign wire335 = (~&$signed($signed((((8'ha7) ?
                       reg252 : reg248) || {reg219}))));
  assign wire336 = reg248;
  assign wire337 = reg231[(3'h4):(1'h0)];
  module338 #() modinst351 (wire350, clk, reg207, reg234, reg245, reg226, reg330);
  assign wire352 = ($signed(reg239) > (-(!reg226)));
  assign wire353 = ((^~$signed($unsigned($unsigned((8'ha9))))) ?
                       wire336[(3'h6):(1'h0)] : $unsigned($unsigned(wire352[(5'h11):(4'h9)])));
  assign wire354 = $unsigned(($unsigned((((8'hb5) ? reg211 : wire200) ?
                       wire201[(4'h9):(3'h5)] : {(8'hb0)})) && $unsigned(wire350[(3'h7):(3'h7)])));
  assign wire355 = (~|$signed(wire199[(1'h1):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire7, wire8, wire9, wire10, wire11);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h11):(1'h0)] wire7;
  input wire signed [(5'h15):(1'h0)] wire8;
  input wire [(4'hf):(1'h0)] wire9;
  input wire signed [(4'hb):(1'h0)] wire10;
  input wire [(4'he):(1'h0)] wire11;
  wire [(5'h12):(1'h0)] wire111;
  wire [(4'h8):(1'h0)] wire110;
  wire signed [(3'h7):(1'h0)] wire109;
  wire [(4'h8):(1'h0)] wire108;
  wire signed [(2'h3):(1'h0)] wire107;
  wire [(4'hd):(1'h0)] wire12;
  wire signed [(4'h9):(1'h0)] wire13;
  wire signed [(4'hc):(1'h0)] wire14;
  wire signed [(4'ha):(1'h0)] wire105;
  assign y = {wire111,
                 wire110,
                 wire109,
                 wire108,
                 wire107,
                 wire12,
                 wire13,
                 wire14,
                 wire105,
                 (1'h0)};
  assign wire12 = (7'h41);
  assign wire13 = $unsigned($unsigned(({wire10[(3'h4):(3'h4)],
                          ((8'h9f) ? (8'hb9) : wire8)} ?
                      {wire8} : {wire9[(4'hc):(4'h8)]})));
  assign wire14 = wire8[(5'h14):(4'hb)];
  module15 #() modinst106 (wire105, clk, wire7, wire8, wire14, wire13, wire11);
  assign wire107 = (~$signed({(~&{wire12, wire12})}));
  assign wire108 = $signed($unsigned(wire13));
  assign wire109 = wire108[(3'h7):(2'h3)];
  assign wire110 = ($unsigned($unsigned($unsigned((wire10 <<< wire7)))) ^~ $signed($signed($unsigned(wire109[(1'h1):(1'h1)]))));
  assign wire111 = (wire13 <<< wire14[(1'h1):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param103 = (8'hae), 
parameter param104 = ((((8'hae) >> (param103 - param103)) ? ((&(^~param103)) ? param103 : (8'hb6)) : (+(8'hb9))) & (|{(~(~param103))})))
(y, clk, wire20, wire19, wire18, wire17, wire16);
  output wire [(32'h378):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hc):(1'h0)] wire20;
  input wire [(4'hc):(1'h0)] wire19;
  input wire signed [(3'h4):(1'h0)] wire18;
  input wire [(3'h5):(1'h0)] wire17;
  input wire signed [(4'hc):(1'h0)] wire16;
  wire signed [(4'h9):(1'h0)] wire102;
  wire signed [(4'h9):(1'h0)] wire101;
  wire signed [(4'ha):(1'h0)] wire51;
  wire signed [(4'ha):(1'h0)] wire50;
  wire signed [(3'h7):(1'h0)] wire49;
  wire signed [(4'hc):(1'h0)] wire32;
  wire [(5'h14):(1'h0)] wire31;
  reg signed [(3'h7):(1'h0)] reg99 = (1'h0);
  reg [(4'h8):(1'h0)] reg96 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg95 = (1'h0);
  reg [(3'h7):(1'h0)] reg94 = (1'h0);
  reg [(4'hb):(1'h0)] reg90 = (1'h0);
  reg [(3'h4):(1'h0)] reg89 = (1'h0);
  reg [(4'ha):(1'h0)] reg88 = (1'h0);
  reg [(5'h14):(1'h0)] reg83 = (1'h0);
  reg [(3'h4):(1'h0)] reg77 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg85 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg82 = (1'h0);
  reg [(4'h8):(1'h0)] reg81 = (1'h0);
  reg [(2'h2):(1'h0)] reg78 = (1'h0);
  reg [(4'h8):(1'h0)] reg76 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg75 = (1'h0);
  reg [(3'h7):(1'h0)] reg73 = (1'h0);
  reg [(5'h15):(1'h0)] reg71 = (1'h0);
  reg [(3'h6):(1'h0)] reg69 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg68 = (1'h0);
  reg [(4'h8):(1'h0)] reg66 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg65 = (1'h0);
  reg [(4'hd):(1'h0)] reg63 = (1'h0);
  reg [(3'h5):(1'h0)] reg61 = (1'h0);
  reg [(3'h7):(1'h0)] reg60 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg57 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg47 = (1'h0);
  reg [(5'h15):(1'h0)] reg46 = (1'h0);
  reg [(4'ha):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg44 = (1'h0);
  reg [(4'h8):(1'h0)] reg41 = (1'h0);
  reg [(4'hd):(1'h0)] reg40 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg39 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg38 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg37 = (1'h0);
  reg [(5'h15):(1'h0)] reg30 = (1'h0);
  reg [(4'hf):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg26 = (1'h0);
  reg [(3'h4):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg23 = (1'h0);
  reg [(4'he):(1'h0)] reg100 = (1'h0);
  reg [(3'h5):(1'h0)] forvar98 = (1'h0);
  reg [(4'h9):(1'h0)] reg97 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar93 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar92 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg91 = (1'h0);
  reg [(4'hd):(1'h0)] reg87 = (1'h0);
  reg [(2'h3):(1'h0)] forvar86 = (1'h0);
  reg [(5'h13):(1'h0)] forvar84 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar76 = (1'h0);
  reg signed [(4'he):(1'h0)] reg84 = (1'h0);
  reg [(4'hf):(1'h0)] forvar83 = (1'h0);
  reg [(2'h3):(1'h0)] reg80 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg79 = (1'h0);
  reg [(4'ha):(1'h0)] forvar77 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg74 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg72 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg70 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar67 = (1'h0);
  reg [(5'h11):(1'h0)] forvar64 = (1'h0);
  reg [(5'h13):(1'h0)] reg62 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar59 = (1'h0);
  reg [(4'hc):(1'h0)] forvar58 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg56 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg55 = (1'h0);
  reg [(2'h2):(1'h0)] reg54 = (1'h0);
  reg [(4'ha):(1'h0)] forvar53 = (1'h0);
  reg [(4'h9):(1'h0)] forvar52 = (1'h0);
  reg [(5'h10):(1'h0)] forvar43 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar42 = (1'h0);
  reg [(4'ha):(1'h0)] forvar36 = (1'h0);
  reg [(3'h5):(1'h0)] forvar35 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg34 = (1'h0);
  reg [(4'hf):(1'h0)] forvar33 = (1'h0);
  reg [(4'h9):(1'h0)] forvar29 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar27 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar24 = (1'h0);
  reg [(4'ha):(1'h0)] forvar22 = (1'h0);
  reg [(5'h11):(1'h0)] forvar21 = (1'h0);
  assign y = {wire102,
                 wire101,
                 wire51,
                 wire50,
                 wire49,
                 wire32,
                 wire31,
                 reg99,
                 reg96,
                 reg95,
                 reg94,
                 reg90,
                 reg89,
                 reg88,
                 reg83,
                 reg77,
                 reg85,
                 reg82,
                 reg81,
                 reg78,
                 reg76,
                 reg75,
                 reg73,
                 reg71,
                 reg69,
                 reg68,
                 reg66,
                 reg65,
                 reg63,
                 reg61,
                 reg60,
                 reg57,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg30,
                 reg28,
                 reg26,
                 reg25,
                 reg23,
                 reg100,
                 forvar98,
                 reg97,
                 forvar93,
                 forvar92,
                 reg91,
                 reg87,
                 forvar86,
                 forvar84,
                 forvar76,
                 reg84,
                 forvar83,
                 reg80,
                 reg79,
                 forvar77,
                 reg74,
                 reg72,
                 reg70,
                 forvar67,
                 forvar64,
                 reg62,
                 forvar59,
                 forvar58,
                 reg56,
                 reg55,
                 reg54,
                 forvar53,
                 forvar52,
                 forvar43,
                 forvar42,
                 forvar36,
                 forvar35,
                 reg34,
                 forvar33,
                 forvar29,
                 forvar27,
                 forvar24,
                 forvar22,
                 forvar21,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar21 = (1'h0); (forvar21 < (3'h4)); forvar21 = (forvar21 + (1'h1)))
        begin
          for (forvar22 = (1'h0); (forvar22 < (1'h0)); forvar22 = (forvar22 + (1'h1)))
            begin
              reg23 <= {wire20[(3'h7):(3'h4)],
                  $unsigned($unsigned({(forvar22 >> wire17),
                      $signed(wire19)}))};
            end
          for (forvar24 = (1'h0); (forvar24 < (1'h0)); forvar24 = (forvar24 + (1'h1)))
            begin
              reg25 <= forvar21[(4'h8):(3'h5)];
              reg26 <= {((^~$unsigned(wire19[(1'h1):(1'h1)])) ?
                      {$signed(((8'h9e) <= forvar21))} : (wire17[(3'h4):(1'h0)] != {$signed(forvar24)}))};
            end
          for (forvar27 = (1'h0); (forvar27 < (1'h1)); forvar27 = (forvar27 + (1'h1)))
            begin
              reg28 <= (^~forvar24);
            end
          for (forvar29 = (1'h0); (forvar29 < (2'h3)); forvar29 = (forvar29 + (1'h1)))
            begin
              reg30 <= (($unsigned(wire17[(1'h0):(1'h0)]) ?
                  (^~($unsigned(forvar24) ?
                      (reg25 & forvar22) : (wire17 ?
                          forvar24 : forvar29))) : wire19) >>> forvar22[(3'h7):(3'h5)]);
            end
        end
    end
  assign wire31 = ($signed(reg26[(1'h0):(1'h0)]) + ((~|(~^(reg30 & (8'h9c)))) != reg28[(4'ha):(4'ha)]));
  assign wire32 = (reg30[(3'h4):(3'h4)] != (($signed(wire17[(1'h0):(1'h0)]) ?
                          (8'had) : wire16[(3'h7):(3'h7)]) ?
                      (!reg23[(1'h1):(1'h0)]) : wire17));
  always
    @(posedge clk) begin
      for (forvar33 = (1'h0); (forvar33 < (2'h2)); forvar33 = (forvar33 + (1'h1)))
        begin
          reg34 = reg30[(2'h3):(1'h1)];
        end
      for (forvar35 = (1'h0); (forvar35 < (3'h4)); forvar35 = (forvar35 + (1'h1)))
        begin
          for (forvar36 = (1'h0); (forvar36 < (1'h1)); forvar36 = (forvar36 + (1'h1)))
            begin
              reg37 <= wire16;
              reg38 <= wire32;
              reg39 <= (reg34[(2'h2):(1'h0)] ?
                  (wire18[(2'h3):(2'h3)] >> ((reg38 >>> reg23[(3'h5):(1'h1)]) ?
                      $unsigned({wire17}) : $unsigned(forvar36[(3'h5):(2'h3)]))) : (($unsigned($signed(wire18)) | ($unsigned(wire16) ?
                          {forvar33} : (^forvar36))) ?
                      (+$unsigned({wire32, reg23})) : $signed((^~(-reg37)))));
            end
          reg40 <= reg39[(2'h3):(2'h2)];
          reg41 <= $signed($unsigned(wire16));
        end
      for (forvar42 = (1'h0); (forvar42 < (2'h2)); forvar42 = (forvar42 + (1'h1)))
        begin
          for (forvar43 = (1'h0); (forvar43 < (2'h3)); forvar43 = (forvar43 + (1'h1)))
            begin
              reg44 <= $signed(forvar36[(4'h8):(3'h5)]);
              reg45 <= reg34[(1'h1):(1'h1)];
              reg46 <= ({forvar35, (reg28 ^ $signed($signed(reg37)))} ?
                  (reg30[(5'h15):(4'hc)] < $signed((reg44 ?
                      ((8'ha4) ?
                          reg44 : reg40) : (wire17 != reg45)))) : (!$signed($signed(wire19))));
              reg47 <= {$unsigned({wire32}),
                  (((!reg23) && $signed(reg28)) ?
                      $signed($signed((forvar42 ?
                          (8'ha4) : (8'haa)))) : ($signed(reg23) ?
                          $unsigned({reg28}) : ({wire32,
                              reg44} >>> $unsigned(reg45))))};
              reg48 <= {(forvar33[(4'ha):(4'h8)] && {((reg25 ~^ reg28) ?
                          (wire32 ? (8'ha5) : reg46) : (&forvar33))})};
            end
        end
    end
  assign wire49 = (~(reg39 < $signed((8'h9f))));
  assign wire50 = wire20[(3'h7):(3'h7)];
  assign wire51 = $unsigned((($unsigned($unsigned(reg48)) != {$signed(reg41)}) ?
                      $unsigned((((8'hb3) > reg48) <= (wire20 ?
                          (8'hb2) : (7'h41)))) : {($signed(reg41) ^ reg44[(2'h2):(2'h2)]),
                          (&(+wire19))}));
  always
    @(posedge clk) begin
      for (forvar52 = (1'h0); (forvar52 < (2'h3)); forvar52 = (forvar52 + (1'h1)))
        begin
          for (forvar53 = (1'h0); (forvar53 < (1'h0)); forvar53 = (forvar53 + (1'h1)))
            begin
              reg54 = wire16[(2'h2):(1'h1)];
              reg55 = $unsigned($unsigned(reg48[(2'h3):(1'h1)]));
              reg56 = $unsigned($unsigned(reg23[(2'h3):(1'h0)]));
              reg57 <= wire49[(3'h6):(2'h3)];
            end
        end
      for (forvar58 = (1'h0); (forvar58 < (3'h4)); forvar58 = (forvar58 + (1'h1)))
        begin
          for (forvar59 = (1'h0); (forvar59 < (2'h3)); forvar59 = (forvar59 + (1'h1)))
            begin
              reg60 <= $unsigned({(wire20 ?
                      wire50 : $unsigned((wire31 ? reg28 : reg55))),
                  {reg25}});
              reg61 <= (reg26[(1'h0):(1'h0)] ?
                  (reg48 ^~ $signed({$signed(wire17),
                      $signed(reg38)})) : $signed(reg25[(1'h1):(1'h0)]));
              reg62 = (reg23 <<< (~|$signed($unsigned({reg55, reg45}))));
              reg63 <= $signed(({{(reg45 != (8'ha7)), (reg45 + reg39)},
                      reg26[(2'h2):(1'h1)]} ?
                  $unsigned((((8'hb1) == reg54) > $signed(reg38))) : reg57[(2'h3):(1'h1)]));
            end
          for (forvar64 = (1'h0); (forvar64 < (1'h0)); forvar64 = (forvar64 + (1'h1)))
            begin
              reg65 <= (~($unsigned(forvar64) > (reg55 <<< (&(^~reg62)))));
              reg66 <= {reg57[(4'h8):(1'h1)], wire49[(3'h5):(3'h4)]};
            end
          for (forvar67 = (1'h0); (forvar67 < (2'h2)); forvar67 = (forvar67 + (1'h1)))
            begin
              reg68 <= $signed(forvar58);
              reg69 <= (-(reg55[(2'h2):(1'h0)] ?
                  (&({forvar53} ?
                      $unsigned(forvar53) : $signed(wire20))) : reg48[(1'h1):(1'h0)]));
              reg70 = $signed(reg26);
              reg71 <= (({($signed(forvar52) + (reg68 >= reg56))} ^ $signed($unsigned((reg61 ?
                  (8'ha8) : forvar52)))) << (~&(~{reg40[(2'h2):(1'h0)]})));
              reg72 = (&$unsigned(reg46[(3'h5):(1'h0)]));
            end
          reg73 <= wire50;
          reg74 = $unsigned($signed(reg37));
        end
      if ((+(+$unsigned(reg68))))
        begin
          reg75 <= reg55[(4'h8):(1'h0)];
          reg76 <= reg55[(3'h5):(2'h2)];
          for (forvar77 = (1'h0); (forvar77 < (1'h1)); forvar77 = (forvar77 + (1'h1)))
            begin
              reg78 <= ($unsigned(($unsigned({(8'ha2)}) ?
                  ($unsigned(wire51) ?
                      (wire20 ?
                          reg62 : (8'ha8)) : (^~reg57)) : $unsigned((8'hb3)))) ^ $signed((~^$signed($unsigned(reg30)))));
              reg79 = ((reg41 - reg55) ?
                  ({(wire18[(2'h2):(1'h1)] <= (^forvar58))} | $signed($unsigned($unsigned(reg40)))) : wire18);
              reg80 = wire51[(3'h6):(3'h6)];
              reg81 <= forvar59;
              reg82 <= ((reg69 - (($unsigned((8'hb3)) * forvar58[(3'h4):(1'h0)]) ?
                      $signed($signed(reg73)) : $unsigned((reg47 < reg56)))) ?
                  $unsigned((+(8'hb6))) : $unsigned($signed((((8'ha1) ?
                          reg54 : wire50) ?
                      reg38 : $unsigned(reg46)))));
            end
          for (forvar83 = (1'h0); (forvar83 < (1'h0)); forvar83 = (forvar83 + (1'h1)))
            begin
              reg84 = forvar59;
              reg85 <= forvar67[(3'h5):(3'h4)];
            end
        end
      else
        begin
          reg75 <= $unsigned(((^~$unsigned((|wire51))) >= $unsigned((~&$signed(wire17)))));
          for (forvar76 = (1'h0); (forvar76 < (2'h3)); forvar76 = (forvar76 + (1'h1)))
            begin
              reg77 <= $signed((~&reg54));
              reg79 = $unsigned((reg39 & $signed(wire20[(1'h1):(1'h1)])));
              reg81 <= wire49[(3'h5):(2'h3)];
              reg82 <= $unsigned(reg38);
              reg83 <= reg30[(3'h7):(3'h5)];
            end
          for (forvar84 = (1'h0); (forvar84 < (1'h0)); forvar84 = (forvar84 + (1'h1)))
            begin
              reg85 <= ({$unsigned(reg75), reg61[(1'h0):(1'h0)]} ?
                  $unsigned($signed(reg77)) : ({$unsigned(reg40)} | ((+$unsigned((8'ha8))) ?
                      reg84[(2'h3):(2'h3)] : ($unsigned(reg46) ?
                          (forvar64 ? reg63 : reg71) : (reg26 ?
                              reg47 : reg75)))));
            end
          for (forvar86 = (1'h0); (forvar86 < (3'h4)); forvar86 = (forvar86 + (1'h1)))
            begin
              reg87 = $unsigned((8'hb0));
              reg88 <= wire19[(2'h3):(2'h3)];
              reg89 <= ($unsigned((reg63[(4'hb):(3'h5)] ?
                  (!reg60[(2'h2):(2'h2)]) : ($unsigned((8'hba)) ?
                      reg23[(2'h3):(1'h0)] : (^~(8'ha5))))) ^~ $signed({{reg70},
                  reg79[(2'h3):(1'h1)]}));
              reg90 <= (((forvar64 ~^ $unsigned({reg23, forvar67})) ?
                  reg78 : ($signed(reg76[(3'h7):(3'h4)]) >> (~&(&reg82)))) >>> $signed(reg66[(2'h3):(1'h1)]));
              reg91 = ((!(+$unsigned(reg77[(3'h4):(1'h0)]))) & ({(8'ha9),
                  $signed((reg30 ? forvar59 : (8'hba)))} >= forvar64));
            end
        end
      for (forvar92 = (1'h0); (forvar92 < (2'h3)); forvar92 = (forvar92 + (1'h1)))
        begin
          for (forvar93 = (1'h0); (forvar93 < (2'h3)); forvar93 = (forvar93 + (1'h1)))
            begin
              reg94 <= ($unsigned(reg28[(3'h7):(3'h4)]) ?
                  $signed(wire17[(3'h4):(2'h3)]) : {((~|((7'h42) ?
                          reg40 : wire31)) >>> (~&(reg70 | reg65)))});
              reg95 <= ((((reg26[(2'h2):(2'h2)] >= $unsigned(forvar53)) ?
                      ((-reg68) ^ $signed(wire19)) : {$signed(reg80)}) ?
                  ((~|$unsigned(reg65)) || $unsigned($unsigned(reg44))) : {$signed(((8'hbe) ?
                          (8'hb9) : reg74)),
                      (~&$signed((8'haf)))}) + $signed((~|reg57)));
              reg96 <= ((wire19[(1'h1):(1'h0)] ?
                      ($signed(reg44) ?
                          ((|forvar86) ?
                              $signed(forvar67) : reg81[(3'h4):(2'h2)]) : $signed($unsigned(reg81))) : ($unsigned((!reg95)) ?
                          (~((8'haf) ^ forvar52)) : ((-reg60) >> (forvar84 ?
                              reg80 : wire31)))) ?
                  {$signed($unsigned((reg61 >> reg39))),
                      reg57} : $signed((~&{(~^forvar77),
                      reg39[(1'h0):(1'h0)]})));
              reg97 = (&forvar59[(3'h7):(3'h4)]);
            end
          for (forvar98 = (1'h0); (forvar98 < (2'h3)); forvar98 = (forvar98 + (1'h1)))
            begin
              reg99 <= $unsigned((((|reg95[(4'ha):(3'h6)]) ?
                  wire16 : reg75) & (!{reg23})));
              reg100 = ((^$signed(({reg63} || (8'ha0)))) ?
                  $unsigned(reg94[(3'h5):(2'h3)]) : wire20);
            end
        end
    end
  assign wire101 = ({(reg41[(1'h1):(1'h0)] << wire51)} ? (^reg41) : (8'ha8));
  assign wire102 = wire16[(4'ha):(3'h7)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module338
#(parameter param349 = (((-({(7'h41)} ? ((8'hba) ? (8'ha9) : (8'ha2)) : (8'ha4))) > ((~(^(8'hae))) ? (((8'ha0) && (8'ha9)) > ((8'h9e) ^ (8'ha3))) : {(-(7'h41)), (!(8'h9c))})) ? ((|(|{(8'hba), (8'hb8)})) > {((-(8'had)) ? ((8'hb6) ? (8'ha9) : (8'hbb)) : (^(8'hba)))}) : ({{((8'ha5) ~^ (7'h40))}} * ((^(|(8'ha3))) ? (^~(~&(8'hbe))) : (((8'haa) >> (8'h9c)) > ((8'hb4) ? (8'had) : (8'hb1)))))))
(y, clk, wire343, wire342, wire341, wire340, wire339);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire343;
  input wire signed [(4'h9):(1'h0)] wire342;
  input wire [(4'h8):(1'h0)] wire341;
  input wire [(5'h11):(1'h0)] wire340;
  input wire signed [(4'ha):(1'h0)] wire339;
  wire [(4'hb):(1'h0)] wire348;
  wire [(4'hf):(1'h0)] wire347;
  wire signed [(5'h14):(1'h0)] wire346;
  wire signed [(5'h14):(1'h0)] wire345;
  wire signed [(2'h2):(1'h0)] wire344;
  assign y = {wire348, wire347, wire346, wire345, wire344, (1'h0)};
  assign wire344 = ((~^(8'h9f)) ?
                       wire341 : (~&{(wire342[(2'h2):(2'h2)] ?
                               wire342 : wire341[(1'h0):(1'h0)]),
                           wire341}));
  assign wire345 = wire341;
  assign wire346 = $signed($unsigned($unsigned($unsigned(wire345))));
  assign wire347 = wire341;
  assign wire348 = (^~{(~^$signed((-wire339))), wire347[(4'he):(4'h8)]});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module256
#(parameter param317 = ((8'had) ? (~|(~^(&(~^(8'hbf))))) : {(8'haf), (((8'hae) * ((8'ha0) && (8'hb3))) ? (8'haa) : (~^(^~(7'h43))))}))
(y, clk, wire261, wire260, wire259, wire258, wire257);
  output wire [(32'h278):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'he):(1'h0)] wire261;
  input wire signed [(4'hc):(1'h0)] wire260;
  input wire signed [(5'h13):(1'h0)] wire259;
  input wire signed [(4'hb):(1'h0)] wire258;
  input wire signed [(2'h3):(1'h0)] wire257;
  wire signed [(4'h9):(1'h0)] wire316;
  wire signed [(5'h13):(1'h0)] wire315;
  wire [(5'h12):(1'h0)] wire314;
  wire signed [(5'h13):(1'h0)] wire313;
  wire signed [(4'hb):(1'h0)] wire312;
  wire [(2'h3):(1'h0)] wire302;
  wire [(4'ha):(1'h0)] wire273;
  wire [(3'h7):(1'h0)] wire272;
  wire [(4'hf):(1'h0)] wire271;
  wire [(2'h3):(1'h0)] wire270;
  wire signed [(4'hb):(1'h0)] wire269;
  wire signed [(3'h5):(1'h0)] wire267;
  wire [(5'h14):(1'h0)] wire266;
  wire signed [(4'hb):(1'h0)] wire265;
  wire signed [(4'hb):(1'h0)] wire264;
  wire signed [(4'h8):(1'h0)] wire262;
  reg [(5'h12):(1'h0)] reg307 = (1'h0);
  reg [(3'h4):(1'h0)] reg306 = (1'h0);
  reg [(5'h12):(1'h0)] reg301 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg300 = (1'h0);
  reg [(2'h3):(1'h0)] reg299 = (1'h0);
  reg [(3'h7):(1'h0)] reg298 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg295 = (1'h0);
  reg [(4'hc):(1'h0)] reg293 = (1'h0);
  reg [(4'h8):(1'h0)] reg291 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg288 = (1'h0);
  reg [(3'h7):(1'h0)] reg284 = (1'h0);
  reg [(5'h12):(1'h0)] reg282 = (1'h0);
  reg [(5'h11):(1'h0)] reg280 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg279 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg278 = (1'h0);
  reg [(3'h5):(1'h0)] reg277 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg263 = (1'h0);
  reg [(3'h7):(1'h0)] reg311 = (1'h0);
  reg [(5'h14):(1'h0)] reg310 = (1'h0);
  reg [(4'ha):(1'h0)] forvar309 = (1'h0);
  reg [(4'h9):(1'h0)] forvar308 = (1'h0);
  reg [(5'h12):(1'h0)] reg305 = (1'h0);
  reg [(4'hd):(1'h0)] forvar304 = (1'h0);
  reg [(4'hd):(1'h0)] forvar303 = (1'h0);
  reg [(4'h9):(1'h0)] reg297 = (1'h0);
  reg [(4'hd):(1'h0)] forvar296 = (1'h0);
  reg [(4'hc):(1'h0)] reg294 = (1'h0);
  reg [(3'h6):(1'h0)] forvar292 = (1'h0);
  reg [(4'h8):(1'h0)] forvar290 = (1'h0);
  reg [(3'h4):(1'h0)] reg289 = (1'h0);
  reg [(5'h12):(1'h0)] forvar287 = (1'h0);
  reg [(5'h15):(1'h0)] reg286 = (1'h0);
  reg [(3'h5):(1'h0)] reg285 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg283 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar281 = (1'h0);
  reg [(5'h12):(1'h0)] forvar276 = (1'h0);
  reg [(4'h8):(1'h0)] forvar275 = (1'h0);
  reg [(3'h6):(1'h0)] reg274 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg268 = (1'h0);
  assign y = {wire316,
                 wire315,
                 wire314,
                 wire313,
                 wire312,
                 wire302,
                 wire273,
                 wire272,
                 wire271,
                 wire270,
                 wire269,
                 wire267,
                 wire266,
                 wire265,
                 wire264,
                 wire262,
                 reg307,
                 reg306,
                 reg301,
                 reg300,
                 reg299,
                 reg298,
                 reg295,
                 reg293,
                 reg291,
                 reg288,
                 reg284,
                 reg282,
                 reg280,
                 reg279,
                 reg278,
                 reg277,
                 reg263,
                 reg311,
                 reg310,
                 forvar309,
                 forvar308,
                 reg305,
                 forvar304,
                 forvar303,
                 reg297,
                 forvar296,
                 reg294,
                 forvar292,
                 forvar290,
                 reg289,
                 forvar287,
                 reg286,
                 reg285,
                 reg283,
                 forvar281,
                 forvar276,
                 forvar275,
                 reg274,
                 reg268,
                 (1'h0)};
  assign wire262 = $signed((wire258[(3'h5):(2'h3)] ?
                       (~^$signed($unsigned(wire259))) : wire261[(2'h2):(2'h2)]));
  always
    @(posedge clk) begin
      reg263 <= {wire261};
    end
  assign wire264 = {(((&(wire260 - wire260)) >> {wire259}) ^ wire262)};
  assign wire265 = (^$signed({$signed(wire261[(4'ha):(4'h9)])}));
  assign wire266 = (wire259[(3'h6):(3'h5)] || $unsigned(wire261[(1'h1):(1'h1)]));
  assign wire267 = reg263;
  always
    @(posedge clk) begin
      reg268 = {{$signed(wire258),
              ((^~(wire264 ? wire259 : wire260)) ?
                  (~&wire260) : wire267[(2'h3):(1'h0)])}};
    end
  assign wire269 = wire265;
  assign wire270 = wire258;
  assign wire271 = (($unsigned(wire261[(3'h7):(2'h3)]) ?
                       wire265[(3'h4):(2'h2)] : ((|$unsigned(wire269)) + {$unsigned(wire269)})) <= {$unsigned($signed($unsigned(wire258))),
                       $unsigned(wire261[(2'h2):(2'h2)])});
  assign wire272 = $unsigned(wire267[(2'h3):(1'h0)]);
  assign wire273 = $unsigned(wire261);
  always
    @(posedge clk) begin
      reg274 = reg263[(4'h9):(2'h2)];
      for (forvar275 = (1'h0); (forvar275 < (1'h1)); forvar275 = (forvar275 + (1'h1)))
        begin
          for (forvar276 = (1'h0); (forvar276 < (1'h1)); forvar276 = (forvar276 + (1'h1)))
            begin
              reg277 <= reg263;
              reg278 <= $signed(($signed((8'hbc)) && wire272));
              reg279 <= $signed(wire271[(4'hb):(2'h3)]);
              reg280 <= (^~{{$signed($unsigned(wire273))}});
            end
          for (forvar281 = (1'h0); (forvar281 < (1'h1)); forvar281 = (forvar281 + (1'h1)))
            begin
              reg282 <= {$signed((8'hbe))};
              reg283 = $unsigned(({forvar276[(4'ha):(4'h9)]} >= (forvar275 ?
                  reg263 : $signed(wire270))));
              reg284 <= {(wire269 << $signed(reg280[(4'he):(4'h9)])),
                  (~&(|$unsigned((wire273 ? wire272 : forvar275))))};
              reg285 = (^~$unsigned(($unsigned($unsigned(forvar281)) - ($signed(wire273) >= wire267[(1'h0):(1'h0)]))));
              reg286 = $signed((((~wire272) ?
                      reg277[(1'h0):(1'h0)] : $signed($unsigned(wire267))) ?
                  wire259[(3'h4):(1'h0)] : $unsigned({forvar281,
                      (wire259 * wire271)})));
            end
          for (forvar287 = (1'h0); (forvar287 < (1'h0)); forvar287 = (forvar287 + (1'h1)))
            begin
              reg288 <= (forvar287 * $unsigned(((~|wire270) ?
                  (~$signed(reg286)) : ((wire264 <<< wire267) ?
                      (wire265 * forvar276) : {wire271}))));
              reg289 = (((7'h44) && reg284[(2'h2):(2'h2)]) << (8'hbe));
            end
        end
      for (forvar290 = (1'h0); (forvar290 < (1'h1)); forvar290 = (forvar290 + (1'h1)))
        begin
          reg291 <= ((8'ha3) ^~ (wire269[(3'h5):(1'h0)] & $signed(((reg280 * wire261) ~^ (wire259 * reg280)))));
          for (forvar292 = (1'h0); (forvar292 < (1'h1)); forvar292 = (forvar292 + (1'h1)))
            begin
              reg293 <= {($unsigned({reg279[(4'he):(4'h9)], wire261}) ?
                      $unsigned(wire259[(4'ha):(3'h5)]) : {{{wire257}}}),
                  {wire270, (~|{wire260, wire269})}};
              reg294 = $unsigned({reg274});
              reg295 <= ((~|wire266[(4'hb):(2'h3)]) ^ $signed(($unsigned((8'hb6)) >= $unsigned($signed(wire266)))));
            end
          for (forvar296 = (1'h0); (forvar296 < (1'h0)); forvar296 = (forvar296 + (1'h1)))
            begin
              reg297 = (($signed((~$unsigned(reg278))) ?
                  ((reg279[(5'h11):(4'hd)] ?
                      wire270[(2'h3):(2'h2)] : (reg280 >>> (8'hbd))) ^~ (|(reg280 ?
                      (7'h43) : (8'hb9)))) : $unsigned(reg263[(1'h0):(1'h0)])) < forvar276);
              reg298 <= (wire271 ~^ $signed((($unsigned(wire272) & (~&forvar275)) ^ forvar292)));
              reg299 <= reg280;
              reg300 <= wire262[(4'h8):(3'h7)];
              reg301 <= reg289[(2'h2):(1'h0)];
            end
        end
    end
  assign wire302 = $unsigned(((~&wire262[(2'h3):(2'h3)]) ?
                       wire269 : (((8'hb4) ^~ reg282[(4'hf):(4'h8)]) ?
                           $unsigned($signed(wire271)) : ((reg279 ?
                                   wire257 : (7'h44)) ?
                               reg277 : (wire261 ? wire271 : (8'ha9))))));
  always
    @(posedge clk) begin
      for (forvar303 = (1'h0); (forvar303 < (2'h3)); forvar303 = (forvar303 + (1'h1)))
        begin
          for (forvar304 = (1'h0); (forvar304 < (2'h3)); forvar304 = (forvar304 + (1'h1)))
            begin
              reg305 = {(wire265 * $signed($unsigned(wire269[(3'h4):(1'h0)])))};
              reg306 <= reg278;
              reg307 <= (+(|reg301));
            end
        end
      for (forvar308 = (1'h0); (forvar308 < (2'h3)); forvar308 = (forvar308 + (1'h1)))
        begin
          for (forvar309 = (1'h0); (forvar309 < (2'h2)); forvar309 = (forvar309 + (1'h1)))
            begin
              reg310 = $unsigned((({(~^wire260)} ?
                      ((wire260 * wire265) ?
                          {wire267, wire273} : (-(7'h44))) : $unsigned((reg298 ?
                          reg282 : forvar304))) ?
                  {forvar303} : $unsigned(wire261[(4'hb):(3'h7)])));
              reg311 = {reg280};
            end
        end
    end
  assign wire312 = $unsigned($unsigned($unsigned($signed($unsigned(wire271)))));
  assign wire313 = {(8'ha8)};
  assign wire314 = (8'ha7);
  assign wire315 = $unsigned((($unsigned((wire312 ?
                       wire264 : reg298)) << {(reg288 != wire273),
                       $signed(wire258)}) ^~ reg301));
  assign wire316 = ($unsigned(wire259[(4'he):(4'hb)]) ?
                       reg279 : (wire312 || {(~&$signed(wire302))}));
endmodule