(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param26 = (&(^(&(~^(8'hae))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h27):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire25;
  wire signed [(3'h7):(1'h0)] wire24;
  wire signed [(3'h6):(1'h0)] wire23;
  wire [(3'h7):(1'h0)] wire22;
  wire signed [(3'h5):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire20;
  wire [(2'h3):(1'h0)] wire18;
  assign y = {wire25, wire24, wire23, wire22, wire21, wire20, wire18, (1'h0)};
  module4 #() modinst19 (wire18, clk, wire3, wire2, wire1, wire0);
  assign wire20 = wire0[(3'h4):(1'h0)];
  assign wire21 = wire2;
  assign wire22 = (~^((~(&wire1)) >= (+(wire2 ? wire0 : wire20))));
  assign wire23 = ($signed((wire0[(3'h4):(2'h3)] << (wire1 ?
                      wire1 : wire22))) >> (~{(wire20 ? wire21 : wire0)}));
  assign wire24 = (~wire20[(1'h0):(1'h0)]);
  assign wire25 = ($unsigned($signed(wire3)) ?
                      ($unsigned(wire23[(1'h1):(1'h0)]) ^~ wire24[(3'h6):(2'h3)]) : wire22[(2'h2):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h3c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire8;
  input wire signed [(3'h4):(1'h0)] wire7;
  input wire signed [(3'h4):(1'h0)] wire6;
  input wire signed [(3'h6):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire17;
  wire signed [(2'h3):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire9;
  reg [(2'h3):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg14 = (1'h0);
  reg [(2'h3):(1'h0)] reg13 = (1'h0);
  reg [(2'h2):(1'h0)] reg12 = (1'h0);
  reg [(4'ha):(1'h0)] reg11 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg10 = (1'h0);
  assign y = {wire17,
                 wire16,
                 wire9,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 (1'h0)};
  assign wire9 = (~|(^~$signed((!wire7))));
  always
    @(posedge clk) begin
      if (wire9[(4'h8):(3'h7)])
        begin
          reg10 <= (((wire5 ? (wire5 ? (8'ha0) : wire5) : (^wire9)) ?
              (((8'ha1) >>> wire5) == (~wire6)) : $signed((~^wire5))) && {wire9[(3'h6):(3'h6)]});
          if (wire8[(1'h0):(1'h0)])
            begin
              reg11 <= ($unsigned(reg10) < wire8[(3'h6):(3'h5)]);
              reg12 <= {({$unsigned((8'h9e))} ?
                      ((reg10 != reg11) && reg10) : wire8[(4'h9):(2'h3)])};
              reg13 <= $unsigned(wire6[(2'h3):(2'h3)]);
            end
          else
            begin
              reg11 <= $unsigned($unsigned($signed(wire8[(4'ha):(1'h0)])));
              reg12 <= $signed(($unsigned($signed(wire9)) - (^~{wire9})));
              reg13 <= (reg13 ? wire5[(3'h5):(2'h3)] : reg10[(3'h7):(3'h7)]);
            end
          reg14 <= (8'ha7);
        end
      else
        begin
          if ((wire7 != wire5[(1'h0):(1'h0)]))
            begin
              reg10 <= ((^(^~$unsigned((8'h9d)))) <= wire9);
            end
          else
            begin
              reg10 <= (wire8[(4'h8):(2'h2)] << {wire6});
              reg11 <= reg11[(4'h8):(1'h0)];
              reg12 <= reg12;
            end
        end
      reg15 <= $unsigned(wire7);
    end
  assign wire16 = (reg14 ? (^~(8'h9d)) : $signed((|reg10[(3'h4):(2'h3)])));
  assign wire17 = ({reg15[(2'h2):(1'h1)]} <= $signed((~&$unsigned(wire6))));
endmodule