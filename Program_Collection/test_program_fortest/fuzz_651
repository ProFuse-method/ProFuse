(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param88 = (({((8'hae) >>> (8'hae))} ~^ ((!(8'h9d)) ^ ((8'ha3) ? (8'haa) : (8'ha1)))) ? ((((8'ha0) > (8'h9d)) ? ((8'haf) >> (8'h9d)) : ((8'ha5) ? (8'h9e) : (8'ha4))) ? (^((8'ha5) & (8'ha9))) : (((8'hab) >> (8'ha7)) > ((8'ha8) ? (8'ha0) : (8'ha9)))) : (~(((8'hac) ? (8'h9c) : (8'ha7)) ? (8'h9f) : (~&(8'haa))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire0;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire3;
  wire signed [(4'h9):(1'h0)] wire87;
  wire signed [(2'h2):(1'h0)] wire79;
  wire signed [(2'h2):(1'h0)] wire78;
  wire [(4'ha):(1'h0)] wire77;
  wire signed [(3'h7):(1'h0)] wire76;
  wire [(4'ha):(1'h0)] wire75;
  wire signed [(4'h8):(1'h0)] wire4;
  wire [(3'h4):(1'h0)] wire7;
  wire signed [(4'ha):(1'h0)] wire73;
  reg [(4'h9):(1'h0)] reg86 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg85 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg84 = (1'h0);
  reg [(3'h5):(1'h0)] reg83 = (1'h0);
  reg [(2'h2):(1'h0)] reg82 = (1'h0);
  reg [(2'h3):(1'h0)] reg81 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg80 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg5 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg6 = (1'h0);
  assign y = {wire87,
                 wire79,
                 wire78,
                 wire77,
                 wire76,
                 wire75,
                 wire4,
                 wire7,
                 wire73,
                 reg86,
                 reg85,
                 reg84,
                 reg83,
                 reg82,
                 reg81,
                 reg80,
                 reg5,
                 reg6,
                 (1'h0)};
  assign wire4 = (8'h9e);
  always
    @(posedge clk) begin
      reg5 <= ($signed(wire2[(2'h3):(1'h0)]) || $unsigned(wire1));
    end
  always
    @(posedge clk) begin
      reg6 <= wire0[(1'h0):(1'h0)];
    end
  assign wire7 = wire3[(4'h8):(3'h7)];
  module8 #() modinst74 (wire73, clk, wire0, reg6, wire2, wire4);
  assign wire75 = reg5;
  assign wire76 = {(({wire0} ?
                          (wire7 ?
                              (8'hb0) : wire0) : (+wire3)) <<< ($unsigned(wire3) & wire2[(2'h3):(1'h1)]))};
  assign wire77 = $signed(wire0[(3'h5):(2'h3)]);
  assign wire78 = wire3;
  assign wire79 = $signed(((wire78[(1'h0):(1'h0)] ?
                          {reg5} : wire7[(1'h1):(1'h0)]) ?
                      (!$unsigned(wire2)) : {(wire0 && (8'ha6))}));
  always
    @(posedge clk) begin
      reg80 <= (~^(+wire2[(2'h2):(1'h1)]));
      reg81 <= $signed((8'ha8));
      if (($unsigned((~^(reg81 ~^ (8'haa)))) ?
          (8'ha6) : {{(reg80 ? wire3 : wire0)}}))
        begin
          reg82 <= {$signed((~reg81))};
        end
      else
        begin
          if ((8'h9d))
            begin
              reg82 <= (^~wire77[(3'h5):(1'h1)]);
              reg83 <= $signed(reg80);
            end
          else
            begin
              reg82 <= {reg82[(1'h0):(1'h0)]};
            end
        end
    end
  always
    @(posedge clk) begin
      reg84 <= reg81;
      reg85 <= wire7;
      reg86 <= $signed($unsigned((wire2[(2'h3):(1'h0)] ?
          $signed(wire3) : wire3[(2'h2):(1'h1)])));
    end
  assign wire87 = wire77[(2'h2):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param72 = (^((((8'had) < (8'hae)) + ((8'haf) ? (8'ha5) : (8'hab))) == ((!(8'hb0)) ? (8'ha8) : ((8'ha3) ? (8'hac) : (8'hae))))))
(y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h8c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire12;
  input wire signed [(3'h4):(1'h0)] wire11;
  input wire signed [(2'h2):(1'h0)] wire10;
  input wire signed [(3'h5):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire70;
  wire signed [(4'hb):(1'h0)] wire53;
  wire [(4'ha):(1'h0)] wire52;
  wire [(3'h4):(1'h0)] wire51;
  wire signed [(2'h3):(1'h0)] wire40;
  wire [(4'ha):(1'h0)] wire17;
  wire signed [(4'hb):(1'h0)] wire16;
  wire [(4'h8):(1'h0)] wire15;
  wire signed [(4'hb):(1'h0)] wire14;
  wire signed [(4'hb):(1'h0)] wire13;
  reg signed [(3'h4):(1'h0)] reg50 = (1'h0);
  reg [(4'h8):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg47 = (1'h0);
  reg [(3'h6):(1'h0)] reg46 = (1'h0);
  reg [(3'h4):(1'h0)] reg45 = (1'h0);
  reg [(4'ha):(1'h0)] reg44 = (1'h0);
  reg [(2'h3):(1'h0)] reg43 = (1'h0);
  reg [(3'h6):(1'h0)] reg42 = (1'h0);
  assign y = {wire70,
                 wire53,
                 wire52,
                 wire51,
                 wire40,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 (1'h0)};
  assign wire13 = wire11;
  assign wire14 = (^wire13);
  assign wire15 = $unsigned((($unsigned(wire11) ~^ (wire13 ? wire9 : wire12)) ?
                      ($unsigned(wire11) || {(8'ha1)}) : (~|wire11[(2'h2):(1'h1)])));
  assign wire16 = $unsigned((wire14[(4'h8):(4'h8)] ?
                      wire14[(3'h6):(3'h6)] : ((wire10 & wire10) && $signed(wire15))));
  assign wire17 = (~|(wire13 ? $signed(wire9[(2'h3):(1'h0)]) : (^~wire10)));
  module18 #() modinst41 (.y(wire40), .wire19(wire17), .clk(clk), .wire20(wire14), .wire21(wire12), .wire22(wire13));
  always
    @(posedge clk) begin
      if ($signed(($unsigned($signed(wire15)) & ((wire12 > (8'had)) & $signed(wire11)))))
        begin
          reg42 <= (($unsigned(wire16[(3'h6):(3'h4)]) >>> (&{wire17})) ?
              $signed((^~(~|wire10))) : {(|(wire12 == wire15))});
        end
      else
        begin
          reg42 <= ({(8'ha5)} ?
              wire13[(3'h6):(1'h0)] : $signed($unsigned($unsigned((8'ha6)))));
        end
      if (wire15[(3'h7):(3'h4)])
        begin
          reg43 <= wire15[(1'h0):(1'h0)];
          if (($unsigned(((wire40 || wire12) == $unsigned(wire9))) > (8'ha2)))
            begin
              reg44 <= (^wire13);
              reg45 <= wire40[(1'h0):(1'h0)];
              reg46 <= wire12[(3'h5):(3'h5)];
            end
          else
            begin
              reg44 <= $unsigned((wire40 ?
                  ($unsigned(wire12) ?
                      reg43 : $unsigned(wire11)) : wire16[(4'h8):(3'h6)]));
              reg45 <= (~&wire17);
              reg46 <= (wire15[(1'h0):(1'h0)] < $unsigned(({(8'hb0)} >> (~|(8'ha5)))));
            end
          if ($unsigned($signed(((reg46 & reg46) ?
              $unsigned(wire9) : reg46[(1'h0):(1'h0)]))))
            begin
              reg47 <= $unsigned((~|($signed(wire17) ?
                  (reg42 ? (8'ha5) : wire15) : {wire11})));
              reg48 <= $unsigned(wire11[(3'h4):(2'h2)]);
              reg49 <= reg42;
            end
          else
            begin
              reg47 <= {(8'ha8)};
              reg48 <= reg49;
              reg49 <= wire15[(3'h6):(1'h1)];
            end
        end
      else
        begin
          reg43 <= $signed($signed((-(reg42 >> wire16))));
          reg44 <= $unsigned($unsigned(($signed((8'ha7)) || (reg47 >>> reg43))));
        end
      reg50 <= $signed((wire13[(4'hb):(3'h4)] ?
          (^~$signed(reg47)) : ((^~wire14) != {wire16})));
    end
  assign wire51 = reg48;
  assign wire52 = (8'ha8);
  assign wire53 = {$signed(reg48)};
  module54 #() modinst71 (.wire56(wire53), .wire58(reg43), .y(wire70), .wire57(reg49), .wire55(wire16), .clk(clk));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module54  (y, clk, wire58, wire57, wire56, wire55);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire58;
  input wire signed [(2'h2):(1'h0)] wire57;
  input wire [(4'hb):(1'h0)] wire56;
  input wire [(2'h2):(1'h0)] wire55;
  wire [(4'h9):(1'h0)] wire69;
  wire [(4'h8):(1'h0)] wire68;
  wire [(4'h8):(1'h0)] wire63;
  wire [(3'h4):(1'h0)] wire59;
  reg signed [(3'h6):(1'h0)] reg67 = (1'h0);
  reg [(3'h4):(1'h0)] reg66 = (1'h0);
  reg [(2'h3):(1'h0)] reg65 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg64 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg62 = (1'h0);
  reg [(4'h8):(1'h0)] reg61 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg60 = (1'h0);
  assign y = {wire69,
                 wire68,
                 wire63,
                 wire59,
                 reg67,
                 reg66,
                 reg65,
                 reg64,
                 reg62,
                 reg61,
                 reg60,
                 (1'h0)};
  assign wire59 = {(&$unsigned(wire58))};
  always
    @(posedge clk) begin
      reg60 <= (wire57[(1'h1):(1'h1)] ?
          $signed((~^(wire57 && wire57))) : {{$signed(wire56)}});
      reg61 <= ($signed($signed(wire55)) >> reg60);
      reg62 <= (~^(~wire56[(1'h0):(1'h0)]));
    end
  assign wire63 = ((-$unsigned($signed(wire58))) ?
                      wire58[(1'h0):(1'h0)] : $unsigned($unsigned((~wire59))));
  always
    @(posedge clk) begin
      if ((((~|reg62) != wire58[(1'h1):(1'h1)]) ?
          {((wire59 << reg60) ?
                  (reg62 ?
                      (8'h9f) : wire63) : (~wire56))} : ($signed($signed(wire56)) ?
              (-(reg60 & wire58)) : {(reg62 ~^ wire59)})))
        begin
          reg64 <= wire57[(1'h1):(1'h1)];
          reg65 <= {{reg60[(1'h0):(1'h0)]}};
          if (reg64)
            begin
              reg66 <= $signed(((!$unsigned(wire63)) ?
                  (((8'haf) ? reg60 : (8'ha0)) | (reg65 ?
                      wire58 : reg60)) : {(|wire57)}));
              reg67 <= (~^($signed($unsigned(reg66)) ?
                  $unsigned($signed(wire63)) : $unsigned(wire56[(2'h3):(2'h3)])));
            end
          else
            begin
              reg66 <= $unsigned($unsigned((reg65[(1'h1):(1'h1)] ?
                  (reg60 ? reg61 : reg65) : $signed(reg65))));
            end
        end
      else
        begin
          reg64 <= wire59;
          if ($signed((~|$unsigned({reg61}))))
            begin
              reg65 <= ($unsigned($signed(reg64)) & (~^wire56));
              reg66 <= reg60[(2'h3):(1'h1)];
            end
          else
            begin
              reg65 <= (+wire56);
            end
          reg67 <= reg65;
        end
    end
  assign wire68 = (reg64 ~^ wire56[(4'h9):(3'h7)]);
  assign wire69 = (((reg65 != reg62) ?
                      (+reg62[(2'h3):(2'h2)]) : (~|wire57[(1'h0):(1'h0)])) ^~ ((reg61 ?
                          wire56[(2'h2):(1'h0)] : (wire59 ? (8'hac) : reg62)) ?
                      (((8'haa) ?
                          reg65 : wire68) & (reg64 || reg61)) : $unsigned(reg64)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18  (y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h6e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire22;
  input wire signed [(3'h6):(1'h0)] wire21;
  input wire signed [(2'h3):(1'h0)] wire20;
  input wire signed [(3'h4):(1'h0)] wire19;
  wire [(4'ha):(1'h0)] wire31;
  wire signed [(4'h9):(1'h0)] wire30;
  wire signed [(4'hb):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire27;
  wire [(3'h4):(1'h0)] wire26;
  wire [(2'h3):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  reg signed [(3'h6):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg37 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg36 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg35 = (1'h0);
  reg [(2'h2):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg33 = (1'h0);
  reg [(2'h3):(1'h0)] reg32 = (1'h0);
  assign y = {wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 (1'h0)};
  assign wire23 = $unsigned(wire22);
  assign wire24 = ((($unsigned(wire23) > (wire20 | wire20)) ?
                      wire19[(2'h2):(2'h2)] : (+wire19)) <<< (((wire20 || (8'haa)) & wire21) == (~&$unsigned(wire19))));
  assign wire25 = (wire21 <= wire22[(3'h6):(3'h5)]);
  assign wire26 = $signed($signed({wire22[(1'h1):(1'h1)]}));
  assign wire27 = wire22[(3'h6):(2'h2)];
  assign wire28 = $signed($signed(($unsigned(wire25) >> $unsigned(wire27))));
  assign wire29 = wire20;
  assign wire30 = (wire19[(2'h3):(2'h2)] ?
                      $unsigned(wire29[(1'h0):(1'h0)]) : {$signed(wire23)});
  assign wire31 = $unsigned(wire30);
  always
    @(posedge clk) begin
      if ((8'h9f))
        begin
          if ((-$unsigned((8'h9f))))
            begin
              reg32 <= $signed((8'ha3));
            end
          else
            begin
              reg32 <= ((((!(8'hae)) ~^ $unsigned(wire30)) ?
                  ($signed(reg32) ?
                      $signed(wire21) : (wire26 <<< wire20)) : wire22[(3'h7):(1'h0)]) ^~ wire20[(1'h0):(1'h0)]);
              reg33 <= reg32;
            end
        end
      else
        begin
          reg32 <= ($signed($unsigned($unsigned(wire24))) ?
              {(&(wire20 & wire28))} : ($unsigned(wire24[(4'h8):(3'h6)]) + wire19));
          reg33 <= wire29;
          if ((reg33[(2'h3):(2'h2)] > wire27[(3'h5):(3'h4)]))
            begin
              reg34 <= reg33[(3'h4):(1'h1)];
              reg35 <= ({({wire20} ? (~&wire21) : $signed((8'ha0)))} ?
                  ($signed((wire28 ?
                      wire21 : wire20)) <<< (wire24[(1'h0):(1'h0)] & $unsigned(wire25))) : reg34);
              reg36 <= (!($signed($signed(reg32)) >>> ((reg32 ?
                      reg32 : wire26) ?
                  $signed(reg32) : ((8'ha2) != wire21))));
            end
          else
            begin
              reg34 <= ((^({wire23} ?
                  wire29 : wire27)) >>> $unsigned(wire25[(2'h2):(2'h2)]));
              reg35 <= (wire31 > wire30[(3'h6):(1'h0)]);
              reg36 <= $unsigned((~^((wire19 && wire19) || $unsigned(wire30))));
            end
        end
      reg37 <= wire29;
    end
  always
    @(posedge clk) begin
      reg38 <= wire25[(1'h0):(1'h0)];
      reg39 <= (~|wire23);
    end
endmodule