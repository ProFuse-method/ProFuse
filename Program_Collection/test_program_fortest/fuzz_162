(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param51 = (!(~^(+{(8'had)}))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire0;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire3;
  wire [(3'h5):(1'h0)] wire4;
  wire signed [(4'ha):(1'h0)] wire42;
  wire [(4'hb):(1'h0)] wire45;
  wire [(4'ha):(1'h0)] wire46;
  wire [(3'h6):(1'h0)] wire47;
  wire [(2'h2):(1'h0)] wire48;
  wire signed [(2'h2):(1'h0)] wire49;
  reg signed [(3'h5):(1'h0)] reg44 = (1'h0);
  assign y = {wire4,
                 wire42,
                 wire45,
                 wire46,
                 wire47,
                 wire48,
                 wire49,
                 reg44,
                 (1'h0)};
  assign wire4 = (~|($signed((wire0 ? wire2 : wire1)) ~^ $unsigned({(8'ha6)})));
  module5 #() modinst43 (.wire6(wire0), .wire8(wire1), .clk(clk), .y(wire42), .wire7(wire2), .wire9(wire4));
  always
    @(posedge clk) begin
      reg44 <= wire0[(1'h1):(1'h1)];
    end
  assign wire45 = ($unsigned(wire2) ?
                      ((^wire2) ?
                          $unsigned($unsigned((8'ha1))) : wire0[(2'h3):(2'h3)]) : wire4);
  assign wire46 = ($signed((wire0 >> (-wire3))) + (^~(~^(|wire1))));
  assign wire47 = ((wire46[(2'h2):(1'h0)] ^~ $signed((wire1 ?
                          wire2 : wire46))) ?
                      (&wire1) : reg44);
  assign wire48 = $signed($unsigned($unsigned((wire0 << wire1))));
  module17 #() modinst50 (.wire19(wire1), .wire20(wire46), .wire21(reg44), .clk(clk), .y(wire49), .wire18(wire42));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param41 = (((((8'h9f) ? (8'ha2) : (8'hb0)) & ((8'ha2) ? (8'had) : (8'haf))) ? {((8'ha1) ? (8'haf) : (8'hac))} : (((8'ha2) ? (8'ha4) : (8'ha1)) << {(8'hab)})) | ((&((8'ha4) >>> (8'haf))) | ((~&(8'h9f)) ? ((8'ha8) ? (8'ha6) : (8'ha5)) : {(8'ha1)}))))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h68):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire9;
  input wire [(3'h7):(1'h0)] wire8;
  input wire [(3'h5):(1'h0)] wire7;
  input wire signed [(2'h2):(1'h0)] wire6;
  wire [(2'h3):(1'h0)] wire40;
  wire signed [(4'h9):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire38;
  wire [(4'h8):(1'h0)] wire37;
  wire [(3'h7):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire34;
  wire [(4'ha):(1'h0)] wire16;
  wire signed [(4'ha):(1'h0)] wire15;
  wire [(2'h2):(1'h0)] wire14;
  wire [(4'ha):(1'h0)] wire13;
  wire [(4'ha):(1'h0)] wire12;
  reg [(4'hb):(1'h0)] reg11 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg10 = (1'h0);
  assign y = {wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire34,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 reg11,
                 reg10,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg10 <= (!{wire8});
      if ((&((wire8[(2'h3):(2'h3)] ? (wire9 == wire7) : wire7[(2'h2):(2'h2)]) ?
          $signed(reg10) : reg10[(3'h5):(2'h3)])))
        begin
          reg11 <= (~$unsigned(wire6[(1'h0):(1'h0)]));
        end
      else
        begin
          reg11 <= $unsigned(wire6);
        end
    end
  assign wire12 = reg10;
  assign wire13 = (({$signed(wire8)} ?
                      $signed((|wire9)) : $unsigned((+wire12))) - (|(reg10 ?
                      {(8'had)} : $unsigned(wire7))));
  assign wire14 = ($signed(((wire9 ? reg10 : reg11) - (+wire8))) == wire13);
  assign wire15 = reg11[(2'h3):(1'h1)];
  assign wire16 = wire14;
  module17 #() modinst35 (wire34, clk, wire6, wire15, wire8, wire16);
  assign wire36 = wire6[(1'h0):(1'h0)];
  assign wire37 = {$unsigned((|reg11))};
  assign wire38 = {{$signed(reg11)}};
  assign wire39 = wire14;
  assign wire40 = wire6[(1'h1):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17
#(parameter param33 = (((((8'hac) ? (8'ha5) : (8'hab)) == ((8'ha5) << (8'ha0))) <= ((~^(8'ha4)) & ((8'ha7) ? (8'had) : (8'h9c)))) ^ {(~|((8'h9e) ? (8'haa) : (8'h9d)))}))
(y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire21;
  input wire [(4'ha):(1'h0)] wire20;
  input wire signed [(3'h5):(1'h0)] wire19;
  input wire signed [(4'ha):(1'h0)] wire18;
  wire [(3'h7):(1'h0)] wire32;
  wire [(4'hb):(1'h0)] wire31;
  wire [(2'h2):(1'h0)] wire23;
  wire signed [(3'h4):(1'h0)] wire22;
  reg signed [(3'h6):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg29 = (1'h0);
  reg [(4'ha):(1'h0)] reg28 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg27 = (1'h0);
  reg [(4'ha):(1'h0)] reg26 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg25 = (1'h0);
  reg [(4'h9):(1'h0)] reg24 = (1'h0);
  assign y = {wire32,
                 wire31,
                 wire23,
                 wire22,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 (1'h0)};
  assign wire22 = $unsigned(wire21);
  assign wire23 = wire21;
  always
    @(posedge clk) begin
      if (wire20[(2'h2):(1'h1)])
        begin
          reg24 <= ($signed($signed(wire22[(3'h4):(1'h0)])) ?
              wire22[(3'h4):(1'h1)] : $unsigned(($signed(wire22) ?
                  (wire22 ? wire21 : wire21) : (wire20 || (8'h9d)))));
          reg25 <= ((~^$unsigned({wire21})) && $signed(((-wire20) ?
              (wire18 ? wire22 : reg24) : {(8'hac)})));
          reg26 <= $unsigned((wire18 ?
              reg24 : (((8'ha8) ? wire22 : reg25) ? wire19 : $signed(wire21))));
        end
      else
        begin
          reg24 <= $unsigned(($signed(wire21[(2'h2):(2'h2)]) ?
              wire23[(2'h2):(1'h0)] : ((reg24 ^~ wire21) ?
                  wire22[(2'h2):(2'h2)] : $unsigned(reg26))));
          if (reg26[(4'ha):(4'h8)])
            begin
              reg25 <= $unsigned($unsigned($signed((8'hab))));
              reg26 <= $unsigned(wire23);
              reg27 <= (~&$unsigned($signed({wire20})));
            end
          else
            begin
              reg25 <= reg24[(2'h2):(2'h2)];
              reg26 <= $unsigned((wire23 ?
                  wire18 : ($unsigned(wire19) <<< {reg27})));
            end
        end
      reg28 <= $signed($signed((reg27 > wire18)));
    end
  always
    @(posedge clk) begin
      reg29 <= reg24[(1'h0):(1'h0)];
      reg30 <= ($unsigned((8'ha3)) > $unsigned(wire22[(1'h1):(1'h1)]));
    end
  assign wire31 = wire19;
  assign wire32 = {$signed((+wire23))};
endmodule