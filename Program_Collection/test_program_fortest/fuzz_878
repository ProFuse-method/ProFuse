(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param77 = (~^({({(8'hb7), (7'h42)} ? ((8'ha8) ? (7'h40) : (8'h9f)) : (|(8'ha8))), ((~(8'ha2)) != ((8'hab) | (8'h9d)))} ? (+(|(-(8'ha8)))) : ({((8'haf) ~^ (7'h41)), (^~(8'hb0))} ? (((8'haa) > (8'hbb)) ? ((8'hb7) >>> (7'h42)) : ((7'h42) ? (8'ha5) : (8'h9c))) : (&(~&(8'hbf)))))))
(y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h1fe):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hf):(1'h0)] wire4;
  input wire signed [(5'h14):(1'h0)] wire3;
  input wire [(5'h15):(1'h0)] wire2;
  input wire signed [(5'h11):(1'h0)] wire1;
  input wire [(5'h14):(1'h0)] wire0;
  wire [(5'h12):(1'h0)] wire76;
  wire [(5'h15):(1'h0)] wire75;
  wire [(4'hb):(1'h0)] wire74;
  wire signed [(5'h13):(1'h0)] wire72;
  wire [(4'hf):(1'h0)] wire44;
  wire signed [(2'h3):(1'h0)] wire43;
  wire signed [(5'h11):(1'h0)] wire42;
  reg [(5'h13):(1'h0)] reg6 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg9 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg11 = (1'h0);
  reg [(4'hc):(1'h0)] reg12 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg17 = (1'h0);
  reg signed [(4'he):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg19 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg [(4'hd):(1'h0)] reg24 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg26 = (1'h0);
  reg [(4'he):(1'h0)] reg27 = (1'h0);
  reg [(3'h4):(1'h0)] reg31 = (1'h0);
  reg [(5'h11):(1'h0)] reg32 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg33 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg37 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg38 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg40 = (1'h0);
  reg [(4'h8):(1'h0)] reg41 = (1'h0);
  reg [(3'h4):(1'h0)] reg29 = (1'h0);
  reg [(4'hc):(1'h0)] forvar39 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg36 = (1'h0);
  reg [(3'h4):(1'h0)] forvar34 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg30 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar29 = (1'h0);
  reg [(3'h6):(1'h0)] reg28 = (1'h0);
  reg [(2'h2):(1'h0)] forvar25 = (1'h0);
  reg signed [(4'he):(1'h0)] reg22 = (1'h0);
  reg signed [(4'he):(1'h0)] reg21 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar20 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar14 = (1'h0);
  reg [(4'he):(1'h0)] forvar13 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg10 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar8 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar7 = (1'h0);
  reg [(4'hf):(1'h0)] reg5 = (1'h0);
  assign y = {wire76,
                 wire75,
                 wire74,
                 wire72,
                 wire44,
                 wire43,
                 wire42,
                 reg6,
                 reg9,
                 reg11,
                 reg12,
                 reg15,
                 reg16,
                 reg17,
                 reg18,
                 reg19,
                 reg23,
                 reg24,
                 reg26,
                 reg27,
                 reg31,
                 reg32,
                 reg33,
                 reg35,
                 reg37,
                 reg38,
                 reg40,
                 reg41,
                 reg29,
                 forvar39,
                 reg36,
                 forvar34,
                 reg30,
                 forvar29,
                 reg28,
                 forvar25,
                 reg22,
                 reg21,
                 forvar20,
                 forvar14,
                 forvar13,
                 reg10,
                 forvar8,
                 forvar7,
                 reg5,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg5 = $signed(wire0);
      reg6 <= ($unsigned($unsigned((wire3 >>> wire2[(3'h5):(2'h3)]))) < $unsigned(wire2));
      for (forvar7 = (1'h0); (forvar7 < (1'h1)); forvar7 = (forvar7 + (1'h1)))
        begin
          for (forvar8 = (1'h0); (forvar8 < (3'h4)); forvar8 = (forvar8 + (1'h1)))
            begin
              reg9 <= wire2[(5'h13):(3'h7)];
              reg10 = wire1[(1'h1):(1'h1)];
              reg11 <= ((forvar8 == $signed(($unsigned(reg6) ?
                      $signed(wire2) : reg5))) ?
                  (~^(&(^~wire4[(4'h8):(4'h8)]))) : $unsigned(wire0));
              reg12 <= (|{(&(|((7'h44) + forvar8)))});
            end
        end
      for (forvar13 = (1'h0); (forvar13 < (2'h2)); forvar13 = (forvar13 + (1'h1)))
        begin
          for (forvar14 = (1'h0); (forvar14 < (2'h3)); forvar14 = (forvar14 + (1'h1)))
            begin
              reg15 <= ({forvar13} ^~ wire2[(5'h15):(4'ha)]);
              reg16 <= (!{(reg10 ?
                      ((forvar14 ? reg5 : reg15) ?
                          (reg15 - forvar8) : $unsigned(wire0)) : $unsigned((-forvar14)))});
              reg17 <= (((-$signed(wire1[(1'h1):(1'h0)])) | $unsigned($signed((+wire2)))) ?
                  (-$unsigned({$unsigned(forvar8),
                      (!wire1)})) : $signed(wire2[(5'h12):(3'h4)]));
              reg18 <= $signed(reg5[(4'hd):(3'h6)]);
              reg19 <= forvar8[(4'hb):(3'h7)];
            end
          for (forvar20 = (1'h0); (forvar20 < (2'h2)); forvar20 = (forvar20 + (1'h1)))
            begin
              reg21 = $unsigned($unsigned((!reg10[(3'h4):(1'h1)])));
              reg22 = ((~(&((+(8'hb7)) ?
                      reg10[(4'h8):(3'h5)] : (reg12 ? wire1 : reg18)))) ?
                  {((((8'hbd) > reg9) ?
                          forvar14 : $unsigned((7'h41))) & {(|wire1),
                          $signed(reg17)})} : (($unsigned((reg19 >>> reg15)) | ((+reg11) > $signed(wire2))) ?
                      $unsigned((reg21 ?
                          (wire4 <= wire0) : $signed(reg6))) : $signed(reg19[(1'h0):(1'h0)])));
            end
          reg23 <= reg22;
          reg24 <= $unsigned((8'hb8));
          for (forvar25 = (1'h0); (forvar25 < (2'h3)); forvar25 = (forvar25 + (1'h1)))
            begin
              reg26 <= (((~&reg17) && (-$unsigned($unsigned(reg24)))) && $signed({reg24[(4'hd):(2'h3)]}));
              reg27 <= reg22;
            end
        end
      if ((^~$unsigned($unsigned($unsigned({wire3})))))
        begin
          reg28 = reg12[(3'h7):(3'h5)];
          for (forvar29 = (1'h0); (forvar29 < (2'h3)); forvar29 = (forvar29 + (1'h1)))
            begin
              reg30 = ((~^$unsigned($signed((forvar14 >> reg21)))) ?
                  (forvar25 < (|((wire0 | (8'h9c)) ?
                      forvar8[(1'h0):(1'h0)] : $unsigned(forvar14)))) : ((~&$unsigned($signed(wire3))) <= $unsigned(reg16[(1'h0):(1'h0)])));
              reg31 <= (+(+reg22));
              reg32 <= (reg12[(4'h9):(3'h4)] - $unsigned(forvar14));
              reg33 <= (reg5[(4'hd):(4'h8)] ^ ((~reg28[(1'h0):(1'h0)]) ^~ (!(~|((8'ha8) ^ wire4)))));
            end
          for (forvar34 = (1'h0); (forvar34 < (1'h1)); forvar34 = (forvar34 + (1'h1)))
            begin
              reg35 <= ((($signed({wire0}) ^~ $unsigned((reg33 >>> reg9))) ?
                  $signed((8'hab)) : ($unsigned(reg6[(3'h6):(1'h1)]) || reg27[(4'h9):(4'h8)])) - $unsigned(((~(reg32 * wire1)) ?
                  $unsigned({(8'hbf)}) : $signed(reg23))));
              reg36 = $unsigned((~|reg19));
              reg37 <= {(wire4 * $signed($unsigned(reg27[(4'ha):(4'h8)])))};
              reg38 <= (^((~^$unsigned((reg26 > forvar7))) | $signed($signed(((7'h44) ?
                  forvar14 : forvar34)))));
            end
          for (forvar39 = (1'h0); (forvar39 < (2'h2)); forvar39 = (forvar39 + (1'h1)))
            begin
              reg40 <= forvar7;
              reg41 <= ($unsigned($signed(reg40[(4'h9):(3'h6)])) ^ (!wire3[(4'h8):(3'h6)]));
            end
        end
      else
        begin
          reg29 <= (8'hb2);
          reg30 = ({$signed(reg29[(1'h1):(1'h1)])} ?
              $unsigned(reg16) : forvar29[(2'h3):(2'h3)]);
        end
    end
  assign wire42 = (-$signed({(((7'h40) * (8'hb5)) ?
                          reg12[(4'h9):(1'h1)] : reg29)}));
  assign wire43 = {((reg23[(2'h2):(2'h2)] ^~ (|$unsigned(reg31))) <<< reg32),
                      $signed(($unsigned((reg15 ?
                          reg24 : (8'hb3))) >= $unsigned((7'h40))))};
  assign wire44 = {$unsigned($unsigned($signed(wire1[(3'h4):(2'h2)])))};
  module45 #() modinst73 (wire72, clk, wire0, wire4, wire1, wire42, reg16);
  assign wire74 = $signed($signed($signed({{(8'ha3), reg9}, reg19})));
  assign wire75 = (reg38 ? reg24 : {reg18, {$signed({reg23, reg19})}});
  assign wire76 = ((((|$signed(wire44)) ?
                      ((reg15 + wire74) << (~^reg12)) : (~|(+reg9))) <<< reg11) < (reg32[(4'he):(2'h2)] ?
                      (&{(reg41 <= wire0)}) : $unsigned((reg38 ?
                          {reg23} : reg18[(3'h7):(3'h4)]))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module45
#(parameter param70 = ((((~&((7'h42) >> (8'hbf))) ? {((8'ha1) ? (7'h44) : (8'hbc)), (^~(7'h40))} : {(8'ha7), ((7'h42) ^ (8'ha3))}) ? ((((8'h9d) >> (8'hb2)) ? {(8'hac), (8'ha3)} : (^(8'ha8))) | (((8'ha9) >= (7'h41)) ? (~|(8'haa)) : (-(8'hb6)))) : (((^~(8'hb3)) ? ((8'hb1) | (8'had)) : (~^(8'hb6))) ? ((&(8'had)) ? (|(7'h44)) : (~^(8'hbb))) : (~(^(8'hbd))))) ? ({(8'hb2), ((8'hbd) <= {(8'ha7), (7'h41)})} & {(((8'hab) || (8'h9d)) ? ((8'h9e) <<< (7'h41)) : ((8'h9d) ^ (8'hb1))), ((~^(8'hae)) && {(8'ha1)})}) : ((({(8'had)} ~^ {(8'h9f), (8'h9f)}) > (((8'had) <= (8'ha2)) > ((8'ha3) ? (8'ha9) : (8'h9d)))) ? (((!(7'h43)) | ((8'hb7) - (8'ha8))) & ((7'h42) ? {(8'ha8)} : ((8'h9c) >= (8'h9c)))) : ({{(8'had), (8'hba)}} - ((~|(8'hb6)) ? (~&(8'hb8)) : ((8'hb0) ? (8'ha6) : (8'ha7)))))), 
parameter param71 = (~(param70 | (~&param70))))
(y, clk, wire50, wire49, wire48, wire47, wire46);
  output wire [(32'heb):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h14):(1'h0)] wire50;
  input wire [(4'hf):(1'h0)] wire49;
  input wire signed [(5'h11):(1'h0)] wire48;
  input wire signed [(4'h9):(1'h0)] wire47;
  input wire [(3'h5):(1'h0)] wire46;
  wire [(4'hd):(1'h0)] wire69;
  wire [(2'h2):(1'h0)] wire68;
  wire [(4'hd):(1'h0)] wire67;
  wire signed [(4'h8):(1'h0)] wire66;
  wire [(3'h6):(1'h0)] wire65;
  wire [(4'hd):(1'h0)] wire64;
  wire signed [(5'h12):(1'h0)] wire63;
  wire signed [(5'h12):(1'h0)] wire62;
  wire [(4'h9):(1'h0)] wire61;
  wire [(4'h9):(1'h0)] wire60;
  wire signed [(4'h9):(1'h0)] wire59;
  wire signed [(2'h2):(1'h0)] wire58;
  wire signed [(5'h11):(1'h0)] wire57;
  wire [(5'h15):(1'h0)] wire55;
  wire [(4'hc):(1'h0)] wire54;
  wire signed [(5'h13):(1'h0)] wire53;
  wire signed [(3'h5):(1'h0)] wire52;
  wire [(5'h14):(1'h0)] wire51;
  reg [(5'h14):(1'h0)] reg56 = (1'h0);
  assign y = {wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 reg56,
                 (1'h0)};
  assign wire51 = $unsigned(wire49[(3'h6):(1'h0)]);
  assign wire52 = ((|(-wire47[(2'h3):(2'h2)])) ? wire50 : wire51);
  assign wire53 = (~^{wire48, $unsigned($signed((wire46 ? wire50 : wire49)))});
  assign wire54 = (!wire49);
  assign wire55 = wire53;
  always
    @(posedge clk) begin
      reg56 = (wire49 ?
          (wire47[(3'h5):(3'h5)] ?
              $signed((&{(8'ha5), wire50})) : ({$signed(wire55),
                  wire51} ^~ (8'h9c))) : (wire47 || wire51[(3'h4):(2'h3)]));
    end
  assign wire57 = wire50;
  assign wire58 = ($signed((+($signed((8'hb3)) <<< $signed(wire51)))) < (($unsigned((8'ha3)) - $unsigned($unsigned(wire49))) || (!((&wire52) ?
                      (wire47 ? wire49 : wire49) : (|wire46)))));
  assign wire59 = $signed((&$unsigned($unsigned(wire57[(3'h4):(2'h2)]))));
  assign wire60 = (8'haa);
  assign wire61 = (8'hbb);
  assign wire62 = ((wire49 > wire60[(2'h2):(2'h2)]) ?
                      $unsigned(wire55) : {$unsigned(wire57),
                          $unsigned($signed((wire50 ? wire57 : wire57)))});
  assign wire63 = ($signed($signed($signed(wire49[(1'h1):(1'h0)]))) <<< wire47[(2'h3):(2'h3)]);
  assign wire64 = $unsigned($signed((^~wire47)));
  assign wire65 = (wire48[(5'h11):(5'h10)] ?
                      (~^({wire49[(3'h7):(2'h2)], $signed(wire62)} ?
                          (+$signed(wire64)) : (!$signed((8'hab))))) : $signed(wire54));
  assign wire66 = {wire60[(2'h3):(2'h2)]};
  assign wire67 = ($signed($unsigned(wire63[(4'h9):(4'h9)])) ? wire63 : wire60);
  assign wire68 = {(8'haa), {(|wire46)}};
  assign wire69 = $signed(wire53[(5'h11):(3'h6)]);
endmodule