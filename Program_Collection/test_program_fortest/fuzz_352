(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'ha6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire19;
  wire signed [(4'h8):(1'h0)] wire15;
  wire [(4'h8):(1'h0)] wire14;
  wire [(4'hb):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire12;
  wire [(2'h2):(1'h0)] wire11;
  wire signed [(3'h6):(1'h0)] wire4;
  reg signed [(3'h6):(1'h0)] reg27 = (1'h0);
  reg [(3'h5):(1'h0)] reg26 = (1'h0);
  reg [(3'h4):(1'h0)] reg25 = (1'h0);
  reg [(4'ha):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg23 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg22 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg20 = (1'h0);
  reg [(3'h6):(1'h0)] reg18 = (1'h0);
  reg [(3'h7):(1'h0)] reg17 = (1'h0);
  reg [(3'h5):(1'h0)] reg16 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg10 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg9 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg7 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg5 = (1'h0);
  assign y = {wire19,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire4,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg18,
                 reg17,
                 reg16,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = (~&$signed(wire1[(3'h5):(3'h4)]));
  always
    @(posedge clk) begin
      if ((($unsigned(wire3) ^~ wire0) > ((|$unsigned(wire0)) ~^ $unsigned($signed(wire1)))))
        begin
          if ((((^~wire4[(3'h4):(3'h4)]) ~^ (wire0[(3'h7):(1'h0)] + (!wire0))) ~^ wire3))
            begin
              reg5 <= (|wire0);
              reg6 <= ($unsigned((wire0[(3'h7):(3'h5)] ?
                      $unsigned(wire3) : (reg5 ~^ wire2))) ?
                  (wire0[(4'h9):(4'h9)] ?
                      wire1 : $signed((^wire4))) : (&((~&wire0) << (^~reg5))));
              reg7 <= (~&$signed(($signed(reg6) * (+wire4))));
            end
          else
            begin
              reg5 <= $signed((-reg5));
              reg6 <= wire0[(1'h0):(1'h0)];
              reg7 <= (~(8'ha2));
            end
          reg8 <= (8'ha7);
          reg9 <= (&wire4[(1'h1):(1'h1)]);
        end
      else
        begin
          reg5 <= reg9;
          reg6 <= ({reg7} && ((^~{(8'ha1)}) ^~ reg6[(1'h1):(1'h1)]));
        end
      reg10 <= reg7;
    end
  assign wire11 = $unsigned($unsigned(reg9));
  assign wire12 = $signed(wire11);
  assign wire13 = (8'ha4);
  assign wire14 = (!($signed(wire1) != (|(|reg9))));
  assign wire15 = $unsigned(($signed($signed(reg7)) ? wire2 : wire14));
  always
    @(posedge clk) begin
      reg16 <= (&(reg10 != (-$unsigned(wire13))));
      reg17 <= reg6;
      reg18 <= reg5;
    end
  assign wire19 = {wire15[(1'h1):(1'h0)]};
  always
    @(posedge clk) begin
      reg20 <= $unsigned(((^(wire2 < reg16)) | ((wire2 ? reg16 : wire19) ?
          reg18[(1'h0):(1'h0)] : (8'ha2))));
      reg21 <= $signed(reg10);
      if (reg7)
        begin
          reg22 <= ((~^wire14) ?
              $signed($signed($unsigned((8'ha9)))) : ((wire3[(2'h2):(1'h1)] & wire14[(3'h4):(1'h1)]) ?
                  $signed(wire0) : $signed(((8'hab) < reg17))));
          if (wire2[(4'h9):(3'h4)])
            begin
              reg23 <= (~&((wire11[(1'h0):(1'h0)] >> $signed(reg21)) ?
                  wire19 : (reg17 ? (~reg8) : (wire12 <<< reg6))));
            end
          else
            begin
              reg23 <= (!(((reg16 ?
                  reg23 : reg5) || (wire14 ^~ (8'ha7))) - (^~(&wire15))));
              reg24 <= {wire14};
              reg25 <= ((|$unsigned((reg17 ? wire14 : wire3))) != reg6);
            end
          if ((reg18 <<< (^~wire3)))
            begin
              reg26 <= (-(-$signed((reg18 * reg21))));
              reg27 <= ($signed($unsigned((wire0 ^ reg5))) ?
                  (8'hb0) : $unsigned($signed(reg22[(2'h2):(1'h1)])));
            end
          else
            begin
              reg26 <= ((-(wire3 < (|wire11))) >> $signed($unsigned({reg17})));
              reg27 <= reg21;
            end
        end
      else
        begin
          reg22 <= $unsigned($unsigned((~&(~|wire14))));
        end
    end
endmodule