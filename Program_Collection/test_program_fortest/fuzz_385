(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h40):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire [(2'h2):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire14;
  wire [(3'h7):(1'h0)] wire11;
  wire [(4'h9):(1'h0)] wire10;
  wire signed [(3'h7):(1'h0)] wire6;
  wire [(3'h5):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg12 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg9 = (1'h0);
  reg [(3'h6):(1'h0)] reg8 = (1'h0);
  reg [(2'h2):(1'h0)] reg7 = (1'h0);
  assign y = {wire14,
                 wire11,
                 wire10,
                 wire6,
                 wire5,
                 wire4,
                 reg13,
                 reg12,
                 reg9,
                 reg8,
                 reg7,
                 (1'h0)};
  assign wire4 = ((wire0 > wire3) ?
                     ($signed($unsigned(wire2)) ?
                         ((wire0 ? (8'hb0) : wire0) ?
                             (~^wire2) : wire3[(1'h1):(1'h1)]) : ((~wire2) ^~ $signed((8'h9c)))) : ($signed({wire3}) ?
                         (|$unsigned(wire2)) : (wire0[(1'h0):(1'h0)] ?
                             (+wire2) : $unsigned(wire3))));
  assign wire5 = $signed(wire3[(3'h4):(1'h0)]);
  assign wire6 = $signed((+((~^(8'hac)) ? wire1 : $signed(wire3))));
  always
    @(posedge clk) begin
      reg7 <= wire6;
      reg8 <= (~^wire0[(2'h2):(1'h1)]);
      reg9 <= $signed((reg7 << reg7[(1'h1):(1'h0)]));
    end
  assign wire10 = (wire5[(2'h3):(2'h2)] << wire2[(3'h6):(1'h0)]);
  assign wire11 = $unsigned({wire3[(2'h3):(1'h1)]});
  always
    @(posedge clk) begin
      reg12 <= $signed((&(~|(wire11 << (8'h9e)))));
      reg13 <= {reg9[(1'h1):(1'h0)]};
    end
  assign wire14 = $signed((^(^~(~|wire5))));
endmodule