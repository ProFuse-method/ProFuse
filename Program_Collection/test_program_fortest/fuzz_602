(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire [(3'h5):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire3;
  wire [(4'ha):(1'h0)] wire61;
  wire [(4'hb):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire54;
  wire signed [(4'h9):(1'h0)] wire56;
  wire signed [(4'ha):(1'h0)] wire57;
  wire signed [(3'h6):(1'h0)] wire59;
  reg signed [(4'ha):(1'h0)] reg4 = (1'h0);
  reg [(4'h8):(1'h0)] reg5 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg6 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg58 = (1'h0);
  assign y = {wire61,
                 wire7,
                 wire54,
                 wire56,
                 wire57,
                 wire59,
                 reg4,
                 reg5,
                 reg6,
                 reg58,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= {$unsigned($signed(wire1))};
      reg5 <= wire2;
      reg6 <= wire1[(1'h1):(1'h0)];
    end
  assign wire7 = ($signed($unsigned($signed(reg6))) < (reg6[(1'h1):(1'h0)] ?
                     (~|(^~wire0)) : wire3));
  module8 #() modinst55 (.y(wire54), .wire10(reg6), .clk(clk), .wire11(wire2), .wire9(wire0), .wire12(reg4));
  assign wire56 = wire2[(3'h7):(3'h6)];
  assign wire57 = (wire54 << ((wire54[(2'h3):(1'h1)] && (wire56 >> wire54)) << reg4));
  always
    @(posedge clk) begin
      reg58 <= wire54;
    end
  module8 #() modinst60 (wire59, clk, reg4, wire7, wire2, wire54);
  assign wire61 = {$signed((-(wire54 ? wire7 : wire59)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h6f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire12;
  input wire signed [(4'hb):(1'h0)] wire11;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire signed [(4'hb):(1'h0)] wire9;
  wire signed [(4'h8):(1'h0)] wire43;
  wire signed [(4'ha):(1'h0)] wire42;
  wire signed [(2'h2):(1'h0)] wire41;
  wire signed [(3'h4):(1'h0)] wire39;
  wire [(4'hb):(1'h0)] wire13;
  reg [(4'hb):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg52 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg51 = (1'h0);
  reg [(4'h8):(1'h0)] reg50 = (1'h0);
  reg [(4'hb):(1'h0)] reg49 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg48 = (1'h0);
  reg [(3'h7):(1'h0)] reg47 = (1'h0);
  reg [(2'h2):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg45 = (1'h0);
  reg [(3'h7):(1'h0)] reg44 = (1'h0);
  assign y = {wire43,
                 wire42,
                 wire41,
                 wire39,
                 wire13,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 (1'h0)};
  assign wire13 = ((^~wire9[(1'h1):(1'h1)]) ?
                      $unsigned($signed((!wire12))) : (~&($unsigned(wire10) >> (wire10 ?
                          (8'ha2) : wire11))));
  module14 #() modinst40 (wire39, clk, wire11, wire12, wire13, wire9);
  assign wire41 = wire11;
  assign wire42 = $signed((8'ha9));
  assign wire43 = $signed((|(((8'ha5) + wire41) ?
                      (wire9 ^ wire39) : (wire11 != wire11))));
  always
    @(posedge clk) begin
      reg44 <= (~|(&$signed((wire43 >>> wire42))));
      reg45 <= $unsigned(wire11[(3'h4):(1'h1)]);
      reg46 <= $unsigned(wire10[(4'h8):(3'h6)]);
    end
  always
    @(posedge clk) begin
      if ({$unsigned($signed(wire41[(2'h2):(1'h0)]))})
        begin
          reg47 <= wire42;
          reg48 <= $signed($unsigned($signed((wire42 ? wire41 : wire42))));
          if (($signed(reg44[(3'h7):(2'h2)]) >= ((reg48 | (reg45 ?
                  wire39 : reg46)) ?
              ((wire9 ? (8'ha5) : wire9) ? wire41 : (~wire41)) : (~&(reg48 ?
                  wire41 : reg48)))))
            begin
              reg49 <= reg47[(1'h1):(1'h0)];
              reg50 <= (wire10 != (8'h9e));
              reg51 <= (-reg48[(2'h2):(2'h2)]);
            end
          else
            begin
              reg49 <= wire43[(2'h2):(2'h2)];
            end
        end
      else
        begin
          reg47 <= $signed($signed($signed((reg50 * wire42))));
        end
      reg52 <= (reg47[(3'h4):(2'h2)] <<< wire10[(1'h1):(1'h0)]);
      reg53 <= $signed({reg45[(3'h4):(1'h1)]});
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h6f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire18;
  input wire [(3'h6):(1'h0)] wire17;
  input wire [(3'h6):(1'h0)] wire16;
  input wire signed [(4'hb):(1'h0)] wire15;
  wire [(2'h2):(1'h0)] wire30;
  wire [(2'h3):(1'h0)] wire29;
  wire [(4'h9):(1'h0)] wire28;
  wire [(2'h3):(1'h0)] wire27;
  wire signed [(3'h4):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire24;
  wire [(3'h7):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire22;
  wire signed [(4'h8):(1'h0)] wire21;
  wire [(3'h4):(1'h0)] wire20;
  wire signed [(3'h5):(1'h0)] wire19;
  reg [(4'h8):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg37 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg36 = (1'h0);
  reg [(4'h9):(1'h0)] reg35 = (1'h0);
  reg [(3'h4):(1'h0)] reg34 = (1'h0);
  reg [(3'h6):(1'h0)] reg33 = (1'h0);
  reg [(3'h6):(1'h0)] reg32 = (1'h0);
  reg [(3'h5):(1'h0)] reg31 = (1'h0);
  reg [(3'h4):(1'h0)] reg25 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg25,
                 (1'h0)};
  assign wire19 = $signed(wire15);
  assign wire20 = wire17[(3'h4):(2'h3)];
  assign wire21 = $signed($signed(wire15));
  assign wire22 = ($unsigned($signed((wire19 <<< wire16))) ?
                      wire16 : (-(+$signed(wire17))));
  assign wire23 = (((-wire18) ? $unsigned($signed((8'hb0))) : wire21) ?
                      $unsigned((+(wire16 ? wire19 : wire17))) : (((-wire18) ?
                          (wire17 ?
                              (8'ha0) : wire20) : wire15) << (wire17 >>> {(8'hb0)})));
  assign wire24 = (&$unsigned(((~wire21) ?
                      (wire23 ? wire16 : wire16) : $unsigned(wire16))));
  always
    @(posedge clk) begin
      reg25 <= (8'h9f);
    end
  assign wire26 = {wire18};
  assign wire27 = (($unsigned(wire17[(3'h6):(1'h1)]) ?
                      (wire22[(4'ha):(4'h8)] ~^ (!(8'ha4))) : ($signed((8'hae)) ?
                          wire22 : wire17)) >= (($signed(wire24) ?
                          ((8'ha3) ? (8'hac) : wire22) : (wire21 - wire26)) ?
                      wire24[(3'h4):(2'h2)] : $signed((8'hb0))));
  assign wire28 = ({(!(~wire19))} || (wire16 ? {(^~wire18)} : (-(^wire26))));
  assign wire29 = wire28[(3'h4):(1'h0)];
  assign wire30 = {$unsigned((8'ha6))};
  always
    @(posedge clk) begin
      if ({$unsigned(wire15)})
        begin
          reg31 <= (~^$signed(($unsigned(wire16) >>> (wire30 < (8'haa)))));
        end
      else
        begin
          reg31 <= wire17;
          reg32 <= wire28[(2'h2):(1'h1)];
        end
      if ($unsigned((~$signed($signed(wire24)))))
        begin
          reg33 <= ((|reg32) ? wire22 : $unsigned($signed($signed(wire27))));
          reg34 <= (~{wire19});
          if (wire18)
            begin
              reg35 <= $unsigned($signed(reg34[(3'h4):(3'h4)]));
              reg36 <= $unsigned((~^(!{(8'h9f)})));
              reg37 <= reg34[(1'h1):(1'h0)];
            end
          else
            begin
              reg35 <= $unsigned(($unsigned((reg25 << wire28)) ?
                  (!(reg25 ? (8'ha3) : reg37)) : (-reg31[(1'h0):(1'h0)])));
            end
        end
      else
        begin
          reg33 <= $signed((~&$signed((reg32 ? reg32 : wire21))));
        end
      reg38 <= wire29[(1'h0):(1'h0)];
    end
endmodule