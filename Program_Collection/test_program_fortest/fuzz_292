(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire67;
  wire signed [(4'ha):(1'h0)] wire66;
  wire [(2'h3):(1'h0)] wire65;
  wire [(3'h7):(1'h0)] wire64;
  wire [(2'h2):(1'h0)] wire63;
  wire [(3'h7):(1'h0)] wire57;
  wire signed [(4'h9):(1'h0)] wire4;
  reg signed [(2'h2):(1'h0)] reg62 = (1'h0);
  reg [(4'h9):(1'h0)] reg61 = (1'h0);
  reg [(3'h4):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg59 = (1'h0);
  assign y = {wire67,
                 wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire57,
                 wire4,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 (1'h0)};
  assign wire4 = $unsigned(wire3[(1'h0):(1'h0)]);
  module5 #() modinst58 (wire57, clk, wire3, wire4, wire2, wire0);
  always
    @(posedge clk) begin
      if ($unsigned($signed(($unsigned(wire2) >>> wire1[(3'h7):(3'h4)]))))
        begin
          reg59 <= (~^wire4);
        end
      else
        begin
          if (wire57[(2'h2):(1'h0)])
            begin
              reg59 <= $unsigned($unsigned(wire0[(1'h1):(1'h0)]));
              reg60 <= wire57[(3'h7):(1'h1)];
            end
          else
            begin
              reg59 <= $signed(((-wire0) ? (~(8'hb0)) : $signed({wire4})));
              reg60 <= {{$unsigned((!reg59))}};
            end
          reg61 <= (wire4[(4'h9):(4'h9)] - wire2[(4'h9):(4'h8)]);
        end
      reg62 <= (reg60 >> $unsigned(wire1));
    end
  assign wire63 = $unsigned({{$signed(wire1)}});
  assign wire64 = (wire2 & $unsigned((reg62[(1'h1):(1'h0)] & reg62)));
  assign wire65 = ((|{wire0[(2'h3):(2'h2)]}) ?
                      ((~^(wire4 ?
                          reg62 : wire64)) && reg60) : $signed((((8'hb0) >>> wire1) ?
                          (reg60 != reg62) : reg61)));
  assign wire66 = ({(~((8'h9d) ~^ wire64))} ?
                      $signed(wire57) : ($signed(reg59) ?
                          $signed((reg62 ^~ reg59)) : (8'ha8)));
  assign wire67 = {$unsigned(wire65[(1'h1):(1'h1)])};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param56 = (-((&((8'hae) ? (8'ha4) : (8'ha1))) <<< ({(8'haf)} ~^ ((8'hab) ? (8'ha4) : (8'ha9))))))
(y, clk, wire6, wire7, wire8, wire9);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire6;
  input wire signed [(4'h9):(1'h0)] wire7;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire [(4'ha):(1'h0)] wire9;
  wire signed [(2'h3):(1'h0)] wire55;
  wire [(3'h7):(1'h0)] wire10;
  wire [(4'h9):(1'h0)] wire23;
  wire signed [(4'h9):(1'h0)] wire25;
  wire signed [(3'h7):(1'h0)] wire26;
  wire [(3'h6):(1'h0)] wire53;
  reg signed [(4'hb):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg28 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg29 = (1'h0);
  reg [(4'ha):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg31 = (1'h0);
  assign y = {wire55,
                 wire10,
                 wire23,
                 wire25,
                 wire26,
                 wire53,
                 reg27,
                 reg28,
                 reg29,
                 reg30,
                 reg31,
                 (1'h0)};
  assign wire10 = $signed((-$unsigned({wire8})));
  module11 #() modinst24 (wire23, clk, wire6, wire7, wire8, wire9);
  assign wire25 = wire8[(4'h8):(3'h6)];
  assign wire26 = wire25;
  always
    @(posedge clk) begin
      if ($unsigned(((wire26[(2'h3):(2'h3)] ? wire25 : (8'ha8)) ?
          wire8 : $unsigned((wire7 >>> wire25)))))
        begin
          reg27 <= $signed((8'hb0));
          reg28 <= $signed((8'ha6));
          reg29 <= ((wire6 || ((^~wire10) ?
              (!reg28) : wire26[(1'h1):(1'h0)])) >>> (~&(wire9 | (reg27 | wire9))));
        end
      else
        begin
          reg27 <= ((~(~^wire6)) ?
              {((^reg28) ? (~|wire8) : (^(8'had)))} : $unsigned(wire8));
          if ((~|$unsigned($signed($unsigned(wire6)))))
            begin
              reg28 <= ((($signed(wire7) ?
                      $signed(wire25) : wire9[(4'ha):(3'h4)]) ?
                  wire10[(3'h5):(2'h3)] : {(wire9 == reg29)}) == (~|$unsigned({wire26})));
            end
          else
            begin
              reg28 <= (($signed(wire7) != (~|$signed(wire26))) ?
                  (-$signed({wire6})) : {wire7[(3'h5):(1'h0)]});
              reg29 <= $unsigned($unsigned(wire9));
              reg30 <= (|reg27);
            end
        end
      reg31 <= wire8[(1'h0):(1'h0)];
    end
  module32 #() modinst54 (.wire34(wire10), .wire33(wire6), .y(wire53), .clk(clk), .wire36(reg31), .wire35(wire7));
  assign wire55 = ({(+(wire26 ? wire8 : reg28))} < reg30);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module32  (y, clk, wire36, wire35, wire34, wire33);
  output wire [(32'h7a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire36;
  input wire [(4'h9):(1'h0)] wire35;
  input wire [(3'h7):(1'h0)] wire34;
  input wire [(3'h4):(1'h0)] wire33;
  wire [(4'h8):(1'h0)] wire52;
  wire [(4'ha):(1'h0)] wire51;
  wire [(3'h7):(1'h0)] wire50;
  wire [(4'h9):(1'h0)] wire49;
  wire signed [(4'h8):(1'h0)] wire40;
  wire signed [(3'h7):(1'h0)] wire39;
  wire [(3'h7):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire37;
  reg [(4'ha):(1'h0)] reg48 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg46 = (1'h0);
  reg [(4'hb):(1'h0)] reg45 = (1'h0);
  reg [(4'h9):(1'h0)] reg44 = (1'h0);
  reg [(3'h5):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg42 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg41 = (1'h0);
  assign y = {wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 (1'h0)};
  assign wire37 = {wire34[(2'h3):(2'h2)]};
  assign wire38 = $unsigned($unsigned(($signed(wire35) ^ $unsigned((8'hb0)))));
  assign wire39 = wire35;
  assign wire40 = (($signed($unsigned(wire35)) ?
                      wire36[(1'h0):(1'h0)] : wire38[(3'h7):(3'h5)]) <<< wire37);
  always
    @(posedge clk) begin
      if (((~wire39) > $signed((8'ha3))))
        begin
          if (wire37)
            begin
              reg41 <= wire39;
              reg42 <= (^(wire33 ?
                  ($signed(wire34) ? {wire39} : $unsigned(wire37)) : wire35));
              reg43 <= (&wire40[(2'h3):(2'h2)]);
            end
          else
            begin
              reg41 <= wire40;
            end
          if (($unsigned((wire37[(3'h6):(1'h1)] ?
              (wire37 + wire35) : reg43[(1'h0):(1'h0)])) && wire37[(2'h2):(1'h0)]))
            begin
              reg44 <= (($signed(reg43) ? (8'hac) : (8'haa)) ?
                  ((~(wire34 ^ wire40)) ?
                      ({reg43} >= $unsigned(wire40)) : ($signed(wire39) ?
                          wire36[(2'h3):(2'h3)] : (wire39 ~^ wire36))) : (reg43[(1'h1):(1'h0)] ?
                      (wire39 ~^ $signed(wire36)) : reg43));
              reg45 <= $signed(wire33[(3'h4):(3'h4)]);
              reg46 <= $unsigned((wire36 || (8'hae)));
            end
          else
            begin
              reg44 <= $signed((~($unsigned(wire38) ?
                  ((8'ha8) | wire34) : reg46[(2'h3):(2'h3)])));
              reg45 <= reg46;
            end
        end
      else
        begin
          if (((&(8'ha4)) ?
              $signed($unsigned((reg46 ^ (8'hac)))) : {((reg45 >>> reg46) == {reg45})}))
            begin
              reg41 <= reg42[(1'h0):(1'h0)];
            end
          else
            begin
              reg41 <= $signed(wire34);
            end
          reg42 <= reg45;
          reg43 <= $unsigned({(~&$signed((8'h9f)))});
        end
    end
  always
    @(posedge clk) begin
      reg47 <= (~((^(wire33 ? wire36 : reg41)) ?
          $unsigned($unsigned(wire36)) : wire39));
      reg48 <= (reg47 ?
          (!(^~wire38[(1'h0):(1'h0)])) : ((-$unsigned(reg43)) ?
              (~|$signed(reg45)) : $signed((~|reg47))));
    end
  assign wire49 = {reg46[(3'h5):(2'h2)]};
  assign wire50 = $signed(($unsigned($signed(reg46)) >= wire38[(3'h7):(3'h7)]));
  assign wire51 = $unsigned({reg45[(3'h4):(2'h3)]});
  assign wire52 = $unsigned((^~(8'h9d)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire15;
  input wire signed [(2'h3):(1'h0)] wire14;
  input wire signed [(4'h9):(1'h0)] wire13;
  input wire [(4'ha):(1'h0)] wire12;
  wire signed [(4'hb):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  wire signed [(3'h7):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire18;
  wire signed [(4'ha):(1'h0)] wire17;
  reg signed [(2'h2):(1'h0)] reg16 = (1'h0);
  assign y = {wire22, wire21, wire20, wire19, wire18, wire17, reg16, (1'h0)};
  always
    @(posedge clk) begin
      reg16 <= $unsigned({$signed($signed(wire13))});
    end
  assign wire17 = {{$unsigned((wire15 ~^ wire15))}};
  assign wire18 = wire17;
  assign wire19 = wire14[(1'h1):(1'h1)];
  assign wire20 = wire19[(1'h0):(1'h0)];
  assign wire21 = $unsigned(wire15);
  assign wire22 = ((8'had) & wire20[(3'h5):(3'h5)]);
endmodule