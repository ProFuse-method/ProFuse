(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire signed [(2'h2):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire20;
  wire [(3'h6):(1'h0)] wire19;
  wire signed [(3'h5):(1'h0)] wire14;
  wire [(4'h9):(1'h0)] wire13;
  wire [(3'h6):(1'h0)] wire12;
  wire signed [(2'h2):(1'h0)] wire10;
  wire [(2'h2):(1'h0)] wire4;
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  reg [(3'h5):(1'h0)] reg17 = (1'h0);
  reg [(3'h6):(1'h0)] reg16 = (1'h0);
  reg [(2'h2):(1'h0)] reg15 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg11 = (1'h0);
  reg [(3'h6):(1'h0)] reg9 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg8 = (1'h0);
  reg [(4'h8):(1'h0)] reg7 = (1'h0);
  reg [(4'h8):(1'h0)] reg6 = (1'h0);
  reg [(3'h4):(1'h0)] reg5 = (1'h0);
  assign y = {wire20,
                 wire19,
                 wire14,
                 wire13,
                 wire12,
                 wire10,
                 wire4,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg11,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = wire2[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      if ($unsigned((8'hae)))
        begin
          if (wire0[(1'h0):(1'h0)])
            begin
              reg5 <= ($signed(wire1[(2'h2):(2'h2)]) ?
                  $signed(wire0) : ({(wire0 & wire1)} & ({wire3} ?
                      $signed(wire1) : wire4[(2'h2):(2'h2)])));
            end
          else
            begin
              reg5 <= (({(wire2 & wire0)} >= $signed($signed(wire3))) << wire3[(1'h0):(1'h0)]);
              reg6 <= (wire0[(3'h5):(3'h4)] >>> wire4);
            end
          reg7 <= {$unsigned((|wire2[(1'h0):(1'h0)]))};
        end
      else
        begin
          reg5 <= wire4[(1'h0):(1'h0)];
          reg6 <= (reg6 ?
              (~^(wire2[(2'h2):(1'h0)] && $signed(reg7))) : (^((~^reg7) ?
                  $signed(wire3) : $signed(reg7))));
          reg7 <= {($unsigned((wire4 ? (8'hae) : reg5)) ? (8'ha5) : wire0)};
        end
      if (reg5[(2'h2):(1'h1)])
        begin
          reg8 <= {(({reg5} <= $signed((8'haa))) ?
                  ((~^reg7) ? {wire4} : $unsigned((8'ha1))) : (reg7 ?
                      $signed((8'hb0)) : (!wire3)))};
        end
      else
        begin
          reg8 <= $unsigned(wire1);
        end
      reg9 <= $signed(($unsigned((~|(8'haf))) + ((wire2 ? reg5 : (8'ha1)) ?
          (wire3 ? wire4 : reg8) : $unsigned(reg6))));
    end
  assign wire10 = $unsigned($unsigned($unsigned(wire2[(1'h1):(1'h1)])));
  always
    @(posedge clk) begin
      reg11 <= $unsigned(wire10);
    end
  assign wire12 = (((~|$unsigned(wire10)) != (!$unsigned(reg6))) & reg6[(4'h8):(3'h5)]);
  assign wire13 = ((&{$signed(reg6)}) << (~{(8'ha1)}));
  assign wire14 = ($unsigned($unsigned((8'ha3))) ?
                      (wire12 ?
                          ((reg5 ? wire12 : wire0) ?
                              (wire0 ^ reg9) : (reg7 + reg9)) : (~reg5[(1'h0):(1'h0)])) : ((~|((8'h9f) > reg8)) ?
                          ($signed(reg6) - {wire3}) : $unsigned($unsigned((8'ha2)))));
  always
    @(posedge clk) begin
      if (((!(^$unsigned(wire13))) ?
          $unsigned({(reg9 ~^ wire12)}) : reg6[(3'h4):(3'h4)]))
        begin
          if ((($signed((wire12 ^~ (8'ha3))) ~^ (!((8'hab) ?
              wire1 : wire1))) || {($signed((8'hb0)) ?
                  $signed(reg7) : wire4[(1'h1):(1'h0)])}))
            begin
              reg15 <= reg11;
            end
          else
            begin
              reg15 <= {wire4};
              reg16 <= $unsigned(($unsigned($signed(reg9)) ~^ $signed((reg9 >>> reg11))));
              reg17 <= $signed((($signed(reg16) ^~ $signed(wire12)) ?
                  (^(~^reg15)) : $signed({wire1})));
            end
        end
      else
        begin
          reg15 <= reg5[(2'h2):(1'h1)];
          if (wire2[(2'h2):(1'h0)])
            begin
              reg16 <= (8'haa);
              reg17 <= (^~(~|(reg11[(2'h2):(1'h1)] > (reg9 <= reg11))));
              reg18 <= {{reg11[(1'h1):(1'h0)]}};
            end
          else
            begin
              reg16 <= reg17[(2'h3):(1'h0)];
            end
        end
    end
  assign wire19 = {reg5[(1'h0):(1'h0)]};
  assign wire20 = wire14[(1'h1):(1'h0)];
endmodule