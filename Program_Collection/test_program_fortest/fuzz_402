(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h23):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire32;
  wire [(3'h5):(1'h0)] wire30;
  wire signed [(3'h7):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg6 = (1'h0);
  assign y = {wire32, wire30, wire5, wire4, reg6, (1'h0)};
  assign wire4 = $unsigned($signed((8'ha6)));
  assign wire5 = {{(8'had)}};
  always
    @(posedge clk) begin
      reg6 <= $signed($signed((^~wire1)));
    end
  module7 #() modinst31 (.wire8(wire0), .wire11(wire4), .y(wire30), .clk(clk), .wire10(wire2), .wire9(wire3));
  assign wire32 = wire0;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param29 = ((((^~(8'ha0)) ? ((8'ha0) | (8'h9c)) : (!(8'ha8))) ~^ {((8'h9c) != (8'hb0))}) ? ((~&((8'ha1) ? (8'hab) : (8'haf))) - ((^~(8'hac)) | {(8'hae)})) : ((~&(+(8'h9f))) & (|(|(8'ha3))))))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h15):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire11;
  input wire [(4'ha):(1'h0)] wire10;
  input wire signed [(3'h7):(1'h0)] wire9;
  input wire signed [(4'h8):(1'h0)] wire8;
  wire [(3'h5):(1'h0)] wire28;
  wire signed [(2'h2):(1'h0)] wire27;
  wire [(4'h9):(1'h0)] wire26;
  wire signed [(3'h4):(1'h0)] wire24;
  assign y = {wire28, wire27, wire26, wire24, (1'h0)};
  module12 #() modinst25 (.wire14(wire8), .clk(clk), .wire15(wire9), .y(wire24), .wire16(wire10), .wire13(wire11));
  assign wire26 = (8'hab);
  assign wire27 = ((|((-wire10) ? $signed(wire10) : $signed(wire10))) ?
                      (~|{(wire26 < wire8)}) : wire8[(3'h7):(2'h3)]);
  assign wire28 = ((~|(~^(wire10 ^~ wire26))) ?
                      {wire26} : wire26[(3'h5):(3'h5)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param23 = (^((((8'ha7) ? (8'ha8) : (8'ha3)) < ((8'ha5) ^~ (8'hab))) << (8'ha7))))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire15;
  input wire [(3'h6):(1'h0)] wire14;
  input wire [(4'hb):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire22;
  wire [(4'ha):(1'h0)] wire21;
  wire [(4'h9):(1'h0)] wire20;
  wire [(3'h4):(1'h0)] wire19;
  wire [(3'h7):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire17;
  assign y = {wire22, wire21, wire20, wire19, wire18, wire17, (1'h0)};
  assign wire17 = $signed((($signed(wire15) == (wire13 != wire13)) ?
                      (wire13[(1'h0):(1'h0)] | (8'ha8)) : wire15));
  assign wire18 = (&((^~wire15[(3'h4):(1'h0)]) >> (~|$unsigned(wire16))));
  assign wire19 = (^{$unsigned((8'ha9))});
  assign wire20 = wire17;
  assign wire21 = (($unsigned((wire16 ? (8'ha6) : wire18)) ? wire20 : wire17) ?
                      (wire16[(1'h1):(1'h1)] ?
                          $unsigned((8'ha0)) : ((8'ha5) ^ $unsigned(wire19))) : (~^$signed($signed((8'h9e)))));
  assign wire22 = {(wire13 ?
                          wire14[(3'h6):(2'h2)] : $unsigned(wire15[(1'h1):(1'h0)]))};
endmodule