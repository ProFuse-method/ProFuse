(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param57 = ((^(((8'haa) ? (8'ha3) : (8'hab)) ? (^(8'hb0)) : ((8'ha1) ^~ (8'h9c)))) ? {(+(8'ha7))} : (((8'ha0) ? {(8'ha8)} : ((8'ha9) ~^ (8'h9c))) >> ((^~(8'ha9)) ? {(8'ha4)} : ((8'h9e) | (8'hb0))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h39):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire55;
  wire [(3'h4):(1'h0)] wire54;
  wire [(3'h7):(1'h0)] wire53;
  wire [(4'h8):(1'h0)] wire52;
  wire signed [(4'ha):(1'h0)] wire51;
  wire signed [(4'h8):(1'h0)] wire49;
  wire signed [(2'h2):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  assign y = {wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire49,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = $signed($signed(wire1[(2'h2):(1'h0)]));
  assign wire5 = (!wire3);
  module6 #() modinst50 (.wire10(wire0), .wire9(wire3), .clk(clk), .y(wire49), .wire7(wire4), .wire8(wire1));
  assign wire51 = (~$unsigned(((~^wire2) ? {wire2} : (wire2 == wire1))));
  assign wire52 = $unsigned(($unsigned(((8'ha2) ^~ wire49)) && $signed(wire1)));
  assign wire53 = ((-$unsigned(wire5[(1'h0):(1'h0)])) ?
                      $signed({(wire49 ?
                              wire4 : wire52)}) : $unsigned($signed((wire52 >> wire5))));
  assign wire54 = wire4[(3'h6):(3'h5)];
  module12 #() modinst56 (wire55, clk, wire54, wire5, wire4, wire53);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param48 = (((+((8'h9f) ? (8'ha7) : (8'had))) <= (&((8'ha3) != (8'hac)))) ? {(^~(~(8'hac)))} : ((((8'ha8) * (8'h9e)) ? ((8'had) <<< (8'had)) : ((8'ha8) ? (8'h9d) : (8'hb0))) ? (((8'h9d) < (8'haa)) < (!(8'haf))) : {(-(8'ha0))})))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h43):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire10;
  input wire [(2'h2):(1'h0)] wire9;
  input wire [(4'h8):(1'h0)] wire8;
  input wire signed [(3'h7):(1'h0)] wire7;
  wire [(3'h5):(1'h0)] wire47;
  wire signed [(2'h2):(1'h0)] wire46;
  wire signed [(3'h6):(1'h0)] wire45;
  wire [(4'hb):(1'h0)] wire44;
  wire [(2'h3):(1'h0)] wire42;
  wire signed [(2'h2):(1'h0)] wire41;
  wire signed [(3'h7):(1'h0)] wire40;
  wire signed [(3'h5):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire37;
  wire signed [(4'hb):(1'h0)] wire22;
  wire signed [(4'h9):(1'h0)] wire11;
  assign y = {wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire37,
                 wire22,
                 wire11,
                 (1'h0)};
  assign wire11 = wire10[(3'h4):(3'h4)];
  module12 #() modinst23 (.wire15(wire9), .wire14(wire10), .wire13(wire8), .wire16(wire7), .clk(clk), .y(wire22));
  module24 #() modinst38 (wire37, clk, wire7, wire11, wire22, wire8);
  assign wire39 = ((wire10 ? (8'h9c) : wire37) ?
                      (~|(&(^wire8))) : (((wire11 || wire9) ?
                              (wire22 <<< wire11) : (-wire22)) ?
                          {{wire10}} : {wire7[(3'h4):(3'h4)]}));
  assign wire40 = $unsigned($signed(($unsigned(wire8) ?
                      wire22 : wire9[(2'h2):(1'h1)])));
  assign wire41 = {wire9};
  module12 #() modinst43 (.wire15(wire11), .wire16(wire7), .y(wire42), .wire13(wire40), .wire14(wire10), .clk(clk));
  assign wire44 = $unsigned(($signed((wire9 != wire37)) ?
                      (~|wire41) : ((8'ha7) | wire7[(3'h7):(2'h3)])));
  assign wire45 = {$unsigned($signed((wire7 ? wire11 : wire42)))};
  assign wire46 = wire45;
  assign wire47 = (+(^$signed(wire9)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module24  (y, clk, wire28, wire27, wire26, wire25);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire28;
  input wire signed [(3'h5):(1'h0)] wire27;
  input wire [(4'hb):(1'h0)] wire26;
  input wire signed [(4'h8):(1'h0)] wire25;
  wire signed [(3'h5):(1'h0)] wire36;
  wire [(4'h9):(1'h0)] wire35;
  wire [(3'h4):(1'h0)] wire34;
  wire signed [(2'h2):(1'h0)] wire33;
  reg signed [(4'ha):(1'h0)] reg32 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg31 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg [(4'ha):(1'h0)] reg29 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ((^{$signed($unsigned(wire28))}))
        begin
          reg29 <= $signed((&$signed(wire27)));
          reg30 <= wire27[(1'h1):(1'h0)];
          reg31 <= wire28[(2'h3):(1'h0)];
        end
      else
        begin
          reg29 <= (8'ha8);
        end
      reg32 <= $unsigned((~^reg30[(3'h4):(2'h3)]));
    end
  assign wire33 = reg31[(3'h6):(1'h1)];
  assign wire34 = wire28;
  assign wire35 = wire26[(1'h0):(1'h0)];
  assign wire36 = wire26[(3'h4):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h1e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire16;
  input wire signed [(2'h2):(1'h0)] wire15;
  input wire [(4'hb):(1'h0)] wire14;
  input wire [(3'h7):(1'h0)] wire13;
  wire [(2'h3):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire20;
  wire [(4'h9):(1'h0)] wire19;
  wire signed [(2'h3):(1'h0)] wire18;
  wire signed [(3'h6):(1'h0)] wire17;
  assign y = {wire21, wire20, wire19, wire18, wire17, (1'h0)};
  assign wire17 = wire13[(3'h7):(2'h2)];
  assign wire18 = ((~&wire13[(2'h3):(2'h3)]) == {wire13});
  assign wire19 = $unsigned({(~&$signed(wire14))});
  assign wire20 = ($unsigned((|$signed(wire13))) != (!wire19[(1'h0):(1'h0)]));
  assign wire21 = wire18[(2'h2):(2'h2)];
endmodule