(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param86 = {(8'had)})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h73):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire85;
  wire signed [(3'h6):(1'h0)] wire84;
  wire [(4'h9):(1'h0)] wire83;
  wire signed [(4'h9):(1'h0)] wire82;
  wire [(3'h5):(1'h0)] wire81;
  wire signed [(3'h4):(1'h0)] wire76;
  wire [(4'hb):(1'h0)] wire74;
  wire [(3'h5):(1'h0)] wire71;
  wire signed [(3'h4):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg80 = (1'h0);
  reg [(4'hb):(1'h0)] reg79 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg78 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg77 = (1'h0);
  reg [(3'h7):(1'h0)] reg75 = (1'h0);
  reg [(4'ha):(1'h0)] reg73 = (1'h0);
  assign y = {wire85,
                 wire84,
                 wire83,
                 wire82,
                 wire81,
                 wire76,
                 wire74,
                 wire71,
                 wire5,
                 wire4,
                 reg80,
                 reg79,
                 reg78,
                 reg77,
                 reg75,
                 reg73,
                 (1'h0)};
  assign wire4 = (!((wire1[(2'h2):(1'h1)] - (!wire2)) ^ ((wire0 ?
                     wire0 : wire3) && $unsigned(wire2))));
  assign wire5 = $unsigned(((8'hac) ?
                     {wire2[(1'h1):(1'h1)]} : (!wire0[(4'h8):(3'h6)])));
  module6 #() modinst72 (wire71, clk, wire4, wire2, wire0, wire5);
  always
    @(posedge clk) begin
      reg73 <= wire3[(3'h4):(1'h0)];
    end
  assign wire74 = (($unsigned((!wire3)) < ($signed(wire0) == (wire1 * wire3))) >> wire4[(4'h8):(3'h6)]);
  always
    @(posedge clk) begin
      reg75 <= wire3[(1'h1):(1'h0)];
    end
  assign wire76 = $signed($signed(((wire71 ^~ wire2) ?
                      (reg73 == wire3) : wire74[(3'h7):(2'h3)])));
  always
    @(posedge clk) begin
      if (wire0[(2'h2):(1'h0)])
        begin
          if (($signed({(wire5 ? reg75 : wire3)}) ?
              ((!((8'ha6) <= wire71)) ?
                  ($unsigned(wire1) ~^ reg75) : wire76[(2'h2):(1'h1)]) : (+($signed(wire76) == $unsigned(wire74)))))
            begin
              reg77 <= (((8'h9f) <= (wire71 - $signed((8'hab)))) ?
                  (8'haf) : (-((|wire1) ^~ (wire74 ? wire3 : (8'ha1)))));
              reg78 <= (~|wire5[(2'h2):(1'h0)]);
            end
          else
            begin
              reg77 <= reg75[(1'h0):(1'h0)];
            end
        end
      else
        begin
          reg77 <= (reg78[(3'h5):(3'h5)] ? wire74 : (~|{(+wire1)}));
        end
      reg79 <= wire2[(1'h0):(1'h0)];
      reg80 <= ($signed($unsigned($unsigned(wire1))) ?
          $unsigned((!$unsigned(reg73))) : wire4);
    end
  assign wire81 = (8'h9c);
  assign wire82 = $unsigned((wire3[(2'h2):(2'h2)] ? {{reg78}} : wire2));
  assign wire83 = {(((~|wire1) >= (~^wire5)) ^~ wire81[(1'h0):(1'h0)])};
  assign wire84 = wire1[(1'h0):(1'h0)];
  assign wire85 = reg73;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire10;
  input wire [(4'hb):(1'h0)] wire9;
  input wire signed [(4'h8):(1'h0)] wire8;
  input wire signed [(2'h3):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire70;
  wire [(4'h9):(1'h0)] wire68;
  wire signed [(4'h9):(1'h0)] wire48;
  wire [(3'h4):(1'h0)] wire47;
  wire signed [(4'ha):(1'h0)] wire46;
  wire [(4'ha):(1'h0)] wire45;
  wire signed [(3'h7):(1'h0)] wire44;
  wire [(3'h5):(1'h0)] wire43;
  wire [(3'h7):(1'h0)] wire41;
  wire [(4'ha):(1'h0)] wire11;
  assign y = {wire70,
                 wire68,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire41,
                 wire11,
                 (1'h0)};
  assign wire11 = wire8;
  module12 #() modinst42 (wire41, clk, wire9, wire8, wire11, wire7);
  assign wire43 = ({(~|(!(8'ha7)))} ?
                      ($unsigned((wire10 == wire11)) << (-$signed(wire9))) : (~|wire10[(1'h0):(1'h0)]));
  assign wire44 = wire9[(4'hb):(2'h2)];
  assign wire45 = $unsigned(wire41[(1'h0):(1'h0)]);
  assign wire46 = wire44;
  assign wire47 = wire44;
  assign wire48 = wire8[(3'h5):(3'h4)];
  module49 #() modinst69 (.wire50(wire46), .clk(clk), .wire51(wire43), .y(wire68), .wire52(wire11), .wire53(wire8));
  assign wire70 = wire10;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module49
#(parameter param67 = ((8'ha2) ? ((^~((8'hab) > (8'hab))) ? (^((8'ha3) ? (8'haf) : (8'ha0))) : (8'ha2)) : (({(8'ha8)} <<< ((8'ha6) ? (8'hab) : (8'h9d))) >= (((8'ha7) ? (8'haa) : (8'had)) ^~ ((8'ha0) ? (8'had) : (8'hab))))))
(y, clk, wire53, wire52, wire51, wire50);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire53;
  input wire signed [(4'ha):(1'h0)] wire52;
  input wire [(3'h5):(1'h0)] wire51;
  input wire signed [(4'ha):(1'h0)] wire50;
  wire signed [(2'h3):(1'h0)] wire61;
  wire signed [(3'h4):(1'h0)] wire60;
  wire signed [(2'h3):(1'h0)] wire59;
  wire signed [(3'h6):(1'h0)] wire54;
  reg [(4'ha):(1'h0)] reg66 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg65 = (1'h0);
  reg [(3'h5):(1'h0)] reg64 = (1'h0);
  reg [(4'hb):(1'h0)] reg63 = (1'h0);
  reg [(3'h4):(1'h0)] reg62 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg58 = (1'h0);
  reg [(4'ha):(1'h0)] reg57 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg55 = (1'h0);
  assign y = {wire61,
                 wire60,
                 wire59,
                 wire54,
                 reg66,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 (1'h0)};
  assign wire54 = ($unsigned(wire51[(1'h1):(1'h0)]) >>> $signed(wire50[(4'ha):(3'h4)]));
  always
    @(posedge clk) begin
      reg55 <= {(~&$unsigned((^wire54)))};
      if ($signed($signed(((-(8'hab)) ?
          (wire50 ? wire54 : reg55) : wire53[(2'h3):(2'h3)]))))
        begin
          reg56 <= $unsigned($unsigned(wire51[(2'h2):(1'h0)]));
          reg57 <= wire53;
        end
      else
        begin
          reg56 <= $unsigned(wire52[(4'ha):(3'h4)]);
          if ((8'ha8))
            begin
              reg57 <= (+{({wire50} & (wire54 & wire51))});
              reg58 <= $unsigned($signed($unsigned(wire51)));
            end
          else
            begin
              reg57 <= $signed(wire53[(3'h6):(2'h2)]);
            end
        end
    end
  assign wire59 = $signed(wire50[(1'h0):(1'h0)]);
  assign wire60 = (($unsigned((wire50 < reg56)) <= reg58) - ((reg55 & wire51) ?
                      {$signed(reg56)} : (^~(reg55 && wire59))));
  assign wire61 = $signed((reg58 ?
                      $unsigned({reg55}) : $unsigned(((8'had) | wire54))));
  always
    @(posedge clk) begin
      reg62 <= (((8'h9f) && ((wire59 || wire54) ?
          reg56[(2'h2):(2'h2)] : (wire52 <<< wire53))) || (((~reg56) ?
              $signed(wire59) : wire51[(2'h2):(1'h1)]) ?
          ($unsigned((8'ha3)) >>> $signed(wire59)) : (~|wire52)));
      reg63 <= (^{$unsigned($unsigned(wire59))});
      reg64 <= $signed(wire52[(1'h0):(1'h0)]);
    end
  always
    @(posedge clk) begin
      reg65 <= reg63;
      reg66 <= $signed(wire53);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'hab):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire16;
  input wire signed [(2'h2):(1'h0)] wire15;
  input wire signed [(3'h4):(1'h0)] wire14;
  input wire [(2'h3):(1'h0)] wire13;
  wire signed [(4'hb):(1'h0)] wire37;
  wire [(4'ha):(1'h0)] wire36;
  wire [(4'h9):(1'h0)] wire35;
  wire [(2'h2):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire33;
  wire [(4'h8):(1'h0)] wire32;
  wire signed [(2'h3):(1'h0)] wire21;
  wire [(3'h6):(1'h0)] wire20;
  wire signed [(4'hb):(1'h0)] wire19;
  wire signed [(2'h3):(1'h0)] wire18;
  wire [(3'h6):(1'h0)] wire17;
  reg [(3'h4):(1'h0)] reg40 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg39 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg38 = (1'h0);
  reg [(4'h9):(1'h0)] reg31 = (1'h0);
  reg [(4'ha):(1'h0)] reg30 = (1'h0);
  reg [(3'h7):(1'h0)] reg29 = (1'h0);
  reg [(2'h3):(1'h0)] reg28 = (1'h0);
  reg [(4'ha):(1'h0)] reg27 = (1'h0);
  reg [(3'h5):(1'h0)] reg26 = (1'h0);
  reg [(4'hb):(1'h0)] reg25 = (1'h0);
  reg [(4'h9):(1'h0)] reg24 = (1'h0);
  reg [(3'h5):(1'h0)] reg23 = (1'h0);
  reg [(4'ha):(1'h0)] reg22 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 reg40,
                 reg39,
                 reg38,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire17 = {(wire15[(1'h1):(1'h0)] ? wire16 : wire16)};
  assign wire18 = wire15[(1'h0):(1'h0)];
  assign wire19 = (+$signed(wire18[(2'h2):(2'h2)]));
  assign wire20 = wire18;
  assign wire21 = wire17;
  always
    @(posedge clk) begin
      if (wire18[(2'h3):(1'h1)])
        begin
          if ((wire15 * ($unsigned(((8'ha8) ?
              wire21 : wire17)) >>> ($unsigned(wire16) <<< $unsigned(wire20)))))
            begin
              reg22 <= (~^$unsigned({$unsigned(wire15)}));
              reg23 <= {$signed((~|$signed(wire16)))};
              reg24 <= $signed(wire21[(2'h3):(2'h3)]);
            end
          else
            begin
              reg22 <= $unsigned($unsigned(reg23[(2'h3):(1'h0)]));
              reg23 <= (&(reg24 ^ $unsigned(reg24)));
              reg24 <= $signed(wire13[(1'h1):(1'h0)]);
            end
        end
      else
        begin
          if ({wire13[(2'h3):(2'h2)]})
            begin
              reg22 <= wire21[(1'h0):(1'h0)];
              reg23 <= ((~^(^$unsigned(reg24))) - wire15[(2'h2):(2'h2)]);
            end
          else
            begin
              reg22 <= $unsigned(({(wire14 ? wire21 : wire21)} ?
                  $signed((wire20 - reg24)) : ((+reg23) ?
                      {wire17} : $signed(wire16))));
              reg23 <= (({(wire14 ? wire13 : wire14)} ?
                  $unsigned(((8'hac) ~^ reg24)) : {$unsigned(wire18)}) <= wire21[(2'h2):(1'h1)]);
              reg24 <= (|({(~|reg22)} ?
                  $signed((wire18 ? wire18 : wire14)) : ((~&wire15) ?
                      wire17 : (~^reg23))));
            end
          reg25 <= (wire13 * $signed(reg24[(4'h8):(2'h3)]));
          reg26 <= $signed(($unsigned(wire15) > $signed((wire18 <= wire21))));
        end
      if (wire21)
        begin
          reg27 <= wire18;
          if ($signed((~{(~&(8'ha1))})))
            begin
              reg28 <= ($unsigned(($signed(reg26) >>> $signed(reg24))) << $unsigned({$unsigned(reg26)}));
              reg29 <= wire15[(2'h2):(2'h2)];
              reg30 <= (&reg29[(3'h7):(1'h0)]);
            end
          else
            begin
              reg28 <= wire17[(3'h6):(1'h1)];
              reg29 <= $signed($signed($unsigned((reg26 + reg25))));
              reg30 <= $signed((~^$signed(wire19)));
            end
        end
      else
        begin
          reg27 <= (8'hb0);
          reg28 <= (((^~reg28) == (!$signed(reg25))) + ((~|(reg29 ?
                  reg29 : wire15)) ?
              (wire21[(2'h2):(1'h0)] ?
                  $signed(wire18) : reg27[(3'h7):(1'h1)]) : $unsigned($signed(wire18))));
          reg29 <= $signed(($unsigned($unsigned(reg24)) || ($signed((8'haa)) ?
              reg29[(3'h4):(2'h3)] : $unsigned((8'h9c)))));
        end
      reg31 <= $signed($signed($signed((wire21 == (8'haf)))));
    end
  assign wire32 = (wire15 << $unsigned((wire20[(3'h6):(2'h2)] + {reg27})));
  assign wire33 = ({(8'ha0)} ?
                      $signed(wire18) : {$unsigned(reg31[(3'h5):(1'h0)])});
  assign wire34 = reg23;
  assign wire35 = reg26;
  assign wire36 = $unsigned($signed(wire14));
  assign wire37 = $unsigned(reg24);
  always
    @(posedge clk) begin
      reg38 <= reg24[(1'h0):(1'h0)];
      reg39 <= (-(!reg22));
      reg40 <= (wire36[(1'h0):(1'h0)] < ({(~(8'hae))} ?
          {(wire21 ? wire14 : (8'ha2))} : $signed($unsigned(wire18))));
    end
endmodule