(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param75 = (|((((8'had) - (8'haf)) ^ (~|(8'h9c))) ? {((8'h9c) <<< (8'ha5))} : (((8'hb0) <= (8'haf)) ? ((8'haa) - (8'ha7)) : {(8'ha4)}))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire73;
  wire [(4'hb):(1'h0)] wire72;
  wire signed [(3'h5):(1'h0)] wire71;
  wire signed [(3'h4):(1'h0)] wire65;
  wire [(2'h2):(1'h0)] wire64;
  wire signed [(3'h6):(1'h0)] wire63;
  wire [(4'h9):(1'h0)] wire61;
  wire signed [(3'h5):(1'h0)] wire4;
  reg signed [(2'h3):(1'h0)] reg70 = (1'h0);
  reg [(3'h6):(1'h0)] reg69 = (1'h0);
  reg [(4'hb):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg67 = (1'h0);
  reg [(3'h4):(1'h0)] reg66 = (1'h0);
  assign y = {wire73,
                 wire72,
                 wire71,
                 wire65,
                 wire64,
                 wire63,
                 wire61,
                 wire4,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 (1'h0)};
  assign wire4 = ((wire1 & $signed((wire0 ?
                     wire3 : wire3))) - $unsigned(wire2[(1'h1):(1'h0)]));
  module5 #() modinst62 (wire61, clk, wire1, wire3, wire0, wire4);
  assign wire63 = (!$signed($signed({wire3})));
  assign wire64 = wire2[(2'h2):(2'h2)];
  assign wire65 = (wire64 & wire1);
  always
    @(posedge clk) begin
      if ($unsigned((({wire3} ? wire3 : {wire61}) >= {(!(8'ha8))})))
        begin
          reg66 <= ((wire64[(2'h2):(2'h2)] ?
                  $signed({wire63}) : {wire4[(2'h2):(2'h2)]}) ?
              ($unsigned((~^wire4)) >= wire61) : $signed(wire63[(1'h0):(1'h0)]));
          reg67 <= wire1;
          reg68 <= $unsigned($unsigned((8'ha7)));
        end
      else
        begin
          reg66 <= ($unsigned(wire1[(3'h6):(3'h4)]) ?
              $signed(((~^wire64) ?
                  wire61[(2'h2):(2'h2)] : $signed(wire63))) : wire2[(2'h2):(1'h0)]);
        end
      if ($signed(((8'haf) ? $signed(wire64) : {$unsigned(reg66)})))
        begin
          reg69 <= wire0;
          reg70 <= (~|$unsigned($signed($signed(wire1))));
        end
      else
        begin
          reg69 <= ($unsigned((((8'had) <<< reg69) <= wire64[(1'h1):(1'h0)])) == wire61);
          reg70 <= ($signed(((reg67 << wire65) ?
              reg66 : reg68[(3'h6):(3'h4)])) & (^~$signed(wire63[(3'h4):(2'h2)])));
        end
    end
  assign wire71 = ((wire64 ? reg70 : wire64[(1'h1):(1'h1)]) == (|wire61));
  assign wire72 = $signed(wire65);
  module5 #() modinst74 (wire73, clk, reg68, wire3, reg67, wire4);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param60 = ((((-(8'hb0)) & (~(8'ha8))) ? (((8'ha9) ? (8'h9c) : (8'ha3)) <<< {(8'ha6)}) : ((~&(8'h9e)) && ((8'ha7) ? (8'ha5) : (8'ha5)))) ^~ ((|(^~(8'ha0))) & (-((8'had) ? (8'ha2) : (8'ha8))))))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h7c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire8;
  input wire signed [(2'h3):(1'h0)] wire7;
  input wire signed [(3'h5):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire59;
  wire [(3'h5):(1'h0)] wire58;
  wire signed [(4'ha):(1'h0)] wire57;
  wire [(3'h5):(1'h0)] wire56;
  wire signed [(4'ha):(1'h0)] wire34;
  wire [(2'h3):(1'h0)] wire17;
  wire [(3'h4):(1'h0)] wire38;
  wire [(2'h2):(1'h0)] wire51;
  wire [(4'h9):(1'h0)] wire53;
  wire signed [(2'h3):(1'h0)] wire54;
  reg [(3'h4):(1'h0)] reg16 = (1'h0);
  reg [(4'h9):(1'h0)] reg15 = (1'h0);
  reg [(3'h7):(1'h0)] reg14 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  reg [(3'h6):(1'h0)] reg10 = (1'h0);
  reg [(4'hb):(1'h0)] reg36 = (1'h0);
  reg [(2'h2):(1'h0)] reg37 = (1'h0);
  assign y = {wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire34,
                 wire17,
                 wire38,
                 wire51,
                 wire53,
                 wire54,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg36,
                 reg37,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg10 <= (^$signed(wire7[(2'h2):(1'h1)]));
      reg11 <= $unsigned($unsigned((~|$signed(wire9))));
      if ($unsigned(((8'ha7) && $signed($signed((8'haf))))))
        begin
          if (($signed(reg10) == (reg11 > (^$signed(wire6)))))
            begin
              reg12 <= $unsigned({($signed(reg11) ?
                      {wire6} : $unsigned(wire6))});
              reg13 <= $signed((((8'ha4) ? (8'haa) : reg10) ?
                  (8'ha9) : (~^{reg10})));
            end
          else
            begin
              reg12 <= wire7[(2'h2):(1'h1)];
              reg13 <= ($signed(wire8) ?
                  (~&$unsigned((reg10 >>> wire8))) : (!{$signed((8'ha7))}));
              reg14 <= wire7;
            end
          reg15 <= reg12[(2'h3):(1'h1)];
          reg16 <= wire6;
        end
      else
        begin
          reg12 <= $unsigned($signed({reg16[(3'h4):(2'h3)]}));
          if ((8'h9c))
            begin
              reg13 <= reg12[(1'h1):(1'h1)];
            end
          else
            begin
              reg13 <= (((wire6 ? $signed(reg16) : (&wire7)) ?
                  (!$signed(reg11)) : $unsigned($unsigned(reg15))) ^~ (^{(&(8'haf))}));
              reg14 <= (-($unsigned($unsigned(reg16)) ?
                  $signed(((8'ha3) < reg11)) : reg14[(2'h3):(2'h3)]));
              reg15 <= wire7[(1'h1):(1'h1)];
            end
        end
    end
  assign wire17 = (^$signed(wire7));
  module18 #() modinst35 (wire34, clk, reg12, wire9, reg10, reg13);
  always
    @(posedge clk) begin
      reg36 <= ($unsigned($signed((wire17 ~^ reg16))) < (^$unsigned($signed(reg14))));
      reg37 <= {($signed({reg16}) ~^ $unsigned((wire17 < reg12)))};
    end
  assign wire38 = $signed(wire9[(4'h9):(1'h0)]);
  module39 #() modinst52 (wire51, clk, reg15, wire7, wire34, reg10);
  assign wire53 = (-reg36[(1'h0):(1'h0)]);
  module39 #() modinst55 (wire54, clk, reg13, wire6, reg11, reg15);
  assign wire56 = $unsigned((8'h9f));
  assign wire57 = $signed(wire34);
  assign wire58 = {$signed($signed({wire56}))};
  assign wire59 = ($signed(((+reg37) <= $unsigned(reg12))) + {$unsigned({wire58})});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module39  (y, clk, wire43, wire42, wire41, wire40);
  output wire [(32'h31):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire43;
  input wire [(2'h3):(1'h0)] wire42;
  input wire [(3'h7):(1'h0)] wire41;
  input wire [(3'h4):(1'h0)] wire40;
  wire [(4'h9):(1'h0)] wire49;
  wire [(3'h6):(1'h0)] wire48;
  wire signed [(4'h8):(1'h0)] wire47;
  wire [(4'h9):(1'h0)] wire44;
  reg [(2'h3):(1'h0)] reg50 = (1'h0);
  reg [(3'h7):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg45 = (1'h0);
  assign y = {wire49, wire48, wire47, wire44, reg50, reg46, reg45, (1'h0)};
  assign wire44 = wire43[(2'h2):(2'h2)];
  always
    @(posedge clk) begin
      reg45 <= $unsigned($unsigned(wire42));
      reg46 <= ($unsigned($signed(wire42)) ?
          wire44[(2'h3):(2'h3)] : ($signed($signed(wire42)) * reg45));
    end
  assign wire47 = (((wire41[(1'h1):(1'h1)] | wire44) ?
                      {(wire44 ^~ wire40)} : $unsigned(wire43[(1'h0):(1'h0)])) << $unsigned(((!wire43) ?
                      (8'ha3) : (^wire42))));
  assign wire48 = $unsigned($signed($unsigned($unsigned(wire42))));
  assign wire49 = ($signed($unsigned(((8'h9c) ~^ wire41))) + $unsigned((~wire42)));
  always
    @(posedge clk) begin
      reg50 <= wire43[(1'h0):(1'h0)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18
#(parameter param33 = {((((8'h9d) ? (8'ha2) : (8'ha7)) >= ((8'ha9) ? (8'haa) : (8'haf))) >= (8'ha6))})
(y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire22;
  input wire signed [(4'h8):(1'h0)] wire21;
  input wire [(3'h5):(1'h0)] wire20;
  input wire [(2'h3):(1'h0)] wire19;
  wire [(4'h9):(1'h0)] wire32;
  wire [(2'h2):(1'h0)] wire31;
  wire signed [(4'ha):(1'h0)] wire30;
  wire signed [(4'h8):(1'h0)] wire25;
  wire signed [(2'h3):(1'h0)] wire24;
  wire [(3'h5):(1'h0)] wire23;
  reg signed [(4'h9):(1'h0)] reg29 = (1'h0);
  reg [(2'h2):(1'h0)] reg28 = (1'h0);
  reg [(3'h4):(1'h0)] reg27 = (1'h0);
  reg [(2'h2):(1'h0)] reg26 = (1'h0);
  assign y = {wire32,
                 wire31,
                 wire30,
                 wire25,
                 wire24,
                 wire23,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire23 = (($unsigned(wire22) >= (((8'ha3) ? wire19 : wire20) ?
                          wire20[(2'h2):(2'h2)] : $signed(wire22))) ?
                      $signed(wire21) : (~$signed(wire20[(3'h5):(2'h2)])));
  assign wire24 = ($signed(((wire22 ~^ wire20) ?
                      wire19 : (^~wire21))) - ($unsigned($signed((8'h9f))) ?
                      wire23 : (8'ha5)));
  assign wire25 = (^~{(^(8'ha7))});
  always
    @(posedge clk) begin
      if (wire19[(2'h3):(2'h3)])
        begin
          reg26 <= (&((-wire19[(1'h0):(1'h0)]) ?
              (~^((8'ha3) ? wire24 : wire25)) : wire25));
          if (wire24[(1'h0):(1'h0)])
            begin
              reg27 <= (wire25 < (!({reg26} >= (wire24 ^~ (8'hb0)))));
              reg28 <= (~&(^(^$signed(wire24))));
            end
          else
            begin
              reg27 <= $unsigned((($signed(wire24) ?
                  (8'haa) : $signed(wire25)) ^~ (~wire23[(2'h3):(2'h3)])));
              reg28 <= $signed(wire19);
            end
        end
      else
        begin
          reg26 <= (^~($signed(wire21) ? reg26 : {(-wire25)}));
          reg27 <= ($signed($signed((wire20 ? wire20 : (8'ha1)))) ?
              $signed((|wire21[(2'h2):(1'h0)])) : (~&((8'ha5) ~^ wire22)));
        end
      reg29 <= $signed($signed(reg28[(2'h2):(1'h0)]));
    end
  assign wire30 = $signed((wire20 <= (((8'haa) ?
                      (8'hae) : wire19) & (|wire20))));
  assign wire31 = (^wire23);
  assign wire32 = (wire21[(1'h1):(1'h0)] ? wire23[(1'h0):(1'h0)] : (8'hb0));
endmodule