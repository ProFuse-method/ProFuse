(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h38):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire signed [(2'h2):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire5;
  wire signed [(2'h3):(1'h0)] wire4;
  reg signed [(4'ha):(1'h0)] reg10 = (1'h0);
  reg [(3'h6):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg7 = (1'h0);
  assign y = {wire6, wire5, wire4, reg10, reg9, reg8, reg7, (1'h0)};
  assign wire4 = wire2;
  assign wire5 = $signed((wire4 ?
                     wire2[(2'h2):(1'h0)] : ((~&wire3) ?
                         wire3 : $signed(wire1))));
  assign wire6 = $signed(((~&$signed(wire1)) ?
                     ({(8'ha8)} ? $unsigned(wire4) : wire5) : $unsigned((wire0 ?
                         wire3 : wire2))));
  always
    @(posedge clk) begin
      reg7 <= {$signed(wire0[(1'h0):(1'h0)])};
      reg8 <= {(8'hac)};
      if (((reg8[(3'h7):(1'h1)] ^~ (8'ha3)) ?
          {((wire0 >> (8'ha6)) ?
                  $signed(wire4) : $unsigned(wire2))} : (reg7 | wire4)))
        begin
          reg9 <= wire6;
          reg10 <= $unsigned($unsigned(wire6));
        end
      else
        begin
          reg9 <= reg7[(3'h7):(2'h3)];
        end
    end
endmodule