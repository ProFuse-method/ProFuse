(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h23d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h13):(1'h0)] wire0;
  input wire [(4'he):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire3;
  wire signed [(5'h12):(1'h0)] wire323;
  wire signed [(3'h5):(1'h0)] wire322;
  wire [(4'hb):(1'h0)] wire321;
  wire [(5'h13):(1'h0)] wire320;
  wire [(5'h12):(1'h0)] wire319;
  wire signed [(3'h5):(1'h0)] wire318;
  wire [(3'h7):(1'h0)] wire317;
  wire signed [(5'h10):(1'h0)] wire316;
  wire [(4'he):(1'h0)] wire315;
  wire [(4'he):(1'h0)] wire314;
  wire signed [(2'h3):(1'h0)] wire313;
  wire [(5'h15):(1'h0)] wire312;
  wire signed [(4'h9):(1'h0)] wire311;
  wire [(3'h5):(1'h0)] wire310;
  wire signed [(2'h3):(1'h0)] wire309;
  wire signed [(3'h4):(1'h0)] wire308;
  wire [(2'h2):(1'h0)] wire295;
  wire [(4'ha):(1'h0)] wire294;
  wire [(5'h14):(1'h0)] wire293;
  wire signed [(4'hc):(1'h0)] wire291;
  reg [(4'hb):(1'h0)] reg307 = (1'h0);
  reg [(3'h4):(1'h0)] reg305 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg303 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg300 = (1'h0);
  reg [(5'h11):(1'h0)] reg299 = (1'h0);
  reg [(4'hf):(1'h0)] reg297 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg20 = (1'h0);
  reg [(4'he):(1'h0)] reg18 = (1'h0);
  reg [(3'h5):(1'h0)] reg14 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg13 = (1'h0);
  reg [(4'hb):(1'h0)] reg10 = (1'h0);
  reg [(4'he):(1'h0)] reg9 = (1'h0);
  reg [(4'h9):(1'h0)] reg8 = (1'h0);
  reg [(5'h14):(1'h0)] reg7 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg304 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar299 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg298 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar297 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg296 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg306 = (1'h0);
  reg [(4'ha):(1'h0)] forvar304 = (1'h0);
  reg [(4'hf):(1'h0)] reg302 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg301 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar298 = (1'h0);
  reg [(2'h2):(1'h0)] forvar296 = (1'h0);
  reg [(3'h7):(1'h0)] reg19 = (1'h0);
  reg [(4'hf):(1'h0)] reg17 = (1'h0);
  reg [(5'h15):(1'h0)] forvar16 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg12 = (1'h0);
  reg [(3'h5):(1'h0)] forvar11 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar5 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar4 = (1'h0);
  assign y = {wire323,
                 wire322,
                 wire321,
                 wire320,
                 wire319,
                 wire318,
                 wire317,
                 wire316,
                 wire315,
                 wire314,
                 wire313,
                 wire312,
                 wire311,
                 wire310,
                 wire309,
                 wire308,
                 wire295,
                 wire294,
                 wire293,
                 wire291,
                 reg307,
                 reg305,
                 reg303,
                 reg300,
                 reg299,
                 reg297,
                 reg20,
                 reg18,
                 reg14,
                 reg13,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg304,
                 forvar299,
                 reg298,
                 forvar297,
                 reg296,
                 reg306,
                 forvar304,
                 reg302,
                 reg301,
                 forvar298,
                 forvar296,
                 reg19,
                 reg17,
                 forvar16,
                 reg15,
                 reg12,
                 forvar11,
                 reg6,
                 forvar5,
                 forvar4,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar4 = (1'h0); (forvar4 < (2'h3)); forvar4 = (forvar4 + (1'h1)))
        begin
          for (forvar5 = (1'h0); (forvar5 < (3'h4)); forvar5 = (forvar5 + (1'h1)))
            begin
              reg6 = $unsigned({((8'hb1) ~^ (forvar4[(2'h2):(1'h0)] ?
                      wire1[(1'h0):(1'h0)] : ((8'hb5) == forvar4))),
                  (|wire3)});
              reg7 <= forvar5[(3'h6):(1'h0)];
              reg8 <= (^~wire1);
              reg9 <= (~|reg6[(1'h1):(1'h0)]);
              reg10 <= {reg6[(1'h0):(1'h0)], wire0};
            end
          for (forvar11 = (1'h0); (forvar11 < (1'h0)); forvar11 = (forvar11 + (1'h1)))
            begin
              reg12 = (($signed((~|(^~reg6))) ?
                      $signed(wire2[(3'h6):(3'h5)]) : $signed((!forvar4))) ?
                  wire0[(3'h4):(2'h3)] : (8'ha8));
              reg13 <= (-reg10[(4'ha):(4'h8)]);
              reg14 <= (8'ha4);
              reg15 = $unsigned($unsigned($unsigned(reg13)));
            end
          for (forvar16 = (1'h0); (forvar16 < (2'h2)); forvar16 = (forvar16 + (1'h1)))
            begin
              reg17 = reg15[(1'h1):(1'h1)];
              reg18 <= $unsigned($signed(reg9));
            end
          reg19 = $unsigned((($unsigned($unsigned(reg13)) ?
                  (wire2[(4'h8):(2'h3)] ?
                      (~|(7'h43)) : $unsigned(reg10)) : (|(8'ha5))) ?
              wire3 : reg9));
          reg20 <= reg8[(4'h9):(3'h5)];
        end
    end
  module21 #() modinst292 (.wire25(wire1), .y(wire291), .wire23(reg18), .wire24(reg7), .wire26(reg9), .wire22(reg14), .clk(clk));
  assign wire293 = ({(8'h9e),
                       (wire291[(3'h6):(1'h0)] ?
                           (((8'hbe) ?
                               wire1 : reg14) << reg13[(2'h3):(2'h2)]) : wire3)} ^~ $unsigned((reg10 ?
                       ($unsigned(reg13) ? (^~wire2) : reg18) : {(8'ha4),
                           (-reg14)})));
  assign wire294 = wire2[(4'ha):(2'h3)];
  assign wire295 = reg20;
  always
    @(posedge clk) begin
      if ((&reg20[(4'ha):(3'h5)]))
        begin
          for (forvar296 = (1'h0); (forvar296 < (1'h1)); forvar296 = (forvar296 + (1'h1)))
            begin
              reg297 <= ({($unsigned((wire3 > (8'h9d))) + {(reg18 + (8'hb2))}),
                      wire294[(3'h6):(2'h3)]} ?
                  $signed(($signed((reg10 ?
                      reg8 : reg20)) <<< (^wire295))) : $signed(wire294));
            end
          for (forvar298 = (1'h0); (forvar298 < (2'h2)); forvar298 = (forvar298 + (1'h1)))
            begin
              reg299 <= ($unsigned($unsigned($signed((reg7 ?
                      reg18 : (8'hb3))))) ?
                  (wire3 ?
                      (wire293 ?
                          (&(forvar298 ~^ reg297)) : $signed({reg8})) : (({wire294,
                              wire3} && $signed(reg20)) ?
                          $unsigned((wire2 >> (8'hab))) : wire3[(3'h6):(3'h5)])) : ({reg14[(3'h5):(1'h1)],
                      $signed($signed((8'h9c)))} + reg10[(4'hb):(3'h4)]));
              reg300 <= $unsigned(((wire0 < reg13) ?
                  (((|reg20) ? $unsigned(wire3) : (8'hb4)) ?
                      reg297 : ((~^reg8) ^~ $signed(reg299))) : (($unsigned(reg297) >>> (|reg20)) < {$signed(reg14)})));
              reg301 = {wire2[(3'h6):(1'h0)]};
              reg302 = (((~{wire2, $unsigned(reg9)}) ?
                  $signed({$signed((8'ha4))}) : ((wire3 ?
                      $unsigned(reg7) : {reg20}) > ({reg14, wire291} ?
                      (reg20 >= forvar296) : wire291))) == $signed((|wire293[(5'h12):(2'h3)])));
            end
          reg303 <= wire1;
          for (forvar304 = (1'h0); (forvar304 < (2'h3)); forvar304 = (forvar304 + (1'h1)))
            begin
              reg305 <= {((8'hbb) ?
                      $signed($signed((wire0 ? wire1 : (8'hb8)))) : wire291),
                  reg301[(3'h5):(3'h4)]};
              reg306 = {forvar296[(2'h2):(2'h2)]};
              reg307 <= $signed((~|(wire294 & {((8'hbf) + (8'hb8)),
                  $signed(reg300)})));
            end
        end
      else
        begin
          reg296 = reg13;
          for (forvar297 = (1'h0); (forvar297 < (3'h4)); forvar297 = (forvar297 + (1'h1)))
            begin
              reg298 = (~^{$unsigned($unsigned((8'ha4)))});
            end
          for (forvar299 = (1'h0); (forvar299 < (2'h2)); forvar299 = (forvar299 + (1'h1)))
            begin
              reg301 = reg299;
              reg302 = ((8'h9f) ?
                  (&reg307[(4'hb):(4'ha)]) : {(+({forvar304, (8'hbe)} ?
                          reg13[(1'h0):(1'h0)] : $unsigned(forvar298)))});
              reg304 = {reg9[(4'ha):(3'h7)], {(8'hb9), reg300}};
            end
        end
    end
  assign wire308 = (8'ha9);
  assign wire309 = reg14[(2'h2):(2'h2)];
  assign wire310 = $signed(reg299[(1'h1):(1'h1)]);
  assign wire311 = reg300;
  assign wire312 = wire311;
  assign wire313 = ((wire3 != wire310) & $signed($signed($signed((^reg13)))));
  assign wire314 = reg297[(3'h5):(2'h3)];
  assign wire315 = (({(((8'ha2) - reg305) ~^ (wire311 ? wire291 : wire295)),
                       (reg9[(4'h8):(1'h1)] ?
                           wire294[(4'ha):(1'h1)] : $unsigned(wire311))} & (^~((reg8 ?
                       (8'hbf) : reg8) >> (reg14 - (8'hbc))))) >= {wire295[(2'h2):(1'h1)]});
  assign wire316 = (&(~|(($unsigned(wire312) == $unsigned(reg13)) ?
                       ({wire309,
                           reg9} == (reg8 && wire315)) : $unsigned({(8'h9e),
                           reg20}))));
  assign wire317 = ({(+$signed((wire308 <<< wire1))),
                       ((~(+wire2)) ?
                           $unsigned(wire293[(2'h3):(2'h3)]) : $signed(reg307[(3'h6):(1'h0)]))} < ({$unsigned($signed(reg299)),
                           ($unsigned(reg7) & $unsigned(wire0))} ?
                       ({wire316[(5'h10):(4'hc)]} ?
                           wire294 : $unsigned($unsigned(wire316))) : $signed(((8'h9d) ?
                           (wire312 ? reg8 : (8'hb1)) : {reg303}))));
  assign wire318 = reg7[(4'he):(3'h7)];
  assign wire319 = reg13[(1'h0):(1'h0)];
  assign wire320 = $signed(($signed($unsigned($signed(wire293))) & wire310[(2'h3):(2'h2)]));
  assign wire321 = $signed(wire312[(3'h4):(3'h4)]);
  assign wire322 = wire312;
  assign wire323 = (reg300[(1'h1):(1'h0)] ?
                       $unsigned((-wire317)) : {$unsigned($unsigned((wire309 ?
                               wire310 : (7'h44))))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21
#(parameter param289 = {(~&(~&(-{(8'ha4)})))}, 
parameter param290 = ((^(~{(param289 << param289), (param289 ? param289 : param289)})) ? (~&(7'h42)) : (((((8'hac) * param289) * (^param289)) ? param289 : (7'h43)) ? param289 : (param289 >= ({param289, param289} ? (param289 ? param289 : (8'hb8)) : (~&(8'haa)))))))
(y, clk, wire26, wire25, wire24, wire23, wire22);
  output wire [(32'h405):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire26;
  input wire signed [(4'he):(1'h0)] wire25;
  input wire [(5'h14):(1'h0)] wire24;
  input wire signed [(4'h8):(1'h0)] wire23;
  input wire [(3'h5):(1'h0)] wire22;
  wire [(4'hb):(1'h0)] wire288;
  wire signed [(2'h3):(1'h0)] wire287;
  wire signed [(5'h10):(1'h0)] wire267;
  wire [(4'hc):(1'h0)] wire122;
  wire [(4'he):(1'h0)] wire104;
  wire signed [(4'he):(1'h0)] wire89;
  wire [(2'h2):(1'h0)] wire88;
  wire [(4'hb):(1'h0)] wire86;
  wire signed [(4'hb):(1'h0)] wire46;
  wire signed [(4'h9):(1'h0)] wire45;
  wire signed [(2'h2):(1'h0)] wire44;
  wire [(5'h13):(1'h0)] wire43;
  wire signed [(5'h15):(1'h0)] wire42;
  wire [(5'h14):(1'h0)] wire41;
  wire [(4'h8):(1'h0)] wire30;
  wire signed [(5'h10):(1'h0)] wire29;
  wire [(4'he):(1'h0)] wire28;
  wire signed [(3'h4):(1'h0)] wire27;
  reg [(4'he):(1'h0)] reg285 = (1'h0);
  reg [(5'h15):(1'h0)] reg283 = (1'h0);
  reg [(4'he):(1'h0)] reg282 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg281 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg279 = (1'h0);
  reg [(5'h12):(1'h0)] reg273 = (1'h0);
  reg [(5'h11):(1'h0)] reg36 = (1'h0);
  reg [(4'hc):(1'h0)] reg37 = (1'h0);
  reg [(5'h11):(1'h0)] reg38 = (1'h0);
  reg [(5'h13):(1'h0)] reg39 = (1'h0);
  reg [(2'h2):(1'h0)] reg40 = (1'h0);
  reg [(5'h10):(1'h0)] reg47 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg50 = (1'h0);
  reg [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(4'h9):(1'h0)] reg52 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg54 = (1'h0);
  reg [(5'h14):(1'h0)] reg55 = (1'h0);
  reg [(4'h8):(1'h0)] reg90 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg92 = (1'h0);
  reg [(5'h13):(1'h0)] reg94 = (1'h0);
  reg [(3'h4):(1'h0)] reg98 = (1'h0);
  reg [(5'h14):(1'h0)] reg101 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg103 = (1'h0);
  reg [(5'h11):(1'h0)] reg108 = (1'h0);
  reg [(5'h11):(1'h0)] reg109 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg112 = (1'h0);
  reg [(2'h2):(1'h0)] reg113 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg114 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg116 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg117 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg118 = (1'h0);
  reg [(3'h6):(1'h0)] reg119 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg120 = (1'h0);
  reg [(3'h7):(1'h0)] reg121 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg286 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar284 = (1'h0);
  reg [(4'hc):(1'h0)] reg280 = (1'h0);
  reg [(5'h12):(1'h0)] reg278 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar277 = (1'h0);
  reg [(3'h4):(1'h0)] reg276 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg275 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg274 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar272 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar271 = (1'h0);
  reg [(3'h7):(1'h0)] reg270 = (1'h0);
  reg [(4'ha):(1'h0)] forvar269 = (1'h0);
  reg [(5'h13):(1'h0)] forvar115 = (1'h0);
  reg [(5'h11):(1'h0)] forvar111 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar110 = (1'h0);
  reg [(2'h3):(1'h0)] reg107 = (1'h0);
  reg [(3'h6):(1'h0)] forvar106 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar105 = (1'h0);
  reg [(3'h7):(1'h0)] reg102 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar100 = (1'h0);
  reg [(5'h11):(1'h0)] reg99 = (1'h0);
  reg [(5'h14):(1'h0)] forvar97 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg96 = (1'h0);
  reg [(4'h8):(1'h0)] reg95 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar93 = (1'h0);
  reg [(4'hf):(1'h0)] forvar91 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg53 = (1'h0);
  reg [(4'h8):(1'h0)] forvar49 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar48 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar35 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg34 = (1'h0);
  reg [(5'h11):(1'h0)] reg33 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar32 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar31 = (1'h0);
  assign y = {wire288,
                 wire287,
                 wire267,
                 wire122,
                 wire104,
                 wire89,
                 wire88,
                 wire86,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 reg285,
                 reg283,
                 reg282,
                 reg281,
                 reg279,
                 reg273,
                 reg36,
                 reg37,
                 reg38,
                 reg39,
                 reg40,
                 reg47,
                 reg50,
                 reg51,
                 reg52,
                 reg54,
                 reg55,
                 reg90,
                 reg92,
                 reg94,
                 reg98,
                 reg101,
                 reg103,
                 reg108,
                 reg109,
                 reg112,
                 reg113,
                 reg114,
                 reg116,
                 reg117,
                 reg118,
                 reg119,
                 reg120,
                 reg121,
                 reg286,
                 forvar284,
                 reg280,
                 reg278,
                 forvar277,
                 reg276,
                 reg275,
                 reg274,
                 forvar272,
                 forvar271,
                 reg270,
                 forvar269,
                 forvar115,
                 forvar111,
                 forvar110,
                 reg107,
                 forvar106,
                 forvar105,
                 reg102,
                 forvar100,
                 reg99,
                 forvar97,
                 reg96,
                 reg95,
                 forvar93,
                 forvar91,
                 reg53,
                 forvar49,
                 forvar48,
                 forvar35,
                 reg34,
                 reg33,
                 forvar32,
                 forvar31,
                 (1'h0)};
  assign wire27 = $unsigned($signed(wire22));
  assign wire28 = wire22;
  assign wire29 = {wire28[(4'he):(1'h0)]};
  assign wire30 = (|{wire25[(4'hc):(4'hc)],
                      $signed((wire24[(4'hd):(4'ha)] && {wire27, wire26}))});
  always
    @(posedge clk) begin
      for (forvar31 = (1'h0); (forvar31 < (2'h3)); forvar31 = (forvar31 + (1'h1)))
        begin
          for (forvar32 = (1'h0); (forvar32 < (3'h4)); forvar32 = (forvar32 + (1'h1)))
            begin
              reg33 = (forvar31[(1'h1):(1'h0)] ^~ (($unsigned(((8'hba) ?
                      (8'hb2) : forvar32)) ~^ (8'ha5)) ?
                  $signed((8'had)) : wire30));
              reg34 = $signed($signed(((^{reg33,
                  wire26}) && $signed((-(8'hb4))))));
            end
          for (forvar35 = (1'h0); (forvar35 < (2'h3)); forvar35 = (forvar35 + (1'h1)))
            begin
              reg36 <= ($signed((($unsigned(reg34) ?
                      {wire29} : $signed(forvar35)) ?
                  forvar31 : ($unsigned(reg33) ?
                      (&wire23) : {wire27, wire23}))) >= $signed(wire26));
              reg37 <= $unsigned(forvar32[(1'h0):(1'h0)]);
              reg38 <= reg33;
              reg39 <= (8'ha3);
            end
          reg40 <= (wire28[(4'h9):(2'h2)] ~^ (reg34[(4'h8):(3'h6)] >>> forvar35));
        end
    end
  assign wire41 = (^~$signed(wire23[(2'h2):(1'h1)]));
  assign wire42 = wire24;
  assign wire43 = $signed($signed($unsigned((reg37[(3'h6):(3'h4)] ?
                      wire30[(3'h4):(2'h2)] : ((8'hb5) <= wire25)))));
  assign wire44 = ((wire24 ? wire30[(1'h0):(1'h0)] : $unsigned(wire22)) ?
                      $unsigned($signed((!reg37[(3'h4):(2'h2)]))) : ($unsigned((((8'ha4) ?
                                  wire29 : wire25) ?
                              $signed(wire43) : wire23[(2'h3):(2'h3)])) ?
                          $signed(((reg39 ?
                              reg39 : reg40) ~^ $unsigned(wire28))) : (((&wire41) ?
                              wire29 : (wire28 ?
                                  wire41 : reg37)) & ({wire43} ~^ ((8'hbf) ?
                              wire29 : wire24)))));
  assign wire45 = (+wire27[(1'h1):(1'h1)]);
  assign wire46 = $signed(wire29);
  always
    @(posedge clk) begin
      reg47 <= (8'hbe);
      for (forvar48 = (1'h0); (forvar48 < (3'h4)); forvar48 = (forvar48 + (1'h1)))
        begin
          for (forvar49 = (1'h0); (forvar49 < (3'h4)); forvar49 = (forvar49 + (1'h1)))
            begin
              reg50 <= (forvar48 >>> $signed(wire42));
              reg51 <= ((~$unsigned(wire23)) >> $unsigned((reg39 >= wire22[(1'h0):(1'h0)])));
              reg52 <= wire22;
              reg53 = ($unsigned(($signed(wire23) ?
                  {$signed(wire28),
                      $unsigned(reg50)} : (-(wire23 && reg37)))) && ($unsigned($signed($unsigned(reg40))) ^ (^(wire24[(4'h8):(1'h1)] ?
                  wire43 : wire23))));
            end
          reg54 <= wire27;
          reg55 <= (|$unsigned($signed(($unsigned(wire27) ?
              {wire30, (7'h43)} : $signed(reg53)))));
        end
    end
  module56 #() modinst87 (wire86, clk, reg38, reg37, reg55, reg52);
  assign wire88 = reg40;
  assign wire89 = ((((^~$signed(wire44)) >>> (~^{wire41})) >= $signed($signed({(8'hbf),
                      wire43}))) ^ (reg47[(4'hd):(3'h4)] ? wire23 : reg52));
  always
    @(posedge clk) begin
      reg90 <= $signed({reg50[(1'h1):(1'h1)]});
      for (forvar91 = (1'h0); (forvar91 < (1'h1)); forvar91 = (forvar91 + (1'h1)))
        begin
          reg92 <= (8'hb9);
          for (forvar93 = (1'h0); (forvar93 < (1'h1)); forvar93 = (forvar93 + (1'h1)))
            begin
              reg94 <= (8'ha5);
              reg95 = (&wire41[(3'h6):(2'h3)]);
              reg96 = $signed((^$signed((~&reg38))));
            end
          for (forvar97 = (1'h0); (forvar97 < (3'h4)); forvar97 = (forvar97 + (1'h1)))
            begin
              reg98 <= wire42[(4'hc):(4'hc)];
            end
          reg99 = ($unsigned(reg40[(2'h2):(1'h0)]) ?
              $signed($signed($signed(wire26[(1'h1):(1'h1)]))) : $unsigned(reg50[(2'h3):(1'h0)]));
          for (forvar100 = (1'h0); (forvar100 < (1'h1)); forvar100 = (forvar100 + (1'h1)))
            begin
              reg101 <= (|$signed(($unsigned(wire42) >> reg99[(2'h3):(1'h1)])));
              reg102 = ($signed((^(^wire86))) || $signed($unsigned((~$unsigned(forvar100)))));
              reg103 <= $signed((((|(reg38 ? wire46 : (7'h43))) >>> ({reg94,
                      reg52} & (reg38 ? reg99 : (8'h9f)))) ?
                  ((+$signed(wire26)) ?
                      reg38[(2'h3):(2'h2)] : {(wire45 ? wire30 : reg98),
                          $unsigned((8'had))}) : reg47));
            end
        end
    end
  assign wire104 = $signed($unsigned((($signed(wire27) << ((8'hab) ?
                           wire42 : (8'hb0))) ?
                       (!reg90[(3'h5):(3'h5)]) : ((8'hab) ?
                           (reg47 ? reg52 : wire44) : ((8'hb5) ?
                               wire24 : wire41)))));
  always
    @(posedge clk) begin
      for (forvar105 = (1'h0); (forvar105 < (1'h0)); forvar105 = (forvar105 + (1'h1)))
        begin
          for (forvar106 = (1'h0); (forvar106 < (2'h2)); forvar106 = (forvar106 + (1'h1)))
            begin
              reg107 = ((^$unsigned((~reg94))) >>> ({(reg55 ?
                      (wire22 ? reg92 : wire24) : reg101[(2'h2):(2'h2)]),
                  ($signed(reg40) ? wire42 : wire88)} ^~ (~&$unsigned({wire86,
                  reg51}))));
              reg108 <= reg103[(4'hf):(4'h9)];
              reg109 <= (reg50 - ($signed($unsigned({reg47})) == (!reg108[(3'h5):(3'h4)])));
            end
        end
      for (forvar110 = (1'h0); (forvar110 < (1'h1)); forvar110 = (forvar110 + (1'h1)))
        begin
          for (forvar111 = (1'h0); (forvar111 < (1'h1)); forvar111 = (forvar111 + (1'h1)))
            begin
              reg112 <= ((reg39 <= (8'had)) ? forvar111 : wire44);
            end
          reg113 <= $unsigned((-($signed($unsigned(wire86)) ?
              $signed((reg51 ? reg94 : wire22)) : $unsigned(wire42))));
          reg114 <= (reg92 && $signed(wire22[(1'h1):(1'h0)]));
          for (forvar115 = (1'h0); (forvar115 < (1'h0)); forvar115 = (forvar115 + (1'h1)))
            begin
              reg116 <= {((^~wire24) ^ reg54),
                  (reg94 ~^ (^(+$unsigned((8'ha6)))))};
              reg117 <= {((8'hb9) >> reg50)};
              reg118 <= (reg114 ? (~&(~^reg114)) : reg103[(4'ha):(3'h4)]);
              reg119 <= ((&(!($signed(wire23) != $signed(reg108)))) && wire45);
              reg120 <= wire86[(2'h2):(1'h1)];
            end
          reg121 <= reg39[(5'h10):(1'h0)];
        end
    end
  assign wire122 = (^~{(~&$unsigned(wire42[(3'h6):(3'h4)]))});
  module123 #() modinst268 (wire267, clk, wire26, wire29, reg117, wire43, wire42);
  always
    @(posedge clk) begin
      for (forvar269 = (1'h0); (forvar269 < (2'h2)); forvar269 = (forvar269 + (1'h1)))
        begin
          reg270 = $signed($signed((~^wire29[(2'h3):(1'h0)])));
        end
      for (forvar271 = (1'h0); (forvar271 < (1'h0)); forvar271 = (forvar271 + (1'h1)))
        begin
          for (forvar272 = (1'h0); (forvar272 < (2'h3)); forvar272 = (forvar272 + (1'h1)))
            begin
              reg273 <= ($unsigned(($signed($unsigned(wire45)) | ($signed(forvar271) ?
                      reg90 : (wire22 ? (8'hac) : reg117)))) ?
                  (&$signed((((8'hbb) ? reg54 : wire25) ?
                      {reg50} : forvar271))) : ({((reg39 <= reg94) ?
                          $signed(reg40) : (wire43 ? reg119 : reg40)),
                      wire23[(2'h3):(1'h0)]} ^ {$unsigned((~&wire45)),
                      ((reg55 >= wire30) ? {reg120, reg39} : (|reg92))}));
              reg274 = (~&reg103[(4'hb):(4'hb)]);
              reg275 = (~&(~^{($signed(wire46) != wire23[(1'h1):(1'h0)]),
                  wire86}));
              reg276 = reg40[(2'h2):(1'h1)];
            end
          for (forvar277 = (1'h0); (forvar277 < (2'h3)); forvar277 = (forvar277 + (1'h1)))
            begin
              reg278 = {($signed(($signed(wire43) >>> $unsigned(reg50))) ?
                      reg92 : $unsigned(((|wire86) & (reg39 && reg94))))};
              reg279 <= (~$signed((8'hbf)));
              reg280 = (~((~^{wire88[(1'h0):(1'h0)]}) ?
                  $unsigned(((wire30 >> reg36) >= {(8'hb6)})) : (8'hbe)));
              reg281 <= (~^$unsigned(reg92[(2'h3):(2'h3)]));
              reg282 <= ({reg37[(4'h9):(1'h1)],
                      ((-reg40) <<< {(forvar269 <<< reg279),
                          $unsigned(reg109)})} ?
                  (wire27 ?
                      reg36[(3'h4):(3'h4)] : (reg103[(4'hf):(4'hc)] ?
                          (-(-(8'ha1))) : $unsigned((~&reg54)))) : (&wire28));
            end
          reg283 <= $signed($signed($unsigned($unsigned((~|(8'ha8))))));
          for (forvar284 = (1'h0); (forvar284 < (3'h4)); forvar284 = (forvar284 + (1'h1)))
            begin
              reg285 <= (reg51[(3'h7):(2'h2)] ?
                  (~|reg98) : ((8'hb8) ?
                      {(^~$unsigned(forvar277))} : $signed(((wire43 ?
                              (8'hb3) : reg109) ?
                          (~|(8'haf)) : reg39))));
              reg286 = $unsigned({(^~(wire86 * reg55)),
                  ({reg116[(1'h0):(1'h0)]} & (reg278[(4'hd):(4'ha)] >> $signed((8'ha3))))});
            end
        end
    end
  assign wire287 = $unsigned($unsigned((((-reg109) <= (reg52 - wire88)) != ((wire45 || wire22) || $unsigned(reg273)))));
  assign wire288 = (+{$unsigned((^(reg109 ^ reg118)))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module123
#(parameter param265 = {(((8'hae) ? (((7'h43) ? (8'hba) : (8'hba)) ? ((8'ha0) > (8'ha5)) : ((8'hba) - (7'h40))) : ((8'hbe) == (!(8'ha4)))) ? (({(8'ha3)} ? ((7'h42) != (8'hb3)) : {(8'ha6)}) ? (-(^~(8'hbe))) : {((8'h9d) ? (8'hb0) : (8'ha0)), (^~(8'hbd))}) : ({(!(8'hbc))} ? (~(+(8'h9d))) : (!{(8'ha4), (8'hb8)})))}, 
parameter param266 = {(^~(((param265 ~^ param265) ? param265 : (param265 && param265)) ~^ param265))})
(y, clk, wire128, wire127, wire126, wire125, wire124);
  output wire [(32'h5a3):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire128;
  input wire [(2'h3):(1'h0)] wire127;
  input wire [(5'h12):(1'h0)] wire126;
  input wire signed [(4'hf):(1'h0)] wire125;
  input wire [(4'hc):(1'h0)] wire124;
  wire signed [(4'hc):(1'h0)] wire200;
  wire [(4'h9):(1'h0)] wire199;
  wire signed [(4'h8):(1'h0)] wire198;
  wire signed [(5'h13):(1'h0)] wire197;
  wire [(4'h8):(1'h0)] wire178;
  wire [(4'hd):(1'h0)] wire177;
  wire signed [(3'h4):(1'h0)] wire176;
  wire signed [(4'he):(1'h0)] wire175;
  wire [(4'hf):(1'h0)] wire174;
  wire signed [(4'ha):(1'h0)] wire173;
  wire [(3'h5):(1'h0)] wire172;
  wire signed [(2'h2):(1'h0)] wire134;
  wire signed [(5'h11):(1'h0)] wire133;
  wire signed [(2'h2):(1'h0)] wire132;
  wire [(4'hc):(1'h0)] wire131;
  wire signed [(4'hb):(1'h0)] wire130;
  wire [(4'h9):(1'h0)] wire129;
  reg [(4'he):(1'h0)] reg259 = (1'h0);
  reg [(4'hd):(1'h0)] reg258 = (1'h0);
  reg [(2'h3):(1'h0)] reg256 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg251 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg250 = (1'h0);
  reg [(3'h4):(1'h0)] reg248 = (1'h0);
  reg [(4'hb):(1'h0)] reg246 = (1'h0);
  reg [(4'hc):(1'h0)] reg241 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg239 = (1'h0);
  reg [(3'h5):(1'h0)] reg238 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg236 = (1'h0);
  reg [(4'ha):(1'h0)] reg234 = (1'h0);
  reg [(4'hf):(1'h0)] reg231 = (1'h0);
  reg [(5'h10):(1'h0)] reg230 = (1'h0);
  reg [(2'h2):(1'h0)] reg229 = (1'h0);
  reg [(2'h2):(1'h0)] reg226 = (1'h0);
  reg [(4'he):(1'h0)] reg225 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg221 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg220 = (1'h0);
  reg [(2'h3):(1'h0)] reg217 = (1'h0);
  reg [(4'hc):(1'h0)] reg215 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg206 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg205 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg203 = (1'h0);
  reg [(3'h5):(1'h0)] reg202 = (1'h0);
  reg [(4'h8):(1'h0)] reg196 = (1'h0);
  reg [(4'ha):(1'h0)] reg193 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg192 = (1'h0);
  reg [(4'hd):(1'h0)] reg191 = (1'h0);
  reg [(5'h15):(1'h0)] reg182 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg181 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg171 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg169 = (1'h0);
  reg [(3'h4):(1'h0)] reg166 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg162 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg161 = (1'h0);
  reg [(4'ha):(1'h0)] reg159 = (1'h0);
  reg [(5'h14):(1'h0)] reg156 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg150 = (1'h0);
  reg [(2'h3):(1'h0)] reg149 = (1'h0);
  reg [(4'he):(1'h0)] reg147 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg144 = (1'h0);
  reg [(5'h10):(1'h0)] reg143 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg142 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg141 = (1'h0);
  reg [(2'h3):(1'h0)] reg139 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg137 = (1'h0);
  reg [(5'h10):(1'h0)] reg136 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg264 = (1'h0);
  reg [(5'h15):(1'h0)] reg263 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg262 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar261 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar260 = (1'h0);
  reg [(4'hc):(1'h0)] reg257 = (1'h0);
  reg [(5'h15):(1'h0)] forvar255 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar254 = (1'h0);
  reg [(3'h7):(1'h0)] reg253 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar252 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar249 = (1'h0);
  reg [(4'hc):(1'h0)] reg247 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg245 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg244 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar243 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar242 = (1'h0);
  reg [(3'h5):(1'h0)] forvar240 = (1'h0);
  reg [(2'h2):(1'h0)] reg237 = (1'h0);
  reg [(4'hf):(1'h0)] forvar235 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg233 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg232 = (1'h0);
  reg [(4'h9):(1'h0)] forvar228 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar227 = (1'h0);
  reg [(5'h13):(1'h0)] forvar224 = (1'h0);
  reg [(5'h14):(1'h0)] reg223 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg222 = (1'h0);
  reg [(5'h12):(1'h0)] forvar219 = (1'h0);
  reg [(4'ha):(1'h0)] reg218 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg216 = (1'h0);
  reg [(2'h2):(1'h0)] reg214 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar213 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar212 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg211 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg210 = (1'h0);
  reg [(4'hd):(1'h0)] reg209 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar208 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg207 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar204 = (1'h0);
  reg [(5'h12):(1'h0)] forvar201 = (1'h0);
  reg [(5'h11):(1'h0)] reg195 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg194 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar190 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg189 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar188 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg187 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar186 = (1'h0);
  reg [(3'h5):(1'h0)] reg185 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar184 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg183 = (1'h0);
  reg [(4'hd):(1'h0)] forvar180 = (1'h0);
  reg [(5'h15):(1'h0)] forvar179 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg170 = (1'h0);
  reg [(5'h10):(1'h0)] reg168 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar167 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar165 = (1'h0);
  reg [(5'h15):(1'h0)] reg164 = (1'h0);
  reg [(3'h5):(1'h0)] reg163 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar160 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg158 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg157 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg155 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar154 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar153 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg152 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar151 = (1'h0);
  reg [(4'hc):(1'h0)] reg148 = (1'h0);
  reg [(3'h4):(1'h0)] forvar146 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg145 = (1'h0);
  reg [(4'ha):(1'h0)] forvar140 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg138 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar135 = (1'h0);
  assign y = {wire200,
                 wire199,
                 wire198,
                 wire197,
                 wire178,
                 wire177,
                 wire176,
                 wire175,
                 wire174,
                 wire173,
                 wire172,
                 wire134,
                 wire133,
                 wire132,
                 wire131,
                 wire130,
                 wire129,
                 reg259,
                 reg258,
                 reg256,
                 reg251,
                 reg250,
                 reg248,
                 reg246,
                 reg241,
                 reg239,
                 reg238,
                 reg236,
                 reg234,
                 reg231,
                 reg230,
                 reg229,
                 reg226,
                 reg225,
                 reg221,
                 reg220,
                 reg217,
                 reg215,
                 reg206,
                 reg205,
                 reg203,
                 reg202,
                 reg196,
                 reg193,
                 reg192,
                 reg191,
                 reg182,
                 reg181,
                 reg171,
                 reg169,
                 reg166,
                 reg162,
                 reg161,
                 reg159,
                 reg156,
                 reg150,
                 reg149,
                 reg147,
                 reg144,
                 reg143,
                 reg142,
                 reg141,
                 reg139,
                 reg137,
                 reg136,
                 reg264,
                 reg263,
                 reg262,
                 forvar261,
                 forvar260,
                 reg257,
                 forvar255,
                 forvar254,
                 reg253,
                 forvar252,
                 forvar249,
                 reg247,
                 reg245,
                 reg244,
                 forvar243,
                 forvar242,
                 forvar240,
                 reg237,
                 forvar235,
                 reg233,
                 reg232,
                 forvar228,
                 forvar227,
                 forvar224,
                 reg223,
                 reg222,
                 forvar219,
                 reg218,
                 reg216,
                 reg214,
                 forvar213,
                 forvar212,
                 reg211,
                 reg210,
                 reg209,
                 forvar208,
                 reg207,
                 forvar204,
                 forvar201,
                 reg195,
                 reg194,
                 forvar190,
                 reg189,
                 forvar188,
                 reg187,
                 forvar186,
                 reg185,
                 forvar184,
                 reg183,
                 forvar180,
                 forvar179,
                 reg170,
                 reg168,
                 forvar167,
                 forvar165,
                 reg164,
                 reg163,
                 forvar160,
                 reg158,
                 reg157,
                 reg155,
                 forvar154,
                 forvar153,
                 reg152,
                 forvar151,
                 reg148,
                 forvar146,
                 reg145,
                 forvar140,
                 reg138,
                 forvar135,
                 (1'h0)};
  assign wire129 = (8'hb0);
  assign wire130 = wire124[(4'ha):(3'h6)];
  assign wire131 = (wire127[(2'h2):(1'h0)] ?
                       ($unsigned(((wire128 ?
                               wire130 : wire128) >= wire128[(1'h1):(1'h0)])) ?
                           (($signed(wire127) ?
                               wire129 : wire130) == (~&((7'h44) ^ wire125))) : $unsigned(($unsigned(wire125) ?
                               (!wire126) : wire124))) : wire130);
  assign wire132 = wire127[(2'h2):(2'h2)];
  assign wire133 = wire126[(3'h7):(2'h2)];
  assign wire134 = wire130[(4'ha):(1'h0)];
  always
    @(posedge clk) begin
      for (forvar135 = (1'h0); (forvar135 < (1'h0)); forvar135 = (forvar135 + (1'h1)))
        begin
          reg136 <= wire134;
          if ($unsigned(wire129))
            begin
              reg137 <= (((wire125[(1'h1):(1'h0)] ^ ($signed(wire127) > (wire128 || wire127))) ?
                  wire130[(3'h7):(3'h7)] : (reg136 ?
                      wire133 : (((8'hb5) >>> (8'h9e)) >> $signed(forvar135)))) >>> wire128);
              reg138 = $unsigned((^({wire134} - wire134)));
              reg139 <= $unsigned((&$signed(wire134)));
            end
          else
            begin
              reg138 = $signed((wire126 ?
                  ($unsigned((~reg137)) < ((~reg138) >>> (wire131 ?
                      wire128 : reg136))) : wire133));
              reg139 <= wire130[(4'h9):(3'h7)];
            end
          for (forvar140 = (1'h0); (forvar140 < (1'h0)); forvar140 = (forvar140 + (1'h1)))
            begin
              reg141 <= forvar135[(2'h2):(1'h0)];
              reg142 <= ((reg138 ? (wire127 + reg139) : wire130) ?
                  (!(((wire133 < forvar135) ?
                      $signed((7'h40)) : (reg137 | wire130)) & $unsigned((reg136 >> wire131)))) : wire130[(3'h5):(1'h0)]);
              reg143 <= ($unsigned(reg137) ?
                  forvar135 : (|forvar135[(1'h1):(1'h1)]));
              reg144 <= (((^reg139) ?
                  forvar135 : {{$signed(wire125), wire127[(1'h0):(1'h0)]},
                      {{wire131}, $unsigned((7'h41))}}) >> reg139);
              reg145 = reg143;
            end
          for (forvar146 = (1'h0); (forvar146 < (3'h4)); forvar146 = (forvar146 + (1'h1)))
            begin
              reg147 <= wire125;
              reg148 = (wire128[(4'h8):(3'h7)] || wire124[(4'h9):(2'h2)]);
              reg149 <= $signed(((|$unsigned(wire130)) ^ $signed(wire127)));
              reg150 <= ((~|$unsigned(wire129[(3'h6):(1'h1)])) << ((~^($signed(wire130) ?
                  wire130 : $signed(wire129))) != (^(-reg141[(1'h0):(1'h0)]))));
            end
          for (forvar151 = (1'h0); (forvar151 < (1'h1)); forvar151 = (forvar151 + (1'h1)))
            begin
              reg152 = (({($signed(forvar151) ?
                              ((8'ha2) || (8'hbb)) : {wire127, (8'ha3)})} ?
                      (((reg145 ?
                          reg142 : wire134) << (reg148 | reg136)) <<< (~(~^(8'hb7)))) : ($signed((~(8'hae))) ?
                          ((^reg147) << reg138) : ((!wire128) || (8'h9d)))) ?
                  (~|{reg147, $signed(wire126)}) : (wire129[(3'h6):(3'h5)] ?
                      reg145 : wire127[(1'h0):(1'h0)]));
            end
        end
      for (forvar153 = (1'h0); (forvar153 < (3'h4)); forvar153 = (forvar153 + (1'h1)))
        begin
          for (forvar154 = (1'h0); (forvar154 < (1'h1)); forvar154 = (forvar154 + (1'h1)))
            begin
              reg155 = ((({(^forvar140),
                          {reg147,
                              reg138}} + $unsigned(reg142[(3'h7):(1'h1)])) ?
                      (((reg143 ?
                          wire131 : (8'haf)) >> {wire132}) < (~|(wire130 > forvar151))) : wire128) ?
                  $unsigned(wire129) : (8'ha9));
              reg156 <= $signed($signed($signed(forvar151)));
              reg157 = {reg149};
              reg158 = ((-$unsigned(reg148[(4'ha):(2'h2)])) ~^ (wire129[(2'h3):(2'h2)] ?
                  {({(8'ha1)} ? (-reg156) : forvar154),
                      wire132[(2'h2):(1'h0)]} : {reg145[(4'hc):(1'h0)]}));
              reg159 <= reg136;
            end
          for (forvar160 = (1'h0); (forvar160 < (1'h1)); forvar160 = (forvar160 + (1'h1)))
            begin
              reg161 <= (-($signed(reg141) > (((forvar146 ?
                      reg148 : reg155) - ((7'h43) ? wire133 : reg152)) ?
                  $unsigned((~^forvar135)) : reg141)));
              reg162 <= ((|$unsigned($unsigned(wire129))) > ((&((~^(7'h44)) ?
                  $unsigned(reg136) : {forvar160,
                      wire126})) >= (!reg155[(2'h3):(2'h2)])));
              reg163 = (({$signed({wire124})} ?
                  ($signed((-wire131)) && $unsigned((reg142 + forvar135))) : ((reg161 < (!(7'h43))) ^ wire129[(2'h3):(2'h2)])) << $unsigned(($signed((wire126 ~^ reg161)) ?
                  $unsigned($signed(reg136)) : $signed((reg138 ?
                      (8'ha7) : wire134)))));
              reg164 = (wire126 & wire125[(3'h7):(3'h5)]);
            end
        end
      for (forvar165 = (1'h0); (forvar165 < (2'h3)); forvar165 = (forvar165 + (1'h1)))
        begin
          reg166 <= wire126[(4'ha):(3'h6)];
          for (forvar167 = (1'h0); (forvar167 < (1'h1)); forvar167 = (forvar167 + (1'h1)))
            begin
              reg168 = $unsigned((reg144[(2'h2):(2'h2)] ?
                  $unsigned(((reg163 ? reg149 : forvar151) ?
                      {(8'hbd),
                          (8'hbc)} : reg158)) : (~&{(wire127 >= reg158)})));
              reg169 <= reg152;
              reg170 = ((wire133 << forvar160) ?
                  ((^~($signed(forvar153) ? (^reg161) : (reg166 * forvar165))) ?
                      ($signed((^(8'had))) ?
                          (~&reg168[(1'h0):(1'h0)]) : (~((8'hb6) & forvar167))) : (-$signed(reg144))) : (~^($unsigned((^~reg142)) && (|$signed(wire126)))));
              reg171 <= (|reg162[(2'h3):(1'h0)]);
            end
        end
    end
  assign wire172 = $signed(reg149[(2'h2):(2'h2)]);
  assign wire173 = ($signed(wire126) ?
                       (reg147[(3'h4):(1'h1)] << ({$unsigned(wire128)} > ($unsigned(wire125) ?
                           $signed(wire127) : reg141[(1'h1):(1'h1)]))) : reg147);
  assign wire174 = ($signed(((+(8'hb9)) ?
                           (~|$unsigned(reg171)) : $signed((wire132 ?
                               reg149 : reg161)))) ?
                       $signed($unsigned((wire134[(1'h1):(1'h0)] ?
                           (reg161 ?
                               (8'hb0) : wire130) : wire133))) : $unsigned($signed((wire132 | (reg149 == (8'ha3))))));
  assign wire175 = (^~$signed($unsigned($unsigned((wire126 ?
                       reg139 : (8'hb2))))));
  assign wire176 = (-reg147);
  assign wire177 = $signed(({(^$unsigned(wire174)),
                       (&wire132[(1'h0):(1'h0)])} ~^ $signed(wire176[(1'h1):(1'h1)])));
  assign wire178 = (((~|((reg137 ? reg159 : reg171) ?
                               $unsigned(wire131) : (reg169 ?
                                   wire132 : reg166))) ?
                           reg169[(1'h0):(1'h0)] : wire174) ?
                       (~wire134) : wire127);
  always
    @(posedge clk) begin
      for (forvar179 = (1'h0); (forvar179 < (3'h4)); forvar179 = (forvar179 + (1'h1)))
        begin
          for (forvar180 = (1'h0); (forvar180 < (2'h2)); forvar180 = (forvar180 + (1'h1)))
            begin
              reg181 <= wire175;
              reg182 <= (($signed({(reg141 ? wire128 : wire130), wire177}) ?
                      $signed({(reg156 ^ (7'h42))}) : (wire175[(4'hb):(3'h7)] << (reg162 ?
                          ((8'hb8) <= wire132) : {wire178, wire125}))) ?
                  $unsigned((-((wire124 - wire131) >= {reg147}))) : ($unsigned((~|(reg162 ?
                      wire175 : (8'hbf)))) * (~^(&(wire178 ?
                      reg142 : wire175)))));
              reg183 = wire134;
            end
          for (forvar184 = (1'h0); (forvar184 < (2'h3)); forvar184 = (forvar184 + (1'h1)))
            begin
              reg185 = (~$signed((^~$unsigned($unsigned(reg136)))));
            end
          for (forvar186 = (1'h0); (forvar186 < (1'h0)); forvar186 = (forvar186 + (1'h1)))
            begin
              reg187 = (|(!$signed(wire127[(2'h2):(2'h2)])));
            end
          for (forvar188 = (1'h0); (forvar188 < (3'h4)); forvar188 = (forvar188 + (1'h1)))
            begin
              reg189 = {((~|(wire172 ?
                      (&(8'hbb)) : (wire175 < (8'h9f)))) & (-$unsigned($unsigned(wire134))))};
            end
          for (forvar190 = (1'h0); (forvar190 < (1'h0)); forvar190 = (forvar190 + (1'h1)))
            begin
              reg191 <= (reg149 - (reg159 ?
                  reg139[(1'h1):(1'h1)] : ($signed(((8'hb8) && wire174)) <= ((~reg136) > $unsigned(reg139)))));
              reg192 <= reg191[(1'h1):(1'h0)];
              reg193 <= (&((&wire129) <= ($unsigned($unsigned(wire133)) != {wire177,
                  $signed((8'ha8))})));
              reg194 = (~|reg136[(4'hf):(1'h1)]);
              reg195 = wire178;
            end
        end
      reg196 <= $unsigned({$unsigned((+$signed((8'hbc))))});
    end
  assign wire197 = $unsigned((8'hbe));
  assign wire198 = $signed(($unsigned({(+wire124)}) << (reg161[(1'h0):(1'h0)] <= wire178[(1'h0):(1'h0)])));
  assign wire199 = (8'had);
  assign wire200 = ($signed(((8'hab) ?
                           (reg171 ~^ $signed(reg192)) : reg147[(1'h0):(1'h0)])) ?
                       reg143[(1'h1):(1'h0)] : $signed(((wire129 * $signed((8'ha9))) >= $signed((reg137 || wire176)))));
  always
    @(posedge clk) begin
      for (forvar201 = (1'h0); (forvar201 < (3'h4)); forvar201 = (forvar201 + (1'h1)))
        begin
          reg202 <= $signed({{{(wire129 ? wire197 : wire128)}}});
          reg203 <= wire177[(2'h3):(1'h0)];
          for (forvar204 = (1'h0); (forvar204 < (1'h1)); forvar204 = (forvar204 + (1'h1)))
            begin
              reg205 <= wire131[(4'h8):(1'h1)];
              reg206 <= $signed((~^{$unsigned((reg142 ? wire126 : (8'hba))),
                  (~&((8'hb6) || wire134))}));
              reg207 = reg171[(1'h0):(1'h0)];
            end
          for (forvar208 = (1'h0); (forvar208 < (1'h0)); forvar208 = (forvar208 + (1'h1)))
            begin
              reg209 = wire128;
              reg210 = (^wire131[(3'h7):(1'h0)]);
            end
          reg211 = (wire133[(5'h10):(4'h9)] << (wire133[(3'h6):(3'h5)] <= reg206[(4'h9):(3'h5)]));
        end
      for (forvar212 = (1'h0); (forvar212 < (1'h0)); forvar212 = (forvar212 + (1'h1)))
        begin
          for (forvar213 = (1'h0); (forvar213 < (1'h1)); forvar213 = (forvar213 + (1'h1)))
            begin
              reg214 = $signed(reg193[(3'h4):(2'h2)]);
              reg215 <= $signed(((~{(reg150 == reg150),
                  $signed((8'ha8))}) ^~ $unsigned(reg156)));
              reg216 = reg191[(2'h2):(1'h0)];
              reg217 <= $signed($unsigned($signed(((forvar212 ?
                      reg210 : (8'haf)) ?
                  reg150[(4'hb):(2'h2)] : (8'hb2)))));
              reg218 = ((^~(reg143[(2'h3):(1'h1)] ?
                      wire127 : $signed(reg210))) ?
                  wire124[(2'h3):(1'h1)] : $signed($unsigned(($signed(reg203) ?
                      $unsigned(wire178) : $signed(reg171)))));
            end
          for (forvar219 = (1'h0); (forvar219 < (1'h1)); forvar219 = (forvar219 + (1'h1)))
            begin
              reg220 <= $signed($signed(reg159));
              reg221 <= $signed((reg182 ?
                  ((wire172[(1'h1):(1'h0)] ?
                      ((8'h9d) - forvar208) : $signed(wire134)) <= $signed(reg143)) : $signed(((reg205 > reg203) >>> {forvar213}))));
              reg222 = (($signed(reg218) * ($unsigned(wire126[(4'he):(4'h9)]) ?
                  $unsigned($unsigned((8'hb3))) : reg136)) || $signed((|($unsigned(wire173) ?
                  (reg156 ? (8'h9e) : reg215) : $unsigned((7'h43))))));
              reg223 = wire128;
            end
          for (forvar224 = (1'h0); (forvar224 < (2'h3)); forvar224 = (forvar224 + (1'h1)))
            begin
              reg225 <= (~$signed({reg156,
                  (reg221[(1'h1):(1'h1)] ?
                      (wire129 ? wire126 : reg221) : (wire198 ?
                          reg217 : (8'hae)))}));
              reg226 <= (forvar219 ?
                  (reg141 ^ $unsigned($unsigned({(8'hbc)}))) : reg218);
            end
        end
    end
  always
    @(posedge clk) begin
      for (forvar227 = (1'h0); (forvar227 < (2'h2)); forvar227 = (forvar227 + (1'h1)))
        begin
          for (forvar228 = (1'h0); (forvar228 < (2'h3)); forvar228 = (forvar228 + (1'h1)))
            begin
              reg229 <= ((^wire126[(2'h3):(2'h3)]) >= wire130);
              reg230 <= reg217[(2'h2):(2'h2)];
              reg231 <= $signed($signed((|(^~$signed(wire132)))));
              reg232 = reg137[(1'h0):(1'h0)];
              reg233 = (^~(($signed((wire174 ? reg193 : reg147)) ?
                  {reg192[(3'h5):(2'h2)],
                      (wire127 ?
                          wire173 : reg150)} : wire131[(4'h8):(3'h7)]) & (((reg202 + wire172) ?
                  (-wire172) : (&(8'hba))) == $signed(reg143[(5'h10):(3'h6)]))));
            end
          reg234 <= $signed($signed({$signed(reg230[(3'h4):(2'h3)])}));
          for (forvar235 = (1'h0); (forvar235 < (1'h1)); forvar235 = (forvar235 + (1'h1)))
            begin
              reg236 <= {reg229};
              reg237 = wire199;
              reg238 <= $signed({(&wire200[(1'h1):(1'h1)])});
            end
          reg239 <= wire197;
          for (forvar240 = (1'h0); (forvar240 < (1'h1)); forvar240 = (forvar240 + (1'h1)))
            begin
              reg241 <= forvar227;
            end
        end
      for (forvar242 = (1'h0); (forvar242 < (2'h2)); forvar242 = (forvar242 + (1'h1)))
        begin
          for (forvar243 = (1'h0); (forvar243 < (3'h4)); forvar243 = (forvar243 + (1'h1)))
            begin
              reg244 = $signed(reg221[(2'h2):(1'h1)]);
              reg245 = $signed(reg234);
              reg246 <= ((^($signed(reg238[(3'h5):(1'h1)]) ?
                      forvar240[(1'h0):(1'h0)] : $unsigned((-reg245)))) ?
                  wire134[(1'h0):(1'h0)] : $signed(wire125[(3'h4):(3'h4)]));
              reg247 = $unsigned((~|reg139));
              reg248 <= ($signed((reg182 < ((&reg220) ?
                  (~|reg142) : $signed(reg139)))) + $unsigned(wire197));
            end
        end
      for (forvar249 = (1'h0); (forvar249 < (1'h0)); forvar249 = (forvar249 + (1'h1)))
        begin
          reg250 <= ((~($unsigned(forvar249) ?
              (reg150 ?
                  (wire130 ? reg137 : reg147) : ((8'ha8) ?
                      wire200 : (7'h44))) : {wire125[(3'h4):(1'h0)],
                  (!reg181)})) - (reg246 != ({$signed(wire197),
              $signed((8'ha0))} != $signed(reg162))));
          reg251 <= $signed($signed($signed(forvar243)));
          for (forvar252 = (1'h0); (forvar252 < (1'h0)); forvar252 = (forvar252 + (1'h1)))
            begin
              reg253 = reg181;
            end
        end
      for (forvar254 = (1'h0); (forvar254 < (2'h3)); forvar254 = (forvar254 + (1'h1)))
        begin
          for (forvar255 = (1'h0); (forvar255 < (3'h4)); forvar255 = (forvar255 + (1'h1)))
            begin
              reg256 <= $signed((+(+(reg192[(4'hb):(4'hb)] ?
                  $unsigned(reg171) : {forvar240, wire131}))));
              reg257 = reg236;
              reg258 <= {(($signed({wire173}) < reg156) + $signed(reg143[(5'h10):(2'h3)])),
                  (+$signed((8'ha6)))};
            end
          reg259 <= (8'hb6);
        end
      for (forvar260 = (1'h0); (forvar260 < (2'h2)); forvar260 = (forvar260 + (1'h1)))
        begin
          for (forvar261 = (1'h0); (forvar261 < (2'h2)); forvar261 = (forvar261 + (1'h1)))
            begin
              reg262 = $unsigned($unsigned((~&{{wire125}})));
              reg263 = (~(&(8'h9e)));
              reg264 = wire124[(3'h6):(2'h2)];
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module56
#(parameter param84 = (8'hac), 
parameter param85 = ((param84 <<< ((param84 ? param84 : (param84 & param84)) ? ((param84 ? param84 : param84) ? param84 : param84) : (~^(8'hb3)))) ? param84 : (~|(!({param84, param84} ? (param84 ~^ param84) : (param84 != param84))))))
(y, clk, wire60, wire59, wire58, wire57);
  output wire [(32'h10a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h11):(1'h0)] wire60;
  input wire [(4'ha):(1'h0)] wire59;
  input wire [(5'h11):(1'h0)] wire58;
  input wire signed [(4'h9):(1'h0)] wire57;
  wire signed [(4'hf):(1'h0)] wire83;
  wire [(3'h5):(1'h0)] wire82;
  wire [(3'h7):(1'h0)] wire81;
  wire signed [(4'hd):(1'h0)] wire80;
  wire [(3'h7):(1'h0)] wire79;
  wire signed [(5'h15):(1'h0)] wire78;
  wire [(5'h11):(1'h0)] wire77;
  wire signed [(3'h6):(1'h0)] wire76;
  wire [(4'h8):(1'h0)] wire75;
  wire signed [(3'h5):(1'h0)] wire74;
  wire [(4'hd):(1'h0)] wire73;
  wire signed [(3'h5):(1'h0)] wire72;
  wire [(4'hf):(1'h0)] wire71;
  wire signed [(5'h12):(1'h0)] wire70;
  wire signed [(5'h14):(1'h0)] wire69;
  wire [(4'he):(1'h0)] wire68;
  wire [(3'h6):(1'h0)] wire67;
  wire signed [(5'h15):(1'h0)] wire66;
  wire signed [(4'hf):(1'h0)] wire65;
  wire signed [(3'h7):(1'h0)] wire64;
  wire signed [(3'h6):(1'h0)] wire63;
  wire signed [(4'he):(1'h0)] wire62;
  wire signed [(3'h7):(1'h0)] wire61;
  assign y = {wire83,
                 wire82,
                 wire81,
                 wire80,
                 wire79,
                 wire78,
                 wire77,
                 wire76,
                 wire75,
                 wire74,
                 wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 (1'h0)};
  assign wire61 = $unsigned($unsigned(wire58));
  assign wire62 = (^$unsigned(wire61));
  assign wire63 = wire58[(4'he):(3'h5)];
  assign wire64 = ((((+$signed(wire61)) && wire60[(5'h11):(1'h1)]) ?
                          (wire60[(2'h2):(2'h2)] << $unsigned(wire58)) : {((wire63 ?
                                      (8'ha3) : wire58) ?
                                  ((8'hbe) ^~ wire59) : (~wire57))}) ?
                      wire60 : ($unsigned($signed(wire62[(4'h9):(1'h1)])) ?
                          ((((8'hae) ? wire61 : wire63) ?
                              (wire57 ?
                                  wire59 : wire63) : $unsigned(wire63)) ~^ $unsigned((wire60 ?
                              wire60 : wire63))) : ($signed((wire60 ?
                                  wire58 : wire57)) ?
                              $unsigned(wire63[(3'h5):(1'h1)]) : {wire63[(1'h1):(1'h1)]})));
  assign wire65 = $signed(wire59);
  assign wire66 = $signed({$signed((wire58[(4'he):(3'h4)] ?
                          (wire62 > wire57) : wire60))});
  assign wire67 = (wire62 ^ (~|$signed(wire57[(1'h0):(1'h0)])));
  assign wire68 = $signed($signed($signed((^~{wire66, (7'h40)}))));
  assign wire69 = (^~$signed($unsigned((7'h41))));
  assign wire70 = wire60[(3'h5):(2'h3)];
  assign wire71 = ($unsigned((!((|wire59) >>> wire70[(4'hc):(4'h9)]))) >= $signed((^~wire67[(3'h6):(2'h2)])));
  assign wire72 = ($unsigned((~|(^~(wire66 ? wire63 : wire65)))) ?
                      ((wire59[(2'h3):(2'h3)] >= wire60[(2'h3):(2'h3)]) && $unsigned($unsigned((~&(8'hbd))))) : wire68[(4'hc):(4'ha)]);
  assign wire73 = {(8'hb6)};
  assign wire74 = wire68;
  assign wire75 = (~&{$signed(wire57)});
  assign wire76 = $signed(wire60);
  assign wire77 = (~(8'ha8));
  assign wire78 = {(((wire73 > (wire65 | wire70)) * ((wire57 != wire58) ^ wire67[(3'h4):(2'h3)])) | ({wire66[(5'h11):(1'h0)],
                          {wire76, (8'hbf)}} >>> (8'ha3))),
                      ((wire59[(2'h3):(1'h1)] - $unsigned((wire60 <= wire73))) < (wire76[(1'h1):(1'h1)] > wire74[(1'h0):(1'h0)]))};
  assign wire79 = (~&(wire74[(1'h0):(1'h0)] >= ((+wire78[(1'h1):(1'h0)]) ?
                      wire67 : wire73)));
  assign wire80 = wire70;
  assign wire81 = $signed($signed(((^wire64[(3'h6):(1'h1)]) <= wire68[(1'h0):(1'h0)])));
  assign wire82 = (($unsigned(wire69[(5'h11):(1'h0)]) ^~ {(~&wire65)}) + ($signed($unsigned((wire79 >= wire57))) + (wire80[(3'h5):(1'h1)] ?
                      $signed($signed(wire72)) : wire60)));
  assign wire83 = (^wire59[(2'h2):(1'h0)]);
endmodule