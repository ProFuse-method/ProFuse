(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param47 = (({(~|(8'ha5))} ? (((8'ha4) ? (8'hae) : (8'hb0)) >>> (~(8'ha7))) : {(&(8'ha8))}) * (~&(((8'hb0) ? (8'haa) : (8'hac)) ? ((8'ha8) ? (8'hb0) : (8'hac)) : {(8'ha6)}))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(3'h7):(1'h0)] wire46;
  wire signed [(4'h8):(1'h0)] wire45;
  wire signed [(3'h5):(1'h0)] wire43;
  wire signed [(2'h3):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire4;
  assign y = {wire46, wire45, wire43, wire6, wire5, wire4, (1'h0)};
  assign wire4 = $signed(wire3);
  assign wire5 = $signed($signed(((wire1 ? wire2 : wire0) ?
                     $signed(wire0) : wire2)));
  assign wire6 = $signed((8'ha2));
  module7 #() modinst44 (.wire10(wire5), .wire9(wire2), .wire8(wire3), .clk(clk), .y(wire43), .wire11(wire0));
  assign wire45 = $signed($unsigned({wire0}));
  assign wire46 = wire0[(2'h2):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire11;
  input wire signed [(4'hb):(1'h0)] wire10;
  input wire [(3'h5):(1'h0)] wire9;
  input wire [(4'ha):(1'h0)] wire8;
  wire [(2'h2):(1'h0)] wire42;
  wire [(3'h4):(1'h0)] wire37;
  wire signed [(4'hb):(1'h0)] wire36;
  wire signed [(4'ha):(1'h0)] wire35;
  wire [(4'hb):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire32;
  wire [(4'h8):(1'h0)] wire13;
  wire [(3'h7):(1'h0)] wire12;
  reg [(4'hb):(1'h0)] reg41 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg40 = (1'h0);
  reg [(3'h7):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg38 = (1'h0);
  assign y = {wire42,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire32,
                 wire13,
                 wire12,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 (1'h0)};
  assign wire12 = $unsigned(((~^wire11[(4'ha):(3'h4)]) + wire10));
  assign wire13 = ({($signed(wire10) ?
                          wire8[(1'h1):(1'h1)] : {wire12})} < (^~$unsigned(wire11)));
  module14 #() modinst33 (.y(wire32), .wire17(wire12), .wire15(wire11), .clk(clk), .wire16(wire10), .wire18(wire8));
  assign wire34 = $signed({$unsigned((~&(8'ha6)))});
  assign wire35 = $unsigned(((8'ha2) << $unsigned((wire11 + wire13))));
  assign wire36 = wire8[(3'h7):(2'h3)];
  assign wire37 = $signed(wire9[(2'h2):(2'h2)]);
  always
    @(posedge clk) begin
      if (((($signed((8'h9f)) != $signed(wire32)) ?
          wire36[(2'h2):(2'h2)] : ((~^wire32) & (wire13 ?
              wire37 : (8'ha5)))) * {wire11}))
        begin
          if ($unsigned(wire13[(3'h5):(3'h5)]))
            begin
              reg38 <= ($unsigned(($signed(wire34) ? (^~wire35) : (~|wire11))) ?
                  ((8'haa) ?
                      {(~^(8'ha7))} : {wire13[(1'h1):(1'h0)]}) : wire12[(3'h7):(2'h2)]);
              reg39 <= wire9;
              reg40 <= wire37;
            end
          else
            begin
              reg38 <= wire37;
            end
          reg41 <= wire35;
        end
      else
        begin
          reg38 <= wire12;
        end
    end
  assign wire42 = {wire34};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h65):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire18;
  input wire [(3'h7):(1'h0)] wire17;
  input wire signed [(4'hb):(1'h0)] wire16;
  input wire [(2'h3):(1'h0)] wire15;
  wire [(4'ha):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire30;
  wire [(3'h6):(1'h0)] wire29;
  wire [(3'h4):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire27;
  wire signed [(4'h9):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire25;
  wire signed [(2'h3):(1'h0)] wire24;
  wire signed [(4'h9):(1'h0)] wire23;
  wire signed [(4'hb):(1'h0)] wire22;
  wire signed [(2'h2):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  wire signed [(4'ha):(1'h0)] wire19;
  assign y = {wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 (1'h0)};
  assign wire19 = (8'hb0);
  assign wire20 = ({wire15[(1'h0):(1'h0)]} ?
                      wire17[(2'h3):(2'h3)] : wire15[(2'h2):(1'h1)]);
  assign wire21 = {(($unsigned(wire17) ?
                          $unsigned(wire19) : wire16[(4'h9):(4'h9)]) && (((8'ha0) <= wire19) ?
                          wire20 : (&wire15)))};
  assign wire22 = {(wire17[(2'h3):(2'h3)] ?
                          (~^(wire21 ?
                              wire16 : wire17)) : ((wire16 << wire19) ~^ wire21))};
  assign wire23 = {$signed($unsigned((+wire21)))};
  assign wire24 = wire17[(3'h4):(1'h1)];
  assign wire25 = $unsigned($unsigned($unsigned($signed(wire22))));
  assign wire26 = wire15[(2'h2):(1'h1)];
  assign wire27 = (((!{wire21}) ?
                          ($unsigned(wire22) ?
                              wire24[(1'h1):(1'h0)] : $unsigned(wire16)) : wire15[(1'h1):(1'h1)]) ?
                      (~|wire26) : $unsigned(wire21));
  assign wire28 = $signed(wire22[(3'h4):(1'h0)]);
  assign wire29 = (($unsigned((wire27 ? (8'ha3) : (8'hac))) ?
                      ((wire16 != wire17) + {wire22}) : {(wire22 ?
                              wire25 : (8'ha5))}) ^ $signed({(wire16 <<< wire24)}));
  assign wire30 = wire16[(4'h9):(1'h1)];
  assign wire31 = $unsigned(((8'ha9) <<< ($signed(wire26) << (&wire17))));
endmodule