(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h43):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire0;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire3;
  wire signed [(4'h8):(1'h0)] wire4;
  wire [(4'hb):(1'h0)] wire6;
  wire [(4'h8):(1'h0)] wire9;
  wire signed [(2'h3):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire11;
  wire [(4'h8):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire26;
  reg signed [(3'h5):(1'h0)] reg5 = (1'h0);
  reg [(2'h3):(1'h0)] reg7 = (1'h0);
  reg [(3'h7):(1'h0)] reg8 = (1'h0);
  assign y = {wire4,
                 wire6,
                 wire9,
                 wire10,
                 wire11,
                 wire12,
                 wire26,
                 reg5,
                 reg7,
                 reg8,
                 (1'h0)};
  assign wire4 = (wire0[(1'h1):(1'h1)] | wire2[(2'h2):(1'h1)]);
  always
    @(posedge clk) begin
      reg5 <= wire2[(3'h6):(1'h0)];
    end
  assign wire6 = $unsigned((|$unsigned((wire4 && (8'ha5)))));
  always
    @(posedge clk) begin
      reg7 <= wire3[(1'h1):(1'h1)];
      reg8 <= ((|wire4) - (^~((~wire6) && $unsigned(wire2))));
    end
  assign wire9 = wire6;
  assign wire10 = wire9;
  assign wire11 = (wire6[(4'h9):(3'h7)] ?
                      ($unsigned($unsigned((8'ha7))) > $unsigned(reg5)) : $signed($unsigned(wire6[(3'h5):(1'h1)])));
  assign wire12 = $unsigned($unsigned((reg7[(2'h3):(1'h0)] != $signed((8'ha5)))));
  module13 #() modinst27 (.wire16(wire2), .y(wire26), .wire14(wire9), .wire15(wire4), .clk(clk), .wire17(reg5));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h40):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire17;
  input wire signed [(2'h3):(1'h0)] wire16;
  input wire [(4'h8):(1'h0)] wire15;
  input wire [(2'h3):(1'h0)] wire14;
  wire signed [(3'h7):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire24;
  wire [(4'hb):(1'h0)] wire23;
  wire signed [(3'h7):(1'h0)] wire20;
  wire signed [(4'h8):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire18;
  reg [(3'h4):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg21 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire23,
                 wire20,
                 wire19,
                 wire18,
                 reg22,
                 reg21,
                 (1'h0)};
  assign wire18 = $unsigned((^wire16[(2'h2):(2'h2)]));
  assign wire19 = (&wire14);
  assign wire20 = $unsigned((wire16 ?
                      (wire15[(2'h3):(1'h1)] ~^ $signed(wire19)) : ((wire15 >> wire16) ?
                          $unsigned(wire15) : $signed((8'ha9)))));
  always
    @(posedge clk) begin
      reg21 <= (wire16 ? (wire19 == (~^(-wire15))) : $signed(wire17));
      reg22 <= (wire18[(3'h4):(2'h2)] ?
          $signed((~&wire14)) : $unsigned(wire15[(1'h0):(1'h0)]));
    end
  assign wire23 = $unsigned(wire16);
  assign wire24 = $signed(($unsigned(wire14) << wire19));
  assign wire25 = $unsigned(((!$unsigned(wire24)) ?
                      ((8'had) >> (-wire18)) : $signed((wire17 ?
                          reg22 : wire14))));
endmodule