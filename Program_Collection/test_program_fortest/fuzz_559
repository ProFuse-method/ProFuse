(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire [(3'h5):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire9;
  wire [(4'h9):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire4;
  reg [(4'h9):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg6 = (1'h0);
  assign y = {wire9, wire5, wire4, reg8, reg7, reg6, (1'h0)};
  assign wire4 = $unsigned(((((8'ha9) ? wire1 : wire0) ?
                         $signed(wire3) : ((8'hab) ? wire1 : wire0)) ?
                     (wire1 >= $signed(wire0)) : ($signed(wire0) ?
                         ((8'ha3) ? (8'ha4) : wire0) : $unsigned(wire3))));
  assign wire5 = wire3[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      if (($unsigned(wire1) ? wire1 : $unsigned({{(8'ha3)}})))
        begin
          reg6 <= ($unsigned((&$unsigned(wire1))) >> wire3[(4'ha):(1'h1)]);
        end
      else
        begin
          reg6 <= reg6;
          reg7 <= $unsigned(($signed($signed(wire0)) >> ($signed(wire0) <<< $unsigned(wire5))));
          reg8 <= ((-((wire0 - wire1) ? (wire3 ^~ (8'h9e)) : wire1)) ?
              $signed(wire1[(2'h2):(1'h0)]) : wire3);
        end
    end
  assign wire9 = ((({wire1} ? ((8'ha1) ^ reg8) : (reg6 <= (8'ha8))) ?
                         wire5[(1'h1):(1'h1)] : (^~$unsigned(wire2))) ?
                     (^~(wire3 >= (^wire2))) : $signed({(wire4 ?
                             wire1 : wire3)}));
endmodule