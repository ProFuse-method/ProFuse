(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param50 = ((^~(!((8'ha3) || (8'ha7)))) == ((8'ha7) ^~ ({(8'hb0)} != (8'ha3)))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h38):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire49;
  wire signed [(4'ha):(1'h0)] wire47;
  wire signed [(3'h6):(1'h0)] wire46;
  wire signed [(2'h2):(1'h0)] wire45;
  wire signed [(4'ha):(1'h0)] wire44;
  wire [(4'hb):(1'h0)] wire43;
  wire signed [(3'h7):(1'h0)] wire41;
  assign y = {wire49, wire47, wire46, wire45, wire44, wire43, wire41, (1'h0)};
  module4 #() modinst42 (.y(wire41), .wire6(wire3), .wire8(wire0), .wire7(wire2), .clk(clk), .wire5(wire1));
  assign wire43 = ($signed((~wire0[(2'h2):(1'h0)])) != wire0[(2'h3):(2'h2)]);
  assign wire44 = $unsigned({wire0});
  assign wire45 = wire43;
  assign wire46 = $unsigned((8'ha7));
  module4 #() modinst48 (wire47, clk, wire2, wire43, wire0, wire3);
  assign wire49 = wire1[(4'h9):(4'h8)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire7;
  input wire signed [(4'h9):(1'h0)] wire6;
  input wire signed [(4'h8):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire40;
  wire signed [(4'ha):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire38;
  wire [(4'hb):(1'h0)] wire32;
  wire [(3'h5):(1'h0)] wire31;
  wire [(3'h5):(1'h0)] wire29;
  wire [(3'h7):(1'h0)] wire11;
  wire signed [(4'hb):(1'h0)] wire10;
  wire signed [(4'hb):(1'h0)] wire9;
  reg [(3'h5):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg36 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg35 = (1'h0);
  reg [(3'h7):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg33 = (1'h0);
  assign y = {wire40,
                 wire39,
                 wire38,
                 wire32,
                 wire31,
                 wire29,
                 wire11,
                 wire10,
                 wire9,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 (1'h0)};
  assign wire9 = ((^~wire7) ?
                     wire5 : $signed((wire6[(2'h3):(2'h2)] != $unsigned(wire6))));
  assign wire10 = {(&($unsigned(wire6) ?
                          ((8'ha0) ? wire5 : wire6) : $unsigned(wire6)))};
  assign wire11 = (!(8'ha8));
  module12 #() modinst30 (wire29, clk, wire9, wire5, wire10, wire6);
  assign wire31 = wire6[(4'h9):(3'h5)];
  assign wire32 = $signed(wire9[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      reg33 <= ((($unsigned(wire8) && wire6[(2'h2):(1'h1)]) <= wire5) | (+(~^(~|wire7))));
      if ((($unsigned({wire7}) ^~ ((+wire9) ?
          wire29[(1'h0):(1'h0)] : reg33)) - wire5[(3'h4):(1'h1)]))
        begin
          reg34 <= wire11[(2'h2):(1'h0)];
        end
      else
        begin
          reg34 <= $unsigned({($unsigned(reg34) ?
                  (wire29 ? reg34 : wire32) : {reg33})});
          reg35 <= (wire7 * (8'h9e));
          reg36 <= reg35[(4'h8):(3'h4)];
        end
      reg37 <= (!$signed($unsigned((wire7 ? wire31 : reg35))));
    end
  assign wire38 = wire31;
  assign wire39 = {$signed(wire31)};
  assign wire40 = reg37[(1'h1):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param28 = (|(8'h9d)))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire16;
  input wire signed [(4'h8):(1'h0)] wire15;
  input wire signed [(4'hb):(1'h0)] wire14;
  input wire signed [(2'h2):(1'h0)] wire13;
  wire [(4'h9):(1'h0)] wire27;
  wire [(4'hb):(1'h0)] wire26;
  wire [(4'hb):(1'h0)] wire25;
  wire signed [(3'h4):(1'h0)] wire23;
  wire [(4'h9):(1'h0)] wire22;
  wire [(4'h8):(1'h0)] wire21;
  wire [(2'h2):(1'h0)] wire20;
  wire [(2'h2):(1'h0)] wire19;
  wire [(3'h6):(1'h0)] wire18;
  wire signed [(4'ha):(1'h0)] wire17;
  reg signed [(3'h7):(1'h0)] reg24 = (1'h0);
  assign y = {wire27,
                 wire26,
                 wire25,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 reg24,
                 (1'h0)};
  assign wire17 = (8'h9d);
  assign wire18 = ({{wire15}} >> {$unsigned(((8'ha1) >= wire16))});
  assign wire19 = (((wire17[(3'h6):(2'h3)] ?
                          ((8'ha4) != wire16) : (wire16 ? wire13 : wire14)) ?
                      $unsigned((wire17 ?
                          wire14 : wire18)) : wire14) && $unsigned($signed($signed((8'haf)))));
  assign wire20 = $unsigned(wire16[(2'h3):(2'h2)]);
  assign wire21 = (wire13[(1'h0):(1'h0)] ~^ wire20[(1'h0):(1'h0)]);
  assign wire22 = wire13[(1'h0):(1'h0)];
  assign wire23 = ((8'h9c) <<< {wire20});
  always
    @(posedge clk) begin
      reg24 <= ({($unsigned(wire17) ?
              (~wire20) : wire19[(2'h2):(1'h1)])} && (&(wire21[(3'h7):(1'h0)] == $unsigned((8'hae)))));
    end
  assign wire25 = ({wire13} ^~ ($signed((wire15 ?
                      wire15 : wire20)) <<< (-wire19[(1'h0):(1'h0)])));
  assign wire26 = ((($signed(wire15) ?
                      (reg24 >> wire14) : wire15[(2'h3):(2'h2)]) > wire13[(1'h1):(1'h0)]) ~^ ($signed((reg24 ?
                          wire25 : wire25)) ?
                      wire23[(1'h1):(1'h1)] : (wire21 ?
                          (wire13 ? wire23 : reg24) : wire25[(1'h1):(1'h0)])));
  assign wire27 = ((&$signed($signed(wire13))) ^ reg24[(2'h3):(1'h0)]);
endmodule