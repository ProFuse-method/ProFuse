(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param45 = (({(~^((7'h44) || (8'ha4))), {{(8'hae), (8'hbb)}, (^~(8'ha2))}} ? ({((8'hb0) ? (8'hb5) : (8'ha0)), (!(8'hbd))} >> {((8'ha3) ? (8'haa) : (8'h9f))}) : (-(~&(^(8'hbe))))) ? ({(!(+(8'h9d))), ((^(7'h44)) ? ((8'ha4) ? (8'hb3) : (8'hb5)) : ((8'hbf) ^ (8'hb4)))} ^ (((+(8'hbf)) ? ((8'ha4) > (8'h9c)) : (~^(7'h40))) ? ((-(8'hae)) ? ((8'ha7) ? (7'h44) : (8'ha3)) : ((8'hae) ? (8'ha4) : (8'hb1))) : (8'ha1))) : (8'hae)), 
parameter param46 = (~&({((param45 || param45) ? param45 : (param45 >> param45))} ^~ (((param45 != (7'h40)) >>> {param45, param45}) <= (^~(8'h9f))))))
(y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h1fb):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'he):(1'h0)] wire4;
  input wire [(5'h14):(1'h0)] wire3;
  input wire [(5'h12):(1'h0)] wire2;
  input wire [(5'h12):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire [(4'hd):(1'h0)] wire11;
  wire [(5'h11):(1'h0)] wire10;
  wire signed [(4'hf):(1'h0)] wire9;
  wire signed [(5'h14):(1'h0)] wire8;
  wire signed [(4'hc):(1'h0)] wire7;
  wire signed [(4'hd):(1'h0)] wire6;
  wire [(2'h3):(1'h0)] wire5;
  reg [(4'ha):(1'h0)] reg40 = (1'h0);
  reg signed [(4'he):(1'h0)] reg39 = (1'h0);
  reg [(5'h14):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg35 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg34 = (1'h0);
  reg [(5'h15):(1'h0)] reg31 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg27 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg22 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg20 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg16 = (1'h0);
  reg [(4'ha):(1'h0)] reg44 = (1'h0);
  reg [(4'ha):(1'h0)] reg43 = (1'h0);
  reg [(5'h15):(1'h0)] forvar42 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg41 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg37 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar33 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar32 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg30 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg29 = (1'h0);
  reg [(4'hd):(1'h0)] reg28 = (1'h0);
  reg [(5'h15):(1'h0)] reg26 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar25 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar24 = (1'h0);
  reg [(3'h5):(1'h0)] reg23 = (1'h0);
  reg [(3'h6):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar19 = (1'h0);
  reg [(4'hf):(1'h0)] reg17 = (1'h0);
  reg [(4'he):(1'h0)] reg15 = (1'h0);
  reg [(4'ha):(1'h0)] reg14 = (1'h0);
  reg [(4'he):(1'h0)] forvar13 = (1'h0);
  reg [(4'hb):(1'h0)] forvar12 = (1'h0);
  assign y = {wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 reg40,
                 reg39,
                 reg38,
                 reg36,
                 reg35,
                 reg34,
                 reg31,
                 reg27,
                 reg22,
                 reg20,
                 reg18,
                 reg16,
                 reg44,
                 reg43,
                 forvar42,
                 reg41,
                 reg37,
                 forvar33,
                 forvar32,
                 reg30,
                 reg29,
                 reg28,
                 reg26,
                 forvar25,
                 forvar24,
                 reg23,
                 reg21,
                 forvar19,
                 reg17,
                 reg15,
                 reg14,
                 forvar13,
                 forvar12,
                 (1'h0)};
  assign wire5 = wire3[(4'hd):(3'h7)];
  assign wire6 = (7'h40);
  assign wire7 = (-wire5[(2'h3):(2'h3)]);
  assign wire8 = $unsigned(wire5[(1'h0):(1'h0)]);
  assign wire9 = ($signed($signed(wire4[(1'h1):(1'h0)])) >>> ($unsigned(($signed(wire6) & wire1[(3'h5):(2'h3)])) != (wire4[(3'h4):(1'h0)] ?
                     wire1 : wire7[(3'h4):(1'h0)])));
  assign wire10 = $signed(wire3);
  assign wire11 = ($signed(wire4) == $unsigned($unsigned($unsigned($signed(wire3)))));
  always
    @(posedge clk) begin
      for (forvar12 = (1'h0); (forvar12 < (2'h2)); forvar12 = (forvar12 + (1'h1)))
        begin
          for (forvar13 = (1'h0); (forvar13 < (2'h2)); forvar13 = (forvar13 + (1'h1)))
            begin
              reg14 = ($signed(wire8) ?
                  wire5[(1'h0):(1'h0)] : ($unsigned(($unsigned(forvar13) <<< (+forvar12))) ?
                      (8'hb0) : wire2[(3'h7):(2'h3)]));
              reg15 = ($unsigned((($signed(wire2) ?
                      wire6 : (wire7 ? wire0 : wire7)) ?
                  wire0[(3'h7):(3'h4)] : forvar12[(1'h0):(1'h0)])) > (~^wire2));
              reg16 <= $signed(forvar13[(1'h0):(1'h0)]);
              reg17 = {(^$unsigned({(wire11 ^ forvar13)})),
                  wire3[(1'h0):(1'h0)]};
              reg18 <= {$signed($unsigned(($unsigned(wire1) ^~ wire4))),
                  wire10};
            end
          for (forvar19 = (1'h0); (forvar19 < (1'h1)); forvar19 = (forvar19 + (1'h1)))
            begin
              reg20 <= (8'hb7);
              reg21 = forvar13;
              reg22 <= wire10[(2'h3):(1'h1)];
              reg23 = ($unsigned((((reg14 >> wire4) ?
                  forvar19[(3'h5):(1'h0)] : {wire2,
                      wire10}) * wire0)) > wire6[(4'hc):(3'h6)]);
            end
        end
      for (forvar24 = (1'h0); (forvar24 < (2'h2)); forvar24 = (forvar24 + (1'h1)))
        begin
          for (forvar25 = (1'h0); (forvar25 < (2'h3)); forvar25 = (forvar25 + (1'h1)))
            begin
              reg26 = $signed((~&reg17[(4'hd):(1'h0)]));
              reg27 <= wire1;
            end
          if (wire2[(4'he):(4'hd)])
            begin
              reg28 = wire4[(4'ha):(3'h7)];
              reg29 = ((+{{(forvar12 > wire2)}, $signed((+wire4))}) ?
                  reg23[(2'h3):(1'h0)] : (!$signed((8'h9c))));
              reg30 = $signed((($unsigned({reg16}) ? (8'hbd) : (~&forvar24)) ?
                  (8'had) : (~((8'hb4) >> (~(8'ha6))))));
            end
          else
            begin
              reg28 = reg27[(1'h0):(1'h0)];
              reg29 = (^(&((~&(reg16 - (8'hb6))) ?
                  $unsigned((reg22 + wire2)) : {$unsigned(reg27)})));
              reg31 <= (((wire0 - $signed((-forvar13))) ^~ wire9[(4'hc):(3'h6)]) ?
                  $unsigned(($signed($unsigned(reg27)) ?
                      ($signed((8'hb4)) | forvar25) : forvar24[(1'h1):(1'h1)])) : $signed((7'h40)));
            end
        end
      for (forvar32 = (1'h0); (forvar32 < (3'h4)); forvar32 = (forvar32 + (1'h1)))
        begin
          for (forvar33 = (1'h0); (forvar33 < (1'h1)); forvar33 = (forvar33 + (1'h1)))
            begin
              reg34 <= (~|$unsigned({{$signed((8'ha2))}, {reg29}}));
              reg35 <= (|forvar25[(1'h1):(1'h1)]);
            end
          if (((wire8 ?
              ($unsigned((-reg28)) >> reg14) : wire0[(3'h7):(1'h1)]) <= reg30[(2'h2):(1'h1)]))
            begin
              reg36 <= $signed($signed($unsigned(((forvar33 ^~ forvar19) ?
                  (reg30 ? reg16 : wire3) : wire1))));
              reg37 = (|((^((wire4 < reg35) ?
                  $signed(reg35) : $signed(reg21))) >> (wire0 ?
                  (reg22 ?
                      $signed(wire11) : {(8'hac),
                          reg18}) : forvar19[(2'h2):(2'h2)])));
              reg38 <= wire2;
              reg39 <= wire8[(1'h1):(1'h1)];
              reg40 <= reg38;
            end
          else
            begin
              reg36 <= reg17[(3'h4):(3'h4)];
            end
          reg41 = reg16[(2'h3):(1'h1)];
          for (forvar42 = (1'h0); (forvar42 < (1'h1)); forvar42 = (forvar42 + (1'h1)))
            begin
              reg43 = wire6;
            end
          reg44 = wire1[(3'h4):(3'h4)];
        end
    end
endmodule