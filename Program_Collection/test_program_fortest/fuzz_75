(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param93 = (((!((8'h9e) ? (8'h9e) : (8'h9f))) != ({(8'hb0)} << ((8'ha0) ? (8'ha1) : (8'h9e)))) - ({(-(8'hae))} ? {(|(8'ha5))} : {((8'hae) <= (8'hab))})))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h6f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire0;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire3;
  wire [(2'h2):(1'h0)] wire92;
  wire signed [(4'hb):(1'h0)] wire91;
  wire signed [(2'h2):(1'h0)] wire90;
  wire signed [(4'ha):(1'h0)] wire4;
  wire signed [(4'hb):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire79;
  wire signed [(4'hb):(1'h0)] wire81;
  wire [(3'h6):(1'h0)] wire82;
  wire [(3'h6):(1'h0)] wire87;
  wire signed [(3'h7):(1'h0)] wire88;
  reg [(4'h8):(1'h0)] reg83 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg84 = (1'h0);
  reg [(3'h7):(1'h0)] reg85 = (1'h0);
  reg [(4'hb):(1'h0)] reg86 = (1'h0);
  assign y = {wire92,
                 wire91,
                 wire90,
                 wire4,
                 wire5,
                 wire79,
                 wire81,
                 wire82,
                 wire87,
                 wire88,
                 reg83,
                 reg84,
                 reg85,
                 reg86,
                 (1'h0)};
  assign wire4 = (!((wire1[(3'h4):(2'h3)] <<< wire1[(3'h6):(3'h4)]) ?
                     wire2 : (wire3 ? $unsigned((8'hac)) : $signed(wire1))));
  assign wire5 = $signed(wire0[(2'h3):(1'h1)]);
  module6 #() modinst80 (wire79, clk, wire5, wire3, wire1, wire2);
  assign wire81 = wire4[(3'h5):(2'h2)];
  assign wire82 = wire2;
  always
    @(posedge clk) begin
      reg83 <= wire5[(4'hb):(4'hb)];
      if ((~((~^{wire0}) > ($signed(reg83) ?
          wire2[(1'h0):(1'h0)] : $unsigned(wire1)))))
        begin
          if (wire5)
            begin
              reg84 <= $unsigned((wire79 >> wire3));
              reg85 <= $signed($unsigned(reg83));
            end
          else
            begin
              reg84 <= wire2;
              reg85 <= wire1;
              reg86 <= wire79;
            end
        end
      else
        begin
          reg84 <= (~|wire0);
          reg85 <= $unsigned(wire82[(3'h5):(2'h2)]);
        end
    end
  assign wire87 = (|(wire0 >> {reg86[(1'h1):(1'h0)]}));
  module14 #() modinst89 (.wire16(reg86), .y(wire88), .clk(clk), .wire18(reg84), .wire17(wire5), .wire15(reg83));
  assign wire90 = ((wire0 != (~^$unsigned((8'hae)))) ?
                      (reg83 ?
                          (8'hab) : (reg85[(1'h1):(1'h0)] ?
                              $signed(reg84) : $unsigned(reg85))) : $unsigned(wire79));
  assign wire91 = (^(~^(wire87 ? $signed(wire88) : wire5)));
  assign wire92 = wire3;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param78 = {({(|(8'ha7))} | (8'ha0))})
(y, clk, wire7, wire8, wire9, wire10);
  output wire [(32'h54):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire7;
  input wire [(4'h9):(1'h0)] wire8;
  input wire signed [(4'h8):(1'h0)] wire9;
  input wire [(4'ha):(1'h0)] wire10;
  wire signed [(3'h5):(1'h0)] wire76;
  wire signed [(4'hb):(1'h0)] wire75;
  wire [(4'h8):(1'h0)] wire74;
  wire signed [(4'hb):(1'h0)] wire72;
  wire [(4'hb):(1'h0)] wire39;
  wire [(3'h7):(1'h0)] wire38;
  wire [(2'h3):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire36;
  reg signed [(4'h9):(1'h0)] reg11 = (1'h0);
  assign y = {wire76,
                 wire75,
                 wire74,
                 wire72,
                 wire39,
                 wire38,
                 wire12,
                 wire13,
                 wire36,
                 reg11,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg11 <= $signed((!((wire9 < wire7) <<< $unsigned(wire8))));
    end
  assign wire12 = ({wire10} ?
                      $signed({$unsigned(reg11)}) : $unsigned(wire8[(2'h3):(2'h2)]));
  assign wire13 = $unsigned({$signed(reg11)});
  module14 #() modinst37 (wire36, clk, reg11, wire8, wire7, wire10);
  assign wire38 = wire10[(3'h6):(2'h3)];
  assign wire39 = $signed(({((8'ha1) ? wire8 : wire9)} >= ((8'hb0) ?
                      (wire7 < wire9) : ((8'ha7) ? wire38 : wire9))));
  module40 #() modinst73 (wire72, clk, wire36, wire10, wire7, wire38);
  assign wire74 = (($signed((wire7 ?
                      wire36 : (8'ha6))) && (~^reg11[(3'h6):(3'h5)])) + reg11);
  assign wire75 = (($unsigned(wire7) ^~ wire12) ?
                      wire12 : wire36[(2'h3):(1'h0)]);
  module14 #() modinst77 (wire76, clk, wire8, wire13, wire75, wire10);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module40
#(parameter param71 = ((^(!(~|(8'hb0)))) <= ((|((8'had) ? (8'h9f) : (8'h9d))) ? (((8'had) != (8'hae)) >= {(8'hb0)}) : ((~(8'haa)) == {(8'h9d)}))))
(y, clk, wire44, wire43, wire42, wire41);
  output wire [(32'ha8):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire44;
  input wire signed [(4'ha):(1'h0)] wire43;
  input wire signed [(4'h9):(1'h0)] wire42;
  input wire [(3'h7):(1'h0)] wire41;
  wire signed [(4'h8):(1'h0)] wire50;
  wire [(4'h9):(1'h0)] wire45;
  reg [(3'h6):(1'h0)] reg70 = (1'h0);
  reg [(3'h7):(1'h0)] reg69 = (1'h0);
  reg [(4'h8):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg67 = (1'h0);
  reg [(2'h2):(1'h0)] reg66 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg65 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg64 = (1'h0);
  reg [(4'ha):(1'h0)] reg63 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg62 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg61 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg59 = (1'h0);
  reg [(3'h5):(1'h0)] reg58 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg57 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg56 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg55 = (1'h0);
  reg [(4'ha):(1'h0)] reg54 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg52 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(4'ha):(1'h0)] reg49 = (1'h0);
  reg [(3'h7):(1'h0)] reg48 = (1'h0);
  reg [(4'ha):(1'h0)] reg47 = (1'h0);
  reg [(3'h5):(1'h0)] reg46 = (1'h0);
  assign y = {wire50,
                 wire45,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 (1'h0)};
  assign wire45 = ($unsigned({wire41[(1'h0):(1'h0)]}) ?
                      {wire43} : wire44[(3'h5):(3'h4)]);
  always
    @(posedge clk) begin
      reg46 <= wire45[(3'h5):(1'h1)];
      reg47 <= $unsigned(($signed((-wire45)) ~^ ($unsigned(wire43) << wire44[(3'h4):(3'h4)])));
      reg48 <= $unsigned(($unsigned($signed(wire45)) ~^ ((~reg47) - {wire44})));
    end
  always
    @(posedge clk) begin
      reg49 <= wire42[(1'h0):(1'h0)];
    end
  assign wire50 = wire42;
  always
    @(posedge clk) begin
      reg51 <= $signed((wire50 ?
          $unsigned({(8'hae)}) : $unsigned(reg49[(2'h3):(2'h3)])));
      if ($unsigned(wire44[(2'h2):(2'h2)]))
        begin
          reg52 <= wire50[(3'h7):(2'h2)];
          if ($signed(wire43))
            begin
              reg53 <= wire50[(3'h6):(2'h3)];
              reg54 <= $unsigned(((reg49 && wire41) ^ $signed((wire45 ?
                  wire43 : wire43))));
            end
          else
            begin
              reg53 <= ((-((reg49 ?
                  (8'ha1) : wire41) << reg49)) << ({{(8'had)}} != reg51));
            end
        end
      else
        begin
          reg52 <= $signed((+reg47[(4'h8):(2'h3)]));
        end
    end
  always
    @(posedge clk) begin
      reg55 <= wire45;
      if (($signed($unsigned(reg54[(2'h2):(1'h0)])) - $signed($signed((8'ha1)))))
        begin
          reg56 <= {(~^wire45[(3'h5):(3'h4)])};
          reg57 <= {wire45};
          reg58 <= reg52[(2'h3):(1'h1)];
        end
      else
        begin
          if ($unsigned(((8'ha2) ? {$unsigned(wire45)} : (reg48 || {wire41}))))
            begin
              reg56 <= $signed(((wire44 < (wire44 ?
                  wire50 : (8'haa))) && {{wire44}}));
            end
          else
            begin
              reg56 <= ((!(&wire41[(1'h1):(1'h1)])) ^~ $unsigned(wire44));
              reg57 <= ($unsigned(({wire45} ?
                  $signed((8'ha7)) : (wire41 ?
                      (8'ha6) : wire44))) ~^ ($signed(reg49[(4'h9):(3'h5)]) ?
                  reg51[(2'h3):(1'h1)] : $signed((8'hb0))));
              reg58 <= (($signed($unsigned(wire41)) <<< $signed($signed(reg54))) && $signed(({wire50} <<< $unsigned(wire44))));
            end
          if (wire50[(4'h8):(2'h2)])
            begin
              reg59 <= wire44;
              reg60 <= wire50[(3'h5):(3'h5)];
              reg61 <= wire42;
            end
          else
            begin
              reg59 <= reg46;
              reg60 <= reg49[(3'h5):(2'h2)];
            end
          if (({reg58} ? reg56[(3'h4):(1'h1)] : $unsigned(reg54)))
            begin
              reg62 <= $signed((|wire45[(2'h2):(1'h1)]));
              reg63 <= $unsigned(reg60);
              reg64 <= $signed($unsigned(reg52[(3'h4):(2'h3)]));
            end
          else
            begin
              reg62 <= {reg62[(1'h1):(1'h0)]};
            end
        end
      reg65 <= {(8'ha1)};
    end
  always
    @(posedge clk) begin
      if ((&(((wire41 ? reg51 : reg60) ? (^reg58) : (reg59 >= reg46)) ?
          reg61[(1'h0):(1'h0)] : (+(8'ha0)))))
        begin
          reg66 <= {reg58[(2'h3):(1'h0)]};
          reg67 <= (!$signed($unsigned(reg52[(1'h0):(1'h0)])));
          if (reg52)
            begin
              reg68 <= $signed((&((^reg46) <<< reg53[(1'h1):(1'h0)])));
              reg69 <= wire42;
              reg70 <= $signed($unsigned((reg51 <<< $signed(reg62))));
            end
          else
            begin
              reg68 <= $signed(reg54);
              reg69 <= (wire43 == $signed((((8'ha7) | reg51) > wire43)));
            end
        end
      else
        begin
          if ((~|(~&reg54)))
            begin
              reg66 <= $signed(reg56);
              reg67 <= ((reg49[(4'ha):(2'h2)] ?
                  wire45 : (((8'ha5) <= (8'ha6)) >> (reg68 - (8'haa)))) >= $unsigned($signed((wire45 * reg62))));
              reg68 <= $signed(reg70[(1'h0):(1'h0)]);
            end
          else
            begin
              reg66 <= $signed((reg47 != (|$unsigned(reg48))));
            end
          reg69 <= reg59;
          reg70 <= ((($unsigned(reg70) ?
                  (wire41 ? reg70 : reg53) : $unsigned(reg49)) ?
              (|(wire45 ?
                  reg47 : reg55)) : $unsigned(reg61)) << {$signed(reg65[(1'h1):(1'h0)])});
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param35 = ((({(8'ha2)} ? {(8'ha4)} : ((8'ha9) >= (8'ha9))) ? (((8'ha1) < (8'h9c)) ? (~(8'had)) : (+(8'ha4))) : (|((8'hac) != (8'h9e)))) ? ((8'h9c) ? ((^(8'h9d)) * ((8'ha1) - (8'ha2))) : (((8'ha1) ? (8'haa) : (8'ha0)) - {(8'h9c)})) : (|(-((8'hb0) ^~ (8'ha8))))))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire18;
  input wire signed [(4'h8):(1'h0)] wire17;
  input wire [(4'hb):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire34;
  wire signed [(2'h3):(1'h0)] wire29;
  wire [(3'h5):(1'h0)] wire28;
  wire signed [(4'h9):(1'h0)] wire27;
  wire [(3'h5):(1'h0)] wire26;
  wire signed [(3'h5):(1'h0)] wire20;
  wire signed [(3'h5):(1'h0)] wire19;
  reg [(4'h9):(1'h0)] reg33 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg32 = (1'h0);
  reg [(4'ha):(1'h0)] reg31 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg30 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg25 = (1'h0);
  reg [(2'h2):(1'h0)] reg24 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg23 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg22 = (1'h0);
  reg [(4'h9):(1'h0)] reg21 = (1'h0);
  assign y = {wire34,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire20,
                 wire19,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 (1'h0)};
  assign wire19 = wire15[(3'h4):(1'h1)];
  assign wire20 = {wire18};
  always
    @(posedge clk) begin
      reg21 <= $unsigned($unsigned($signed($signed(wire20))));
      reg22 <= ($unsigned((-((8'hae) ? wire15 : wire16))) ?
          wire20[(3'h4):(2'h2)] : (8'ha4));
      if (wire17[(2'h2):(1'h1)])
        begin
          reg23 <= {wire16[(4'hb):(3'h6)]};
          reg24 <= $signed($signed((wire15[(3'h4):(2'h3)] << (~wire16))));
          reg25 <= (wire15 | (((reg24 ? wire16 : wire19) ?
                  $signed(reg23) : (^~wire19)) ?
              $unsigned(wire17[(1'h1):(1'h1)]) : reg21));
        end
      else
        begin
          reg23 <= (8'h9e);
          reg24 <= (reg21 == (wire15[(1'h1):(1'h1)] && (^~$signed(wire16))));
        end
    end
  assign wire26 = wire16;
  assign wire27 = ($signed((reg25[(1'h0):(1'h0)] >= (reg25 ~^ wire20))) ?
                      $signed(wire15[(1'h1):(1'h0)]) : ($unsigned((wire16 && wire17)) & {$signed(reg21)}));
  assign wire28 = wire26;
  assign wire29 = ((~&($unsigned(wire19) ?
                      (reg23 ?
                          wire16 : wire16) : ((8'hae) <<< wire18))) < ((-$unsigned(reg25)) ?
                      {wire28[(2'h3):(2'h3)]} : ((8'ha0) ?
                          (wire28 ^ wire17) : $unsigned((8'hab)))));
  always
    @(posedge clk) begin
      reg30 <= $signed(wire28[(1'h1):(1'h0)]);
      if (wire16[(3'h6):(1'h1)])
        begin
          if ({wire26[(1'h1):(1'h1)]})
            begin
              reg31 <= reg23[(1'h0):(1'h0)];
              reg32 <= (!$unsigned(wire16));
            end
          else
            begin
              reg31 <= $signed(($unsigned((wire20 ^ wire19)) || ($signed(wire16) <= reg22[(4'hb):(4'h9)])));
            end
        end
      else
        begin
          reg31 <= (&reg21);
          reg32 <= (&(8'hae));
        end
      reg33 <= $signed(((~&$unsigned(wire27)) > reg31[(1'h0):(1'h0)]));
    end
  assign wire34 = (~^reg23);
endmodule