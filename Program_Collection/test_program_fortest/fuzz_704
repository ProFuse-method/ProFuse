(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'hbb):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire27;
  wire signed [(3'h6):(1'h0)] wire26;
  wire signed [(4'h8):(1'h0)] wire21;
  wire [(3'h7):(1'h0)] wire20;
  wire [(2'h3):(1'h0)] wire19;
  wire [(4'hb):(1'h0)] wire18;
  wire signed [(4'hb):(1'h0)] wire14;
  wire signed [(3'h6):(1'h0)] wire13;
  reg [(4'h9):(1'h0)] reg25 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg23 = (1'h0);
  reg [(4'hb):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg16 = (1'h0);
  reg [(4'h8):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg12 = (1'h0);
  reg [(4'hb):(1'h0)] reg11 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg [(4'ha):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg6 = (1'h0);
  reg [(3'h7):(1'h0)] reg5 = (1'h0);
  reg [(3'h5):(1'h0)] reg4 = (1'h0);
  assign y = {wire27,
                 wire26,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire14,
                 wire13,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg17,
                 reg16,
                 reg15,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= ((wire2[(4'ha):(1'h1)] ? wire1 : $signed(wire2[(2'h3):(2'h3)])) ?
          wire2 : ($unsigned(wire3[(1'h1):(1'h1)]) << $unsigned({wire1})));
      if ((((&$unsigned(wire0)) - $unsigned(wire0[(2'h3):(1'h0)])) ?
          reg4 : $unsigned($unsigned((&wire3)))))
        begin
          reg5 <= wire0;
          reg6 <= (8'ha3);
        end
      else
        begin
          reg5 <= ($unsigned((~^(!reg4))) ?
              (^~{(reg6 ? wire3 : reg5)}) : wire3);
          reg6 <= $signed(($unsigned((reg6 != (8'ha8))) ?
              (+wire0) : ((wire3 ? wire1 : reg5) ? wire3 : $signed(wire3))));
          reg7 <= {($unsigned((wire0 ? wire0 : wire3)) ?
                  (8'haa) : (((8'haf) <<< reg4) ?
                      (wire3 ? reg6 : wire2) : $signed(reg5)))};
        end
      if ((!$signed({(reg4 ? reg4 : wire0)})))
        begin
          reg8 <= $unsigned($unsigned($unsigned(((8'ha8) ? (8'h9c) : wire3))));
          if (reg5)
            begin
              reg9 <= reg5[(2'h3):(1'h1)];
              reg10 <= reg4;
            end
          else
            begin
              reg9 <= ((8'hae) >>> wire0);
              reg10 <= wire1;
            end
          if (reg5[(3'h7):(3'h7)])
            begin
              reg11 <= ((((&reg6) ~^ $signed(wire2)) ?
                  reg6 : $signed((~reg5))) >> (($signed(reg7) ^~ $signed(wire0)) ?
                  (~|{(8'ha1)}) : $signed(wire1)));
            end
          else
            begin
              reg11 <= ({($signed(reg5) ~^ reg4[(2'h2):(2'h2)])} == $signed((~&(reg11 ?
                  (8'ha1) : (8'hac)))));
              reg12 <= ((~|reg5) == {$signed({wire2})});
            end
        end
      else
        begin
          if (reg8)
            begin
              reg8 <= reg6[(3'h4):(1'h1)];
            end
          else
            begin
              reg8 <= $signed({reg12[(2'h2):(1'h0)]});
              reg9 <= reg8[(4'hb):(4'ha)];
              reg10 <= (reg12 >> (8'h9f));
            end
        end
    end
  assign wire13 = {(^$signed(((8'ha4) ~^ reg11)))};
  assign wire14 = ((wire1 ? wire1 : reg4) < wire0[(3'h5):(1'h1)]);
  always
    @(posedge clk) begin
      reg15 <= $unsigned(reg7[(4'h8):(2'h2)]);
      reg16 <= (((|reg7) <= reg6[(2'h2):(1'h0)]) ?
          reg4 : $unsigned($signed({reg12})));
      reg17 <= wire2[(3'h7):(3'h4)];
    end
  assign wire18 = {$unsigned(((+(8'hab)) ^ (-reg4)))};
  assign wire19 = wire14[(1'h1):(1'h0)];
  assign wire20 = wire19;
  assign wire21 = (wire14 && reg8);
  always
    @(posedge clk) begin
      reg22 <= (~^($unsigned($signed(reg17)) ?
          $unsigned((wire0 ? reg7 : wire20)) : $unsigned({(8'hb0)})));
      if ((8'hac))
        begin
          if ($signed($signed((~|(8'ha0)))))
            begin
              reg23 <= ((^($signed(reg22) ?
                  (wire1 && reg8) : reg8[(2'h2):(1'h0)])) >> {(((8'haf) ^ reg5) ?
                      (wire3 << wire19) : {(8'ha2)})});
            end
          else
            begin
              reg23 <= (~^reg22[(3'h5):(1'h0)]);
              reg24 <= (&(^~$unsigned(reg10[(1'h0):(1'h0)])));
            end
        end
      else
        begin
          reg23 <= $unsigned($signed(reg23));
        end
      reg25 <= (reg9 ^ ($unsigned($signed(reg24)) ? (!{(8'ha9)}) : (!reg9)));
    end
  assign wire26 = $unsigned(wire20[(1'h1):(1'h0)]);
  assign wire27 = ($signed(reg17[(1'h1):(1'h0)]) > (((~wire21) * (reg8 ?
                      (8'h9f) : (8'ha2))) << reg4));
endmodule