(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h68):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire50;
  wire signed [(3'h4):(1'h0)] wire49;
  wire signed [(3'h4):(1'h0)] wire48;
  wire signed [(4'ha):(1'h0)] wire47;
  wire [(2'h2):(1'h0)] wire39;
  wire signed [(4'ha):(1'h0)] wire36;
  wire signed [(4'h9):(1'h0)] wire34;
  reg [(3'h6):(1'h0)] reg46 = (1'h0);
  reg [(4'h9):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg44 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg43 = (1'h0);
  reg [(3'h5):(1'h0)] reg42 = (1'h0);
  reg [(3'h6):(1'h0)] reg41 = (1'h0);
  reg [(4'h8):(1'h0)] reg40 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg38 = (1'h0);
  reg [(3'h7):(1'h0)] reg37 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire39,
                 wire36,
                 wire34,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg38,
                 reg37,
                 (1'h0)};
  module4 #() modinst35 (.wire6(wire1), .y(wire34), .wire8(wire3), .clk(clk), .wire5(wire0), .wire7(wire2));
  assign wire36 = $unsigned($signed(($unsigned(wire3) != (8'h9c))));
  always
    @(posedge clk) begin
      reg37 <= {wire34};
      reg38 <= wire3;
    end
  assign wire39 = ({((8'h9e) & reg38)} ?
                      $signed((reg37 * wire34[(4'h9):(3'h7)])) : $unsigned({$unsigned((8'hb0))}));
  always
    @(posedge clk) begin
      reg40 <= (+wire0);
      reg41 <= reg37;
      if ($unsigned(wire0[(1'h1):(1'h0)]))
        begin
          reg42 <= wire39;
          reg43 <= $unsigned(reg40);
          if ($unsigned((^$signed(reg40))))
            begin
              reg44 <= (reg38[(2'h3):(1'h0)] <= (8'hb0));
              reg45 <= (((reg42[(3'h4):(2'h3)] != $unsigned(wire1)) >>> ($unsigned((8'haa)) > (wire39 ?
                      reg42 : wire34))) ?
                  $signed(wire34) : (reg42[(2'h2):(1'h0)] & (~^(^~wire3))));
              reg46 <= {$unsigned((wire36 ^~ wire3))};
            end
          else
            begin
              reg44 <= (wire36[(2'h3):(1'h1)] ?
                  (wire1 < reg45[(1'h0):(1'h0)]) : (reg43 ?
                      $unsigned((reg40 ? reg37 : wire39)) : reg37));
              reg45 <= $signed((reg45 >= $unsigned((wire39 >>> wire36))));
            end
        end
      else
        begin
          reg42 <= (((+(wire1 << reg37)) << $unsigned({reg46})) ?
              reg40 : {((reg41 ? wire1 : reg37) ?
                      $unsigned((8'h9c)) : (-(8'hae)))});
        end
    end
  assign wire47 = $signed($unsigned($signed(reg42[(3'h4):(2'h3)])));
  assign wire48 = wire36[(1'h1):(1'h1)];
  assign wire49 = (~&(-wire39[(2'h2):(1'h0)]));
  assign wire50 = (~^$unsigned((reg41[(1'h0):(1'h0)] >= wire48[(1'h1):(1'h1)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param33 = {(((+(8'ha9)) ? (8'ha7) : ((8'ha0) ? (8'ha2) : (8'had))) ? (((8'ha6) >>> (8'ha8)) ? (8'ha8) : ((8'h9e) ? (8'h9e) : (8'haf))) : (+((8'haf) ? (8'ha9) : (8'h9e))))})
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h66):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire [(3'h6):(1'h0)] wire7;
  input wire [(3'h7):(1'h0)] wire6;
  input wire signed [(4'ha):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire31;
  wire [(3'h5):(1'h0)] wire21;
  wire signed [(4'ha):(1'h0)] wire20;
  wire [(4'ha):(1'h0)] wire19;
  wire [(2'h2):(1'h0)] wire10;
  wire signed [(3'h6):(1'h0)] wire9;
  reg signed [(3'h7):(1'h0)] reg18 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg17 = (1'h0);
  reg [(4'ha):(1'h0)] reg16 = (1'h0);
  reg [(3'h7):(1'h0)] reg15 = (1'h0);
  reg [(3'h7):(1'h0)] reg14 = (1'h0);
  reg [(4'h9):(1'h0)] reg13 = (1'h0);
  reg [(3'h4):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg11 = (1'h0);
  assign y = {wire31,
                 wire21,
                 wire20,
                 wire19,
                 wire10,
                 wire9,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 (1'h0)};
  assign wire9 = ($signed((wire8 ? wire5[(3'h7):(1'h1)] : (8'h9f))) ?
                     wire6 : $signed($unsigned($signed(wire5))));
  assign wire10 = $signed((wire6 ?
                      (wire7[(3'h5):(2'h3)] ~^ wire5[(1'h1):(1'h0)]) : (&$unsigned(wire6))));
  always
    @(posedge clk) begin
      if (wire10[(2'h2):(1'h1)])
        begin
          if (($signed(({wire10} ?
              $unsigned(wire8) : wire8[(3'h7):(3'h5)])) - $signed({$signed((8'ha5))})))
            begin
              reg11 <= wire10;
              reg12 <= wire6;
              reg13 <= $signed($unsigned(wire6));
            end
          else
            begin
              reg11 <= $signed(reg12[(2'h2):(1'h0)]);
              reg12 <= {($unsigned((-wire9)) ?
                      {$signed((8'h9d))} : (-{reg11}))};
              reg13 <= (-$signed(($signed(reg13) != reg12)));
            end
          reg14 <= (wire7 && $signed(reg12));
          if (((+(((8'ha8) ?
              wire5 : wire7) >= wire7[(3'h4):(2'h2)])) << ({((8'ha5) ?
                      wire9 : wire10)} ?
              (8'ha4) : ((reg14 + reg14) == ((8'had) * reg14)))))
            begin
              reg15 <= $signed(((8'ha7) - ((wire8 & reg14) + (wire10 ?
                  reg14 : wire5))));
            end
          else
            begin
              reg15 <= reg13[(1'h1):(1'h0)];
              reg16 <= $unsigned(wire6[(3'h6):(3'h6)]);
              reg17 <= wire9;
            end
        end
      else
        begin
          reg11 <= wire9[(2'h2):(2'h2)];
          reg12 <= {(&($signed(reg16) >= {reg17}))};
          if (($signed($unsigned((~|reg13))) >= $signed($unsigned((~reg13)))))
            begin
              reg13 <= ({$unsigned(reg16)} ~^ $signed((~&(8'hb0))));
            end
          else
            begin
              reg13 <= wire9[(2'h2):(2'h2)];
            end
        end
      reg18 <= reg12;
    end
  assign wire19 = (reg15 ?
                      (wire7 ?
                          $signed($unsigned((8'haa))) : wire6) : $signed((^~reg14)));
  assign wire20 = reg16;
  assign wire21 = (((^~$signed(reg15)) ?
                          reg17[(2'h3):(2'h3)] : reg15[(3'h4):(1'h1)]) ?
                      wire6[(1'h1):(1'h1)] : ((~&$unsigned(wire19)) ?
                          (^reg13[(4'h9):(3'h6)]) : (-$signed((8'hb0)))));
  module22 #() modinst32 (wire31, clk, wire20, wire8, wire19, wire9);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module22  (y, clk, wire26, wire25, wire24, wire23);
  output wire [(32'h17):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire26;
  input wire signed [(4'hb):(1'h0)] wire25;
  input wire signed [(4'h9):(1'h0)] wire24;
  input wire [(3'h6):(1'h0)] wire23;
  wire [(4'h8):(1'h0)] wire30;
  wire signed [(2'h3):(1'h0)] wire29;
  wire signed [(3'h4):(1'h0)] wire28;
  wire [(3'h7):(1'h0)] wire27;
  assign y = {wire30, wire29, wire28, wire27, (1'h0)};
  assign wire27 = (8'h9c);
  assign wire28 = (8'ha6);
  assign wire29 = (8'ha2);
  assign wire30 = wire23;
endmodule