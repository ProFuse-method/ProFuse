(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param11 = (((((8'h9c) ? (8'ha9) : (8'ha1)) != (-(8'ha9))) ? (~^(~(8'ha6))) : (((8'haa) << (8'hac)) >> ((8'ha8) > (8'ha4)))) != (&(((8'h9c) ? (8'h9c) : (8'ha3)) >> {(8'ha4)}))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire10;
  wire signed [(4'ha):(1'h0)] wire7;
  wire signed [(4'h8):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg8 = (1'h0);
  assign y = {wire10, wire7, wire6, wire5, wire4, reg9, reg8, (1'h0)};
  assign wire4 = wire3;
  assign wire5 = (8'hae);
  assign wire6 = wire1[(3'h5):(1'h0)];
  assign wire7 = (^~$unsigned({$signed(wire2)}));
  always
    @(posedge clk) begin
      reg8 <= wire3;
      reg9 <= {wire7};
    end
  assign wire10 = wire7[(2'h3):(1'h1)];
endmodule