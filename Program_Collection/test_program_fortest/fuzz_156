(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param57 = {((^(&(8'ha8))) ? {{(8'ha1)}} : {((8'h9e) != (8'h9f))})})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h14):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire56;
  wire signed [(2'h3):(1'h0)] wire55;
  wire [(2'h2):(1'h0)] wire53;
  wire [(4'ha):(1'h0)] wire4;
  assign y = {wire56, wire55, wire53, wire4, (1'h0)};
  assign wire4 = $signed((~((8'hab) >>> $signed(wire0))));
  module5 #() modinst54 (.y(wire53), .wire8(wire3), .wire7(wire1), .clk(clk), .wire6(wire0), .wire9(wire4));
  assign wire55 = $unsigned({(wire4[(4'h8):(3'h4)] ?
                          ((8'hb0) == wire2) : $unsigned(wire3))});
  assign wire56 = $signed((^(8'h9e)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire6, wire7, wire8, wire9);
  output wire [(32'h57):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire6;
  input wire signed [(4'h8):(1'h0)] wire7;
  input wire [(4'h9):(1'h0)] wire8;
  input wire signed [(4'h9):(1'h0)] wire9;
  wire signed [(2'h3):(1'h0)] wire25;
  wire [(2'h3):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire28;
  wire signed [(4'h8):(1'h0)] wire31;
  wire [(4'h9):(1'h0)] wire42;
  wire [(4'hb):(1'h0)] wire44;
  wire signed [(2'h3):(1'h0)] wire46;
  wire signed [(3'h4):(1'h0)] wire48;
  wire signed [(2'h3):(1'h0)] wire49;
  wire [(2'h3):(1'h0)] wire50;
  wire [(3'h5):(1'h0)] wire51;
  reg [(3'h7):(1'h0)] reg29 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg [(4'hb):(1'h0)] reg47 = (1'h0);
  assign y = {wire25,
                 wire27,
                 wire28,
                 wire31,
                 wire42,
                 wire44,
                 wire46,
                 wire48,
                 wire49,
                 wire50,
                 wire51,
                 reg29,
                 reg30,
                 reg47,
                 (1'h0)};
  module10 #() modinst26 (.wire13(wire8), .wire11(wire6), .wire14(wire9), .y(wire25), .clk(clk), .wire12(wire7));
  assign wire27 = ($signed($unsigned(wire25[(2'h3):(1'h0)])) ?
                      ($signed($signed(wire9)) ?
                          wire25 : wire25[(1'h1):(1'h1)]) : {wire7});
  assign wire28 = (($signed((wire9 ? wire8 : wire7)) ?
                      (wire27[(1'h0):(1'h0)] & ((8'ha3) != wire7)) : wire6) >>> wire9[(2'h2):(2'h2)]);
  always
    @(posedge clk) begin
      reg29 <= wire7[(3'h6):(1'h0)];
      reg30 <= ($unsigned((wire25[(1'h1):(1'h0)] ?
          ((8'ha9) ^ wire27) : wire7)) < wire7);
    end
  assign wire31 = ($unsigned({reg30}) != {$unsigned((wire27 ?
                          wire25 : reg29))});
  module32 #() modinst43 (wire42, clk, wire9, wire31, reg30, reg29);
  module32 #() modinst45 (wire44, clk, wire42, wire28, wire7, wire25);
  assign wire46 = $signed(wire27[(1'h1):(1'h1)]);
  always
    @(posedge clk) begin
      reg47 <= $unsigned(({{wire44}} ? (|wire42[(3'h7):(2'h3)]) : wire25));
    end
  assign wire48 = reg47;
  assign wire49 = wire27;
  assign wire50 = ({{{wire48}}} >> (({reg30} ?
                      wire8[(4'h8):(2'h3)] : $unsigned(reg29)) != (~(|wire25))));
  module32 #() modinst52 (wire51, clk, wire8, reg30, wire46, wire27);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module32  (y, clk, wire36, wire35, wire34, wire33);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire36;
  input wire [(4'h8):(1'h0)] wire35;
  input wire [(2'h3):(1'h0)] wire34;
  input wire signed [(2'h2):(1'h0)] wire33;
  wire signed [(3'h4):(1'h0)] wire41;
  wire signed [(2'h3):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire38;
  wire signed [(4'ha):(1'h0)] wire37;
  reg signed [(4'hb):(1'h0)] reg40 = (1'h0);
  assign y = {wire41, wire39, wire38, wire37, reg40, (1'h0)};
  assign wire37 = ((~|$signed(wire35)) <<< (8'ha1));
  assign wire38 = ($signed(({wire34} <= wire37)) ?
                      wire35[(1'h0):(1'h0)] : wire37[(1'h0):(1'h0)]);
  assign wire39 = ($unsigned($unsigned($unsigned(wire36))) ?
                      wire34 : ($signed($unsigned((8'hac))) ?
                          ((wire38 ^~ wire38) ?
                              {wire34} : $unsigned(wire34)) : {(wire35 ?
                                  wire35 : wire35)}));
  always
    @(posedge clk) begin
      reg40 <= $unsigned((~^(^~wire36[(3'h4):(3'h4)])));
    end
  assign wire41 = wire34;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire14;
  input wire [(4'h8):(1'h0)] wire13;
  input wire signed [(4'h8):(1'h0)] wire12;
  input wire [(4'h8):(1'h0)] wire11;
  wire [(4'h8):(1'h0)] wire24;
  wire signed [(3'h4):(1'h0)] wire23;
  wire signed [(3'h7):(1'h0)] wire22;
  wire signed [(4'hb):(1'h0)] wire21;
  wire [(3'h4):(1'h0)] wire20;
  reg [(2'h3):(1'h0)] reg19 = (1'h0);
  reg [(3'h7):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg15 = (1'h0);
  assign y = {wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg15 <= $unsigned((((wire14 ? wire14 : wire12) ?
              {wire13} : (wire13 >>> wire14)) ?
          wire12[(2'h3):(1'h1)] : {(wire13 ? wire13 : wire12)}));
      reg16 <= (^$unsigned(wire12));
      if ((wire14[(1'h1):(1'h0)] ~^ {$signed($signed(wire13))}))
        begin
          reg17 <= $unsigned($signed(((wire14 ? wire12 : wire14) ?
              ((8'ha0) ? (8'ha7) : wire12) : wire14)));
          reg18 <= ($signed($signed((^~wire11))) | (8'ha6));
          reg19 <= $signed($signed(($signed((8'ha9)) ~^ {wire12})));
        end
      else
        begin
          reg17 <= $signed((|$unsigned($signed(wire14))));
          reg18 <= (8'ha3);
        end
    end
  assign wire20 = reg18[(2'h3):(2'h2)];
  assign wire21 = $signed(($unsigned((^wire11)) ?
                      reg19[(2'h3):(2'h3)] : (&$signed((8'ha0)))));
  assign wire22 = {wire14[(1'h0):(1'h0)]};
  assign wire23 = reg17[(3'h4):(1'h1)];
  assign wire24 = $signed((((wire21 - (8'ha4)) ?
                          (~&wire13) : $unsigned(wire23)) ?
                      (((8'had) >> reg16) > (reg16 && wire11)) : ((wire22 > wire12) ?
                          (!wire23) : (reg18 ? wire12 : wire13))));
endmodule