(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param46 = ((&(((8'hab) ^~ (8'h9e)) ? (~(8'ha5)) : ((8'hab) ? (8'ha8) : (8'h9d)))) > {{((8'ha5) ^ (8'ha4))}}))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire0;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire3;
  wire [(4'hb):(1'h0)] wire45;
  wire signed [(4'ha):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire43;
  wire signed [(4'h9):(1'h0)] wire42;
  wire [(3'h6):(1'h0)] wire4;
  wire [(4'hb):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire6;
  wire [(2'h3):(1'h0)] wire7;
  wire signed [(3'h5):(1'h0)] wire8;
  wire signed [(4'h8):(1'h0)] wire39;
  reg [(3'h6):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg9 = (1'h0);
  reg [(2'h3):(1'h0)] reg10 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg11 = (1'h0);
  assign y = {wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire8,
                 wire39,
                 reg41,
                 reg9,
                 reg10,
                 reg11,
                 (1'h0)};
  assign wire4 = {($signed((wire1 ?
                         (8'hab) : wire2)) <<< (~^$unsigned(wire3)))};
  assign wire5 = $signed($signed(wire4[(2'h2):(1'h1)]));
  assign wire6 = $signed($signed(wire3[(1'h1):(1'h1)]));
  assign wire7 = (~((wire3[(2'h2):(1'h0)] ?
                         (wire5 ? wire6 : wire6) : $unsigned(wire2)) ?
                     wire4 : wire1));
  assign wire8 = (!(|$unsigned((wire4 ^~ wire1))));
  always
    @(posedge clk) begin
      reg9 <= $unsigned($unsigned($signed((wire7 >= wire3))));
      reg10 <= wire1;
      reg11 <= $signed((wire1[(1'h0):(1'h0)] ^~ $unsigned(wire2[(1'h1):(1'h0)])));
    end
  module12 #() modinst40 (wire39, clk, wire4, wire6, reg9, wire3);
  always
    @(posedge clk) begin
      reg41 <= (!wire8[(3'h5):(3'h4)]);
    end
  assign wire42 = wire2;
  assign wire43 = $unsigned((~^$signed((reg10 ? (8'h9f) : wire8))));
  assign wire44 = wire39;
  assign wire45 = ((|$signed(wire7)) ?
                      $signed({(wire5 ?
                              wire0 : wire5)}) : wire39[(3'h5):(3'h4)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param38 = (~({(~|(8'ha7))} ? ({(8'ha8)} > ((8'haa) >>> (8'hab))) : ((~(8'h9c)) && ((8'hab) & (8'ha0))))))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h21):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire16;
  input wire [(3'h5):(1'h0)] wire15;
  input wire signed [(3'h4):(1'h0)] wire14;
  input wire signed [(4'h9):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire37;
  wire signed [(3'h7):(1'h0)] wire35;
  wire [(3'h5):(1'h0)] wire33;
  reg signed [(4'h9):(1'h0)] reg36 = (1'h0);
  assign y = {wire37, wire35, wire33, reg36, (1'h0)};
  module17 #() modinst34 (.wire20(wire16), .clk(clk), .y(wire33), .wire18(wire15), .wire19(wire13), .wire21(wire14));
  assign wire35 = wire33;
  always
    @(posedge clk) begin
      reg36 <= ($unsigned(wire15) >= $unsigned((+(wire35 ? wire35 : (8'hb0)))));
    end
  assign wire37 = (8'h9e);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17  (y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h54):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire21;
  input wire [(3'h6):(1'h0)] wire20;
  input wire signed [(2'h2):(1'h0)] wire19;
  input wire [(3'h5):(1'h0)] wire18;
  wire signed [(4'ha):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire31;
  wire signed [(3'h5):(1'h0)] wire30;
  wire signed [(2'h2):(1'h0)] wire28;
  wire signed [(3'h5):(1'h0)] wire27;
  wire [(4'h9):(1'h0)] wire26;
  wire signed [(3'h7):(1'h0)] wire25;
  wire signed [(4'ha):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire23;
  wire signed [(3'h7):(1'h0)] wire22;
  reg signed [(4'hb):(1'h0)] reg29 = (1'h0);
  assign y = {wire32,
                 wire31,
                 wire30,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 reg29,
                 (1'h0)};
  assign wire22 = ((-{$unsigned(wire20)}) < (~&$unsigned((wire18 ?
                      wire21 : wire19))));
  assign wire23 = $unsigned($unsigned((-(wire21 << (8'hb0)))));
  assign wire24 = (($signed($signed(wire18)) != $unsigned((&wire23))) ?
                      $signed($signed({wire22})) : {$unsigned((~^(8'had)))});
  assign wire25 = (!$unsigned($signed(wire21)));
  assign wire26 = (wire25 ?
                      (+({wire22} ^ wire18[(2'h3):(2'h3)])) : wire22[(3'h4):(2'h2)]);
  assign wire27 = $signed((8'haa));
  assign wire28 = ((wire25 ?
                      (((8'ha1) ^ wire18) ?
                          (~&wire18) : (wire23 ?
                              wire18 : wire18)) : ($signed(wire23) == (wire24 <= wire20))) >= (&wire25[(1'h0):(1'h0)]));
  always
    @(posedge clk) begin
      reg29 <= $signed(((wire23 ?
          (wire26 != wire23) : (wire23 * (8'ha1))) ^ $unsigned(wire19[(2'h2):(1'h1)])));
    end
  assign wire30 = ($signed($signed($unsigned(wire19))) ?
                      (8'ha5) : $signed((~|$signed(wire28))));
  assign wire31 = (^{wire18[(1'h1):(1'h1)]});
  assign wire32 = $unsigned(wire23);
endmodule