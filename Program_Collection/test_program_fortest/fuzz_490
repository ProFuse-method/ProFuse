(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h91):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(3'h4):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire16;
  wire [(4'hb):(1'h0)] wire15;
  wire [(2'h2):(1'h0)] wire14;
  wire [(3'h5):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire10;
  wire [(2'h3):(1'h0)] wire9;
  wire signed [(4'h8):(1'h0)] wire8;
  wire signed [(2'h3):(1'h0)] wire7;
  wire signed [(3'h6):(1'h0)] wire6;
  wire [(4'h9):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire4;
  reg [(3'h7):(1'h0)] reg25 = (1'h0);
  reg [(2'h3):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg22 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg20 = (1'h0);
  reg [(3'h6):(1'h0)] reg19 = (1'h0);
  reg [(4'hb):(1'h0)] reg18 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg12 = (1'h0);
  reg [(2'h2):(1'h0)] reg11 = (1'h0);
  assign y = {wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg12,
                 reg11,
                 (1'h0)};
  assign wire4 = $signed({$signed((wire3 ? wire3 : wire3))});
  assign wire5 = (-(-wire0));
  assign wire6 = (!(wire0 ? (~^$unsigned(wire3)) : $signed($unsigned(wire4))));
  assign wire7 = wire2[(2'h2):(1'h1)];
  assign wire8 = $unsigned((&((wire3 ? wire5 : wire0) ?
                     (+(8'hb0)) : (&wire5))));
  assign wire9 = wire3;
  assign wire10 = wire4;
  always
    @(posedge clk) begin
      reg11 <= (^~wire1);
      reg12 <= $signed((((wire7 ? wire5 : wire7) ?
              $signed(wire4) : $unsigned(wire1)) ?
          $unsigned(wire2[(2'h2):(2'h2)]) : ((wire4 >= wire8) != $signed(wire6))));
    end
  assign wire13 = {wire7[(1'h1):(1'h1)]};
  assign wire14 = (wire10 ?
                      $unsigned(((8'hae) ?
                          {wire3} : (wire2 | wire13))) : $unsigned(((wire0 - wire13) ?
                          (~|(8'ha0)) : $signed(wire6))));
  assign wire15 = wire9[(1'h0):(1'h0)];
  assign wire16 = $signed((~(wire13 ?
                      $unsigned(wire4) : wire3[(4'h8):(2'h2)])));
  always
    @(posedge clk) begin
      reg17 <= (^(($unsigned(wire16) <= wire15) ?
          wire8 : $unsigned(((8'hae) != wire14))));
      if ($signed(wire0))
        begin
          reg18 <= ($signed($signed(wire9[(2'h2):(2'h2)])) <= (wire1 ?
              (-$signed(wire3)) : wire5[(2'h2):(1'h0)]));
          if ((+wire4))
            begin
              reg19 <= $unsigned($signed((-(wire14 | reg11))));
              reg20 <= (^wire7[(1'h0):(1'h0)]);
              reg21 <= {((wire9 & reg17[(4'h8):(2'h3)]) ^ $unsigned($signed((8'hab))))};
            end
          else
            begin
              reg19 <= $signed(($signed((~&reg11)) ~^ {(reg18 ?
                      reg21 : reg18)}));
              reg20 <= ($unsigned($signed((wire6 ?
                  wire4 : wire13))) == $signed((reg21 ?
                  wire6[(3'h5):(3'h5)] : (wire2 ? wire1 : wire6))));
            end
        end
      else
        begin
          if ($unsigned((-$signed($unsigned(reg20)))))
            begin
              reg18 <= (wire0[(2'h3):(1'h0)] ?
                  ($unsigned((~|wire9)) ^ wire9) : {$signed($unsigned((8'ha0)))});
            end
          else
            begin
              reg18 <= ($signed($unsigned($unsigned(reg17))) ?
                  (wire2 ?
                      ($unsigned(wire10) == $unsigned(reg19)) : (wire2[(2'h3):(1'h1)] ?
                          $signed(reg18) : {(8'ha9)})) : {((reg20 ?
                              wire0 : reg21) ?
                          reg12 : {reg21})});
            end
        end
      if ($unsigned(wire1))
        begin
          reg22 <= $unsigned((~^$signed($signed((8'ha0)))));
          if ({wire1})
            begin
              reg23 <= {{$unsigned((|wire2))}};
              reg24 <= {(~^($unsigned((8'ha4)) * $signed(reg12)))};
              reg25 <= ({$signed((|(8'ha4)))} ? reg22 : {(-wire6)});
            end
          else
            begin
              reg23 <= $unsigned(($unsigned($unsigned(wire3)) ^ $unsigned($unsigned(reg12))));
            end
        end
      else
        begin
          reg22 <= $unsigned(wire2);
          reg23 <= $unsigned(wire14);
        end
    end
endmodule