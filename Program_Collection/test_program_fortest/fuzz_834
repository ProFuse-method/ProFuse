(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h5c4):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire4;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire signed [(4'hf):(1'h0)] wire1;
  input wire [(3'h4):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire360;
  wire signed [(5'h14):(1'h0)] wire359;
  wire signed [(3'h6):(1'h0)] wire358;
  wire signed [(2'h3):(1'h0)] wire357;
  wire signed [(3'h6):(1'h0)] wire210;
  wire signed [(5'h10):(1'h0)] wire56;
  wire [(5'h10):(1'h0)] wire55;
  wire signed [(4'hd):(1'h0)] wire54;
  wire [(4'he):(1'h0)] wire53;
  wire [(2'h3):(1'h0)] wire52;
  wire signed [(4'hb):(1'h0)] wire51;
  wire signed [(4'he):(1'h0)] wire50;
  wire signed [(5'h14):(1'h0)] wire49;
  wire [(2'h2):(1'h0)] wire212;
  wire [(5'h10):(1'h0)] wire213;
  wire [(5'h12):(1'h0)] wire247;
  wire signed [(4'hb):(1'h0)] wire248;
  wire signed [(4'hf):(1'h0)] wire355;
  reg signed [(5'h13):(1'h0)] reg268 = (1'h0);
  reg [(5'h10):(1'h0)] reg267 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg265 = (1'h0);
  reg [(4'hc):(1'h0)] reg264 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg262 = (1'h0);
  reg [(4'ha):(1'h0)] reg260 = (1'h0);
  reg [(5'h12):(1'h0)] reg258 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg257 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg254 = (1'h0);
  reg signed [(4'he):(1'h0)] reg251 = (1'h0);
  reg [(4'hc):(1'h0)] reg250 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg249 = (1'h0);
  reg [(3'h5):(1'h0)] reg246 = (1'h0);
  reg [(2'h3):(1'h0)] reg245 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg244 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg239 = (1'h0);
  reg [(3'h5):(1'h0)] reg237 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg235 = (1'h0);
  reg signed [(4'he):(1'h0)] reg233 = (1'h0);
  reg [(5'h15):(1'h0)] reg230 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg228 = (1'h0);
  reg [(2'h2):(1'h0)] reg224 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg222 = (1'h0);
  reg signed [(4'he):(1'h0)] reg221 = (1'h0);
  reg [(3'h5):(1'h0)] reg220 = (1'h0);
  reg signed [(4'he):(1'h0)] reg216 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg7 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg9 = (1'h0);
  reg [(5'h14):(1'h0)] reg10 = (1'h0);
  reg [(5'h13):(1'h0)] reg13 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg14 = (1'h0);
  reg [(4'h8):(1'h0)] reg15 = (1'h0);
  reg [(4'ha):(1'h0)] reg22 = (1'h0);
  reg [(4'he):(1'h0)] reg24 = (1'h0);
  reg signed [(4'he):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg26 = (1'h0);
  reg [(5'h12):(1'h0)] reg28 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg29 = (1'h0);
  reg [(2'h3):(1'h0)] reg30 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg31 = (1'h0);
  reg [(4'h9):(1'h0)] reg35 = (1'h0);
  reg signed [(4'he):(1'h0)] reg36 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg37 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg40 = (1'h0);
  reg [(4'hf):(1'h0)] reg41 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg43 = (1'h0);
  reg [(5'h10):(1'h0)] reg44 = (1'h0);
  reg [(5'h10):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg46 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg266 = (1'h0);
  reg [(5'h11):(1'h0)] forvar263 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg261 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar259 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg256 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar255 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar253 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar252 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar243 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg242 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar241 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg240 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg238 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar236 = (1'h0);
  reg [(3'h6):(1'h0)] reg234 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg232 = (1'h0);
  reg [(4'h8):(1'h0)] forvar231 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar229 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg227 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg226 = (1'h0);
  reg [(5'h13):(1'h0)] reg225 = (1'h0);
  reg [(5'h14):(1'h0)] forvar223 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg219 = (1'h0);
  reg [(5'h10):(1'h0)] reg218 = (1'h0);
  reg [(5'h14):(1'h0)] reg217 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar215 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar214 = (1'h0);
  reg [(5'h15):(1'h0)] reg48 = (1'h0);
  reg [(3'h5):(1'h0)] reg47 = (1'h0);
  reg [(4'he):(1'h0)] forvar42 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar39 = (1'h0);
  reg [(3'h4):(1'h0)] forvar38 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg34 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg33 = (1'h0);
  reg [(4'h9):(1'h0)] reg32 = (1'h0);
  reg [(3'h5):(1'h0)] forvar27 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg [(3'h4):(1'h0)] forvar21 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar20 = (1'h0);
  reg [(5'h14):(1'h0)] reg19 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg18 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar17 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg16 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg12 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar11 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar6 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar5 = (1'h0);
  assign y = {wire360,
                 wire359,
                 wire358,
                 wire357,
                 wire210,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire212,
                 wire213,
                 wire247,
                 wire248,
                 wire355,
                 reg268,
                 reg267,
                 reg265,
                 reg264,
                 reg262,
                 reg260,
                 reg258,
                 reg257,
                 reg254,
                 reg251,
                 reg250,
                 reg249,
                 reg246,
                 reg245,
                 reg244,
                 reg239,
                 reg237,
                 reg235,
                 reg233,
                 reg230,
                 reg228,
                 reg224,
                 reg222,
                 reg221,
                 reg220,
                 reg216,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 reg13,
                 reg14,
                 reg15,
                 reg22,
                 reg24,
                 reg25,
                 reg26,
                 reg28,
                 reg29,
                 reg30,
                 reg31,
                 reg35,
                 reg36,
                 reg37,
                 reg40,
                 reg41,
                 reg43,
                 reg44,
                 reg45,
                 reg46,
                 reg266,
                 forvar263,
                 reg261,
                 forvar259,
                 reg256,
                 forvar255,
                 forvar253,
                 forvar252,
                 forvar243,
                 reg242,
                 forvar241,
                 reg240,
                 reg238,
                 forvar236,
                 reg234,
                 reg232,
                 forvar231,
                 forvar229,
                 reg227,
                 reg226,
                 reg225,
                 forvar223,
                 reg219,
                 reg218,
                 reg217,
                 forvar215,
                 forvar214,
                 reg48,
                 reg47,
                 forvar42,
                 forvar39,
                 forvar38,
                 reg34,
                 reg33,
                 reg32,
                 forvar27,
                 reg23,
                 forvar21,
                 forvar20,
                 reg19,
                 reg18,
                 forvar17,
                 reg16,
                 reg12,
                 forvar11,
                 forvar6,
                 forvar5,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar5 = (1'h0); (forvar5 < (3'h4)); forvar5 = (forvar5 + (1'h1)))
        begin
          for (forvar6 = (1'h0); (forvar6 < (3'h4)); forvar6 = (forvar6 + (1'h1)))
            begin
              reg7 <= $unsigned((8'hb9));
              reg8 <= $signed($unsigned((wire4[(1'h0):(1'h0)] ?
                  $unsigned((^~(8'hbb))) : {((8'hb9) >> reg7),
                      (forvar6 >= wire4)})));
              reg9 <= $signed(wire2);
              reg10 <= wire4[(1'h0):(1'h0)];
            end
          for (forvar11 = (1'h0); (forvar11 < (1'h0)); forvar11 = (forvar11 + (1'h1)))
            begin
              reg12 = reg9;
              reg13 <= {(!wire3),
                  $signed(((~$signed(forvar11)) ?
                      $signed((8'hb3)) : (^~wire2)))};
              reg14 <= forvar5;
              reg15 <= ($signed(reg12) + $signed({$unsigned({reg13, wire1}),
                  $signed(((8'hb7) >> wire3))}));
              reg16 = $signed($signed({$signed(forvar5)}));
            end
          for (forvar17 = (1'h0); (forvar17 < (3'h4)); forvar17 = (forvar17 + (1'h1)))
            begin
              reg18 = (+$signed(($unsigned(forvar17) != (reg16 <= (^reg14)))));
              reg19 = ((^reg10) ?
                  {reg16,
                      $unsigned((+$signed((8'ha7))))} : ((~&reg16) >> (7'h40)));
            end
        end
      for (forvar20 = (1'h0); (forvar20 < (1'h1)); forvar20 = (forvar20 + (1'h1)))
        begin
          for (forvar21 = (1'h0); (forvar21 < (2'h2)); forvar21 = (forvar21 + (1'h1)))
            begin
              reg22 <= $unsigned(($signed(((forvar20 ? (8'hab) : forvar5) ?
                      $signed((8'ha0)) : wire4[(3'h6):(3'h6)])) ?
                  (wire2 ?
                      reg7[(3'h4):(1'h1)] : ((&(8'hac)) ?
                          $unsigned(reg18) : $unsigned((8'haf)))) : $signed(((^wire1) | $unsigned(forvar20)))));
              reg23 = $signed({(reg7[(1'h1):(1'h1)] ?
                      (reg19 ? (wire3 == reg7) : wire3) : (^$unsigned(wire2))),
                  {($unsigned(reg13) & $unsigned(wire2)),
                      ((^reg15) * (reg10 ? reg22 : forvar5))}});
              reg24 <= forvar21[(2'h3):(1'h1)];
              reg25 <= (forvar5[(1'h0):(1'h0)] ?
                  forvar11[(5'h15):(4'ha)] : ((wire1[(3'h4):(3'h4)] ?
                          $signed($unsigned((8'hba))) : ($unsigned(reg7) ?
                              (~&reg14) : $signed(reg8))) ?
                      (~|($unsigned(reg8) ?
                          forvar20 : reg9[(4'hc):(4'hc)])) : $signed((reg23[(1'h1):(1'h1)] ?
                          reg22 : (+wire0)))));
              reg26 <= $signed((reg23[(1'h0):(1'h0)] - $unsigned(((8'had) || $signed(reg22)))));
            end
          for (forvar27 = (1'h0); (forvar27 < (2'h3)); forvar27 = (forvar27 + (1'h1)))
            begin
              reg28 <= ($signed(($unsigned((~|forvar20)) < (^~forvar17))) > $signed(($signed({reg14,
                      reg26}) ?
                  reg12[(4'hd):(4'hb)] : ((&wire0) ?
                      (forvar17 ?
                          (8'hbc) : forvar11) : reg18[(4'hf):(2'h2)]))));
              reg29 <= $unsigned($signed($unsigned(wire1)));
              reg30 <= $unsigned(((reg29[(3'h7):(3'h5)] || ((7'h43) ?
                      forvar6 : (reg13 ? reg23 : wire3))) ?
                  (reg18 ?
                      $unsigned((reg29 ?
                          forvar11 : reg9)) : (|{forvar17})) : (($unsigned(reg12) >>> {reg25}) ?
                      (reg25[(3'h6):(3'h4)] > (^~(8'ha4))) : $unsigned((reg29 <= reg14)))));
              reg31 <= ($signed($signed($unsigned((&forvar5)))) ~^ (8'hbf));
            end
          if (((((forvar5 >= $signed(wire2)) || {reg28[(4'hd):(4'hb)],
                  (forvar11 != reg16)}) ?
              $unsigned(((reg9 >= reg19) << forvar11)) : $unsigned(((!reg22) == (reg10 ?
                  wire0 : forvar11)))) >> $signed(wire4[(1'h1):(1'h0)])))
            begin
              reg32 = $signed(reg13);
            end
          else
            begin
              reg32 = {reg7[(3'h4):(1'h0)], $unsigned(reg29)};
              reg33 = $signed($signed(reg19[(1'h0):(1'h0)]));
              reg34 = reg18;
              reg35 <= ((8'hb0) | (reg29 < reg8));
              reg36 <= forvar17[(1'h0):(1'h0)];
            end
          reg37 <= forvar21[(1'h1):(1'h0)];
        end
      for (forvar38 = (1'h0); (forvar38 < (2'h2)); forvar38 = (forvar38 + (1'h1)))
        begin
          for (forvar39 = (1'h0); (forvar39 < (2'h2)); forvar39 = (forvar39 + (1'h1)))
            begin
              reg40 <= $signed((-$unsigned(reg36[(4'he):(3'h4)])));
              reg41 <= wire1[(4'ha):(3'h7)];
            end
          for (forvar42 = (1'h0); (forvar42 < (1'h1)); forvar42 = (forvar42 + (1'h1)))
            begin
              reg43 <= reg40;
              reg44 <= (~^reg18);
              reg45 <= reg44;
              reg46 <= $signed(forvar6);
            end
          reg47 = $unsigned((-(reg26 && (-reg31[(1'h0):(1'h0)]))));
        end
      reg48 = (~|reg10[(4'hd):(4'h8)]);
    end
  assign wire49 = {({(reg26[(2'h2):(1'h0)] ?
                                  reg7[(4'he):(4'hc)] : $unsigned(reg9))} ?
                          wire4 : (+{reg15, $unsigned(wire1)}))};
  assign wire50 = wire1;
  assign wire51 = $unsigned($unsigned($signed((&((8'haf) & reg43)))));
  assign wire52 = ((|((^~reg46) != (-(^reg30)))) ?
                      wire1[(3'h5):(3'h5)] : {$signed({(|reg14)}),
                          $unsigned(({(8'ha2)} << reg26[(3'h4):(3'h4)]))});
  assign wire53 = ($signed($signed(reg25[(3'h6):(2'h3)])) ?
                      ($signed(wire0[(1'h1):(1'h1)]) ?
                          wire1[(2'h3):(2'h2)] : {(~(!reg7))}) : (($signed((reg15 ?
                              wire52 : reg43)) - (((8'hb7) ? reg13 : reg7) ?
                              $signed(reg31) : reg15[(2'h3):(2'h2)])) ?
                          (~&reg43[(2'h3):(1'h0)]) : reg9));
  assign wire54 = wire49[(3'h5):(3'h5)];
  assign wire55 = (|{reg43});
  assign wire56 = $unsigned((|$signed($unsigned((|reg43)))));
  module57 #() modinst211 (wire210, clk, reg35, reg15, reg46, wire54);
  assign wire212 = reg25[(4'hc):(3'h6)];
  assign wire213 = (|$unsigned((reg26[(3'h5):(2'h3)] < reg43[(5'h11):(4'hb)])));
  always
    @(posedge clk) begin
      for (forvar214 = (1'h0); (forvar214 < (2'h3)); forvar214 = (forvar214 + (1'h1)))
        begin
          for (forvar215 = (1'h0); (forvar215 < (1'h1)); forvar215 = (forvar215 + (1'h1)))
            begin
              reg216 <= ((^$signed((-$unsigned(reg25)))) ?
                  ($unsigned({$unsigned(reg29)}) ?
                      (forvar215 < $signed($signed((8'hb3)))) : (reg31[(1'h1):(1'h1)] + reg46[(3'h6):(3'h5)])) : $signed($signed(((~wire54) | $signed(wire51)))));
              reg217 = {$unsigned($unsigned((wire1[(3'h5):(2'h2)] ?
                      $signed(wire0) : (wire3 ? reg13 : reg40))))};
              reg218 = (!$unsigned(($unsigned($unsigned(wire49)) ?
                  {(wire210 ? wire49 : forvar215)} : {(~|reg28)})));
              reg219 = ($signed({reg8[(2'h3):(2'h3)]}) ? {wire2} : wire52);
              reg220 <= (~^$signed((&(8'hae))));
            end
          reg221 <= ($signed((~(wire2[(3'h6):(1'h0)] <= (reg35 ?
              wire52 : wire213)))) || $unsigned({(|(reg220 >= reg15))}));
          reg222 <= $unsigned(reg22);
          for (forvar223 = (1'h0); (forvar223 < (1'h1)); forvar223 = (forvar223 + (1'h1)))
            begin
              reg224 <= $signed(((~(wire49[(5'h11):(4'h9)] * (reg30 ?
                  reg30 : reg8))) | (~&$signed(wire53))));
              reg225 = reg13[(3'h7):(2'h3)];
              reg226 = $signed({reg30[(1'h1):(1'h1)],
                  $signed(reg225[(3'h6):(2'h3)])});
              reg227 = $signed($unsigned(((+reg28[(1'h0):(1'h0)]) ?
                  reg37[(4'ha):(4'ha)] : (+$unsigned(forvar214)))));
              reg228 <= reg46;
            end
        end
      for (forvar229 = (1'h0); (forvar229 < (3'h4)); forvar229 = (forvar229 + (1'h1)))
        begin
          reg230 <= (~^$signed($unsigned($unsigned($signed((8'hbf))))));
          for (forvar231 = (1'h0); (forvar231 < (3'h4)); forvar231 = (forvar231 + (1'h1)))
            begin
              reg232 = (wire55[(4'hb):(3'h6)] | reg220[(1'h0):(1'h0)]);
              reg233 <= (reg30[(1'h1):(1'h1)] ^~ (|(reg220[(1'h1):(1'h0)] & (8'ha9))));
              reg234 = ((reg219[(4'h9):(2'h2)] << $signed((~^$unsigned(forvar231)))) * (~&{$signed(wire3),
                  reg219[(1'h0):(1'h0)]}));
              reg235 <= (+({$signed({reg221}),
                  ({(8'hac)} ?
                      (|wire54) : forvar229)} >= (forvar214[(1'h1):(1'h1)] ~^ $signed($unsigned(reg232)))));
            end
          for (forvar236 = (1'h0); (forvar236 < (2'h3)); forvar236 = (forvar236 + (1'h1)))
            begin
              reg237 <= reg230;
              reg238 = forvar229[(1'h0):(1'h0)];
              reg239 <= {(~|$signed($unsigned({reg46, (8'hbf)})))};
              reg240 = $signed((!reg227));
            end
          for (forvar241 = (1'h0); (forvar241 < (1'h0)); forvar241 = (forvar241 + (1'h1)))
            begin
              reg242 = ($unsigned(reg221) ?
                  $unsigned($signed(reg31)) : forvar229[(4'h9):(2'h3)]);
            end
          for (forvar243 = (1'h0); (forvar243 < (1'h0)); forvar243 = (forvar243 + (1'h1)))
            begin
              reg244 <= ($unsigned((~^wire51)) >>> reg25);
              reg245 <= reg232;
              reg246 <= forvar223[(1'h1):(1'h0)];
            end
        end
    end
  assign wire247 = reg221[(3'h7):(3'h5)];
  assign wire248 = $unsigned((8'ha5));
  always
    @(posedge clk) begin
      reg249 <= $unsigned($unsigned($unsigned(($signed(wire1) ?
          $signed((8'hb4)) : reg22))));
      reg250 <= $signed((8'ha4));
      reg251 <= (8'hb6);
      for (forvar252 = (1'h0); (forvar252 < (3'h4)); forvar252 = (forvar252 + (1'h1)))
        begin
          for (forvar253 = (1'h0); (forvar253 < (1'h0)); forvar253 = (forvar253 + (1'h1)))
            begin
              reg254 <= $unsigned(reg251);
            end
          for (forvar255 = (1'h0); (forvar255 < (1'h0)); forvar255 = (forvar255 + (1'h1)))
            begin
              reg256 = $signed(reg28);
              reg257 <= (^~(8'hae));
              reg258 <= (&reg10[(2'h2):(1'h0)]);
            end
          for (forvar259 = (1'h0); (forvar259 < (2'h2)); forvar259 = (forvar259 + (1'h1)))
            begin
              reg260 <= (reg246 ?
                  (($unsigned((reg249 <= wire51)) | (8'h9d)) ?
                      (reg245 ?
                          (reg15[(3'h4):(1'h0)] != {reg30,
                              (8'ha4)}) : (~|(reg250 <<< forvar259))) : {(~|(+reg10)),
                          reg36}) : $unsigned(($unsigned(reg28[(4'he):(3'h5)]) ?
                      {reg44,
                          $signed(reg46)} : $signed(reg41[(4'hc):(3'h7)]))));
              reg261 = (^~$signed({reg224[(1'h0):(1'h0)]}));
            end
          reg262 <= $signed((|(~^(^$signed(reg224)))));
          for (forvar263 = (1'h0); (forvar263 < (1'h1)); forvar263 = (forvar263 + (1'h1)))
            begin
              reg264 <= (+(&forvar253[(3'h7):(3'h7)]));
              reg265 <= reg262;
              reg266 = $unsigned((~^reg13));
              reg267 <= $signed(reg44);
              reg268 <= ($signed(reg235[(4'h9):(3'h4)]) ?
                  (!((~reg43) ^ reg43[(2'h3):(2'h2)])) : (&(((reg264 ?
                      reg224 : wire213) || {reg46,
                      (8'hab)}) && (^~(reg45 && forvar253)))));
            end
        end
    end
  module269 #() modinst356 (.wire270(wire49), .y(wire355), .wire271(reg233), .clk(clk), .wire273(reg13), .wire274(reg37), .wire272(reg265));
  assign wire357 = reg10[(4'h8):(1'h0)];
  assign wire358 = wire1;
  assign wire359 = ((reg36[(4'h8):(2'h3)] ?
                           $unsigned((~|(reg235 ?
                               reg31 : reg28))) : {$unsigned((8'ha0))}) ?
                       reg13[(3'h4):(1'h0)] : $signed((((reg249 | reg30) & wire56[(1'h1):(1'h0)]) ?
                           (|(wire1 ? wire2 : reg15)) : (8'hbf))));
  assign wire360 = (8'hbe);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module269  (y, clk, wire274, wire273, wire272, wire271, wire270);
  output wire [(32'h1f3):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h10):(1'h0)] wire274;
  input wire signed [(5'h12):(1'h0)] wire273;
  input wire [(5'h15):(1'h0)] wire272;
  input wire signed [(3'h7):(1'h0)] wire271;
  input wire [(3'h6):(1'h0)] wire270;
  wire [(3'h7):(1'h0)] wire323;
  wire signed [(5'h11):(1'h0)] wire322;
  wire signed [(4'hd):(1'h0)] wire321;
  wire signed [(5'h11):(1'h0)] wire320;
  wire [(4'h9):(1'h0)] wire318;
  wire signed [(3'h6):(1'h0)] wire276;
  wire [(5'h12):(1'h0)] wire275;
  reg [(4'hc):(1'h0)] reg354 = (1'h0);
  reg [(4'h8):(1'h0)] reg353 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg352 = (1'h0);
  reg [(4'he):(1'h0)] reg349 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg348 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg347 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg345 = (1'h0);
  reg [(5'h15):(1'h0)] reg343 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg342 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg339 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg337 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg335 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg332 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg331 = (1'h0);
  reg [(4'hc):(1'h0)] reg330 = (1'h0);
  reg [(3'h5):(1'h0)] reg325 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg351 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar350 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar346 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg344 = (1'h0);
  reg [(5'h14):(1'h0)] forvar341 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar340 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg338 = (1'h0);
  reg signed [(4'he):(1'h0)] reg336 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg334 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg333 = (1'h0);
  reg [(5'h15):(1'h0)] reg329 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg328 = (1'h0);
  reg [(4'h8):(1'h0)] reg327 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar326 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar324 = (1'h0);
  assign y = {wire323,
                 wire322,
                 wire321,
                 wire320,
                 wire318,
                 wire276,
                 wire275,
                 reg354,
                 reg353,
                 reg352,
                 reg349,
                 reg348,
                 reg347,
                 reg345,
                 reg343,
                 reg342,
                 reg339,
                 reg337,
                 reg335,
                 reg332,
                 reg331,
                 reg330,
                 reg325,
                 reg351,
                 forvar350,
                 forvar346,
                 reg344,
                 forvar341,
                 forvar340,
                 reg338,
                 reg336,
                 reg334,
                 reg333,
                 reg329,
                 reg328,
                 reg327,
                 forvar326,
                 forvar324,
                 (1'h0)};
  assign wire275 = (wire273 ^~ wire274);
  assign wire276 = $unsigned((|wire271[(1'h0):(1'h0)]));
  module277 #() modinst319 (wire318, clk, wire275, wire272, wire274, wire273);
  assign wire320 = {{($signed(wire274) ?
                               {(wire271 ^~ wire275),
                                   $unsigned(wire270)} : {$unsigned((8'hbe))})},
                       ((($signed(wire272) ?
                               {wire272,
                                   wire270} : wire270) >> $unsigned($unsigned(wire271))) ?
                           ($signed((~wire273)) ?
                               $unsigned(((8'ha9) ?
                                   wire318 : (8'hbb))) : ((wire272 <= wire271) ?
                                   $unsigned(wire270) : (&wire275))) : wire276)};
  assign wire321 = (&$signed((wire275 <<< $signed((8'hb2)))));
  assign wire322 = ((~$unsigned(wire272[(5'h11):(4'he)])) == (wire270[(2'h3):(2'h2)] >= (!((8'haf) == (8'hbd)))));
  assign wire323 = wire320[(5'h10):(1'h1)];
  always
    @(posedge clk) begin
      for (forvar324 = (1'h0); (forvar324 < (2'h2)); forvar324 = (forvar324 + (1'h1)))
        begin
          reg325 <= ((wire275 ^ (~(wire321 & ((8'hac) - wire276)))) ?
              wire270[(1'h0):(1'h0)] : (((~^wire274[(2'h2):(1'h0)]) - (|(forvar324 ?
                  wire322 : (8'ha5)))) < wire272[(4'h8):(2'h3)]));
          for (forvar326 = (1'h0); (forvar326 < (2'h3)); forvar326 = (forvar326 + (1'h1)))
            begin
              reg327 = $signed(wire320);
              reg328 = ((7'h42) + $unsigned(($signed(wire274[(4'he):(3'h5)]) ?
                  ($signed(wire272) ? $signed(wire323) : wire318) : (((8'hb7) ?
                          wire322 : wire275) ?
                      (~|wire318) : (wire320 ? wire323 : wire321)))));
              reg329 = $unsigned(wire318);
              reg330 <= reg328;
              reg331 <= $unsigned((8'h9c));
            end
          if (($signed((!$signed(wire273[(3'h6):(1'h1)]))) | (({wire322[(4'he):(1'h1)],
                      ((8'hbc) || reg327)} ?
                  ($unsigned(wire322) ?
                      {wire318, wire274} : (+wire272)) : (wire270 ?
                      (reg330 ? wire271 : reg328) : wire274[(4'h9):(2'h3)])) ?
              wire270[(2'h2):(1'h1)] : wire276)))
            begin
              reg332 <= $unsigned(forvar326[(4'hb):(3'h4)]);
              reg333 = {reg331};
              reg334 = ($unsigned(reg328[(1'h1):(1'h1)]) ?
                  reg327[(1'h0):(1'h0)] : {(({reg328, reg329} ?
                          (8'h9f) : {reg325}) <<< {$signed(forvar326), reg329}),
                      reg332});
              reg335 <= wire270;
              reg336 = wire322[(5'h11):(1'h1)];
            end
          else
            begin
              reg333 = (((^~$unsigned((forvar324 ?
                      wire318 : wire321))) ~^ wire272[(5'h14):(4'h8)]) ?
                  {(^((reg328 ? (8'hb3) : reg329) ?
                          $signed(forvar326) : $unsigned(reg333)))} : (wire270[(2'h3):(1'h1)] + (((reg327 ?
                          wire274 : reg334) ?
                      (reg331 && forvar324) : (reg325 ?
                          forvar326 : wire276)) >> ((wire322 ?
                      reg330 : reg325) + (reg333 ? forvar326 : reg334)))));
              reg334 = wire272;
              reg335 <= $unsigned(reg330);
              reg337 <= wire318;
              reg338 = wire320[(4'hc):(3'h5)];
            end
        end
      reg339 <= $unsigned($signed(reg330));
      for (forvar340 = (1'h0); (forvar340 < (1'h1)); forvar340 = (forvar340 + (1'h1)))
        begin
          for (forvar341 = (1'h0); (forvar341 < (3'h4)); forvar341 = (forvar341 + (1'h1)))
            begin
              reg342 <= reg337[(1'h1):(1'h1)];
              reg343 <= $unsigned(forvar326);
              reg344 = {{(+({reg343, reg327} <= forvar340)),
                      ((reg343 ? (~&(8'hb7)) : wire271) ?
                          ((8'hbf) ?
                              $unsigned((8'h9d)) : forvar341) : ((reg343 * reg333) ?
                              reg327 : (reg337 ? wire271 : reg331)))}};
              reg345 <= {(~(^$unsigned(reg327)))};
            end
          for (forvar346 = (1'h0); (forvar346 < (3'h4)); forvar346 = (forvar346 + (1'h1)))
            begin
              reg347 <= $unsigned($signed({((wire320 ?
                      wire320 : (8'hb7)) & $unsigned(wire274)),
                  (~^wire272[(4'h8):(1'h1)])}));
              reg348 <= $signed($signed(({(~|reg342), $unsigned((8'hab))} ?
                  $signed(((8'hae) + reg337)) : ((8'ha8) ?
                      {(8'ha6), wire321} : reg337[(3'h5):(2'h2)]))));
              reg349 <= $unsigned(forvar346);
            end
          for (forvar350 = (1'h0); (forvar350 < (3'h4)); forvar350 = (forvar350 + (1'h1)))
            begin
              reg351 = wire323[(2'h2):(1'h0)];
              reg352 <= $signed((reg343[(2'h2):(1'h1)] << ($unsigned({reg327,
                  (7'h41)}) && (~&reg337[(4'hb):(3'h5)]))));
              reg353 <= (forvar341[(5'h10):(4'hb)] <= {wire320[(3'h6):(3'h6)]});
            end
        end
      reg354 <= ((~&$signed(reg347[(4'h9):(2'h2)])) ?
          $signed((8'hb6)) : ({((^(8'hb9)) + reg348),
                  {(reg342 ? wire323 : wire271), reg344}} ?
              reg345 : ({reg329[(5'h14):(3'h7)], $signed((8'hbb))} ?
                  ((reg342 ?
                      reg338 : (7'h44)) * (!wire321)) : $unsigned($unsigned(forvar346)))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module57  (y, clk, wire58, wire59, wire60, wire61);
  output wire [(32'h14b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire58;
  input wire signed [(4'h8):(1'h0)] wire59;
  input wire signed [(4'h9):(1'h0)] wire60;
  input wire signed [(3'h6):(1'h0)] wire61;
  wire [(3'h6):(1'h0)] wire209;
  wire [(4'ha):(1'h0)] wire208;
  wire signed [(3'h5):(1'h0)] wire62;
  wire [(5'h12):(1'h0)] wire81;
  wire [(5'h13):(1'h0)] wire206;
  reg [(4'h8):(1'h0)] reg63 = (1'h0);
  reg [(4'ha):(1'h0)] reg65 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg66 = (1'h0);
  reg [(5'h15):(1'h0)] reg70 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg71 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg74 = (1'h0);
  reg [(4'h8):(1'h0)] reg75 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg76 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg79 = (1'h0);
  reg [(5'h13):(1'h0)] reg80 = (1'h0);
  reg [(4'hd):(1'h0)] reg73 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg78 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar74 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar78 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg77 = (1'h0);
  reg [(3'h7):(1'h0)] forvar73 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg72 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg69 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg68 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg67 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar64 = (1'h0);
  assign y = {wire209,
                 wire208,
                 wire62,
                 wire81,
                 wire206,
                 reg63,
                 reg65,
                 reg66,
                 reg70,
                 reg71,
                 reg74,
                 reg75,
                 reg76,
                 reg79,
                 reg80,
                 reg73,
                 reg78,
                 forvar74,
                 forvar78,
                 reg77,
                 forvar73,
                 reg72,
                 reg69,
                 reg68,
                 reg67,
                 forvar64,
                 (1'h0)};
  assign wire62 = $unsigned($unsigned({$unsigned(wire59),
                      $unsigned((&wire60))}));
  always
    @(posedge clk) begin
      reg63 <= $signed({(~$signed((wire58 >> wire62)))});
      for (forvar64 = (1'h0); (forvar64 < (2'h2)); forvar64 = (forvar64 + (1'h1)))
        begin
          if (($unsigned(wire59[(3'h6):(2'h3)]) ?
              wire61[(1'h0):(1'h0)] : (&{wire59, {(reg63 & wire61)}})))
            begin
              reg65 <= $unsigned((^(forvar64 ?
                  $unsigned((~&wire61)) : ((~wire58) ?
                      reg63[(2'h3):(1'h0)] : wire58))));
              reg66 <= {(&reg65), (~&wire60[(3'h5):(2'h2)])};
            end
          else
            begin
              reg67 = (^~(-(((wire61 != reg63) >>> {reg65, reg63}) & (wire58 ?
                  $signed(wire62) : $signed(forvar64)))));
              reg68 = (|{(~$unsigned({wire60, reg65})),
                  (wire58[(4'h8):(2'h2)] ? (8'hbb) : wire61[(3'h5):(1'h1)])});
              reg69 = $unsigned({(+(&(wire62 ? forvar64 : forvar64))), reg68});
              reg70 <= $signed((~^$unsigned($signed((wire59 == wire62)))));
            end
        end
      reg71 <= $signed($unsigned($signed(reg68)));
      if ((reg69 != $unsigned({forvar64})))
        begin
          reg72 = reg70;
          for (forvar73 = (1'h0); (forvar73 < (1'h0)); forvar73 = (forvar73 + (1'h1)))
            begin
              reg74 <= (($signed(forvar64[(1'h1):(1'h1)]) ?
                  $signed($unsigned($signed(reg68))) : (!((8'ha7) ?
                      $unsigned(reg68) : (reg72 ?
                          (8'hb0) : reg65)))) == ($signed((8'hab)) >>> (|(forvar64 ?
                  (7'h42) : (reg70 ? wire58 : wire62)))));
              reg75 <= reg67;
              reg76 <= (~&(+(reg68 ?
                  (~^$unsigned(wire62)) : $unsigned({wire60, (8'hb4)}))));
              reg77 = (($unsigned(wire61[(2'h3):(1'h0)]) << reg70[(1'h1):(1'h1)]) ?
                  (8'hb0) : wire61);
            end
          for (forvar78 = (1'h0); (forvar78 < (3'h4)); forvar78 = (forvar78 + (1'h1)))
            begin
              reg79 <= wire58;
            end
          reg80 <= ($signed((7'h42)) ~^ $unsigned((~^$signed(reg71[(4'hb):(3'h5)]))));
        end
      else
        begin
          reg72 = {wire58,
              $unsigned(((~wire59[(3'h6):(1'h0)]) ^ (~^$signed(reg65))))};
          reg73 <= (+{(8'hba)});
          for (forvar74 = (1'h0); (forvar74 < (2'h2)); forvar74 = (forvar74 + (1'h1)))
            begin
              reg75 <= (((+{$signed(wire60),
                      $signed(reg75)}) <<< (reg75 | (forvar78 ?
                      reg68[(1'h1):(1'h0)] : (8'hb8)))) ?
                  reg72 : $signed(reg80));
              reg77 = wire61;
              reg78 <= reg69[(1'h1):(1'h0)];
            end
        end
    end
  assign wire81 = $unsigned(reg70[(4'h9):(1'h0)]);
  module82 #() modinst207 (wire206, clk, reg75, wire81, reg80, reg63);
  assign wire208 = $unsigned((($signed($signed(reg74)) ?
                       $signed(wire81) : wire61[(1'h0):(1'h0)]) <<< $signed(wire60)));
  assign wire209 = {$unsigned($signed((reg80[(2'h2):(2'h2)] ^ reg65)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module82  (y, clk, wire86, wire85, wire84, wire83);
  output wire [(32'h53d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire86;
  input wire [(4'hf):(1'h0)] wire85;
  input wire signed [(4'h8):(1'h0)] wire84;
  input wire [(4'h8):(1'h0)] wire83;
  wire signed [(3'h6):(1'h0)] wire205;
  wire [(4'h8):(1'h0)] wire162;
  wire [(5'h10):(1'h0)] wire161;
  wire signed [(2'h2):(1'h0)] wire160;
  wire [(3'h6):(1'h0)] wire159;
  wire signed [(4'hd):(1'h0)] wire158;
  wire [(5'h10):(1'h0)] wire157;
  wire signed [(4'h9):(1'h0)] wire156;
  wire signed [(5'h11):(1'h0)] wire155;
  wire signed [(5'h10):(1'h0)] wire154;
  wire [(4'h8):(1'h0)] wire153;
  wire [(3'h6):(1'h0)] wire152;
  wire signed [(4'h8):(1'h0)] wire92;
  wire signed [(4'hb):(1'h0)] wire91;
  wire signed [(4'hb):(1'h0)] wire90;
  wire [(5'h12):(1'h0)] wire89;
  wire [(4'hf):(1'h0)] wire88;
  wire [(2'h3):(1'h0)] wire87;
  reg [(4'hf):(1'h0)] reg204 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg203 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg202 = (1'h0);
  reg [(3'h4):(1'h0)] reg199 = (1'h0);
  reg signed [(4'he):(1'h0)] reg197 = (1'h0);
  reg [(5'h13):(1'h0)] reg195 = (1'h0);
  reg [(3'h7):(1'h0)] reg192 = (1'h0);
  reg [(4'ha):(1'h0)] reg191 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg190 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg188 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg186 = (1'h0);
  reg [(5'h11):(1'h0)] reg180 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg179 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg178 = (1'h0);
  reg [(5'h12):(1'h0)] reg174 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg173 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg168 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg167 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg166 = (1'h0);
  reg [(5'h12):(1'h0)] reg165 = (1'h0);
  reg [(4'hf):(1'h0)] reg150 = (1'h0);
  reg [(5'h14):(1'h0)] reg145 = (1'h0);
  reg [(4'hb):(1'h0)] reg141 = (1'h0);
  reg [(3'h4):(1'h0)] reg140 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg139 = (1'h0);
  reg [(5'h10):(1'h0)] reg138 = (1'h0);
  reg [(3'h7):(1'h0)] reg137 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg134 = (1'h0);
  reg [(3'h7):(1'h0)] reg133 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg130 = (1'h0);
  reg [(4'hd):(1'h0)] reg129 = (1'h0);
  reg [(5'h10):(1'h0)] reg126 = (1'h0);
  reg [(3'h6):(1'h0)] reg124 = (1'h0);
  reg [(4'h8):(1'h0)] reg123 = (1'h0);
  reg [(4'ha):(1'h0)] reg118 = (1'h0);
  reg [(5'h15):(1'h0)] reg114 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg112 = (1'h0);
  reg [(5'h11):(1'h0)] reg111 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg110 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg107 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg106 = (1'h0);
  reg [(4'ha):(1'h0)] reg104 = (1'h0);
  reg [(2'h3):(1'h0)] reg102 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg100 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg97 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar201 = (1'h0);
  reg [(4'ha):(1'h0)] reg200 = (1'h0);
  reg [(4'hb):(1'h0)] reg198 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar196 = (1'h0);
  reg [(2'h3):(1'h0)] forvar194 = (1'h0);
  reg [(5'h15):(1'h0)] forvar193 = (1'h0);
  reg [(5'h11):(1'h0)] reg189 = (1'h0);
  reg [(5'h12):(1'h0)] forvar187 = (1'h0);
  reg [(4'hb):(1'h0)] reg185 = (1'h0);
  reg [(5'h13):(1'h0)] forvar184 = (1'h0);
  reg [(5'h12):(1'h0)] reg183 = (1'h0);
  reg [(4'hb):(1'h0)] reg182 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar181 = (1'h0);
  reg [(4'hc):(1'h0)] reg177 = (1'h0);
  reg [(5'h10):(1'h0)] forvar176 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar175 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg172 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg171 = (1'h0);
  reg [(5'h15):(1'h0)] reg170 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar169 = (1'h0);
  reg [(5'h10):(1'h0)] forvar164 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar163 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg151 = (1'h0);
  reg [(4'hd):(1'h0)] forvar149 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg148 = (1'h0);
  reg [(4'ha):(1'h0)] reg147 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg146 = (1'h0);
  reg [(4'hb):(1'h0)] reg144 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar143 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar142 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar136 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg135 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar132 = (1'h0);
  reg [(5'h14):(1'h0)] reg131 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar128 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg127 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg125 = (1'h0);
  reg [(5'h11):(1'h0)] reg122 = (1'h0);
  reg [(5'h12):(1'h0)] reg121 = (1'h0);
  reg [(2'h2):(1'h0)] reg120 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar119 = (1'h0);
  reg [(4'h8):(1'h0)] reg117 = (1'h0);
  reg [(3'h6):(1'h0)] reg116 = (1'h0);
  reg [(3'h4):(1'h0)] forvar115 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg113 = (1'h0);
  reg [(3'h5):(1'h0)] forvar109 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar108 = (1'h0);
  reg [(4'hd):(1'h0)] reg105 = (1'h0);
  reg [(3'h6):(1'h0)] forvar103 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg101 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar99 = (1'h0);
  reg [(4'hc):(1'h0)] reg98 = (1'h0);
  reg [(5'h11):(1'h0)] reg96 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar95 = (1'h0);
  reg [(3'h7):(1'h0)] forvar94 = (1'h0);
  reg [(4'hd):(1'h0)] reg93 = (1'h0);
  assign y = {wire205,
                 wire162,
                 wire161,
                 wire160,
                 wire159,
                 wire158,
                 wire157,
                 wire156,
                 wire155,
                 wire154,
                 wire153,
                 wire152,
                 wire92,
                 wire91,
                 wire90,
                 wire89,
                 wire88,
                 wire87,
                 reg204,
                 reg203,
                 reg202,
                 reg199,
                 reg197,
                 reg195,
                 reg192,
                 reg191,
                 reg190,
                 reg188,
                 reg186,
                 reg180,
                 reg179,
                 reg178,
                 reg174,
                 reg173,
                 reg168,
                 reg167,
                 reg166,
                 reg165,
                 reg150,
                 reg145,
                 reg141,
                 reg140,
                 reg139,
                 reg138,
                 reg137,
                 reg134,
                 reg133,
                 reg130,
                 reg129,
                 reg126,
                 reg124,
                 reg123,
                 reg118,
                 reg114,
                 reg112,
                 reg111,
                 reg110,
                 reg107,
                 reg106,
                 reg104,
                 reg102,
                 reg100,
                 reg97,
                 forvar201,
                 reg200,
                 reg198,
                 forvar196,
                 forvar194,
                 forvar193,
                 reg189,
                 forvar187,
                 reg185,
                 forvar184,
                 reg183,
                 reg182,
                 forvar181,
                 reg177,
                 forvar176,
                 forvar175,
                 reg172,
                 reg171,
                 reg170,
                 forvar169,
                 forvar164,
                 forvar163,
                 reg151,
                 forvar149,
                 reg148,
                 reg147,
                 reg146,
                 reg144,
                 forvar143,
                 forvar142,
                 forvar136,
                 reg135,
                 forvar132,
                 reg131,
                 forvar128,
                 reg127,
                 reg125,
                 reg122,
                 reg121,
                 reg120,
                 forvar119,
                 reg117,
                 reg116,
                 forvar115,
                 reg113,
                 forvar109,
                 forvar108,
                 reg105,
                 forvar103,
                 reg101,
                 forvar99,
                 reg98,
                 reg96,
                 forvar95,
                 forvar94,
                 reg93,
                 (1'h0)};
  assign wire87 = wire83;
  assign wire88 = wire87;
  assign wire89 = {(~|$unsigned((+$unsigned((7'h42)))))};
  assign wire90 = $signed(wire89[(5'h12):(3'h4)]);
  assign wire91 = wire83;
  assign wire92 = $unsigned((|$signed(wire87[(1'h0):(1'h0)])));
  always
    @(posedge clk) begin
      reg93 = {wire86[(1'h1):(1'h1)]};
      for (forvar94 = (1'h0); (forvar94 < (2'h3)); forvar94 = (forvar94 + (1'h1)))
        begin
          for (forvar95 = (1'h0); (forvar95 < (2'h3)); forvar95 = (forvar95 + (1'h1)))
            begin
              reg96 = (!wire90[(4'ha):(3'h5)]);
              reg97 <= $signed(wire84[(3'h6):(3'h5)]);
              reg98 = (forvar94 ?
                  ({(!(forvar94 - wire85)),
                      ($unsigned(wire84) ?
                          $unsigned(wire86) : reg97[(2'h2):(2'h2)])} << $unsigned((^~$signed(wire90)))) : wire84);
            end
          for (forvar99 = (1'h0); (forvar99 < (2'h3)); forvar99 = (forvar99 + (1'h1)))
            begin
              reg100 <= (~|(($signed($unsigned(wire86)) ?
                      $unsigned((wire87 ?
                          forvar94 : (8'hb9))) : (wire85[(4'ha):(1'h0)] ?
                          $unsigned(wire85) : (~&wire87))) ?
                  ((8'hab) == $unsigned({reg98})) : (($signed(wire83) ?
                      wire90 : (7'h42)) & $unsigned($signed((8'ha9))))));
              reg101 = $signed(wire88[(4'he):(4'ha)]);
            end
          reg102 <= (^(+reg97[(2'h2):(1'h1)]));
          for (forvar103 = (1'h0); (forvar103 < (3'h4)); forvar103 = (forvar103 + (1'h1)))
            begin
              reg104 <= (+(8'hb0));
              reg105 = $unsigned((($unsigned(wire84) ?
                  $signed(wire83) : $unsigned($signed(wire84))) | ((forvar103[(3'h5):(1'h1)] ?
                  $signed(forvar94) : reg96[(4'ha):(3'h5)]) >> (+(wire92 ?
                  reg104 : forvar103)))));
              reg106 <= (~&(($signed($unsigned(wire89)) ^ $signed((reg104 ?
                      wire85 : reg104))) ?
                  wire87 : $signed($unsigned($signed(wire91)))));
              reg107 <= reg105;
            end
        end
      for (forvar108 = (1'h0); (forvar108 < (2'h2)); forvar108 = (forvar108 + (1'h1)))
        begin
          for (forvar109 = (1'h0); (forvar109 < (1'h0)); forvar109 = (forvar109 + (1'h1)))
            begin
              reg110 <= (~^(wire89[(4'hc):(3'h6)] ?
                  forvar103 : ((reg102 ?
                          (reg98 ? forvar103 : wire84) : $unsigned((7'h42))) ?
                      (reg93 * (forvar109 <= reg102)) : ($signed(wire87) & (~^wire84)))));
              reg111 <= {$signed($signed({{wire83, wire92},
                      (wire86 ? (8'hb5) : (8'h9f))})),
                  wire92};
              reg112 <= $unsigned($signed($unsigned(($signed((8'ha3)) ?
                  (reg111 ~^ wire88) : reg93))));
              reg113 = wire84;
              reg114 <= forvar99[(1'h0):(1'h0)];
            end
          for (forvar115 = (1'h0); (forvar115 < (3'h4)); forvar115 = (forvar115 + (1'h1)))
            begin
              reg116 = ((reg113[(1'h1):(1'h0)] ?
                  $unsigned($signed(reg97)) : ({$unsigned(reg111),
                          (forvar99 == (8'ha7))} ?
                      $unsigned((reg100 ?
                          forvar95 : (8'hbb))) : $signed(reg93))) | $unsigned(({reg97[(2'h2):(2'h2)]} & $unsigned(reg105))));
            end
          reg117 = (forvar108[(2'h3):(2'h3)] * reg93);
        end
      reg118 <= $unsigned(wire87[(2'h2):(1'h1)]);
    end
  always
    @(posedge clk) begin
      for (forvar119 = (1'h0); (forvar119 < (2'h3)); forvar119 = (forvar119 + (1'h1)))
        begin
          if (((wire92 ?
                  (-{(wire92 ? reg112 : wire90),
                      (reg100 ?
                          wire90 : wire88)}) : ($unsigned(wire86) < (~|(~&wire87)))) ?
              (8'hb1) : wire83))
            begin
              reg120 = $signed((wire87 ?
                  (({reg114} || $unsigned(reg102)) ?
                      reg102 : wire89[(3'h6):(2'h3)]) : ((wire86 ?
                          forvar119[(4'h9):(2'h3)] : ((8'hb9) ?
                              (8'ha0) : reg114)) ?
                      wire86 : (wire91[(4'hb):(2'h2)] ?
                          (!wire90) : {wire88, wire83}))));
              reg121 = wire88[(4'h8):(1'h0)];
              reg122 = $signed((^~((|{wire89, wire87}) ?
                  $unsigned($signed(reg110)) : $unsigned(wire85))));
            end
          else
            begin
              reg123 <= (~^$unsigned($signed(wire84[(3'h6):(1'h0)])));
              reg124 <= (((8'hac) ?
                  $unsigned((-reg118)) : {(|(wire86 * reg118)),
                      (~&(~^(8'ha6)))}) == wire91[(2'h2):(2'h2)]);
              reg125 = $signed(((~^(~&{wire92,
                  wire89})) < $signed($signed($unsigned((8'hbf))))));
              reg126 <= wire86[(3'h7):(3'h4)];
              reg127 = $unsigned((wire88[(3'h4):(2'h3)] ?
                  reg112 : {$unsigned((~reg114))}));
            end
          for (forvar128 = (1'h0); (forvar128 < (1'h0)); forvar128 = (forvar128 + (1'h1)))
            begin
              reg129 <= (reg102 ? reg127 : wire85[(3'h7):(3'h7)]);
              reg130 <= ($unsigned(reg102[(1'h1):(1'h1)]) ^ $unsigned(((reg111 ?
                  (reg114 ? wire88 : (8'ha8)) : (wire85 ?
                      reg125 : (7'h44))) ^ ((wire87 ^~ forvar119) > (reg125 || reg125)))));
            end
          reg131 = reg104;
          for (forvar132 = (1'h0); (forvar132 < (1'h0)); forvar132 = (forvar132 + (1'h1)))
            begin
              reg133 <= wire87;
              reg134 <= (8'hab);
              reg135 = (reg102 ?
                  (((wire84[(1'h0):(1'h0)] == $signed((7'h44))) << ((reg118 > reg134) ?
                      reg121 : {wire90,
                          reg121})) == reg126) : forvar132[(1'h0):(1'h0)]);
            end
          for (forvar136 = (1'h0); (forvar136 < (2'h2)); forvar136 = (forvar136 + (1'h1)))
            begin
              reg137 <= reg131[(4'he):(3'h5)];
              reg138 <= {$signed($signed($unsigned((reg111 ?
                      wire87 : forvar128))))};
              reg139 <= reg129;
              reg140 <= $unsigned(reg123[(3'h7):(3'h7)]);
              reg141 <= ($unsigned(wire91) ^ $unsigned((~&$unsigned((8'hb7)))));
            end
        end
      for (forvar142 = (1'h0); (forvar142 < (2'h2)); forvar142 = (forvar142 + (1'h1)))
        begin
          for (forvar143 = (1'h0); (forvar143 < (2'h2)); forvar143 = (forvar143 + (1'h1)))
            begin
              reg144 = $unsigned($signed(($signed(reg141[(4'ha):(3'h7)]) != ($unsigned(forvar142) <= {wire87}))));
              reg145 <= reg144[(1'h1):(1'h0)];
              reg146 = ($signed($signed($unsigned((|(8'ha9))))) ?
                  reg112 : ((+($unsigned(reg134) | (reg129 ?
                      wire87 : reg139))) ^ {$unsigned((reg129 ?
                          reg106 : reg123))}));
            end
          reg147 = reg130;
          reg148 = {reg122[(2'h2):(1'h0)], wire86};
          for (forvar149 = (1'h0); (forvar149 < (1'h0)); forvar149 = (forvar149 + (1'h1)))
            begin
              reg150 <= (|$unsigned(((~^$signed((8'ha9))) ~^ reg124[(1'h0):(1'h0)])));
            end
        end
      reg151 = ($unsigned(reg144) ?
          ((((reg121 << reg102) ?
              reg122[(3'h5):(1'h0)] : (forvar132 + reg118)) || (&$unsigned(reg100))) < $signed(reg118)) : reg110);
    end
  assign wire152 = {(-$unsigned(reg124[(3'h6):(3'h4)]))};
  assign wire153 = $unsigned($signed($unsigned(((~&reg102) ?
                       $signed((8'h9c)) : $signed(reg126)))));
  assign wire154 = ((~|{(8'hba)}) <= reg134);
  assign wire155 = reg124;
  assign wire156 = $unsigned(wire84[(3'h6):(2'h3)]);
  assign wire157 = wire156;
  assign wire158 = $unsigned(reg102);
  assign wire159 = $unsigned({(~^wire154), (!reg118[(1'h1):(1'h1)])});
  assign wire160 = reg118;
  assign wire161 = wire91;
  assign wire162 = ((!wire83[(2'h2):(1'h1)]) <= ($unsigned($signed($signed(reg139))) ?
                       reg133[(2'h3):(2'h2)] : reg150[(4'he):(3'h5)]));
  always
    @(posedge clk) begin
      for (forvar163 = (1'h0); (forvar163 < (1'h0)); forvar163 = (forvar163 + (1'h1)))
        begin
          for (forvar164 = (1'h0); (forvar164 < (2'h3)); forvar164 = (forvar164 + (1'h1)))
            begin
              reg165 <= (+(((~^(reg137 ?
                  wire92 : reg139)) * wire152) > (forvar164[(4'he):(4'h9)] ?
                  (~(wire152 ?
                      wire90 : wire92)) : ($unsigned((8'ha2)) ^~ wire158))));
              reg166 <= $signed(($signed((+wire152)) ?
                  ((~^(|reg107)) == wire153[(2'h2):(1'h0)]) : ({(&wire85)} ?
                      $signed(wire155) : ((wire161 ?
                          reg137 : reg139) ^ reg118))));
              reg167 <= {$signed($unsigned((((8'h9f) ?
                      reg126 : reg126) >> (~wire84))))};
              reg168 <= reg139[(1'h1):(1'h0)];
            end
          for (forvar169 = (1'h0); (forvar169 < (2'h2)); forvar169 = (forvar169 + (1'h1)))
            begin
              reg170 = (reg165[(1'h0):(1'h0)] ?
                  ($unsigned($unsigned($unsigned((8'h9e)))) | wire84) : $unsigned(wire87));
              reg171 = {$unsigned((+($signed(reg130) >= reg111))),
                  $signed($unsigned((^~wire85)))};
              reg172 = (reg168 ?
                  {$unsigned(((forvar169 != wire154) & $unsigned(wire83)))} : $signed(reg168));
              reg173 <= $unsigned(((($unsigned(wire152) ?
                      $unsigned((8'hac)) : (~^reg134)) || {(reg129 | reg130),
                      (~|reg114)}) ?
                  {$signed($unsigned(reg112))} : (wire89[(4'hb):(3'h4)] >>> ((reg107 ?
                          reg124 : reg168) ?
                      ((8'hb4) ? reg165 : (8'had)) : {wire152, forvar164}))));
            end
        end
      reg174 <= (~&{(~|($unsigned((8'hb9)) ?
              wire154[(4'h8):(3'h5)] : (wire89 ? wire155 : wire87))),
          (-{(|wire83), (reg104 >> wire152)})});
      for (forvar175 = (1'h0); (forvar175 < (2'h2)); forvar175 = (forvar175 + (1'h1)))
        begin
          for (forvar176 = (1'h0); (forvar176 < (2'h2)); forvar176 = (forvar176 + (1'h1)))
            begin
              reg177 = reg174[(4'h9):(3'h4)];
              reg178 <= ($signed((wire158 ?
                      $signed(reg166[(3'h5):(3'h4)]) : $unsigned(forvar176))) ?
                  (wire156 ~^ (^~reg134)) : (reg138 != $unsigned((^~(wire162 ?
                      wire152 : reg139)))));
              reg179 <= $signed(wire88[(4'hd):(4'hc)]);
            end
          reg180 <= $unsigned((8'ha5));
        end
      for (forvar181 = (1'h0); (forvar181 < (2'h2)); forvar181 = (forvar181 + (1'h1)))
        begin
          reg182 = $signed((((8'h9d) & $signed((|reg111))) + reg104[(3'h5):(2'h3)]));
          reg183 = (~(($unsigned(reg150) ?
              $signed(wire83[(2'h2):(2'h2)]) : (reg114[(5'h15):(3'h5)] ?
                  (wire161 <<< reg182) : $unsigned(reg123))) >= reg150));
          for (forvar184 = (1'h0); (forvar184 < (1'h1)); forvar184 = (forvar184 + (1'h1)))
            begin
              reg185 = reg130[(1'h1):(1'h0)];
              reg186 <= {$signed((reg112 ?
                      $unsigned(reg110[(2'h2):(1'h1)]) : reg178)),
                  wire153[(3'h5):(2'h2)]};
            end
          for (forvar187 = (1'h0); (forvar187 < (1'h0)); forvar187 = (forvar187 + (1'h1)))
            begin
              reg188 <= reg110[(1'h0):(1'h0)];
              reg189 = (!$unsigned($signed((-((8'hb0) ? reg100 : (7'h40))))));
              reg190 <= $unsigned(reg182[(1'h0):(1'h0)]);
              reg191 <= $unsigned(reg179[(2'h2):(1'h1)]);
              reg192 <= $signed(((~|wire91[(4'ha):(2'h3)]) - reg138[(2'h3):(1'h0)]));
            end
        end
      for (forvar193 = (1'h0); (forvar193 < (2'h2)); forvar193 = (forvar193 + (1'h1)))
        begin
          for (forvar194 = (1'h0); (forvar194 < (2'h2)); forvar194 = (forvar194 + (1'h1)))
            begin
              reg195 <= (reg180 * ((^$unsigned((+(7'h41)))) <= ((reg97 - (wire88 + wire160)) ?
                  $signed($signed((8'hb6))) : {(forvar181 ?
                          (8'hbd) : (8'had))})));
            end
          for (forvar196 = (1'h0); (forvar196 < (1'h1)); forvar196 = (forvar196 + (1'h1)))
            begin
              reg197 <= {reg166[(2'h3):(1'h0)], reg114[(4'hb):(3'h7)]};
              reg198 = (reg111 ?
                  $unsigned(((reg186[(4'hb):(4'hb)] <<< (wire161 ?
                      (7'h41) : reg168)) << wire162)) : $unsigned(($unsigned($signed(wire162)) <<< (7'h42))));
              reg199 <= (~reg168[(2'h3):(2'h3)]);
            end
          reg200 = forvar163[(4'hc):(3'h7)];
          for (forvar201 = (1'h0); (forvar201 < (1'h1)); forvar201 = (forvar201 + (1'h1)))
            begin
              reg202 <= wire159;
              reg203 <= reg190[(3'h4):(3'h4)];
              reg204 <= ({$unsigned($signed($signed((8'hac))))} ?
                  (-$unsigned(($signed(reg134) >> (reg199 ?
                      forvar193 : wire86)))) : reg186);
            end
        end
    end
  assign wire205 = $signed((-(((reg168 + (8'hae)) ?
                           $signed(wire84) : reg166[(1'h1):(1'h1)]) ?
                       reg126 : wire157[(4'ha):(4'h8)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module277
#(parameter param317 = (((^~(+((8'ha0) || (8'had)))) ? (({(8'ha8), (7'h40)} ? (~&(8'hba)) : {(8'h9c), (8'hb0)}) ? (((8'h9d) | (8'h9d)) ~^ ((8'haa) ? (8'hb7) : (8'hbd))) : (^((8'hb3) && (8'hb8)))) : ((((8'hbb) ? (8'hac) : (8'hab)) != ((7'h44) ? (8'ha6) : (8'ha5))) == {(+(8'ha4))})) ? (((+(~(8'h9e))) ? ((~^(7'h42)) == ((8'hb1) ? (8'ha1) : (8'hbb))) : {(+(7'h42)), ((8'hb9) ? (8'hac) : (8'hb4))}) <= {(-{(8'haa), (8'hb0)}), (^(8'h9d))}) : (({(~(8'ha9))} ? ((~&(8'ha7)) ? (&(7'h41)) : ((8'hac) <= (8'hab))) : {{(8'hb9), (8'hba)}, ((8'hbe) <<< (7'h40))}) ? ({((8'haa) ? (8'haf) : (8'hb4)), ((8'haf) && (8'ha5))} - ((8'ha0) * ((8'h9d) ? (8'haf) : (8'ha1)))) : ((((8'hbd) ? (8'hbe) : (8'ha3)) <<< ((8'hb8) & (7'h41))) <= ((~&(8'hbd)) ? ((8'ha8) ? (8'hbe) : (8'hba)) : (8'hb8))))))
(y, clk, wire281, wire280, wire279, wire278);
  output wire [(32'h1a8):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h11):(1'h0)] wire281;
  input wire [(3'h6):(1'h0)] wire280;
  input wire signed [(5'h10):(1'h0)] wire279;
  input wire signed [(5'h12):(1'h0)] wire278;
  wire [(5'h12):(1'h0)] wire316;
  wire [(4'h8):(1'h0)] wire315;
  wire [(4'hd):(1'h0)] wire314;
  wire signed [(3'h7):(1'h0)] wire311;
  wire signed [(4'hd):(1'h0)] wire310;
  wire [(5'h11):(1'h0)] wire287;
  wire signed [(3'h6):(1'h0)] wire286;
  wire [(5'h12):(1'h0)] wire285;
  wire [(5'h13):(1'h0)] wire284;
  wire [(4'ha):(1'h0)] wire283;
  wire [(5'h14):(1'h0)] wire282;
  reg signed [(4'hd):(1'h0)] reg309 = (1'h0);
  reg [(2'h3):(1'h0)] reg308 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg307 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg305 = (1'h0);
  reg [(2'h2):(1'h0)] reg304 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg300 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg296 = (1'h0);
  reg [(2'h3):(1'h0)] reg292 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg291 = (1'h0);
  reg [(4'hb):(1'h0)] reg288 = (1'h0);
  reg [(5'h12):(1'h0)] reg313 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar312 = (1'h0);
  reg [(5'h14):(1'h0)] forvar306 = (1'h0);
  reg [(4'hb):(1'h0)] forvar303 = (1'h0);
  reg [(4'hd):(1'h0)] reg302 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg301 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg299 = (1'h0);
  reg [(3'h4):(1'h0)] reg298 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar297 = (1'h0);
  reg [(4'hb):(1'h0)] reg295 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar294 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg293 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar290 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar289 = (1'h0);
  assign y = {wire316,
                 wire315,
                 wire314,
                 wire311,
                 wire310,
                 wire287,
                 wire286,
                 wire285,
                 wire284,
                 wire283,
                 wire282,
                 reg309,
                 reg308,
                 reg307,
                 reg305,
                 reg304,
                 reg300,
                 reg296,
                 reg292,
                 reg291,
                 reg288,
                 reg313,
                 forvar312,
                 forvar306,
                 forvar303,
                 reg302,
                 reg301,
                 reg299,
                 reg298,
                 forvar297,
                 reg295,
                 forvar294,
                 reg293,
                 forvar290,
                 forvar289,
                 (1'h0)};
  assign wire282 = (wire281 ? wire281[(4'hc):(3'h4)] : wire279[(1'h1):(1'h1)]);
  assign wire283 = (wire280[(2'h3):(2'h2)] | ($signed($signed(wire278[(4'hb):(3'h7)])) >= {wire280[(3'h5):(2'h3)],
                       ((~wire282) ?
                           $unsigned((8'hb0)) : $unsigned(wire279))}));
  assign wire284 = ($signed((($signed(wire283) ?
                           (8'ha0) : $signed(wire281)) <<< ($signed(wire279) + wire280))) ?
                       wire278[(2'h3):(2'h2)] : wire280[(2'h2):(1'h0)]);
  assign wire285 = (~($unsigned((8'ha0)) ?
                       ((wire279[(3'h6):(1'h0)] > $signed(wire280)) << wire280) : (+((wire281 * wire278) ?
                           wire279 : $signed(wire282)))));
  assign wire286 = (($unsigned((!(+wire283))) <= (^~wire282)) ^~ (wire283 ?
                       $signed(wire279[(4'hb):(2'h2)]) : $unsigned(wire283)));
  assign wire287 = wire284;
  always
    @(posedge clk) begin
      reg288 <= $signed(({(8'ha3),
              ((wire282 >> wire286) ? wire278 : wire287[(4'hf):(4'hb)])} ?
          $unsigned($unsigned($unsigned(wire284))) : wire281[(3'h5):(3'h5)]));
      for (forvar289 = (1'h0); (forvar289 < (1'h1)); forvar289 = (forvar289 + (1'h1)))
        begin
          for (forvar290 = (1'h0); (forvar290 < (1'h1)); forvar290 = (forvar290 + (1'h1)))
            begin
              reg291 <= wire286[(1'h1):(1'h1)];
              reg292 <= ({$unsigned($unsigned((wire287 * wire284))),
                  ($signed((wire284 ? wire284 : reg288)) ?
                      {wire283} : $unsigned(forvar289[(4'h9):(3'h4)]))} - ($signed((8'ha7)) * wire286[(3'h4):(1'h0)]));
              reg293 = forvar289;
            end
          for (forvar294 = (1'h0); (forvar294 < (1'h1)); forvar294 = (forvar294 + (1'h1)))
            begin
              reg295 = reg292;
            end
          reg296 <= (^~((reg293[(3'h4):(2'h3)] ?
                  wire283 : $signed({wire284, reg288})) ?
              ({$signed(reg293), (forvar289 ? wire279 : (8'hb2))} ?
                  {wire279} : {forvar290[(1'h0):(1'h0)],
                      wire278}) : $unsigned((((7'h42) ?
                  wire280 : forvar289) - {wire281, forvar289}))));
          for (forvar297 = (1'h0); (forvar297 < (2'h3)); forvar297 = (forvar297 + (1'h1)))
            begin
              reg298 = $signed(($unsigned(((wire283 ? wire279 : wire282) ?
                  (8'hb7) : (wire286 ?
                      wire278 : forvar297))) < $unsigned($unsigned($unsigned((8'ha0))))));
              reg299 = $signed((~|(({forvar294} ?
                      $unsigned((8'hab)) : $signed(reg296)) ?
                  $signed($signed((8'haf))) : $unsigned((reg298 ?
                      forvar290 : reg298)))));
              reg300 <= $signed((-(8'hac)));
              reg301 = (wire283 == $unsigned((8'ha7)));
            end
          reg302 = {{reg295, (reg292[(1'h0):(1'h0)] | wire278[(2'h2):(1'h1)])},
              wire279};
        end
      for (forvar303 = (1'h0); (forvar303 < (2'h2)); forvar303 = (forvar303 + (1'h1)))
        begin
          reg304 <= reg301;
          reg305 <= $signed($unsigned($signed(wire284[(4'he):(4'he)])));
          for (forvar306 = (1'h0); (forvar306 < (1'h1)); forvar306 = (forvar306 + (1'h1)))
            begin
              reg307 <= $unsigned(wire280);
              reg308 <= reg301;
            end
        end
      reg309 <= $unsigned((8'h9e));
    end
  assign wire310 = {wire281[(4'h9):(3'h6)]};
  assign wire311 = $signed($signed($unsigned((+$signed(wire286)))));
  always
    @(posedge clk) begin
      for (forvar312 = (1'h0); (forvar312 < (1'h0)); forvar312 = (forvar312 + (1'h1)))
        begin
          reg313 = (({reg292[(1'h1):(1'h1)],
                  $unsigned((reg288 > (8'hac)))} < wire282[(2'h3):(2'h2)]) ?
              wire287[(4'h8):(3'h5)] : (~|reg305[(3'h5):(3'h5)]));
        end
    end
  assign wire314 = (wire310[(2'h2):(1'h1)] > reg309);
  assign wire315 = {((((reg307 ? wire314 : (7'h44)) ?
                                   $signed(reg288) : $unsigned(reg291)) ?
                               {reg292[(1'h0):(1'h0)]} : wire314) ?
                           {$signed((wire282 >> (8'hac))),
                               $signed($signed(reg300))} : (((wire284 ^ wire311) ?
                               $signed((8'ha5)) : $unsigned((8'hb9))) >> ((~wire282) >>> $unsigned(reg308))))};
  assign wire316 = ($signed(($signed({(8'ha7),
                           reg304}) ^ reg300[(4'hd):(1'h1)])) ?
                       wire311 : $unsigned($signed(wire280[(3'h5):(1'h1)])));
endmodule