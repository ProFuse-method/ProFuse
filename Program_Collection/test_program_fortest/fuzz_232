(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'ha7):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire51;
  wire [(3'h7):(1'h0)] wire49;
  wire signed [(4'ha):(1'h0)] wire48;
  wire [(4'ha):(1'h0)] wire47;
  wire signed [(4'h8):(1'h0)] wire44;
  wire signed [(4'h8):(1'h0)] wire42;
  wire signed [(2'h2):(1'h0)] wire41;
  wire signed [(4'ha):(1'h0)] wire36;
  wire signed [(3'h6):(1'h0)] wire4;
  reg signed [(4'ha):(1'h0)] reg46 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg45 = (1'h0);
  reg [(4'ha):(1'h0)] reg40 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg39 = (1'h0);
  reg [(4'hb):(1'h0)] reg38 = (1'h0);
  reg [(4'hb):(1'h0)] reg9 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg [(4'ha):(1'h0)] reg7 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg6 = (1'h0);
  reg [(4'h8):(1'h0)] reg5 = (1'h0);
  assign y = {wire51,
                 wire49,
                 wire48,
                 wire47,
                 wire44,
                 wire42,
                 wire41,
                 wire36,
                 wire4,
                 reg46,
                 reg45,
                 reg40,
                 reg39,
                 reg38,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = (wire2[(2'h3):(1'h1)] ^ $unsigned(wire2));
  always
    @(posedge clk) begin
      reg5 <= {wire1[(2'h3):(2'h3)]};
      if ($unsigned({$unsigned((wire4 ? wire0 : wire1))}))
        begin
          reg6 <= {$unsigned(wire4)};
          reg7 <= wire1;
          reg8 <= $signed(wire0[(4'h8):(1'h1)]);
        end
      else
        begin
          reg6 <= $signed((!reg7[(3'h7):(1'h1)]));
          reg7 <= ($unsigned((^reg8[(1'h1):(1'h0)])) & reg5);
        end
      reg9 <= wire1;
    end
  module10 #() modinst37 (.y(wire36), .wire12(reg9), .wire14(reg6), .wire11(wire3), .clk(clk), .wire13(wire1));
  always
    @(posedge clk) begin
      reg38 <= ($unsigned((~{reg5})) >> $signed($signed((^~wire0))));
      reg39 <= $signed($signed((~^$unsigned(reg5))));
      reg40 <= {{reg7[(3'h7):(3'h4)]}};
    end
  assign wire41 = $signed(reg9[(4'ha):(4'ha)]);
  module10 #() modinst43 (.wire11(reg5), .clk(clk), .wire12(reg8), .y(wire42), .wire13(reg40), .wire14(reg39));
  assign wire44 = {(((-(8'ha1)) ? $signed(wire4) : $signed(wire4)) ?
                          ((|reg7) ? wire1 : reg5) : (~$signed(reg9)))};
  always
    @(posedge clk) begin
      reg45 <= reg8[(3'h6):(3'h5)];
      reg46 <= ($signed($signed({wire1})) ?
          $unsigned({$signed(reg45)}) : (-($unsigned(reg9) ?
              (!wire2) : $unsigned(wire41))));
    end
  assign wire47 = {wire1[(3'h5):(2'h3)]};
  assign wire48 = reg8;
  module10 #() modinst50 (.y(wire49), .clk(clk), .wire12(reg9), .wire14(wire4), .wire11(wire44), .wire13(reg46));
  assign wire51 = $signed(reg9);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param35 = (({(~&(8'hae))} & (((8'ha3) >= (8'ha9)) ? ((8'h9c) - (8'h9f)) : ((8'h9e) > (8'haa)))) | ((!((8'hac) ? (8'hac) : (8'haf))) ? (&((8'ha7) ? (8'ha9) : (8'ha1))) : ((|(8'ha2)) <= (8'h9f)))))
(y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h40):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire14;
  input wire signed [(4'h9):(1'h0)] wire13;
  input wire [(4'hb):(1'h0)] wire12;
  input wire signed [(4'h8):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire33;
  wire signed [(4'ha):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire18;
  wire [(4'ha):(1'h0)] wire17;
  wire signed [(4'hb):(1'h0)] wire16;
  wire [(4'ha):(1'h0)] wire15;
  assign y = {wire33, wire19, wire18, wire17, wire16, wire15, (1'h0)};
  assign wire15 = (~^$signed(($unsigned(wire13) ?
                      $signed(wire14) : (wire11 ? (8'ha5) : wire11))));
  assign wire16 = wire12;
  assign wire17 = (&$signed((-(+wire13))));
  assign wire18 = (~|(^((wire16 ~^ wire16) ?
                      (wire15 ? wire11 : wire11) : wire13)));
  assign wire19 = (({wire11[(3'h6):(3'h5)]} ?
                          ($unsigned(wire17) + (wire14 ^~ wire18)) : {{(8'haa)}}) ?
                      ($unsigned($unsigned(wire16)) < wire16[(2'h2):(2'h2)]) : {wire17[(2'h2):(2'h2)]});
  module20 #() modinst34 (.y(wire33), .wire21(wire15), .wire24(wire18), .clk(clk), .wire22(wire12), .wire23(wire17));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param32 = (((((8'ha3) ? (8'ha3) : (8'hab)) ? ((8'ha9) > (8'ha9)) : ((8'hae) ? (8'ha5) : (8'ha6))) ? (+(-(8'hac))) : (((8'hae) ? (8'ha0) : (8'h9f)) ~^ (^~(8'ha5)))) == {({(8'ha4)} ? ((8'hab) ? (8'had) : (8'ha9)) : ((8'h9f) + (8'haf)))}))
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h39):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire24;
  input wire signed [(4'ha):(1'h0)] wire23;
  input wire signed [(4'hb):(1'h0)] wire22;
  input wire signed [(4'ha):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire31;
  wire signed [(3'h7):(1'h0)] wire30;
  wire signed [(3'h5):(1'h0)] wire29;
  wire [(4'ha):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire27;
  wire signed [(4'hb):(1'h0)] wire26;
  wire [(4'h8):(1'h0)] wire25;
  assign y = {wire31, wire30, wire29, wire28, wire27, wire26, wire25, (1'h0)};
  assign wire25 = (^$unsigned(((-wire24) + wire23[(4'h8):(2'h3)])));
  assign wire26 = $signed($signed(wire21));
  assign wire27 = $signed({wire21});
  assign wire28 = wire26[(3'h4):(2'h3)];
  assign wire29 = wire26;
  assign wire30 = (wire29 || wire25[(3'h6):(2'h3)]);
  assign wire31 = $signed(wire28[(3'h4):(2'h2)]);
endmodule