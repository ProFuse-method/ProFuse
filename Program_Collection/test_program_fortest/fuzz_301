(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(2'h2):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire69;
  wire signed [(3'h4):(1'h0)] wire21;
  wire [(3'h7):(1'h0)] wire20;
  wire signed [(4'ha):(1'h0)] wire10;
  wire [(4'h9):(1'h0)] wire9;
  wire signed [(2'h3):(1'h0)] wire8;
  wire [(3'h5):(1'h0)] wire7;
  wire [(2'h2):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire5;
  wire signed [(2'h3):(1'h0)] wire4;
  reg [(3'h4):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  reg [(4'h9):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg15 = (1'h0);
  reg [(4'hb):(1'h0)] reg14 = (1'h0);
  reg [(4'h9):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg12 = (1'h0);
  reg [(3'h4):(1'h0)] reg11 = (1'h0);
  assign y = {wire69,
                 wire21,
                 wire20,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 (1'h0)};
  assign wire4 = ({wire3} + (wire3 - wire0));
  assign wire5 = ({wire2} << (((wire1 ~^ (8'hac)) > wire1) ?
                     {$signed((8'hab))} : $unsigned({wire1})));
  assign wire6 = (^~(~wire5[(4'h8):(1'h1)]));
  assign wire7 = wire6[(1'h0):(1'h0)];
  assign wire8 = wire0[(3'h7):(1'h0)];
  assign wire9 = ((wire3 ? $unsigned(wire3) : (!$signed((8'ha1)))) ?
                     $signed(({wire2} >>> (wire6 ? wire0 : wire4))) : wire1);
  assign wire10 = ((^$unsigned((wire9 ?
                      wire0 : wire3))) >>> (wire7[(1'h0):(1'h0)] ?
                      ($unsigned(wire8) ?
                          (wire8 ?
                              wire1 : wire8) : (wire8 >>> wire1)) : $signed($unsigned(wire7))));
  always
    @(posedge clk) begin
      reg11 <= $unsigned(wire1[(1'h1):(1'h1)]);
      if ((^~$signed($unsigned(wire5))))
        begin
          reg12 <= (^~(((-wire6) > wire10[(3'h4):(3'h4)]) <= (!(|wire0))));
          reg13 <= $signed($unsigned((|(reg12 ~^ wire7))));
          reg14 <= $unsigned((!reg13));
        end
      else
        begin
          reg12 <= (~(wire7[(3'h5):(2'h2)] <<< {wire8[(1'h0):(1'h0)]}));
          reg13 <= wire2;
        end
      if ($signed(wire5[(1'h0):(1'h0)]))
        begin
          if ((($signed(wire9[(1'h1):(1'h1)]) ?
                  (|{wire0}) : wire0[(4'h8):(2'h3)]) ?
              $signed(((reg14 > reg11) ^~ (|wire10))) : (|$signed(((8'ha3) >>> wire0)))))
            begin
              reg15 <= $signed((^wire0));
              reg16 <= (&((!(wire9 > wire2)) > reg15));
            end
          else
            begin
              reg15 <= wire10[(2'h3):(1'h1)];
            end
          if ((8'hb0))
            begin
              reg17 <= reg13[(3'h6):(1'h0)];
              reg18 <= $unsigned(wire2);
            end
          else
            begin
              reg17 <= $signed(wire3);
            end
          if (wire4[(1'h1):(1'h1)])
            begin
              reg19 <= (^{(~&$unsigned(wire5))});
            end
          else
            begin
              reg19 <= wire4;
            end
        end
      else
        begin
          reg15 <= {$signed(reg19)};
          reg16 <= $signed(reg16);
        end
    end
  assign wire20 = (8'ha7);
  assign wire21 = $signed((|(^$unsigned((8'ha1)))));
  module22 #() modinst70 (.y(wire69), .wire24(reg16), .wire26(reg12), .clk(clk), .wire25(wire10), .wire23(wire9));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module22
#(parameter param68 = ({((~^(8'ha0)) ? (^~(8'ha9)) : (~^(8'ha7)))} >> (8'haa)))
(y, clk, wire26, wire25, wire24, wire23);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire26;
  input wire [(4'ha):(1'h0)] wire25;
  input wire signed [(3'h7):(1'h0)] wire24;
  input wire [(4'h9):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire66;
  wire signed [(3'h6):(1'h0)] wire65;
  wire [(4'h8):(1'h0)] wire64;
  wire signed [(4'ha):(1'h0)] wire63;
  wire signed [(3'h6):(1'h0)] wire62;
  wire [(3'h5):(1'h0)] wire60;
  wire [(4'h9):(1'h0)] wire39;
  wire [(4'ha):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire27;
  assign y = {wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire60,
                 wire39,
                 wire28,
                 wire27,
                 (1'h0)};
  assign wire27 = $unsigned({wire26});
  assign wire28 = $unsigned((wire27 ?
                      ($signed(wire24) ?
                          (wire25 ?
                              wire27 : wire26) : $unsigned((8'ha0))) : ($signed((8'h9e)) & wire24)));
  module29 #() modinst40 (wire39, clk, wire28, wire26, wire25, wire27);
  module41 #() modinst61 (wire60, clk, wire27, wire23, wire28, wire24);
  assign wire62 = $unsigned((wire27[(3'h4):(1'h1)] <= $unsigned($signed(wire28))));
  assign wire63 = wire25[(4'h9):(3'h7)];
  assign wire64 = (+$unsigned($signed((wire24 ? (8'ha8) : wire23))));
  assign wire65 = $unsigned($unsigned(($signed(wire23) ?
                      {(8'h9d)} : {wire27})));
  module29 #() modinst67 (wire66, clk, wire24, wire39, wire63, wire64);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module41  (y, clk, wire45, wire44, wire43, wire42);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire45;
  input wire signed [(4'h9):(1'h0)] wire44;
  input wire [(4'ha):(1'h0)] wire43;
  input wire signed [(3'h7):(1'h0)] wire42;
  wire signed [(4'h9):(1'h0)] wire59;
  wire signed [(4'h8):(1'h0)] wire58;
  wire signed [(3'h5):(1'h0)] wire57;
  wire [(3'h4):(1'h0)] wire56;
  wire signed [(3'h6):(1'h0)] wire53;
  wire signed [(3'h5):(1'h0)] wire52;
  wire signed [(3'h4):(1'h0)] wire51;
  wire signed [(3'h6):(1'h0)] wire47;
  wire signed [(3'h5):(1'h0)] wire46;
  reg signed [(3'h5):(1'h0)] reg55 = (1'h0);
  reg [(3'h6):(1'h0)] reg54 = (1'h0);
  reg [(3'h6):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg49 = (1'h0);
  reg [(4'h9):(1'h0)] reg48 = (1'h0);
  assign y = {wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire53,
                 wire52,
                 wire51,
                 wire47,
                 wire46,
                 reg55,
                 reg54,
                 reg50,
                 reg49,
                 reg48,
                 (1'h0)};
  assign wire46 = (-wire43[(2'h3):(2'h3)]);
  assign wire47 = wire42[(3'h5):(2'h3)];
  always
    @(posedge clk) begin
      if (wire43[(3'h6):(2'h3)])
        begin
          reg48 <= $signed((^wire47[(1'h0):(1'h0)]));
          reg49 <= ((|$unsigned($signed(wire45))) <= (^wire42[(2'h3):(2'h3)]));
        end
      else
        begin
          reg48 <= wire43[(1'h1):(1'h0)];
          reg49 <= wire44[(3'h5):(2'h3)];
        end
    end
  always
    @(posedge clk) begin
      reg50 <= reg49;
    end
  assign wire51 = (8'h9e);
  assign wire52 = ((($signed((8'ha3)) ^~ (reg49 + wire46)) ?
                      (wire44[(3'h6):(3'h6)] ?
                          (wire42 == wire45) : wire45) : $unsigned((wire42 - wire46))) ^~ (!wire47[(2'h2):(1'h1)]));
  assign wire53 = wire45[(3'h5):(2'h2)];
  always
    @(posedge clk) begin
      reg54 <= wire52[(3'h4):(3'h4)];
      reg55 <= (wire42[(3'h7):(1'h1)] ?
          $unsigned((8'h9c)) : (~|((wire44 ~^ reg50) && wire43[(3'h5):(3'h5)])));
    end
  assign wire56 = reg55;
  assign wire57 = wire46;
  assign wire58 = {(wire44[(1'h1):(1'h1)] & {(reg55 ^ reg48)})};
  assign wire59 = ($signed($unsigned((reg49 == wire56))) ?
                      wire51[(2'h3):(1'h1)] : ($unsigned((8'ha5)) ?
                          ({wire46} ~^ (reg49 ? reg48 : reg50)) : (wire52 ?
                              (reg54 ?
                                  wire52 : reg55) : wire53[(3'h4):(2'h2)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module29
#(parameter param38 = (^(((^(8'hb0)) ? ((8'ha9) - (8'h9c)) : (8'ha7)) >= {((8'hac) ? (8'ha9) : (8'haa))})))
(y, clk, wire33, wire32, wire31, wire30);
  output wire [(32'h13):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire33;
  input wire [(4'h9):(1'h0)] wire32;
  input wire [(4'ha):(1'h0)] wire31;
  input wire [(3'h7):(1'h0)] wire30;
  wire signed [(2'h3):(1'h0)] wire37;
  wire [(2'h2):(1'h0)] wire36;
  wire signed [(4'h9):(1'h0)] wire35;
  wire [(3'h4):(1'h0)] wire34;
  assign y = {wire37, wire36, wire35, wire34, (1'h0)};
  assign wire34 = wire33[(2'h3):(1'h0)];
  assign wire35 = wire33[(1'h0):(1'h0)];
  assign wire36 = $signed((wire31[(1'h1):(1'h1)] ?
                      {(wire30 ^~ wire31)} : ((|wire30) ?
                          $signed(wire33) : {wire30})));
  assign wire37 = (8'haa);
endmodule