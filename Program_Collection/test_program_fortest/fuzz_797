(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h49):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire3;
  wire [(4'h9):(1'h0)] wire4;
  wire signed [(4'h8):(1'h0)] wire45;
  wire signed [(2'h3):(1'h0)] wire47;
  wire signed [(3'h4):(1'h0)] wire48;
  wire signed [(3'h4):(1'h0)] wire50;
  wire signed [(2'h3):(1'h0)] wire51;
  wire signed [(4'h9):(1'h0)] wire52;
  wire signed [(3'h4):(1'h0)] wire53;
  wire signed [(4'h8):(1'h0)] wire54;
  wire [(3'h7):(1'h0)] wire55;
  wire [(3'h6):(1'h0)] wire56;
  reg signed [(3'h7):(1'h0)] reg49 = (1'h0);
  assign y = {wire4,
                 wire45,
                 wire47,
                 wire48,
                 wire50,
                 wire51,
                 wire52,
                 wire53,
                 wire54,
                 wire55,
                 wire56,
                 reg49,
                 (1'h0)};
  assign wire4 = ($unsigned(wire1[(3'h5):(1'h1)]) == wire3[(1'h0):(1'h0)]);
  module5 #() modinst46 (.wire6(wire0), .y(wire45), .wire8(wire2), .wire7(wire4), .clk(clk), .wire9(wire1));
  assign wire47 = wire2;
  assign wire48 = (wire4 <= {wire1[(3'h4):(2'h2)]});
  always
    @(posedge clk) begin
      reg49 <= $signed((!$signed($unsigned(wire0))));
    end
  assign wire50 = ($signed($unsigned(wire47)) ?
                      (((wire45 * wire45) ? (&wire47) : wire47) ?
                          $signed(wire1[(4'h8):(1'h1)]) : wire48) : (~(^~wire4[(2'h3):(1'h1)])));
  assign wire51 = (+((wire1 ?
                      (&wire2) : wire45) ^ $signed(wire2[(2'h2):(2'h2)])));
  assign wire52 = $unsigned($signed(((wire0 ? (8'ha9) : wire48) || wire51)));
  assign wire53 = {($signed($unsigned(wire2)) ?
                          ((wire3 ? (8'h9f) : wire52) < (wire51 ?
                              (8'hab) : wire52)) : (8'ha1))};
  assign wire54 = $signed((8'ha8));
  assign wire55 = $unsigned(($unsigned(wire51) ?
                      $unsigned((wire0 ? wire3 : wire1)) : wire1));
  module20 #() modinst57 (.wire23(reg49), .y(wire56), .wire21(wire45), .clk(clk), .wire22(wire47), .wire24(wire2));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire9;
  input wire signed [(2'h3):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire7;
  input wire [(3'h5):(1'h0)] wire6;
  wire signed [(4'h8):(1'h0)] wire44;
  wire signed [(3'h4):(1'h0)] wire43;
  wire signed [(3'h5):(1'h0)] wire41;
  wire signed [(4'h9):(1'h0)] wire17;
  wire signed [(4'h8):(1'h0)] wire16;
  wire signed [(2'h2):(1'h0)] wire15;
  wire [(3'h5):(1'h0)] wire14;
  wire [(2'h2):(1'h0)] wire13;
  wire [(4'ha):(1'h0)] wire12;
  wire [(3'h7):(1'h0)] wire11;
  wire [(3'h5):(1'h0)] wire10;
  reg [(2'h2):(1'h0)] reg19 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg18 = (1'h0);
  assign y = {wire44,
                 wire43,
                 wire41,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 reg19,
                 reg18,
                 (1'h0)};
  assign wire10 = (~^(wire6[(2'h2):(1'h1)] ?
                      ((wire8 ? wire6 : wire7) ?
                          $signed(wire8) : {wire6}) : ($signed(wire6) ?
                          wire7 : {wire9})));
  assign wire11 = $signed((&wire8));
  assign wire12 = (wire7 <= (!$unsigned($unsigned(wire11))));
  assign wire13 = $signed(wire10[(3'h5):(1'h0)]);
  assign wire14 = {$unsigned((8'hb0))};
  assign wire15 = wire13[(1'h1):(1'h1)];
  assign wire16 = $unsigned($signed(((wire9 ~^ wire8) ?
                      $signed((8'ha3)) : wire9)));
  assign wire17 = $unsigned((~&wire12[(3'h4):(2'h2)]));
  always
    @(posedge clk) begin
      reg18 <= wire14[(3'h5):(3'h4)];
      reg19 <= (($signed({wire12}) >= wire17[(3'h4):(1'h1)]) || ((~(8'ha6)) << wire10[(2'h2):(1'h1)]));
    end
  module20 #() modinst42 (.y(wire41), .wire22(wire17), .wire23(wire11), .wire21(wire14), .wire24(wire12), .clk(clk));
  assign wire43 = wire12[(4'ha):(4'ha)];
  assign wire44 = $unsigned(($unsigned($unsigned(wire43)) && wire15[(1'h0):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20  (y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h4d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire24;
  input wire signed [(3'h7):(1'h0)] wire23;
  input wire signed [(2'h2):(1'h0)] wire22;
  input wire [(2'h3):(1'h0)] wire21;
  wire signed [(4'h8):(1'h0)] wire40;
  wire signed [(3'h7):(1'h0)] wire39;
  wire [(2'h3):(1'h0)] wire38;
  wire [(3'h4):(1'h0)] wire35;
  wire [(3'h7):(1'h0)] wire34;
  wire signed [(2'h2):(1'h0)] wire33;
  wire signed [(3'h4):(1'h0)] wire26;
  wire signed [(3'h4):(1'h0)] wire25;
  reg signed [(2'h2):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg32 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg31 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg30 = (1'h0);
  reg [(2'h3):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg28 = (1'h0);
  reg [(2'h3):(1'h0)] reg27 = (1'h0);
  assign y = {wire40,
                 wire39,
                 wire38,
                 wire35,
                 wire34,
                 wire33,
                 wire26,
                 wire25,
                 reg37,
                 reg36,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 (1'h0)};
  assign wire25 = $unsigned($signed((8'ha3)));
  assign wire26 = (8'ha1);
  always
    @(posedge clk) begin
      reg27 <= (^(8'haa));
    end
  always
    @(posedge clk) begin
      reg28 <= $unsigned(($unsigned({wire21}) ?
          {reg27[(2'h2):(2'h2)]} : $signed(((8'ha5) ? wire26 : wire26))));
      reg29 <= {{reg27}};
      if ($unsigned($unsigned($signed((^(8'ha9))))))
        begin
          reg30 <= $signed($signed(((~wire22) < (wire23 ? reg28 : wire21))));
          reg31 <= (wire24[(3'h6):(2'h2)] ?
              $unsigned((&$unsigned(wire22))) : ($signed({wire25}) < reg29));
          reg32 <= $unsigned({(wire23 >= wire22[(1'h1):(1'h1)])});
        end
      else
        begin
          reg30 <= (({$unsigned(wire24)} ?
                  (((8'ha1) <= wire26) | $unsigned(wire26)) : $signed((wire26 ?
                      (8'ha4) : wire26))) ?
              $signed($signed($signed(wire22))) : $signed(((~&reg29) >> reg31)));
          reg31 <= ((8'ha3) ?
              reg27[(1'h0):(1'h0)] : (((wire22 ?
                  reg29 : reg31) >>> (reg32 || wire25)) * (((8'haa) ?
                  wire23 : wire22) ^~ ((8'ha3) ? reg28 : (8'h9d)))));
        end
    end
  assign wire33 = $signed((!(reg32[(3'h4):(2'h3)] ?
                      (reg32 | reg28) : {reg29})));
  assign wire34 = {$unsigned((+((8'h9c) == (8'h9c))))};
  assign wire35 = wire26;
  always
    @(posedge clk) begin
      reg36 <= wire21[(2'h3):(2'h3)];
      if (((+(wire24 ? $signed(wire25) : {wire24})) ~^ $unsigned((wire33 ?
          ((8'ha9) << wire24) : $signed((8'h9d))))))
        begin
          reg37 <= $unsigned($signed(wire23[(1'h0):(1'h0)]));
        end
      else
        begin
          reg37 <= ((~^$unsigned($signed((8'haa)))) ?
              $unsigned(((reg37 >> (8'ha4)) < $signed(wire33))) : $unsigned($signed(reg29[(1'h1):(1'h1)])));
        end
    end
  assign wire38 = (wire22[(1'h1):(1'h1)] >> ((reg29[(1'h0):(1'h0)] ?
                      wire34 : (reg32 ?
                          (8'h9e) : wire33)) > reg31[(3'h7):(3'h4)]));
  assign wire39 = ($signed(((wire33 >> wire35) ?
                      reg32 : wire22)) >> {((reg37 <= reg28) + reg37[(1'h1):(1'h1)])});
  assign wire40 = $unsigned((({wire22} >> reg32[(3'h7):(1'h1)]) ?
                      {((8'ha4) ? wire34 : wire26)} : {wire21[(1'h1):(1'h1)]}));
endmodule