(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h43):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire42;
  wire [(2'h2):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire8;
  wire signed [(4'ha):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  reg signed [(3'h6):(1'h0)] reg44 = (1'h0);
  assign y = {wire42, wire9, wire8, wire7, wire6, wire5, wire4, reg44, (1'h0)};
  assign wire4 = $unsigned(wire1);
  assign wire5 = (wire3[(1'h1):(1'h0)] >= wire0);
  assign wire6 = {$signed($unsigned((wire3 - (8'hae))))};
  assign wire7 = wire3;
  assign wire8 = {(-$unsigned((~&wire6)))};
  assign wire9 = (8'ha0);
  module10 #() modinst43 (wire42, clk, wire7, wire8, wire5, wire6);
  always
    @(posedge clk) begin
      reg44 <= $unsigned(wire8[(3'h6):(1'h1)]);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h18):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire14;
  input wire [(3'h5):(1'h0)] wire13;
  input wire [(4'hb):(1'h0)] wire12;
  input wire [(4'hb):(1'h0)] wire11;
  wire [(3'h6):(1'h0)] wire41;
  wire signed [(2'h3):(1'h0)] wire40;
  wire signed [(3'h6):(1'h0)] wire37;
  reg [(4'h8):(1'h0)] reg39 = (1'h0);
  assign y = {wire41, wire40, wire37, reg39, (1'h0)};
  module15 #() modinst38 (wire37, clk, wire13, wire14, wire12, wire11);
  always
    @(posedge clk) begin
      reg39 <= {$unsigned($unsigned((wire12 ? wire12 : (8'haa))))};
    end
  assign wire40 = wire37;
  assign wire41 = wire12[(2'h2):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param36 = {((&((8'hb0) ? (8'ha9) : (8'ha8))) ? (|{(8'haa)}) : (((8'hab) ? (8'h9d) : (8'h9d)) ? (-(8'ha9)) : ((8'hb0) | (8'haf))))})
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h70):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire19;
  input wire [(3'h5):(1'h0)] wire18;
  input wire signed [(2'h2):(1'h0)] wire17;
  input wire signed [(4'h9):(1'h0)] wire16;
  wire signed [(4'ha):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire33;
  wire signed [(4'ha):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire24;
  wire signed [(4'h9):(1'h0)] wire23;
  wire [(2'h3):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  reg [(3'h5):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg32 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg31 = (1'h0);
  reg [(2'h3):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg29 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg28 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg27 = (1'h0);
  reg [(2'h3):(1'h0)] reg26 = (1'h0);
  assign y = {wire34,
                 wire33,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 reg35,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire20 = $unsigned($unsigned(((8'ha3) & wire18[(1'h0):(1'h0)])));
  assign wire21 = ((~(^$unsigned(wire19))) ?
                      wire18[(3'h5):(1'h1)] : $unsigned($signed((wire19 ?
                          wire20 : wire18))));
  assign wire22 = wire18[(2'h2):(2'h2)];
  assign wire23 = $signed((($signed(wire20) ?
                      $unsigned(wire18) : $signed((8'hb0))) || $signed((8'h9d))));
  assign wire24 = (wire19[(1'h1):(1'h1)] ?
                      ($signed(wire23) ?
                          ($unsigned(wire16) | ((8'h9c) ?
                              wire18 : (8'h9e))) : $signed((wire22 - (8'h9c)))) : $signed(wire17));
  assign wire25 = $signed($signed(($unsigned(wire21) - $unsigned(wire17))));
  always
    @(posedge clk) begin
      if ($signed($unsigned($signed((wire23 ? wire25 : wire25)))))
        begin
          if ($unsigned($signed((+$unsigned(wire20)))))
            begin
              reg26 <= (~&wire25);
            end
          else
            begin
              reg26 <= {wire19};
              reg27 <= wire18[(1'h1):(1'h0)];
              reg28 <= {$unsigned($unsigned((reg27 ? wire19 : wire20)))};
            end
          reg29 <= $unsigned(wire19);
        end
      else
        begin
          if (wire22)
            begin
              reg26 <= $signed((^reg26[(2'h2):(1'h1)]));
            end
          else
            begin
              reg26 <= {$unsigned(($unsigned(reg28) ?
                      (wire20 ? wire23 : reg28) : (wire22 * wire23)))};
            end
        end
    end
  always
    @(posedge clk) begin
      if ((((wire17[(1'h0):(1'h0)] ? (8'hac) : {wire23}) <= wire20) ?
          wire18[(2'h3):(1'h1)] : (~|(!reg26[(2'h3):(1'h0)]))))
        begin
          reg30 <= ($unsigned($signed((~&wire24))) ?
              wire24[(3'h6):(3'h6)] : $signed(wire18[(2'h2):(1'h1)]));
          if ((wire25 ?
              wire21[(1'h0):(1'h0)] : $signed((!reg26[(2'h2):(1'h0)]))))
            begin
              reg31 <= (^~$signed(wire23));
            end
          else
            begin
              reg31 <= (~&reg26[(2'h3):(1'h0)]);
              reg32 <= $signed((-$unsigned(wire20[(1'h1):(1'h1)])));
            end
        end
      else
        begin
          reg30 <= wire19[(2'h2):(1'h0)];
          reg31 <= ((((reg29 | reg32) ^ ((8'ha5) ^~ reg31)) ?
              reg32[(3'h4):(1'h1)] : reg29) == (!((reg26 * reg27) ^~ {reg28})));
        end
    end
  assign wire33 = (~|wire22[(2'h3):(2'h2)]);
  assign wire34 = (^~wire21[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      reg35 <= $signed($signed(wire19[(2'h3):(1'h0)]));
    end
endmodule