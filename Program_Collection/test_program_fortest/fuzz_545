(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire36;
  wire signed [(2'h2):(1'h0)] wire35;
  wire signed [(2'h2):(1'h0)] wire34;
  wire [(4'h9):(1'h0)] wire33;
  wire signed [(2'h3):(1'h0)] wire32;
  wire [(3'h4):(1'h0)] wire31;
  wire signed [(4'h8):(1'h0)] wire29;
  wire [(4'h8):(1'h0)] wire27;
  wire [(4'ha):(1'h0)] wire4;
  reg [(3'h4):(1'h0)] reg30 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire29,
                 wire27,
                 wire4,
                 reg30,
                 (1'h0)};
  assign wire4 = wire2;
  module5 #() modinst28 (wire27, clk, wire4, wire1, wire2, wire0);
  assign wire29 = (^wire4);
  always
    @(posedge clk) begin
      reg30 <= ((-wire1[(3'h6):(2'h3)]) & $unsigned($signed(wire1[(3'h4):(2'h3)])));
    end
  assign wire31 = wire1[(2'h2):(1'h1)];
  assign wire32 = ((((reg30 ?
                      wire0 : (8'hab)) ^ $signed(wire4)) & $unsigned((wire27 & wire31))) ^~ ($unsigned((wire3 >>> wire1)) > wire4[(3'h4):(2'h2)]));
  assign wire33 = ($unsigned($unsigned(wire1[(2'h2):(1'h1)])) ? wire32 : wire3);
  assign wire34 = wire1;
  assign wire35 = (wire29[(2'h2):(1'h1)] <= wire27);
  assign wire36 = {((wire0 ? $unsigned(wire34) : (wire31 ? reg30 : (8'ha4))) ?
                          wire33[(3'h4):(2'h2)] : {(|wire27)})};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h68):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire9;
  input wire [(2'h3):(1'h0)] wire8;
  input wire [(4'ha):(1'h0)] wire7;
  input wire signed [(3'h4):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire25;
  wire [(4'h8):(1'h0)] wire24;
  wire [(4'hb):(1'h0)] wire18;
  wire [(3'h7):(1'h0)] wire15;
  wire [(2'h2):(1'h0)] wire14;
  wire [(3'h5):(1'h0)] wire13;
  wire [(3'h5):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire11;
  reg signed [(4'h9):(1'h0)] reg26 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg20 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg19 = (1'h0);
  reg [(4'h9):(1'h0)] reg17 = (1'h0);
  reg [(3'h6):(1'h0)] reg16 = (1'h0);
  reg [(4'h8):(1'h0)] reg10 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire18,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 reg26,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg17,
                 reg16,
                 reg10,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg10 <= $signed(((wire9 <<< (wire8 - wire8)) ?
          (8'h9f) : $signed((wire9 <= wire8))));
    end
  assign wire11 = ((~^(wire7 - (wire6 ? reg10 : wire9))) ?
                      ($unsigned($signed((8'h9e))) ?
                          (wire7 ?
                              (8'h9c) : $signed(wire8)) : wire6[(3'h4):(1'h0)]) : $unsigned($unsigned(wire8)));
  assign wire12 = (&reg10);
  assign wire13 = (($signed(((8'hb0) ? reg10 : wire6)) ?
                          wire11 : (wire6[(1'h0):(1'h0)] ?
                              $unsigned((8'ha0)) : $signed(wire8))) ?
                      $unsigned($signed($signed((8'hb0)))) : (8'ha2));
  assign wire14 = (wire8[(2'h3):(2'h2)] ?
                      $signed($unsigned((-(8'hac)))) : $signed(wire6));
  assign wire15 = wire7[(3'h4):(3'h4)];
  always
    @(posedge clk) begin
      reg16 <= $unsigned(wire13);
      reg17 <= (8'hac);
    end
  assign wire18 = (wire12 ? (^(8'haf)) : $signed((!wire8[(1'h0):(1'h0)])));
  always
    @(posedge clk) begin
      if ({$signed(wire9)})
        begin
          reg19 <= wire13[(1'h1):(1'h1)];
        end
      else
        begin
          reg19 <= (8'h9e);
          reg20 <= $unsigned({(~$signed(wire18))});
          reg21 <= $unsigned({(wire11 ~^ (~wire12))});
        end
      reg22 <= wire6[(1'h0):(1'h0)];
      reg23 <= wire14[(2'h2):(1'h0)];
    end
  assign wire24 = (~(8'ha1));
  assign wire25 = $unsigned(((-(wire6 ? reg20 : wire9)) | {{wire8}}));
  always
    @(posedge clk) begin
      if ($signed(reg10[(1'h0):(1'h0)]))
        begin
          reg26 <= (^~({wire24} ?
              ((~|reg17) ~^ (reg20 * wire11)) : $unsigned((wire24 ~^ wire18))));
        end
      else
        begin
          reg26 <= wire6;
        end
    end
endmodule