(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire28;
  wire [(4'h8):(1'h0)] wire11;
  wire [(3'h5):(1'h0)] wire10;
  wire signed [(4'ha):(1'h0)] wire9;
  reg [(4'h9):(1'h0)] reg30 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg5 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg4 = (1'h0);
  assign y = {wire28,
                 wire11,
                 wire10,
                 wire9,
                 reg30,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= $signed($signed(((wire3 ? wire0 : (8'h9f)) ?
          $unsigned(wire1) : (wire1 ? (8'hab) : wire3))));
      if (wire3[(2'h2):(1'h0)])
        begin
          reg5 <= $unsigned(((!{wire2}) ?
              $unsigned(((8'hb0) == wire3)) : $signed((wire2 < reg4))));
          reg6 <= ((wire2[(2'h3):(1'h0)] ?
                  $signed($unsigned(wire2)) : ($unsigned((8'ha6)) ?
                      wire0[(3'h5):(3'h4)] : $signed(wire0))) ?
              (^~($unsigned(wire2) ?
                  wire2[(3'h6):(3'h6)] : $unsigned(wire1))) : {wire0});
          reg7 <= reg4[(4'h9):(4'h8)];
        end
      else
        begin
          reg5 <= $signed(wire1);
        end
      reg8 <= (reg5[(3'h4):(2'h3)] ? (~^wire1) : $signed(reg5));
    end
  assign wire9 = wire3[(2'h2):(1'h1)];
  assign wire10 = $unsigned($unsigned($unsigned($unsigned(wire0))));
  assign wire11 = {wire3};
  module12 #() modinst29 (wire28, clk, wire3, wire0, reg7, reg6);
  always
    @(posedge clk) begin
      reg30 <= $unsigned((|{$signed(reg6)}));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param27 = (~&(((|(8'hab)) ? (&(8'ha1)) : ((8'ha2) ? (8'h9f) : (8'h9d))) ^ (((8'ha6) ~^ (8'ha2)) ^ (-(8'h9d))))))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire16;
  input wire signed [(3'h6):(1'h0)] wire15;
  input wire signed [(4'h8):(1'h0)] wire14;
  input wire [(4'h9):(1'h0)] wire13;
  wire signed [(4'h9):(1'h0)] wire26;
  wire signed [(3'h6):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire18;
  wire [(3'h4):(1'h0)] wire17;
  reg signed [(3'h6):(1'h0)] reg25 = (1'h0);
  reg [(4'h8):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg23 = (1'h0);
  reg [(4'h8):(1'h0)] reg22 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg21 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg20 = (1'h0);
  assign y = {wire26,
                 wire19,
                 wire18,
                 wire17,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  assign wire17 = (wire15[(3'h4):(3'h4)] ?
                      wire14[(3'h4):(1'h1)] : $signed((((8'h9f) ?
                              wire15 : wire15) ?
                          (wire14 ~^ wire16) : $signed(wire13))));
  assign wire18 = $signed(wire16[(3'h6):(2'h2)]);
  assign wire19 = $signed({(wire17[(1'h0):(1'h0)] ?
                          (wire18 ? wire14 : wire15) : (wire14 ?
                              wire13 : wire14))});
  always
    @(posedge clk) begin
      reg20 <= ($unsigned(wire19[(3'h6):(1'h0)]) ?
          $unsigned(($unsigned(wire14) ?
              (!wire15) : $signed(wire15))) : wire18[(3'h4):(3'h4)]);
      reg21 <= wire14;
      if ($unsigned((~&(wire13 + (wire15 ^ wire15)))))
        begin
          reg22 <= $unsigned({(wire14 ?
                  $unsigned(wire14) : $unsigned(wire18))});
          reg23 <= $unsigned(((|wire17) <= $signed($unsigned((8'ha3)))));
          reg24 <= ($signed($unsigned(reg23[(2'h3):(2'h3)])) && (8'hae));
        end
      else
        begin
          reg22 <= {$unsigned(wire19)};
          if ($signed(wire13))
            begin
              reg23 <= (^~(^~$signed($signed((8'ha9)))));
              reg24 <= wire17;
            end
          else
            begin
              reg23 <= ($unsigned($signed($signed((8'ha7)))) || (~^$unsigned(wire18[(3'h6):(2'h2)])));
              reg24 <= $signed($unsigned((~|(wire18 ^ reg23))));
              reg25 <= $signed(reg22[(3'h5):(3'h5)]);
            end
        end
    end
  assign wire26 = (~^($signed($signed(wire16)) << reg22[(3'h6):(2'h3)]));
endmodule