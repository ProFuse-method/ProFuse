(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire17;
  wire signed [(3'h7):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire15;
  wire signed [(4'h8):(1'h0)] wire14;
  wire [(2'h3):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  reg signed [(4'hb):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg12 = (1'h0);
  reg [(2'h3):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg10 = (1'h0);
  reg [(3'h7):(1'h0)] reg9 = (1'h0);
  reg [(4'h9):(1'h0)] reg8 = (1'h0);
  reg [(3'h6):(1'h0)] reg7 = (1'h0);
  assign y = {wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire6,
                 wire5,
                 wire4,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 (1'h0)};
  assign wire4 = wire2[(1'h1):(1'h0)];
  assign wire5 = (wire2 ^~ $unsigned(wire0[(1'h0):(1'h0)]));
  assign wire6 = wire2[(3'h4):(3'h4)];
  always
    @(posedge clk) begin
      reg7 <= wire4[(4'h9):(3'h7)];
      if ($signed(wire3[(1'h0):(1'h0)]))
        begin
          reg8 <= ($signed((wire4 ~^ $signed(wire4))) ?
              $signed({(reg7 >= wire6)}) : $unsigned(($unsigned(wire1) && (wire5 <<< wire4))));
          if (($signed(($signed(wire1) ? $signed(reg8) : (-(8'had)))) ?
              ((~&$signed(wire6)) & $unsigned((wire4 + (8'haa)))) : (8'h9e)))
            begin
              reg9 <= (($signed((8'ha7)) ?
                  ((^wire3) ?
                      (!(8'ha1)) : (wire2 ?
                          wire4 : wire6)) : $unsigned($signed(wire4))) >> ((|$signed(wire3)) | {wire2}));
              reg10 <= $unsigned(reg9[(2'h3):(2'h3)]);
            end
          else
            begin
              reg9 <= $unsigned((($signed(reg7) <= (reg9 + wire5)) ?
                  $unsigned(wire4) : wire6[(2'h3):(2'h2)]));
              reg10 <= {($signed((^reg8)) ?
                      wire4[(4'h9):(4'h9)] : $signed((wire0 ? wire4 : wire1)))};
            end
          if ($signed({reg9}))
            begin
              reg11 <= ((~wire2) ? $unsigned(reg7) : wire2[(4'h8):(3'h6)]);
              reg12 <= reg9;
            end
          else
            begin
              reg11 <= $signed((|reg10));
            end
        end
      else
        begin
          if (wire0)
            begin
              reg8 <= reg9[(3'h5):(2'h2)];
              reg9 <= reg10[(2'h2):(2'h2)];
              reg10 <= {reg8[(3'h6):(1'h0)]};
            end
          else
            begin
              reg8 <= $unsigned(($signed((wire1 >>> wire2)) ?
                  $unsigned($signed(reg10)) : ((wire0 & wire1) ?
                      wire0[(2'h2):(1'h1)] : (reg8 != wire5))));
            end
          reg11 <= ($unsigned($signed($signed(wire6))) ?
              ((wire2[(3'h7):(3'h7)] | (wire1 ? wire6 : wire1)) * ((wire1 ?
                      reg12 : reg12) ?
                  $signed(wire4) : $unsigned(wire2))) : (((^reg7) + {wire4}) ?
                  reg8[(2'h2):(1'h0)] : {(reg11 ^ wire2)}));
          reg12 <= $unsigned((~^$unsigned(wire6[(1'h1):(1'h1)])));
        end
      reg13 <= ((|((~&reg11) <<< reg12[(2'h3):(1'h1)])) ?
          (({wire4} ?
              (~^reg9) : $unsigned(reg10)) != $unsigned(reg9[(3'h4):(1'h0)])) : {$unsigned((wire4 ?
                  wire1 : wire4))});
    end
  assign wire14 = $unsigned((~^$unsigned($signed(reg9))));
  assign wire15 = (8'ha1);
  assign wire16 = wire14;
  assign wire17 = wire14;
endmodule