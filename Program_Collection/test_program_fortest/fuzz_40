(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire11;
  wire signed [(2'h2):(1'h0)] wire10;
  wire signed [(3'h6):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire5;
  wire signed [(2'h2):(1'h0)] wire4;
  reg signed [(4'hb):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg8 = (1'h0);
  reg [(4'h8):(1'h0)] reg7 = (1'h0);
  assign y = {wire11, wire10, wire6, wire5, wire4, reg9, reg8, reg7, (1'h0)};
  assign wire4 = (+(~&$unsigned((wire2 ? (8'h9c) : wire3))));
  assign wire5 = ($unsigned({wire4[(2'h2):(1'h0)]}) ?
                     (!(&((8'ha0) ^ wire2))) : wire4);
  assign wire6 = (~$signed(wire3[(1'h0):(1'h0)]));
  always
    @(posedge clk) begin
      if ($unsigned(wire2[(1'h0):(1'h0)]))
        begin
          reg7 <= (8'hac);
          reg8 <= (-(($signed((8'hab)) & $signed(reg7)) ?
              $signed((wire2 ? wire4 : (8'hae))) : $unsigned((wire4 ?
                  reg7 : wire4))));
        end
      else
        begin
          reg7 <= $unsigned((((reg8 ?
              wire1 : wire4) + (^wire5)) <= {(~&wire2)}));
          if (reg7)
            begin
              reg8 <= reg7;
            end
          else
            begin
              reg8 <= ((!($unsigned(reg8) ?
                      (reg7 == (8'h9f)) : reg7[(2'h3):(1'h1)])) ?
                  $unsigned((-$signed((8'hab)))) : (~$unsigned($unsigned(wire6))));
              reg9 <= $signed(reg8);
            end
        end
    end
  assign wire10 = (!(~^((wire2 ? wire3 : (8'hac)) ?
                      wire6[(1'h0):(1'h0)] : $signed(reg7))));
  assign wire11 = wire6;
endmodule