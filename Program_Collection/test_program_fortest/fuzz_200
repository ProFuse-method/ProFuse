(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h61):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire70;
  wire [(3'h4):(1'h0)] wire66;
  wire [(4'hb):(1'h0)] wire64;
  wire [(3'h4):(1'h0)] wire33;
  wire signed [(3'h7):(1'h0)] wire32;
  wire [(2'h2):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire28;
  wire signed [(4'h8):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire4;
  reg [(3'h7):(1'h0)] reg69 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg68 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg67 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg29 = (1'h0);
  assign y = {wire70,
                 wire66,
                 wire64,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire28,
                 wire26,
                 wire4,
                 reg69,
                 reg68,
                 reg67,
                 reg29,
                 (1'h0)};
  assign wire4 = $signed((($signed(wire0) ? wire0[(2'h3):(1'h1)] : wire3) ?
                     $unsigned($unsigned(wire2)) : $signed($signed(wire0))));
  module5 #() modinst27 (.wire7(wire2), .y(wire26), .clk(clk), .wire8(wire0), .wire6(wire3), .wire9(wire1));
  assign wire28 = {wire4[(2'h2):(1'h1)]};
  always
    @(posedge clk) begin
      reg29 <= $unsigned(($unsigned((~|wire1)) >> (~|wire1[(2'h2):(2'h2)])));
    end
  assign wire30 = (&wire3);
  assign wire31 = $signed(($unsigned(wire1[(1'h0):(1'h0)]) && {(~|wire26)}));
  assign wire32 = (~^{$unsigned((|wire28))});
  assign wire33 = ($signed($signed((wire4 ? wire26 : (8'hb0)))) ?
                      (wire30[(3'h5):(1'h0)] ?
                          (reg29 >> (^~(8'hab))) : {$signed(wire26)}) : wire31);
  module34 #() modinst65 (.wire35(wire30), .clk(clk), .wire38(wire32), .wire36(wire26), .y(wire64), .wire37(wire1));
  assign wire66 = ((((+(8'ha7)) == wire2[(2'h2):(1'h0)]) ?
                      (wire26 ?
                          wire64[(3'h7):(3'h5)] : (+wire1)) : {$unsigned(wire3)}) + {($unsigned(wire31) ?
                          (^~(8'ha8)) : (~wire2))});
  always
    @(posedge clk) begin
      reg67 <= $unsigned((&$signed($unsigned((8'h9f)))));
      reg68 <= $signed(((wire1[(3'h6):(1'h0)] ?
          (8'h9d) : wire32[(3'h6):(3'h6)]) | ((-reg67) ?
          $unsigned(reg67) : reg29)));
      reg69 <= (wire66[(2'h2):(1'h0)] ?
          {(wire64[(2'h3):(1'h1)] ?
                  wire2[(4'ha):(4'h9)] : (wire31 ?
                      reg68 : wire31))} : (-(8'ha8)));
    end
  assign wire70 = ($unsigned(($signed(wire3) * (~^wire64))) || $unsigned(($signed(wire33) ?
                      ((8'h9f) | reg67) : (&wire0))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34
#(parameter param63 = (~^(~&({(8'ha3)} ? ((8'h9e) <<< (8'ha4)) : (-(8'hab))))))
(y, clk, wire35, wire36, wire37, wire38);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire35;
  input wire signed [(3'h4):(1'h0)] wire36;
  input wire [(2'h2):(1'h0)] wire37;
  input wire [(3'h7):(1'h0)] wire38;
  wire signed [(4'hb):(1'h0)] wire62;
  wire [(4'h8):(1'h0)] wire47;
  wire [(2'h2):(1'h0)] wire60;
  reg [(4'ha):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg41 = (1'h0);
  reg [(4'h9):(1'h0)] reg42 = (1'h0);
  reg [(3'h4):(1'h0)] reg43 = (1'h0);
  reg [(4'ha):(1'h0)] reg44 = (1'h0);
  reg [(4'hb):(1'h0)] reg45 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg46 = (1'h0);
  reg [(4'ha):(1'h0)] reg48 = (1'h0);
  assign y = {wire62,
                 wire47,
                 wire60,
                 reg39,
                 reg40,
                 reg41,
                 reg42,
                 reg43,
                 reg44,
                 reg45,
                 reg46,
                 reg48,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg39 <= $signed(((wire37 ? {(8'hac)} : wire38[(2'h3):(1'h1)]) ?
          $unsigned((wire35 ~^ wire36)) : $signed((wire38 <= wire38))));
      if ({$unsigned($signed((~|wire38)))})
        begin
          if ($signed($signed({(&wire37)})))
            begin
              reg40 <= $unsigned(reg39);
              reg41 <= ((~|wire35) == wire35);
            end
          else
            begin
              reg40 <= ($unsigned((~&reg41[(3'h4):(2'h3)])) < $signed($unsigned(reg39)));
              reg41 <= wire37[(1'h0):(1'h0)];
            end
        end
      else
        begin
          reg40 <= $signed($signed(wire38));
          if ($unsigned(wire35))
            begin
              reg41 <= $unsigned((wire35[(3'h7):(3'h5)] ?
                  ($unsigned(wire37) != reg39) : $unsigned($signed((8'hb0)))));
              reg42 <= reg41[(2'h2):(1'h1)];
            end
          else
            begin
              reg41 <= (^~$unsigned(((^~wire36) <= wire38)));
              reg42 <= (reg40[(3'h5):(3'h4)] ?
                  {((^reg40) ? $unsigned(wire37) : reg41)} : {(^~wire38)});
            end
          reg43 <= ((reg40[(1'h1):(1'h0)] ~^ (+$signed(reg42))) ?
              {(+{(8'ha5)})} : $signed($unsigned($unsigned(reg39))));
        end
      if ((($signed((wire37 <= reg40)) == $signed((wire36 ?
          reg40 : (8'ha5)))) >= ($signed((wire35 ? reg43 : reg42)) & reg40)))
        begin
          reg44 <= ($unsigned(((~^reg43) >>> $unsigned(wire38))) < (wire37[(1'h0):(1'h0)] ?
              $unsigned($signed(reg43)) : $signed(wire36[(2'h2):(1'h0)])));
          reg45 <= $signed((^~reg43[(2'h3):(2'h3)]));
          reg46 <= reg40;
        end
      else
        begin
          reg44 <= ($signed(reg41[(4'ha):(1'h0)]) <<< wire36);
          reg45 <= ($unsigned((|((8'ha7) ? reg46 : (8'ha2)))) ?
              $unsigned(wire35) : reg42);
          reg46 <= $signed((wire38[(2'h2):(2'h2)] | (((8'ha2) ?
              reg39 : wire37) ^ (reg43 ? reg44 : wire38))));
        end
    end
  assign wire47 = reg41[(3'h4):(3'h4)];
  always
    @(posedge clk) begin
      reg48 <= ((~$unsigned((wire47 ? reg40 : wire35))) ?
          reg44 : (wire47[(1'h1):(1'h0)] << reg44[(3'h4):(1'h1)]));
    end
  module49 #() modinst61 (.wire51(wire36), .wire50(reg48), .wire52(reg45), .wire53(reg46), .clk(clk), .y(wire60));
  assign wire62 = {wire47[(3'h4):(1'h0)]};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param25 = ((+({(8'haa)} <= ((8'ha2) ^~ (8'ha7)))) ? ({(8'ha2)} ? (((8'hb0) * (8'ha2)) << ((8'had) >>> (8'ha4))) : ((^~(8'haa)) ? (-(8'ha1)) : {(8'ha3)})) : {({(8'h9f)} ? {(8'ha9)} : ((8'ha6) < (8'ha1)))}))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire signed [(4'ha):(1'h0)] wire7;
  input wire [(3'h4):(1'h0)] wire6;
  wire signed [(4'h8):(1'h0)] wire24;
  wire signed [(3'h4):(1'h0)] wire23;
  wire signed [(4'ha):(1'h0)] wire18;
  wire [(3'h6):(1'h0)] wire17;
  wire signed [(2'h2):(1'h0)] wire16;
  wire signed [(3'h5):(1'h0)] wire15;
  wire signed [(3'h6):(1'h0)] wire14;
  wire [(4'ha):(1'h0)] wire10;
  reg signed [(3'h4):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg21 = (1'h0);
  reg [(2'h2):(1'h0)] reg20 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg19 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg12 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg11 = (1'h0);
  assign y = {wire24,
                 wire23,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire10,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg13,
                 reg12,
                 reg11,
                 (1'h0)};
  assign wire10 = wire7;
  always
    @(posedge clk) begin
      reg11 <= wire7[(4'h8):(4'h8)];
      reg12 <= reg11;
      if ($signed({(8'ha0)}))
        begin
          reg13 <= (8'ha5);
        end
      else
        begin
          reg13 <= (+$signed($signed((^~reg12))));
        end
    end
  assign wire14 = $signed((^wire7));
  assign wire15 = $signed({(wire7[(4'h8):(4'h8)] ^~ $unsigned(wire9))});
  assign wire16 = ($unsigned(reg11) ?
                      (wire15 >= (wire15 ?
                          (^reg12) : (^wire10))) : $signed(({reg12} <= ((8'ha0) && wire10))));
  assign wire17 = (8'h9f);
  assign wire18 = reg12[(3'h7):(2'h2)];
  always
    @(posedge clk) begin
      if ($signed(reg13[(2'h3):(2'h3)]))
        begin
          reg19 <= ((|$signed($signed(wire8))) ?
              (wire10 * wire8) : ((+wire14) == ($unsigned(wire16) ?
                  (~^wire18) : ((8'haf) < wire9))));
          reg20 <= $unsigned($signed($signed((reg19 ^~ reg12))));
        end
      else
        begin
          if ($signed({(8'ha5)}))
            begin
              reg19 <= ($unsigned(reg20) ?
                  ($unsigned({wire7}) ?
                      {{(8'h9e)}} : $signed((wire8 ?
                          wire9 : wire6))) : (wire7[(3'h4):(2'h3)] != (&wire16[(2'h2):(1'h0)])));
              reg20 <= wire18[(4'h9):(3'h5)];
            end
          else
            begin
              reg19 <= $signed(wire6[(2'h3):(2'h3)]);
              reg20 <= (|$unsigned($signed(reg13[(2'h3):(1'h1)])));
            end
        end
      reg21 <= (reg11[(1'h0):(1'h0)] >> (^(~^$signed(reg12))));
      reg22 <= ({(!wire14[(3'h5):(1'h1)])} <<< (&reg12));
    end
  assign wire23 = ({wire15[(3'h4):(3'h4)]} >>> (&$unsigned(wire16[(1'h1):(1'h0)])));
  assign wire24 = $signed(wire7);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module49
#(parameter param59 = (8'ha5))
(y, clk, wire53, wire52, wire51, wire50);
  output wire [(32'h2a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire53;
  input wire signed [(4'hb):(1'h0)] wire52;
  input wire signed [(3'h4):(1'h0)] wire51;
  input wire signed [(4'ha):(1'h0)] wire50;
  wire signed [(4'ha):(1'h0)] wire58;
  wire signed [(2'h3):(1'h0)] wire57;
  wire [(4'ha):(1'h0)] wire56;
  wire signed [(4'h9):(1'h0)] wire55;
  reg signed [(4'h9):(1'h0)] reg54 = (1'h0);
  assign y = {wire58, wire57, wire56, wire55, reg54, (1'h0)};
  always
    @(posedge clk) begin
      reg54 <= $unsigned(($signed((!wire52)) ?
          wire51[(2'h3):(1'h0)] : ((wire52 + (8'h9d)) & wire51[(3'h4):(2'h3)])));
    end
  assign wire55 = ((-({wire52} >= $signed(wire51))) ?
                      $signed((8'ha6)) : ($signed(wire50[(2'h2):(1'h1)]) ?
                          $signed($signed(wire51)) : wire53));
  assign wire56 = (!(!(~^(reg54 ? wire55 : wire53))));
  assign wire57 = {wire55[(1'h1):(1'h1)]};
  assign wire58 = ($signed((~^(~^wire50))) >= {$unsigned(((8'hae) ?
                          wire57 : wire52))});
endmodule