(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire0;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire3;
  wire [(3'h5):(1'h0)] wire92;
  wire signed [(3'h4):(1'h0)] wire91;
  wire [(4'h9):(1'h0)] wire4;
  wire [(4'h9):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire10;
  wire signed [(4'hb):(1'h0)] wire11;
  wire signed [(4'h9):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire29;
  wire signed [(4'ha):(1'h0)] wire89;
  reg signed [(4'ha):(1'h0)] reg6 = (1'h0);
  reg [(3'h4):(1'h0)] reg7 = (1'h0);
  reg [(3'h6):(1'h0)] reg8 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg9 = (1'h0);
  assign y = {wire92,
                 wire91,
                 wire4,
                 wire5,
                 wire10,
                 wire11,
                 wire12,
                 wire29,
                 wire89,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 (1'h0)};
  assign wire4 = $unsigned((((wire1 | wire3) ? wire0 : wire1[(2'h2):(1'h1)]) ?
                     ((wire1 ? wire3 : wire1) ?
                         (wire2 < wire3) : {wire0}) : wire0[(3'h5):(1'h1)]));
  assign wire5 = ((($unsigned(wire4) ?
                         $signed(wire3) : {wire3}) * (wire1[(3'h4):(1'h1)] ?
                         $unsigned((8'h9e)) : (~^wire0))) ?
                     wire3[(2'h2):(1'h1)] : ({$signed(wire4)} ?
                         wire0[(1'h0):(1'h0)] : ((~wire4) ?
                             {wire0} : (wire4 & wire2))));
  always
    @(posedge clk) begin
      if ((~&$signed(($unsigned(wire4) ?
          wire0[(3'h5):(1'h0)] : wire3[(1'h1):(1'h0)]))))
        begin
          reg6 <= $signed({wire2});
          reg7 <= wire3;
          reg8 <= {wire2};
        end
      else
        begin
          reg6 <= ({$signed(wire5)} << wire2);
          if ((+(|($signed((8'hac)) < wire3))))
            begin
              reg7 <= $unsigned((!(reg7 ? ((8'hae) * reg8) : $unsigned(reg7))));
              reg8 <= $signed((^~(|(|wire5))));
            end
          else
            begin
              reg7 <= $signed(wire2);
            end
        end
      reg9 <= (-wire3[(1'h1):(1'h0)]);
    end
  assign wire10 = reg7[(2'h3):(1'h1)];
  assign wire11 = $unsigned($signed(wire3));
  assign wire12 = reg8[(3'h4):(2'h3)];
  module13 #() modinst30 (.wire16(reg9), .wire14(wire0), .wire15(wire11), .wire17(reg6), .clk(clk), .y(wire29));
  module31 #() modinst90 (wire89, clk, wire29, reg9, wire11, wire5);
  assign wire91 = (|wire4);
  assign wire92 = (reg6 ?
                      wire91 : (reg6[(4'h8):(3'h6)] ?
                          (8'h9d) : ($unsigned(wire5) ?
                              wire91[(1'h1):(1'h1)] : (wire4 << reg6))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module31
#(parameter param88 = {((^~{(8'ha0)}) ? (((8'had) ^~ (8'hae)) != (8'ha6)) : (8'hab))})
(y, clk, wire35, wire34, wire33, wire32);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire35;
  input wire [(4'ha):(1'h0)] wire34;
  input wire signed [(4'hb):(1'h0)] wire33;
  input wire signed [(2'h3):(1'h0)] wire32;
  wire [(4'ha):(1'h0)] wire87;
  wire [(4'h9):(1'h0)] wire85;
  wire [(3'h6):(1'h0)] wire67;
  wire [(4'h8):(1'h0)] wire64;
  wire signed [(3'h4):(1'h0)] wire62;
  wire signed [(3'h6):(1'h0)] wire41;
  wire signed [(4'h8):(1'h0)] wire40;
  wire signed [(2'h3):(1'h0)] wire39;
  wire [(3'h6):(1'h0)] wire38;
  wire signed [(3'h5):(1'h0)] wire37;
  wire [(4'h8):(1'h0)] wire36;
  reg [(4'hb):(1'h0)] reg66 = (1'h0);
  reg [(3'h7):(1'h0)] reg65 = (1'h0);
  assign y = {wire87,
                 wire85,
                 wire67,
                 wire64,
                 wire62,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 reg66,
                 reg65,
                 (1'h0)};
  assign wire36 = {(((wire32 ?
                          wire34 : wire33) >> $unsigned(wire35)) & (8'ha2))};
  assign wire37 = wire33[(1'h1):(1'h0)];
  assign wire38 = $signed((|(~^$signed(wire36))));
  assign wire39 = {wire33[(1'h1):(1'h0)]};
  assign wire40 = wire37[(2'h3):(2'h2)];
  assign wire41 = ({$signed(wire39)} - wire39[(2'h3):(2'h2)]);
  module42 #() modinst63 (wire62, clk, wire41, wire39, wire40, wire33);
  assign wire64 = wire33[(3'h4):(2'h3)];
  always
    @(posedge clk) begin
      reg65 <= $unsigned((($unsigned(wire36) >> (wire39 - wire35)) < wire36[(3'h4):(3'h4)]));
      reg66 <= wire33[(4'h9):(3'h5)];
    end
  assign wire67 = $signed(((reg66[(3'h6):(2'h3)] >>> (wire37 < wire41)) << ((wire41 != wire37) >>> wire33[(4'h8):(3'h5)])));
  module68 #() modinst86 (wire85, clk, wire64, wire34, wire38, wire67);
  assign wire87 = wire36;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param28 = {((!((8'ha1) - (8'ha3))) ? (~^((8'h9c) ? (8'ha7) : (8'haf))) : (!((8'ha9) ~^ (8'h9d))))})
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire17;
  input wire signed [(4'h9):(1'h0)] wire16;
  input wire signed [(3'h7):(1'h0)] wire15;
  input wire signed [(3'h5):(1'h0)] wire14;
  wire signed [(3'h6):(1'h0)] wire27;
  wire signed [(4'h8):(1'h0)] wire26;
  wire signed [(2'h2):(1'h0)] wire25;
  wire [(4'h8):(1'h0)] wire24;
  wire signed [(2'h2):(1'h0)] wire23;
  wire [(2'h3):(1'h0)] wire22;
  wire signed [(4'ha):(1'h0)] wire18;
  reg signed [(4'h8):(1'h0)] reg21 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg20 = (1'h0);
  reg [(2'h3):(1'h0)] reg19 = (1'h0);
  assign y = {wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire18,
                 reg21,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire18 = $signed(wire14);
  always
    @(posedge clk) begin
      reg19 <= ((8'haa) ? $unsigned($unsigned({(8'ha6)})) : wire15);
      reg20 <= ($unsigned(wire16) >> $signed($unsigned(wire15)));
      reg21 <= (+{{(reg20 > (8'h9e))}});
    end
  assign wire22 = (-$signed({(8'ha1)}));
  assign wire23 = (8'hae);
  assign wire24 = $signed({reg21});
  assign wire25 = wire23[(1'h0):(1'h0)];
  assign wire26 = wire18;
  assign wire27 = ((8'hac) ?
                      wire18[(4'h9):(3'h4)] : (reg21[(3'h4):(1'h0)] ?
                          ((~wire15) ? $signed(wire26) : (~wire17)) : ((wire26 ?
                                  wire14 : wire16) ?
                              ((8'hae) << (8'ha8)) : (wire26 ?
                                  wire22 : (8'h9e)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module68  (y, clk, wire72, wire71, wire70, wire69);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire72;
  input wire signed [(4'ha):(1'h0)] wire71;
  input wire [(2'h3):(1'h0)] wire70;
  input wire signed [(2'h2):(1'h0)] wire69;
  wire signed [(3'h6):(1'h0)] wire84;
  wire [(3'h7):(1'h0)] wire83;
  wire [(3'h4):(1'h0)] wire82;
  wire [(4'h9):(1'h0)] wire81;
  wire signed [(2'h3):(1'h0)] wire80;
  wire [(2'h2):(1'h0)] wire79;
  wire [(3'h7):(1'h0)] wire78;
  wire signed [(3'h7):(1'h0)] wire75;
  wire [(4'ha):(1'h0)] wire74;
  wire [(2'h2):(1'h0)] wire73;
  reg [(4'h8):(1'h0)] reg77 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg76 = (1'h0);
  assign y = {wire84,
                 wire83,
                 wire82,
                 wire81,
                 wire80,
                 wire79,
                 wire78,
                 wire75,
                 wire74,
                 wire73,
                 reg77,
                 reg76,
                 (1'h0)};
  assign wire73 = ((&wire72[(3'h6):(3'h6)]) ?
                      {(wire71[(3'h4):(1'h0)] ?
                              wire69 : wire71[(3'h5):(1'h1)])} : ((~|{wire72}) ?
                          (wire71 ?
                              $signed(wire72) : {(8'hae)}) : (&$unsigned(wire70))));
  assign wire74 = {($signed((~&wire73)) - $signed((wire72 ? wire69 : wire70)))};
  assign wire75 = (($signed($signed((8'h9c))) ?
                          wire73[(2'h2):(2'h2)] : $unsigned($signed((8'ha9)))) ?
                      wire70 : ((wire74 ^ (wire72 ?
                          wire72 : wire69)) == (wire72[(3'h5):(1'h1)] ?
                          {wire69} : (wire72 ? (8'hae) : wire73))));
  always
    @(posedge clk) begin
      reg76 <= (&(wire69 * (wire72 ? wire74[(4'h9):(1'h1)] : $signed(wire72))));
      reg77 <= wire75;
    end
  assign wire78 = wire70[(2'h2):(1'h0)];
  assign wire79 = wire69;
  assign wire80 = (($signed({wire78}) ?
                      {wire75[(1'h1):(1'h0)]} : ((wire73 ? (8'ha0) : wire71) ?
                          ((8'h9d) - wire74) : $signed(wire79))) || wire71);
  assign wire81 = (wire71[(3'h7):(1'h0)] * ((+wire70) ?
                      ((wire73 ? wire74 : wire80) + (wire80 ?
                          reg77 : wire74)) : reg76));
  assign wire82 = reg77[(2'h3):(1'h0)];
  assign wire83 = (wire74[(3'h4):(1'h0)] ?
                      wire79[(2'h2):(2'h2)] : reg77[(2'h2):(1'h0)]);
  assign wire84 = $signed(reg76[(1'h1):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module42
#(parameter param61 = (((~((8'h9f) >>> (8'h9c))) >= (8'haf)) | ((~|((8'ha4) * (8'ha6))) < {((8'ha3) ? (8'h9f) : (8'h9c))})))
(y, clk, wire46, wire45, wire44, wire43);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire46;
  input wire [(2'h2):(1'h0)] wire45;
  input wire signed [(3'h7):(1'h0)] wire44;
  input wire [(4'hb):(1'h0)] wire43;
  wire signed [(4'ha):(1'h0)] wire60;
  wire [(2'h2):(1'h0)] wire59;
  wire signed [(4'h9):(1'h0)] wire58;
  wire signed [(3'h7):(1'h0)] wire57;
  wire [(3'h4):(1'h0)] wire56;
  wire signed [(2'h2):(1'h0)] wire55;
  wire signed [(3'h7):(1'h0)] wire54;
  wire [(3'h6):(1'h0)] wire52;
  reg signed [(3'h5):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg51 = (1'h0);
  reg [(3'h4):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  reg [(4'h9):(1'h0)] reg47 = (1'h0);
  assign y = {wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire52,
                 reg53,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg47 <= {((wire44[(1'h1):(1'h1)] ?
              (wire44 >= wire44) : (wire46 ?
                  wire44 : wire44)) || $signed(wire45))};
      if (wire46)
        begin
          if ($unsigned(wire44))
            begin
              reg48 <= (wire43 == $signed(wire45[(1'h1):(1'h0)]));
              reg49 <= $signed(wire43[(4'ha):(4'h9)]);
              reg50 <= ($unsigned(reg49) == reg49);
            end
          else
            begin
              reg48 <= $signed($signed((reg48 == {wire43})));
              reg49 <= (~(~&reg48));
            end
        end
      else
        begin
          reg48 <= (((|reg48) >> ((reg49 ?
              wire45 : reg47) <= (8'ha9))) < $unsigned($signed((wire43 ?
              reg47 : reg50))));
        end
      reg51 <= reg50;
    end
  assign wire52 = (~(8'h9e));
  always
    @(posedge clk) begin
      reg53 <= wire45[(1'h0):(1'h0)];
    end
  assign wire54 = wire43;
  assign wire55 = (-wire52[(1'h1):(1'h0)]);
  assign wire56 = (reg51[(3'h4):(2'h2)] << {$unsigned((8'hac))});
  assign wire57 = ($signed($unsigned($unsigned(reg47))) ?
                      wire46 : (({reg48} <= {reg47}) && (~&wire54[(3'h5):(2'h2)])));
  assign wire58 = $unsigned((wire54 & $unsigned(wire43[(4'hb):(3'h4)])));
  assign wire59 = $unsigned(wire58);
  assign wire60 = ({$unsigned({wire58})} ^ (+reg48[(2'h3):(2'h3)]));
endmodule