(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param86 = (~|{({(8'ha9)} ? ((8'ha7) * (8'ha6)) : (|(8'ha4)))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h98):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire85;
  wire [(4'ha):(1'h0)] wire79;
  wire [(4'h8):(1'h0)] wire78;
  wire [(4'ha):(1'h0)] wire76;
  wire signed [(4'ha):(1'h0)] wire69;
  wire signed [(3'h5):(1'h0)] wire7;
  wire [(4'ha):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  reg [(4'h9):(1'h0)] reg84 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg83 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg82 = (1'h0);
  reg [(3'h4):(1'h0)] reg81 = (1'h0);
  reg [(4'h8):(1'h0)] reg80 = (1'h0);
  reg [(4'ha):(1'h0)] reg75 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg74 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg73 = (1'h0);
  reg [(2'h3):(1'h0)] reg72 = (1'h0);
  reg [(3'h5):(1'h0)] reg71 = (1'h0);
  assign y = {wire85,
                 wire79,
                 wire78,
                 wire76,
                 wire69,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg84,
                 reg83,
                 reg82,
                 reg81,
                 reg80,
                 reg75,
                 reg74,
                 reg73,
                 reg72,
                 reg71,
                 (1'h0)};
  assign wire4 = $signed((wire1[(3'h6):(1'h1)] ^~ (&wire1[(2'h2):(1'h0)])));
  assign wire5 = $signed(({$signed(wire0)} ? (~|wire1) : wire0[(2'h2):(1'h0)]));
  assign wire6 = $unsigned((&($unsigned(wire1) ? wire1 : (wire4 ^~ wire2))));
  assign wire7 = $unsigned({$unsigned($signed((8'ha7)))});
  module8 #() modinst70 (wire69, clk, wire4, wire6, wire3, wire2);
  always
    @(posedge clk) begin
      if (wire0[(3'h7):(1'h1)])
        begin
          reg71 <= (wire6[(4'h9):(3'h5)] <<< (wire69 ^~ $signed((~^wire3))));
          reg72 <= reg71[(3'h5):(3'h4)];
          reg73 <= (^($unsigned({(8'ha1)}) >> $unsigned((wire7 <<< wire2))));
        end
      else
        begin
          reg71 <= $unsigned((wire0[(3'h5):(3'h4)] ?
              ($signed(wire1) ?
                  reg73[(1'h0):(1'h0)] : (^wire7)) : ((8'h9e) && (wire1 != reg72))));
          reg72 <= ($signed($signed($unsigned(wire0))) ?
              ((^~$unsigned((8'h9f))) >>> wire6[(4'h9):(3'h4)]) : $unsigned(($unsigned(wire5) > {wire69})));
          reg73 <= $signed((wire7[(1'h0):(1'h0)] ?
              wire5 : (((8'had) ? wire0 : wire3) ?
                  reg72 : wire6[(4'h9):(2'h3)])));
        end
      reg74 <= (8'h9c);
      reg75 <= reg72;
    end
  module8 #() modinst77 (wire76, clk, reg75, wire69, reg73, wire5);
  assign wire78 = (~wire7);
  assign wire79 = $signed($unsigned($unsigned($signed(wire1))));
  always
    @(posedge clk) begin
      if ({(-reg71)})
        begin
          reg80 <= (~reg71[(3'h4):(2'h2)]);
          reg81 <= wire78[(3'h7):(3'h7)];
        end
      else
        begin
          reg80 <= ({(+((8'haa) == wire1))} >> {(reg72[(2'h3):(2'h3)] ?
                  reg74 : $unsigned(wire76))});
        end
      if ((8'h9c))
        begin
          reg82 <= $signed(reg71[(1'h0):(1'h0)]);
          reg83 <= reg71;
          reg84 <= wire4[(3'h6):(3'h6)];
        end
      else
        begin
          reg82 <= (~&(+((reg75 <= reg83) ?
              wire1[(3'h5):(1'h1)] : $signed(reg72))));
        end
    end
  assign wire85 = $signed({wire1});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param68 = ((({(8'ha4)} | ((8'h9f) ? (8'ha2) : (8'h9f))) ? (!(~^(8'hae))) : (((8'ha5) - (8'ha0)) ? {(8'haf)} : (^(8'haa)))) ? (8'haa) : ((~|((8'h9c) | (8'haf))) * ((|(8'h9f)) ? ((8'ha0) ? (8'hac) : (8'ha4)) : (^~(8'ha1))))))
(y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire12;
  input wire [(4'ha):(1'h0)] wire11;
  input wire signed [(3'h4):(1'h0)] wire10;
  input wire [(4'hb):(1'h0)] wire9;
  wire signed [(4'h8):(1'h0)] wire67;
  wire [(2'h2):(1'h0)] wire66;
  wire signed [(2'h3):(1'h0)] wire65;
  wire signed [(3'h7):(1'h0)] wire64;
  wire [(4'h9):(1'h0)] wire63;
  wire signed [(3'h5):(1'h0)] wire62;
  wire [(2'h2):(1'h0)] wire61;
  wire [(3'h4):(1'h0)] wire59;
  wire [(3'h5):(1'h0)] wire37;
  wire [(4'ha):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire14;
  wire signed [(3'h5):(1'h0)] wire13;
  assign y = {wire67,
                 wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire59,
                 wire37,
                 wire15,
                 wire14,
                 wire13,
                 (1'h0)};
  assign wire13 = $signed(wire11);
  assign wire14 = wire10[(3'h4):(1'h1)];
  assign wire15 = (({$signed(wire11)} ? (&(&(8'ha8))) : $signed(wire9)) ?
                      $signed(wire10[(1'h1):(1'h0)]) : $signed(($signed((8'hab)) ?
                          (wire12 * wire13) : (wire12 ? (8'h9d) : wire10))));
  module16 #() modinst38 (wire37, clk, wire12, wire11, wire15, wire9);
  module39 #() modinst60 (wire59, clk, wire37, wire11, wire14, wire15);
  assign wire61 = $signed(($unsigned($signed(wire14)) ?
                      wire37 : ((wire59 ? wire13 : (8'ha6)) ^ {wire14})));
  assign wire62 = wire61[(2'h2):(2'h2)];
  assign wire63 = (^wire37);
  assign wire64 = wire61[(1'h0):(1'h0)];
  assign wire65 = wire63[(2'h2):(1'h0)];
  assign wire66 = (^({(wire13 > wire62)} - ($signed(wire37) ?
                      (~|wire63) : $unsigned(wire37))));
  assign wire67 = ((8'hb0) - {((wire14 ? wire37 : (8'ha5)) ?
                          wire66[(2'h2):(1'h1)] : (&wire12))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module39
#(parameter param58 = {(8'hac)})
(y, clk, wire43, wire42, wire41, wire40);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire43;
  input wire signed [(4'ha):(1'h0)] wire42;
  input wire signed [(4'hb):(1'h0)] wire41;
  input wire signed [(3'h7):(1'h0)] wire40;
  wire [(3'h4):(1'h0)] wire56;
  wire signed [(3'h5):(1'h0)] wire55;
  wire signed [(2'h3):(1'h0)] wire54;
  wire [(4'h8):(1'h0)] wire53;
  wire signed [(4'h8):(1'h0)] wire52;
  wire [(3'h5):(1'h0)] wire51;
  wire signed [(2'h2):(1'h0)] wire50;
  wire [(4'h9):(1'h0)] wire49;
  wire [(2'h2):(1'h0)] wire48;
  wire [(3'h4):(1'h0)] wire47;
  wire signed [(3'h6):(1'h0)] wire46;
  reg [(3'h5):(1'h0)] reg57 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg45 = (1'h0);
  reg [(4'hb):(1'h0)] reg44 = (1'h0);
  assign y = {wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 reg57,
                 reg45,
                 reg44,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($unsigned((($signed(wire42) | $signed((8'hac))) ?
          ($unsigned(wire42) ? (!(8'ha5)) : (8'ha9)) : (wire42 < (8'ha6)))))
        begin
          reg44 <= wire43;
        end
      else
        begin
          reg44 <= $signed((&(!$unsigned((8'ha6)))));
          reg45 <= reg44[(4'ha):(1'h1)];
        end
    end
  assign wire46 = (^{reg44[(3'h7):(3'h4)]});
  assign wire47 = $signed((^$signed(reg44[(4'h9):(4'h9)])));
  assign wire48 = ((((wire43 <= wire40) == wire40) || {{wire47}}) ?
                      wire41[(4'ha):(3'h7)] : reg45);
  assign wire49 = reg44[(3'h5):(1'h0)];
  assign wire50 = wire46[(1'h0):(1'h0)];
  assign wire51 = wire50;
  assign wire52 = wire51[(3'h5):(1'h0)];
  assign wire53 = $signed((wire50[(1'h1):(1'h1)] & (-$signed(wire47))));
  assign wire54 = reg45;
  assign wire55 = $signed((~&$unsigned($signed(wire46))));
  assign wire56 = ((((!(8'ha2)) >>> reg44[(4'h8):(3'h7)]) ?
                      ({wire43} ?
                          (~^(8'ha2)) : (wire51 & wire53)) : ($unsigned(wire46) ?
                          (wire41 <<< wire49) : $unsigned(wire53))) + ({{wire40}} ?
                      (~((8'hac) >= wire41)) : wire42[(1'h1):(1'h0)]));
  always
    @(posedge clk) begin
      reg57 <= wire42[(4'h9):(1'h1)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16
#(parameter param36 = (~^((8'ha1) & (((8'haf) ? (8'haa) : (8'ha3)) ? ((8'h9c) * (8'ha6)) : {(8'ha9)}))))
(y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire20;
  input wire signed [(4'ha):(1'h0)] wire19;
  input wire [(4'h9):(1'h0)] wire18;
  input wire signed [(2'h3):(1'h0)] wire17;
  wire [(4'ha):(1'h0)] wire35;
  wire [(2'h3):(1'h0)] wire33;
  wire signed [(3'h5):(1'h0)] wire32;
  wire [(4'h9):(1'h0)] wire31;
  wire signed [(3'h4):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire29;
  wire [(3'h6):(1'h0)] wire28;
  wire signed [(4'h8):(1'h0)] wire27;
  wire signed [(2'h2):(1'h0)] wire26;
  reg [(4'ha):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg25 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg23 = (1'h0);
  reg [(2'h2):(1'h0)] reg22 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg21 = (1'h0);
  assign y = {wire35,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 reg34,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire20)
        begin
          reg21 <= (wire20[(3'h4):(1'h0)] ^~ $unsigned($signed($signed(wire19))));
          reg22 <= {($signed((wire20 ~^ wire19)) <= reg21[(3'h5):(2'h2)])};
          if ($signed((+(~&(reg22 >= wire17)))))
            begin
              reg23 <= {reg22};
              reg24 <= reg22[(1'h1):(1'h0)];
              reg25 <= $unsigned($signed({$signed(reg23)}));
            end
          else
            begin
              reg23 <= $unsigned($signed($unsigned(reg22[(1'h1):(1'h1)])));
              reg24 <= $signed($unsigned(reg21));
            end
        end
      else
        begin
          if ((wire20 ?
              ($unsigned(wire19) ?
                  $signed(((8'h9c) || wire20)) : wire17[(2'h2):(2'h2)]) : reg23))
            begin
              reg21 <= $unsigned($signed((~&((8'hab) ? (8'h9e) : wire20))));
            end
          else
            begin
              reg21 <= $signed({$signed((~&wire17))});
            end
        end
    end
  assign wire26 = $unsigned($unsigned(((8'ha7) ?
                      $signed(wire17) : reg24[(3'h6):(1'h1)])));
  assign wire27 = wire26[(2'h2):(1'h1)];
  assign wire28 = reg23;
  assign wire29 = (^~{($signed((8'ha7)) > {(8'ha1)})});
  assign wire30 = ($signed($unsigned((+reg24))) ?
                      reg24 : $unsigned($unsigned((8'hac))));
  assign wire31 = wire17[(2'h3):(2'h2)];
  assign wire32 = (~&$unsigned($unsigned((8'hab))));
  assign wire33 = ($unsigned($signed((~^(8'h9f)))) ^~ (&wire31));
  always
    @(posedge clk) begin
      reg34 <= ($signed(((wire27 ? wire29 : wire27) ?
          (wire27 ? wire30 : (8'hac)) : wire19)) * {wire33[(1'h0):(1'h0)]});
    end
  assign wire35 = (wire31[(3'h6):(1'h1)] <<< reg34);
endmodule