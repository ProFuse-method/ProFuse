(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire91;
  wire [(3'h6):(1'h0)] wire90;
  wire signed [(4'h8):(1'h0)] wire89;
  wire signed [(3'h5):(1'h0)] wire88;
  wire signed [(4'hb):(1'h0)] wire87;
  wire [(2'h2):(1'h0)] wire85;
  wire [(3'h4):(1'h0)] wire37;
  wire signed [(4'ha):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire4;
  reg [(4'ha):(1'h0)] reg94 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg93 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg92 = (1'h0);
  assign y = {wire91,
                 wire90,
                 wire89,
                 wire88,
                 wire87,
                 wire85,
                 wire37,
                 wire5,
                 wire4,
                 reg94,
                 reg93,
                 reg92,
                 (1'h0)};
  assign wire4 = wire1;
  assign wire5 = $signed(wire3[(1'h0):(1'h0)]);
  module6 #() modinst38 (wire37, clk, wire0, wire4, wire1, wire2);
  module39 #() modinst86 (.wire42(wire2), .wire43(wire3), .y(wire85), .wire40(wire0), .clk(clk), .wire41(wire5));
  assign wire87 = wire2;
  assign wire88 = (!(~^(~|(wire4 > wire3))));
  assign wire89 = wire0;
  assign wire90 = wire0;
  assign wire91 = ((~&((~wire0) <= (wire87 < wire2))) << wire2);
  always
    @(posedge clk) begin
      if (($signed((~(wire4 > (8'hae)))) - $unsigned($signed($signed(wire90)))))
        begin
          reg92 <= ((((wire91 ?
              wire0 : wire37) < (8'ha3)) || {wire88}) && ({$signed(wire91)} ?
              wire2 : ((^~wire1) ~^ $unsigned(wire5))));
          reg93 <= $unsigned(wire2[(3'h4):(1'h1)]);
        end
      else
        begin
          if ((8'had))
            begin
              reg92 <= (^~(wire89[(4'h8):(1'h0)] >= $unsigned((^wire0))));
              reg93 <= $signed(wire37[(3'h4):(1'h1)]);
              reg94 <= (({(+wire91)} * (^wire89[(4'h8):(3'h5)])) ?
                  {$unsigned($signed(wire89))} : (wire89[(3'h5):(2'h2)] ?
                      $unsigned((reg93 ^ reg92)) : (8'ha0)));
            end
          else
            begin
              reg92 <= $signed(wire1);
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module39  (y, clk, wire43, wire42, wire41, wire40);
  output wire [(32'h6e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire43;
  input wire signed [(2'h3):(1'h0)] wire42;
  input wire signed [(4'ha):(1'h0)] wire41;
  input wire [(4'h8):(1'h0)] wire40;
  wire [(4'h9):(1'h0)] wire84;
  wire signed [(3'h6):(1'h0)] wire83;
  wire signed [(3'h5):(1'h0)] wire81;
  wire signed [(3'h6):(1'h0)] wire59;
  wire [(2'h3):(1'h0)] wire58;
  wire [(4'h8):(1'h0)] wire52;
  wire signed [(2'h2):(1'h0)] wire45;
  wire signed [(3'h7):(1'h0)] wire44;
  reg signed [(2'h2):(1'h0)] reg57 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg56 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg55 = (1'h0);
  reg [(2'h3):(1'h0)] reg54 = (1'h0);
  reg [(3'h4):(1'h0)] reg53 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg50 = (1'h0);
  reg [(3'h6):(1'h0)] reg49 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg48 = (1'h0);
  reg [(3'h7):(1'h0)] reg47 = (1'h0);
  reg [(3'h4):(1'h0)] reg46 = (1'h0);
  assign y = {wire84,
                 wire83,
                 wire81,
                 wire59,
                 wire58,
                 wire52,
                 wire45,
                 wire44,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 (1'h0)};
  assign wire44 = (^~($signed($signed(wire41)) + $signed(wire43)));
  assign wire45 = wire44[(2'h3):(1'h1)];
  always
    @(posedge clk) begin
      if (({wire42[(1'h1):(1'h1)]} + $signed(((8'ha2) ?
          (wire42 | (8'ha9)) : $signed(wire42)))))
        begin
          reg46 <= $unsigned((+wire44));
          reg47 <= wire42;
          if ($unsigned((wire45 ? wire45[(1'h0):(1'h0)] : {$signed(reg46)})))
            begin
              reg48 <= {$unsigned({(~&wire44)})};
            end
          else
            begin
              reg48 <= $signed($signed($unsigned((^~(8'ha5)))));
            end
        end
      else
        begin
          reg46 <= (|{wire43[(2'h3):(1'h1)]});
          reg47 <= (((~|reg46[(2'h3):(2'h2)]) >= $signed(reg47)) ?
              $signed(wire43) : (8'hae));
        end
      if ($unsigned($signed(wire41)))
        begin
          if ((-$unsigned(((~^reg47) ?
              reg48[(3'h5):(3'h5)] : (reg46 && wire40)))))
            begin
              reg49 <= {wire40[(3'h5):(1'h0)]};
              reg50 <= (wire43[(3'h5):(2'h3)] ^ $signed({reg46[(3'h4):(1'h1)]}));
              reg51 <= ({((^~reg48) ?
                      $signed(wire41) : (8'hae))} <= (&($signed(wire44) ?
                  {wire45} : $signed((8'h9c)))));
            end
          else
            begin
              reg49 <= ((~^($unsigned(wire43) << $signed(wire41))) ?
                  {((reg49 - wire42) >= (wire41 != wire44))} : $signed(wire40));
              reg50 <= (|$unsigned($unsigned((reg47 ? (8'hac) : wire45))));
              reg51 <= ($unsigned($signed(reg46[(1'h1):(1'h0)])) <= reg50);
            end
        end
      else
        begin
          if (wire45)
            begin
              reg49 <= $unsigned($signed(wire43));
            end
          else
            begin
              reg49 <= reg46;
            end
        end
    end
  assign wire52 = (^~($unsigned(reg48) ?
                      reg47[(1'h0):(1'h0)] : $unsigned(reg50)));
  always
    @(posedge clk) begin
      reg53 <= wire44[(1'h0):(1'h0)];
      if (wire40)
        begin
          reg54 <= wire52;
          reg55 <= wire44;
          reg56 <= reg50[(1'h1):(1'h0)];
        end
      else
        begin
          reg54 <= (~&$signed(reg55[(1'h0):(1'h0)]));
          reg55 <= (~$signed(reg51[(3'h6):(2'h2)]));
        end
      reg57 <= reg47;
    end
  assign wire58 = wire43;
  assign wire59 = {$unsigned((wire45[(2'h2):(2'h2)] < wire42))};
  module60 #() modinst82 (.wire62(wire41), .clk(clk), .wire61(reg56), .wire63(wire58), .y(wire81), .wire64(reg47));
  assign wire83 = $signed((!({reg55} ? $signed(reg54) : wire40)));
  assign wire84 = wire43[(2'h2):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param36 = (|((+((8'ha6) ? (8'hab) : (8'hae))) ^~ (((8'h9c) < (8'ha2)) ? ((8'haf) ? (8'hab) : (8'haf)) : ((8'hae) > (8'ha7))))))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'ha5):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire10;
  input wire signed [(3'h5):(1'h0)] wire9;
  input wire signed [(3'h6):(1'h0)] wire8;
  input wire signed [(3'h5):(1'h0)] wire7;
  wire [(3'h7):(1'h0)] wire35;
  wire [(3'h4):(1'h0)] wire34;
  wire [(2'h2):(1'h0)] wire33;
  wire [(3'h6):(1'h0)] wire32;
  wire signed [(3'h4):(1'h0)] wire31;
  wire signed [(3'h7):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire11;
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg29 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg28 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg27 = (1'h0);
  reg [(4'hb):(1'h0)] reg26 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg25 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg23 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg22 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg20 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg19 = (1'h0);
  reg [(3'h7):(1'h0)] reg18 = (1'h0);
  reg [(3'h4):(1'h0)] reg17 = (1'h0);
  reg [(3'h7):(1'h0)] reg16 = (1'h0);
  reg [(3'h7):(1'h0)] reg15 = (1'h0);
  reg [(4'h9):(1'h0)] reg14 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg13 = (1'h0);
  reg [(3'h6):(1'h0)] reg12 = (1'h0);
  assign y = {wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire21,
                 wire11,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 (1'h0)};
  assign wire11 = (^~wire8[(3'h6):(1'h1)]);
  always
    @(posedge clk) begin
      reg12 <= wire8[(1'h0):(1'h0)];
      reg13 <= reg12;
      if ($unsigned((8'h9f)))
        begin
          reg14 <= $signed($signed(reg12));
          reg15 <= ($signed({(~&(8'ha0))}) & $unsigned(wire7[(2'h2):(2'h2)]));
          if (((wire9[(1'h0):(1'h0)] ?
                  {reg13} : ($unsigned((8'ha8)) >> $signed(wire11))) ?
              $signed($signed($unsigned(wire8))) : ((~&$unsigned(wire8)) << (wire11[(1'h0):(1'h0)] & reg14))))
            begin
              reg16 <= $unsigned($unsigned((!$signed(reg14))));
            end
          else
            begin
              reg16 <= ($unsigned(($unsigned(wire11) ?
                  (~^reg13) : (reg16 == reg15))) != (&{(8'ha4)}));
              reg17 <= {reg15[(1'h0):(1'h0)]};
              reg18 <= ($signed((~|(wire9 + wire10))) ?
                  wire8 : $signed((wire10[(3'h6):(1'h0)] >> (reg14 - wire8))));
            end
        end
      else
        begin
          if ($unsigned($signed($signed((-reg16)))))
            begin
              reg14 <= (wire11 <<< {$signed((reg15 >= reg17))});
              reg15 <= $unsigned((wire10 ?
                  (^~(reg15 && wire9)) : $unsigned(wire11)));
            end
          else
            begin
              reg14 <= (reg15[(2'h3):(2'h2)] ?
                  (reg15[(2'h3):(2'h3)] || $unsigned((~&wire8))) : (($unsigned(wire8) ?
                          (reg13 ? reg12 : wire11) : reg16[(1'h1):(1'h0)]) ?
                      (8'haf) : $unsigned((wire11 < reg17))));
              reg15 <= ((+$signed((^~reg15))) + $unsigned(reg12));
              reg16 <= wire7[(2'h3):(1'h1)];
            end
          if (wire7)
            begin
              reg17 <= {(~|(reg12[(2'h3):(2'h3)] ?
                      reg13[(2'h3):(2'h3)] : $unsigned(wire10)))};
              reg18 <= reg14[(3'h4):(2'h3)];
              reg19 <= $unsigned(reg18);
            end
          else
            begin
              reg17 <= (((-(reg15 ?
                  wire8 : reg16)) < $unsigned((wire7 <<< (8'haa)))) > $signed(((+wire7) << (~|reg15))));
            end
          reg20 <= ({wire9} ? reg18[(1'h0):(1'h0)] : reg17);
        end
    end
  assign wire21 = ({reg17[(2'h2):(1'h0)]} != $unsigned($signed(reg12)));
  always
    @(posedge clk) begin
      reg22 <= (+{((wire7 ? reg19 : reg17) ^~ (reg20 ? wire11 : reg18))});
      reg23 <= (~reg20[(3'h7):(3'h4)]);
      reg24 <= ((&$unsigned($signed(wire21))) ?
          {wire11} : ({(reg14 + reg16)} ^~ {(~|wire7)}));
    end
  always
    @(posedge clk) begin
      if (reg20)
        begin
          reg25 <= (wire7[(2'h2):(2'h2)] + reg15[(1'h0):(1'h0)]);
        end
      else
        begin
          if ($unsigned((($unsigned(reg23) - $unsigned(reg12)) ?
              ($signed(reg12) <<< {reg12}) : reg22)))
            begin
              reg25 <= (^~(($signed(reg23) <= {reg15}) ?
                  (|wire9[(3'h4):(2'h3)]) : {wire9}));
              reg26 <= ((~^reg19[(4'ha):(4'h9)]) ?
                  reg20 : ((8'had) <<< (~&$unsigned(wire8))));
            end
          else
            begin
              reg25 <= (((reg14[(1'h0):(1'h0)] < reg17) != $unsigned(reg25[(3'h7):(3'h4)])) && reg12[(3'h5):(3'h5)]);
              reg26 <= (~^(|$unsigned($signed(reg26))));
              reg27 <= {reg12};
            end
          if (reg24[(2'h2):(2'h2)])
            begin
              reg28 <= reg13[(3'h7):(2'h3)];
              reg29 <= reg28[(2'h2):(1'h0)];
            end
          else
            begin
              reg28 <= (((reg12 ? {reg24} : (reg29 ? wire11 : wire7)) ?
                      reg29[(1'h1):(1'h1)] : $signed((reg29 ? reg23 : wire9))) ?
                  reg23 : {(-reg19)});
            end
        end
      reg30 <= $signed(reg20[(3'h7):(3'h4)]);
    end
  assign wire31 = $signed((reg24 + (reg17 ? {reg27} : reg14[(3'h7):(1'h0)])));
  assign wire32 = reg18[(3'h7):(3'h4)];
  assign wire33 = $unsigned(reg27);
  assign wire34 = $signed(reg15);
  assign wire35 = {(+reg20[(3'h5):(1'h0)])};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module60
#(parameter param80 = (~|((((8'had) * (8'ha7)) ? ((8'hae) >> (8'h9d)) : ((8'h9c) ? (8'ha2) : (8'ha0))) <= ((^(8'had)) ? ((8'h9e) < (8'h9f)) : (~(8'h9f))))))
(y, clk, wire64, wire63, wire62, wire61);
  output wire [(32'h5d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire64;
  input wire signed [(2'h3):(1'h0)] wire63;
  input wire [(4'ha):(1'h0)] wire62;
  input wire [(3'h4):(1'h0)] wire61;
  wire [(3'h7):(1'h0)] wire78;
  wire signed [(3'h6):(1'h0)] wire77;
  wire [(4'h8):(1'h0)] wire76;
  wire signed [(3'h7):(1'h0)] wire75;
  wire [(3'h7):(1'h0)] wire74;
  wire signed [(4'h9):(1'h0)] wire73;
  wire [(3'h7):(1'h0)] wire72;
  wire [(3'h5):(1'h0)] wire71;
  wire signed [(2'h3):(1'h0)] wire70;
  wire [(4'h9):(1'h0)] wire69;
  reg signed [(3'h4):(1'h0)] reg79 = (1'h0);
  reg [(3'h4):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg67 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg66 = (1'h0);
  reg [(3'h4):(1'h0)] reg65 = (1'h0);
  assign y = {wire78,
                 wire77,
                 wire76,
                 wire75,
                 wire74,
                 wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 reg79,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($unsigned((wire63 ? (8'h9f) : $signed($signed(wire61)))))
        begin
          reg65 <= $unsigned((!((wire62 >= wire64) ?
              $unsigned((8'ha6)) : $signed((8'h9d)))));
        end
      else
        begin
          if (($signed(($signed(reg65) ?
              $unsigned(wire62) : (^~wire62))) | ((!wire62) ?
              wire62[(1'h1):(1'h0)] : wire64)))
            begin
              reg65 <= (~&(~&(~&(~wire63))));
              reg66 <= ({((~^wire62) ?
                          (wire62 || (8'h9f)) : $signed((8'hae)))} ?
                  (($unsigned(wire62) ?
                      wire61 : ((8'h9e) ?
                          wire63 : wire63)) * ((wire63 + (8'ha4)) ?
                      (~(8'ha5)) : $signed(wire62))) : (~|wire61));
            end
          else
            begin
              reg65 <= ($unsigned((8'h9c)) <= ((!(^wire62)) ~^ $signed((reg65 ?
                  wire61 : wire62))));
            end
        end
    end
  always
    @(posedge clk) begin
      reg67 <= {wire63[(1'h0):(1'h0)]};
      reg68 <= $unsigned((-$unsigned((wire64 ? reg65 : wire63))));
    end
  assign wire69 = $unsigned($signed({wire62[(4'h9):(3'h7)]}));
  assign wire70 = reg66[(3'h5):(2'h2)];
  assign wire71 = (~^wire62);
  assign wire72 = ($signed(reg68[(1'h0):(1'h0)]) ?
                      ((wire62 <= wire71) ^ ($unsigned(wire64) != (~wire62))) : (~^$signed($unsigned(wire71))));
  assign wire73 = (wire64 ?
                      ($unsigned((!wire63)) ^ $signed((reg66 >>> wire63))) : (((wire64 ?
                                  (8'h9d) : reg65) ?
                              (wire69 <<< wire69) : (~^wire62)) ?
                          wire63[(1'h0):(1'h0)] : wire71));
  assign wire74 = reg68[(2'h3):(2'h3)];
  assign wire75 = {$unsigned(wire71[(1'h1):(1'h1)])};
  assign wire76 = (wire75[(3'h5):(3'h5)] ?
                      {(-(wire71 ?
                              reg66 : wire64))} : $signed(reg65[(1'h0):(1'h0)]));
  assign wire77 = $signed((((wire73 ? reg65 : wire71) ?
                          (|wire74) : (wire71 ? reg66 : reg68)) ?
                      wire73 : $signed((^~wire70))));
  assign wire78 = (({wire61} ?
                      (+{wire72}) : ($signed((8'haf)) ?
                          $signed(wire63) : $signed(wire74))) >>> (wire69 ?
                      (~|wire69) : wire74));
  always
    @(posedge clk) begin
      reg79 <= wire77;
    end
endmodule