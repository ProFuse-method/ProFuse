(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h18):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire63;
  wire signed [(3'h6):(1'h0)] wire61;
  wire signed [(3'h5):(1'h0)] wire7;
  wire signed [(3'h4):(1'h0)] wire5;
  wire signed [(3'h4):(1'h0)] wire4;
  reg signed [(2'h2):(1'h0)] reg6 = (1'h0);
  assign y = {wire63, wire61, wire7, wire5, wire4, reg6, (1'h0)};
  assign wire4 = ((~$signed((wire1 ? wire0 : wire2))) ?
                     wire3[(1'h0):(1'h0)] : (+((~&wire2) - wire0[(1'h1):(1'h0)])));
  assign wire5 = {$unsigned(wire3[(1'h0):(1'h0)])};
  always
    @(posedge clk) begin
      reg6 <= $unsigned(wire1[(1'h1):(1'h0)]);
    end
  assign wire7 = wire0[(1'h0):(1'h0)];
  module8 #() modinst62 (.y(wire61), .wire12(wire2), .wire10(wire1), .clk(clk), .wire9(wire4), .wire11(wire0));
  assign wire63 = (&reg6[(1'h0):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire12;
  input wire signed [(4'hb):(1'h0)] wire11;
  input wire signed [(4'h8):(1'h0)] wire10;
  input wire signed [(3'h4):(1'h0)] wire9;
  wire signed [(3'h4):(1'h0)] wire60;
  wire [(3'h6):(1'h0)] wire59;
  wire [(3'h6):(1'h0)] wire58;
  wire [(2'h3):(1'h0)] wire56;
  wire [(4'hb):(1'h0)] wire38;
  wire signed [(4'h9):(1'h0)] wire36;
  wire [(3'h7):(1'h0)] wire13;
  assign y = {wire60, wire59, wire58, wire56, wire38, wire36, wire13, (1'h0)};
  assign wire13 = $signed(wire12);
  module14 #() modinst37 (.wire16(wire10), .y(wire36), .clk(clk), .wire18(wire13), .wire15(wire9), .wire17(wire11));
  assign wire38 = ((((wire12 <<< wire10) > $unsigned(wire12)) ?
                      $unsigned((wire11 ?
                          wire13 : wire12)) : $unsigned((^~wire11))) ^~ wire13);
  module39 #() modinst57 (.wire43(wire13), .y(wire56), .wire42(wire36), .clk(clk), .wire40(wire11), .wire41(wire12));
  assign wire58 = (wire12[(3'h7):(1'h1)] ?
                      wire13 : (($signed(wire13) << $unsigned(wire12)) ?
                          (^~wire38[(2'h3):(2'h3)]) : wire56[(1'h0):(1'h0)]));
  assign wire59 = wire38[(1'h1):(1'h1)];
  assign wire60 = ({wire59[(3'h4):(1'h0)]} ?
                      $unsigned(($unsigned(wire9) ?
                          wire13[(3'h7):(3'h6)] : wire12[(1'h1):(1'h1)])) : $signed({$unsigned(wire12)}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module39
#(parameter param55 = {((((8'h9e) ? (8'h9e) : (8'hb0)) >> (~^(8'hb0))) ? (&{(8'h9e)}) : (|(-(8'ha0))))})
(y, clk, wire43, wire42, wire41, wire40);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire43;
  input wire signed [(2'h3):(1'h0)] wire42;
  input wire [(3'h4):(1'h0)] wire41;
  input wire signed [(3'h4):(1'h0)] wire40;
  wire signed [(2'h2):(1'h0)] wire54;
  wire signed [(3'h6):(1'h0)] wire53;
  wire signed [(2'h3):(1'h0)] wire52;
  wire [(4'hb):(1'h0)] wire51;
  wire [(2'h2):(1'h0)] wire50;
  wire [(2'h3):(1'h0)] wire45;
  wire [(4'ha):(1'h0)] wire44;
  reg signed [(3'h4):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg46 = (1'h0);
  assign y = {wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire45,
                 wire44,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 (1'h0)};
  assign wire44 = $signed($unsigned((wire42 ? (!wire41) : {wire43})));
  assign wire45 = (~|(^wire42[(2'h3):(1'h1)]));
  always
    @(posedge clk) begin
      reg46 <= ({wire44[(2'h2):(1'h1)]} ?
          (8'hac) : (~|$unsigned($unsigned(wire41))));
      reg47 <= ((~$signed(wire44)) ? $unsigned(wire40) : (8'hac));
      reg48 <= reg46[(1'h0):(1'h0)];
    end
  always
    @(posedge clk) begin
      reg49 <= $signed(wire41[(2'h2):(1'h1)]);
    end
  assign wire50 = {wire44};
  assign wire51 = reg47[(1'h1):(1'h0)];
  assign wire52 = (((!(wire44 && reg49)) ?
                      wire50[(1'h1):(1'h0)] : (!$signed(wire51))) * {(8'ha6)});
  assign wire53 = wire42;
  assign wire54 = $signed(wire52[(2'h3):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param35 = (~^(({(8'h9e)} ? ((8'ha7) ? (8'haa) : (8'h9d)) : {(8'h9d)}) ^~ (~&{(8'hae)}))))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire18;
  input wire [(3'h4):(1'h0)] wire17;
  input wire signed [(4'h8):(1'h0)] wire16;
  input wire [(2'h2):(1'h0)] wire15;
  wire signed [(3'h4):(1'h0)] wire34;
  wire signed [(4'hb):(1'h0)] wire33;
  wire [(3'h6):(1'h0)] wire32;
  wire signed [(3'h4):(1'h0)] wire31;
  wire [(4'hb):(1'h0)] wire30;
  wire [(4'h8):(1'h0)] wire20;
  wire signed [(3'h7):(1'h0)] wire19;
  reg signed [(2'h2):(1'h0)] reg29 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg28 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg27 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg26 = (1'h0);
  reg [(2'h3):(1'h0)] reg25 = (1'h0);
  reg [(3'h5):(1'h0)] reg24 = (1'h0);
  reg [(3'h4):(1'h0)] reg23 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg21 = (1'h0);
  assign y = {wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire20,
                 wire19,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 (1'h0)};
  assign wire19 = ($unsigned((wire18[(3'h5):(1'h0)] ?
                      (wire16 ? wire17 : wire15) : ((8'ha6) ?
                          wire15 : wire16))) - ((~|wire15[(1'h0):(1'h0)]) ?
                      {(wire16 >>> (8'ha9))} : (^~wire18)));
  assign wire20 = $signed(({wire16} == wire19));
  always
    @(posedge clk) begin
      reg21 <= $unsigned({(wire18[(3'h6):(1'h0)] ^~ {wire16})});
    end
  always
    @(posedge clk) begin
      reg22 <= (wire19[(3'h5):(1'h0)] ?
          $unsigned($unsigned($unsigned(wire17))) : (&wire17));
      if (($signed($signed({(8'hae)})) ^~ ($unsigned(reg21[(3'h6):(1'h1)]) == (wire16[(3'h5):(3'h4)] ^~ (wire18 >>> wire18)))))
        begin
          reg23 <= $unsigned(wire20);
          if (wire19)
            begin
              reg24 <= ($signed(reg23) ?
                  ((8'ha2) == reg22[(2'h3):(2'h2)]) : (8'ha1));
              reg25 <= reg22[(3'h6):(3'h6)];
              reg26 <= ((~$signed(reg22)) ?
                  (reg21[(3'h4):(3'h4)] ?
                      $signed($signed(wire20)) : (wire18 ?
                          wire20 : $unsigned((8'ha9)))) : ((wire15 ?
                      $unsigned(wire18) : (+wire19)) << (((8'ha5) ?
                      wire19 : reg25) - (wire15 >> reg21))));
            end
          else
            begin
              reg24 <= ((wire17 ?
                  wire20[(1'h1):(1'h0)] : reg23[(1'h0):(1'h0)]) - {$signed(((8'ha0) < wire20))});
            end
          reg27 <= (&reg26[(2'h2):(1'h1)]);
        end
      else
        begin
          reg23 <= {$signed($signed($signed(reg23)))};
          reg24 <= $unsigned($unsigned($unsigned(((8'ha9) * wire18))));
          reg25 <= $signed((reg23[(1'h0):(1'h0)] ?
              $unsigned($signed(reg24)) : (!(wire18 >>> wire20))));
        end
      reg28 <= $unsigned((^~(8'ha6)));
    end
  always
    @(posedge clk) begin
      reg29 <= reg27[(2'h3):(2'h3)];
    end
  assign wire30 = $unsigned(reg26);
  assign wire31 = {(8'haf)};
  assign wire32 = (~^{(reg22[(1'h1):(1'h1)] ^~ (wire15 - wire15))});
  assign wire33 = ($signed(wire32) ?
                      (((!reg21) ^ $unsigned(reg22)) ?
                          (^$signed(wire15)) : {reg23}) : $unsigned((~reg23[(1'h0):(1'h0)])));
  assign wire34 = (wire31[(3'h4):(1'h0)] != wire20[(1'h0):(1'h0)]);
endmodule