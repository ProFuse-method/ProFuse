(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param46 = ((&({(8'haf)} ? ((8'h9e) ? (8'ha2) : (8'ha6)) : {(8'ha1)})) ? (-(^~(^~(8'hac)))) : ((((8'hac) & (8'ha1)) << (-(8'ha5))) <= (+(8'ha8)))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire42;
  wire signed [(3'h7):(1'h0)] wire41;
  wire [(3'h7):(1'h0)] wire40;
  wire signed [(3'h6):(1'h0)] wire39;
  wire signed [(3'h4):(1'h0)] wire37;
  wire signed [(2'h2):(1'h0)] wire35;
  reg signed [(3'h6):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg38 = (1'h0);
  assign y = {wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire37,
                 wire35,
                 reg45,
                 reg44,
                 reg43,
                 reg38,
                 (1'h0)};
  module4 #() modinst36 (wire35, clk, wire3, wire0, wire1, wire2);
  assign wire37 = ($signed($unsigned((wire35 >> wire1))) || wire1[(3'h4):(2'h3)]);
  always
    @(posedge clk) begin
      reg38 <= ($signed($signed(wire1[(4'h9):(4'h8)])) ?
          {{wire3}} : (((~&wire3) ?
              ((8'ha0) ? wire0 : wire35) : ((8'haf) ?
                  wire35 : (8'hac))) | $signed(wire1)));
    end
  assign wire39 = (wire37[(1'h1):(1'h0)] ?
                      $unsigned(wire37) : (wire35[(2'h2):(2'h2)] ?
                          wire2[(4'h8):(2'h2)] : wire1[(3'h6):(3'h4)]));
  assign wire40 = $unsigned($unsigned(wire2));
  assign wire41 = $unsigned($unsigned($unsigned($unsigned(wire1))));
  assign wire42 = (((~^wire39[(3'h5):(2'h3)]) ?
                      $unsigned((!wire35)) : $signed($unsigned(reg38))) || wire41[(3'h6):(1'h1)]);
  always
    @(posedge clk) begin
      reg43 <= wire35[(2'h2):(1'h0)];
      reg44 <= wire3[(2'h2):(1'h0)];
      reg45 <= (^{({wire3} ^ $unsigned(wire39))});
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param34 = (~|((~^(|(8'ha1))) || ((-(8'h9c)) || (~|(8'ha1))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire8;
  input wire signed [(4'ha):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire6;
  input wire [(4'hb):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire33;
  wire [(2'h2):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire31;
  wire signed [(3'h6):(1'h0)] wire30;
  wire signed [(4'h8):(1'h0)] wire29;
  wire [(4'ha):(1'h0)] wire28;
  wire [(4'ha):(1'h0)] wire27;
  wire signed [(2'h3):(1'h0)] wire23;
  reg signed [(3'h7):(1'h0)] reg26 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg25 = (1'h0);
  assign y = {wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire23,
                 reg26,
                 reg25,
                 (1'h0)};
  module9 #() modinst24 (wire23, clk, wire8, wire6, wire7, wire5);
  always
    @(posedge clk) begin
      reg25 <= wire6[(3'h7):(2'h3)];
      reg26 <= (^(((reg25 ? wire6 : (8'h9f)) ?
          (reg25 ? reg25 : wire8) : (wire8 ^~ wire23)) == wire8));
    end
  assign wire27 = (~$unsigned(({reg25} ?
                      $unsigned(reg25) : wire5[(4'ha):(3'h6)])));
  assign wire28 = {(($unsigned(wire8) ? {wire8} : (wire6 ? (8'h9d) : wire27)) ?
                          $signed((|(8'ha5))) : $signed(((8'h9f) ?
                              wire7 : wire5)))};
  assign wire29 = $signed(($unsigned(wire5[(2'h2):(2'h2)]) ?
                      {(wire27 ?
                              (8'hac) : wire27)} : $unsigned($unsigned((8'ha0)))));
  assign wire30 = wire27[(4'ha):(4'h8)];
  assign wire31 = ((wire6 >>> $unsigned((~wire29))) >> (+($signed(wire30) & $signed(reg26))));
  assign wire32 = wire8[(4'h9):(3'h6)];
  assign wire33 = (~|(-(^reg25)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param22 = {((8'ha5) >>> ({(8'h9c)} == (8'h9e)))})
(y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h32):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire13;
  input wire signed [(3'h7):(1'h0)] wire12;
  input wire signed [(4'ha):(1'h0)] wire11;
  input wire signed [(4'ha):(1'h0)] wire10;
  wire [(3'h4):(1'h0)] wire21;
  wire [(3'h4):(1'h0)] wire20;
  wire [(3'h6):(1'h0)] wire19;
  wire [(4'h8):(1'h0)] wire18;
  wire signed [(3'h6):(1'h0)] wire17;
  wire signed [(3'h6):(1'h0)] wire16;
  wire [(3'h4):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire14;
  assign y = {wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 (1'h0)};
  assign wire14 = wire10;
  assign wire15 = $signed(((8'haa) ?
                      $signed((wire12 ^~ wire13)) : $signed((|(8'ha4)))));
  assign wire16 = $unsigned((|wire10[(4'ha):(1'h0)]));
  assign wire17 = {wire16[(1'h1):(1'h1)]};
  assign wire18 = {$unsigned(((~|wire14) ? $signed((8'had)) : {(8'hab)}))};
  assign wire19 = ({((wire17 ? wire16 : wire11) ?
                          $signed(wire11) : ((8'ha6) ?
                              (8'ha1) : wire16))} >= $unsigned(wire13[(1'h1):(1'h1)]));
  assign wire20 = (wire14[(1'h0):(1'h0)] != (~|{(wire11 ? wire14 : (8'hb0))}));
  assign wire21 = (8'ha7);
endmodule