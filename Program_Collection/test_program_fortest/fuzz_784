(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'hc0):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire0;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire3;
  wire signed [(4'h8):(1'h0)] wire88;
  wire [(3'h7):(1'h0)] wire87;
  wire signed [(3'h4):(1'h0)] wire86;
  wire [(2'h3):(1'h0)] wire63;
  wire [(2'h2):(1'h0)] wire76;
  wire [(3'h4):(1'h0)] wire78;
  wire signed [(3'h6):(1'h0)] wire79;
  wire signed [(3'h5):(1'h0)] wire80;
  wire signed [(3'h5):(1'h0)] wire84;
  reg signed [(4'h8):(1'h0)] reg91 = (1'h0);
  reg [(4'hb):(1'h0)] reg90 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg89 = (1'h0);
  reg [(4'ha):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg66 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg67 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg68 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg69 = (1'h0);
  reg [(4'hb):(1'h0)] reg70 = (1'h0);
  reg [(3'h7):(1'h0)] reg71 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg72 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg73 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg74 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg75 = (1'h0);
  reg [(4'ha):(1'h0)] reg77 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg82 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg83 = (1'h0);
  assign y = {wire88,
                 wire87,
                 wire86,
                 wire63,
                 wire76,
                 wire78,
                 wire79,
                 wire80,
                 wire84,
                 reg91,
                 reg90,
                 reg89,
                 reg65,
                 reg66,
                 reg67,
                 reg68,
                 reg69,
                 reg70,
                 reg71,
                 reg72,
                 reg73,
                 reg74,
                 reg75,
                 reg77,
                 reg82,
                 reg83,
                 (1'h0)};
  module4 #() modinst64 (.wire7(wire3), .wire8(wire1), .y(wire63), .wire5(wire0), .clk(clk), .wire6(wire2));
  always
    @(posedge clk) begin
      if ($unsigned((({wire2} ^~ $unsigned(wire3)) <<< (((8'ha7) ?
              wire3 : wire2) ?
          wire1[(2'h3):(2'h2)] : wire0[(4'hb):(4'ha)]))))
        begin
          reg65 <= $unsigned(({$unsigned(wire0)} ?
              $unsigned(((8'ha7) ? wire0 : wire2)) : $unsigned((^(8'haa)))));
          if (((^wire2[(3'h4):(3'h4)]) * wire0))
            begin
              reg66 <= wire3;
              reg67 <= wire3;
            end
          else
            begin
              reg66 <= reg67[(2'h2):(2'h2)];
            end
          reg68 <= (~^reg65);
        end
      else
        begin
          if (((wire63 ? $unsigned((~|wire0)) : $signed((-wire0))) ?
              $signed((-reg65)) : {(((8'ha9) ? wire0 : reg66) - (reg67 ?
                      wire0 : (8'h9d)))}))
            begin
              reg65 <= $unsigned((~&(!wire3[(2'h2):(1'h0)])));
              reg66 <= (reg67[(4'hb):(3'h7)] >>> ($unsigned($unsigned(reg68)) ?
                  $unsigned((~&reg66)) : $unsigned(wire63[(2'h3):(1'h0)])));
              reg67 <= (wire2 <<< $unsigned(reg68[(2'h3):(1'h0)]));
            end
          else
            begin
              reg65 <= ($unsigned(reg68) ? (~^reg67[(4'h8):(3'h5)]) : wire0);
            end
        end
      if (reg67[(4'h8):(2'h3)])
        begin
          if ($signed({$signed(((8'h9f) ? (8'ha1) : wire1))}))
            begin
              reg69 <= (^~((wire63 && {reg68}) ?
                  wire1[(2'h2):(2'h2)] : {reg66}));
              reg70 <= ((&wire63) ?
                  $unsigned({$signed(reg65)}) : $unsigned($unsigned(wire1[(1'h1):(1'h0)])));
              reg71 <= $signed($unsigned($signed($unsigned(wire0))));
            end
          else
            begin
              reg69 <= wire0[(4'hb):(4'ha)];
              reg70 <= (&(reg65 ?
                  ($unsigned(wire0) > {reg67}) : $unsigned((reg71 * (8'haf)))));
            end
        end
      else
        begin
          reg69 <= (^$unsigned(reg71));
          if ((wire63 | $unsigned((~^$signed(wire63)))))
            begin
              reg70 <= wire3;
              reg71 <= $unsigned($unsigned(reg70[(4'h8):(3'h6)]));
            end
          else
            begin
              reg70 <= ({$unsigned($unsigned(wire3))} >= ((reg66[(3'h7):(2'h3)] < wire2) | {$signed((8'ha0))}));
              reg71 <= {$unsigned($unsigned(reg65[(3'h4):(1'h1)]))};
              reg72 <= (|reg66);
            end
          if ({reg69[(1'h1):(1'h0)]})
            begin
              reg73 <= (!(^~$signed((^~reg68))));
              reg74 <= $unsigned({reg68});
              reg75 <= {reg74[(3'h4):(2'h2)]};
            end
          else
            begin
              reg73 <= (!reg66);
            end
        end
    end
  assign wire76 = (8'ha2);
  always
    @(posedge clk) begin
      reg77 <= $unsigned((wire76[(1'h1):(1'h0)] ?
          (8'hb0) : $signed((wire3 ? wire0 : wire0))));
    end
  assign wire78 = (((wire3[(4'h9):(3'h7)] ?
                          (~reg73) : $unsigned(wire2)) >> (reg73[(4'h8):(3'h7)] ?
                          (~|wire1) : {reg66})) ?
                      (-$signed(wire3[(2'h3):(2'h2)])) : ($unsigned((wire63 != reg72)) >>> reg73));
  assign wire79 = ({$unsigned((8'ha6))} ?
                      wire63 : ($unsigned((~&reg74)) ? reg67 : $signed(reg77)));
  module34 #() modinst81 (.wire37(wire0), .clk(clk), .wire35(reg67), .wire38(wire2), .wire36(reg65), .y(wire80));
  always
    @(posedge clk) begin
      reg82 <= {wire63};
      reg83 <= $signed($unsigned($signed(wire76[(1'h0):(1'h0)])));
    end
  module4 #() modinst85 (wire84, clk, wire0, reg71, wire1, wire79);
  assign wire86 = $signed((+(&$unsigned((8'ha8)))));
  assign wire87 = (^~(($unsigned((8'h9e)) ?
                          (wire3 <<< wire3) : $signed(wire63)) ?
                      wire80[(1'h0):(1'h0)] : (reg66 > (reg67 ?
                          reg72 : wire76))));
  assign wire88 = $unsigned((|$unsigned((reg71 + reg71))));
  always
    @(posedge clk) begin
      reg89 <= (8'haf);
      if (($signed(wire63[(1'h1):(1'h1)]) ?
          wire3[(3'h7):(2'h3)] : {(wire2[(1'h1):(1'h0)] ? reg83 : wire79)}))
        begin
          reg90 <= (^~reg89[(2'h3):(2'h2)]);
        end
      else
        begin
          reg90 <= (8'hb0);
          reg91 <= $unsigned(((~$signed(reg67)) < $unsigned((^wire0))));
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h54):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(3'h6):(1'h0)] wire7;
  input wire [(4'h8):(1'h0)] wire6;
  input wire signed [(3'h6):(1'h0)] wire5;
  wire [(3'h4):(1'h0)] wire62;
  wire signed [(4'h9):(1'h0)] wire61;
  wire [(3'h4):(1'h0)] wire60;
  wire [(4'h9):(1'h0)] wire59;
  wire signed [(4'ha):(1'h0)] wire58;
  wire signed [(2'h3):(1'h0)] wire56;
  wire signed [(4'h9):(1'h0)] wire33;
  wire [(4'ha):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire31;
  wire signed [(4'ha):(1'h0)] wire30;
  wire signed [(3'h7):(1'h0)] wire28;
  assign y = {wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire56,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire28,
                 (1'h0)};
  module9 #() modinst29 (wire28, clk, wire5, wire8, wire7, wire6);
  assign wire30 = (($signed(wire6[(2'h2):(1'h1)]) ?
                          wire5 : wire5[(3'h4):(2'h2)]) ?
                      $signed({$signed(wire6)}) : wire6);
  assign wire31 = wire7;
  assign wire32 = (-$signed(wire6));
  assign wire33 = ((8'hac) ?
                      ((8'h9f) | $signed(wire7)) : wire32[(4'ha):(3'h6)]);
  module34 #() modinst57 (wire56, clk, wire31, wire6, wire32, wire33);
  assign wire58 = wire5[(2'h2):(1'h0)];
  assign wire59 = $unsigned($unsigned($signed((-wire8))));
  assign wire60 = $unsigned(wire58[(1'h0):(1'h0)]);
  assign wire61 = ($unsigned($signed((wire8 & wire60))) << wire28[(3'h6):(3'h5)]);
  assign wire62 = wire56;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34
#(parameter param55 = {((~&(|(8'ha8))) ? (((8'h9c) ? (8'h9c) : (8'h9c)) && ((8'ha1) == (8'h9d))) : (^~(~&(8'ha0))))})
(y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h6c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire38;
  input wire [(3'h4):(1'h0)] wire37;
  input wire [(4'ha):(1'h0)] wire36;
  input wire [(3'h7):(1'h0)] wire35;
  wire [(4'hb):(1'h0)] wire54;
  wire [(4'ha):(1'h0)] wire53;
  wire signed [(2'h2):(1'h0)] wire52;
  wire [(3'h4):(1'h0)] wire45;
  wire [(3'h5):(1'h0)] wire44;
  wire [(4'h8):(1'h0)] wire43;
  wire [(3'h4):(1'h0)] wire42;
  wire signed [(4'hb):(1'h0)] wire41;
  reg signed [(4'h9):(1'h0)] reg51 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg50 = (1'h0);
  reg [(3'h6):(1'h0)] reg49 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg48 = (1'h0);
  reg [(4'h9):(1'h0)] reg47 = (1'h0);
  reg [(3'h6):(1'h0)] reg46 = (1'h0);
  reg [(4'h8):(1'h0)] reg40 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg39 = (1'h0);
  assign y = {wire54,
                 wire53,
                 wire52,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg40,
                 reg39,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg39 <= $signed(wire38[(4'h8):(3'h4)]);
      reg40 <= $signed($signed(wire35));
    end
  assign wire41 = $signed(wire38);
  assign wire42 = ((-$unsigned(wire38)) ? (8'ha0) : $unsigned(wire37));
  assign wire43 = {(({(8'ha3)} >= (reg39 < reg39)) ^ {(reg39 >>> (8'haa))})};
  assign wire44 = (&$unsigned((8'ha0)));
  assign wire45 = wire36[(2'h3):(1'h0)];
  always
    @(posedge clk) begin
      reg46 <= (wire36 ~^ (~(wire41 << $unsigned(wire44))));
    end
  always
    @(posedge clk) begin
      if (($unsigned((8'ha0)) - $unsigned(wire45[(3'h4):(1'h1)])))
        begin
          if ($unsigned($signed($unsigned(reg40[(4'h8):(3'h7)]))))
            begin
              reg47 <= (8'hac);
              reg48 <= $signed({((reg39 * wire35) ?
                      $unsigned(wire36) : $signed(reg40))});
              reg49 <= ($unsigned(((reg40 <= wire41) || $signed(reg39))) ?
                  ((~^(reg40 >> reg40)) > {$unsigned(wire44)}) : $unsigned(wire38[(1'h0):(1'h0)]));
            end
          else
            begin
              reg47 <= ($signed((wire45 ^~ (8'ha6))) * $signed(reg39));
              reg48 <= ((({(8'ha2)} != (wire45 ?
                  wire41 : wire41)) << wire45) && $unsigned((~^$unsigned(reg48))));
            end
          reg50 <= reg40;
          reg51 <= wire45[(2'h3):(2'h3)];
        end
      else
        begin
          reg47 <= ((($signed(wire41) >> (reg47 < wire45)) ?
                  $unsigned($unsigned(wire37)) : (-$unsigned(reg51))) ?
              (~|wire35[(2'h3):(1'h1)]) : wire45[(1'h0):(1'h0)]);
          reg48 <= reg40;
          if ((~|$signed($unsigned($unsigned(reg51)))))
            begin
              reg49 <= wire41[(2'h3):(1'h0)];
            end
          else
            begin
              reg49 <= $signed((8'hac));
              reg50 <= (8'ha0);
              reg51 <= $unsigned(wire42[(3'h4):(3'h4)]);
            end
        end
    end
  assign wire52 = reg50[(2'h3):(2'h3)];
  assign wire53 = ($signed($signed(reg40)) ?
                      (+wire42[(1'h1):(1'h1)]) : (~|(|wire42)));
  assign wire54 = (&reg48);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9  (y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire13;
  input wire [(4'ha):(1'h0)] wire12;
  input wire signed [(3'h6):(1'h0)] wire11;
  input wire [(4'h8):(1'h0)] wire10;
  wire [(4'ha):(1'h0)] wire27;
  wire [(4'ha):(1'h0)] wire26;
  wire signed [(3'h6):(1'h0)] wire25;
  wire [(3'h6):(1'h0)] wire20;
  wire signed [(3'h5):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire17;
  wire signed [(2'h2):(1'h0)] wire16;
  wire [(3'h6):(1'h0)] wire15;
  wire [(3'h4):(1'h0)] wire14;
  reg [(3'h7):(1'h0)] reg24 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg23 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg22 = (1'h0);
  reg [(3'h4):(1'h0)] reg21 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg19 = (1'h0);
  assign y = {wire27,
                 wire26,
                 wire25,
                 wire20,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg19,
                 (1'h0)};
  assign wire14 = $signed(wire11[(3'h6):(2'h2)]);
  assign wire15 = $unsigned((~&wire12[(4'ha):(3'h7)]));
  assign wire16 = (wire12[(1'h1):(1'h0)] ?
                      $unsigned($signed({(8'ha7)})) : $unsigned($unsigned((wire13 << wire10))));
  assign wire17 = (&((wire15 ^~ wire13[(1'h0):(1'h0)]) | (((8'ha3) ?
                      wire16 : wire15) | $signed(wire13))));
  assign wire18 = (wire16 | (8'hb0));
  always
    @(posedge clk) begin
      reg19 <= ((^wire14) ?
          (((8'ha1) ? (wire18 ? wire12 : wire18) : $unsigned(wire10)) ?
              (!wire17) : $signed((wire16 > wire16))) : wire14[(2'h2):(2'h2)]);
    end
  assign wire20 = ((wire13 > wire12[(3'h5):(1'h1)]) == $unsigned({(8'hb0)}));
  always
    @(posedge clk) begin
      reg21 <= $unsigned($signed((8'had)));
      if ((~&($signed((reg19 ? wire18 : wire10)) | wire15)))
        begin
          reg22 <= $signed($unsigned({(|wire18)}));
          reg23 <= wire17[(1'h0):(1'h0)];
        end
      else
        begin
          reg22 <= ((~^$signed({reg21})) ?
              $unsigned({wire11[(3'h6):(1'h1)]}) : reg22[(1'h0):(1'h0)]);
          reg23 <= $signed((8'ha5));
          reg24 <= $unsigned(wire18[(3'h5):(3'h4)]);
        end
    end
  assign wire25 = wire18[(1'h0):(1'h0)];
  assign wire26 = $unsigned(wire12);
  assign wire27 = ((~wire15[(1'h1):(1'h0)]) ?
                      wire11[(2'h3):(1'h1)] : ((^~wire26) >> $unsigned($signed(reg19))));
endmodule