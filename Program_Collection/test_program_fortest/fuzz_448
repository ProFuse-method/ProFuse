(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'ha3):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire83;
  wire [(2'h3):(1'h0)] wire82;
  wire [(2'h2):(1'h0)] wire78;
  wire signed [(3'h6):(1'h0)] wire65;
  wire [(3'h7):(1'h0)] wire63;
  wire [(3'h7):(1'h0)] wire18;
  wire signed [(4'h9):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg81 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg80 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg79 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg77 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg76 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg75 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg74 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg73 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg72 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg71 = (1'h0);
  reg [(4'h9):(1'h0)] reg70 = (1'h0);
  reg [(3'h6):(1'h0)] reg69 = (1'h0);
  reg [(3'h5):(1'h0)] reg68 = (1'h0);
  reg [(4'ha):(1'h0)] reg67 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg66 = (1'h0);
  assign y = {wire83,
                 wire82,
                 wire78,
                 wire65,
                 wire63,
                 wire18,
                 wire5,
                 wire4,
                 reg81,
                 reg80,
                 reg79,
                 reg77,
                 reg76,
                 reg75,
                 reg74,
                 reg73,
                 reg72,
                 reg71,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 (1'h0)};
  assign wire4 = $unsigned($unsigned($signed(wire3[(1'h1):(1'h0)])));
  assign wire5 = $signed(($signed($unsigned((8'ha1))) ?
                     wire0[(1'h1):(1'h0)] : $unsigned(wire4[(2'h2):(1'h0)])));
  module6 #() modinst19 (wire18, clk, wire2, wire3, wire4, wire1);
  module20 #() modinst64 (.wire23(wire3), .y(wire63), .wire21(wire18), .wire24(wire1), .wire22(wire2), .clk(clk));
  assign wire65 = wire0;
  always
    @(posedge clk) begin
      if ((^~wire65))
        begin
          reg66 <= ((wire65 * (~$signed(wire5))) > $signed(($signed((8'ha3)) ?
              (wire1 ? wire1 : wire3) : (~&(8'ha5)))));
        end
      else
        begin
          if (wire3[(1'h0):(1'h0)])
            begin
              reg66 <= $signed((wire65 < ((wire3 ? wire63 : wire5) ?
                  $signed(wire18) : wire2[(2'h2):(1'h0)])));
              reg67 <= (~(($signed(wire63) ~^ wire18) - (&$signed((8'hae)))));
            end
          else
            begin
              reg66 <= wire18;
            end
        end
      if (((8'had) ? wire3[(2'h3):(1'h1)] : wire63[(3'h6):(2'h3)]))
        begin
          reg68 <= $signed(wire18[(1'h1):(1'h1)]);
        end
      else
        begin
          reg68 <= (((+$signed(wire4)) ?
              ((wire65 | wire3) ?
                  wire3[(3'h5):(3'h5)] : $unsigned(reg68)) : wire18[(2'h2):(1'h1)]) >>> $signed(({wire0} ?
              $signed(wire65) : wire3)));
          reg69 <= $signed($unsigned($signed(wire18[(3'h6):(2'h3)])));
          reg70 <= reg67[(3'h7):(3'h4)];
        end
      reg71 <= (8'hab);
    end
  always
    @(posedge clk) begin
      reg72 <= reg71[(2'h2):(2'h2)];
    end
  always
    @(posedge clk) begin
      if ($signed((wire63[(2'h3):(2'h3)] ?
          (wire1[(1'h0):(1'h0)] ?
              $unsigned(reg72) : wire3) : $unsigned((|wire4)))))
        begin
          if ((reg72[(3'h7):(1'h0)] == reg70))
            begin
              reg73 <= ((((reg71 ?
                      reg66 : wire0) > (wire18 ~^ (8'hac))) <<< {((8'ha1) >> (8'ha1))}) ?
                  (((8'h9d) ?
                      reg68 : (wire3 ?
                          reg67 : (8'ha2))) < $signed((~&reg67))) : $signed(wire18));
            end
          else
            begin
              reg73 <= ($unsigned(reg67) ? wire2 : reg67[(1'h1):(1'h1)]);
              reg74 <= (((wire65[(2'h3):(1'h1)] <<< reg68) ?
                      {wire4[(2'h2):(1'h1)]} : ($signed(wire65) >> (wire0 == reg66))) ?
                  $signed({$unsigned(wire4)}) : ((8'ha3) ?
                      {reg68[(1'h1):(1'h1)]} : (~^$signed(reg67))));
              reg75 <= {wire18[(1'h0):(1'h0)]};
            end
          reg76 <= wire4;
        end
      else
        begin
          reg73 <= $unsigned((8'h9f));
          if (reg73[(3'h5):(1'h1)])
            begin
              reg74 <= $unsigned($unsigned(reg75));
            end
          else
            begin
              reg74 <= reg72;
              reg75 <= ($signed((~^wire3[(2'h2):(1'h1)])) << wire2);
              reg76 <= $unsigned((~&$signed(reg70[(1'h1):(1'h1)])));
            end
        end
      reg77 <= $signed(($unsigned($unsigned(reg70)) ?
          wire63[(3'h5):(1'h1)] : $unsigned((~|wire2))));
    end
  assign wire78 = $unsigned(reg74[(2'h3):(2'h3)]);
  always
    @(posedge clk) begin
      reg79 <= reg76[(3'h5):(1'h0)];
      reg80 <= ($signed($signed($signed(wire2))) ?
          (wire18 ? {{(8'ha4)}} : reg66[(3'h4):(2'h2)]) : ((~wire0) ?
              wire65[(2'h2):(2'h2)] : $signed((^(8'ha8)))));
      reg81 <= ($unsigned($unsigned((reg67 || (8'hae)))) ?
          ($unsigned(wire3[(3'h5):(3'h5)]) >>> {$unsigned(reg73)}) : ({$signed(wire4)} ?
              $signed(wire5[(1'h0):(1'h0)]) : $signed({wire5})));
    end
  assign wire82 = ($unsigned(wire78[(2'h2):(1'h1)]) ?
                      wire78[(2'h2):(1'h0)] : $signed(((reg76 ?
                              (8'hb0) : reg77) ?
                          ((8'ha0) ? (8'ha9) : reg81) : {reg69})));
  assign wire83 = (-$unsigned(wire2));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param62 = {(^((~&(8'hb0)) ? (~|(8'hac)) : (8'ha7)))})
(y, clk, wire21, wire22, wire23, wire24);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire21;
  input wire [(4'h9):(1'h0)] wire22;
  input wire [(2'h2):(1'h0)] wire23;
  input wire [(4'ha):(1'h0)] wire24;
  wire [(3'h5):(1'h0)] wire61;
  wire [(4'h8):(1'h0)] wire25;
  wire signed [(3'h4):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire27;
  wire signed [(3'h6):(1'h0)] wire28;
  wire [(2'h2):(1'h0)] wire29;
  wire [(3'h4):(1'h0)] wire30;
  wire signed [(2'h2):(1'h0)] wire35;
  wire signed [(3'h5):(1'h0)] wire36;
  wire [(3'h6):(1'h0)] wire55;
  reg signed [(3'h5):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg59 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg58 = (1'h0);
  reg [(3'h4):(1'h0)] reg57 = (1'h0);
  reg [(4'h8):(1'h0)] reg31 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg32 = (1'h0);
  reg [(4'h8):(1'h0)] reg33 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg34 = (1'h0);
  assign y = {wire61,
                 wire25,
                 wire26,
                 wire27,
                 wire28,
                 wire29,
                 wire30,
                 wire35,
                 wire36,
                 wire55,
                 reg60,
                 reg59,
                 reg58,
                 reg57,
                 reg31,
                 reg32,
                 reg33,
                 reg34,
                 (1'h0)};
  assign wire25 = wire22;
  assign wire26 = (8'ha5);
  assign wire27 = (!((|$unsigned(wire22)) ?
                      (wire25[(3'h7):(3'h6)] ?
                          (wire26 ?
                              wire25 : wire23) : $unsigned(wire24)) : $signed((wire22 ?
                          wire26 : (8'ha3)))));
  assign wire28 = {(wire24 & $unsigned(wire23[(2'h2):(1'h1)]))};
  assign wire29 = wire27;
  assign wire30 = wire22;
  always
    @(posedge clk) begin
      reg31 <= $unsigned({wire23[(1'h0):(1'h0)]});
      if ((($signed($signed(wire24)) ?
              $unsigned((~|wire29)) : {((8'hac) ? wire24 : wire26)}) ?
          $unsigned($signed(reg31)) : wire30))
        begin
          reg32 <= (|wire24[(3'h6):(2'h2)]);
          reg33 <= reg32[(3'h5):(1'h0)];
        end
      else
        begin
          reg32 <= (^wire27);
        end
      reg34 <= wire28;
    end
  assign wire35 = (($unsigned((wire26 + (8'ha6))) == {(wire24 ?
                          wire25 : (8'ha8))}) - {($unsigned(wire26) ?
                          (wire23 >>> reg32) : wire25[(2'h3):(2'h2)])});
  assign wire36 = wire28;
  module37 #() modinst56 (wire55, clk, reg32, wire30, reg33, reg34);
  always
    @(posedge clk) begin
      reg57 <= $unsigned({$unsigned((reg34 ? wire29 : wire27))});
      if ($unsigned(reg31))
        begin
          reg58 <= reg31[(1'h1):(1'h0)];
          if ({$signed($unsigned(wire22))})
            begin
              reg59 <= $signed(wire28);
              reg60 <= {reg31[(1'h0):(1'h0)]};
            end
          else
            begin
              reg59 <= $signed($unsigned($unsigned($unsigned(wire35))));
            end
        end
      else
        begin
          reg58 <= wire30;
          reg59 <= wire25[(3'h4):(2'h3)];
        end
    end
  assign wire61 = $signed({wire26});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire10;
  input wire [(3'h6):(1'h0)] wire9;
  input wire signed [(4'h9):(1'h0)] wire8;
  input wire signed [(3'h6):(1'h0)] wire7;
  wire signed [(3'h5):(1'h0)] wire17;
  wire signed [(3'h6):(1'h0)] wire16;
  wire signed [(2'h2):(1'h0)] wire15;
  wire signed [(3'h5):(1'h0)] wire14;
  wire [(3'h7):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire11;
  assign y = {wire17, wire16, wire15, wire14, wire13, wire12, wire11, (1'h0)};
  assign wire11 = (^wire9);
  assign wire12 = $signed((((wire8 & wire11) >>> wire10[(1'h1):(1'h1)]) >>> ((wire10 ?
                      wire10 : (8'ha1)) ^~ $signed(wire10))));
  assign wire13 = wire9[(3'h4):(2'h3)];
  assign wire14 = (8'ha2);
  assign wire15 = ({$signed($unsigned((8'ha1)))} - wire9[(2'h3):(2'h2)]);
  assign wire16 = $unsigned(((+(~&wire9)) ?
                      ($signed(wire11) ?
                          wire15 : ((8'h9d) ?
                              wire12 : wire11)) : wire7[(3'h4):(3'h4)]));
  assign wire17 = (wire8[(4'h8):(4'h8)] ^ (($unsigned((8'haf)) ?
                          wire11 : $unsigned(wire9)) ?
                      (~(wire15 ? wire10 : wire13)) : wire8));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module37  (y, clk, wire41, wire40, wire39, wire38);
  output wire [(32'h63):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire41;
  input wire [(2'h2):(1'h0)] wire40;
  input wire [(4'h8):(1'h0)] wire39;
  input wire [(2'h3):(1'h0)] wire38;
  wire [(4'h8):(1'h0)] wire53;
  wire [(4'hb):(1'h0)] wire45;
  wire signed [(4'h8):(1'h0)] wire44;
  wire signed [(4'h9):(1'h0)] wire43;
  wire signed [(4'ha):(1'h0)] wire42;
  reg [(2'h2):(1'h0)] reg54 = (1'h0);
  reg [(4'hb):(1'h0)] reg52 = (1'h0);
  reg [(3'h4):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg50 = (1'h0);
  reg [(4'h9):(1'h0)] reg49 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg48 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg46 = (1'h0);
  assign y = {wire53,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 reg54,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 (1'h0)};
  assign wire42 = (^(wire38[(1'h0):(1'h0)] ?
                      {$unsigned(wire40)} : $unsigned($signed(wire40))));
  assign wire43 = wire39[(1'h0):(1'h0)];
  assign wire44 = $signed(((wire42[(2'h2):(1'h0)] == (8'ha3)) ?
                      wire41 : ((~|wire42) ? (8'hab) : wire39)));
  assign wire45 = $signed(wire40[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      if (($unsigned(($unsigned(wire41) ?
              (wire43 - wire45) : ((8'ha2) & wire42))) ?
          $signed($signed(wire38[(1'h1):(1'h0)])) : wire39))
        begin
          if ((($unsigned({wire43}) ?
                  {$unsigned(wire40)} : $unsigned((wire41 >> wire39))) ?
              $unsigned(($signed(wire40) ?
                  (wire41 != wire44) : (wire45 - wire43))) : (~{wire39})))
            begin
              reg46 <= wire45[(3'h7):(3'h5)];
            end
          else
            begin
              reg46 <= (($unsigned($signed((8'haf))) ?
                      $signed({wire40}) : ((~&wire41) ?
                          {wire38} : wire38[(1'h1):(1'h0)])) ?
                  $unsigned($unsigned(wire40)) : $unsigned(((!(8'h9c)) ?
                      wire40 : wire41[(3'h4):(1'h1)])));
            end
          reg47 <= (!$signed({wire43}));
        end
      else
        begin
          reg46 <= (^$signed((((8'ha0) ? (8'ha3) : reg47) ?
              (~&wire40) : wire45)));
          reg47 <= (-$unsigned(((reg47 ?
              reg46 : (8'ha3)) <<< $unsigned(wire38))));
        end
      reg48 <= $signed(wire41);
    end
  always
    @(posedge clk) begin
      if ((!{(8'ha9)}))
        begin
          reg49 <= ((8'hb0) ?
              $signed($unsigned($signed(reg46))) : ((wire44[(3'h7):(3'h5)] ?
                      (!reg47) : (-(8'hb0))) ?
                  (&wire40[(1'h0):(1'h0)]) : reg47));
        end
      else
        begin
          reg49 <= $signed((reg46 ?
              (reg49 && $unsigned(wire43)) : (reg47[(3'h5):(1'h0)] ?
                  {wire45} : reg47[(2'h3):(1'h1)])));
          reg50 <= ($signed({wire38}) ?
              (~&wire38) : $signed(reg46[(3'h4):(2'h2)]));
          reg51 <= ({(8'ha8)} != (~|(~|$unsigned(wire42))));
        end
      reg52 <= (((~&(-wire41)) != wire43) ?
          wire40[(1'h0):(1'h0)] : (-($signed((8'ha6)) ?
              (reg48 ? (8'haa) : wire38) : (reg51 ? (8'h9e) : wire39))));
    end
  assign wire53 = $signed(wire41[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      reg54 <= (wire40[(1'h0):(1'h0)] <<< $unsigned(reg48));
    end
endmodule