(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'ha6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire0;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire3;
  wire [(4'h9):(1'h0)] wire45;
  wire signed [(3'h5):(1'h0)] wire4;
  wire signed [(4'hb):(1'h0)] wire16;
  wire [(4'h9):(1'h0)] wire17;
  wire signed [(4'h8):(1'h0)] wire18;
  wire signed [(3'h6):(1'h0)] wire19;
  wire [(4'hb):(1'h0)] wire21;
  wire signed [(3'h5):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire23;
  wire [(3'h7):(1'h0)] wire24;
  wire signed [(4'hb):(1'h0)] wire43;
  reg [(4'h8):(1'h0)] reg5 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg6 = (1'h0);
  reg [(3'h6):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg8 = (1'h0);
  reg [(3'h7):(1'h0)] reg9 = (1'h0);
  reg [(2'h3):(1'h0)] reg10 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg11 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg12 = (1'h0);
  reg [(4'h9):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg14 = (1'h0);
  reg [(4'hb):(1'h0)] reg15 = (1'h0);
  reg [(3'h6):(1'h0)] reg20 = (1'h0);
  assign y = {wire45,
                 wire4,
                 wire16,
                 wire17,
                 wire18,
                 wire19,
                 wire21,
                 wire22,
                 wire23,
                 wire24,
                 wire43,
                 reg5,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 reg11,
                 reg12,
                 reg13,
                 reg14,
                 reg15,
                 reg20,
                 (1'h0)};
  assign wire4 = $signed($signed(wire2[(2'h3):(1'h0)]));
  always
    @(posedge clk) begin
      if ((8'ha2))
        begin
          reg5 <= wire2[(3'h5):(2'h2)];
          if ((~&reg5))
            begin
              reg6 <= $unsigned($unsigned((wire2[(2'h2):(1'h0)] || $signed(reg5))));
              reg7 <= $unsigned(reg5);
              reg8 <= (wire1[(3'h4):(1'h0)] ?
                  (-($signed((8'h9c)) ~^ wire2[(1'h0):(1'h0)])) : (wire3[(1'h1):(1'h0)] ?
                      wire4[(1'h0):(1'h0)] : reg7[(3'h6):(2'h2)]));
            end
          else
            begin
              reg6 <= $unsigned($signed({wire2[(1'h1):(1'h1)]}));
            end
        end
      else
        begin
          reg5 <= $unsigned($unsigned((~&reg6)));
          reg6 <= reg8[(1'h0):(1'h0)];
          reg7 <= reg7[(3'h4):(3'h4)];
        end
      if (($signed(wire4[(2'h3):(1'h0)]) <<< ((~reg5) ^ wire0[(2'h3):(1'h0)])))
        begin
          if (($unsigned($signed((wire2 & reg7))) >= reg8))
            begin
              reg9 <= (^($signed((wire0 ? reg5 : reg6)) ?
                  $signed((wire1 ?
                      wire1 : (8'ha5))) : ($unsigned(reg6) * (reg5 - (8'hae)))));
            end
          else
            begin
              reg9 <= (^(($signed(reg9) ?
                  (reg5 | wire4) : (wire4 == reg9)) && wire1[(3'h6):(3'h4)]));
              reg10 <= $unsigned((~^(wire3 & $unsigned(wire2))));
            end
        end
      else
        begin
          if ({reg9})
            begin
              reg9 <= $unsigned({{$signed(reg6)}});
            end
          else
            begin
              reg9 <= (reg7[(3'h6):(1'h1)] * $unsigned({(~|reg9)}));
            end
        end
      if ((reg7[(3'h6):(3'h5)] == (-$signed(reg10[(2'h2):(1'h0)]))))
        begin
          reg11 <= (reg6 != (!$signed((^reg5))));
          reg12 <= (|wire0);
        end
      else
        begin
          if ((8'h9f))
            begin
              reg11 <= ($signed($signed($unsigned(wire0))) ?
                  $unsigned($signed($unsigned(wire2))) : ((wire2[(3'h4):(2'h3)] == (^~reg10)) < (~^$unsigned(wire4))));
            end
          else
            begin
              reg11 <= (&reg11[(1'h0):(1'h0)]);
              reg12 <= reg10[(2'h3):(1'h1)];
            end
          if (($unsigned($signed($unsigned((8'ha0)))) ~^ $unsigned($unsigned(wire3[(1'h1):(1'h0)]))))
            begin
              reg13 <= (8'ha3);
              reg14 <= reg10[(2'h3):(1'h1)];
              reg15 <= (reg13[(3'h5):(2'h2)] ? wire2 : reg13[(2'h2):(2'h2)]);
            end
          else
            begin
              reg13 <= {(reg10 - (~&(wire2 ? reg6 : (8'ha8))))};
              reg14 <= wire1[(3'h5):(1'h0)];
              reg15 <= (({{reg14}} >>> reg11[(1'h0):(1'h0)]) - wire4[(2'h3):(2'h2)]);
            end
        end
    end
  assign wire16 = (wire0 | wire4[(1'h1):(1'h1)]);
  assign wire17 = $unsigned((-wire16));
  assign wire18 = $unsigned((8'haf));
  assign wire19 = $signed($unsigned($signed(wire1[(3'h7):(1'h0)])));
  always
    @(posedge clk) begin
      reg20 <= (+wire1[(3'h7):(3'h6)]);
    end
  assign wire21 = reg13[(3'h5):(1'h1)];
  assign wire22 = reg8;
  assign wire23 = $unsigned($signed({(~reg6)}));
  assign wire24 = reg6[(1'h0):(1'h0)];
  module25 #() modinst44 (wire43, clk, reg12, wire19, wire17, wire0);
  assign wire45 = (({reg5[(3'h4):(1'h0)]} || wire18) ?
                      $unsigned((wire19 <<< (reg6 ?
                          wire3 : (8'ha3)))) : ((+$unsigned((8'h9d))) ?
                          (reg13[(3'h6):(3'h5)] ?
                              $unsigned((8'ha0)) : {wire1}) : (wire3 | wire24[(1'h0):(1'h0)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25  (y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h5d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire29;
  input wire [(2'h3):(1'h0)] wire28;
  input wire [(2'h3):(1'h0)] wire27;
  input wire signed [(3'h4):(1'h0)] wire26;
  wire signed [(4'hb):(1'h0)] wire42;
  wire signed [(4'h8):(1'h0)] wire40;
  reg signed [(4'ha):(1'h0)] reg41 = (1'h0);
  reg [(3'h5):(1'h0)] reg39 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg38 = (1'h0);
  reg [(2'h2):(1'h0)] reg37 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg36 = (1'h0);
  reg [(2'h3):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg33 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg31 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg30 = (1'h0);
  assign y = {wire42,
                 wire40,
                 reg41,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (((|wire29) ~^ (+$signed((8'ha7)))))
        begin
          reg30 <= $signed((8'haf));
          reg31 <= (|{((8'h9e) ? (8'h9d) : (wire29 ^~ wire26))});
        end
      else
        begin
          if (reg31)
            begin
              reg30 <= reg30;
            end
          else
            begin
              reg30 <= {((+$signed(reg30)) ? wire29[(2'h2):(1'h0)] : wire27)};
              reg31 <= (-(((~wire27) ?
                  (wire26 ? reg31 : wire26) : (reg31 ?
                      reg30 : wire27)) << reg31));
              reg32 <= $signed(reg30[(1'h0):(1'h0)]);
            end
        end
      if ($unsigned(({{wire29}} ?
          ((reg31 ?
              wire27 : reg31) >> (!reg31)) : ($signed(reg30) & (wire29 >>> wire26)))))
        begin
          reg33 <= (reg31[(1'h1):(1'h1)] ?
              (reg32 & $signed((wire27 ?
                  wire29 : (8'ha2)))) : $signed(($unsigned(wire26) == $unsigned(wire27))));
          if ($signed(reg31))
            begin
              reg34 <= reg32[(1'h0):(1'h0)];
            end
          else
            begin
              reg34 <= (!($unsigned($signed(wire29)) || (^~((8'ha8) ?
                  (8'haa) : reg30))));
              reg35 <= reg31[(3'h5):(3'h4)];
            end
        end
      else
        begin
          reg33 <= (((wire28 >> wire26) ^~ (wire29[(3'h5):(2'h2)] ?
              (&wire28) : reg30[(2'h3):(1'h1)])) != ({$signed(wire26)} ?
              (~&reg33[(3'h5):(1'h0)]) : ((!reg31) ?
                  (reg34 >>> wire26) : (^~wire27))));
          reg34 <= wire27[(1'h0):(1'h0)];
        end
      if (($unsigned(wire29[(4'h9):(1'h1)]) ?
          wire26 : ((-wire29[(4'h8):(4'h8)]) ?
              $signed(wire27[(2'h2):(2'h2)]) : (reg33 ?
                  (reg35 << reg34) : (8'h9c)))))
        begin
          if (({$signed((reg32 >> wire28))} ?
              wire27 : ($unsigned({reg31}) ?
                  $unsigned($signed(wire28)) : (wire28 ?
                      (reg33 == wire26) : (~^wire29)))))
            begin
              reg36 <= $signed(((~^reg32) ?
                  $signed(wire26[(2'h3):(2'h3)]) : $signed(((8'h9f) ^ (8'ha8)))));
              reg37 <= (8'hae);
              reg38 <= $unsigned(((8'ha6) ? (8'h9f) : reg32[(1'h1):(1'h1)]));
            end
          else
            begin
              reg36 <= $signed(((^~reg38) ?
                  reg35[(2'h3):(1'h1)] : (((8'ha5) ?
                      reg31 : wire27) - $unsigned(reg32))));
              reg37 <= $signed($signed(wire29[(4'h8):(1'h1)]));
              reg38 <= reg30;
            end
          reg39 <= reg32;
        end
      else
        begin
          if ($unsigned((-$signed({(8'ha4)}))))
            begin
              reg36 <= ($signed(reg31) >> reg37);
              reg37 <= {reg34};
            end
          else
            begin
              reg36 <= $signed(wire28[(1'h0):(1'h0)]);
            end
        end
    end
  assign wire40 = $signed((((reg39 ? reg31 : reg36) ?
                          (reg33 || wire27) : $signed((8'ha0))) ?
                      ($signed(reg36) ?
                          (!reg37) : (wire29 > reg37)) : $unsigned((reg39 <<< (8'ha2)))));
  always
    @(posedge clk) begin
      reg41 <= reg36;
    end
  assign wire42 = $unsigned($signed($signed(reg32)));
endmodule