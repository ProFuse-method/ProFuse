(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param67 = ({(((8'ha3) ? (8'hb0) : (8'h9f)) && ((8'ha8) != (8'h9c)))} != ((((8'ha1) | (8'h9d)) ? {(8'ha8)} : {(8'ha2)}) ? ((|(8'haa)) ? ((8'ha4) ? (8'h9d) : (8'hb0)) : ((8'had) ^~ (8'ha2))) : ((8'ha4) ^ (!(8'h9c))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire66;
  wire signed [(3'h5):(1'h0)] wire65;
  wire signed [(3'h6):(1'h0)] wire63;
  wire [(3'h7):(1'h0)] wire12;
  wire signed [(4'ha):(1'h0)] wire11;
  wire signed [(3'h7):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg10 = (1'h0);
  reg [(3'h6):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg6 = (1'h0);
  assign y = {wire66,
                 wire65,
                 wire63,
                 wire12,
                 wire11,
                 wire5,
                 wire4,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = (!$unsigned({$unsigned((8'h9d))}));
  assign wire5 = $signed(wire2[(3'h5):(2'h2)]);
  always
    @(posedge clk) begin
      reg6 <= (!wire2);
      if ($unsigned({(((8'hb0) ? wire5 : wire4) ?
              {wire2} : ((8'ha5) ? wire3 : reg6))}))
        begin
          reg7 <= (+($unsigned({reg6}) ? $signed(wire5) : (wire4 | {wire4})));
          reg8 <= reg6[(2'h3):(2'h3)];
          reg9 <= (wire2 << (!(~(~wire5))));
        end
      else
        begin
          reg7 <= $signed({$signed({(8'ha5)})});
          reg8 <= wire3;
        end
      reg10 <= $signed((reg6[(1'h0):(1'h0)] & wire2));
    end
  assign wire11 = $unsigned((8'ha6));
  assign wire12 = $signed(reg6[(3'h5):(2'h2)]);
  module13 #() modinst64 (wire63, clk, wire11, reg6, wire3, reg8);
  assign wire65 = wire12;
  assign wire66 = wire12;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire17;
  input wire signed [(3'h7):(1'h0)] wire16;
  input wire [(4'hb):(1'h0)] wire15;
  input wire signed [(4'h8):(1'h0)] wire14;
  wire signed [(3'h7):(1'h0)] wire62;
  wire [(3'h6):(1'h0)] wire61;
  wire [(4'hb):(1'h0)] wire59;
  wire signed [(3'h7):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire27;
  wire signed [(4'h9):(1'h0)] wire18;
  reg [(3'h6):(1'h0)] reg26 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg25 = (1'h0);
  reg [(3'h7):(1'h0)] reg24 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg23 = (1'h0);
  reg [(3'h6):(1'h0)] reg22 = (1'h0);
  reg [(4'hb):(1'h0)] reg21 = (1'h0);
  reg [(2'h2):(1'h0)] reg20 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg19 = (1'h0);
  assign y = {wire62,
                 wire61,
                 wire59,
                 wire28,
                 wire27,
                 wire18,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire18 = ((^~((wire14 + (8'had)) + $signed(wire17))) && $unsigned($signed(wire16[(3'h5):(1'h1)])));
  always
    @(posedge clk) begin
      reg19 <= ((^~$signed($unsigned(wire15))) ?
          wire14 : (($unsigned(wire18) | (wire17 ?
              wire16 : wire15)) < wire15[(4'ha):(1'h1)]));
      if ({(+(wire16 ? $unsigned(wire15) : $signed(wire15)))})
        begin
          if (({wire16[(2'h2):(2'h2)]} ?
              ((!(8'h9f)) ? (~{wire15}) : (^wire15[(1'h1):(1'h0)])) : wire18))
            begin
              reg20 <= (8'ha0);
            end
          else
            begin
              reg20 <= {$unsigned((8'hae))};
              reg21 <= reg20;
            end
          reg22 <= {{$signed((reg21 ? wire15 : wire14))}};
        end
      else
        begin
          if ((wire15[(4'h8):(3'h7)] ?
              $signed($unsigned({reg19})) : {(reg22 >> (~|reg21))}))
            begin
              reg20 <= (8'h9c);
              reg21 <= ({(^wire17)} != $unsigned((^~wire16[(2'h3):(2'h3)])));
            end
          else
            begin
              reg20 <= (~|(~&wire14));
            end
          reg22 <= (|$unsigned(((reg21 + (8'ha8)) << (reg20 - wire14))));
          if ($unsigned((reg22 >> (reg22 ?
              (|(8'h9d)) : wire18[(4'h9):(4'h9)]))))
            begin
              reg23 <= (wire14[(2'h2):(2'h2)] ?
                  {(wire15 & wire14[(4'h8):(4'h8)])} : wire16[(2'h3):(1'h1)]);
            end
          else
            begin
              reg23 <= reg19[(2'h3):(2'h3)];
              reg24 <= (^$unsigned(((wire15 << wire14) ? wire18 : (~|wire16))));
              reg25 <= reg21[(4'h9):(3'h5)];
            end
        end
      reg26 <= reg23;
    end
  assign wire27 = (reg22[(3'h5):(3'h4)] ? reg26 : reg23);
  assign wire28 = (wire17[(4'h9):(4'h8)] << $signed($unsigned($signed(reg24))));
  module29 #() modinst60 (wire59, clk, reg24, reg26, wire16, wire27);
  assign wire61 = wire16[(3'h4):(1'h0)];
  assign wire62 = (-$unsigned((wire18 == (~|reg23))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module29  (y, clk, wire33, wire32, wire31, wire30);
  output wire [(32'haa):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire33;
  input wire signed [(3'h6):(1'h0)] wire32;
  input wire signed [(3'h7):(1'h0)] wire31;
  input wire [(4'h8):(1'h0)] wire30;
  wire [(4'h8):(1'h0)] wire58;
  wire signed [(4'hb):(1'h0)] wire57;
  wire [(2'h3):(1'h0)] wire56;
  wire signed [(4'h9):(1'h0)] wire53;
  wire signed [(4'hb):(1'h0)] wire40;
  wire signed [(3'h6):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire35;
  wire signed [(2'h3):(1'h0)] wire34;
  reg [(4'h8):(1'h0)] reg55 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg54 = (1'h0);
  reg [(2'h3):(1'h0)] reg52 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg50 = (1'h0);
  reg [(3'h7):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg48 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg45 = (1'h0);
  reg [(3'h5):(1'h0)] reg44 = (1'h0);
  reg [(4'ha):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg42 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg39 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg38 = (1'h0);
  reg [(4'hb):(1'h0)] reg36 = (1'h0);
  assign y = {wire58,
                 wire57,
                 wire56,
                 wire53,
                 wire40,
                 wire37,
                 wire35,
                 wire34,
                 reg55,
                 reg54,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg39,
                 reg38,
                 reg36,
                 (1'h0)};
  assign wire34 = wire33[(1'h1):(1'h0)];
  assign wire35 = $signed(wire30);
  always
    @(posedge clk) begin
      reg36 <= (wire32 <<< $unsigned($unsigned((|wire34))));
    end
  assign wire37 = ($unsigned({(^~wire31)}) ?
                      (^(wire30 <<< {wire32})) : (~^wire32));
  always
    @(posedge clk) begin
      reg38 <= (&$unsigned({$signed(wire31)}));
      if (($unsigned(({wire31} ? wire34 : (wire35 + reg38))) ?
          $signed($unsigned(((8'hb0) >>> reg36))) : wire33))
        begin
          reg39 <= reg36;
        end
      else
        begin
          reg39 <= ((reg38[(3'h7):(3'h5)] ~^ wire32[(3'h6):(2'h2)]) ?
              wire32 : $signed(((wire31 ? reg36 : reg39) >> $unsigned(reg38))));
        end
    end
  assign wire40 = wire31[(2'h2):(2'h2)];
  always
    @(posedge clk) begin
      reg41 <= (wire34 ?
          {wire35[(1'h1):(1'h0)]} : ($signed((wire31 ? wire40 : wire31)) ?
              (~^(~&wire30)) : {(|reg39)}));
      if (wire34[(2'h3):(2'h3)])
        begin
          reg42 <= $unsigned(wire37);
          reg43 <= ((reg38[(2'h2):(2'h2)] < $signed({wire31})) ?
              {$signed(wire33[(2'h2):(2'h2)])} : $signed(reg41));
          if (($signed(((reg38 != wire34) >>> reg39)) ?
              (~wire35) : (((wire34 ?
                  reg43 : (8'haa)) ^ (~&wire31)) < (^$signed(wire30)))))
            begin
              reg44 <= $signed(reg41);
              reg45 <= $unsigned(reg38[(2'h3):(1'h0)]);
            end
          else
            begin
              reg44 <= ($unsigned((|reg36)) <= $unsigned(wire35));
            end
        end
      else
        begin
          reg42 <= $signed($signed($unsigned((^~wire34))));
          reg43 <= (~|({((8'hb0) ? reg45 : (8'hac))} ?
              (wire40[(3'h7):(3'h5)] ?
                  $unsigned(wire34) : {reg42}) : {$unsigned((8'haf))}));
        end
      if (((wire32[(3'h6):(1'h1)] ?
              $unsigned(reg38) : ($unsigned(reg43) ?
                  (reg41 ^~ reg45) : (^wire34))) ?
          $signed(reg36[(4'h8):(3'h7)]) : {(&wire33[(2'h2):(2'h2)])}))
        begin
          reg46 <= reg41;
        end
      else
        begin
          reg46 <= ((wire30[(4'h8):(3'h6)] != reg36[(4'h8):(3'h5)]) ?
              (&$signed($unsigned(reg46))) : wire40[(1'h0):(1'h0)]);
          reg47 <= $unsigned(wire32[(2'h3):(2'h2)]);
          reg48 <= $unsigned($signed((reg36[(2'h3):(1'h0)] << ((8'ha1) ^~ wire34))));
        end
    end
  always
    @(posedge clk) begin
      if (($unsigned(((reg38 <= wire32) == $unsigned((8'h9e)))) <<< (reg47[(2'h3):(2'h3)] ~^ $unsigned(wire35[(1'h0):(1'h0)]))))
        begin
          if ($signed(wire33[(2'h2):(2'h2)]))
            begin
              reg49 <= $signed((((reg47 + reg48) - $unsigned(wire37)) + ((^(8'ha9)) <<< (reg38 <<< wire40))));
            end
          else
            begin
              reg49 <= reg48;
            end
          if (reg45)
            begin
              reg50 <= $unsigned((reg47[(1'h1):(1'h0)] > wire34));
              reg51 <= wire31[(3'h4):(1'h0)];
            end
          else
            begin
              reg50 <= $signed($unsigned((reg51 ~^ reg48[(1'h1):(1'h0)])));
              reg51 <= reg43[(3'h7):(3'h5)];
            end
        end
      else
        begin
          reg49 <= $unsigned($unsigned((reg46[(1'h1):(1'h1)] | $signed((8'hac)))));
        end
      reg52 <= $unsigned(reg43[(3'h7):(3'h6)]);
    end
  assign wire53 = {{reg39}};
  always
    @(posedge clk) begin
      if (((|reg48) ?
          (((reg44 ~^ reg46) < (8'ha4)) ?
              reg50[(1'h0):(1'h0)] : wire33) : ($signed(reg50[(1'h1):(1'h1)]) * reg47)))
        begin
          reg54 <= $unsigned(((8'hab) ? (~(reg39 + reg52)) : reg42));
          reg55 <= $signed($signed($unsigned($signed(wire40))));
        end
      else
        begin
          if (((-{$unsigned(wire32)}) ?
              (((reg52 || (8'ha2)) ?
                  (reg44 ?
                      wire31 : reg44) : reg39) >= $unsigned(reg45[(3'h5):(2'h3)])) : (^reg39[(3'h5):(3'h4)])))
            begin
              reg54 <= (~|reg50[(1'h0):(1'h0)]);
              reg55 <= reg50[(1'h1):(1'h1)];
            end
          else
            begin
              reg54 <= $signed($unsigned(wire35));
            end
        end
    end
  assign wire56 = ($signed($signed(reg39[(3'h5):(3'h5)])) * reg47[(1'h1):(1'h1)]);
  assign wire57 = $unsigned(reg49[(1'h0):(1'h0)]);
  assign wire58 = reg50[(1'h0):(1'h0)];
endmodule