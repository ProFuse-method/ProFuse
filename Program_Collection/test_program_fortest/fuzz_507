(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire67;
  wire [(3'h4):(1'h0)] wire66;
  wire signed [(3'h7):(1'h0)] wire65;
  wire [(3'h6):(1'h0)] wire64;
  wire signed [(3'h7):(1'h0)] wire63;
  wire [(4'ha):(1'h0)] wire61;
  wire signed [(4'h8):(1'h0)] wire4;
  assign y = {wire67, wire66, wire65, wire64, wire63, wire61, wire4, (1'h0)};
  assign wire4 = $signed((8'ha0));
  module5 #() modinst62 (wire61, clk, wire0, wire2, wire1, wire3);
  assign wire63 = wire2;
  assign wire64 = $unsigned(wire1);
  assign wire65 = (8'had);
  assign wire66 = $signed((8'had));
  assign wire67 = ({(-$unsigned(wire61))} ?
                      $signed((&$signed(wire3))) : (wire4[(4'h8):(3'h6)] ?
                          $unsigned(wire64) : ((wire1 ? wire66 : wire1) ?
                              (^wire1) : wire2[(3'h5):(3'h4)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire6, wire7, wire8, wire9);
  output wire [(32'h68):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire6;
  input wire signed [(4'hb):(1'h0)] wire7;
  input wire signed [(4'h9):(1'h0)] wire8;
  input wire [(3'h7):(1'h0)] wire9;
  wire signed [(2'h2):(1'h0)] wire60;
  wire signed [(3'h5):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire21;
  wire [(4'h9):(1'h0)] wire22;
  wire signed [(3'h6):(1'h0)] wire45;
  wire [(2'h2):(1'h0)] wire47;
  wire [(3'h5):(1'h0)] wire49;
  wire signed [(4'hb):(1'h0)] wire53;
  wire [(4'h9):(1'h0)] wire54;
  wire signed [(2'h3):(1'h0)] wire55;
  wire signed [(3'h4):(1'h0)] wire58;
  reg [(4'ha):(1'h0)] reg50 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg51 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg52 = (1'h0);
  reg [(3'h4):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg57 = (1'h0);
  assign y = {wire60,
                 wire19,
                 wire21,
                 wire22,
                 wire45,
                 wire47,
                 wire49,
                 wire53,
                 wire54,
                 wire55,
                 wire58,
                 reg50,
                 reg51,
                 reg52,
                 reg56,
                 reg57,
                 (1'h0)};
  module10 #() modinst20 (.wire13(wire9), .wire11(wire6), .wire14(wire8), .y(wire19), .wire12(wire7), .clk(clk));
  assign wire21 = (~^$signed({$unsigned(wire6)}));
  assign wire22 = ({$unsigned(wire9)} ?
                      $signed((8'ha7)) : wire21[(2'h2):(1'h1)]);
  module23 #() modinst46 (.wire27(wire21), .wire24(wire8), .wire25(wire9), .wire26(wire7), .clk(clk), .y(wire45));
  module23 #() modinst48 (wire47, clk, wire7, wire22, wire9, wire19);
  assign wire49 = wire8[(3'h5):(3'h5)];
  always
    @(posedge clk) begin
      reg50 <= $signed((($unsigned(wire8) ~^ $unsigned(wire7)) ?
          (+(wire8 ? wire45 : wire6)) : wire47));
      reg51 <= $signed($signed(wire9[(1'h1):(1'h1)]));
      reg52 <= (^~$signed(wire19));
    end
  assign wire53 = reg52;
  assign wire54 = ({{((8'ha9) >>> wire21)}} | wire19);
  assign wire55 = (&wire8);
  always
    @(posedge clk) begin
      reg56 <= (~(~&wire54));
      reg57 <= wire47[(2'h2):(2'h2)];
    end
  module23 #() modinst59 (.wire26(wire54), .clk(clk), .wire27(wire21), .wire25(wire7), .y(wire58), .wire24(reg50));
  assign wire60 = reg50;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23
#(parameter param44 = (((((8'hae) ? (8'ha3) : (8'hab)) & ((8'hae) ? (8'ha9) : (8'ha1))) ^ (&((8'ha8) ? (8'ha9) : (8'h9e)))) - {({(8'h9e)} ? {(8'haf)} : ((8'h9d) ~^ (8'hb0)))}))
(y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire27;
  input wire signed [(4'h9):(1'h0)] wire26;
  input wire [(2'h3):(1'h0)] wire25;
  input wire [(3'h5):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire43;
  wire [(2'h2):(1'h0)] wire37;
  wire [(2'h2):(1'h0)] wire30;
  wire [(3'h5):(1'h0)] wire29;
  wire signed [(3'h5):(1'h0)] wire28;
  reg signed [(2'h2):(1'h0)] reg42 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg41 = (1'h0);
  reg [(2'h3):(1'h0)] reg40 = (1'h0);
  reg [(4'hb):(1'h0)] reg39 = (1'h0);
  reg [(4'h8):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg36 = (1'h0);
  reg [(4'hb):(1'h0)] reg35 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg33 = (1'h0);
  reg [(4'hb):(1'h0)] reg32 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg31 = (1'h0);
  assign y = {wire43,
                 wire37,
                 wire30,
                 wire29,
                 wire28,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 (1'h0)};
  assign wire28 = $signed($signed((^~$unsigned(wire27))));
  assign wire29 = ($unsigned(((wire28 + wire26) >= wire26[(4'h8):(3'h6)])) > (((wire28 > wire27) ?
                      wire27 : (wire25 ?
                          wire26 : wire27)) != {wire28[(3'h5):(2'h2)]}));
  assign wire30 = wire26[(3'h6):(3'h6)];
  always
    @(posedge clk) begin
      reg31 <= wire29;
      reg32 <= {wire24};
      reg33 <= wire26[(1'h0):(1'h0)];
    end
  always
    @(posedge clk) begin
      reg34 <= $unsigned($signed(wire27[(1'h0):(1'h0)]));
      reg35 <= ((&$unsigned((^reg34))) == ($unsigned($signed(reg31)) ?
          (wire29[(3'h4):(3'h4)] ^~ (wire29 ?
              (8'ha0) : wire26)) : (~|$signed(wire30))));
      reg36 <= ({(8'hab)} * $unsigned(((reg34 ?
          wire26 : reg35) >= reg34[(3'h6):(3'h4)])));
    end
  assign wire37 = wire29[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      reg38 <= (^~((reg33 ? reg36[(2'h3):(1'h0)] : $unsigned(reg31)) - reg36));
      if ((~|wire30))
        begin
          reg39 <= (wire30[(1'h1):(1'h0)] | reg34[(3'h4):(2'h2)]);
          reg40 <= $signed((wire24[(1'h0):(1'h0)] > $signed($unsigned(wire27))));
        end
      else
        begin
          reg39 <= $unsigned((8'ha0));
          reg40 <= wire27[(2'h3):(2'h2)];
          reg41 <= {reg35};
        end
      reg42 <= $unsigned((^((wire27 | wire26) >> wire27[(2'h3):(2'h2)])));
    end
  assign wire43 = reg34;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h23):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire14;
  input wire [(3'h7):(1'h0)] wire13;
  input wire [(4'h8):(1'h0)] wire12;
  input wire signed [(4'ha):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire18;
  wire signed [(3'h6):(1'h0)] wire17;
  wire signed [(3'h6):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire15;
  assign y = {wire18, wire17, wire16, wire15, (1'h0)};
  assign wire15 = $unsigned($signed(wire13[(1'h0):(1'h0)]));
  assign wire16 = (~|wire12[(2'h2):(1'h0)]);
  assign wire17 = wire14;
  assign wire18 = (((!(~wire14)) ?
                          wire15[(2'h3):(1'h1)] : $signed((wire13 <<< wire15))) ?
                      ($unsigned(wire15) != $unsigned(wire17[(3'h6):(3'h5)])) : $unsigned($unsigned($signed(wire14))));
endmodule