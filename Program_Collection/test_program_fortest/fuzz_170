(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire63;
  wire [(3'h6):(1'h0)] wire58;
  wire [(4'ha):(1'h0)] wire57;
  wire signed [(4'hb):(1'h0)] wire56;
  wire [(4'h8):(1'h0)] wire55;
  wire signed [(3'h4):(1'h0)] wire54;
  wire signed [(3'h4):(1'h0)] wire53;
  wire signed [(3'h4):(1'h0)] wire52;
  wire signed [(4'ha):(1'h0)] wire50;
  reg [(4'h8):(1'h0)] reg62 = (1'h0);
  reg [(3'h4):(1'h0)] reg61 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg59 = (1'h0);
  assign y = {wire63,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire50,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 (1'h0)};
  module4 #() modinst51 (wire50, clk, wire3, wire0, wire1, wire2);
  assign wire52 = wire1;
  assign wire53 = wire1;
  assign wire54 = wire53[(2'h3):(1'h0)];
  assign wire55 = {(((^(8'ha7)) ? $signed(wire52) : (wire2 ? wire2 : wire3)) ?
                          $signed($unsigned((8'ha7))) : (^~(wire54 * (8'h9c))))};
  assign wire56 = (+{wire0[(4'h8):(2'h2)]});
  assign wire57 = (wire52 ? wire56 : $signed($signed((wire52 | wire3))));
  assign wire58 = (wire2 ?
                      $unsigned(wire55[(3'h7):(3'h4)]) : $signed({(wire2 ?
                              (8'h9d) : (8'haf))}));
  always
    @(posedge clk) begin
      reg59 <= $signed(($signed($signed(wire54)) ^~ $unsigned((wire56 || wire50))));
      reg60 <= (~|wire57);
      reg61 <= (|wire56[(2'h2):(2'h2)]);
    end
  always
    @(posedge clk) begin
      reg62 <= $unsigned((($signed(wire2) ? wire52 : (wire0 ? reg59 : wire52)) ?
          (wire56 ? (!reg60) : (reg61 ~^ wire3)) : $unsigned(reg61)));
    end
  assign wire63 = ((((|wire0) | (&wire2)) ?
                          $signed($unsigned(wire1)) : $unsigned($unsigned(wire58))) ?
                      ((~&(8'haa)) == ($unsigned(wire55) + $signed(wire2))) : wire3[(3'h6):(3'h5)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param49 = (|{{((8'h9d) >>> (8'h9c))}}))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire8;
  input wire signed [(2'h3):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire6;
  input wire signed [(4'hb):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire48;
  wire signed [(4'ha):(1'h0)] wire46;
  wire [(4'hb):(1'h0)] wire34;
  wire signed [(3'h7):(1'h0)] wire33;
  wire signed [(3'h6):(1'h0)] wire32;
  wire signed [(3'h7):(1'h0)] wire30;
  assign y = {wire48, wire46, wire34, wire33, wire32, wire30, (1'h0)};
  module9 #() modinst31 (.wire11(wire6), .wire12(wire5), .y(wire30), .wire13(wire8), .clk(clk), .wire10(wire7));
  assign wire32 = $signed({(~^{wire5})});
  assign wire33 = (^wire8[(4'h9):(3'h4)]);
  assign wire34 = wire5;
  module35 #() modinst47 (wire46, clk, wire33, wire6, wire5, wire8);
  assign wire48 = wire8[(1'h1):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module35  (y, clk, wire39, wire38, wire37, wire36);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire39;
  input wire [(3'h6):(1'h0)] wire38;
  input wire signed [(4'h9):(1'h0)] wire37;
  input wire [(3'h6):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire45;
  wire signed [(3'h7):(1'h0)] wire44;
  wire signed [(4'ha):(1'h0)] wire43;
  wire [(3'h7):(1'h0)] wire42;
  wire [(2'h2):(1'h0)] wire41;
  wire signed [(3'h7):(1'h0)] wire40;
  assign y = {wire45, wire44, wire43, wire42, wire41, wire40, (1'h0)};
  assign wire40 = $signed((|$unsigned($signed((8'ha9)))));
  assign wire41 = $unsigned($unsigned(((+(8'had)) ?
                      (~^(8'hae)) : wire36[(3'h4):(3'h4)])));
  assign wire42 = $signed($signed((+wire36[(3'h5):(1'h0)])));
  assign wire43 = $unsigned($signed({$unsigned(wire41)}));
  assign wire44 = ({($unsigned(wire42) ?
                              $unsigned(wire42) : (wire41 > wire40))} ?
                      wire39 : $unsigned($signed($unsigned((8'ha1)))));
  assign wire45 = (+{(|(wire37 ? wire40 : wire36))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param29 = ((((~|(8'h9e)) || (~(8'ha6))) ? (^((8'hac) ? (8'ha3) : (8'h9e))) : (~^(8'haa))) && (({(8'hac)} ? ((8'h9d) ? (8'ha4) : (8'h9c)) : (8'hb0)) ? {{(8'hae)}} : (((8'ha3) ? (8'had) : (8'h9c)) && (8'ha0)))))
(y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire13;
  input wire signed [(4'hb):(1'h0)] wire12;
  input wire signed [(3'h7):(1'h0)] wire11;
  input wire [(2'h3):(1'h0)] wire10;
  wire signed [(2'h3):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire27;
  wire [(3'h6):(1'h0)] wire26;
  wire signed [(3'h6):(1'h0)] wire25;
  wire signed [(3'h6):(1'h0)] wire18;
  wire signed [(2'h2):(1'h0)] wire17;
  wire signed [(4'h9):(1'h0)] wire16;
  wire [(3'h5):(1'h0)] wire15;
  wire signed [(2'h2):(1'h0)] wire14;
  reg signed [(2'h3):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg21 = (1'h0);
  reg [(3'h6):(1'h0)] reg20 = (1'h0);
  reg [(4'h9):(1'h0)] reg19 = (1'h0);
  assign y = {wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire14 = ($signed({(wire13 >= wire10)}) ?
                      $unsigned({wire12[(1'h0):(1'h0)]}) : $signed(wire10));
  assign wire15 = {$signed((wire12 == ((8'ha9) ? wire13 : wire13)))};
  assign wire16 = wire12[(2'h2):(1'h1)];
  assign wire17 = (^~(&(~^$signed(wire15))));
  assign wire18 = wire10[(2'h3):(1'h1)];
  always
    @(posedge clk) begin
      reg19 <= ($signed(wire15) >>> (~^(wire17 - (~wire16))));
      reg20 <= (^~(wire13 | $unsigned(((8'ha6) ? wire11 : wire10))));
      if ({$unsigned(wire15[(1'h0):(1'h0)])})
        begin
          if ((wire16[(3'h4):(1'h0)] ^ ((wire12[(4'h8):(2'h2)] ?
              {reg20} : {(8'ha5)}) && wire10[(1'h0):(1'h0)])))
            begin
              reg21 <= ((wire18[(2'h3):(1'h0)] >= (-wire13[(1'h0):(1'h0)])) ~^ {$unsigned((+reg20))});
              reg22 <= (($signed((reg20 ? wire13 : (8'haf))) <= wire15) ?
                  wire16[(2'h2):(1'h1)] : (((+(8'haa)) ?
                          (~|wire14) : (wire13 ? reg21 : wire16)) ?
                      $unsigned(wire10) : $signed((wire13 ? reg21 : wire16))));
            end
          else
            begin
              reg21 <= $unsigned(reg19[(4'h8):(1'h1)]);
              reg22 <= ($signed(reg19) < $unsigned(((|(8'had)) >>> wire18)));
            end
          reg23 <= (wire16 >> (^($unsigned((8'ha1)) ? (-(8'h9c)) : {(8'ha5)})));
        end
      else
        begin
          if (wire14)
            begin
              reg21 <= ({$signed($signed(reg22))} + wire13);
              reg22 <= wire15[(2'h2):(1'h1)];
            end
          else
            begin
              reg21 <= {wire12[(1'h0):(1'h0)]};
            end
          reg23 <= (^~(8'h9c));
          reg24 <= $signed(($signed((~(8'ha7))) ? wire15 : $unsigned((8'hab))));
        end
    end
  assign wire25 = $signed($signed((^~reg23[(1'h1):(1'h1)])));
  assign wire26 = wire14[(1'h1):(1'h1)];
  assign wire27 = {($signed((reg21 | wire25)) ~^ $unsigned($signed(wire17)))};
  assign wire28 = wire14;
endmodule