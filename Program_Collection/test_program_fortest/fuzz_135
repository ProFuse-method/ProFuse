(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire8;
  wire signed [(3'h4):(1'h0)] wire7;
  wire signed [(4'h9):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire4;
  reg [(4'hb):(1'h0)] reg6 = (1'h0);
  assign y = {wire8, wire7, wire5, wire4, reg6, (1'h0)};
  assign wire4 = wire2;
  assign wire5 = (($signed($unsigned((8'haf))) - $signed((&(8'hac)))) >= $signed($unsigned({wire1})));
  always
    @(posedge clk) begin
      reg6 <= (wire0[(3'h5):(2'h2)] ?
          (((-wire1) ? (~|wire2) : $signed((8'ha5))) ?
              wire3[(1'h1):(1'h1)] : ({wire2} << $signed((8'h9c)))) : wire2);
    end
  assign wire7 = (wire2 >= wire3[(1'h1):(1'h0)]);
  assign wire8 = wire0[(3'h7):(3'h5)];
endmodule