(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'ha1):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire3;
  wire [(4'hb):(1'h0)] wire84;
  wire [(4'h8):(1'h0)] wire83;
  wire signed [(4'hb):(1'h0)] wire4;
  wire signed [(4'hb):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire66;
  wire [(4'ha):(1'h0)] wire68;
  wire signed [(4'hb):(1'h0)] wire70;
  wire signed [(4'h9):(1'h0)] wire78;
  wire [(3'h5):(1'h0)] wire81;
  reg signed [(4'hb):(1'h0)] reg71 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg72 = (1'h0);
  reg [(4'ha):(1'h0)] reg73 = (1'h0);
  reg [(4'h8):(1'h0)] reg74 = (1'h0);
  reg [(2'h3):(1'h0)] reg75 = (1'h0);
  reg [(4'hb):(1'h0)] reg76 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg77 = (1'h0);
  reg [(4'hb):(1'h0)] reg80 = (1'h0);
  assign y = {wire84,
                 wire83,
                 wire4,
                 wire5,
                 wire6,
                 wire66,
                 wire68,
                 wire70,
                 wire78,
                 wire81,
                 reg71,
                 reg72,
                 reg73,
                 reg74,
                 reg75,
                 reg76,
                 reg77,
                 reg80,
                 (1'h0)};
  assign wire4 = wire1;
  assign wire5 = (~&(|wire1[(2'h3):(2'h2)]));
  assign wire6 = wire0;
  module7 #() modinst67 (wire66, clk, wire5, wire6, wire4, wire1);
  module7 #() modinst69 (wire68, clk, wire5, wire66, wire0, wire2);
  assign wire70 = (((-$signed((8'ha3))) ?
                          $unsigned((8'hab)) : ((8'hae) - wire1[(1'h1):(1'h1)])) ?
                      (+(&(^wire68))) : wire2[(2'h3):(1'h1)]);
  always
    @(posedge clk) begin
      if ((8'h9f))
        begin
          if ($unsigned((((|wire68) ?
              (wire68 ? (8'ha9) : wire5) : (wire3 ?
                  wire1 : wire0)) ^~ wire66[(3'h7):(2'h3)])))
            begin
              reg71 <= (^~(~(~&(wire3 < wire5))));
            end
          else
            begin
              reg71 <= wire66[(4'ha):(3'h7)];
              reg72 <= (8'haf);
              reg73 <= ($signed((wire1 ?
                      wire70[(3'h6):(3'h5)] : (wire5 >> wire68))) ?
                  wire66[(4'h9):(4'h9)] : wire70[(1'h0):(1'h0)]);
            end
          reg74 <= $unsigned({(+(wire5 ? wire68 : reg71))});
        end
      else
        begin
          reg71 <= $unsigned(reg73[(1'h0):(1'h0)]);
          reg72 <= $signed({(8'ha6)});
        end
      reg75 <= reg72[(2'h2):(1'h0)];
      reg76 <= reg74[(3'h4):(1'h1)];
    end
  always
    @(posedge clk) begin
      reg77 <= {$signed(((reg71 ? reg73 : (8'ha5)) != $unsigned(wire4)))};
    end
  module34 #() modinst79 (wire78, clk, wire70, wire5, reg74, reg71);
  always
    @(posedge clk) begin
      reg80 <= reg71[(1'h0):(1'h0)];
    end
  module7 #() modinst82 (wire81, clk, wire0, wire5, reg76, wire78);
  assign wire83 = (-wire0[(3'h5):(3'h5)]);
  assign wire84 = $unsigned((($unsigned(reg71) || reg80[(1'h1):(1'h1)]) > reg75));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire8, wire9, wire10, wire11);
  output wire [(32'h89):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire [(4'hb):(1'h0)] wire10;
  input wire signed [(3'h6):(1'h0)] wire11;
  wire [(2'h3):(1'h0)] wire65;
  wire signed [(4'h8):(1'h0)] wire23;
  wire signed [(3'h6):(1'h0)] wire25;
  wire signed [(2'h3):(1'h0)] wire26;
  wire signed [(4'h8):(1'h0)] wire32;
  wire signed [(3'h4):(1'h0)] wire33;
  wire [(2'h2):(1'h0)] wire52;
  reg [(4'h8):(1'h0)] reg64 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg63 = (1'h0);
  reg [(3'h4):(1'h0)] reg62 = (1'h0);
  reg [(2'h3):(1'h0)] reg61 = (1'h0);
  reg [(3'h4):(1'h0)] reg60 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg59 = (1'h0);
  reg [(3'h5):(1'h0)] reg58 = (1'h0);
  reg [(2'h2):(1'h0)] reg57 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg56 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg55 = (1'h0);
  reg [(3'h7):(1'h0)] reg54 = (1'h0);
  reg [(4'hb):(1'h0)] reg27 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg28 = (1'h0);
  reg [(3'h7):(1'h0)] reg29 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg [(3'h7):(1'h0)] reg31 = (1'h0);
  assign y = {wire65,
                 wire23,
                 wire25,
                 wire26,
                 wire32,
                 wire33,
                 wire52,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg27,
                 reg28,
                 reg29,
                 reg30,
                 reg31,
                 (1'h0)};
  module12 #() modinst24 (.wire13(wire11), .y(wire23), .wire16(wire8), .wire15(wire9), .wire14(wire10), .clk(clk));
  assign wire25 = (^~(^($unsigned((8'ha5)) ^~ (+wire11))));
  assign wire26 = (wire8 ?
                      ($unsigned(wire25) * $signed(wire23[(3'h4):(1'h1)])) : $unsigned((-$unsigned(wire10))));
  always
    @(posedge clk) begin
      if ($signed($signed((wire26[(1'h0):(1'h0)] << (wire25 ~^ (8'hac))))))
        begin
          reg27 <= {$unsigned((~&(wire23 ? wire8 : wire10)))};
          reg28 <= wire25[(1'h0):(1'h0)];
          reg29 <= {wire10[(3'h5):(2'h3)]};
        end
      else
        begin
          reg27 <= {reg28[(2'h3):(1'h0)]};
        end
      reg30 <= $signed($signed({(^~wire25)}));
      reg31 <= reg29;
    end
  assign wire32 = $unsigned(reg31[(1'h1):(1'h1)]);
  assign wire33 = (~|(^~$signed((~&reg31))));
  module34 #() modinst53 (wire52, clk, wire25, reg28, wire8, wire10);
  always
    @(posedge clk) begin
      reg54 <= wire11;
      reg55 <= wire25[(3'h5):(2'h2)];
      reg56 <= reg31[(3'h7):(1'h0)];
    end
  always
    @(posedge clk) begin
      if (reg56[(4'h8):(1'h1)])
        begin
          reg57 <= (reg55 ^ ((wire33 ? (|reg29) : reg28) ?
              {(wire32 ? wire9 : reg27)} : $signed(reg55[(1'h0):(1'h0)])));
        end
      else
        begin
          if ({reg56})
            begin
              reg57 <= (wire23[(3'h4):(3'h4)] ?
                  ({(reg29 - wire9)} < (-(reg29 ?
                      wire9 : (8'ha4)))) : ($unsigned(reg57) ?
                      reg30[(3'h7):(2'h2)] : $signed((reg57 ?
                          (8'ha8) : reg56))));
            end
          else
            begin
              reg57 <= wire23[(2'h3):(1'h1)];
              reg58 <= (wire11 > (($signed(wire26) ?
                      reg30 : ((8'haf) < wire52)) ?
                  ((reg28 ? reg56 : reg31) ?
                      wire9 : reg28[(4'h8):(4'h8)]) : ($signed(reg27) ?
                      (wire11 ? reg30 : reg57) : $signed(wire52))));
              reg59 <= (+$unsigned($unsigned((reg58 ? wire26 : wire33))));
            end
          if ($unsigned($unsigned($signed(wire52[(1'h1):(1'h1)]))))
            begin
              reg60 <= reg27;
              reg61 <= $unsigned(reg29[(2'h2):(1'h1)]);
              reg62 <= (~&reg61[(1'h0):(1'h0)]);
            end
          else
            begin
              reg60 <= wire10[(2'h3):(2'h3)];
            end
          reg63 <= $unsigned($signed($unsigned((wire11 ^~ reg55))));
        end
      reg64 <= reg54[(3'h6):(3'h6)];
    end
  assign wire65 = (~wire32[(3'h7):(3'h6)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34
#(parameter param51 = (({((8'hac) == (8'h9f))} | {(~&(8'ha8))}) ? ((~^((8'hb0) <= (8'had))) ? (((8'ha1) ? (8'haa) : (8'hb0)) ? ((8'h9c) ? (8'haa) : (8'hae)) : (^~(8'hae))) : (((8'h9f) ? (8'hae) : (8'h9c)) * (~&(8'ha9)))) : {{(!(8'h9d))}}))
(y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire38;
  input wire [(4'hb):(1'h0)] wire37;
  input wire [(4'h8):(1'h0)] wire36;
  input wire signed [(4'hb):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire50;
  wire [(4'ha):(1'h0)] wire49;
  wire [(3'h7):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire47;
  wire [(4'ha):(1'h0)] wire46;
  wire signed [(3'h4):(1'h0)] wire45;
  wire [(4'ha):(1'h0)] wire44;
  wire signed [(3'h6):(1'h0)] wire42;
  wire [(4'ha):(1'h0)] wire39;
  reg signed [(4'ha):(1'h0)] reg43 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg41 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg40 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire42,
                 wire39,
                 reg43,
                 reg41,
                 reg40,
                 (1'h0)};
  assign wire39 = wire36[(4'h8):(3'h7)];
  always
    @(posedge clk) begin
      reg40 <= $unsigned(wire35);
      reg41 <= {$unsigned(wire36)};
    end
  assign wire42 = (-(~|wire39[(4'ha):(1'h1)]));
  always
    @(posedge clk) begin
      reg43 <= (~|$unsigned((-$signed(wire36))));
    end
  assign wire44 = $signed(($signed(reg40[(3'h7):(1'h0)]) != wire39[(3'h7):(3'h4)]));
  assign wire45 = $unsigned(wire42);
  assign wire46 = (~&$unsigned($unsigned($unsigned(wire39))));
  assign wire47 = $unsigned({$unsigned((wire39 != wire37))});
  assign wire48 = wire36;
  assign wire49 = (8'h9d);
  assign wire50 = (({wire36[(2'h3):(1'h0)]} <<< ((^wire48) != (~|wire35))) > wire46[(3'h5):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param22 = ({((-(8'h9d)) ^ ((8'ha6) <<< (8'h9c)))} ? {(((8'ha1) ? (8'hab) : (8'haf)) >= (8'ha0))} : (({(8'ha6)} <= (8'hac)) ^ (((8'ha9) > (8'ha9)) ? (~^(8'h9f)) : ((8'ha2) && (8'hab))))))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h17):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire16;
  input wire [(4'hb):(1'h0)] wire15;
  input wire [(3'h5):(1'h0)] wire14;
  input wire [(3'h6):(1'h0)] wire13;
  wire signed [(3'h6):(1'h0)] wire21;
  wire [(2'h2):(1'h0)] wire20;
  wire [(4'h8):(1'h0)] wire19;
  wire signed [(3'h4):(1'h0)] wire18;
  wire signed [(2'h2):(1'h0)] wire17;
  assign y = {wire21, wire20, wire19, wire18, wire17, (1'h0)};
  assign wire17 = ((wire15 ? (~^wire13) : wire16[(1'h1):(1'h1)]) ?
                      $unsigned((^wire14)) : $signed(((wire16 ^ wire16) ?
                          (wire15 ? (8'hab) : wire16) : (wire14 ?
                              wire16 : wire14))));
  assign wire18 = wire13;
  assign wire19 = $signed(wire15[(3'h6):(3'h6)]);
  assign wire20 = $unsigned($unsigned((~(wire13 ? (8'h9c) : wire14))));
  assign wire21 = ($unsigned(((wire19 && wire16) ?
                      (!wire16) : {(8'hac)})) ^ wire15);
endmodule