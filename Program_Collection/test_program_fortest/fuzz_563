(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param10 = ((~^(-((8'h9e) >= (8'ha2)))) ? {(((8'ha1) ? (8'ha1) : (8'h9d)) ? {(8'ha1)} : ((8'haa) < (8'ha5)))} : ((^~(!(8'h9c))) >> (((8'hab) & (8'hae)) & ((8'h9d) < (8'haf))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire [(3'h4):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire9;
  wire signed [(3'h4):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire6;
  wire [(2'h3):(1'h0)] wire5;
  reg signed [(3'h4):(1'h0)] reg8 = (1'h0);
  reg [(4'hb):(1'h0)] reg4 = (1'h0);
  assign y = {wire9, wire7, wire6, wire5, reg8, reg4, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= ($unsigned((wire1 ? wire3[(3'h6):(3'h6)] : $signed(wire0))) ?
          {$unsigned({wire2})} : wire1);
    end
  assign wire5 = (~(((wire2 + (8'ha3)) != (~wire2)) == (wire2[(3'h5):(2'h3)] ?
                     $unsigned((8'hac)) : (|reg4))));
  assign wire6 = ($unsigned((wire5 <= (wire5 >> wire2))) ?
                     ($unsigned((~wire0)) ?
                         reg4 : ($unsigned(reg4) ?
                             $signed(wire0) : (!wire3))) : (|($unsigned(wire0) + ((8'h9f) ?
                         wire2 : wire3))));
  assign wire7 = $signed($signed(wire3[(3'h5):(3'h5)]));
  always
    @(posedge clk) begin
      reg8 <= ($signed(((|reg4) ? {wire7} : wire2)) ?
          (((wire6 ?
              wire0 : (8'ha7)) ^ wire2[(3'h5):(3'h4)]) ^~ $unsigned((reg4 >> (8'h9e)))) : wire0[(1'h1):(1'h0)]);
    end
  assign wire9 = (((wire0 ? wire6 : $unsigned(wire3)) ?
                     $signed((~&wire0)) : wire6) ~^ wire7[(1'h1):(1'h0)]);
endmodule