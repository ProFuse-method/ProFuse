(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param63 = {(~|{(8'ha3)})})
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire0;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire3;
  wire signed [(3'h6):(1'h0)] wire62;
  wire [(4'h8):(1'h0)] wire4;
  wire [(4'h9):(1'h0)] wire55;
  reg [(3'h5):(1'h0)] reg61 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg59 = (1'h0);
  reg [(3'h7):(1'h0)] reg58 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg57 = (1'h0);
  reg [(4'h9):(1'h0)] reg5 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg7 = (1'h0);
  assign y = {wire62,
                 wire4,
                 wire55,
                 reg61,
                 reg60,
                 reg59,
                 reg58,
                 reg57,
                 reg5,
                 reg6,
                 reg7,
                 (1'h0)};
  assign wire4 = wire2;
  always
    @(posedge clk) begin
      reg5 <= (wire0[(2'h3):(2'h2)] != ((~|wire3[(4'hb):(4'hb)]) <<< {$signed(wire0)}));
      reg6 <= $signed((+(8'ha1)));
      reg7 <= ((^$unsigned(wire1)) << $signed(((wire4 <<< (8'haa)) ?
          ((8'ha3) ? wire1 : wire0) : (~^reg5))));
    end
  module8 #() modinst56 (.wire10(wire4), .wire11(wire3), .wire12(wire0), .y(wire55), .wire9(reg7), .clk(clk));
  always
    @(posedge clk) begin
      if (wire2)
        begin
          if ($unsigned($unsigned($signed((reg5 * wire3)))))
            begin
              reg57 <= $unsigned((~|(reg6 >= (reg5 * reg6))));
            end
          else
            begin
              reg57 <= (8'hac);
            end
        end
      else
        begin
          reg57 <= wire3;
        end
      if (($unsigned(({reg57} ? reg5[(3'h6):(3'h6)] : {reg57})) ?
          (&(reg57[(1'h0):(1'h0)] ?
              wire4[(3'h4):(1'h1)] : $signed(reg6))) : wire0))
        begin
          reg58 <= ($unsigned({(reg57 ? reg7 : reg6)}) ?
              $unsigned($unsigned((reg5 ?
                  wire55 : reg6))) : $signed((reg57[(3'h4):(1'h1)] ?
                  (reg5 - reg6) : $unsigned(wire1))));
        end
      else
        begin
          reg58 <= (($signed(reg6) ~^ ((wire1 && reg7) ?
              $unsigned(reg58) : wire3)) ^ wire4);
          reg59 <= (^~$unsigned(reg5));
          reg60 <= wire0;
        end
      reg61 <= wire0[(3'h4):(1'h0)];
    end
  assign wire62 = $signed((|$signed($signed((8'h9c)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param54 = (-(8'ha8)))
(y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h3e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire12;
  input wire signed [(4'hb):(1'h0)] wire11;
  input wire signed [(4'h8):(1'h0)] wire10;
  input wire signed [(4'h9):(1'h0)] wire9;
  wire signed [(3'h4):(1'h0)] wire53;
  wire [(4'ha):(1'h0)] wire51;
  wire signed [(4'ha):(1'h0)] wire50;
  wire signed [(2'h2):(1'h0)] wire49;
  wire signed [(4'hb):(1'h0)] wire47;
  wire signed [(4'hb):(1'h0)] wire31;
  wire signed [(4'h8):(1'h0)] wire30;
  wire [(3'h5):(1'h0)] wire28;
  assign y = {wire53,
                 wire51,
                 wire50,
                 wire49,
                 wire47,
                 wire31,
                 wire30,
                 wire28,
                 (1'h0)};
  module13 #() modinst29 (.wire15(wire12), .wire17(wire10), .wire16(wire9), .wire14(wire11), .y(wire28), .clk(clk));
  assign wire30 = wire28;
  assign wire31 = wire12;
  module32 #() modinst48 (.y(wire47), .clk(clk), .wire34(wire9), .wire33(wire30), .wire36(wire11), .wire35(wire31));
  assign wire49 = wire47[(1'h0):(1'h0)];
  assign wire50 = ((((8'hb0) ?
                      (&(8'ha4)) : wire9[(2'h3):(1'h0)]) ^ wire47) || ((^(wire12 <= wire31)) >> $signed((wire31 ?
                      wire12 : (8'had)))));
  module13 #() modinst52 (wire51, clk, wire12, wire30, wire10, wire47);
  assign wire53 = (({(wire30 ~^ wire11)} ^ $signed($unsigned(wire51))) ?
                      (^{(wire9 & (8'had))}) : (+$unsigned((wire11 ?
                          wire12 : (8'haf)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module32
#(parameter param46 = (+{({(8'ha0)} || (-(8'ha7)))}))
(y, clk, wire36, wire35, wire34, wire33);
  output wire [(32'h38):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire36;
  input wire [(4'hb):(1'h0)] wire35;
  input wire [(3'h4):(1'h0)] wire34;
  input wire signed [(3'h6):(1'h0)] wire33;
  wire [(4'ha):(1'h0)] wire44;
  wire signed [(3'h7):(1'h0)] wire43;
  wire signed [(4'h8):(1'h0)] wire40;
  wire signed [(2'h2):(1'h0)] wire39;
  wire [(3'h4):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire37;
  reg [(3'h5):(1'h0)] reg45 = (1'h0);
  reg [(3'h4):(1'h0)] reg42 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg41 = (1'h0);
  assign y = {wire44,
                 wire43,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 reg45,
                 reg42,
                 reg41,
                 (1'h0)};
  assign wire37 = ($signed(wire33) && ((&wire34[(1'h1):(1'h1)]) << wire33[(3'h4):(3'h4)]));
  assign wire38 = $unsigned($unsigned((+(^~wire35))));
  assign wire39 = (wire38 + $unsigned(($signed((8'h9d)) > {wire36})));
  assign wire40 = wire35[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg41 <= wire34[(3'h4):(3'h4)];
      reg42 <= {$signed($unsigned({wire34}))};
    end
  assign wire43 = ((^~(^(reg42 ? wire35 : wire38))) >> {($unsigned(reg42) ?
                          $unsigned(wire36) : $unsigned(wire35))});
  assign wire44 = {($signed($unsigned(wire39)) << (~^$signed(wire37)))};
  always
    @(posedge clk) begin
      reg45 <= wire39;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire17;
  input wire signed [(3'h7):(1'h0)] wire16;
  input wire signed [(4'h8):(1'h0)] wire15;
  input wire signed [(4'hb):(1'h0)] wire14;
  wire signed [(3'h6):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire26;
  wire [(3'h6):(1'h0)] wire25;
  wire signed [(3'h7):(1'h0)] wire24;
  wire [(3'h6):(1'h0)] wire23;
  wire signed [(3'h6):(1'h0)] wire22;
  wire [(3'h6):(1'h0)] wire18;
  reg signed [(3'h5):(1'h0)] reg21 = (1'h0);
  reg [(4'hb):(1'h0)] reg20 = (1'h0);
  reg [(4'h9):(1'h0)] reg19 = (1'h0);
  assign y = {wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire18,
                 reg21,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire18 = $signed($signed((+(8'hae))));
  always
    @(posedge clk) begin
      if ($signed({wire17}))
        begin
          reg19 <= (wire18 << $signed($unsigned(wire18)));
        end
      else
        begin
          reg19 <= wire14;
        end
      reg20 <= $unsigned(wire17);
      reg21 <= wire18[(3'h6):(1'h1)];
    end
  assign wire22 = (!wire16[(3'h6):(3'h4)]);
  assign wire23 = wire14;
  assign wire24 = (8'hab);
  assign wire25 = (8'ha7);
  assign wire26 = $unsigned((^~(8'ha5)));
  assign wire27 = {(wire18 >>> {$signed(reg21)})};
endmodule