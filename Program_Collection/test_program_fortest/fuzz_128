(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param11 = (|({(+(8'had))} ? (~^((8'ha7) ? (8'ha7) : (8'h9f))) : (((8'hae) ? (8'ha9) : (8'h9d)) << ((8'hac) ? (8'ha4) : (8'had))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire8;
  wire [(3'h7):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire4;
  reg [(4'h8):(1'h0)] reg10 = (1'h0);
  reg [(2'h2):(1'h0)] reg9 = (1'h0);
  assign y = {wire8, wire7, wire6, wire5, wire4, reg10, reg9, (1'h0)};
  assign wire4 = {wire0[(4'h8):(2'h3)]};
  assign wire5 = ((wire0 ? (8'ha6) : $unsigned({wire1})) ?
                     (-{(wire2 >= wire0)}) : $signed(((wire1 ~^ wire1) ?
                         (~|wire3) : $unsigned((8'ha2)))));
  assign wire6 = (wire1[(3'h4):(1'h0)] | $unsigned({(wire3 || wire0)}));
  assign wire7 = ((wire0 <= ($unsigned(wire5) ?
                         wire6[(4'h9):(3'h4)] : (&wire0))) ?
                     wire1[(4'h9):(3'h4)] : ({((8'haa) || wire3)} <= (wire3 <<< (wire3 == (8'hab)))));
  assign wire8 = ({wire3[(4'h8):(4'h8)]} > (wire4 ?
                     {wire2[(3'h5):(3'h5)]} : wire4));
  always
    @(posedge clk) begin
      reg9 <= (($signed((-wire2)) ?
              wire4[(2'h2):(1'h1)] : $unsigned((wire3 ? wire1 : wire4))) ?
          $signed(wire2) : {wire6[(4'h8):(4'h8)]});
      reg10 <= reg9[(1'h1):(1'h1)];
    end
endmodule