(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param11 = ((~((^~(8'h9f)) ? ((8'hae) && (8'haf)) : (|(8'h9c)))) >= (!(((8'haa) ? (8'had) : (8'ha4)) >= ((8'ha2) ? (8'ha9) : (8'hac))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h27):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire7;
  wire [(3'h5):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire5;
  wire signed [(3'h4):(1'h0)] wire4;
  reg signed [(3'h4):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg9 = (1'h0);
  reg [(3'h4):(1'h0)] reg8 = (1'h0);
  assign y = {wire7, wire6, wire5, wire4, reg10, reg9, reg8, (1'h0)};
  assign wire4 = (~|wire0);
  assign wire5 = $signed(wire3[(2'h3):(1'h1)]);
  assign wire6 = wire0[(1'h1):(1'h1)];
  assign wire7 = wire1;
  always
    @(posedge clk) begin
      reg8 <= wire4[(2'h3):(1'h1)];
      reg9 <= wire1[(3'h4):(3'h4)];
      reg10 <= $signed({(|wire3)});
    end
endmodule