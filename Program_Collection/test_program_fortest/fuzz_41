(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param22 = (~((((8'haf) ? (8'ha2) : (8'h9e)) || (&(8'ha3))) - (((8'ha0) ? (8'h9d) : (8'ha2)) >> ((8'ha6) >= (8'h9f))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h76):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire14;
  wire signed [(4'ha):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire9;
  wire signed [(2'h2):(1'h0)] wire8;
  wire signed [(3'h4):(1'h0)] wire7;
  wire [(3'h6):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg21 = (1'h0);
  reg [(3'h7):(1'h0)] reg20 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg19 = (1'h0);
  reg [(3'h5):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg17 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg16 = (1'h0);
  reg [(4'hb):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg10 = (1'h0);
  assign y = {wire14,
                 wire13,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg12,
                 reg11,
                 reg10,
                 (1'h0)};
  assign wire4 = (-(((wire1 ?
                     wire1 : wire3) <= $signed((8'ha6))) >>> ((!wire3) | (wire2 ?
                     wire0 : (8'h9c)))));
  assign wire5 = wire2;
  assign wire6 = wire4;
  assign wire7 = (($signed($unsigned(wire2)) & (wire0 ? wire4 : (|wire2))) ?
                     $unsigned(wire3[(2'h3):(2'h3)]) : $unsigned(wire5));
  assign wire8 = wire7;
  assign wire9 = (|(^((wire2 ? wire2 : wire5) | (8'haf))));
  always
    @(posedge clk) begin
      reg10 <= ($signed((&{wire3})) ?
          wire8 : {((wire5 ? wire3 : wire7) ?
                  $unsigned(wire3) : $unsigned(wire2))});
      if ((|{{$unsigned((8'h9c))}}))
        begin
          reg11 <= ($signed($signed($unsigned(wire6))) & (~($unsigned(wire4) ?
              (~^wire1) : (wire2 >= wire4))));
        end
      else
        begin
          reg11 <= (((~&$signed(wire3)) ?
              {(wire9 ? wire9 : wire9)} : ((wire8 ?
                  reg10 : wire3) == $unsigned(wire4))) == {wire2});
          reg12 <= reg11[(3'h4):(3'h4)];
        end
    end
  assign wire13 = wire2[(2'h3):(2'h3)];
  assign wire14 = $unsigned($unsigned($signed(wire7)));
  always
    @(posedge clk) begin
      if (wire5[(4'h8):(4'h8)])
        begin
          reg15 <= (8'ha9);
          reg16 <= (&($unsigned((~|wire13)) | wire13));
        end
      else
        begin
          if (reg11)
            begin
              reg15 <= (wire9 ^~ wire7[(2'h3):(1'h1)]);
              reg16 <= wire8[(1'h0):(1'h0)];
              reg17 <= ($signed(wire1[(1'h0):(1'h0)]) ?
                  ({wire2[(3'h6):(1'h0)]} ? (~&reg12) : reg11) : wire8);
            end
          else
            begin
              reg15 <= wire4[(3'h4):(3'h4)];
              reg16 <= reg11[(2'h3):(1'h1)];
            end
          if ((+$signed($signed((wire14 ? wire14 : reg15)))))
            begin
              reg18 <= (((8'ha2) + $unsigned((wire1 ~^ wire7))) - {(wire13[(4'h8):(3'h7)] * wire3)});
              reg19 <= {$unsigned((^~$signed(wire8)))};
            end
          else
            begin
              reg18 <= (+(((wire0 != reg19) > wire8) ? wire0 : wire5));
              reg19 <= $signed(wire3);
              reg20 <= wire3;
            end
          reg21 <= {($signed(reg19[(3'h5):(2'h2)]) & $unsigned($unsigned(wire9)))};
        end
    end
endmodule