(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param61 = (~^(^(&((8'ha6) || (8'hab))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h6b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(3'h5):(1'h0)] wire2;
  input wire signed [(2'h2):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire60;
  wire [(3'h7):(1'h0)] wire59;
  wire [(4'ha):(1'h0)] wire58;
  wire [(4'hb):(1'h0)] wire51;
  wire signed [(4'h9):(1'h0)] wire7;
  wire signed [(3'h5):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire53;
  wire signed [(4'h8):(1'h0)] wire54;
  wire [(3'h4):(1'h0)] wire55;
  wire [(3'h7):(1'h0)] wire56;
  reg signed [(2'h3):(1'h0)] reg9 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg [(3'h4):(1'h0)] reg5 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg4 = (1'h0);
  assign y = {wire60,
                 wire59,
                 wire58,
                 wire51,
                 wire7,
                 wire6,
                 wire53,
                 wire54,
                 wire55,
                 wire56,
                 reg9,
                 reg8,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= wire1[(2'h2):(1'h1)];
      reg5 <= ($signed(({wire1} >>> $unsigned(wire1))) * $unsigned(reg4[(1'h1):(1'h1)]));
    end
  assign wire6 = $unsigned(wire2);
  assign wire7 = wire6[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg8 <= wire7[(3'h4):(2'h3)];
      reg9 <= (wire2[(3'h4):(1'h1)] ?
          ($unsigned((wire7 ~^ (8'ha5))) * ((wire0 > reg8) ?
              $unsigned(reg5) : $unsigned(wire2))) : $unsigned($unsigned(((8'h9f) == reg5))));
    end
  module10 #() modinst52 (wire51, clk, reg8, wire0, wire3, wire6);
  assign wire53 = wire6[(2'h2):(2'h2)];
  assign wire54 = (-(|{(wire2 ? wire1 : reg4)}));
  assign wire55 = $signed(reg4);
  module10 #() modinst57 (wire56, clk, wire53, wire3, wire51, reg8);
  assign wire58 = (($signed((wire56 ? (8'h9f) : wire55)) ?
                      wire54 : (((8'ha8) ?
                          wire2 : wire55) + wire56)) > ((wire54 & (~|wire56)) ?
                      wire7[(2'h2):(1'h1)] : {(reg8 > (8'hac))}));
  assign wire59 = wire56[(2'h3):(1'h0)];
  assign wire60 = ({wire58} ?
                      ($unsigned(wire1[(1'h0):(1'h0)]) || wire51) : $unsigned((!(reg5 >>> wire53))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param50 = (~^(8'haf)))
(y, clk, wire11, wire12, wire13, wire14);
  output wire [(32'h6b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire11;
  input wire signed [(4'hb):(1'h0)] wire12;
  input wire signed [(4'hb):(1'h0)] wire13;
  input wire [(3'h5):(1'h0)] wire14;
  wire [(2'h3):(1'h0)] wire49;
  wire signed [(4'h8):(1'h0)] wire48;
  wire signed [(3'h7):(1'h0)] wire47;
  wire signed [(4'h9):(1'h0)] wire46;
  wire signed [(4'hb):(1'h0)] wire21;
  wire signed [(4'hb):(1'h0)] wire44;
  reg signed [(3'h6):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg16 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg17 = (1'h0);
  reg [(3'h7):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg19 = (1'h0);
  reg [(4'h8):(1'h0)] reg20 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg22 = (1'h0);
  reg [(3'h4):(1'h0)] reg23 = (1'h0);
  reg [(3'h6):(1'h0)] reg24 = (1'h0);
  assign y = {wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire21,
                 wire44,
                 reg15,
                 reg16,
                 reg17,
                 reg18,
                 reg19,
                 reg20,
                 reg22,
                 reg23,
                 reg24,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg15 <= wire12;
      reg16 <= (reg15 <<< ($unsigned($signed((8'haa))) ?
          ($signed((8'ha0)) ?
              ((8'ha1) ?
                  reg15 : wire13) : wire14[(3'h5):(2'h2)]) : $signed((reg15 ?
              wire14 : wire11))));
      if ($unsigned((^wire12)))
        begin
          if ({$unsigned($signed(((8'ha9) == (8'h9e))))})
            begin
              reg17 <= $unsigned($unsigned(((reg15 == wire14) ?
                  $unsigned((8'h9f)) : reg16[(2'h2):(2'h2)])));
            end
          else
            begin
              reg17 <= $signed((~&((reg16 - reg16) ?
                  (reg15 ? reg15 : reg17) : wire14[(1'h1):(1'h1)])));
            end
          reg18 <= wire12;
          if (wire12[(3'h6):(2'h2)])
            begin
              reg19 <= ((~($signed(wire14) - (~^reg18))) - (($signed((8'ha1)) && wire14) >> {$unsigned(reg16)}));
              reg20 <= $unsigned($signed((|{(8'had)})));
            end
          else
            begin
              reg19 <= (8'h9d);
              reg20 <= $unsigned(((^(wire12 * reg20)) ? wire12 : (&reg16)));
            end
        end
      else
        begin
          reg17 <= wire12;
        end
    end
  assign wire21 = reg15;
  always
    @(posedge clk) begin
      reg22 <= $signed($signed(((reg20 ? reg20 : (8'haf)) >= wire21)));
      reg23 <= $signed((-wire11));
      reg24 <= {(~^$unsigned(wire14[(1'h1):(1'h0)]))};
    end
  module25 #() modinst45 (.wire27(reg17), .y(wire44), .clk(clk), .wire26(reg22), .wire29(reg16), .wire28(wire12));
  assign wire46 = wire11[(3'h5):(1'h0)];
  assign wire47 = {$signed((wire11 ? {wire44} : reg15))};
  assign wire48 = ($signed((wire12[(4'ha):(2'h2)] ?
                      (~|reg24) : $unsigned(wire12))) + $unsigned(wire12));
  assign wire49 = ((|reg22[(2'h3):(1'h1)]) ?
                      (-(^~(reg24 ? reg16 : wire11))) : ((-(reg16 - wire13)) ?
                          (reg19 & (8'had)) : (|$signed(wire44))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25
#(parameter param43 = ((~^(((8'hab) > (8'haa)) >>> ((8'ha9) <= (8'haa)))) == ((~&{(8'h9d)}) ? ((|(8'ha2)) ? (~|(8'hab)) : ((8'ha1) ? (8'ha3) : (8'ha1))) : (^~(~|(8'h9f))))))
(y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire29;
  input wire [(4'h9):(1'h0)] wire28;
  input wire signed [(4'h8):(1'h0)] wire27;
  input wire signed [(3'h7):(1'h0)] wire26;
  wire [(4'hb):(1'h0)] wire42;
  wire signed [(3'h5):(1'h0)] wire41;
  wire signed [(3'h6):(1'h0)] wire40;
  wire signed [(3'h5):(1'h0)] wire39;
  wire signed [(2'h2):(1'h0)] wire38;
  wire [(2'h2):(1'h0)] wire37;
  wire signed [(4'ha):(1'h0)] wire36;
  wire [(3'h7):(1'h0)] wire35;
  wire signed [(4'h8):(1'h0)] wire30;
  reg [(3'h7):(1'h0)] reg34 = (1'h0);
  reg [(3'h6):(1'h0)] reg33 = (1'h0);
  reg [(4'ha):(1'h0)] reg32 = (1'h0);
  reg [(4'ha):(1'h0)] reg31 = (1'h0);
  assign y = {wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire30,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 (1'h0)};
  assign wire30 = ($unsigned(($signed(wire27) >>> (wire26 == wire29))) ^~ $unsigned(((wire26 != wire28) ?
                      {wire27} : (8'ha8))));
  always
    @(posedge clk) begin
      reg31 <= ($unsigned($unsigned(wire29)) && ((~^$signed(wire27)) | {(+wire28)}));
    end
  always
    @(posedge clk) begin
      if ($signed(wire26))
        begin
          reg32 <= (wire30 ?
              ($unsigned(wire28[(2'h3):(1'h1)]) && $signed(reg31)) : (8'h9c));
          reg33 <= ((^(reg32 ? (-wire29) : {wire30})) ^ reg31);
        end
      else
        begin
          if ($signed((wire28 + (~^reg33))))
            begin
              reg32 <= (({wire28[(3'h7):(2'h3)]} * $signed((^wire28))) ?
                  (wire29 ~^ {$unsigned((8'ha1))}) : (($signed(reg32) ?
                      reg31[(1'h1):(1'h0)] : (reg31 != wire29)) ^ ((+(8'ha6)) == (wire28 & wire26))));
              reg33 <= (8'h9c);
            end
          else
            begin
              reg32 <= wire30[(3'h4):(3'h4)];
              reg33 <= $unsigned(wire28);
            end
          reg34 <= reg33[(3'h6):(1'h1)];
        end
    end
  assign wire35 = reg32;
  assign wire36 = {(wire29[(3'h7):(3'h6)] ? wire28[(3'h7):(1'h0)] : (8'h9c))};
  assign wire37 = reg31[(2'h3):(2'h3)];
  assign wire38 = (((~wire30) == ((reg31 ?
                      wire29 : wire26) ~^ wire27[(3'h4):(3'h4)])) >= (($signed(wire35) ?
                      $unsigned((8'had)) : wire27) > $signed(wire30[(2'h3):(2'h3)])));
  assign wire39 = $unsigned((reg33 ?
                      {$unsigned(reg31)} : ((wire35 ? reg32 : wire36) ?
                          $signed(reg33) : $unsigned(wire26))));
  assign wire40 = $unsigned(((wire39[(3'h5):(1'h1)] ?
                          reg33[(3'h6):(3'h6)] : $unsigned(wire37)) ?
                      $signed(wire38) : ((reg33 - reg32) ? wire27 : wire38)));
  assign wire41 = $signed((~reg31[(4'ha):(4'ha)]));
  assign wire42 = $signed(($unsigned(reg31[(3'h4):(1'h0)]) ^~ ($unsigned(wire28) <<< $unsigned(reg33))));
endmodule