(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h18):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire37;
  wire [(2'h2):(1'h0)] wire6;
  wire signed [(3'h5):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire4;
  assign y = {wire37, wire6, wire5, wire4, (1'h0)};
  assign wire4 = wire3;
  assign wire5 = (wire4[(2'h3):(1'h1)] ?
                     (-wire4[(3'h5):(3'h5)]) : wire2[(1'h0):(1'h0)]);
  assign wire6 = ($signed($unsigned(((8'h9f) != wire3))) ?
                     $signed((8'h9c)) : ($unsigned(wire2) <<< ({(8'ha3)} ?
                         wire3 : {wire4})));
  module7 #() modinst38 (.wire11(wire0), .wire9(wire1), .clk(clk), .wire8(wire4), .wire10(wire5), .y(wire37));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire11;
  input wire signed [(3'h5):(1'h0)] wire10;
  input wire signed [(3'h5):(1'h0)] wire9;
  input wire [(3'h5):(1'h0)] wire8;
  wire signed [(4'ha):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire34;
  wire signed [(4'ha):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire14;
  wire signed [(4'h8):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire12;
  reg signed [(3'h5):(1'h0)] reg33 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire31,
                 wire14,
                 wire13,
                 wire12,
                 reg33,
                 (1'h0)};
  assign wire12 = $unsigned((((wire9 ? wire10 : wire11) ?
                      wire11[(2'h2):(1'h1)] : (8'ha5)) ^~ $unsigned((wire8 ^ wire11))));
  assign wire13 = wire8[(1'h0):(1'h0)];
  assign wire14 = wire8;
  module15 #() modinst32 (wire31, clk, wire9, wire13, wire14, wire12);
  always
    @(posedge clk) begin
      reg33 <= ((~&((&wire9) ?
          {wire31} : (~^wire9))) ^ $signed((wire31[(3'h7):(3'h5)] < (8'ha0))));
    end
  assign wire34 = (~|(wire8 ? wire11 : ({wire13} ^ wire31[(4'h9):(3'h5)])));
  assign wire35 = wire8[(1'h1):(1'h0)];
  assign wire36 = ($signed(reg33) ?
                      ((!(wire11 || wire9)) & (~(wire31 ?
                          wire31 : wire12))) : (|$signed(wire31[(3'h6):(1'h0)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param30 = {({((8'h9f) ? (8'ha9) : (8'ha3))} ? ((!(8'ha1)) >= ((8'hae) ? (8'hb0) : (8'ha4))) : (((8'hab) ? (8'ha1) : (8'haf)) >>> ((8'ha7) && (8'ha2))))})
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire19;
  input wire [(4'h8):(1'h0)] wire18;
  input wire signed [(4'hb):(1'h0)] wire17;
  input wire [(4'hb):(1'h0)] wire16;
  wire [(3'h6):(1'h0)] wire29;
  wire [(3'h7):(1'h0)] wire28;
  wire signed [(4'h8):(1'h0)] wire27;
  wire [(2'h2):(1'h0)] wire26;
  wire [(4'ha):(1'h0)] wire25;
  wire [(3'h4):(1'h0)] wire24;
  wire [(2'h2):(1'h0)] wire23;
  wire signed [(4'hb):(1'h0)] wire22;
  wire [(4'h9):(1'h0)] wire21;
  wire signed [(4'h9):(1'h0)] wire20;
  assign y = {wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 (1'h0)};
  assign wire20 = ($signed(wire19) ?
                      $unsigned(wire18) : (wire18 ?
                          wire18[(1'h1):(1'h1)] : $signed((wire17 ~^ wire19))));
  assign wire21 = ((8'hae) - (^~wire18));
  assign wire22 = (wire16[(4'h9):(3'h7)] ?
                      $unsigned(wire16[(3'h4):(1'h1)]) : $unsigned(((wire16 ?
                              wire17 : wire17) ?
                          (wire21 ? wire18 : (8'h9f)) : $unsigned(wire18))));
  assign wire23 = ((^~(8'h9c)) ? wire17 : wire20);
  assign wire24 = wire19;
  assign wire25 = $unsigned((~wire21));
  assign wire26 = ({($unsigned(wire16) <<< (wire25 ?
                          (8'ha9) : wire23))} >= ({$signed(wire21)} ?
                      $unsigned((~&wire20)) : {$unsigned((8'hae))}));
  assign wire27 = (((8'haf) <<< $signed(wire20[(3'h5):(2'h2)])) > $signed($unsigned($unsigned(wire21))));
  assign wire28 = $signed(wire26);
  assign wire29 = {$unsigned(((!wire23) ? {wire22} : $unsigned(wire24)))};
endmodule