(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param33 = (((((8'haf) || (8'had)) * ((8'ha9) ? (8'h9c) : (8'h9d))) <<< {{(8'ha9)}}) ? (8'ha7) : (({(8'ha8)} ? ((8'h9c) ? (8'haa) : (8'h9c)) : ((8'ha8) ? (8'ha1) : (8'ha0))) | (+((8'haa) & (8'h9c))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire32;
  wire signed [(3'h6):(1'h0)] wire30;
  wire [(3'h4):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire12;
  wire signed [(4'hb):(1'h0)] wire11;
  wire signed [(3'h6):(1'h0)] wire10;
  wire signed [(4'ha):(1'h0)] wire9;
  wire [(3'h4):(1'h0)] wire8;
  wire [(4'h8):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire4;
  reg signed [(2'h2):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg6 = (1'h0);
  assign y = {wire32,
                 wire30,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire5,
                 wire4,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = $signed(((wire1[(3'h5):(2'h3)] ?
                     $unsigned(wire1) : wire3[(4'h8):(4'h8)]) << wire1[(1'h1):(1'h0)]));
  assign wire5 = wire1[(1'h1):(1'h0)];
  always
    @(posedge clk) begin
      reg6 <= wire3;
      reg7 <= (+$signed(wire5[(3'h4):(3'h4)]));
    end
  assign wire8 = (wire3[(2'h2):(1'h0)] ?
                     (((wire3 ? reg7 : wire3) == reg6) ?
                         wire5 : ($unsigned(wire2) ?
                             reg6 : (wire2 >> wire1))) : ((+reg7[(1'h0):(1'h0)]) <= ($unsigned(reg6) ^ wire3)));
  assign wire9 = (~$unsigned((!reg7[(1'h1):(1'h0)])));
  assign wire10 = reg7[(2'h2):(1'h1)];
  assign wire11 = (^~$signed(($unsigned(wire1) ?
                      reg7 : (wire5 ? wire4 : wire10))));
  assign wire12 = wire8;
  assign wire13 = (~&(~^{wire9[(4'h9):(1'h0)]}));
  module14 #() modinst31 (wire30, clk, wire1, wire13, wire5, wire8);
  assign wire32 = (|(~&wire11));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire18;
  input wire signed [(2'h3):(1'h0)] wire17;
  input wire signed [(3'h7):(1'h0)] wire16;
  input wire [(2'h3):(1'h0)] wire15;
  wire [(3'h5):(1'h0)] wire29;
  wire [(4'hb):(1'h0)] wire28;
  wire [(4'hb):(1'h0)] wire27;
  wire [(4'h9):(1'h0)] wire26;
  wire signed [(3'h4):(1'h0)] wire23;
  wire signed [(3'h4):(1'h0)] wire22;
  wire signed [(4'h8):(1'h0)] wire19;
  reg signed [(3'h5):(1'h0)] reg25 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg24 = (1'h0);
  reg [(3'h7):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg20 = (1'h0);
  assign y = {wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire23,
                 wire22,
                 wire19,
                 reg25,
                 reg24,
                 reg21,
                 reg20,
                 (1'h0)};
  assign wire19 = wire17[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg20 <= $unsigned(($signed($unsigned(wire18)) != (wire16[(1'h0):(1'h0)] <= wire18)));
      if ({$unsigned($signed(wire17))})
        begin
          reg21 <= ((~&(-{reg20})) | ($signed((-wire16)) ?
              (8'ha4) : $unsigned($signed((8'haf)))));
        end
      else
        begin
          reg21 <= $signed(((!$signed(reg21)) >> $unsigned($signed(wire16))));
        end
    end
  assign wire22 = ($signed({(reg20 ?
                          wire19 : wire16)}) >= wire17[(1'h0):(1'h0)]);
  assign wire23 = ($signed(((&wire17) ?
                      {reg21} : (reg21 >= wire18))) ~^ wire17);
  always
    @(posedge clk) begin
      reg24 <= $unsigned($signed(wire17[(1'h1):(1'h1)]));
      reg25 <= ({{$signed(wire16)}} ?
          ((~|wire15[(2'h2):(1'h0)]) ^ wire22[(1'h0):(1'h0)]) : (((reg20 ?
                      (8'ha2) : reg21) ?
                  {wire17} : $unsigned(wire19)) ?
              wire16[(1'h1):(1'h1)] : ($signed(wire19) ?
                  wire15 : $signed(wire19))));
    end
  assign wire26 = wire23[(2'h2):(2'h2)];
  assign wire27 = (~&(wire18 ? $signed($signed((8'haa))) : (8'ha4)));
  assign wire28 = (-reg21[(1'h0):(1'h0)]);
  assign wire29 = (^reg21);
endmodule