(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param47 = (&(^(((8'h9f) <<< (8'ha6)) ^~ {(8'hb0)}))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire45;
  wire signed [(4'hb):(1'h0)] wire6;
  wire signed [(4'h9):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire4;
  assign y = {wire45, wire6, wire5, wire4, (1'h0)};
  assign wire4 = ((($unsigned(wire2) ?
                         {wire3} : $unsigned((8'hae))) * (&(^~wire3))) ?
                     $signed(wire1[(2'h2):(2'h2)]) : wire2[(3'h7):(2'h2)]);
  assign wire5 = (+$unsigned({(wire2 < wire3)}));
  assign wire6 = $unsigned((+((+wire4) ? {wire4} : (~|(8'hb0)))));
  module7 #() modinst46 (wire45, clk, wire1, wire6, wire0, wire2);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire11;
  input wire [(3'h6):(1'h0)] wire10;
  input wire [(4'h9):(1'h0)] wire9;
  input wire [(4'ha):(1'h0)] wire8;
  wire [(3'h5):(1'h0)] wire44;
  wire signed [(2'h3):(1'h0)] wire43;
  wire [(4'hb):(1'h0)] wire42;
  wire [(3'h4):(1'h0)] wire41;
  wire [(3'h6):(1'h0)] wire40;
  wire signed [(2'h3):(1'h0)] wire39;
  wire [(3'h5):(1'h0)] wire30;
  reg signed [(4'ha):(1'h0)] reg38 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg37 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg36 = (1'h0);
  reg [(3'h5):(1'h0)] reg35 = (1'h0);
  reg [(4'hb):(1'h0)] reg34 = (1'h0);
  reg [(2'h2):(1'h0)] reg33 = (1'h0);
  reg [(4'ha):(1'h0)] reg32 = (1'h0);
  assign y = {wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire30,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 (1'h0)};
  module12 #() modinst31 (wire30, clk, wire9, wire8, wire10, wire11);
  always
    @(posedge clk) begin
      if ($unsigned($signed((+(wire11 ^~ wire11)))))
        begin
          reg32 <= wire8[(3'h4):(2'h3)];
        end
      else
        begin
          if ({{$signed($unsigned(reg32))}})
            begin
              reg32 <= (wire8[(4'h8):(4'h8)] >= wire11[(2'h3):(2'h3)]);
              reg33 <= (wire8 ?
                  $signed(wire8[(4'h8):(1'h1)]) : wire30[(3'h5):(3'h4)]);
            end
          else
            begin
              reg32 <= $signed(((!reg32[(2'h3):(2'h2)]) && $unsigned($signed(reg33))));
            end
        end
      if ((!(($signed(wire10) <= (+reg33)) ?
          wire9 : $signed((wire8 ? reg33 : wire30)))))
        begin
          if ((wire10[(2'h3):(2'h3)] ?
              $signed(((reg32 ~^ wire9) ?
                  (reg33 ?
                      wire10 : (8'ha4)) : $signed((8'hac)))) : $signed($unsigned($unsigned(wire8)))))
            begin
              reg34 <= $signed($signed($signed((wire10 & wire10))));
              reg35 <= $signed(($signed((reg34 ?
                  wire8 : wire30)) < $unsigned((wire11 * reg33))));
            end
          else
            begin
              reg34 <= $signed(({(wire30 ?
                      reg33 : (8'haa))} | (-$signed(wire10))));
              reg35 <= reg34;
            end
        end
      else
        begin
          if ($signed(wire10[(3'h5):(2'h2)]))
            begin
              reg34 <= (+{reg35});
            end
          else
            begin
              reg34 <= reg32[(2'h2):(1'h0)];
            end
        end
      if (((+$unsigned(wire10)) & wire30))
        begin
          reg36 <= (&($signed($signed(wire11)) ?
              ((8'ha8) ~^ wire10[(2'h3):(1'h1)]) : reg34));
          reg37 <= $unsigned(((|reg32[(3'h4):(1'h1)]) > ({reg35} ?
              {reg32} : wire11[(3'h5):(2'h2)])));
          reg38 <= $signed((reg35[(1'h1):(1'h1)] ?
              (-(+reg37)) : ((-reg32) | (reg33 <= wire8))));
        end
      else
        begin
          reg36 <= (((wire11 ^ (~^reg32)) ?
                  $unsigned(wire8[(3'h6):(2'h2)]) : reg34[(1'h1):(1'h0)]) ?
              (~|reg35[(1'h0):(1'h0)]) : (-$unsigned(reg38)));
          reg37 <= ($unsigned({(reg33 <= reg35)}) ?
              $unsigned(wire8) : $signed(wire11));
        end
    end
  assign wire39 = ($signed(($unsigned(reg36) < wire10[(3'h4):(2'h3)])) ?
                      $unsigned($signed((wire8 & (8'ha4)))) : ((~$signed(wire11)) - ($unsigned(reg35) ^ (reg37 ?
                          wire30 : reg33))));
  assign wire40 = $unsigned({reg32[(4'h9):(3'h7)]});
  assign wire41 = wire11[(2'h2):(1'h1)];
  assign wire42 = $signed(wire10[(3'h5):(3'h4)]);
  assign wire43 = $unsigned(wire42);
  assign wire44 = wire11;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param29 = {(({(8'haf)} <<< ((8'h9d) ? (8'ha6) : (8'haa))) ^ ({(8'h9e)} * ((8'had) ? (8'h9e) : (8'h9d))))})
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire16;
  input wire [(3'h6):(1'h0)] wire15;
  input wire [(3'h4):(1'h0)] wire14;
  input wire signed [(3'h7):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire28;
  wire signed [(3'h4):(1'h0)] wire27;
  wire signed [(3'h4):(1'h0)] wire26;
  wire [(2'h2):(1'h0)] wire25;
  wire signed [(3'h4):(1'h0)] wire24;
  wire signed [(4'hb):(1'h0)] wire23;
  wire [(3'h7):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  wire [(3'h7):(1'h0)] wire19;
  wire signed [(4'h9):(1'h0)] wire18;
  wire [(4'ha):(1'h0)] wire17;
  assign y = {wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 (1'h0)};
  assign wire17 = $unsigned(((wire15 + $signed((8'ha3))) ?
                      $signed((wire15 ?
                          wire16 : wire16)) : $unsigned(wire16[(2'h2):(1'h1)])));
  assign wire18 = {$unsigned((|(wire13 >>> wire16)))};
  assign wire19 = $signed(wire14[(3'h4):(1'h0)]);
  assign wire20 = wire18[(2'h2):(2'h2)];
  assign wire21 = {$unsigned({wire18})};
  assign wire22 = (($signed((wire18 | wire20)) ?
                      ($signed(wire20) ?
                          (wire18 ?
                              (8'hae) : (8'hac)) : (wire21 < (8'ha1))) : (-(wire20 ?
                          wire20 : wire14))) && wire13[(2'h2):(2'h2)]);
  assign wire23 = $unsigned(($signed((!(8'ha7))) > ((wire20 ?
                      (8'ha2) : wire15) <<< (~wire21))));
  assign wire24 = $unsigned(wire22);
  assign wire25 = (!($signed($unsigned(wire21)) ?
                      $signed($signed(wire18)) : (wire20[(1'h0):(1'h0)] ?
                          wire16[(3'h4):(1'h1)] : (wire22 ~^ wire18))));
  assign wire26 = (8'ha2);
  assign wire27 = {wire26};
  assign wire28 = $signed(wire22);
endmodule