(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire74;
  wire [(2'h3):(1'h0)] wire73;
  wire signed [(4'h9):(1'h0)] wire72;
  wire [(2'h2):(1'h0)] wire71;
  wire signed [(3'h6):(1'h0)] wire69;
  assign y = {wire74, wire73, wire72, wire71, wire69, (1'h0)};
  module4 #() modinst70 (.wire8(wire0), .y(wire69), .clk(clk), .wire6(wire3), .wire7(wire1), .wire5(wire2));
  assign wire71 = (-wire1);
  assign wire72 = (($signed((~&wire0)) ?
                      (~&$signed((8'ha9))) : wire3) >= wire3);
  assign wire73 = (((+(~|wire69)) ?
                          (~|wire0[(3'h5):(2'h2)]) : $unsigned($unsigned((8'ha1)))) ?
                      (wire71[(1'h0):(1'h0)] ?
                          (&{wire1}) : ($signed(wire3) ^ wire0)) : (~&(^{wire72})));
  assign wire74 = $unsigned($signed((~wire1)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param68 = (((((8'ha1) ^~ (8'ha5)) ? ((8'ha5) > (8'ha6)) : (8'hac)) ? (|((8'ha1) ? (8'hae) : (8'ha9))) : ((^(8'had)) * ((8'h9e) < (8'ha4)))) ? (^{(^(8'had))}) : ((((8'ha9) == (8'hac)) ? ((8'ha9) ? (8'ha9) : (8'ha3)) : (~|(8'ha1))) ? ({(8'h9c)} <= (~&(8'ha1))) : (~((8'haf) ? (8'ha9) : (8'h9e))))))
(y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire5;
  input wire [(4'h9):(1'h0)] wire6;
  input wire [(4'h8):(1'h0)] wire7;
  input wire signed [(4'ha):(1'h0)] wire8;
  wire [(2'h3):(1'h0)] wire66;
  wire [(4'hb):(1'h0)] wire42;
  wire signed [(3'h7):(1'h0)] wire41;
  wire signed [(2'h2):(1'h0)] wire39;
  wire signed [(4'ha):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire37;
  wire signed [(3'h7):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire11;
  wire signed [(3'h7):(1'h0)] wire32;
  reg signed [(3'h4):(1'h0)] reg40 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg35 = (1'h0);
  reg [(3'h4):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg9 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg10 = (1'h0);
  assign y = {wire66,
                 wire42,
                 wire41,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire11,
                 wire32,
                 reg40,
                 reg35,
                 reg34,
                 reg9,
                 reg10,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg9 <= {{$unsigned(((8'ha7) ? wire7 : wire6))}};
      reg10 <= $signed(wire5[(3'h5):(3'h5)]);
    end
  assign wire11 = wire8;
  module12 #() modinst33 (.y(wire32), .wire16(wire5), .wire13(reg9), .clk(clk), .wire14(wire11), .wire15(wire6));
  always
    @(posedge clk) begin
      reg34 <= {({(8'had)} ? $signed($signed((8'ha3))) : {wire5})};
      reg35 <= wire6[(1'h1):(1'h0)];
    end
  assign wire36 = $signed((((wire5 == reg34) >> reg9[(3'h4):(1'h1)]) > $signed(reg9)));
  assign wire37 = (+(((reg34 | (8'ha1)) || ((8'hae) ? wire6 : wire5)) ?
                      {(~|wire11)} : $unsigned($unsigned(wire8))));
  assign wire38 = wire11[(4'h9):(3'h5)];
  assign wire39 = (^(8'h9c));
  always
    @(posedge clk) begin
      reg40 <= (($unsigned((wire11 ? (8'had) : wire8)) ?
          wire38[(1'h0):(1'h0)] : ($signed(wire38) ?
              wire36 : $unsigned(wire36))) >>> (8'ha3));
    end
  assign wire41 = wire11;
  assign wire42 = (((reg40[(2'h3):(1'h0)] >> {wire32}) ?
                          (wire6[(2'h2):(2'h2)] ~^ $signed(wire11)) : $unsigned((wire7 ?
                              wire37 : wire11))) ?
                      {(+$signed(wire6))} : {wire11});
  module43 #() modinst67 (wire66, clk, wire37, wire7, reg10, reg35);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module43  (y, clk, wire47, wire46, wire45, wire44);
  output wire [(32'h92):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire47;
  input wire signed [(2'h3):(1'h0)] wire46;
  input wire [(4'ha):(1'h0)] wire45;
  input wire [(3'h5):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire65;
  wire signed [(4'hb):(1'h0)] wire64;
  wire [(4'hb):(1'h0)] wire63;
  wire [(4'hb):(1'h0)] wire62;
  wire signed [(4'h8):(1'h0)] wire61;
  wire [(2'h2):(1'h0)] wire60;
  wire signed [(4'h9):(1'h0)] wire59;
  wire [(4'ha):(1'h0)] wire58;
  wire signed [(4'hb):(1'h0)] wire57;
  wire signed [(4'h9):(1'h0)] wire50;
  reg [(2'h3):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg55 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg54 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg53 = (1'h0);
  reg [(3'h6):(1'h0)] reg52 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg51 = (1'h0);
  reg [(4'h9):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg48 = (1'h0);
  assign y = {wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire50,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg49,
                 reg48,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg48 <= $signed($signed(($unsigned(wire47) ?
          $signed(wire44) : $signed(wire47))));
      reg49 <= (!(wire45 ?
          (((8'ha1) & wire47) ?
              $signed(reg48) : {reg48}) : $unsigned((^wire44))));
    end
  assign wire50 = (((^(+reg49)) != (|$signed(wire47))) <<< (^~$signed((wire44 | reg49))));
  always
    @(posedge clk) begin
      reg51 <= (8'had);
      if (((~^$signed((wire50 ? reg48 : wire44))) ?
          (wire46 > ($signed(wire44) ?
              (reg48 ^~ wire44) : (wire50 << (8'haa)))) : ($signed((wire44 - reg51)) ?
              ($signed(wire46) ^~ (+wire44)) : ($unsigned(wire44) ?
                  (^reg48) : (reg51 || wire50)))))
        begin
          reg52 <= (^~$unsigned({(reg51 || wire46)}));
          reg53 <= $unsigned(reg51[(1'h0):(1'h0)]);
        end
      else
        begin
          reg52 <= (~&(^~($unsigned(wire44) < (reg48 > reg53))));
          if (wire50[(4'h8):(3'h7)])
            begin
              reg53 <= (&wire47);
              reg54 <= {reg52};
              reg55 <= $unsigned(wire47);
            end
          else
            begin
              reg53 <= (~|{$signed((wire50 * wire50))});
            end
        end
      reg56 <= (wire47[(3'h6):(2'h2)] ~^ $unsigned($signed($signed((8'ha7)))));
    end
  assign wire57 = (+($signed(((8'ha9) << wire46)) == $unsigned(reg53)));
  assign wire58 = (reg53 ? (~|{((8'haf) ? reg55 : reg55)}) : wire57);
  assign wire59 = $signed(wire47[(3'h5):(1'h1)]);
  assign wire60 = wire57;
  assign wire61 = ($signed((8'haa)) ? {$signed((wire59 | reg54))} : wire59);
  assign wire62 = (($signed($signed(wire46)) ?
                          wire61[(3'h4):(2'h2)] : {reg54}) ?
                      wire57[(2'h2):(2'h2)] : (~&({wire60} ?
                          reg49[(1'h0):(1'h0)] : (reg48 <= reg56))));
  assign wire63 = wire46[(2'h3):(2'h3)];
  assign wire64 = ((^~(!(wire58 ^ reg54))) <<< (($unsigned(reg53) ?
                      (8'ha3) : (wire50 && reg52)) != ((!(8'ha7)) >>> wire59[(2'h3):(1'h1)])));
  assign wire65 = $signed({$signed((8'ha8))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param31 = ((({(8'haf)} || {(8'h9e)}) ? (((8'hab) - (8'haf)) >>> {(8'ha2)}) : ((^~(8'haf)) | (&(8'ha6)))) >>> ((((8'had) <<< (8'h9c)) ? (~&(8'h9c)) : {(8'ha2)}) ~^ ({(8'ha8)} ? ((8'h9d) << (8'hab)) : (!(8'ha3))))))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire16;
  input wire signed [(4'h9):(1'h0)] wire15;
  input wire [(4'ha):(1'h0)] wire14;
  input wire signed [(2'h3):(1'h0)] wire13;
  wire signed [(3'h6):(1'h0)] wire30;
  wire [(3'h5):(1'h0)] wire29;
  wire [(4'h9):(1'h0)] wire28;
  wire signed [(2'h2):(1'h0)] wire27;
  wire [(3'h7):(1'h0)] wire26;
  wire signed [(2'h3):(1'h0)] wire19;
  wire [(4'h8):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire17;
  reg [(4'h8):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg24 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg [(3'h5):(1'h0)] reg22 = (1'h0);
  reg [(4'ha):(1'h0)] reg21 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg20 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire19,
                 wire18,
                 wire17,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  assign wire17 = $signed((8'ha6));
  assign wire18 = $unsigned(wire14);
  assign wire19 = wire13[(2'h2):(1'h1)];
  always
    @(posedge clk) begin
      if ($signed(wire18))
        begin
          if (wire18[(3'h7):(3'h7)])
            begin
              reg20 <= wire13[(2'h2):(2'h2)];
              reg21 <= {wire18[(3'h4):(1'h0)]};
            end
          else
            begin
              reg20 <= ($signed(($signed(wire14) ?
                  wire18[(4'h8):(4'h8)] : $signed((8'hb0)))) != (^(8'hac)));
              reg21 <= ({((^~reg20) >= reg20[(3'h7):(2'h3)])} ^~ $unsigned(((8'ha9) == (wire19 - wire19))));
              reg22 <= wire14;
            end
        end
      else
        begin
          reg20 <= wire18;
          if ($unsigned(reg21))
            begin
              reg21 <= wire18;
              reg22 <= ((((wire17 >> (8'h9f)) * (~^wire14)) ?
                  $signed((wire17 * wire16)) : wire19[(1'h1):(1'h0)]) ^ {reg22[(2'h2):(1'h1)]});
              reg23 <= $unsigned(wire16);
            end
          else
            begin
              reg21 <= wire13[(2'h2):(1'h1)];
              reg22 <= (8'h9d);
              reg23 <= (&((8'ha8) ? wire17[(3'h7):(3'h4)] : (^~{reg23})));
            end
        end
      reg24 <= ((+((wire16 >>> reg20) ?
              wire14[(3'h4):(1'h1)] : $signed(wire19))) ?
          $signed((wire17[(3'h6):(1'h0)] ?
              (~&reg20) : reg22)) : (wire17 == reg20));
      reg25 <= $unsigned(wire18[(3'h7):(1'h0)]);
    end
  assign wire26 = $signed({$signed($unsigned(wire14))});
  assign wire27 = reg24[(1'h0):(1'h0)];
  assign wire28 = $signed(wire13[(2'h3):(1'h1)]);
  assign wire29 = (~&(((-reg20) ? (reg20 ? reg21 : reg21) : $signed(reg22)) ?
                      {(!wire14)} : {((8'ha0) ? reg24 : (8'h9e))}));
  assign wire30 = $unsigned((+(~(8'haf))));
endmodule