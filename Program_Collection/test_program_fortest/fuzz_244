(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param55 = ((!(8'ha0)) >>> (^~{(8'h9c)})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire54;
  wire signed [(3'h7):(1'h0)] wire53;
  wire [(4'hb):(1'h0)] wire51;
  wire signed [(3'h6):(1'h0)] wire49;
  assign y = {wire54, wire53, wire51, wire49, (1'h0)};
  module4 #() modinst50 (.wire7(wire0), .y(wire49), .wire5(wire2), .clk(clk), .wire6(wire3), .wire8(wire1));
  module11 #() modinst52 (wire51, clk, wire3, wire2, wire0, wire49);
  assign wire53 = (!wire51[(4'ha):(1'h1)]);
  assign wire54 = ($signed((8'ha3)) ?
                      ($unsigned((wire51 ? wire53 : wire2)) ?
                          wire3 : {(wire2 + wire2)}) : (wire49 ?
                          wire3[(1'h1):(1'h1)] : $signed(wire1)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param48 = {(+(+{(8'h9f)}))})
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h1e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire signed [(2'h3):(1'h0)] wire7;
  input wire [(4'hb):(1'h0)] wire6;
  input wire signed [(4'hb):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire46;
  wire signed [(4'hb):(1'h0)] wire23;
  wire [(4'h8):(1'h0)] wire10;
  wire [(3'h7):(1'h0)] wire9;
  assign y = {wire46, wire23, wire10, wire9, (1'h0)};
  assign wire9 = ($signed((~^(wire7 ? wire5 : wire8))) ^ ((~&$signed(wire8)) ?
                     (8'ha5) : (~^{wire6})));
  assign wire10 = wire5[(4'h8):(3'h7)];
  module11 #() modinst24 (wire23, clk, wire10, wire9, wire6, wire5);
  module25 #() modinst47 (wire46, clk, wire6, wire9, wire23, wire8);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25  (y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire29;
  input wire [(2'h3):(1'h0)] wire28;
  input wire [(4'ha):(1'h0)] wire27;
  input wire [(4'hb):(1'h0)] wire26;
  wire signed [(2'h3):(1'h0)] wire41;
  wire [(3'h7):(1'h0)] wire40;
  wire [(3'h5):(1'h0)] wire39;
  wire [(4'h9):(1'h0)] wire38;
  wire [(2'h2):(1'h0)] wire37;
  wire signed [(4'hb):(1'h0)] wire36;
  wire [(2'h2):(1'h0)] wire35;
  wire signed [(2'h3):(1'h0)] wire34;
  wire signed [(3'h6):(1'h0)] wire30;
  reg signed [(2'h2):(1'h0)] reg45 = (1'h0);
  reg [(3'h4):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg43 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg42 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg33 = (1'h0);
  reg [(3'h6):(1'h0)] reg32 = (1'h0);
  reg [(4'hb):(1'h0)] reg31 = (1'h0);
  assign y = {wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire30,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg33,
                 reg32,
                 reg31,
                 (1'h0)};
  assign wire30 = wire27;
  always
    @(posedge clk) begin
      reg31 <= wire29;
    end
  always
    @(posedge clk) begin
      reg32 <= $signed((($unsigned(wire29) ? (8'ha0) : {wire27}) ?
          $signed(wire29[(2'h2):(2'h2)]) : wire30[(1'h0):(1'h0)]));
      reg33 <= (^(wire30[(1'h1):(1'h0)] != wire26[(1'h0):(1'h0)]));
    end
  assign wire34 = ($unsigned((wire27[(2'h2):(1'h1)] ?
                          $unsigned(wire28) : (!(8'ha4)))) ?
                      wire28 : wire28);
  assign wire35 = reg32;
  assign wire36 = (&({wire27[(2'h2):(2'h2)]} ~^ ((wire30 ?
                      wire35 : wire26) * reg31)));
  assign wire37 = (^($unsigned($unsigned(reg33)) ?
                      wire27[(1'h0):(1'h0)] : wire30[(3'h4):(3'h4)]));
  assign wire38 = wire34[(2'h2):(1'h0)];
  assign wire39 = ($signed((^$signed(wire35))) ?
                      ({wire30[(1'h0):(1'h0)]} != wire28) : (wire38 || $signed((wire28 ^~ (8'ha4)))));
  assign wire40 = wire30;
  assign wire41 = $signed(wire28);
  always
    @(posedge clk) begin
      reg42 <= $unsigned((reg31 << (&(!wire29))));
    end
  always
    @(posedge clk) begin
      reg43 <= (!$signed(((wire27 ~^ wire28) ?
          $signed(wire38) : (wire26 ? wire27 : (8'ha5)))));
      reg44 <= ($signed({$signed(reg33)}) >= wire38);
      reg45 <= wire29[(3'h5):(3'h5)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param22 = ((({(8'ha2)} | ((8'ha0) ? (8'ha2) : (8'h9f))) | ((&(8'hb0)) ^~ ((8'ha6) ? (8'ha1) : (8'h9c)))) ? ((&((8'ha9) ^~ (8'haa))) ? (((8'ha7) ? (8'haf) : (8'ha2)) ? (8'ha8) : ((8'ha1) ? (8'h9c) : (8'ha9))) : (((8'hae) ? (8'haa) : (8'hab)) ? ((8'ha4) * (8'ha4)) : ((8'h9e) > (8'ha7)))) : (~&(8'ha8))))
(y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h17):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire15;
  input wire signed [(3'h5):(1'h0)] wire14;
  input wire signed [(4'h9):(1'h0)] wire13;
  input wire [(3'h6):(1'h0)] wire12;
  wire signed [(4'ha):(1'h0)] wire21;
  wire signed [(2'h2):(1'h0)] wire20;
  wire [(2'h2):(1'h0)] wire19;
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg17 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg16 = (1'h0);
  assign y = {wire21, wire20, wire19, reg18, reg17, reg16, (1'h0)};
  always
    @(posedge clk) begin
      reg16 <= wire12;
      if ({wire12[(1'h0):(1'h0)]})
        begin
          reg17 <= {{(-(~wire12))}};
          reg18 <= ($unsigned((~|(wire12 > wire13))) ?
              $signed(reg16) : ((((8'hac) ^~ wire12) ?
                  (~&wire12) : {wire15}) >= wire15));
        end
      else
        begin
          reg17 <= (~|($unsigned(reg17[(1'h0):(1'h0)]) ?
              $unsigned((^~wire13)) : $unsigned({(8'haf)})));
        end
    end
  assign wire19 = (+wire14[(1'h1):(1'h0)]);
  assign wire20 = (wire15 >= ((^(8'hb0)) == $unsigned(wire12[(2'h3):(1'h1)])));
  assign wire21 = ((&$signed($unsigned(wire12))) ?
                      reg16 : (wire13[(3'h4):(3'h4)] ?
                          (reg16[(1'h1):(1'h0)] >= $unsigned(wire15)) : wire13));
endmodule