(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param46 = ((~(-((8'haf) > (8'ha1)))) >> ((((8'hae) - (8'h9f)) ? {(8'haa)} : ((8'had) - (8'ha6))) + (~&(+(8'ha8))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h39):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire [(2'h2):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire42;
  wire [(4'hb):(1'h0)] wire40;
  wire [(4'ha):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  reg signed [(3'h5):(1'h0)] reg45 = (1'h0);
  reg [(4'hb):(1'h0)] reg44 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg43 = (1'h0);
  assign y = {wire42, wire40, wire5, wire4, reg45, reg44, reg43, (1'h0)};
  assign wire4 = (wire0 ? wire1 : wire0[(1'h1):(1'h1)]);
  assign wire5 = $signed(wire1);
  module6 #() modinst41 (wire40, clk, wire4, wire2, wire3, wire1);
  assign wire42 = $signed($signed(wire2[(3'h6):(3'h5)]));
  always
    @(posedge clk) begin
      if ((~|wire1))
        begin
          reg43 <= $unsigned({(((8'hab) * wire42) >> wire40[(2'h2):(2'h2)])});
          reg44 <= ({$unsigned($unsigned(wire1))} - $unsigned(wire3));
          reg45 <= (8'ha2);
        end
      else
        begin
          if ((|($unsigned((wire1 ?
              wire1 : reg45)) & (reg43[(1'h0):(1'h0)] > (wire1 ?
              wire0 : (8'hab))))))
            begin
              reg43 <= (|wire3);
              reg44 <= (wire5[(4'h8):(3'h5)] != (|wire4));
            end
          else
            begin
              reg43 <= (($unsigned($unsigned(reg44)) ?
                  (wire5 ?
                      wire42 : (8'hae)) : (~((8'ha2) < wire3))) != (reg43[(1'h1):(1'h0)] ?
                  wire5[(4'ha):(2'h3)] : ($unsigned(wire42) ^~ $signed(wire40))));
              reg44 <= $signed((wire2[(1'h0):(1'h0)] != reg45));
              reg45 <= reg44[(4'ha):(1'h0)];
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire7, wire8, wire9, wire10);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire7;
  input wire [(3'h4):(1'h0)] wire8;
  input wire [(2'h2):(1'h0)] wire9;
  input wire [(3'h6):(1'h0)] wire10;
  wire [(2'h3):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire14;
  wire [(4'h8):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire16;
  wire [(3'h6):(1'h0)] wire19;
  wire [(3'h6):(1'h0)] wire20;
  wire signed [(2'h3):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire22;
  wire [(4'hb):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire38;
  reg [(3'h6):(1'h0)] reg12 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg13 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg17 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg18 = (1'h0);
  assign y = {wire11,
                 wire14,
                 wire15,
                 wire16,
                 wire19,
                 wire20,
                 wire21,
                 wire22,
                 wire23,
                 wire38,
                 reg12,
                 reg13,
                 reg17,
                 reg18,
                 (1'h0)};
  assign wire11 = wire7[(2'h2):(1'h1)];
  always
    @(posedge clk) begin
      reg12 <= $signed((wire11[(1'h1):(1'h0)] ?
          {wire11} : $unsigned($signed(wire9))));
      reg13 <= wire10[(3'h6):(2'h2)];
    end
  assign wire14 = $unsigned((((~&wire7) & (!wire11)) ?
                      {$signed(reg13)} : (~&reg12)));
  assign wire15 = $unsigned(wire9);
  assign wire16 = ($unsigned((8'h9f)) ~^ $unsigned(wire7[(4'h9):(3'h7)]));
  always
    @(posedge clk) begin
      reg17 <= (wire8 ?
          $signed({(~^wire7)}) : (wire10 ?
              ((reg12 ? wire8 : wire7) * {wire10}) : (^~wire14)));
      reg18 <= (($unsigned((~|wire9)) >= $unsigned((wire14 > (8'ha4)))) ?
          reg17 : $signed((8'ha3)));
    end
  assign wire19 = (reg18[(2'h3):(2'h3)] ~^ $unsigned($signed(wire8[(1'h0):(1'h0)])));
  assign wire20 = (^((-wire10) >>> (~^$unsigned(wire16))));
  assign wire21 = (|{wire14});
  assign wire22 = wire15[(3'h4):(1'h0)];
  assign wire23 = {$unsigned(((wire9 ? reg13 : wire21) ?
                          $unsigned((8'ha1)) : (wire8 ? wire22 : reg12)))};
  module24 #() modinst39 (.clk(clk), .wire26(wire11), .wire28(wire16), .wire25(wire23), .wire27(reg18), .y(wire38));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module24
#(parameter param37 = ((8'hab) < (~|(!(+(8'ha6))))))
(y, clk, wire28, wire27, wire26, wire25);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire28;
  input wire [(4'ha):(1'h0)] wire27;
  input wire [(2'h3):(1'h0)] wire26;
  input wire [(2'h2):(1'h0)] wire25;
  wire signed [(4'hb):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire34;
  wire [(4'h9):(1'h0)] wire33;
  wire [(2'h2):(1'h0)] wire32;
  wire signed [(4'ha):(1'h0)] wire31;
  wire signed [(3'h5):(1'h0)] wire30;
  wire [(3'h5):(1'h0)] wire29;
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 (1'h0)};
  assign wire29 = $unsigned((!wire28));
  assign wire30 = wire25;
  assign wire31 = $unsigned(((~|$unsigned(wire26)) ?
                      {$signed(wire26)} : (wire25 ?
                          (~&wire26) : (wire25 ? wire27 : wire27))));
  assign wire32 = $signed({(wire28[(1'h0):(1'h0)] ?
                          (wire30 ? wire25 : wire29) : $unsigned((8'ha7)))});
  assign wire33 = (-wire31[(2'h2):(2'h2)]);
  assign wire34 = (($unsigned($unsigned(wire30)) ?
                      wire33[(1'h0):(1'h0)] : (wire28 ?
                          (wire32 ^ wire27) : $unsigned(wire31))) > (^$signed((-wire27))));
  assign wire35 = ({$signed((8'had))} >= wire28[(1'h1):(1'h0)]);
  assign wire36 = ((+({(8'h9e)} ? $signed(wire27) : (&wire27))) ?
                      $unsigned({(wire35 ?
                              wire26 : wire30)}) : $unsigned($unsigned({wire32})));
endmodule