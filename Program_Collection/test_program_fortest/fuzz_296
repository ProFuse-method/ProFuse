(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h98):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire22;
  wire [(3'h6):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire20;
  wire signed [(2'h2):(1'h0)] wire15;
  wire [(4'h9):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg19 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg17 = (1'h0);
  reg [(4'hb):(1'h0)] reg16 = (1'h0);
  reg [(3'h5):(1'h0)] reg14 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg13 = (1'h0);
  reg [(4'ha):(1'h0)] reg12 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg11 = (1'h0);
  reg [(4'hb):(1'h0)] reg10 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg6 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire20,
                 wire15,
                 wire5,
                 wire4,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = {{{wire0[(1'h1):(1'h0)]}}};
  assign wire5 = $unsigned((wire3[(1'h1):(1'h0)] ?
                     ((~^wire1) ?
                         {wire0} : (^(8'ha5))) : $signed(wire4[(2'h3):(2'h3)])));
  always
    @(posedge clk) begin
      reg6 <= wire2;
      reg7 <= $signed($signed(wire3));
    end
  always
    @(posedge clk) begin
      if ((~^(($signed(wire0) ^~ (wire0 ? wire5 : wire0)) ?
          ((wire0 >>> reg6) >> $unsigned((8'ha5))) : ({wire2} ?
              $unsigned((8'hab)) : $signed(wire1)))))
        begin
          if ({(((~&reg7) ?
                  $unsigned(wire4) : wire4) > $unsigned($unsigned(wire4)))})
            begin
              reg8 <= wire2[(4'hb):(1'h1)];
              reg9 <= ($unsigned(((wire5 ^~ wire2) ?
                      {reg7} : $signed((8'h9c)))) ?
                  reg7[(2'h3):(2'h3)] : ((8'hae) ?
                      $unsigned(((8'ha7) ?
                          (8'ha4) : (8'ha6))) : $unsigned($unsigned((8'haf)))));
            end
          else
            begin
              reg8 <= reg7[(3'h5):(3'h5)];
              reg9 <= wire5[(3'h6):(1'h0)];
            end
          if ({reg7[(3'h4):(1'h1)]})
            begin
              reg10 <= $signed(((!$unsigned(reg7)) <<< wire4));
            end
          else
            begin
              reg10 <= $signed($signed(wire3[(1'h1):(1'h1)]));
              reg11 <= reg9;
            end
        end
      else
        begin
          if ((reg7[(2'h3):(2'h2)] ^ $signed($signed((reg7 | wire1)))))
            begin
              reg8 <= {(+$unsigned((wire3 ^ wire1)))};
              reg9 <= wire3;
              reg10 <= ((+{(wire5 >> wire5)}) ?
                  reg6[(2'h3):(1'h1)] : $unsigned(($unsigned(reg9) ~^ (wire4 - wire2))));
            end
          else
            begin
              reg8 <= $signed($unsigned(reg7));
              reg9 <= wire5;
              reg10 <= $signed(((wire1 <= wire4) ^~ ($unsigned(wire5) * (~^reg9))));
            end
          reg11 <= ((~reg11[(3'h4):(1'h1)]) ? wire3 : reg11);
        end
      reg12 <= (reg6[(3'h4):(3'h4)] ? (reg8 ^~ reg6[(2'h3):(2'h3)]) : reg11);
    end
  always
    @(posedge clk) begin
      reg13 <= (({$signed((8'hae))} == {wire3[(3'h5):(2'h2)]}) >= {(~|(wire1 ?
              reg11 : reg9))});
      reg14 <= ((+$unsigned(wire2[(3'h4):(2'h2)])) >> wire0[(2'h2):(1'h0)]);
    end
  assign wire15 = ((reg10[(4'ha):(3'h4)] ?
                      wire4[(3'h7):(2'h3)] : $unsigned(reg11)) | reg14);
  always
    @(posedge clk) begin
      reg16 <= (-(((-reg14) - reg6[(3'h4):(1'h0)]) * (^~wire4[(3'h5):(3'h4)])));
      if ((~&(reg13 ?
          wire4 : ((reg11 ? wire0 : reg14) ? {reg9} : $signed(reg16)))))
        begin
          if (reg14)
            begin
              reg17 <= reg7;
            end
          else
            begin
              reg17 <= (~|(((^~reg7) >= reg17[(1'h0):(1'h0)]) ?
                  (reg16 ?
                      (reg13 ?
                          reg8 : reg12) : (reg14 <= wire2)) : wire1[(4'h8):(2'h2)]));
            end
          reg18 <= (!reg14[(3'h5):(3'h4)]);
        end
      else
        begin
          reg17 <= (~|(wire1 + reg16));
          reg18 <= reg14[(2'h3):(1'h0)];
          reg19 <= reg12;
        end
    end
  assign wire20 = (~(~($signed(reg16) ~^ (reg12 ? reg17 : reg19))));
  assign wire21 = $signed(reg14[(3'h5):(1'h0)]);
  assign wire22 = wire21[(2'h2):(1'h1)];
endmodule