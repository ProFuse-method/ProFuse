(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param73 = {((((8'hae) ? (8'haa) : (8'ha3)) || {(8'ha6)}) ? (~^(|(8'hab))) : ((~&(8'h9f)) ? ((8'hac) ? (8'ha8) : (8'haa)) : ((8'ha3) ? (8'hae) : (8'ha5))))})
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h9c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire0;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire3;
  wire signed [(2'h3):(1'h0)] wire72;
  wire [(2'h2):(1'h0)] wire60;
  wire signed [(3'h7):(1'h0)] wire59;
  wire [(3'h7):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire23;
  wire signed [(3'h6):(1'h0)] wire24;
  wire [(2'h3):(1'h0)] wire57;
  reg signed [(3'h7):(1'h0)] reg71 = (1'h0);
  reg [(3'h6):(1'h0)] reg70 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg69 = (1'h0);
  reg [(3'h4):(1'h0)] reg68 = (1'h0);
  reg [(2'h3):(1'h0)] reg67 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg66 = (1'h0);
  reg [(3'h6):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg64 = (1'h0);
  reg [(4'h9):(1'h0)] reg63 = (1'h0);
  reg [(4'hb):(1'h0)] reg62 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg4 = (1'h0);
  reg [(3'h6):(1'h0)] reg5 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg6 = (1'h0);
  reg [(4'hb):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg21 = (1'h0);
  reg [(4'h8):(1'h0)] reg22 = (1'h0);
  assign y = {wire72,
                 wire60,
                 wire59,
                 wire17,
                 wire23,
                 wire24,
                 wire57,
                 reg71,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg4,
                 reg5,
                 reg6,
                 reg19,
                 reg20,
                 reg21,
                 reg22,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($unsigned((8'haf)))
        begin
          reg4 <= $unsigned($signed(wire1[(1'h0):(1'h0)]));
          reg5 <= $signed({((wire2 & wire2) ? reg4[(1'h1):(1'h0)] : wire3)});
        end
      else
        begin
          reg4 <= (~wire0);
        end
      reg6 <= ((wire2[(3'h4):(2'h3)] < wire3) >> $unsigned((^~((8'ha9) == reg5))));
    end
  module7 #() modinst18 (.clk(clk), .wire10(wire2), .wire8(reg5), .y(wire17), .wire11(reg6), .wire9(wire3));
  always
    @(posedge clk) begin
      if (reg4)
        begin
          reg19 <= (!(&(~{reg6})));
          reg20 <= {$unsigned(((~|reg5) ? wire0 : (reg4 != wire17)))};
        end
      else
        begin
          reg19 <= reg6[(3'h5):(3'h4)];
          reg20 <= (reg20[(1'h1):(1'h0)] ^ ({reg20[(1'h0):(1'h0)]} <<< ($signed(wire0) ?
              $signed(reg20) : reg20[(2'h2):(1'h1)])));
          reg21 <= $unsigned(reg6[(2'h3):(2'h2)]);
        end
      reg22 <= ((|{wire3[(2'h2):(1'h0)]}) <= reg20[(1'h1):(1'h1)]);
    end
  assign wire23 = (((wire1[(2'h3):(1'h0)] ?
                              (reg19 ? (8'hb0) : reg19) : $unsigned(wire1)) ?
                          $unsigned(reg19[(1'h0):(1'h0)]) : wire17[(2'h2):(1'h0)]) ?
                      (reg21 ?
                          $unsigned($signed(wire2)) : (((8'had) | reg5) << (~^reg4))) : reg6);
  assign wire24 = wire3[(2'h3):(2'h2)];
  module25 #() modinst58 (.wire28(wire17), .y(wire57), .wire26(reg22), .wire29(reg5), .wire27(reg4), .clk(clk));
  assign wire59 = ((reg20[(1'h1):(1'h0)] ^ $unsigned(wire23)) ?
                      reg5[(2'h2):(1'h1)] : wire0[(3'h7):(2'h2)]);
  module25 #() modinst61 (.y(wire60), .clk(clk), .wire29(wire24), .wire28(reg22), .wire27(wire3), .wire26(reg21));
  always
    @(posedge clk) begin
      if ($signed({$unsigned(wire1[(1'h1):(1'h0)])}))
        begin
          reg62 <= reg20;
          if ({$signed(($signed(wire57) ? wire23 : $unsigned(reg21)))})
            begin
              reg63 <= $unsigned((^~wire23));
              reg64 <= $signed((((reg19 ~^ wire17) == wire2[(2'h2):(1'h0)]) + $unsigned((^~reg22))));
            end
          else
            begin
              reg63 <= (+(((|(8'h9c)) >> $unsigned(reg22)) ?
                  (-(reg62 ? reg22 : wire1)) : reg21));
              reg64 <= {(&reg62)};
            end
          reg65 <= (reg4[(4'ha):(1'h1)] << ($signed($signed(wire57)) ?
              $unsigned($signed(reg63)) : $signed((wire60 ? wire0 : wire57))));
        end
      else
        begin
          reg62 <= wire17[(2'h3):(1'h1)];
          reg63 <= wire17[(1'h0):(1'h0)];
          reg64 <= reg20;
        end
      reg66 <= (!(8'h9d));
      if (reg5)
        begin
          reg67 <= (wire60 ? wire57 : $unsigned((~|$signed(wire1))));
          reg68 <= wire59[(1'h0):(1'h0)];
          reg69 <= wire23[(2'h3):(1'h1)];
        end
      else
        begin
          reg67 <= wire3;
          reg68 <= $unsigned(wire24[(3'h5):(1'h0)]);
          if (({{reg69[(2'h3):(1'h0)]}} ?
              ((8'h9d) ? $unsigned((!wire59)) : (-wire23)) : reg62))
            begin
              reg69 <= $unsigned((|reg66));
              reg70 <= (~|(^((wire23 <= reg62) & wire1)));
              reg71 <= $signed(wire17[(2'h3):(2'h2)]);
            end
          else
            begin
              reg69 <= reg64[(1'h0):(1'h0)];
              reg70 <= reg64[(3'h4):(1'h0)];
            end
        end
    end
  assign wire72 = (reg69 ?
                      $unsigned(($unsigned(reg69) - ((8'ha9) != reg5))) : (($signed(reg68) <= $unsigned((8'ha9))) > ((~|reg64) || {(8'ha6)})));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25  (y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h63):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire29;
  input wire [(3'h4):(1'h0)] wire28;
  input wire [(4'hb):(1'h0)] wire27;
  input wire signed [(2'h2):(1'h0)] wire26;
  wire signed [(2'h2):(1'h0)] wire51;
  wire signed [(3'h5):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire47;
  wire [(3'h5):(1'h0)] wire46;
  wire [(4'h8):(1'h0)] wire45;
  wire [(4'h8):(1'h0)] wire43;
  wire [(4'h8):(1'h0)] wire31;
  wire signed [(3'h6):(1'h0)] wire30;
  reg signed [(2'h3):(1'h0)] reg56 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg55 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg54 = (1'h0);
  reg [(2'h2):(1'h0)] reg53 = (1'h0);
  reg [(4'ha):(1'h0)] reg52 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg50 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg49 = (1'h0);
  assign y = {wire51,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire43,
                 wire31,
                 wire30,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg50,
                 reg49,
                 (1'h0)};
  assign wire30 = $signed((($signed(wire28) - ((8'ha6) ? (8'hb0) : wire27)) ?
                      $unsigned((wire28 ? wire29 : (8'ha1))) : wire29));
  assign wire31 = $unsigned(wire30[(2'h2):(2'h2)]);
  module32 #() modinst44 (wire43, clk, wire31, wire27, wire28, wire29);
  assign wire45 = ($unsigned(wire43) && {wire43[(1'h0):(1'h0)]});
  assign wire46 = $unsigned(wire29[(1'h0):(1'h0)]);
  assign wire47 = wire28[(1'h1):(1'h1)];
  assign wire48 = wire28[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      reg49 <= (8'hac);
      reg50 <= {wire47[(3'h5):(1'h0)]};
    end
  assign wire51 = ($signed($unsigned(reg50[(4'h8):(3'h4)])) ?
                      wire29[(2'h2):(2'h2)] : (wire48[(1'h0):(1'h0)] ?
                          (-{wire31}) : (wire27[(1'h1):(1'h0)] ?
                              wire31[(2'h2):(1'h1)] : $unsigned(wire47))));
  always
    @(posedge clk) begin
      reg52 <= (((8'h9e) ^~ wire48) ?
          (((~^wire45) ?
              (wire48 ?
                  wire51 : (8'ha3)) : {wire48}) * (&(!wire29))) : $unsigned(wire51[(1'h0):(1'h0)]));
      if (({{wire47[(2'h2):(1'h0)]}} ?
          {reg49} : ((((8'hab) ?
              (8'hae) : reg50) <<< wire28) != {$signed(wire30)})))
        begin
          reg53 <= (+$signed($signed((wire46 ? wire31 : wire28))));
          if ($unsigned(({$unsigned(wire43)} ?
              $unsigned($signed(wire27)) : $unsigned((|wire45)))))
            begin
              reg54 <= wire31;
              reg55 <= $signed((!$unsigned($signed((8'h9c)))));
            end
          else
            begin
              reg54 <= $signed($signed(((wire45 ?
                  reg49 : reg50) * $unsigned(reg50))));
              reg55 <= wire46[(1'h0):(1'h0)];
            end
        end
      else
        begin
          reg53 <= $signed((&wire31));
        end
      reg56 <= ((8'ha0) >= (((~^wire47) * wire51[(2'h2):(1'h1)]) ?
          (wire45[(3'h6):(2'h2)] & $signed(wire29)) : (wire31[(3'h7):(3'h4)] ?
              (8'ha4) : $signed(wire29))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param16 = ((~|{((8'ha3) ? (8'ha3) : (8'ha4))}) ? {(8'hab)} : {(((8'hac) || (8'hae)) ^ ((8'ha6) ? (8'ha9) : (8'ha8)))}))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h1b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire11;
  input wire [(2'h3):(1'h0)] wire10;
  input wire signed [(2'h3):(1'h0)] wire9;
  input wire [(3'h6):(1'h0)] wire8;
  wire [(4'hb):(1'h0)] wire15;
  wire [(3'h4):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire13;
  wire [(2'h2):(1'h0)] wire12;
  assign y = {wire15, wire14, wire13, wire12, (1'h0)};
  assign wire12 = $signed((~($unsigned(wire11) ^~ wire10)));
  assign wire13 = $signed($signed(wire8[(2'h2):(1'h1)]));
  assign wire14 = wire10;
  assign wire15 = {({wire13[(1'h1):(1'h0)]} != ((~&wire14) ?
                          (~|wire14) : (!wire10)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module32  (y, clk, wire36, wire35, wire34, wire33);
  output wire [(32'h21):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire36;
  input wire signed [(4'hb):(1'h0)] wire35;
  input wire [(2'h2):(1'h0)] wire34;
  input wire signed [(3'h6):(1'h0)] wire33;
  wire [(3'h5):(1'h0)] wire42;
  wire [(2'h2):(1'h0)] wire38;
  wire signed [(2'h3):(1'h0)] wire37;
  reg signed [(3'h5):(1'h0)] reg41 = (1'h0);
  reg [(4'h8):(1'h0)] reg40 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg39 = (1'h0);
  assign y = {wire42, wire38, wire37, reg41, reg40, reg39, (1'h0)};
  assign wire37 = wire35;
  assign wire38 = $signed({(wire33[(1'h0):(1'h0)] ^ wire33[(1'h0):(1'h0)])});
  always
    @(posedge clk) begin
      reg39 <= wire38;
      reg40 <= $signed(({(^wire37)} ?
          ((-wire35) ?
              wire35[(2'h3):(2'h2)] : ((8'hac) ?
                  wire34 : (8'haf))) : $unsigned((wire36 && wire37))));
      reg41 <= wire34;
    end
  assign wire42 = (wire35[(4'h8):(2'h3)] | {wire37[(1'h1):(1'h1)]});
endmodule