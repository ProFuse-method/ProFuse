(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire [(2'h2):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire10;
  wire signed [(2'h3):(1'h0)] wire9;
  wire [(4'h8):(1'h0)] wire8;
  wire [(2'h3):(1'h0)] wire4;
  reg [(2'h2):(1'h0)] reg7 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg5 = (1'h0);
  assign y = {wire10, wire9, wire8, wire4, reg7, reg6, reg5, (1'h0)};
  assign wire4 = $signed({$unsigned(wire2)});
  always
    @(posedge clk) begin
      if ($signed(((^(&wire2)) ^ wire4[(1'h0):(1'h0)])))
        begin
          reg5 <= $signed((((+wire4) ?
                  ((8'h9e) <<< wire3) : (wire4 ? wire3 : wire2)) ?
              $signed((~^wire1)) : wire3));
          reg6 <= (^wire1[(1'h1):(1'h0)]);
        end
      else
        begin
          reg5 <= (~^{(~&$unsigned(wire0))});
          if ((~|$signed($unsigned({(8'hac)}))))
            begin
              reg6 <= $unsigned($unsigned({((8'ha7) & wire4)}));
              reg7 <= reg6;
            end
          else
            begin
              reg6 <= (~&(~|(reg5[(2'h2):(1'h0)] ? wire1 : reg6)));
            end
        end
    end
  assign wire8 = wire0[(1'h0):(1'h0)];
  assign wire9 = (8'haf);
  assign wire10 = $unsigned(wire1);
endmodule