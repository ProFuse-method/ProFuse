(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire48;
  wire signed [(4'h8):(1'h0)] wire47;
  wire signed [(4'hb):(1'h0)] wire46;
  wire signed [(3'h5):(1'h0)] wire45;
  wire signed [(3'h7):(1'h0)] wire43;
  wire [(4'ha):(1'h0)] wire42;
  wire [(4'hb):(1'h0)] wire41;
  wire [(4'hb):(1'h0)] wire39;
  wire [(4'ha):(1'h0)] wire7;
  wire [(3'h6):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire4;
  assign y = {wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire43,
                 wire42,
                 wire41,
                 wire39,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = wire1[(1'h0):(1'h0)];
  assign wire5 = wire3;
  assign wire6 = $unsigned((((wire1 >>> wire4) - (~^(8'ha7))) * (wire4[(1'h0):(1'h0)] << wire3[(3'h4):(1'h1)])));
  assign wire7 = {((wire5[(2'h3):(1'h0)] ?
                         $signed(wire2) : $unsigned((8'haa))) == ((~wire6) ?
                         wire3[(4'h8):(1'h0)] : $signed(wire0)))};
  module8 #() modinst40 (wire39, clk, wire2, wire0, wire1, wire7);
  assign wire41 = ($signed(wire39[(3'h5):(1'h0)]) <<< (-wire3[(4'ha):(4'ha)]));
  assign wire42 = $unsigned(($signed($signed(wire5)) >> wire2));
  module14 #() modinst44 (.clk(clk), .wire18(wire41), .wire15(wire6), .wire16(wire5), .y(wire43), .wire17(wire3));
  assign wire45 = wire41[(4'hb):(2'h3)];
  assign wire46 = wire3;
  assign wire47 = wire5[(2'h3):(2'h2)];
  module14 #() modinst49 (.wire15(wire2), .wire16(wire42), .wire18(wire1), .clk(clk), .y(wire48), .wire17(wire7));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h2c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire12;
  input wire signed [(3'h7):(1'h0)] wire11;
  input wire signed [(3'h4):(1'h0)] wire10;
  input wire [(3'h6):(1'h0)] wire9;
  wire signed [(4'hb):(1'h0)] wire37;
  wire signed [(3'h7):(1'h0)] wire36;
  wire [(3'h4):(1'h0)] wire35;
  wire [(2'h3):(1'h0)] wire34;
  wire [(3'h6):(1'h0)] wire32;
  wire [(4'ha):(1'h0)] wire13;
  reg [(2'h2):(1'h0)] reg38 = (1'h0);
  assign y = {wire37, wire36, wire35, wire34, wire32, wire13, reg38, (1'h0)};
  assign wire13 = $unsigned(wire11[(3'h4):(3'h4)]);
  module14 #() modinst33 (wire32, clk, wire9, wire13, wire11, wire12);
  assign wire34 = (((~^wire12[(1'h0):(1'h0)]) ?
                      ((~^wire12) ?
                          (-wire9) : ((8'h9f) | wire10)) : (wire12[(1'h1):(1'h0)] < $unsigned(wire11))) < (wire32 ?
                      wire32 : wire11));
  assign wire35 = {($signed((wire12 ~^ wire32)) ? wire32 : (&{wire32}))};
  assign wire36 = wire12[(2'h3):(1'h0)];
  assign wire37 = $signed($signed(wire13));
  always
    @(posedge clk) begin
      reg38 <= wire36;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param31 = ((8'ha9) ? (~^((&(8'ha9)) && ((8'haa) ? (8'ha5) : (8'ha0)))) : ({{(8'ha0)}} << (~|((8'h9c) == (8'h9c))))))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire18;
  input wire [(4'ha):(1'h0)] wire17;
  input wire signed [(3'h4):(1'h0)] wire16;
  input wire signed [(3'h6):(1'h0)] wire15;
  wire [(4'ha):(1'h0)] wire30;
  wire signed [(3'h5):(1'h0)] wire29;
  wire [(4'hb):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire27;
  wire [(4'hb):(1'h0)] wire26;
  wire [(3'h6):(1'h0)] wire25;
  wire signed [(4'hb):(1'h0)] wire24;
  wire [(3'h5):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire22;
  wire [(4'h8):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  wire [(3'h6):(1'h0)] wire19;
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 (1'h0)};
  assign wire19 = wire16[(2'h3):(2'h3)];
  assign wire20 = wire16;
  assign wire21 = (~^$unsigned(wire17));
  assign wire22 = ($signed({(wire16 * wire19)}) ?
                      (^~({wire19} ?
                          {wire17} : {wire20})) : $signed($unsigned(((8'haf) ?
                          wire18 : wire19))));
  assign wire23 = $unsigned((wire22 ^ $signed({wire20})));
  assign wire24 = ((-{(wire21 ^~ wire21)}) <<< (&wire18));
  assign wire25 = ((~|wire15[(1'h1):(1'h1)]) ?
                      {(^~(wire21 ?
                              wire22 : wire24))} : ((~|(wire22 ~^ wire24)) ?
                          ((wire20 ?
                              wire24 : wire22) * (wire20 ^~ wire21)) : (~wire16)));
  assign wire26 = wire21[(3'h5):(3'h4)];
  assign wire27 = wire20;
  assign wire28 = $unsigned((^wire23));
  assign wire29 = $signed({($signed(wire22) ?
                          wire27[(4'h9):(2'h3)] : wire26[(4'h8):(1'h0)])});
  assign wire30 = $unsigned((wire28[(2'h2):(1'h1)] ?
                      {$unsigned(wire21)} : (~|wire18)));
endmodule