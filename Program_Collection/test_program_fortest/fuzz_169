(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param46 = (~|{{((8'ha7) ? (8'ha3) : (8'had))}}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire45;
  wire signed [(3'h6):(1'h0)] wire44;
  wire signed [(2'h2):(1'h0)] wire42;
  wire [(4'h8):(1'h0)] wire41;
  wire signed [(4'ha):(1'h0)] wire39;
  wire [(3'h5):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire36;
  reg signed [(2'h3):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  assign y = {wire45,
                 wire44,
                 wire42,
                 wire41,
                 wire39,
                 wire38,
                 wire36,
                 reg43,
                 reg40,
                 (1'h0)};
  module4 #() modinst37 (.y(wire36), .wire8(wire1), .wire7(wire2), .wire5(wire3), .wire6(wire0), .clk(clk));
  assign wire38 = $signed((($signed((8'ha5)) + ((8'hac) - (8'hae))) ?
                      $unsigned((~|wire1)) : wire1[(3'h6):(3'h6)]));
  assign wire39 = wire36[(2'h2):(1'h1)];
  always
    @(posedge clk) begin
      reg40 <= $unsigned(wire36[(3'h5):(2'h3)]);
    end
  assign wire41 = $unsigned((((wire2 ? wire36 : (8'hae)) ?
                          (~^wire39) : ((8'haa) > wire0)) ?
                      (!(~&wire36)) : wire38[(1'h1):(1'h0)]));
  assign wire42 = {(|wire3[(4'h8):(2'h3)])};
  always
    @(posedge clk) begin
      reg43 <= wire2[(2'h2):(1'h0)];
    end
  assign wire44 = wire36[(1'h1):(1'h1)];
  assign wire45 = ($unsigned(wire39[(2'h3):(1'h0)]) - wire0[(3'h6):(3'h6)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param35 = (8'hae))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire8;
  input wire signed [(3'h4):(1'h0)] wire7;
  input wire [(3'h6):(1'h0)] wire6;
  input wire signed [(4'h9):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire34;
  wire signed [(3'h6):(1'h0)] wire33;
  wire signed [(4'h9):(1'h0)] wire32;
  wire [(3'h5):(1'h0)] wire31;
  wire [(3'h7):(1'h0)] wire30;
  wire [(2'h3):(1'h0)] wire29;
  wire [(3'h5):(1'h0)] wire28;
  wire [(3'h6):(1'h0)] wire26;
  wire signed [(4'h8):(1'h0)] wire12;
  wire [(2'h3):(1'h0)] wire11;
  wire [(3'h5):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire9;
  assign y = {wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire26,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 (1'h0)};
  assign wire9 = (&{((wire7 != (8'ha0)) & $signed(wire8))});
  assign wire10 = wire7;
  assign wire11 = (wire8 ?
                      {(+(|(8'hb0)))} : {((8'had) ?
                              $unsigned(wire9) : wire9[(3'h5):(3'h4)])});
  assign wire12 = (($unsigned((wire8 ?
                          wire5 : wire9)) | ($signed(wire11) != (wire11 >= (8'ha8)))) ?
                      wire7[(1'h0):(1'h0)] : wire8[(3'h6):(2'h2)]);
  module13 #() modinst27 (wire26, clk, wire6, wire9, wire8, wire11);
  assign wire28 = (!(^wire8));
  assign wire29 = wire8;
  assign wire30 = $unsigned($signed(wire10));
  assign wire31 = wire5[(2'h3):(2'h2)];
  assign wire32 = (wire12[(1'h1):(1'h1)] + wire28[(3'h5):(3'h4)]);
  assign wire33 = wire11[(2'h2):(1'h0)];
  assign wire34 = (^~$signed(wire7));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire17;
  input wire signed [(4'h8):(1'h0)] wire16;
  input wire [(3'h4):(1'h0)] wire15;
  input wire [(2'h3):(1'h0)] wire14;
  wire signed [(4'ha):(1'h0)] wire25;
  wire signed [(3'h7):(1'h0)] wire22;
  wire [(4'h8):(1'h0)] wire21;
  wire [(3'h5):(1'h0)] wire20;
  wire [(4'h9):(1'h0)] wire19;
  wire signed [(4'ha):(1'h0)] wire18;
  reg signed [(4'hb):(1'h0)] reg24 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg23 = (1'h0);
  assign y = {wire25,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 reg24,
                 reg23,
                 (1'h0)};
  assign wire18 = (wire14 + (($signed((8'ha1)) ?
                      wire14[(1'h1):(1'h0)] : (wire16 ?
                          (8'ha8) : (8'ha8))) <= $signed({wire16})));
  assign wire19 = wire18;
  assign wire20 = $signed($unsigned({((8'ha3) & wire16)}));
  assign wire21 = wire18[(2'h3):(2'h2)];
  assign wire22 = ($unsigned(wire21[(3'h6):(3'h4)]) > ((8'ha6) ?
                      $signed($signed(wire21)) : $signed({wire18})));
  always
    @(posedge clk) begin
      reg23 <= wire17[(1'h1):(1'h1)];
      reg24 <= wire15[(1'h0):(1'h0)];
    end
  assign wire25 = {wire18};
endmodule