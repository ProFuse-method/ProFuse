(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param27 = ({(((8'ha1) ? (8'hab) : (8'ha0)) == {(8'hab)})} ~^ ((((8'ha0) ? (8'ha7) : (8'h9f)) ? {(8'ha9)} : (-(8'ha2))) > {((8'h9f) <<< (8'hac))})))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire0;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire3;
  wire [(4'h9):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire25;
  wire [(4'h8):(1'h0)] wire4;
  wire signed [(4'ha):(1'h0)] wire8;
  wire [(2'h3):(1'h0)] wire9;
  wire [(4'hb):(1'h0)] wire10;
  wire signed [(3'h5):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire23;
  reg signed [(4'h9):(1'h0)] reg5 = (1'h0);
  reg [(4'h9):(1'h0)] reg6 = (1'h0);
  reg [(4'ha):(1'h0)] reg7 = (1'h0);
  assign y = {wire26,
                 wire25,
                 wire4,
                 wire8,
                 wire9,
                 wire10,
                 wire11,
                 wire23,
                 reg5,
                 reg6,
                 reg7,
                 (1'h0)};
  assign wire4 = ((8'ha2) << ($signed((wire2 ? wire3 : (8'h9c))) ?
                     (-(|wire0)) : wire3[(2'h2):(1'h1)]));
  always
    @(posedge clk) begin
      reg5 <= ((|wire2) <= ($signed(wire0) ~^ (wire3[(4'h9):(4'h9)] && wire3[(4'h8):(1'h1)])));
      reg6 <= (((~|$signed(reg5)) || reg5) <<< (wire4[(1'h0):(1'h0)] >= $unsigned((wire4 ?
          wire2 : reg5))));
      reg7 <= (reg6 >= (~&wire3));
    end
  assign wire8 = $unsigned((($signed((8'h9d)) ?
                         $unsigned(reg6) : reg5[(4'h9):(2'h3)]) ?
                     reg7 : wire4[(3'h6):(1'h1)]));
  assign wire9 = (8'h9e);
  assign wire10 = wire1;
  assign wire11 = ({(((8'ha1) ? wire0 : wire1) ? ((8'h9e) >> reg7) : wire9)} ?
                      (((reg7 < wire10) ? (-wire4) : $unsigned(reg7)) ?
                          (+$signed((8'hab))) : (reg7[(1'h0):(1'h0)] ?
                              (^(8'had)) : wire8)) : $unsigned(wire1[(2'h2):(2'h2)]));
  module12 #() modinst24 (wire23, clk, wire0, wire1, wire2, reg7);
  assign wire25 = $unsigned($signed(wire4[(3'h7):(1'h1)]));
  assign wire26 = (wire25 ^~ wire8);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param22 = {{{((8'hae) < (8'hb0))}}})
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h1d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire16;
  input wire signed [(4'hb):(1'h0)] wire15;
  input wire [(3'h4):(1'h0)] wire14;
  input wire signed [(4'ha):(1'h0)] wire13;
  wire signed [(3'h4):(1'h0)] wire19;
  wire signed [(3'h6):(1'h0)] wire18;
  wire [(2'h2):(1'h0)] wire17;
  reg [(4'hb):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg20 = (1'h0);
  assign y = {wire19, wire18, wire17, reg21, reg20, (1'h0)};
  assign wire17 = (({(wire16 <<< wire13)} ?
                      {(8'ha0)} : (~^{wire16})) < (({wire13} & wire15) ?
                      $signed($signed(wire13)) : (wire14 ?
                          (wire15 ? wire13 : wire13) : (8'ha2))));
  assign wire18 = (((wire15[(4'h9):(2'h2)] ? $signed(wire14) : (~wire17)) ?
                          wire14 : wire16[(3'h7):(2'h2)]) ?
                      (wire13 ^~ ($unsigned(wire16) ?
                          $unsigned(wire14) : wire13[(2'h2):(1'h1)])) : ($unsigned((wire15 == wire13)) ?
                          $signed($signed(wire14)) : wire17[(2'h2):(2'h2)]));
  assign wire19 = wire13[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg20 <= {($signed($signed(wire18)) ?
              (wire19 ? (-wire19) : wire18) : wire13[(2'h3):(2'h3)])};
      reg21 <= ($unsigned(($signed((8'haa)) ?
              (wire13 + wire19) : ((8'ha6) ? wire15 : wire17))) ?
          (8'ha6) : reg20);
    end
endmodule