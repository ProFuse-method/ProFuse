(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param71 = ((((8'hae) ? ((8'ha4) >> (8'ha4)) : ((8'ha9) ? (8'h9d) : (8'ha2))) ? (^{(8'h9d)}) : (((8'haf) ? (8'ha9) : (8'ha4)) ? (8'h9f) : ((8'ha4) ? (8'ha5) : (8'h9f)))) - (((^(8'hae)) > (+(8'had))) & (&(&(8'hae))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h25):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire70;
  wire [(3'h6):(1'h0)] wire68;
  wire signed [(4'h9):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire26;
  wire signed [(4'h9):(1'h0)] wire4;
  assign y = {wire70, wire68, wire28, wire26, wire4, (1'h0)};
  assign wire4 = (8'ha3);
  module5 #() modinst27 (wire26, clk, wire3, wire4, wire2, wire0);
  assign wire28 = $signed($signed(($unsigned(wire3) | (wire3 != wire3))));
  module29 #() modinst69 (wire68, clk, wire2, wire0, wire26, wire4);
  assign wire70 = wire4;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module29
#(parameter param67 = (8'ha3))
(y, clk, wire30, wire31, wire32, wire33);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire30;
  input wire signed [(4'hb):(1'h0)] wire31;
  input wire signed [(4'h9):(1'h0)] wire32;
  input wire [(4'h9):(1'h0)] wire33;
  wire signed [(3'h5):(1'h0)] wire34;
  wire [(4'h9):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire36;
  wire signed [(4'h9):(1'h0)] wire42;
  wire signed [(3'h7):(1'h0)] wire43;
  wire [(4'h8):(1'h0)] wire44;
  wire signed [(2'h2):(1'h0)] wire45;
  wire [(3'h4):(1'h0)] wire65;
  reg signed [(4'h8):(1'h0)] reg37 = (1'h0);
  reg [(3'h4):(1'h0)] reg38 = (1'h0);
  reg [(4'h9):(1'h0)] reg39 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg41 = (1'h0);
  assign y = {wire34,
                 wire35,
                 wire36,
                 wire42,
                 wire43,
                 wire44,
                 wire45,
                 wire65,
                 reg37,
                 reg38,
                 reg39,
                 reg40,
                 reg41,
                 (1'h0)};
  assign wire34 = {$unsigned(wire30[(3'h7):(3'h7)])};
  assign wire35 = $signed($signed(wire31[(4'hb):(4'ha)]));
  assign wire36 = $signed($unsigned(wire32));
  always
    @(posedge clk) begin
      reg37 <= $unsigned(((~|$unsigned(wire32)) >= wire36[(3'h6):(3'h4)]));
      reg38 <= (~(|$signed($signed(wire35))));
      reg39 <= $unsigned((~&($signed(wire31) ?
          wire34[(1'h1):(1'h0)] : (&(8'ha2)))));
    end
  always
    @(posedge clk) begin
      reg40 <= $signed(($signed(wire31[(3'h5):(1'h0)]) < ((reg37 ?
              wire32 : reg39) ?
          ((8'ha4) - wire31) : (reg37 ? reg39 : reg39))));
      reg41 <= {reg37[(1'h1):(1'h0)]};
    end
  assign wire42 = reg40;
  assign wire43 = $signed($unsigned(((wire30 >>> reg37) & (|(8'hac)))));
  assign wire44 = (~&{reg39});
  assign wire45 = $signed((((|reg39) < (&wire36)) != wire34));
  module46 #() modinst66 (wire65, clk, wire32, reg37, wire34, wire43);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param25 = (~^((((8'ha4) >= (8'ha3)) >>> (8'h9c)) * ((~&(8'ha8)) > (~&(8'h9e))))))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire9;
  input wire signed [(4'h9):(1'h0)] wire8;
  input wire [(2'h3):(1'h0)] wire7;
  input wire [(2'h3):(1'h0)] wire6;
  wire [(4'h8):(1'h0)] wire24;
  wire [(3'h4):(1'h0)] wire15;
  wire signed [(2'h2):(1'h0)] wire14;
  wire [(2'h2):(1'h0)] wire13;
  wire [(3'h4):(1'h0)] wire12;
  wire signed [(4'ha):(1'h0)] wire11;
  wire [(4'ha):(1'h0)] wire10;
  reg signed [(4'h9):(1'h0)] reg23 = (1'h0);
  reg [(3'h7):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg21 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg20 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  reg [(3'h5):(1'h0)] reg17 = (1'h0);
  reg [(2'h2):(1'h0)] reg16 = (1'h0);
  assign y = {wire24,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 (1'h0)};
  assign wire10 = wire6;
  assign wire11 = wire10[(4'h8):(4'h8)];
  assign wire12 = $signed((-wire11[(3'h4):(3'h4)]));
  assign wire13 = $unsigned($signed((wire10 ?
                      wire9[(3'h5):(1'h1)] : $signed(wire12))));
  assign wire14 = {$unsigned(wire12)};
  assign wire15 = ($unsigned(wire8) ? $signed($signed((+wire6))) : wire12);
  always
    @(posedge clk) begin
      if ((wire9[(4'ha):(4'h8)] | wire14))
        begin
          reg16 <= wire8[(3'h7):(1'h0)];
        end
      else
        begin
          if ({{$unsigned((~|wire10))}})
            begin
              reg16 <= $signed(($signed($signed(wire6)) ?
                  wire14[(2'h2):(1'h0)] : $signed(wire12[(1'h0):(1'h0)])));
              reg17 <= wire12[(2'h3):(1'h1)];
              reg18 <= {$signed($unsigned($signed((8'ha8))))};
            end
          else
            begin
              reg16 <= $unsigned((8'hae));
              reg17 <= (~|($signed((-wire10)) > $unsigned((~|reg16))));
              reg18 <= (wire13 <= wire11[(4'h8):(1'h1)]);
            end
          if ((8'ha0))
            begin
              reg19 <= (((~^reg16) ?
                  ({reg16} ? (|reg17) : (reg16 == wire12)) : ($signed(wire6) ?
                      (|wire8) : wire8[(3'h7):(3'h4)])) - (((reg17 != wire10) || (~&reg17)) ?
                  $signed((8'ha5)) : wire14));
              reg20 <= ((&((^wire15) < (wire13 > reg18))) - $unsigned(reg16));
              reg21 <= (((|{wire9}) >> (8'ha7)) - ({$signed(reg20)} ?
                  {{reg17}} : ($unsigned(wire6) >> wire14)));
            end
          else
            begin
              reg19 <= wire14[(1'h0):(1'h0)];
              reg20 <= wire11;
              reg21 <= $signed($unsigned($unsigned(reg18)));
            end
        end
      reg22 <= wire7[(1'h0):(1'h0)];
      reg23 <= $signed($signed($signed({wire8})));
    end
  assign wire24 = {((reg22[(2'h2):(2'h2)] ^~ ((8'h9d) ^~ wire7)) ?
                          {reg18[(1'h0):(1'h0)]} : (wire14 != $unsigned(reg22)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module46  (y, clk, wire50, wire49, wire48, wire47);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire50;
  input wire [(4'h8):(1'h0)] wire49;
  input wire [(3'h4):(1'h0)] wire48;
  input wire signed [(3'h7):(1'h0)] wire47;
  wire [(3'h5):(1'h0)] wire64;
  wire signed [(3'h6):(1'h0)] wire63;
  wire [(4'ha):(1'h0)] wire62;
  wire [(3'h6):(1'h0)] wire61;
  wire signed [(2'h3):(1'h0)] wire59;
  wire signed [(2'h2):(1'h0)] wire58;
  wire [(4'h9):(1'h0)] wire57;
  wire signed [(3'h5):(1'h0)] wire51;
  reg [(3'h6):(1'h0)] reg60 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg56 = (1'h0);
  reg [(2'h3):(1'h0)] reg55 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg54 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg53 = (1'h0);
  reg [(3'h6):(1'h0)] reg52 = (1'h0);
  assign y = {wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire59,
                 wire58,
                 wire57,
                 wire51,
                 reg60,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 (1'h0)};
  assign wire51 = wire48[(2'h3):(2'h2)];
  always
    @(posedge clk) begin
      reg52 <= wire51;
      if (wire47)
        begin
          reg53 <= $signed((!wire50[(1'h1):(1'h1)]));
          reg54 <= ($unsigned((reg52 ^~ {(8'ha7)})) ?
              $unsigned($signed((wire50 * wire51))) : $signed({{reg53}}));
        end
      else
        begin
          reg53 <= ((|wire50) ?
              ($unsigned({(8'hae)}) != {(reg54 ?
                      reg53 : reg54)}) : $signed(wire48[(3'h4):(3'h4)]));
          if ($unsigned(reg54))
            begin
              reg54 <= ($unsigned(($unsigned(wire49) ?
                  wire47 : reg53)) || reg52);
            end
          else
            begin
              reg54 <= wire47[(2'h2):(2'h2)];
              reg55 <= wire51;
              reg56 <= {wire48[(2'h3):(2'h2)]};
            end
        end
    end
  assign wire57 = reg55[(1'h0):(1'h0)];
  assign wire58 = (|((((8'ha7) ? wire47 : (8'hb0)) ?
                      (wire57 ?
                          wire50 : reg54) : reg54[(1'h0):(1'h0)]) >= $signed((8'h9d))));
  assign wire59 = (+((~|wire51[(3'h4):(1'h0)]) == wire51));
  always
    @(posedge clk) begin
      reg60 <= {reg56};
    end
  assign wire61 = ($unsigned({(8'h9f)}) >= wire49);
  assign wire62 = (&$signed($signed(reg54[(3'h4):(2'h3)])));
  assign wire63 = (8'ha1);
  assign wire64 = $signed(wire57[(3'h7):(3'h5)]);
endmodule