(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h95):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire36;
  wire signed [(3'h6):(1'h0)] wire28;
  wire [(3'h6):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire26;
  wire [(2'h2):(1'h0)] wire19;
  wire signed [(3'h6):(1'h0)] wire18;
  wire [(4'h8):(1'h0)] wire17;
  wire signed [(3'h5):(1'h0)] wire16;
  wire [(3'h4):(1'h0)] wire14;
  reg [(3'h6):(1'h0)] reg35 = (1'h0);
  reg [(3'h7):(1'h0)] reg34 = (1'h0);
  reg [(3'h4):(1'h0)] reg33 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg32 = (1'h0);
  reg [(4'ha):(1'h0)] reg31 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg25 = (1'h0);
  reg [(4'h8):(1'h0)] reg24 = (1'h0);
  reg [(4'h8):(1'h0)] reg23 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg22 = (1'h0);
  reg [(4'h8):(1'h0)] reg21 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg20 = (1'h0);
  assign y = {wire36,
                 wire28,
                 wire27,
                 wire26,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire14,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  module4 #() modinst15 (.clk(clk), .wire6(wire0), .y(wire14), .wire5(wire1), .wire7(wire2), .wire8(wire3));
  assign wire16 = (|$unsigned(({wire3} || (8'ha0))));
  assign wire17 = (&(wire0 ?
                      {wire1} : (wire1[(3'h5):(2'h3)] ?
                          (wire2 - (8'haf)) : wire1)));
  assign wire18 = {{$unsigned(wire0)}};
  assign wire19 = ((~&(+$signed(wire0))) || $signed((8'haa)));
  always
    @(posedge clk) begin
      reg20 <= (8'hb0);
      if ($signed(((^$unsigned(wire2)) ?
          $signed($signed((8'hac))) : ((+wire16) ?
              (&wire19) : $signed(wire18)))))
        begin
          reg21 <= ((+$signed((wire1 ?
              (8'ha8) : wire18))) <<< (wire2[(1'h0):(1'h0)] != $unsigned($signed(wire18))));
          reg22 <= ($signed(($signed(wire16) ^~ wire17)) ?
              ($signed(reg21) >= wire3[(1'h1):(1'h1)]) : (^reg20[(1'h1):(1'h0)]));
          if ($unsigned((&(-(wire0 <<< (8'hac))))))
            begin
              reg23 <= ((8'h9c) ? wire14 : reg21);
            end
          else
            begin
              reg23 <= ((reg21[(3'h6):(1'h1)] ? {$signed(wire17)} : (8'ha0)) ?
                  (^~((~wire2) || wire14[(1'h0):(1'h0)])) : $unsigned((((8'hb0) ?
                          wire1 : reg21) ?
                      $unsigned((8'had)) : $unsigned(wire19))));
            end
        end
      else
        begin
          reg21 <= wire18;
          reg22 <= ((wire17 > (|(!(8'ha0)))) ?
              ($signed(wire19) == $unsigned((reg20 | reg22))) : wire2[(2'h2):(1'h0)]);
          if ($unsigned((reg21 ? wire3[(2'h2):(1'h0)] : (|{(8'ha2)}))))
            begin
              reg23 <= (!$unsigned($signed($unsigned((8'ha9)))));
              reg24 <= (($unsigned($signed(wire16)) >>> (~|(wire16 ?
                  wire2 : wire2))) < ($signed({wire19}) >> $unsigned(wire0[(4'h8):(1'h0)])));
            end
          else
            begin
              reg23 <= $unsigned(($unsigned(((8'ha3) ?
                  reg22 : wire3)) == $signed((wire19 && (8'ha8)))));
              reg24 <= $signed($unsigned({((8'hae) & wire17)}));
            end
        end
      reg25 <= ((~|$unsigned((wire19 >> reg23))) << ($signed($signed(reg22)) ?
          $signed($signed(wire19)) : (~|$signed(wire17))));
    end
  assign wire26 = ((~$signed($unsigned(wire1))) ?
                      $signed((wire19[(1'h1):(1'h0)] ^~ $signed(wire17))) : wire3);
  assign wire27 = ($signed($unsigned(wire19)) ?
                      reg21[(3'h7):(2'h2)] : {$unsigned({wire2})});
  assign wire28 = (($signed($signed(wire18)) ?
                          $unsigned(wire0) : (^~$unsigned(wire3))) ?
                      ({(wire3 ? reg20 : wire16)} ?
                          $unsigned(reg23) : (~|(wire2 >= wire2))) : ($unsigned($unsigned((8'h9c))) <= $unsigned($signed(wire2))));
  always
    @(posedge clk) begin
      if (wire1)
        begin
          reg29 <= wire19[(1'h1):(1'h1)];
          reg30 <= {{(!$unsigned(reg22))}};
        end
      else
        begin
          reg29 <= $unsigned(reg22[(4'ha):(4'ha)]);
          reg30 <= $unsigned(({(wire0 || wire28)} ?
              reg30[(2'h3):(2'h2)] : $signed($signed(wire14))));
        end
    end
  always
    @(posedge clk) begin
      reg31 <= wire2[(1'h1):(1'h1)];
      reg32 <= (reg23 ?
          ($unsigned($signed(wire0)) ?
              wire26[(3'h4):(3'h4)] : $signed((wire19 || reg24))) : (((reg23 || (8'hab)) ?
              $unsigned(wire18) : (^(8'ha2))) | wire27[(3'h4):(3'h4)]));
      if ($signed(reg31[(1'h1):(1'h1)]))
        begin
          reg33 <= (({(!(8'ha1))} ?
              ((~|reg30) ?
                  (reg29 >= wire28) : reg31[(3'h5):(3'h4)]) : $unsigned((!reg32))) > (|reg29));
          reg34 <= wire27[(3'h5):(3'h5)];
          reg35 <= wire2[(1'h1):(1'h1)];
        end
      else
        begin
          if ((^~$unsigned((&wire1[(3'h4):(1'h0)]))))
            begin
              reg33 <= ((((wire27 ? wire19 : reg32) ?
                      {reg34} : (reg33 | reg23)) ?
                  $unsigned($unsigned((8'ha9))) : (8'hae)) && wire17);
              reg34 <= reg24;
            end
          else
            begin
              reg33 <= ($unsigned($signed((reg29 ? wire2 : reg24))) ?
                  wire26[(3'h7):(2'h2)] : $unsigned(({wire0} > reg30)));
              reg34 <= $unsigned((($signed(wire14) == (&wire27)) & {(reg24 ?
                      reg30 : wire17)}));
            end
          reg35 <= $signed(wire18);
        end
    end
  assign wire36 = (((reg25 <= (reg32 ? wire0 : reg24)) ?
                          reg22 : ((wire27 + wire1) + $signed(wire0))) ?
                      (((~&reg29) ?
                          $unsigned(reg30) : (wire0 >> wire27)) || (~(reg35 ?
                          wire18 : reg25))) : wire3[(2'h3):(2'h3)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param13 = ((((~|(8'ha7)) ? {(8'haa)} : ((8'ha6) ? (8'hab) : (8'h9e))) ? (((8'ha2) ~^ (8'ha2)) ? (8'ha3) : ((8'ha6) ? (8'hac) : (8'hb0))) : (+((8'ha3) + (8'h9c)))) ? ((~^(|(8'ha0))) ? (((8'ha7) ? (8'ha0) : (8'haa)) ? (~|(8'hac)) : {(8'ha1)}) : ((!(8'hb0)) & (^~(8'hab)))) : {(-{(8'had)})}))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h20):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire8;
  input wire signed [(4'h9):(1'h0)] wire7;
  input wire [(4'hb):(1'h0)] wire6;
  input wire signed [(4'h8):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire12;
  wire signed [(4'hb):(1'h0)] wire11;
  wire signed [(2'h2):(1'h0)] wire10;
  wire [(3'h7):(1'h0)] wire9;
  assign y = {wire12, wire11, wire10, wire9, (1'h0)};
  assign wire9 = wire5[(3'h5):(2'h2)];
  assign wire10 = {(({wire9} ?
                          {wire7} : (wire8 ?
                              wire8 : wire9)) == $signed(wire6))};
  assign wire11 = $unsigned(wire7);
  assign wire12 = wire6[(4'h8):(2'h2)];
endmodule