(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param56 = ((&(((8'ha5) ? (8'ha3) : (8'hb0)) <<< ((8'h9d) ? (8'h9e) : (8'ha4)))) && (~&((~^(8'ha9)) ? (^(8'ha2)) : ((8'hb0) ? (8'ha7) : (8'hab))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire55;
  wire [(4'hb):(1'h0)] wire54;
  wire [(3'h5):(1'h0)] wire53;
  wire signed [(2'h2):(1'h0)] wire52;
  wire signed [(4'ha):(1'h0)] wire51;
  wire [(3'h6):(1'h0)] wire50;
  wire signed [(4'ha):(1'h0)] wire48;
  wire [(4'h9):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire4;
  assign y = {wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire48,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = wire1[(2'h2):(1'h1)];
  assign wire5 = $signed(wire0[(3'h7):(3'h5)]);
  assign wire6 = (8'hac);
  module7 #() modinst49 (.wire8(wire3), .wire11(wire2), .wire9(wire1), .wire10(wire5), .clk(clk), .y(wire48));
  assign wire50 = $signed((wire2[(4'h8):(4'h8)] ?
                      ((wire0 > wire48) ?
                          ((8'haf) << (8'h9e)) : $unsigned(wire0)) : wire0[(2'h2):(1'h1)]));
  assign wire51 = (({$signed((8'ha6))} ~^ ($unsigned((8'ha0)) & {wire1})) ?
                      ($unsigned({wire6}) == {$signed(wire1)}) : {$unsigned($unsigned(wire0))});
  assign wire52 = $signed({$signed($unsigned(wire4))});
  assign wire53 = wire51[(1'h0):(1'h0)];
  assign wire54 = {($signed($signed((8'h9e))) ^~ ($unsigned((8'haa)) >= $signed((8'hac))))};
  assign wire55 = $unsigned($signed(wire53));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param47 = (({((8'hab) ? (8'ha1) : (8'h9c))} ? (((8'ha4) ? (8'ha7) : (8'haa)) ? {(8'ha2)} : (~&(8'ha9))) : {((8'ha8) ? (8'h9e) : (8'ha1))}) & {(((8'h9f) ? (8'haa) : (8'ha4)) ? (+(8'had)) : ((8'h9e) ? (8'hab) : (8'ha4)))}))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h58):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire11;
  input wire [(4'h8):(1'h0)] wire10;
  input wire [(3'h7):(1'h0)] wire9;
  input wire [(4'hb):(1'h0)] wire8;
  wire [(4'hb):(1'h0)] wire43;
  wire [(4'ha):(1'h0)] wire36;
  wire signed [(4'h8):(1'h0)] wire35;
  wire signed [(3'h7):(1'h0)] wire33;
  reg [(2'h3):(1'h0)] reg46 = (1'h0);
  reg [(2'h3):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg44 = (1'h0);
  reg [(3'h4):(1'h0)] reg42 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg41 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg39 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg37 = (1'h0);
  assign y = {wire43,
                 wire36,
                 wire35,
                 wire33,
                 reg46,
                 reg45,
                 reg44,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 (1'h0)};
  module12 #() modinst34 (.wire13(wire10), .clk(clk), .wire14(wire8), .y(wire33), .wire15(wire11), .wire16(wire9));
  assign wire35 = (^(8'ha4));
  assign wire36 = wire35[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      if (wire9)
        begin
          reg37 <= (wire10 < $unsigned($unsigned({wire11})));
          reg38 <= $unsigned((wire8[(4'h8):(3'h4)] & $signed(wire35)));
        end
      else
        begin
          reg37 <= wire33[(2'h2):(2'h2)];
        end
      reg39 <= reg38;
      if (wire33[(3'h4):(2'h2)])
        begin
          reg40 <= {$signed({{wire8}})};
          reg41 <= reg37[(3'h4):(2'h3)];
          reg42 <= $signed(($unsigned({reg39}) ?
              (8'ha7) : $signed($signed(wire33))));
        end
      else
        begin
          if ((~^$signed({$signed((8'hac))})))
            begin
              reg40 <= ((-$unsigned($signed(wire36))) ?
                  (~|reg37[(1'h1):(1'h1)]) : $signed(($unsigned(reg41) && $signed(wire9))));
            end
          else
            begin
              reg40 <= ($unsigned(($signed(wire35) ~^ $unsigned((8'ha7)))) ?
                  reg39 : $signed(wire11));
              reg41 <= $signed($signed(wire11));
              reg42 <= $unsigned($unsigned(wire9[(3'h4):(1'h1)]));
            end
        end
    end
  assign wire43 = wire10;
  always
    @(posedge clk) begin
      if ((+wire35[(3'h5):(1'h1)]))
        begin
          reg44 <= reg37;
          reg45 <= reg39[(3'h4):(1'h1)];
        end
      else
        begin
          reg44 <= ((-((reg45 != reg38) <= reg40[(3'h5):(2'h2)])) ~^ $unsigned(reg39));
          reg45 <= (-$unsigned({(reg39 == (8'had))}));
          reg46 <= wire35;
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param32 = (~&((((8'had) <= (8'ha8)) ? ((8'h9f) >= (8'hae)) : ((8'hac) ? (8'hae) : (8'ha5))) != ((!(8'h9d)) ? ((8'ha5) ? (8'ha5) : (8'ha0)) : {(8'ha9)}))))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire15;
  input wire signed [(4'hb):(1'h0)] wire14;
  input wire [(3'h4):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire27;
  wire signed [(3'h5):(1'h0)] wire26;
  wire [(3'h5):(1'h0)] wire25;
  wire [(4'hb):(1'h0)] wire24;
  wire signed [(3'h5):(1'h0)] wire19;
  wire [(4'hb):(1'h0)] wire18;
  wire [(4'ha):(1'h0)] wire17;
  reg signed [(4'h8):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg28 = (1'h0);
  reg [(3'h4):(1'h0)] reg23 = (1'h0);
  reg [(2'h2):(1'h0)] reg22 = (1'h0);
  reg [(4'ha):(1'h0)] reg21 = (1'h0);
  reg [(4'h9):(1'h0)] reg20 = (1'h0);
  assign y = {wire31,
                 wire30,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire19,
                 wire18,
                 wire17,
                 reg29,
                 reg28,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  assign wire17 = (~|wire15[(2'h2):(1'h1)]);
  assign wire18 = wire14;
  assign wire19 = ((($signed(wire16) ?
                          $unsigned((8'h9f)) : wire13) * (~$signed(wire16))) ?
                      (wire17[(3'h4):(3'h4)] < wire13[(3'h4):(2'h3)]) : $unsigned({(~&wire17)}));
  always
    @(posedge clk) begin
      reg20 <= (+wire16[(1'h1):(1'h0)]);
      reg21 <= ($unsigned(($signed(wire17) ? reg20 : $signed((8'had)))) ?
          $unsigned({(wire15 ? wire17 : (8'ha0))}) : {reg20});
    end
  always
    @(posedge clk) begin
      reg22 <= $unsigned((8'ha3));
      reg23 <= $signed($unsigned($signed(wire13)));
    end
  assign wire24 = $unsigned($unsigned($signed($unsigned(reg20))));
  assign wire25 = wire19[(2'h3):(2'h2)];
  assign wire26 = wire25;
  assign wire27 = wire14[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg28 <= $signed(($signed($signed(wire24)) >> (-reg22[(1'h1):(1'h0)])));
      reg29 <= wire14;
    end
  assign wire30 = ({$signed({reg23})} ? $unsigned(wire13) : wire19);
  assign wire31 = wire13[(3'h4):(3'h4)];
endmodule