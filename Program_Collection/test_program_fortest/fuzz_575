(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param56 = (!(8'ha3)))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h57):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire54;
  wire [(4'h9):(1'h0)] wire53;
  wire signed [(2'h3):(1'h0)] wire51;
  wire [(4'h9):(1'h0)] wire43;
  wire signed [(3'h7):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire4;
  reg [(4'h9):(1'h0)] reg52 = (1'h0);
  reg [(3'h4):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg48 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg46 = (1'h0);
  reg [(3'h7):(1'h0)] reg45 = (1'h0);
  assign y = {wire54,
                 wire53,
                 wire51,
                 wire43,
                 wire5,
                 wire4,
                 reg52,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 (1'h0)};
  assign wire4 = ($unsigned({((8'hae) ? (8'ha3) : wire1)}) ?
                     $unsigned(($signed(wire1) ^~ $unsigned(wire0))) : {wire2[(2'h3):(2'h2)]});
  assign wire5 = wire4[(2'h2):(1'h0)];
  module6 #() modinst44 (wire43, clk, wire4, wire5, wire2, wire3);
  always
    @(posedge clk) begin
      if (wire2)
        begin
          if (wire2[(4'h8):(2'h2)])
            begin
              reg45 <= $signed(((wire43 ^~ $unsigned((8'h9f))) ?
                  wire2 : $signed((~|wire0))));
              reg46 <= ($signed(((wire0 >>> reg45) == (^wire3))) ?
                  {((wire2 ?
                          wire0 : (8'ha1)) >= reg45)} : (({wire2} <= $signed(wire4)) >>> (wire1 ?
                      (wire2 & wire43) : wire3[(4'h9):(1'h1)])));
            end
          else
            begin
              reg45 <= wire43[(1'h1):(1'h0)];
            end
          reg47 <= wire43[(3'h6):(1'h1)];
        end
      else
        begin
          if ((^~(!($signed(wire2) ?
              ((8'h9f) ? wire3 : (8'ha0)) : $unsigned(wire2)))))
            begin
              reg45 <= $unsigned($signed(({(8'hac)} + $signed(wire0))));
              reg46 <= wire0[(3'h6):(2'h2)];
              reg47 <= wire2;
            end
          else
            begin
              reg45 <= $signed(reg46[(3'h4):(2'h2)]);
              reg46 <= (wire0 ?
                  ($signed({wire4}) ?
                      $signed((~reg46)) : (wire3[(1'h1):(1'h0)] >= wire1[(3'h7):(1'h1)])) : ($signed($signed(wire43)) * $signed($unsigned(reg45))));
              reg47 <= reg46;
            end
          reg48 <= $unsigned(wire5);
        end
      reg49 <= (((reg47[(4'h9):(4'h9)] && wire4) ?
              {wire0[(3'h6):(1'h1)]} : $signed((wire43 ? wire5 : wire3))) ?
          reg47 : ($unsigned(reg48[(2'h3):(2'h3)]) > $signed((wire4 > (8'hac)))));
      reg50 <= (+$unsigned(reg46[(2'h3):(2'h2)]));
    end
  assign wire51 = $signed({((^~wire2) ?
                          reg50[(2'h3):(2'h2)] : (reg45 && wire0))});
  always
    @(posedge clk) begin
      reg52 <= reg47;
    end
  assign wire53 = (wire4[(3'h4):(3'h4)] || $signed(((wire2 ?
                      (8'ha7) : reg50) || $unsigned((8'ha4)))));
  module6 #() modinst55 (.clk(clk), .wire8(reg52), .y(wire54), .wire9(reg46), .wire10(wire3), .wire7(wire53));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param42 = ({(8'haa)} ? (&(((8'h9e) ? (8'ha9) : (8'hb0)) > ((8'hab) >= (8'hae)))) : (^~(((8'ha2) ^ (8'had)) ? ((8'ha4) + (8'hac)) : ((8'h9c) != (8'ha1))))))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h66):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire10;
  input wire signed [(3'h7):(1'h0)] wire9;
  input wire signed [(3'h7):(1'h0)] wire8;
  input wire [(3'h4):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire41;
  wire signed [(4'h9):(1'h0)] wire40;
  wire signed [(4'h9):(1'h0)] wire39;
  wire signed [(2'h3):(1'h0)] wire38;
  wire [(3'h4):(1'h0)] wire36;
  wire signed [(3'h4):(1'h0)] wire20;
  wire [(3'h6):(1'h0)] wire19;
  wire [(3'h6):(1'h0)] wire18;
  reg [(3'h7):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg16 = (1'h0);
  reg [(3'h4):(1'h0)] reg15 = (1'h0);
  reg [(3'h4):(1'h0)] reg14 = (1'h0);
  reg [(4'ha):(1'h0)] reg13 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg12 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg11 = (1'h0);
  assign y = {wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire36,
                 wire20,
                 wire19,
                 wire18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg11 <= $signed((|wire8));
      if ((~(~&$signed((wire9 | wire10)))))
        begin
          reg12 <= (8'ha5);
          if (((({wire8} + (reg12 || wire9)) ?
              $unsigned((reg11 ?
                  wire7 : reg12)) : {reg12[(4'h9):(3'h6)]}) - reg12))
            begin
              reg13 <= (8'h9e);
            end
          else
            begin
              reg13 <= ($signed($unsigned((8'hac))) - {(reg12[(4'h8):(3'h4)] ?
                      (!wire9) : ((8'haf) ^~ wire7))});
            end
          if ({(~|(reg12[(3'h7):(2'h3)] ?
                  ((8'ha1) ? reg11 : wire8) : {reg11}))})
            begin
              reg14 <= $signed((reg13 ?
                  {(+wire9)} : $signed(((8'had) ? wire10 : wire10))));
              reg15 <= $signed({($unsigned(reg11) || {wire10})});
              reg16 <= $signed({$unsigned(reg12)});
            end
          else
            begin
              reg14 <= $signed((8'ha7));
              reg15 <= ((^(8'ha6)) ?
                  ((wire9 || {wire10}) ? (~^$signed(reg11)) : reg15) : wire8);
            end
        end
      else
        begin
          reg12 <= wire9[(1'h1):(1'h0)];
          reg13 <= $signed($signed(wire8));
        end
      reg17 <= reg11;
    end
  assign wire18 = ($unsigned(reg13) ?
                      (((wire10 ? wire7 : reg15) ?
                              (reg13 ? reg13 : reg17) : (&reg13)) ?
                          reg12[(2'h2):(1'h1)] : $unsigned($unsigned(reg17))) : reg14[(2'h2):(2'h2)]);
  assign wire19 = $unsigned($signed({((8'ha0) ? wire9 : (8'hae))}));
  assign wire20 = ($signed(wire18) ? wire19[(3'h5):(3'h4)] : (8'ha0));
  module21 #() modinst37 (wire36, clk, wire8, wire19, wire9, wire10);
  assign wire38 = $signed((8'ha2));
  assign wire39 = $unsigned(($signed({wire20}) > (wire36[(1'h1):(1'h1)] == $unsigned(wire19))));
  assign wire40 = reg13[(3'h5):(1'h0)];
  assign wire41 = (wire8[(2'h3):(2'h3)] <= $unsigned(($signed(wire18) ?
                      (wire19 <= reg17) : $unsigned(wire9))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21  (y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire25;
  input wire signed [(3'h6):(1'h0)] wire24;
  input wire [(3'h7):(1'h0)] wire23;
  input wire signed [(3'h5):(1'h0)] wire22;
  wire signed [(2'h2):(1'h0)] wire35;
  wire [(4'h8):(1'h0)] wire34;
  wire signed [(4'ha):(1'h0)] wire33;
  wire [(3'h4):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire26;
  reg signed [(2'h3):(1'h0)] reg32 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg31 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg29 = (1'h0);
  reg [(3'h5):(1'h0)] reg28 = (1'h0);
  assign y = {wire35,
                 wire34,
                 wire33,
                 wire27,
                 wire26,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 (1'h0)};
  assign wire26 = ($unsigned((~^wire25[(1'h0):(1'h0)])) | $unsigned(($unsigned(wire24) ?
                      wire24 : wire24)));
  assign wire27 = (-(&{(wire26 ^~ (8'ha7))}));
  always
    @(posedge clk) begin
      reg28 <= wire23;
      reg29 <= $signed(wire26[(4'h8):(2'h3)]);
    end
  always
    @(posedge clk) begin
      reg30 <= wire27;
      reg31 <= (wire22[(3'h5):(3'h5)] & $unsigned({(wire27 >= reg29)}));
      reg32 <= wire25;
    end
  assign wire33 = ($signed(reg29) ?
                      $unsigned(($signed(wire24) && reg29[(4'ha):(3'h7)])) : $signed(reg30));
  assign wire34 = (~&(wire23[(2'h2):(1'h1)] - reg31));
  assign wire35 = (({((8'ha7) != reg29)} <<< ({(8'hab)} ?
                      reg32[(2'h2):(1'h1)] : $unsigned(reg30))) || ((&$unsigned((8'hab))) ?
                      reg28 : ($signed(reg32) <= wire25)));
endmodule