(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire [(2'h2):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire53;
  wire signed [(4'hb):(1'h0)] wire7;
  wire [(3'h5):(1'h0)] wire6;
  wire [(3'h5):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire4;
  assign y = {wire53, wire7, wire6, wire5, wire4, (1'h0)};
  assign wire4 = $signed(wire1[(4'h8):(3'h5)]);
  assign wire5 = wire0[(2'h2):(1'h1)];
  assign wire6 = ({$unsigned(wire2[(2'h2):(2'h2)])} + $unsigned(wire1));
  assign wire7 = {(8'ha0)};
  module8 #() modinst54 (.wire9(wire6), .wire10(wire7), .wire12(wire5), .clk(clk), .wire11(wire3), .y(wire53));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param52 = (!({{(8'hab)}} ? {{(8'ha5)}} : {{(8'had)}})))
(y, clk, wire9, wire10, wire11, wire12);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire9;
  input wire [(4'hb):(1'h0)] wire10;
  input wire signed [(4'hb):(1'h0)] wire11;
  input wire signed [(3'h4):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire51;
  wire signed [(2'h3):(1'h0)] wire50;
  wire signed [(4'ha):(1'h0)] wire49;
  wire [(2'h3):(1'h0)] wire48;
  wire signed [(4'ha):(1'h0)] wire16;
  wire signed [(3'h6):(1'h0)] wire17;
  wire [(3'h7):(1'h0)] wire19;
  wire [(3'h4):(1'h0)] wire20;
  wire [(3'h7):(1'h0)] wire21;
  wire signed [(2'h2):(1'h0)] wire46;
  reg signed [(3'h7):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg14 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg15 = (1'h0);
  reg [(3'h7):(1'h0)] reg18 = (1'h0);
  assign y = {wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire16,
                 wire17,
                 wire19,
                 wire20,
                 wire21,
                 wire46,
                 reg13,
                 reg14,
                 reg15,
                 reg18,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg13 <= $signed($unsigned(wire12[(1'h0):(1'h0)]));
      reg14 <= $unsigned(reg13[(1'h0):(1'h0)]);
      reg15 <= (reg13 ^~ ({reg14[(2'h2):(1'h0)]} == wire9[(2'h2):(1'h1)]));
    end
  assign wire16 = (8'h9d);
  assign wire17 = (~|$signed($signed((reg15 ^~ (8'had)))));
  always
    @(posedge clk) begin
      reg18 <= (~|reg13);
    end
  assign wire19 = (($unsigned((|reg13)) ?
                          ((wire12 ? reg14 : wire9) ?
                              (reg14 ^~ wire17) : ((8'hab) || wire9)) : $unsigned((wire12 >> reg18))) ?
                      ($signed((8'hae)) ^~ (reg13[(3'h4):(1'h0)] ?
                          $unsigned((8'ha6)) : reg14)) : $signed(((wire11 | reg18) ?
                          {wire11} : $signed(wire9))));
  assign wire20 = wire19;
  assign wire21 = reg18;
  module22 #() modinst47 (wire46, clk, wire9, wire16, wire21, reg18);
  assign wire48 = wire12;
  assign wire49 = $signed(reg14[(2'h2):(1'h0)]);
  assign wire50 = (8'had);
  assign wire51 = {wire19};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module22  (y, clk, wire26, wire25, wire24, wire23);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire26;
  input wire [(3'h4):(1'h0)] wire25;
  input wire signed [(3'h4):(1'h0)] wire24;
  input wire [(3'h7):(1'h0)] wire23;
  wire [(4'h8):(1'h0)] wire37;
  wire [(3'h6):(1'h0)] wire36;
  wire signed [(2'h3):(1'h0)] wire33;
  wire [(3'h7):(1'h0)] wire32;
  wire [(2'h3):(1'h0)] wire31;
  wire signed [(4'ha):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire29;
  wire signed [(3'h4):(1'h0)] wire28;
  wire signed [(3'h5):(1'h0)] wire27;
  reg signed [(3'h4):(1'h0)] reg45 = (1'h0);
  reg [(3'h7):(1'h0)] reg44 = (1'h0);
  reg [(3'h4):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg41 = (1'h0);
  reg [(4'h8):(1'h0)] reg40 = (1'h0);
  reg [(2'h3):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg38 = (1'h0);
  reg [(2'h3):(1'h0)] reg35 = (1'h0);
  reg [(4'ha):(1'h0)] reg34 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg35,
                 reg34,
                 (1'h0)};
  assign wire27 = (^~wire24[(2'h2):(1'h1)]);
  assign wire28 = (({(&wire27)} < ($signed(wire24) * (8'had))) ?
                      ((^~((8'ha0) ? wire23 : wire23)) ?
                          $signed((wire23 - wire23)) : wire26[(2'h2):(2'h2)]) : $signed({((8'hb0) ?
                              wire26 : wire27)}));
  assign wire29 = (((wire23[(2'h2):(1'h1)] == (8'hb0)) ?
                          (wire24[(3'h4):(2'h2)] ?
                              (+wire24) : wire23) : ($signed(wire23) <= $signed(wire26))) ?
                      ((+$unsigned(wire24)) ?
                          $unsigned($unsigned(wire27)) : $signed($unsigned(wire24))) : ($signed(wire27) ?
                          {$unsigned(wire24)} : (((8'ha7) ^~ (8'hac)) ?
                              wire28 : $unsigned(wire26))));
  assign wire30 = (|{(8'hac)});
  assign wire31 = $unsigned({(^wire27)});
  assign wire32 = wire28;
  assign wire33 = $unsigned(wire26);
  always
    @(posedge clk) begin
      reg34 <= ($unsigned($signed($signed(wire24))) ?
          $unsigned({((8'ha9) ~^ wire28)}) : wire24[(2'h3):(1'h1)]);
      reg35 <= (+$signed((-wire28)));
    end
  assign wire36 = ($unsigned({$signed(wire31)}) < {{$unsigned(wire25)}});
  assign wire37 = (~|$unsigned((~^$unsigned((8'hac)))));
  always
    @(posedge clk) begin
      reg38 <= wire28;
      if ((^~(8'hb0)))
        begin
          if ((-reg35[(1'h0):(1'h0)]))
            begin
              reg39 <= wire37;
              reg40 <= wire23[(2'h2):(1'h1)];
              reg41 <= $signed(((~^(8'ha8)) ?
                  $unsigned($unsigned(reg40)) : $unsigned(wire30)));
            end
          else
            begin
              reg39 <= {($unsigned((~^wire33)) ?
                      ($signed(wire37) ~^ (8'ha9)) : {(~|(8'had))})};
              reg40 <= {{(^(8'h9f))}};
              reg41 <= reg41[(1'h1):(1'h1)];
            end
          reg42 <= ($signed($signed($signed((8'h9f)))) >= wire30);
        end
      else
        begin
          reg39 <= (&$signed(($signed(reg42) << wire27[(2'h3):(2'h2)])));
          reg40 <= (wire26[(1'h1):(1'h1)] ? wire24 : reg39[(2'h2):(1'h1)]);
          reg41 <= $signed(reg42);
        end
      if ((reg41 ?
          {(((8'ha7) << wire29) ?
                  ((8'h9c) << (8'ha9)) : ((8'ha5) ?
                      reg35 : reg40))} : $unsigned((reg40 & $unsigned(wire23)))))
        begin
          reg43 <= (wire23[(2'h2):(1'h1)] & (wire32 ?
              $unsigned((reg41 ? wire28 : reg39)) : (wire36[(2'h3):(1'h1)] ?
                  (|reg40) : (~|wire31))));
          reg44 <= wire29;
          reg45 <= ($unsigned($unsigned({(8'hae)})) ?
              reg44 : wire28[(1'h1):(1'h1)]);
        end
      else
        begin
          reg43 <= ($unsigned($signed((~^wire25))) ?
              $unsigned((~^(reg41 <= wire32))) : (+((wire36 <<< reg44) | $unsigned(reg44))));
          reg44 <= (|(!(wire24 > $unsigned(wire24))));
        end
    end
endmodule