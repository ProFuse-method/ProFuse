(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire [(3'h4):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire13;
  wire [(3'h4):(1'h0)] wire12;
  wire [(4'h8):(1'h0)] wire11;
  wire signed [(3'h5):(1'h0)] wire10;
  wire [(4'hb):(1'h0)] wire8;
  wire [(3'h4):(1'h0)] wire7;
  wire [(3'h6):(1'h0)] wire6;
  wire signed [(4'h8):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire4;
  reg [(3'h7):(1'h0)] reg19 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg17 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg16 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg15 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg14 = (1'h0);
  reg [(2'h2):(1'h0)] reg9 = (1'h0);
  assign y = {wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg9,
                 (1'h0)};
  assign wire4 = wire3[(1'h1):(1'h1)];
  assign wire5 = $signed((^~wire1));
  assign wire6 = (wire4[(2'h2):(1'h1)] >>> (((~|wire2) - wire4) + $unsigned((wire5 >>> wire0))));
  assign wire7 = wire5;
  assign wire8 = wire5;
  always
    @(posedge clk) begin
      reg9 <= ($unsigned((8'h9e)) ?
          (wire3[(3'h6):(1'h0)] * wire4[(3'h5):(3'h5)]) : $signed((wire0[(3'h4):(1'h0)] || wire5[(3'h7):(2'h2)])));
    end
  assign wire10 = $unsigned($unsigned(($unsigned(wire0) ?
                      $unsigned((8'h9d)) : $signed(wire8))));
  assign wire11 = wire4[(3'h4):(2'h2)];
  assign wire12 = (8'ha0);
  assign wire13 = $signed((^~(wire10 - (^reg9))));
  always
    @(posedge clk) begin
      reg14 <= (((((8'h9e) ? (8'ha2) : wire4) + (wire2 ?
          wire7 : wire6)) != wire4[(3'h5):(1'h0)]) - $unsigned($signed((wire12 <= wire2))));
      if (($signed(wire10) ^ wire5))
        begin
          reg15 <= wire4;
        end
      else
        begin
          if ($signed(wire2))
            begin
              reg15 <= {$signed(wire1)};
              reg16 <= (+(^~$unsigned((~|(8'hb0)))));
              reg17 <= $signed($unsigned(($unsigned(wire10) ^ (wire8 && wire6))));
            end
          else
            begin
              reg15 <= wire8;
              reg16 <= (wire10[(2'h2):(1'h1)] || $signed(($signed(wire7) ~^ $unsigned((8'h9f)))));
              reg17 <= $signed(({((8'hac) ^ wire11)} - ($unsigned(reg17) > (^~wire3))));
            end
          reg18 <= $signed($unsigned(wire2));
          reg19 <= $signed(((reg17[(1'h0):(1'h0)] ?
              reg16[(1'h1):(1'h1)] : {reg16}) >> wire6));
        end
    end
endmodule