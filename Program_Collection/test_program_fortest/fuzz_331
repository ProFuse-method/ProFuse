(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire75;
  wire [(3'h7):(1'h0)] wire74;
  wire signed [(3'h7):(1'h0)] wire70;
  wire [(3'h6):(1'h0)] wire69;
  wire [(2'h2):(1'h0)] wire66;
  wire [(4'h9):(1'h0)] wire8;
  wire [(3'h6):(1'h0)] wire7;
  wire signed [(4'ha):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire4;
  reg signed [(4'h8):(1'h0)] reg73 = (1'h0);
  reg [(4'h9):(1'h0)] reg72 = (1'h0);
  reg [(4'h8):(1'h0)] reg71 = (1'h0);
  reg [(4'hb):(1'h0)] reg68 = (1'h0);
  reg [(4'h8):(1'h0)] reg5 = (1'h0);
  assign y = {wire75,
                 wire74,
                 wire70,
                 wire69,
                 wire66,
                 wire8,
                 wire7,
                 wire6,
                 wire4,
                 reg73,
                 reg72,
                 reg71,
                 reg68,
                 reg5,
                 (1'h0)};
  assign wire4 = wire3;
  always
    @(posedge clk) begin
      reg5 <= (($signed((wire1 >>> wire2)) ?
              ($signed(wire2) >> (wire0 | wire2)) : (~^(&wire2))) ?
          wire2[(1'h1):(1'h1)] : ($unsigned(wire1) ?
              $signed((wire4 & wire1)) : ((~wire2) ? {wire0} : (8'ha6))));
    end
  assign wire6 = (({$signed(wire1)} + ((wire1 ?
                     wire4 : reg5) >= wire0)) >>> ($unsigned((wire4 & (8'ha7))) ?
                     $unsigned({(8'ha3)}) : ((8'hae) ?
                         wire3 : (wire2 != reg5))));
  assign wire7 = $signed($signed(wire2));
  assign wire8 = ($unsigned($signed((wire6 ?
                     wire1 : wire0))) <= wire4[(1'h1):(1'h0)]);
  module9 #() modinst67 (.wire13(wire3), .clk(clk), .wire11(wire8), .wire12(wire1), .y(wire66), .wire10(wire4));
  always
    @(posedge clk) begin
      reg68 <= {(($signed((8'haf)) >= $signed(reg5)) == (8'ha0))};
    end
  assign wire69 = (^~((((8'had) ? wire2 : wire4) ?
                      (wire7 ? wire0 : wire3) : (wire0 ?
                          wire0 : wire66)) || $unsigned((+wire3))));
  assign wire70 = ((~wire1[(1'h1):(1'h0)]) ?
                      (wire66[(1'h0):(1'h0)] > $unsigned((-wire4))) : {($signed(wire6) ?
                              wire2 : $unsigned((8'hac)))});
  always
    @(posedge clk) begin
      reg71 <= reg5;
      reg72 <= $unsigned({(8'haa)});
      reg73 <= ((!(wire70[(2'h3):(1'h1)] ?
              ((8'ha8) ? reg72 : reg68) : wire8[(3'h5):(2'h2)])) ?
          $unsigned((&(wire2 && wire7))) : $signed(wire2));
    end
  assign wire74 = {(!(~^(reg5 + wire4)))};
  assign wire75 = (!wire6[(3'h4):(3'h4)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9  (y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h75):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire13;
  input wire [(4'h8):(1'h0)] wire12;
  input wire signed [(4'h9):(1'h0)] wire11;
  input wire signed [(3'h4):(1'h0)] wire10;
  wire signed [(3'h7):(1'h0)] wire65;
  wire signed [(4'h9):(1'h0)] wire64;
  wire [(4'ha):(1'h0)] wire63;
  wire [(4'ha):(1'h0)] wire61;
  wire [(2'h3):(1'h0)] wire36;
  wire [(4'h9):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire34;
  wire signed [(4'h8):(1'h0)] wire33;
  wire [(4'hb):(1'h0)] wire32;
  wire [(3'h7):(1'h0)] wire30;
  reg [(3'h7):(1'h0)] reg37 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg16 = (1'h0);
  reg [(3'h5):(1'h0)] reg15 = (1'h0);
  reg [(4'ha):(1'h0)] reg14 = (1'h0);
  assign y = {wire65,
                 wire64,
                 wire63,
                 wire61,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire30,
                 reg37,
                 reg16,
                 reg15,
                 reg14,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg14 <= ({(^~(~^(8'hb0)))} && $signed(wire10));
      reg15 <= $unsigned($unsigned(wire12));
      reg16 <= $unsigned($unsigned(wire10[(2'h2):(1'h1)]));
    end
  module17 #() modinst31 (.y(wire30), .clk(clk), .wire18(wire10), .wire21(reg16), .wire19(reg14), .wire20(wire11));
  assign wire32 = reg16;
  assign wire33 = $signed(reg14);
  assign wire34 = wire13;
  assign wire35 = wire34[(2'h2):(1'h0)];
  assign wire36 = (reg14 ?
                      $signed((reg16 ?
                          wire35 : $signed(reg16))) : reg15[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      reg37 <= {((~|$unsigned((8'ha5))) ?
              $unsigned((wire35 >>> wire34)) : ((wire34 > wire13) <<< $unsigned(wire34)))};
    end
  module38 #() modinst62 (wire61, clk, wire32, wire34, wire13, wire11);
  assign wire63 = $signed($signed(((|reg14) != wire11[(3'h7):(1'h0)])));
  assign wire64 = reg15[(1'h1):(1'h0)];
  assign wire65 = wire12[(3'h5):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module38  (y, clk, wire42, wire41, wire40, wire39);
  output wire [(32'h6f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire42;
  input wire [(4'h9):(1'h0)] wire41;
  input wire signed [(4'h9):(1'h0)] wire40;
  input wire [(3'h6):(1'h0)] wire39;
  wire signed [(4'ha):(1'h0)] wire60;
  wire [(2'h2):(1'h0)] wire58;
  wire signed [(4'hb):(1'h0)] wire57;
  wire signed [(2'h2):(1'h0)] wire56;
  wire signed [(3'h4):(1'h0)] wire55;
  wire signed [(3'h6):(1'h0)] wire50;
  reg [(3'h5):(1'h0)] reg59 = (1'h0);
  reg [(3'h5):(1'h0)] reg54 = (1'h0);
  reg [(4'h8):(1'h0)] reg53 = (1'h0);
  reg [(4'hb):(1'h0)] reg52 = (1'h0);
  reg [(3'h6):(1'h0)] reg51 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg48 = (1'h0);
  reg [(3'h4):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg46 = (1'h0);
  reg [(4'h8):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg44 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg43 = (1'h0);
  assign y = {wire60,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire50,
                 reg59,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($unsigned(wire41))
        begin
          reg43 <= $unsigned((wire41[(3'h7):(2'h3)] >> ((~^(8'h9f)) ^~ wire39[(1'h0):(1'h0)])));
          if (wire40)
            begin
              reg44 <= wire41[(2'h3):(1'h0)];
            end
          else
            begin
              reg44 <= reg43[(2'h2):(1'h1)];
              reg45 <= ($unsigned((!wire40[(3'h6):(2'h3)])) <<< $unsigned((((8'had) & wire41) > $signed(wire42))));
              reg46 <= $signed((~&$signed($unsigned(wire42))));
            end
        end
      else
        begin
          if (((((-wire40) == $signed((8'h9d))) ?
                  (reg43 ? (~|reg43) : $unsigned((8'h9e))) : $signed(reg43)) ?
              (+$unsigned((wire41 ?
                  (8'ha4) : wire40))) : ({reg44} | reg45[(3'h5):(2'h2)])))
            begin
              reg43 <= (-(reg44[(3'h6):(3'h5)] ?
                  $unsigned((reg46 <<< (8'ha4))) : (wire42[(3'h4):(1'h0)] * wire42[(3'h4):(2'h2)])));
              reg44 <= (wire41 ? {reg46} : reg45);
              reg45 <= (&reg45[(3'h4):(2'h2)]);
            end
          else
            begin
              reg43 <= ($unsigned((-$unsigned((8'ha5)))) ?
                  $unsigned(($signed(reg46) ?
                      (^reg45) : $unsigned(wire40))) : (reg43[(2'h2):(1'h1)] ?
                      (~^$signed(wire41)) : reg46[(2'h2):(1'h0)]));
              reg44 <= wire42;
              reg45 <= reg46;
            end
          reg46 <= reg46;
          reg47 <= (!wire40);
        end
      reg48 <= wire39[(1'h0):(1'h0)];
      reg49 <= (($signed((&wire39)) <<< (~reg46[(2'h2):(1'h0)])) >>> ((~&(~|reg48)) ?
          $signed($signed(reg46)) : ((wire39 + reg46) == $unsigned((8'ha5)))));
    end
  assign wire50 = reg44[(3'h5):(2'h2)];
  always
    @(posedge clk) begin
      reg51 <= ((reg43[(1'h0):(1'h0)] ?
              wire40[(3'h4):(1'h1)] : $unsigned(reg48[(3'h6):(2'h3)])) ?
          (({(8'haa)} == $unsigned(wire41)) ?
              ($signed(reg43) ?
                  wire41 : {(8'ha2)}) : (^(|reg48))) : {{wire50[(2'h3):(1'h0)]}});
      reg52 <= (~(8'h9f));
      reg53 <= $unsigned($signed($signed(((8'ha3) ? reg48 : wire50))));
    end
  always
    @(posedge clk) begin
      reg54 <= reg47;
    end
  assign wire55 = wire42;
  assign wire56 = $unsigned(wire55);
  assign wire57 = (reg44 >>> (wire39[(1'h0):(1'h0)] ?
                      $unsigned((~&wire40)) : $signed(reg46)));
  assign wire58 = reg43;
  always
    @(posedge clk) begin
      reg59 <= reg46[(2'h2):(1'h1)];
    end
  assign wire60 = (!(reg54 << (reg52[(4'ha):(1'h1)] ?
                      (~reg44) : (wire42 >> reg46))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17
#(parameter param29 = (!(((!(8'ha1)) ? ((8'hab) | (8'h9f)) : ((8'hac) | (8'h9d))) ? (((8'hab) ? (8'hb0) : (8'ha5)) ? ((8'ha0) ? (8'ha5) : (8'haf)) : (8'ha8)) : ({(8'h9c)} && ((8'h9e) | (8'hab))))))
(y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire21;
  input wire [(3'h6):(1'h0)] wire20;
  input wire [(2'h3):(1'h0)] wire19;
  input wire [(3'h4):(1'h0)] wire18;
  wire [(4'hb):(1'h0)] wire28;
  wire signed [(4'h8):(1'h0)] wire27;
  wire signed [(2'h2):(1'h0)] wire26;
  wire signed [(3'h4):(1'h0)] wire25;
  wire signed [(4'ha):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire23;
  wire signed [(2'h2):(1'h0)] wire22;
  assign y = {wire28, wire27, wire26, wire25, wire24, wire23, wire22, (1'h0)};
  assign wire22 = (^~{(wire20 ? (wire18 && wire18) : wire19)});
  assign wire23 = ($unsigned((8'ha2)) ?
                      $unsigned($signed(wire20)) : (wire22 <<< wire18));
  assign wire24 = {({wire18[(2'h2):(1'h0)]} ?
                          ((~^wire21) * $unsigned(wire19)) : wire18[(2'h3):(1'h1)])};
  assign wire25 = wire20;
  assign wire26 = $unsigned($unsigned(wire21[(4'hb):(4'hb)]));
  assign wire27 = wire18[(2'h2):(1'h1)];
  assign wire28 = (((~^(wire19 | wire22)) ?
                          $signed(((8'had) || wire19)) : $unsigned((wire21 ?
                              (8'hae) : wire18))) ?
                      (((wire27 < wire18) < wire24[(3'h5):(3'h4)]) != $unsigned((!wire19))) : (~&($signed((8'h9d)) <= (+wire24))));
endmodule