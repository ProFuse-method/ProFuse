(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param82 = (((8'hab) >>> (((8'h9c) < (8'hae)) * ((8'h9d) & (8'h9d)))) ? ((+((8'ha4) ? (8'ha2) : (8'hb0))) >> (|{(8'h9c)})) : {({(8'haa)} < {(8'hab)})}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'ha2):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire79;
  wire [(4'hb):(1'h0)] wire78;
  wire [(4'h9):(1'h0)] wire76;
  wire signed [(4'hb):(1'h0)] wire73;
  wire signed [(4'hb):(1'h0)] wire64;
  wire signed [(4'h8):(1'h0)] wire63;
  wire [(4'hb):(1'h0)] wire61;
  wire [(4'h9):(1'h0)] wire16;
  wire signed [(4'ha):(1'h0)] wire4;
  reg signed [(3'h4):(1'h0)] reg81 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg77 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg75 = (1'h0);
  reg [(4'h8):(1'h0)] reg74 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg72 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg71 = (1'h0);
  reg [(2'h3):(1'h0)] reg70 = (1'h0);
  reg [(4'hb):(1'h0)] reg69 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg68 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg67 = (1'h0);
  reg [(4'hb):(1'h0)] reg66 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg65 = (1'h0);
  assign y = {wire79,
                 wire78,
                 wire76,
                 wire73,
                 wire64,
                 wire63,
                 wire61,
                 wire16,
                 wire4,
                 reg81,
                 reg77,
                 reg75,
                 reg74,
                 reg72,
                 reg71,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 (1'h0)};
  assign wire4 = (wire0[(2'h3):(2'h2)] - $unsigned((wire3[(2'h3):(2'h2)] & $signed(wire0))));
  module5 #() modinst17 (wire16, clk, wire4, wire2, wire1, wire0);
  module18 #() modinst62 (.wire20(wire3), .wire21(wire16), .wire22(wire4), .clk(clk), .wire19(wire2), .y(wire61));
  assign wire63 = wire1[(1'h1):(1'h0)];
  assign wire64 = ($signed($unsigned(((8'had) - wire61))) | $signed($unsigned((8'ha8))));
  always
    @(posedge clk) begin
      if ($signed((wire0 * $unsigned({wire61}))))
        begin
          if (wire2[(1'h1):(1'h1)])
            begin
              reg65 <= {(((~&wire0) * $signed(wire64)) + (((8'ha1) == wire64) ?
                      $signed((8'haa)) : wire61[(1'h1):(1'h1)]))};
            end
          else
            begin
              reg65 <= $signed($signed($unsigned($unsigned(wire64))));
              reg66 <= $signed(({$unsigned(wire3)} != (reg65 ~^ {wire1})));
              reg67 <= $signed(reg65[(4'h8):(4'h8)]);
            end
        end
      else
        begin
          if (wire4)
            begin
              reg65 <= ({{(wire64 ? reg65 : wire0)}} ?
                  ($signed(wire4[(4'h9):(2'h3)]) ~^ (+wire1[(3'h5):(2'h3)])) : wire63);
              reg66 <= ((^((wire64 ? wire0 : wire16) ?
                      wire1[(3'h7):(3'h6)] : wire61[(4'h9):(3'h7)])) ?
                  wire0[(3'h4):(2'h3)] : $unsigned($signed((+wire63))));
              reg67 <= {$unsigned(((reg65 <= reg65) ?
                      {(8'ha7)} : (wire16 ? wire2 : reg66)))};
            end
          else
            begin
              reg65 <= $unsigned((~^wire2));
              reg66 <= {wire64[(4'h9):(3'h4)]};
            end
          if (wire2[(3'h6):(2'h2)])
            begin
              reg68 <= wire2[(3'h4):(3'h4)];
            end
          else
            begin
              reg68 <= ((wire64[(3'h4):(3'h4)] << {(^~reg68)}) ?
                  $signed(($signed((8'ha3)) >= $signed(wire61))) : (((~^wire0) == (wire61 ?
                          wire4 : wire63)) ?
                      wire61[(3'h7):(3'h6)] : (!(reg68 < wire3))));
              reg69 <= (~|wire64[(3'h4):(3'h4)]);
              reg70 <= wire4[(1'h1):(1'h0)];
            end
        end
      reg71 <= wire63[(2'h2):(1'h1)];
      reg72 <= {{$signed($unsigned(wire16))}};
    end
  assign wire73 = (^$signed($unsigned(wire0)));
  always
    @(posedge clk) begin
      reg74 <= $unsigned((!(^(|reg70))));
      reg75 <= (&(reg74 ?
          ((8'h9f) | {wire4}) : ($signed(wire3) ? $signed(wire4) : {reg71})));
    end
  assign wire76 = $unsigned($unsigned(wire63[(1'h0):(1'h0)]));
  always
    @(posedge clk) begin
      reg77 <= $signed((reg65[(4'h9):(3'h5)] >= $signed((wire64 ?
          reg74 : wire76))));
    end
  assign wire78 = reg67[(3'h7):(3'h7)];
  module35 #() modinst80 (.clk(clk), .wire36(wire16), .wire39(reg68), .wire37(wire1), .wire38(reg69), .y(wire79));
  always
    @(posedge clk) begin
      reg81 <= {wire76};
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18  (y, clk, wire19, wire20, wire21, wire22);
  output wire [(32'h9e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire19;
  input wire signed [(4'ha):(1'h0)] wire20;
  input wire signed [(3'h6):(1'h0)] wire21;
  input wire [(2'h2):(1'h0)] wire22;
  wire [(3'h4):(1'h0)] wire60;
  wire [(3'h6):(1'h0)] wire59;
  wire [(2'h2):(1'h0)] wire54;
  wire [(4'hb):(1'h0)] wire23;
  wire signed [(4'hb):(1'h0)] wire32;
  wire [(4'hb):(1'h0)] wire33;
  wire [(3'h6):(1'h0)] wire34;
  wire signed [(3'h7):(1'h0)] wire49;
  reg signed [(4'ha):(1'h0)] reg58 = (1'h0);
  reg [(3'h7):(1'h0)] reg57 = (1'h0);
  reg [(3'h6):(1'h0)] reg56 = (1'h0);
  reg [(2'h3):(1'h0)] reg55 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg53 = (1'h0);
  reg [(4'ha):(1'h0)] reg52 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg51 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg24 = (1'h0);
  reg [(2'h2):(1'h0)] reg25 = (1'h0);
  reg [(3'h5):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg28 = (1'h0);
  reg [(4'h8):(1'h0)] reg29 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg30 = (1'h0);
  reg [(2'h2):(1'h0)] reg31 = (1'h0);
  assign y = {wire60,
                 wire59,
                 wire54,
                 wire23,
                 wire32,
                 wire33,
                 wire34,
                 wire49,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg53,
                 reg52,
                 reg51,
                 reg24,
                 reg25,
                 reg26,
                 reg27,
                 reg28,
                 reg29,
                 reg30,
                 reg31,
                 (1'h0)};
  assign wire23 = (wire22[(1'h1):(1'h0)] ^ {wire21});
  always
    @(posedge clk) begin
      reg24 <= $unsigned((8'had));
    end
  always
    @(posedge clk) begin
      if ((wire21[(2'h2):(1'h1)] ?
          wire20 : $unsigned(((wire23 && wire23) ?
              (~^wire22) : $signed(wire20)))))
        begin
          if ($signed((reg24 >= {(~|wire20)})))
            begin
              reg25 <= (8'h9d);
              reg26 <= $signed(((&(wire22 ^~ (8'ha5))) ^~ (&(wire19 >> wire23))));
              reg27 <= ((wire22[(2'h2):(1'h0)] ?
                      reg26 : ($unsigned(reg24) <<< $signed(reg26))) ?
                  reg26 : wire21[(1'h0):(1'h0)]);
            end
          else
            begin
              reg25 <= wire20;
              reg26 <= {((~&(reg25 * reg24)) + reg24)};
              reg27 <= wire21[(3'h4):(1'h1)];
            end
          if (((~&((wire20 ? wire21 : (8'ha7)) <= wire21[(1'h1):(1'h0)])) ?
              (reg24[(3'h4):(1'h0)] ?
                  wire20[(3'h7):(3'h6)] : $signed($unsigned(wire21))) : ($signed(wire20[(1'h1):(1'h1)]) ?
                  (!wire21) : (wire23 ? $unsigned(wire23) : (~^reg24)))))
            begin
              reg28 <= $unsigned((((+reg27) & $unsigned(reg25)) ~^ ((reg24 ?
                      reg24 : wire23) ?
                  (wire20 ? reg26 : reg24) : (wire19 ? wire22 : wire20))));
            end
          else
            begin
              reg28 <= (~$signed({$unsigned(reg25)}));
              reg29 <= $unsigned(reg27);
            end
          reg30 <= (~{reg27[(3'h7):(1'h1)]});
        end
      else
        begin
          reg25 <= $unsigned(($signed($unsigned(reg28)) <= reg28));
          if ($unsigned(reg26[(1'h1):(1'h0)]))
            begin
              reg26 <= reg29;
              reg27 <= $unsigned((+(+reg27)));
            end
          else
            begin
              reg26 <= reg28[(3'h7):(2'h3)];
            end
        end
      reg31 <= $signed({{$unsigned(wire20)}});
    end
  assign wire32 = $signed(wire22[(1'h1):(1'h1)]);
  assign wire33 = $unsigned($unsigned(reg29[(3'h5):(1'h1)]));
  assign wire34 = $signed({((reg30 ? reg29 : reg29) ^ ((8'ha9) ?
                          wire33 : wire20))});
  module35 #() modinst50 (.wire37(reg31), .y(wire49), .clk(clk), .wire38(reg30), .wire39(reg29), .wire36(wire21));
  always
    @(posedge clk) begin
      reg51 <= $signed(wire20);
    end
  always
    @(posedge clk) begin
      if ((|$unsigned((reg28 ? {wire23} : (wire23 + reg31)))))
        begin
          reg52 <= $unsigned(reg51[(4'ha):(1'h1)]);
          reg53 <= ($unsigned(wire23) > $signed(((wire33 ?
              reg51 : wire22) && (wire22 > reg31))));
        end
      else
        begin
          reg52 <= (reg31 ^ ((+((8'ha2) != reg51)) ?
              (+((8'ha6) < wire19)) : ($unsigned(wire20) ?
                  (wire21 ? (8'ha4) : reg27) : (~^reg27))));
        end
    end
  assign wire54 = reg30;
  always
    @(posedge clk) begin
      reg55 <= {reg51[(3'h5):(1'h0)]};
      reg56 <= ($unsigned(wire21) + (($unsigned(wire23) ?
          $unsigned(wire49) : (^reg28)) >= $signed($signed(wire22))));
      if ((wire21[(3'h5):(1'h1)] ^~ reg26[(3'h5):(1'h0)]))
        begin
          reg57 <= reg26;
        end
      else
        begin
          reg57 <= ((reg28[(2'h2):(1'h1)] ?
              reg52[(1'h1):(1'h1)] : $signed(reg25[(1'h1):(1'h1)])) && $unsigned(reg24[(2'h2):(2'h2)]));
          reg58 <= $unsigned(reg25);
        end
    end
  assign wire59 = {{{$unsigned(wire19)}}};
  assign wire60 = $signed($signed(((^~wire23) > (reg51 ? wire19 : reg52))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h27):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire9;
  input wire [(3'h7):(1'h0)] wire8;
  input wire signed [(3'h7):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire6;
  wire signed [(3'h6):(1'h0)] wire14;
  wire signed [(3'h6):(1'h0)] wire13;
  wire [(4'h8):(1'h0)] wire12;
  wire [(2'h2):(1'h0)] wire11;
  wire [(3'h7):(1'h0)] wire10;
  reg [(4'h9):(1'h0)] reg15 = (1'h0);
  assign y = {wire14, wire13, wire12, wire11, wire10, reg15, (1'h0)};
  assign wire10 = (|(!{((8'ha1) ? (8'ha4) : wire9)}));
  assign wire11 = wire9[(3'h4):(1'h0)];
  assign wire12 = (^~{{((8'h9e) ? wire9 : wire6)}});
  assign wire13 = $signed((wire11[(2'h2):(1'h1)] && wire11));
  assign wire14 = (+$signed(wire10));
  always
    @(posedge clk) begin
      reg15 <= $signed((wire8[(1'h1):(1'h0)] >= $signed(wire14[(2'h3):(2'h3)])));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module35
#(parameter param48 = {(({(8'h9f)} ? ((8'hb0) <<< (8'h9c)) : ((8'haf) * (8'hac))) * ((~(8'hae)) ? ((8'hab) ? (8'had) : (8'h9c)) : ((8'h9d) ? (8'h9d) : (8'h9f))))})
(y, clk, wire39, wire38, wire37, wire36);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire39;
  input wire signed [(4'hb):(1'h0)] wire38;
  input wire signed [(2'h2):(1'h0)] wire37;
  input wire [(3'h6):(1'h0)] wire36;
  wire [(3'h4):(1'h0)] wire45;
  wire signed [(3'h7):(1'h0)] wire44;
  wire [(4'ha):(1'h0)] wire43;
  wire signed [(3'h6):(1'h0)] wire42;
  wire [(4'ha):(1'h0)] wire41;
  wire [(3'h7):(1'h0)] wire40;
  reg signed [(3'h6):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg46 = (1'h0);
  assign y = {wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 reg47,
                 reg46,
                 (1'h0)};
  assign wire40 = $signed(wire39);
  assign wire41 = wire36[(1'h1):(1'h1)];
  assign wire42 = (8'ha8);
  assign wire43 = (((8'haa) <= ($signed(wire42) ?
                          $unsigned(wire36) : $unsigned(wire39))) ?
                      (8'ha1) : $unsigned(wire39));
  assign wire44 = {$signed($unsigned(((8'h9d) ? wire43 : wire40)))};
  assign wire45 = $signed(({wire37} ?
                      ((-(8'ha5)) ? (!(8'h9d)) : (+wire40)) : wire44));
  always
    @(posedge clk) begin
      reg46 <= (wire45[(3'h4):(3'h4)] - {(~&$unsigned(wire45))});
      reg47 <= ((8'hb0) ? wire39[(2'h2):(2'h2)] : wire41);
    end
endmodule