(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire69;
  wire signed [(4'h9):(1'h0)] wire68;
  wire signed [(4'ha):(1'h0)] wire67;
  wire signed [(4'ha):(1'h0)] wire66;
  wire signed [(2'h2):(1'h0)] wire62;
  wire [(3'h5):(1'h0)] wire61;
  wire [(4'h9):(1'h0)] wire59;
  reg signed [(3'h6):(1'h0)] reg65 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg64 = (1'h0);
  reg [(3'h6):(1'h0)] reg63 = (1'h0);
  assign y = {wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire62,
                 wire61,
                 wire59,
                 reg65,
                 reg64,
                 reg63,
                 (1'h0)};
  module4 #() modinst60 (.y(wire59), .wire5(wire0), .clk(clk), .wire7(wire3), .wire6(wire1), .wire8(wire2));
  assign wire61 = (($signed(wire2[(3'h5):(1'h1)]) ?
                      ($signed(wire1) ?
                          (wire1 ?
                              wire59 : wire59) : $unsigned(wire0)) : wire3[(4'h9):(1'h1)]) && (8'haf));
  assign wire62 = $unsigned((-$unsigned((wire0 ? wire61 : wire0))));
  always
    @(posedge clk) begin
      reg63 <= wire59[(1'h0):(1'h0)];
      reg64 <= {(8'ha0)};
      reg65 <= (^$unsigned($signed({wire62})));
    end
  assign wire66 = (+wire2[(4'h9):(1'h0)]);
  assign wire67 = ($signed(((wire1 <<< (8'h9d)) ?
                      wire0[(1'h1):(1'h1)] : (8'ha6))) >= (^$unsigned((wire1 ?
                      wire1 : (8'ha6)))));
  assign wire68 = (reg65 ?
                      $signed($unsigned($signed((8'h9f)))) : ((8'haf) ^ ((wire2 ?
                          wire2 : wire66) != $unsigned(reg65))));
  assign wire69 = wire67[(4'ha):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param58 = {(((-(8'h9e)) ^~ ((8'ha0) == (8'ha1))) ? ({(8'ha0)} && ((8'haa) ? (8'ha2) : (8'ha3))) : (((8'ha9) ? (8'h9f) : (8'ha8)) ? ((8'h9e) ? (8'ha1) : (8'haa)) : ((8'hac) ? (8'hac) : (8'ha1))))})
(y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire5;
  input wire signed [(4'ha):(1'h0)] wire6;
  input wire signed [(4'h9):(1'h0)] wire7;
  input wire [(4'h9):(1'h0)] wire8;
  wire [(4'h8):(1'h0)] wire9;
  wire signed [(4'ha):(1'h0)] wire25;
  wire signed [(4'hb):(1'h0)] wire44;
  wire [(3'h5):(1'h0)] wire48;
  wire [(4'h9):(1'h0)] wire49;
  wire [(3'h7):(1'h0)] wire50;
  wire [(3'h5):(1'h0)] wire51;
  wire [(3'h5):(1'h0)] wire52;
  wire signed [(3'h6):(1'h0)] wire53;
  wire signed [(3'h4):(1'h0)] wire54;
  wire [(4'h9):(1'h0)] wire56;
  reg [(2'h2):(1'h0)] reg46 = (1'h0);
  reg [(3'h7):(1'h0)] reg47 = (1'h0);
  assign y = {wire9,
                 wire25,
                 wire44,
                 wire48,
                 wire49,
                 wire50,
                 wire51,
                 wire52,
                 wire53,
                 wire54,
                 wire56,
                 reg46,
                 reg47,
                 (1'h0)};
  assign wire9 = $signed(((wire6[(1'h1):(1'h1)] ? $unsigned(wire5) : (8'ha8)) ?
                     (((8'hae) >>> wire6) ?
                         $unsigned((8'h9f)) : ((8'ha4) >= wire6)) : ($unsigned(wire5) ?
                         wire6[(4'h8):(4'h8)] : (wire5 >> wire7))));
  module10 #() modinst26 (.wire11(wire9), .wire12(wire5), .wire13(wire7), .y(wire25), .wire14(wire6), .clk(clk));
  module27 #() modinst45 (wire44, clk, wire7, wire9, wire8, wire6);
  always
    @(posedge clk) begin
      if (({(wire7 ? (wire25 ? wire7 : wire7) : wire44[(2'h2):(1'h0)])} ?
          $unsigned($unsigned(wire5[(2'h2):(1'h0)])) : $signed({(wire7 ?
                  wire7 : wire8)})))
        begin
          reg46 <= $unsigned($unsigned((~&(wire44 - wire25))));
        end
      else
        begin
          reg46 <= (~^(wire25 ?
              $unsigned($signed((8'hac))) : (~^(wire9 ? wire7 : wire9))));
          reg47 <= $unsigned((~^$unsigned($signed(wire8))));
        end
    end
  assign wire48 = $unsigned($unsigned(wire7[(4'h9):(3'h4)]));
  assign wire49 = wire44;
  assign wire50 = $unsigned((8'h9c));
  assign wire51 = ((wire49[(1'h1):(1'h1)] | ((wire7 ^ reg46) ?
                      ((8'ha2) ? reg47 : wire25) : (wire8 >= wire5))) < reg47);
  assign wire52 = wire5;
  assign wire53 = (wire7[(3'h4):(1'h0)] ?
                      (((reg46 ?
                          wire6 : (8'ha7)) ^~ (^~wire7)) * (&reg47[(2'h3):(2'h3)])) : $unsigned(reg46[(1'h0):(1'h0)]));
  module27 #() modinst55 (wire54, clk, wire53, wire9, wire49, wire25);
  module10 #() modinst57 (.wire14(reg47), .wire13(wire9), .wire11(wire8), .clk(clk), .y(wire56), .wire12(wire44));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module27
#(parameter param43 = (({((8'hb0) ? (8'haf) : (8'ha0))} ~^ (8'ha2)) ? ({((8'haf) ? (8'h9c) : (8'haf))} ? ({(8'ha3)} >> (~(8'hab))) : (+(8'ha9))) : ((^~((8'ha1) - (8'had))) + ((~&(8'hae)) ? ((8'h9d) ? (8'hac) : (8'ha7)) : ((8'h9e) >> (8'hac))))))
(y, clk, wire31, wire30, wire29, wire28);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire31;
  input wire [(4'h8):(1'h0)] wire30;
  input wire signed [(4'h9):(1'h0)] wire29;
  input wire [(4'ha):(1'h0)] wire28;
  wire [(3'h5):(1'h0)] wire42;
  wire signed [(3'h7):(1'h0)] wire41;
  wire signed [(4'hb):(1'h0)] wire39;
  wire signed [(2'h3):(1'h0)] wire38;
  wire signed [(3'h6):(1'h0)] wire37;
  wire signed [(3'h6):(1'h0)] wire36;
  wire signed [(3'h5):(1'h0)] wire34;
  wire signed [(2'h2):(1'h0)] wire33;
  wire signed [(4'ha):(1'h0)] wire32;
  reg [(3'h4):(1'h0)] reg40 = (1'h0);
  reg [(4'ha):(1'h0)] reg35 = (1'h0);
  assign y = {wire42,
                 wire41,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire34,
                 wire33,
                 wire32,
                 reg40,
                 reg35,
                 (1'h0)};
  assign wire32 = $unsigned($unsigned(wire31));
  assign wire33 = (wire32 != ((+wire28[(3'h4):(3'h4)]) << {{wire28}}));
  assign wire34 = $unsigned(wire29);
  always
    @(posedge clk) begin
      reg35 <= (~&wire34[(3'h4):(1'h0)]);
    end
  assign wire36 = $signed((reg35 != ((~&wire34) >> (wire31 << reg35))));
  assign wire37 = $unsigned((!$unsigned((~wire34))));
  assign wire38 = (((~^wire34[(2'h2):(1'h1)]) | ((wire31 ?
                      wire29 : (8'haf)) == (wire31 ?
                      wire32 : wire32))) >> {wire28});
  assign wire39 = wire33;
  always
    @(posedge clk) begin
      reg40 <= $signed($unsigned(((!(8'had)) >= (reg35 ? wire36 : wire37))));
    end
  assign wire41 = $signed($signed(((wire39 + (8'hae)) ?
                      {(8'ha3)} : $signed(wire39))));
  assign wire42 = (~^$unsigned(reg40));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire14;
  input wire signed [(3'h6):(1'h0)] wire13;
  input wire [(4'hb):(1'h0)] wire12;
  input wire [(3'h7):(1'h0)] wire11;
  wire signed [(4'hb):(1'h0)] wire24;
  wire signed [(4'h9):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire20;
  wire signed [(4'h8):(1'h0)] wire19;
  wire [(4'h9):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire16;
  wire [(3'h7):(1'h0)] wire15;
  reg [(3'h4):(1'h0)] reg23 = (1'h0);
  assign y = {wire24,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 reg23,
                 (1'h0)};
  assign wire15 = (wire12 ?
                      (wire14[(2'h3):(2'h2)] ?
                          $signed((~&wire11)) : $unsigned($unsigned(wire11))) : $signed($unsigned((&(8'ha3)))));
  assign wire16 = wire15[(3'h6):(2'h2)];
  assign wire17 = {$signed((wire15[(3'h5):(3'h4)] | wire11))};
  assign wire18 = $unsigned(($unsigned((-wire14)) ?
                      wire14[(2'h2):(1'h1)] : wire17));
  assign wire19 = $unsigned(wire14);
  assign wire20 = $unsigned(wire11[(2'h2):(1'h0)]);
  assign wire21 = wire19[(3'h7):(3'h5)];
  assign wire22 = (&(((8'h9c) ? $unsigned(wire18) : $signed(wire21)) ?
                      $signed(wire12) : wire18[(2'h2):(1'h0)]));
  always
    @(posedge clk) begin
      reg23 <= (8'ha6);
    end
  assign wire24 = wire15[(1'h1):(1'h1)];
endmodule