(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param95 = (({(((8'hb0) ? (8'ha9) : (8'hbf)) ? ((8'haf) ~^ (8'ha3)) : (8'ha9)), (((8'h9f) || (8'hac)) != (+(8'hb6)))} ? {((!(8'hb2)) << ((8'hb8) ^~ (8'hbd))), ((~&(8'h9f)) ? ((8'ha3) != (8'ha2)) : (^(8'hb5)))} : ((((8'hb0) ? (8'had) : (8'ha9)) ? (^(7'h40)) : ((8'had) ? (8'hb7) : (8'hba))) ? (~{(8'haf), (8'hbd)}) : ({(8'ha2)} ? ((8'hbb) ? (8'ha7) : (7'h41)) : ((8'ha5) ? (8'hbd) : (8'hbd))))) || ({((!(7'h44)) ? (8'ha2) : {(8'ha4)})} <= (((|(8'hba)) ? (|(8'had)) : ((8'h9d) ? (7'h40) : (8'hb9))) ? (((8'hb2) ? (7'h42) : (8'haf)) ? ((8'hae) ? (8'hbb) : (8'hab)) : {(8'hbc)}) : (8'ha4)))), 
parameter param96 = (param95 ? (param95 << (8'hbd)) : (8'hab)))
(y, clk, wire0, wire1, wire2, wire3, wire4);
  output wire [(32'h43):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h13):(1'h0)] wire0;
  input wire signed [(5'h10):(1'h0)] wire1;
  input wire [(5'h10):(1'h0)] wire2;
  input wire [(5'h11):(1'h0)] wire3;
  input wire signed [(5'h14):(1'h0)] wire4;
  wire signed [(4'hc):(1'h0)] wire94;
  wire [(3'h5):(1'h0)] wire93;
  wire [(4'hc):(1'h0)] wire92;
  wire [(5'h13):(1'h0)] wire5;
  wire [(4'hd):(1'h0)] wire6;
  wire signed [(3'h5):(1'h0)] wire90;
  assign y = {wire94, wire93, wire92, wire5, wire6, wire90, (1'h0)};
  assign wire5 = (^~$unsigned($signed((^(+wire4)))));
  assign wire6 = ((wire4 ^ (~^wire2)) ?
                     $signed(wire0[(4'h8):(4'h8)]) : {$unsigned($unsigned((|wire1)))});
  module7 #() modinst91 (.clk(clk), .wire11(wire6), .wire12(wire4), .wire8(wire0), .wire9(wire3), .wire10(wire5), .y(wire90));
  assign wire92 = $signed(((&((8'hb4) ?
                          {wire2, wire2} : (wire90 ? wire6 : wire3))) ?
                      $unsigned(wire5) : (~($unsigned(wire0) ?
                          (wire3 ? wire90 : wire90) : (wire6 ?
                              (8'h9e) : wire90)))));
  assign wire93 = ((($unsigned($unsigned(wire90)) ?
                      $unsigned($signed(wire3)) : (wire6[(2'h3):(1'h1)] && wire90[(2'h3):(2'h3)])) ^ (|(~|((8'hae) ^~ wire2)))) << wire3);
  assign wire94 = ($signed($unsigned($unsigned(((8'h9d) ? (8'hb0) : wire6)))) ?
                      $signed((8'hac)) : wire93[(1'h1):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire8, wire9, wire10, wire11, wire12);
  output wire [(32'h144):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hf):(1'h0)] wire8;
  input wire [(5'h10):(1'h0)] wire9;
  input wire signed [(5'h13):(1'h0)] wire10;
  input wire signed [(4'hd):(1'h0)] wire11;
  input wire [(2'h2):(1'h0)] wire12;
  wire [(3'h6):(1'h0)] wire13;
  wire [(5'h11):(1'h0)] wire14;
  wire signed [(4'hd):(1'h0)] wire33;
  wire signed [(4'hb):(1'h0)] wire35;
  wire signed [(5'h12):(1'h0)] wire36;
  wire [(3'h4):(1'h0)] wire37;
  wire signed [(2'h3):(1'h0)] wire38;
  wire [(4'h9):(1'h0)] wire72;
  reg signed [(3'h6):(1'h0)] reg88 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg87 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg86 = (1'h0);
  reg [(4'hc):(1'h0)] reg85 = (1'h0);
  reg [(5'h14):(1'h0)] reg83 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg82 = (1'h0);
  reg [(3'h5):(1'h0)] reg79 = (1'h0);
  reg [(4'hb):(1'h0)] reg77 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg19 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg89 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar84 = (1'h0);
  reg [(3'h6):(1'h0)] reg81 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg80 = (1'h0);
  reg [(4'hf):(1'h0)] reg78 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar76 = (1'h0);
  reg [(4'hc):(1'h0)] forvar75 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg74 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg39 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg20 = (1'h0);
  reg [(5'h14):(1'h0)] reg18 = (1'h0);
  reg [(3'h4):(1'h0)] reg17 = (1'h0);
  reg [(2'h2):(1'h0)] forvar16 = (1'h0);
  reg [(5'h13):(1'h0)] forvar15 = (1'h0);
  assign y = {wire13,
                 wire14,
                 wire33,
                 wire35,
                 wire36,
                 wire37,
                 wire38,
                 wire72,
                 reg88,
                 reg87,
                 reg86,
                 reg85,
                 reg83,
                 reg82,
                 reg79,
                 reg77,
                 reg19,
                 reg89,
                 forvar84,
                 reg81,
                 reg80,
                 reg78,
                 forvar76,
                 forvar75,
                 reg74,
                 reg39,
                 reg20,
                 reg18,
                 reg17,
                 forvar16,
                 forvar15,
                 (1'h0)};
  assign wire13 = ((^~wire10[(1'h0):(1'h0)]) ?
                      (-($signed(((7'h43) ? (8'ha8) : wire9)) ?
                          wire12[(1'h1):(1'h1)] : $unsigned((&wire9)))) : ({wire9,
                              (+wire11)} ?
                          (~(wire11 <<< ((8'hb4) ?
                              (8'had) : wire8))) : ((|wire9) ?
                              wire9 : (-(wire8 >> (7'h40))))));
  assign wire14 = {wire10[(4'h9):(3'h4)], $signed(wire10)};
  always
    @(posedge clk) begin
      for (forvar15 = (1'h0); (forvar15 < (1'h0)); forvar15 = (forvar15 + (1'h1)))
        begin
          for (forvar16 = (1'h0); (forvar16 < (1'h1)); forvar16 = (forvar16 + (1'h1)))
            begin
              reg17 = (wire10 ? forvar15 : (|(8'haf)));
              reg18 = (~^forvar15[(1'h0):(1'h0)]);
              reg19 <= $unsigned(((~&($signed(reg17) << wire10)) || ((reg18[(3'h5):(1'h1)] ?
                  $unsigned(wire13) : (~|(8'ha5))) ^~ ((wire12 < forvar15) ?
                  (wire11 ^ reg18) : $signed(forvar15)))));
              reg20 = (reg18[(2'h3):(1'h1)] ?
                  $unsigned($unsigned((&$unsigned(wire12)))) : {reg17,
                      ((+((8'hab) != wire11)) ?
                          (forvar16[(1'h1):(1'h0)] ?
                              (8'ha0) : (reg18 ?
                                  reg19 : (8'ha9))) : forvar16[(1'h0):(1'h0)])});
            end
        end
    end
  module21 #() modinst34 (.wire23(wire11), .clk(clk), .wire22(wire14), .wire24(wire8), .y(wire33), .wire25(reg19), .wire26(wire10));
  assign wire35 = $unsigned($signed({$unsigned(wire13[(3'h4):(2'h3)])}));
  assign wire36 = $signed((wire35[(3'h4):(2'h2)] && ((~&$unsigned(wire9)) > {(~|wire33)})));
  assign wire37 = {(8'hb9), ((~|$signed($signed((8'hb4)))) * (8'h9f))};
  assign wire38 = $signed($signed(($signed($signed(wire36)) && (-wire36))));
  always
    @(posedge clk) begin
      reg39 = wire12;
    end
  module40 #() modinst73 (.wire41(wire35), .y(wire72), .wire43(reg19), .wire42(wire36), .wire44(wire9), .clk(clk));
  always
    @(posedge clk) begin
      reg74 = ($unsigned(wire33) || wire33[(4'h9):(3'h6)]);
      for (forvar75 = (1'h0); (forvar75 < (1'h0)); forvar75 = (forvar75 + (1'h1)))
        begin
          for (forvar76 = (1'h0); (forvar76 < (3'h4)); forvar76 = (forvar76 + (1'h1)))
            begin
              reg77 <= (wire37[(2'h3):(1'h0)] ?
                  $signed($signed({(wire11 ?
                          wire36 : (8'h9f))})) : ($signed((|(wire10 ^ wire35))) ?
                      (+(~^(~wire36))) : forvar76));
              reg78 = wire13[(3'h4):(2'h2)];
              reg79 <= $signed(wire33[(4'hc):(4'hb)]);
              reg80 = $signed($signed((^~{(wire10 ~^ wire33)})));
              reg81 = $signed({(reg78 ? (-reg79) : reg77)});
            end
          reg82 <= $unsigned((8'ha6));
          reg83 <= $unsigned($unsigned($signed($unsigned(wire35[(3'h7):(2'h3)]))));
          for (forvar84 = (1'h0); (forvar84 < (1'h1)); forvar84 = (forvar84 + (1'h1)))
            begin
              reg85 <= reg81;
              reg86 <= $signed(((((wire8 > wire37) ?
                          $unsigned((8'hbc)) : $unsigned(forvar84)) ?
                      (wire36[(1'h0):(1'h0)] ?
                          (~|wire37) : $unsigned(wire33)) : $unsigned((reg78 ?
                          (8'hb7) : wire38))) ?
                  $signed((~^forvar76)) : wire9));
              reg87 <= ({$unsigned(reg77[(1'h0):(1'h0)])} <<< ((~|wire10) < $unsigned((8'ha5))));
              reg88 <= {{($unsigned((reg77 ? reg82 : reg83)) ?
                          ((wire9 == (8'haa)) | (reg80 >= wire10)) : ((~|reg79) ?
                              $signed(wire37) : (!forvar84))),
                      reg80},
                  (^~$unsigned(reg82[(3'h5):(2'h2)]))};
              reg89 = {$signed($unsigned(($unsigned(reg83) ?
                      ((8'h9c) & reg80) : $unsigned(reg88))))};
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module40  (y, clk, wire44, wire43, wire42, wire41);
  output wire [(32'h11c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire44;
  input wire [(4'h9):(1'h0)] wire43;
  input wire [(5'h12):(1'h0)] wire42;
  input wire [(4'h8):(1'h0)] wire41;
  wire signed [(5'h11):(1'h0)] wire71;
  wire [(5'h14):(1'h0)] wire70;
  wire [(3'h4):(1'h0)] wire69;
  wire signed [(2'h2):(1'h0)] wire68;
  wire signed [(2'h3):(1'h0)] wire67;
  wire [(4'h9):(1'h0)] wire66;
  wire [(5'h12):(1'h0)] wire65;
  wire [(3'h5):(1'h0)] wire64;
  reg [(4'h8):(1'h0)] reg63 = (1'h0);
  reg [(4'hd):(1'h0)] reg61 = (1'h0);
  reg [(4'hc):(1'h0)] reg60 = (1'h0);
  reg [(2'h3):(1'h0)] reg55 = (1'h0);
  reg [(3'h7):(1'h0)] reg52 = (1'h0);
  reg [(4'he):(1'h0)] reg51 = (1'h0);
  reg [(2'h3):(1'h0)] reg46 = (1'h0);
  reg signed [(4'he):(1'h0)] reg45 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg62 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg59 = (1'h0);
  reg [(5'h10):(1'h0)] reg58 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar57 = (1'h0);
  reg [(3'h7):(1'h0)] reg56 = (1'h0);
  reg signed [(4'he):(1'h0)] reg54 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar53 = (1'h0);
  reg [(2'h2):(1'h0)] reg50 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg49 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar48 = (1'h0);
  reg [(5'h15):(1'h0)] forvar47 = (1'h0);
  assign y = {wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire64,
                 reg63,
                 reg61,
                 reg60,
                 reg55,
                 reg52,
                 reg51,
                 reg46,
                 reg45,
                 reg62,
                 reg59,
                 reg58,
                 forvar57,
                 reg56,
                 reg54,
                 forvar53,
                 reg50,
                 reg49,
                 forvar48,
                 forvar47,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg45 <= wire44;
      reg46 <= reg45[(3'h4):(2'h2)];
      for (forvar47 = (1'h0); (forvar47 < (1'h1)); forvar47 = (forvar47 + (1'h1)))
        begin
          for (forvar48 = (1'h0); (forvar48 < (3'h4)); forvar48 = (forvar48 + (1'h1)))
            begin
              reg49 = (($signed((((7'h43) ? wire41 : wire43) ?
                  $unsigned(reg46) : wire42)) ^~ (wire43[(3'h7):(3'h5)] ?
                  $unsigned((8'ha0)) : ((reg45 == reg45) <= $unsigned(wire42)))) == (^~$unsigned((7'h44))));
              reg50 = ({$unsigned((reg46[(1'h0):(1'h0)] ?
                          (wire44 >= wire43) : (wire41 ? (8'had) : wire44)))} ?
                  $signed(reg49[(4'h9):(4'h8)]) : wire42);
              reg51 <= (~|$unsigned((wire42[(4'hb):(2'h2)] ?
                  $signed(wire43[(3'h7):(3'h7)]) : {(reg46 ?
                          reg46 : wire41)})));
              reg52 <= reg51[(1'h1):(1'h1)];
            end
          for (forvar53 = (1'h0); (forvar53 < (1'h0)); forvar53 = (forvar53 + (1'h1)))
            begin
              reg54 = $signed(((-(~(wire42 < wire43))) ?
                  ((-reg46) >>> (((7'h43) ?
                      forvar48 : reg49) <<< reg45[(4'he):(1'h1)])) : ((+(+forvar47)) && $unsigned($unsigned(wire44)))));
              reg55 <= (($unsigned(((8'hb5) >= (wire43 || forvar47))) || ((+$signed(reg46)) ?
                      (wire42[(5'h12):(4'h8)] >> reg46[(2'h3):(1'h1)]) : reg50[(1'h0):(1'h0)])) ?
                  (reg51 || $signed($signed((|reg49)))) : (-$unsigned(($signed(wire41) > wire42))));
            end
          reg56 = reg46[(1'h0):(1'h0)];
          for (forvar57 = (1'h0); (forvar57 < (2'h3)); forvar57 = (forvar57 + (1'h1)))
            begin
              reg58 = reg45;
              reg59 = $unsigned($unsigned(reg50[(1'h0):(1'h0)]));
              reg60 <= wire43[(3'h6):(2'h2)];
              reg61 <= {reg52[(1'h0):(1'h0)]};
              reg62 = reg56;
            end
        end
      reg63 <= ((wire43 ?
              $unsigned(({reg56,
                  (8'h9c)} + (-reg58))) : $signed($signed((!(8'ha5))))) ?
          reg62 : $signed(((~$signed(reg52)) ? reg49 : reg59)));
    end
  assign wire64 = wire43;
  assign wire65 = $unsigned(reg45);
  assign wire66 = reg52[(1'h0):(1'h0)];
  assign wire67 = ((($signed((8'haf)) ? wire43 : reg46) ?
                      reg52[(1'h1):(1'h1)] : (8'h9f)) != reg55[(2'h2):(1'h0)]);
  assign wire68 = wire44;
  assign wire69 = (wire41[(1'h1):(1'h1)] && $unsigned($unsigned(((wire44 <<< reg61) ?
                      (|reg60) : (-wire65)))));
  assign wire70 = reg61;
  assign wire71 = {((((wire69 - wire68) ? $unsigned(reg45) : {reg60, wire70}) ?
                          (~wire41) : (|$unsigned((8'hb9)))) ^ $signed($unsigned({reg60,
                          (8'hb6)}))),
                      {($unsigned($signed((8'hab))) ?
                              reg45 : (&wire43[(3'h4):(1'h0)])),
                          ($signed((|wire68)) ?
                              reg61[(4'hd):(4'hd)] : $unsigned((wire64 && wire69)))}};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21  (y, clk, wire26, wire25, wire24, wire23, wire22);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h13):(1'h0)] wire26;
  input wire [(4'h9):(1'h0)] wire25;
  input wire [(3'h5):(1'h0)] wire24;
  input wire [(4'hd):(1'h0)] wire23;
  input wire [(5'h11):(1'h0)] wire22;
  wire signed [(4'hb):(1'h0)] wire32;
  wire [(4'hd):(1'h0)] wire31;
  wire signed [(4'h8):(1'h0)] wire30;
  wire [(4'he):(1'h0)] wire29;
  wire [(4'hf):(1'h0)] wire28;
  wire [(2'h3):(1'h0)] wire27;
  assign y = {wire32, wire31, wire30, wire29, wire28, wire27, (1'h0)};
  assign wire27 = (wire22 != (wire22 == $unsigned($signed((-wire24)))));
  assign wire28 = wire27;
  assign wire29 = ($signed(wire26[(4'h8):(3'h5)]) ?
                      {wire26[(4'he):(1'h0)]} : wire25[(3'h7):(3'h6)]);
  assign wire30 = $signed(wire28);
  assign wire31 = (~&((~&(wire29 ? $unsigned(wire25) : (|wire26))) ?
                      (7'h42) : (((wire30 ? (8'hae) : wire30) ?
                          wire22[(4'h8):(2'h2)] : {wire24,
                              (8'hac)}) >> $unsigned($unsigned(wire29)))));
  assign wire32 = $signed(wire29[(4'hd):(3'h4)]);
endmodule