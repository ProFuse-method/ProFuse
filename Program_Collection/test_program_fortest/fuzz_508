(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param58 = ((+({(8'h9e)} == {(8'ha1)})) ? {{((8'ha7) ? (8'hac) : (8'hac))}} : ((((8'hae) >>> (8'ha6)) >>> ((8'ha7) >= (8'hae))) ? (+((8'hab) ? (8'h9e) : (8'hac))) : (~&((8'h9c) ? (8'haa) : (8'h9c))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(2'h3):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire57;
  wire signed [(3'h6):(1'h0)] wire56;
  wire [(4'hb):(1'h0)] wire55;
  wire signed [(3'h4):(1'h0)] wire53;
  wire signed [(4'hb):(1'h0)] wire4;
  reg signed [(4'ha):(1'h0)] reg10 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg9 = (1'h0);
  reg [(4'ha):(1'h0)] reg8 = (1'h0);
  reg [(4'hb):(1'h0)] reg7 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg6 = (1'h0);
  reg [(4'h9):(1'h0)] reg5 = (1'h0);
  assign y = {wire57,
                 wire56,
                 wire55,
                 wire53,
                 wire4,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = wire1;
  always
    @(posedge clk) begin
      if ($signed($unsigned(wire4[(1'h0):(1'h0)])))
        begin
          reg5 <= ($unsigned($signed($signed(wire3))) * $signed($unsigned(wire4)));
        end
      else
        begin
          reg5 <= wire4[(1'h0):(1'h0)];
          reg6 <= wire2;
          if ($signed($unsigned($signed(reg5[(3'h4):(1'h1)]))))
            begin
              reg7 <= wire0;
            end
          else
            begin
              reg7 <= ((!((!reg6) - wire2[(2'h3):(2'h3)])) ?
                  (reg6[(4'ha):(3'h4)] ?
                      (8'ha4) : $unsigned(reg7[(1'h0):(1'h0)])) : $unsigned(reg7));
              reg8 <= $signed($unsigned(($signed(wire3) ?
                  (~&(8'haa)) : (reg5 != reg7))));
              reg9 <= (&$signed($unsigned({reg7})));
            end
        end
    end
  always
    @(posedge clk) begin
      reg10 <= wire1[(3'h4):(1'h0)];
    end
  module11 #() modinst54 (wire53, clk, wire4, wire1, reg10, reg7);
  assign wire55 = $signed($unsigned($unsigned((~&wire0))));
  assign wire56 = $signed({((^~(8'h9f)) ? ((8'hb0) ? wire1 : wire53) : wire0)});
  assign wire57 = $signed(wire3);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param52 = ({(-((8'ha7) ? (8'ha4) : (8'hab)))} < (~|(^((8'haf) ? (8'ha0) : (8'ha7))))))
(y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h21):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire15;
  input wire [(4'h9):(1'h0)] wire14;
  input wire signed [(4'ha):(1'h0)] wire13;
  input wire [(4'hb):(1'h0)] wire12;
  wire signed [(4'h9):(1'h0)] wire50;
  wire signed [(3'h5):(1'h0)] wire35;
  wire [(4'ha):(1'h0)] wire17;
  wire [(4'h8):(1'h0)] wire16;
  assign y = {wire50, wire35, wire17, wire16, (1'h0)};
  assign wire16 = $signed((wire15 ?
                      ((wire12 < wire15) ?
                          {(8'ha9)} : $signed(wire13)) : wire13));
  assign wire17 = (~^((!$signed(wire14)) | wire14));
  module18 #() modinst36 (.clk(clk), .wire21(wire17), .wire19(wire14), .wire20(wire15), .y(wire35), .wire22(wire16));
  module37 #() modinst51 (.wire40(wire12), .wire39(wire13), .wire41(wire15), .wire38(wire16), .clk(clk), .y(wire50));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module37  (y, clk, wire41, wire40, wire39, wire38);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire41;
  input wire signed [(4'hb):(1'h0)] wire40;
  input wire signed [(2'h3):(1'h0)] wire39;
  input wire [(3'h7):(1'h0)] wire38;
  wire [(3'h6):(1'h0)] wire49;
  wire [(3'h7):(1'h0)] wire46;
  wire [(4'h9):(1'h0)] wire43;
  wire [(4'h8):(1'h0)] wire42;
  reg signed [(3'h5):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg45 = (1'h0);
  reg [(3'h6):(1'h0)] reg44 = (1'h0);
  assign y = {wire49,
                 wire46,
                 wire43,
                 wire42,
                 reg48,
                 reg47,
                 reg45,
                 reg44,
                 (1'h0)};
  assign wire42 = wire38;
  assign wire43 = wire41;
  always
    @(posedge clk) begin
      reg44 <= {{(8'ha9)}};
      reg45 <= {(-$signed($unsigned(wire39)))};
    end
  assign wire46 = $unsigned($signed({wire42}));
  always
    @(posedge clk) begin
      reg47 <= ($unsigned({(wire46 ? reg45 : (8'hae))}) ?
          $signed(($unsigned(reg44) - (reg45 == reg45))) : $signed(({wire41} >>> {wire46})));
      reg48 <= reg45[(2'h3):(1'h0)];
    end
  assign wire49 = wire41;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18
#(parameter param34 = ((~(&((8'ha7) << (8'ha8)))) + ((((8'ha5) ? (8'ha8) : (8'ha8)) ? (~(8'h9f)) : ((8'h9c) > (8'ha6))) != {((8'h9f) ^~ (8'h9e))})))
(y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire22;
  input wire signed [(4'ha):(1'h0)] wire21;
  input wire [(4'h8):(1'h0)] wire20;
  input wire signed [(2'h2):(1'h0)] wire19;
  wire [(4'ha):(1'h0)] wire33;
  wire [(4'h8):(1'h0)] wire32;
  wire signed [(3'h6):(1'h0)] wire31;
  wire [(4'hb):(1'h0)] wire28;
  wire [(4'hb):(1'h0)] wire27;
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg [(2'h2):(1'h0)] reg29 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg26 = (1'h0);
  reg [(4'h9):(1'h0)] reg25 = (1'h0);
  reg [(2'h2):(1'h0)] reg24 = (1'h0);
  reg [(4'h8):(1'h0)] reg23 = (1'h0);
  assign y = {wire33,
                 wire32,
                 wire31,
                 wire28,
                 wire27,
                 reg30,
                 reg29,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($signed($unsigned(wire20)))
        begin
          reg23 <= $unsigned((~&wire20));
          reg24 <= (($unsigned($unsigned(wire22)) ? wire22 : (-(8'hac))) ?
              $signed(($signed(wire21) ?
                  wire21[(2'h2):(1'h0)] : (+wire21))) : {$signed($signed(wire20))});
          reg25 <= (&$signed((-((8'haf) ? (8'ha9) : reg24))));
        end
      else
        begin
          reg23 <= (^(+((-reg24) <= (-wire22))));
          reg24 <= wire22[(3'h7):(2'h3)];
        end
      reg26 <= wire19;
    end
  assign wire27 = reg23[(3'h6):(2'h2)];
  assign wire28 = wire20;
  always
    @(posedge clk) begin
      reg29 <= $unsigned({((8'hac) ? $unsigned(wire28) : ((8'hac) >>> reg26))});
      reg30 <= wire20[(3'h7):(2'h3)];
    end
  assign wire31 = reg25[(1'h1):(1'h0)];
  assign wire32 = ((wire21 == (wire20 < (reg25 ?
                      wire28 : (8'hac)))) >= $unsigned((wire27[(4'ha):(2'h2)] ?
                      (wire21 ? (8'ha3) : reg29) : reg25[(4'h9):(3'h7)])));
  assign wire33 = $signed($signed($unsigned($signed(reg26))));
endmodule