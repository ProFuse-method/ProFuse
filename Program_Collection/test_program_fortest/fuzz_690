(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param43 = {{({(8'ha3)} ? (!(8'ha4)) : ((8'h9d) ? (8'haf) : (8'haf)))}})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h9c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire42;
  wire signed [(4'hb):(1'h0)] wire41;
  wire [(4'ha):(1'h0)] wire40;
  wire signed [(4'h8):(1'h0)] wire33;
  wire [(3'h5):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire14;
  reg signed [(4'ha):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg38 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg37 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg36 = (1'h0);
  reg [(4'hb):(1'h0)] reg35 = (1'h0);
  reg [(4'h8):(1'h0)] reg34 = (1'h0);
  reg [(2'h3):(1'h0)] reg13 = (1'h0);
  reg [(4'ha):(1'h0)] reg12 = (1'h0);
  reg [(3'h7):(1'h0)] reg11 = (1'h0);
  reg [(3'h5):(1'h0)] reg10 = (1'h0);
  reg [(3'h4):(1'h0)] reg9 = (1'h0);
  reg [(3'h4):(1'h0)] reg8 = (1'h0);
  reg [(3'h4):(1'h0)] reg7 = (1'h0);
  reg [(2'h2):(1'h0)] reg6 = (1'h0);
  reg [(4'h9):(1'h0)] reg5 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg4 = (1'h0);
  assign y = {wire42,
                 wire41,
                 wire40,
                 wire33,
                 wire31,
                 wire14,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (($signed($unsigned(wire0)) ?
          (~$signed(wire2[(4'h9):(2'h3)])) : wire2[(3'h4):(2'h2)]))
        begin
          reg4 <= $unsigned(((wire2[(2'h2):(1'h0)] ? $signed(wire0) : wire1) ?
              (8'had) : wire3[(1'h0):(1'h0)]));
          if ((reg4[(1'h0):(1'h0)] < ((reg4 >>> (wire2 ?
              wire1 : wire0)) == $unsigned((&wire0)))))
            begin
              reg5 <= wire1[(1'h1):(1'h1)];
              reg6 <= $unsigned(((^~wire3) ? wire3 : wire2));
            end
          else
            begin
              reg5 <= ((&{(reg4 ? wire1 : reg4)}) ?
                  {$unsigned($signed(wire2))} : ($unsigned((wire1 > (8'ha6))) ?
                      ((wire1 - reg5) ? wire0 : (+reg5)) : (^~$signed(wire1))));
            end
          reg7 <= $signed(reg6[(2'h2):(1'h0)]);
        end
      else
        begin
          reg4 <= (&{(~^((8'ha0) ^~ wire2))});
          if ($signed(($signed((reg7 > reg4)) * (~|(~^wire1)))))
            begin
              reg5 <= $signed($unsigned($unsigned(((8'h9d) ? wire1 : reg6))));
              reg6 <= reg7[(1'h1):(1'h1)];
              reg7 <= (reg5 > wire1[(1'h0):(1'h0)]);
            end
          else
            begin
              reg5 <= ((~^(~$signed(wire3))) > wire1);
              reg6 <= ({$signed($signed((8'ha7)))} ?
                  (reg6[(1'h0):(1'h0)] >= ($unsigned(reg4) ?
                      {wire1} : $signed(wire2))) : ((!$unsigned(reg4)) ?
                      (reg5 ?
                          reg5[(2'h3):(2'h2)] : ((8'ha7) ?
                              wire1 : (8'ha8))) : $unsigned((reg5 && wire2))));
              reg7 <= (~|$unsigned($signed((reg4 ? wire3 : wire0))));
            end
          if (wire2)
            begin
              reg8 <= reg6[(1'h1):(1'h0)];
              reg9 <= ((&$signed($unsigned((8'h9c)))) ?
                  reg6 : $signed((^$signed(reg8))));
            end
          else
            begin
              reg8 <= {(!(reg8 ? {wire0} : (8'hab)))};
              reg9 <= $signed({wire3[(3'h7):(2'h2)]});
            end
        end
      reg10 <= $unsigned(($signed(((8'ha0) < reg5)) == (^~(wire0 ?
          (8'ha7) : wire2))));
      if ((wire0[(3'h7):(2'h2)] ~^ $unsigned($signed((!reg6)))))
        begin
          reg11 <= ((reg6[(2'h2):(2'h2)] ?
              $signed(wire0[(1'h0):(1'h0)]) : reg10) + (8'ha2));
        end
      else
        begin
          reg11 <= reg10;
          reg12 <= {$unsigned(((~reg7) << $signed((8'ha2))))};
          reg13 <= (8'ha1);
        end
    end
  assign wire14 = reg10;
  module15 #() modinst32 (.wire18(wire3), .wire17(wire0), .wire19(wire14), .wire16(wire2), .clk(clk), .y(wire31));
  assign wire33 = (($unsigned((reg6 ?
                          reg11 : reg12)) >= $signed(wire14[(1'h0):(1'h0)])) ?
                      (({wire31} > (reg4 | (8'h9e))) ?
                          $unsigned((reg11 ?
                              wire31 : wire1)) : wire1[(1'h1):(1'h0)]) : $unsigned({(wire2 & wire2)}));
  always
    @(posedge clk) begin
      reg34 <= reg13;
      if ({(wire2[(3'h5):(1'h1)] != reg34)})
        begin
          reg35 <= ((reg9[(2'h3):(2'h2)] ?
              ((!(8'h9f)) <<< reg13) : (reg13 ?
                  (reg6 || wire14) : $unsigned(reg11))) >= reg8);
          reg36 <= $unsigned(((-reg11) ?
              $signed($unsigned(wire0)) : (reg13 ?
                  $unsigned(reg10) : reg34[(3'h6):(3'h6)])));
          reg37 <= $unsigned((reg8 <= (&$unsigned(reg9))));
        end
      else
        begin
          reg35 <= reg10[(2'h3):(2'h3)];
          if ((reg5 ^ $unsigned({(8'ha7)})))
            begin
              reg36 <= ((({wire1} ? (~&wire2) : (wire2 != wire31)) ?
                  reg11 : {$unsigned(reg37)}) < (((~^wire14) ?
                      {reg10} : (reg12 <<< reg4)) ?
                  {{wire3}} : reg12[(3'h7):(3'h5)]));
              reg37 <= {$signed(((-(8'ha8)) != $signed(reg36)))};
              reg38 <= reg12;
            end
          else
            begin
              reg36 <= (~($unsigned($unsigned(reg7)) ^~ ((wire14 ?
                  reg36 : reg4) || reg36)));
              reg37 <= {(&wire14[(4'h8):(2'h2)])};
            end
          reg39 <= (reg10[(3'h4):(1'h0)] - $signed(($signed(wire3) == $unsigned((8'ha3)))));
        end
    end
  assign wire40 = wire0;
  assign wire41 = ({$unsigned(reg35)} - reg39);
  assign wire42 = ($unsigned(reg9) ?
                      ($signed((&(8'had))) ?
                          ($signed((8'hac)) >> (8'ha6)) : (8'hb0)) : (~|wire2[(1'h1):(1'h1)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param30 = ((^~{(~&(8'ha1))}) ? (+(~&(~^(8'ha9)))) : (((-(8'ha6)) ? ((8'hae) * (8'ha4)) : {(8'hb0)}) ? ((~|(8'h9c)) - (!(8'ha4))) : ({(8'ha8)} > ((8'ha5) << (8'h9d))))))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire19;
  input wire signed [(3'h4):(1'h0)] wire18;
  input wire signed [(3'h7):(1'h0)] wire17;
  input wire [(3'h5):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire29;
  wire signed [(3'h5):(1'h0)] wire28;
  wire signed [(4'ha):(1'h0)] wire27;
  wire signed [(2'h2):(1'h0)] wire26;
  wire signed [(3'h5):(1'h0)] wire24;
  wire [(2'h3):(1'h0)] wire23;
  wire signed [(4'h8):(1'h0)] wire22;
  wire [(4'h9):(1'h0)] wire21;
  wire [(3'h5):(1'h0)] wire20;
  reg [(4'hb):(1'h0)] reg25 = (1'h0);
  assign y = {wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 reg25,
                 (1'h0)};
  assign wire20 = wire19;
  assign wire21 = ((8'h9d) < (+$unsigned(wire16)));
  assign wire22 = wire16;
  assign wire23 = $unsigned($unsigned((^~{wire20})));
  assign wire24 = {$signed(wire18)};
  always
    @(posedge clk) begin
      reg25 <= $unsigned(((+(wire22 << wire22)) ?
          ($signed(wire17) != wire16[(1'h1):(1'h1)]) : $signed((wire22 << wire21))));
    end
  assign wire26 = ($unsigned($unsigned((reg25 ?
                      wire18 : wire18))) + ($signed((!wire21)) - $unsigned((~^(8'h9e)))));
  assign wire27 = $unsigned((!$signed($signed(wire18))));
  assign wire28 = (^~$unsigned(((wire24 || reg25) <<< (wire22 ?
                      (8'haf) : wire18))));
  assign wire29 = reg25[(2'h2):(1'h0)];
endmodule