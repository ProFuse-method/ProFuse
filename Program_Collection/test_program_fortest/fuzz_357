(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire9;
  wire signed [(3'h4):(1'h0)] wire8;
  wire signed [(4'ha):(1'h0)] wire7;
  wire [(3'h4):(1'h0)] wire4;
  reg [(4'ha):(1'h0)] reg6 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg5 = (1'h0);
  assign y = {wire9, wire8, wire7, wire4, reg6, reg5, (1'h0)};
  assign wire4 = wire3[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg5 <= (!{((!wire3) < wire4)});
      reg6 <= (^$signed((wire3 ? $unsigned(wire1) : wire3)));
    end
  assign wire7 = wire1;
  assign wire8 = (wire4[(3'h4):(1'h1)] != {$signed(((8'ha2) ~^ wire1))});
  assign wire9 = (wire8[(1'h0):(1'h0)] ?
                     (&wire7[(4'h8):(1'h0)]) : (~$signed((&wire0))));
endmodule