(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param285 = ((({(~|(8'ha7))} ? (~^((8'ha4) != (8'haa))) : ((|(8'haf)) && ((8'hb1) ? (8'hb6) : (8'hbf)))) ^ (~{((8'hb8) ~^ (8'hb4))})) ? {(({(8'ha4)} ? (^(7'h43)) : (&(8'had))) ? (8'hb9) : {((8'hbf) | (8'ha5))}), ((-((8'hb8) ? (8'hac) : (8'hac))) ? (((8'hb3) ? (8'ha6) : (8'hbb)) << (~|(8'hab))) : (+(8'hb5)))} : ((({(8'hab)} << (|(8'hb2))) ~^ {((8'ha3) == (8'haf))}) - (8'hb2))), 
parameter param286 = {{((param285 && param285) || (+(+(8'hb7))))}})
(y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h131):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hf):(1'h0)] wire4;
  input wire [(4'hd):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(4'hc):(1'h0)] wire1;
  input wire signed [(4'he):(1'h0)] wire0;
  wire signed [(5'h11):(1'h0)] wire283;
  wire [(2'h3):(1'h0)] wire9;
  wire [(5'h10):(1'h0)] wire8;
  wire [(5'h12):(1'h0)] wire7;
  wire signed [(4'hc):(1'h0)] wire6;
  wire signed [(4'hd):(1'h0)] wire5;
  reg signed [(3'h5):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg12 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg13 = (1'h0);
  reg [(2'h3):(1'h0)] reg15 = (1'h0);
  reg [(4'hc):(1'h0)] reg18 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg21 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg26 = (1'h0);
  reg [(2'h3):(1'h0)] reg28 = (1'h0);
  reg [(5'h14):(1'h0)] reg27 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg25 = (1'h0);
  reg [(5'h11):(1'h0)] forvar24 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar23 = (1'h0);
  reg [(4'h8):(1'h0)] reg10 = (1'h0);
  reg [(2'h3):(1'h0)] forvar20 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg19 = (1'h0);
  reg signed [(4'he):(1'h0)] reg17 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar16 = (1'h0);
  reg signed [(4'he):(1'h0)] reg14 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar10 = (1'h0);
  assign y = {wire283,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 reg11,
                 reg12,
                 reg13,
                 reg15,
                 reg18,
                 reg21,
                 reg22,
                 reg26,
                 reg28,
                 reg27,
                 reg25,
                 forvar24,
                 forvar23,
                 reg10,
                 forvar20,
                 reg19,
                 reg17,
                 forvar16,
                 reg14,
                 forvar10,
                 (1'h0)};
  assign wire5 = wire0[(4'hb):(2'h3)];
  assign wire6 = $signed($signed((wire0[(4'he):(4'hb)] | $signed($signed(wire3)))));
  assign wire7 = $signed(({$unsigned((wire5 ? wire3 : (8'hbd)))} >> (^~((wire1 ?
                         (8'hb7) : wire3) ?
                     $unsigned(wire5) : (^(8'h9e))))));
  assign wire8 = wire2;
  assign wire9 = (($unsigned((wire7 ? wire2 : (wire1 < (8'hbf)))) ?
                     ($unsigned((wire7 ? wire2 : wire7)) ?
                         {(wire3 ^ wire6),
                             $unsigned(wire7)} : wire6) : ((~|(wire4 ?
                             wire4 : wire4)) ?
                         (~(wire5 >>> wire8)) : $signed((wire5 ^~ wire1)))) > wire3);
  always
    @(posedge clk) begin
      if ((|$signed($signed((8'ha4)))))
        begin
          for (forvar10 = (1'h0); (forvar10 < (2'h3)); forvar10 = (forvar10 + (1'h1)))
            begin
              reg11 <= wire0;
              reg12 <= {{((8'h9e) >> (wire8[(5'h10):(3'h6)] ?
                          {reg11} : $unsigned(wire1))),
                      (((8'ha3) == (8'hb9)) ?
                          wire5[(3'h6):(1'h1)] : forvar10[(1'h0):(1'h0)])},
                  (((wire6 >> $unsigned(wire1)) ?
                          ($signed(wire7) ? (7'h40) : $signed(wire4)) : (wire7 ?
                              ((8'ha3) ?
                                  wire5 : wire1) : reg11[(1'h0):(1'h0)])) ?
                      $unsigned($signed(((8'h9e) ?
                          (8'hba) : wire5))) : (wire7 ~^ wire7))};
              reg13 <= reg11;
              reg14 = wire5;
              reg15 <= $unsigned((~&(&((wire1 ? (8'hb0) : wire6) ?
                  (wire6 - wire4) : (wire3 ? wire6 : wire4)))));
            end
          for (forvar16 = (1'h0); (forvar16 < (2'h2)); forvar16 = (forvar16 + (1'h1)))
            begin
              reg17 = reg12[(3'h4):(2'h3)];
              reg18 <= wire9[(1'h1):(1'h1)];
              reg19 = reg17;
            end
          for (forvar20 = (1'h0); (forvar20 < (1'h0)); forvar20 = (forvar20 + (1'h1)))
            begin
              reg21 <= reg17[(3'h6):(3'h5)];
              reg22 <= $signed((~wire5[(4'ha):(2'h3)]));
            end
        end
      else
        begin
          reg10 = ((+reg18) || $signed((($signed(reg12) ?
                  $unsigned(forvar10) : (~forvar10)) ?
              ((~^wire8) ? ((8'hab) ~^ wire3) : wire2) : $signed((+wire4)))));
        end
      for (forvar23 = (1'h0); (forvar23 < (1'h1)); forvar23 = (forvar23 + (1'h1)))
        begin
          for (forvar24 = (1'h0); (forvar24 < (3'h4)); forvar24 = (forvar24 + (1'h1)))
            begin
              reg25 = $signed($signed($unsigned(wire5[(3'h5):(2'h2)])));
              reg26 <= $unsigned($unsigned(wire1));
            end
        end
      reg27 = (^~$unsigned((~&$signed((reg22 ? wire9 : reg11)))));
      reg28 = wire9[(2'h3):(1'h0)];
    end
  module29 #() modinst284 (wire283, clk, reg26, wire6, wire3, wire8, wire5);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module29
#(parameter param282 = (~^(-(-(((8'hba) <= (8'hab)) ? ((8'haf) ~^ (8'hb4)) : (8'hbf))))))
(y, clk, wire34, wire33, wire32, wire31, wire30);
  output wire [(32'h486):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire34;
  input wire [(4'hc):(1'h0)] wire33;
  input wire [(4'h9):(1'h0)] wire32;
  input wire signed [(4'h9):(1'h0)] wire31;
  input wire signed [(3'h5):(1'h0)] wire30;
  wire signed [(4'ha):(1'h0)] wire281;
  wire signed [(5'h10):(1'h0)] wire279;
  wire signed [(4'hc):(1'h0)] wire154;
  wire signed [(4'hf):(1'h0)] wire135;
  wire signed [(5'h12):(1'h0)] wire134;
  wire signed [(5'h10):(1'h0)] wire133;
  wire [(5'h11):(1'h0)] wire119;
  wire [(5'h13):(1'h0)] wire118;
  wire signed [(4'hb):(1'h0)] wire35;
  wire signed [(4'hf):(1'h0)] wire221;
  reg [(4'hd):(1'h0)] reg132 = (1'h0);
  reg [(4'hb):(1'h0)] reg130 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg129 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg128 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg122 = (1'h0);
  reg [(3'h4):(1'h0)] reg117 = (1'h0);
  reg [(5'h10):(1'h0)] reg113 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg112 = (1'h0);
  reg [(4'hf):(1'h0)] reg111 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg110 = (1'h0);
  reg signed [(4'he):(1'h0)] reg108 = (1'h0);
  reg [(4'hb):(1'h0)] reg106 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg105 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg101 = (1'h0);
  reg [(2'h3):(1'h0)] reg98 = (1'h0);
  reg [(4'he):(1'h0)] reg96 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg95 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg93 = (1'h0);
  reg [(3'h4):(1'h0)] reg92 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg91 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg84 = (1'h0);
  reg [(3'h6):(1'h0)] reg82 = (1'h0);
  reg [(5'h13):(1'h0)] reg81 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg79 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg77 = (1'h0);
  reg signed [(4'he):(1'h0)] reg75 = (1'h0);
  reg [(2'h3):(1'h0)] reg73 = (1'h0);
  reg [(3'h5):(1'h0)] reg70 = (1'h0);
  reg [(4'hd):(1'h0)] reg66 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg62 = (1'h0);
  reg [(5'h10):(1'h0)] reg60 = (1'h0);
  reg [(5'h10):(1'h0)] reg58 = (1'h0);
  reg [(4'he):(1'h0)] reg56 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg52 = (1'h0);
  reg [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(4'he):(1'h0)] reg48 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg45 = (1'h0);
  reg [(3'h4):(1'h0)] reg42 = (1'h0);
  reg [(5'h13):(1'h0)] reg39 = (1'h0);
  reg [(4'hf):(1'h0)] reg37 = (1'h0);
  reg [(4'hd):(1'h0)] forvar131 = (1'h0);
  reg [(5'h10):(1'h0)] forvar127 = (1'h0);
  reg [(3'h6):(1'h0)] reg126 = (1'h0);
  reg [(4'hf):(1'h0)] reg125 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar124 = (1'h0);
  reg [(4'h8):(1'h0)] reg123 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar121 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar120 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg116 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg115 = (1'h0);
  reg [(3'h7):(1'h0)] forvar114 = (1'h0);
  reg [(4'h8):(1'h0)] forvar109 = (1'h0);
  reg [(2'h2):(1'h0)] reg107 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar104 = (1'h0);
  reg [(2'h3):(1'h0)] forvar103 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg102 = (1'h0);
  reg [(2'h3):(1'h0)] forvar100 = (1'h0);
  reg [(3'h4):(1'h0)] reg99 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg97 = (1'h0);
  reg [(5'h12):(1'h0)] forvar94 = (1'h0);
  reg [(5'h10):(1'h0)] reg90 = (1'h0);
  reg [(4'ha):(1'h0)] reg89 = (1'h0);
  reg [(2'h2):(1'h0)] forvar88 = (1'h0);
  reg [(4'hc):(1'h0)] reg87 = (1'h0);
  reg [(4'h8):(1'h0)] forvar86 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar85 = (1'h0);
  reg [(2'h2):(1'h0)] forvar83 = (1'h0);
  reg [(5'h13):(1'h0)] reg80 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar78 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg76 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar74 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar72 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg71 = (1'h0);
  reg [(4'ha):(1'h0)] forvar69 = (1'h0);
  reg signed [(4'he):(1'h0)] reg68 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg67 = (1'h0);
  reg [(4'ha):(1'h0)] reg65 = (1'h0);
  reg [(3'h6):(1'h0)] forvar64 = (1'h0);
  reg [(3'h4):(1'h0)] forvar63 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg61 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar59 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg57 = (1'h0);
  reg [(3'h5):(1'h0)] reg55 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar54 = (1'h0);
  reg [(4'ha):(1'h0)] reg53 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar50 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg49 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg46 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar44 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar43 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar41 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg40 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar38 = (1'h0);
  reg [(4'hf):(1'h0)] forvar36 = (1'h0);
  assign y = {wire281,
                 wire279,
                 wire154,
                 wire135,
                 wire134,
                 wire133,
                 wire119,
                 wire118,
                 wire35,
                 wire221,
                 reg132,
                 reg130,
                 reg129,
                 reg128,
                 reg122,
                 reg117,
                 reg113,
                 reg112,
                 reg111,
                 reg110,
                 reg108,
                 reg106,
                 reg105,
                 reg101,
                 reg98,
                 reg96,
                 reg95,
                 reg93,
                 reg92,
                 reg91,
                 reg84,
                 reg82,
                 reg81,
                 reg79,
                 reg77,
                 reg75,
                 reg73,
                 reg70,
                 reg66,
                 reg62,
                 reg60,
                 reg58,
                 reg56,
                 reg52,
                 reg51,
                 reg48,
                 reg45,
                 reg42,
                 reg39,
                 reg37,
                 forvar131,
                 forvar127,
                 reg126,
                 reg125,
                 forvar124,
                 reg123,
                 forvar121,
                 forvar120,
                 reg116,
                 reg115,
                 forvar114,
                 forvar109,
                 reg107,
                 forvar104,
                 forvar103,
                 reg102,
                 forvar100,
                 reg99,
                 reg97,
                 forvar94,
                 reg90,
                 reg89,
                 forvar88,
                 reg87,
                 forvar86,
                 forvar85,
                 forvar83,
                 reg80,
                 forvar78,
                 reg76,
                 forvar74,
                 forvar72,
                 reg71,
                 forvar69,
                 reg68,
                 reg67,
                 reg65,
                 forvar64,
                 forvar63,
                 reg61,
                 forvar59,
                 reg57,
                 reg55,
                 forvar54,
                 reg53,
                 forvar50,
                 reg49,
                 reg47,
                 reg46,
                 forvar44,
                 forvar43,
                 forvar41,
                 reg40,
                 forvar38,
                 forvar36,
                 (1'h0)};
  assign wire35 = wire33;
  always
    @(posedge clk) begin
      for (forvar36 = (1'h0); (forvar36 < (3'h4)); forvar36 = (forvar36 + (1'h1)))
        begin
          reg37 <= ($unsigned((~((~|wire34) ?
              wire30 : wire30[(1'h0):(1'h0)]))) | forvar36);
          for (forvar38 = (1'h0); (forvar38 < (1'h0)); forvar38 = (forvar38 + (1'h1)))
            begin
              reg39 <= $unsigned($unsigned($unsigned($unsigned({wire34,
                  forvar36}))));
              reg40 = (((|$signed((wire32 & reg37))) ?
                      ((^(wire33 ? wire33 : wire35)) ?
                          $unsigned($signed(wire32)) : (~&$signed(forvar36))) : (({wire34,
                              wire32} ?
                          $signed(wire32) : (!forvar36)) << $signed((wire31 | forvar38)))) ?
                  forvar38[(4'hc):(4'h8)] : (~($signed(((8'ha5) & wire31)) ?
                      ($signed(wire35) ?
                          (wire34 ?
                              wire35 : (7'h43)) : wire31) : wire32[(3'h6):(3'h4)])));
            end
          for (forvar41 = (1'h0); (forvar41 < (3'h4)); forvar41 = (forvar41 + (1'h1)))
            begin
              reg42 <= $signed(((^$unsigned((reg39 ? (8'hae) : reg39))) ?
                  $signed((~&wire33[(3'h6):(3'h4)])) : (wire32 ?
                      $signed((wire34 ? reg39 : (8'ha7))) : $signed(wire34))));
            end
        end
      for (forvar43 = (1'h0); (forvar43 < (2'h3)); forvar43 = (forvar43 + (1'h1)))
        begin
          for (forvar44 = (1'h0); (forvar44 < (1'h1)); forvar44 = (forvar44 + (1'h1)))
            begin
              reg45 <= ({(|($unsigned(wire30) != $unsigned(forvar43))),
                      {$signed({reg37})}} ?
                  $unsigned((forvar36[(3'h4):(2'h2)] < ((!forvar36) < $signed(forvar36)))) : reg37);
              reg46 = $signed((+($unsigned($signed(forvar41)) ?
                  wire30[(3'h4):(2'h3)] : $signed({(8'hb4)}))));
              reg47 = $unsigned((~{(~&((8'ha6) & reg37)), (7'h44)}));
              reg48 <= ((forvar43[(1'h0):(1'h0)] + reg46) ?
                  wire30[(1'h0):(1'h0)] : (8'hbe));
              reg49 = forvar38[(4'h9):(4'h8)];
            end
          for (forvar50 = (1'h0); (forvar50 < (3'h4)); forvar50 = (forvar50 + (1'h1)))
            begin
              reg51 <= (forvar43[(4'hb):(3'h7)] < ($unsigned($signed(wire30)) >= (^~forvar50[(1'h1):(1'h1)])));
              reg52 <= forvar36;
              reg53 = {((((!(8'hb7)) ?
                          reg51 : (reg49 != forvar43)) == (&(!reg52))) ?
                      wire34[(3'h5):(2'h2)] : wire30),
                  $signed({$signed($signed(forvar38))})};
            end
          for (forvar54 = (1'h0); (forvar54 < (3'h4)); forvar54 = (forvar54 + (1'h1)))
            begin
              reg55 = (reg46[(3'h5):(3'h5)] ^~ (!$signed(wire30)));
              reg56 <= reg45;
              reg57 = (~&{((wire34 <<< forvar50) ?
                      reg56 : ($signed(forvar38) ?
                          (forvar38 ? (8'haa) : (8'ha2)) : $unsigned(reg39))),
                  reg56[(4'hc):(3'h7)]});
              reg58 <= $signed(wire32);
            end
          for (forvar59 = (1'h0); (forvar59 < (3'h4)); forvar59 = (forvar59 + (1'h1)))
            begin
              reg60 <= forvar44;
            end
        end
      reg61 = (wire33[(4'ha):(2'h2)] - wire35);
      reg62 <= forvar50[(4'h8):(3'h7)];
    end
  always
    @(posedge clk) begin
      for (forvar63 = (1'h0); (forvar63 < (2'h3)); forvar63 = (forvar63 + (1'h1)))
        begin
          for (forvar64 = (1'h0); (forvar64 < (1'h1)); forvar64 = (forvar64 + (1'h1)))
            begin
              reg65 = wire31;
              reg66 <= (&{reg56[(2'h2):(1'h0)]});
              reg67 = $signed($signed(((reg60 ?
                  reg48[(3'h7):(3'h7)] : (wire35 ?
                      wire35 : forvar63)) | forvar64)));
              reg68 = {wire31,
                  $unsigned(((reg42 <<< reg62[(1'h0):(1'h0)]) && ((-wire34) * wire33)))};
            end
          for (forvar69 = (1'h0); (forvar69 < (1'h1)); forvar69 = (forvar69 + (1'h1)))
            begin
              reg70 <= (!$signed((!((forvar64 + reg42) ?
                  $signed(forvar64) : (reg66 ? reg51 : reg39)))));
            end
          reg71 = wire34[(2'h2):(2'h2)];
        end
      for (forvar72 = (1'h0); (forvar72 < (1'h0)); forvar72 = (forvar72 + (1'h1)))
        begin
          reg73 <= $signed($signed((^{reg52, wire31})));
          for (forvar74 = (1'h0); (forvar74 < (3'h4)); forvar74 = (forvar74 + (1'h1)))
            begin
              reg75 <= (reg42[(2'h2):(1'h0)] ?
                  ((reg42 >> ((reg52 && reg71) <= (~|(8'h9c)))) ?
                      (8'hb3) : $unsigned(((~|reg51) <<< (^reg70)))) : (~(^$signed((+reg42)))));
            end
          reg76 = $unsigned(({((forvar64 ? wire30 : reg66) ?
                  $unsigned(reg48) : reg70[(2'h2):(1'h0)])} <= $unsigned(({reg39,
              reg56} >= $unsigned(reg70)))));
          reg77 <= $unsigned(reg68);
          for (forvar78 = (1'h0); (forvar78 < (1'h0)); forvar78 = (forvar78 + (1'h1)))
            begin
              reg79 <= reg58;
              reg80 = $signed($signed($unsigned(reg37)));
              reg81 <= $signed(forvar69);
              reg82 <= $signed((^~forvar63));
            end
        end
      for (forvar83 = (1'h0); (forvar83 < (1'h0)); forvar83 = (forvar83 + (1'h1)))
        begin
          reg84 <= (forvar72[(3'h5):(1'h0)] ?
              reg76 : (($unsigned($signed(reg70)) ?
                      reg73[(2'h2):(1'h1)] : $unsigned((forvar74 ?
                          (8'ha8) : reg48))) ?
                  $signed({$signed(reg65)}) : (({reg60, (8'ha4)} >>> (wire30 ?
                          reg65 : reg52)) ?
                      $signed((reg67 ? reg48 : reg60)) : $unsigned({reg45}))));
        end
      for (forvar85 = (1'h0); (forvar85 < (1'h0)); forvar85 = (forvar85 + (1'h1)))
        begin
          for (forvar86 = (1'h0); (forvar86 < (2'h2)); forvar86 = (forvar86 + (1'h1)))
            begin
              reg87 = ($unsigned(wire30[(1'h1):(1'h0)]) >> $unsigned((reg45 == $unsigned(reg37))));
            end
          for (forvar88 = (1'h0); (forvar88 < (2'h3)); forvar88 = (forvar88 + (1'h1)))
            begin
              reg89 = {reg79, (!reg82[(3'h5):(2'h2)])};
              reg90 = (^~wire30);
              reg91 <= $unsigned(((($unsigned(forvar69) | reg60[(3'h5):(1'h1)]) ?
                      $unsigned((reg73 || reg51)) : $unsigned((8'hbe))) ?
                  reg90[(5'h10):(4'hb)] : ($unsigned(forvar83[(1'h1):(1'h1)]) == $signed($unsigned(reg81)))));
              reg92 <= {wire35[(4'ha):(4'h9)]};
            end
          reg93 <= $unsigned(($unsigned(($unsigned(reg65) ?
                  $signed(forvar64) : (forvar88 ? reg58 : reg82))) ?
              (-($signed(reg89) ~^ (wire33 ?
                  reg52 : forvar78))) : (~(reg71 >>> {reg81}))));
          for (forvar94 = (1'h0); (forvar94 < (2'h3)); forvar94 = (forvar94 + (1'h1)))
            begin
              reg95 <= {$unsigned(((forvar88[(1'h0):(1'h0)] ?
                      {reg89, (7'h42)} : (reg56 ?
                          (7'h40) : reg71)) ^ ((8'had) && $signed((8'hb9))))),
                  reg82};
              reg96 <= $unsigned({{{{(8'hbe)}}}});
              reg97 = ($unsigned({((reg75 | forvar72) ?
                      reg58[(4'ha):(3'h4)] : $signed(reg42))}) <<< ((reg81 ?
                  {$signed(reg89)} : $unsigned($signed((8'ha4)))) * $unsigned(((wire33 < (8'hb7)) > (8'hb2)))));
              reg98 <= ((~|(!(~(reg80 ?
                  (8'h9f) : reg66)))) && $unsigned(($unsigned(reg73[(1'h1):(1'h0)]) ?
                  (!$signed(reg42)) : forvar69[(3'h5):(3'h5)])));
              reg99 = ((^~(forvar88 ?
                      (-(forvar86 * reg95)) : (reg82[(2'h2):(1'h1)] < (reg84 == reg56)))) ?
                  $unsigned((((~|reg42) != reg39) | ($signed(reg65) ?
                      {(8'ha4)} : reg68[(3'h5):(3'h5)]))) : reg71);
            end
          for (forvar100 = (1'h0); (forvar100 < (2'h3)); forvar100 = (forvar100 + (1'h1)))
            begin
              reg101 <= $signed((~&(!reg51[(4'h9):(3'h4)])));
              reg102 = $signed(forvar85[(4'hc):(4'hb)]);
            end
        end
      for (forvar103 = (1'h0); (forvar103 < (3'h4)); forvar103 = (forvar103 + (1'h1)))
        begin
          for (forvar104 = (1'h0); (forvar104 < (3'h4)); forvar104 = (forvar104 + (1'h1)))
            begin
              reg105 <= reg58[(3'h7):(3'h7)];
              reg106 <= $unsigned((7'h44));
              reg107 = (reg75[(3'h4):(1'h0)] <= (reg62 ?
                  {reg105} : $signed({wire35, (reg45 >> forvar86)})));
              reg108 <= (^(8'hbe));
            end
          for (forvar109 = (1'h0); (forvar109 < (2'h2)); forvar109 = (forvar109 + (1'h1)))
            begin
              reg110 <= ({(!((~^(8'hbf)) ?
                      {reg76, forvar88} : reg45[(2'h3):(1'h1)])),
                  reg91} >= (~((~$signed(reg93)) > ($unsigned(wire34) ?
                  $signed(reg60) : $unsigned(reg45)))));
              reg111 <= forvar83[(2'h2):(2'h2)];
              reg112 <= {(|(((reg56 ?
                          forvar64 : wire31) + (reg39 != forvar64)) ?
                      (((8'hb3) ? forvar64 : forvar103) ?
                          (|(8'ha0)) : $unsigned(reg42)) : $signed($signed(reg95)))),
                  {reg111, $unsigned($unsigned($unsigned(forvar100)))}};
              reg113 <= ((reg112 ? forvar103 : $unsigned($unsigned(reg92))) ?
                  (8'h9c) : forvar83[(1'h1):(1'h1)]);
            end
          for (forvar114 = (1'h0); (forvar114 < (1'h0)); forvar114 = (forvar114 + (1'h1)))
            begin
              reg115 = $signed($signed({{reg82[(2'h3):(2'h3)],
                      (forvar64 < (8'h9c))},
                  {$signed(wire30), $signed(reg45)}}));
              reg116 = (+$signed(forvar109));
              reg117 <= (wire31 ?
                  $signed({({forvar69} & $signed(reg37))}) : $unsigned((($unsigned((8'h9f)) ?
                      (!reg67) : (~forvar86)) >> forvar72)));
            end
        end
    end
  assign wire118 = reg111[(3'h5):(1'h0)];
  assign wire119 = $signed(reg79);
  always
    @(posedge clk) begin
      for (forvar120 = (1'h0); (forvar120 < (2'h2)); forvar120 = (forvar120 + (1'h1)))
        begin
          for (forvar121 = (1'h0); (forvar121 < (2'h3)); forvar121 = (forvar121 + (1'h1)))
            begin
              reg122 <= (reg111 || reg93[(2'h3):(2'h2)]);
            end
        end
      reg123 = forvar120[(1'h1):(1'h1)];
      for (forvar124 = (1'h0); (forvar124 < (2'h2)); forvar124 = (forvar124 + (1'h1)))
        begin
          reg125 = (reg82[(1'h0):(1'h0)] << (8'ha4));
          reg126 = reg123;
          for (forvar127 = (1'h0); (forvar127 < (1'h0)); forvar127 = (forvar127 + (1'h1)))
            begin
              reg128 <= reg96;
              reg129 <= (($signed((|(reg106 ? reg66 : reg82))) ?
                      $signed(reg128) : reg37[(4'he):(3'h7)]) ?
                  reg51 : ({(reg112[(1'h1):(1'h0)] ?
                              {wire118, (8'hb2)} : ((8'hba) ? reg39 : reg45)),
                          $signed((reg92 ~^ (8'h9e)))} ?
                      {{(reg56 ? reg48 : (8'hab))}} : (^~reg39)));
            end
          reg130 <= wire35[(4'hb):(4'h8)];
          for (forvar131 = (1'h0); (forvar131 < (1'h0)); forvar131 = (forvar131 + (1'h1)))
            begin
              reg132 <= (wire30 ^~ $signed((-{$signed(reg123)})));
            end
        end
    end
  assign wire133 = {(^~(~|$unsigned($signed(reg130)))),
                       $signed(reg79[(3'h7):(1'h1)])};
  assign wire134 = {reg79[(4'h8):(4'h8)]};
  assign wire135 = (8'hb9);
  module136 #() modinst155 (wire154, clk, reg111, reg81, wire119, reg66, reg79);
  module156 #() modinst222 (.wire157(wire154), .wire160(wire33), .y(wire221), .wire158(reg39), .clk(clk), .wire159(wire134), .wire161(reg58));
  module223 #() modinst280 (.wire226(reg82), .y(wire279), .wire225(reg91), .wire224(reg96), .clk(clk), .wire227(reg129));
  assign wire281 = reg39[(2'h2):(1'h1)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module223
#(parameter param278 = {(~(8'ha2)), {((((8'hb4) ? (7'h44) : (8'hb7)) ? {(8'ha5)} : ((8'ha0) ~^ (8'hac))) ? (((8'ha0) ? (7'h41) : (8'had)) <= ((8'ha9) ? (8'hb5) : (7'h41))) : (((8'hb0) <<< (8'hb1)) + ((8'ha2) <= (8'ha6))))}})
(y, clk, wire227, wire226, wire225, wire224);
  output wire [(32'h272):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hc):(1'h0)] wire227;
  input wire signed [(3'h5):(1'h0)] wire226;
  input wire [(5'h15):(1'h0)] wire225;
  input wire [(4'hb):(1'h0)] wire224;
  wire signed [(5'h12):(1'h0)] wire277;
  wire [(4'hb):(1'h0)] wire276;
  wire [(5'h14):(1'h0)] wire259;
  wire [(4'h9):(1'h0)] wire258;
  wire signed [(5'h11):(1'h0)] wire235;
  wire signed [(4'h8):(1'h0)] wire234;
  wire [(5'h14):(1'h0)] wire233;
  wire [(5'h11):(1'h0)] wire232;
  wire [(5'h14):(1'h0)] wire231;
  wire signed [(5'h12):(1'h0)] wire230;
  wire signed [(4'hb):(1'h0)] wire229;
  wire signed [(4'hf):(1'h0)] wire228;
  reg signed [(4'hd):(1'h0)] reg273 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg272 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg270 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg267 = (1'h0);
  reg [(4'hd):(1'h0)] reg266 = (1'h0);
  reg [(3'h7):(1'h0)] reg264 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg263 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg257 = (1'h0);
  reg [(2'h2):(1'h0)] reg256 = (1'h0);
  reg [(3'h6):(1'h0)] reg255 = (1'h0);
  reg [(4'h8):(1'h0)] reg252 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg251 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg245 = (1'h0);
  reg [(4'hd):(1'h0)] reg243 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg242 = (1'h0);
  reg [(3'h5):(1'h0)] reg240 = (1'h0);
  reg [(4'hf):(1'h0)] reg239 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg237 = (1'h0);
  reg [(5'h15):(1'h0)] reg275 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg274 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg271 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg269 = (1'h0);
  reg [(4'h8):(1'h0)] forvar268 = (1'h0);
  reg [(5'h13):(1'h0)] forvar265 = (1'h0);
  reg [(4'hd):(1'h0)] reg262 = (1'h0);
  reg [(4'hf):(1'h0)] forvar261 = (1'h0);
  reg [(4'hb):(1'h0)] forvar260 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar254 = (1'h0);
  reg [(2'h3):(1'h0)] reg253 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar250 = (1'h0);
  reg [(4'hb):(1'h0)] forvar249 = (1'h0);
  reg [(4'he):(1'h0)] reg248 = (1'h0);
  reg [(4'he):(1'h0)] forvar247 = (1'h0);
  reg [(3'h4):(1'h0)] forvar246 = (1'h0);
  reg [(5'h10):(1'h0)] reg244 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar241 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar238 = (1'h0);
  reg [(4'hd):(1'h0)] forvar236 = (1'h0);
  assign y = {wire277,
                 wire276,
                 wire259,
                 wire258,
                 wire235,
                 wire234,
                 wire233,
                 wire232,
                 wire231,
                 wire230,
                 wire229,
                 wire228,
                 reg273,
                 reg272,
                 reg270,
                 reg267,
                 reg266,
                 reg264,
                 reg263,
                 reg257,
                 reg256,
                 reg255,
                 reg252,
                 reg251,
                 reg245,
                 reg243,
                 reg242,
                 reg240,
                 reg239,
                 reg237,
                 reg275,
                 reg274,
                 reg271,
                 reg269,
                 forvar268,
                 forvar265,
                 reg262,
                 forvar261,
                 forvar260,
                 forvar254,
                 reg253,
                 forvar250,
                 forvar249,
                 reg248,
                 forvar247,
                 forvar246,
                 reg244,
                 forvar241,
                 forvar238,
                 forvar236,
                 (1'h0)};
  assign wire228 = $unsigned($signed($signed($signed((|(8'hba))))));
  assign wire229 = $unsigned(wire227);
  assign wire230 = $signed((~|((((8'hbd) >= wire225) ?
                           (^~wire224) : $unsigned((8'hba))) ?
                       (~|wire226) : (^~{wire229}))));
  assign wire231 = ((($unsigned($unsigned(wire229)) | $signed(wire230)) ?
                       $signed(wire228[(1'h1):(1'h0)]) : (~^$unsigned((wire225 ?
                           wire228 : (8'hb6))))) && (!wire227[(2'h3):(1'h0)]));
  assign wire232 = $unsigned(wire225);
  assign wire233 = $unsigned(wire231[(5'h13):(4'hf)]);
  assign wire234 = (~|(wire228[(4'he):(2'h2)] ?
                       $unsigned(($unsigned(wire224) ?
                           (-wire230) : $signed((8'hbb)))) : {($signed(wire231) ^ $unsigned(wire225))}));
  assign wire235 = ((+(wire233 ^~ (~^$unsigned(wire230)))) <= (8'ha9));
  always
    @(posedge clk) begin
      for (forvar236 = (1'h0); (forvar236 < (1'h1)); forvar236 = (forvar236 + (1'h1)))
        begin
          reg237 <= (((((^~wire229) + wire226[(3'h4):(2'h2)]) & wire224) ?
                  wire224[(4'hb):(3'h5)] : $signed((!(+wire229)))) ?
              {(wire229 ?
                      {$unsigned(forvar236)} : {wire232[(3'h4):(2'h2)],
                          forvar236[(4'h9):(1'h1)]})} : (^(|$signed((wire234 ?
                  (8'hbe) : (8'ha1))))));
          for (forvar238 = (1'h0); (forvar238 < (1'h0)); forvar238 = (forvar238 + (1'h1)))
            begin
              reg239 <= {(-wire229), wire231[(5'h12):(3'h7)]};
              reg240 <= wire228;
            end
          for (forvar241 = (1'h0); (forvar241 < (1'h1)); forvar241 = (forvar241 + (1'h1)))
            begin
              reg242 <= (8'ha9);
              reg243 <= $unsigned({(~^$unsigned((^~wire235)))});
              reg244 = wire234;
              reg245 <= {((wire232[(3'h5):(2'h3)] ?
                          $unsigned(wire233[(4'h9):(3'h6)]) : $signed((8'ha3))) ?
                      (forvar241 == wire224[(3'h5):(3'h4)]) : reg243[(3'h5):(2'h3)]),
                  wire232[(3'h5):(2'h3)]};
            end
        end
      for (forvar246 = (1'h0); (forvar246 < (2'h2)); forvar246 = (forvar246 + (1'h1)))
        begin
          for (forvar247 = (1'h0); (forvar247 < (2'h3)); forvar247 = (forvar247 + (1'h1)))
            begin
              reg248 = (7'h43);
            end
        end
      for (forvar249 = (1'h0); (forvar249 < (2'h2)); forvar249 = (forvar249 + (1'h1)))
        begin
          for (forvar250 = (1'h0); (forvar250 < (1'h0)); forvar250 = (forvar250 + (1'h1)))
            begin
              reg251 <= $signed(reg240[(3'h5):(3'h4)]);
              reg252 <= ($unsigned((~^$unsigned(reg239))) ?
                  $signed(wire226[(2'h3):(2'h3)]) : $unsigned({(wire235 ?
                          (wire234 ? (8'hbb) : wire232) : ((8'haa) ?
                              reg240 : (8'hbc)))}));
              reg253 = ((+{(|$unsigned(wire232)),
                  (^~$signed((8'ha7)))}) >> (($signed((forvar246 <<< wire232)) <= (forvar249[(3'h7):(2'h3)] ?
                      (wire229 ? reg239 : forvar241) : reg244[(4'h9):(4'h9)])) ?
                  ((~^(reg243 ?
                      wire231 : reg244)) ~^ wire235[(3'h4):(3'h4)]) : {{{reg244,
                              (8'ha1)}},
                      $signed(wire224)}));
            end
          for (forvar254 = (1'h0); (forvar254 < (1'h0)); forvar254 = (forvar254 + (1'h1)))
            begin
              reg255 <= reg245;
              reg256 <= {$unsigned(wire225), wire226};
            end
        end
      reg257 <= ((-$signed($unsigned($signed(reg242)))) ~^ (reg243[(4'h8):(2'h2)] ^~ ({$signed(wire233)} ?
          ((reg239 << wire225) ^~ (forvar249 != (7'h41))) : (reg252[(2'h3):(2'h2)] >>> reg252))));
    end
  assign wire258 = ($unsigned((~$unsigned((reg243 == reg245)))) != (wire234[(3'h6):(2'h2)] > (reg240[(1'h0):(1'h0)] ?
                       $signed((wire230 ?
                           (8'hb7) : wire231)) : $unsigned(wire226[(3'h4):(2'h3)]))));
  assign wire259 = (+(^(reg257 ?
                       (((8'hb1) ^ reg255) ?
                           (wire228 >>> (8'hb5)) : (reg242 ?
                               wire225 : (8'ha6))) : (wire229[(2'h2):(1'h1)] ^~ (reg252 ?
                           wire231 : reg240)))));
  always
    @(posedge clk) begin
      for (forvar260 = (1'h0); (forvar260 < (2'h3)); forvar260 = (forvar260 + (1'h1)))
        begin
          for (forvar261 = (1'h0); (forvar261 < (3'h4)); forvar261 = (forvar261 + (1'h1)))
            begin
              reg262 = $unsigned((~&$unsigned(((reg255 ?
                  wire258 : reg245) >> (wire232 ? reg251 : reg243)))));
              reg263 <= {(wire228 ?
                      ({(reg245 != wire225),
                          reg262[(1'h0):(1'h0)]} <= wire227) : $signed((reg245[(4'he):(1'h1)] ?
                          (~wire226) : reg251[(1'h1):(1'h1)])))};
              reg264 <= $signed($unsigned(($unsigned((reg240 ?
                      reg263 : wire226)) ?
                  $unsigned((wire228 ?
                      reg257 : forvar260)) : wire231[(4'hc):(3'h6)])));
            end
          for (forvar265 = (1'h0); (forvar265 < (1'h1)); forvar265 = (forvar265 + (1'h1)))
            begin
              reg266 <= {(8'hb6)};
              reg267 <= $signed({{((wire233 ? (8'hb8) : wire235) == (^wire229)),
                      ((wire235 ?
                          reg243 : wire230) - wire232[(5'h11):(4'hf)])}});
            end
          for (forvar268 = (1'h0); (forvar268 < (2'h3)); forvar268 = (forvar268 + (1'h1)))
            begin
              reg269 = $unsigned($unsigned($unsigned(reg251)));
              reg270 <= $unsigned(reg239[(4'h9):(1'h0)]);
              reg271 = (|$unsigned($unsigned(((&forvar261) & (reg266 && wire259)))));
              reg272 <= $unsigned((reg264 ?
                  ($unsigned($unsigned(forvar268)) ?
                      ((wire233 ^~ (8'hb4)) == wire233[(5'h14):(4'h9)]) : $unsigned((reg266 ?
                          wire235 : reg240))) : (&((reg263 ?
                      reg255 : reg243) > (reg264 * reg255)))));
            end
        end
      reg273 <= {(~|reg255)};
      reg274 = {wire232, (~|wire235[(3'h6):(3'h6)])};
      reg275 = $signed(wire258);
    end
  assign wire276 = ((!(~|reg266[(4'h8):(2'h3)])) >> reg264[(3'h4):(2'h3)]);
  assign wire277 = $signed($signed($signed(reg252[(3'h5):(2'h3)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module156
#(parameter param220 = {((-(|((8'hae) && (7'h43)))) ? ((~((8'had) != (8'ha7))) ? {((8'h9d) >>> (8'ha7))} : {(+(8'ha6))}) : (8'hb5))})
(y, clk, wire161, wire160, wire159, wire158, wire157);
  output wire [(32'h28d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire161;
  input wire signed [(4'hb):(1'h0)] wire160;
  input wire [(5'h12):(1'h0)] wire159;
  input wire [(5'h13):(1'h0)] wire158;
  input wire signed [(4'hc):(1'h0)] wire157;
  wire [(5'h12):(1'h0)] wire219;
  wire [(2'h2):(1'h0)] wire209;
  wire signed [(4'hd):(1'h0)] wire208;
  wire [(4'h9):(1'h0)] wire187;
  reg [(3'h4):(1'h0)] reg215 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg214 = (1'h0);
  reg [(5'h11):(1'h0)] reg213 = (1'h0);
  reg [(3'h7):(1'h0)] reg207 = (1'h0);
  reg [(3'h5):(1'h0)] reg206 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg205 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg203 = (1'h0);
  reg [(2'h2):(1'h0)] reg202 = (1'h0);
  reg [(4'h8):(1'h0)] reg201 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg200 = (1'h0);
  reg [(4'hd):(1'h0)] reg196 = (1'h0);
  reg [(5'h13):(1'h0)] reg193 = (1'h0);
  reg [(5'h10):(1'h0)] reg192 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg189 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg184 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg182 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg179 = (1'h0);
  reg [(4'hc):(1'h0)] reg178 = (1'h0);
  reg [(5'h11):(1'h0)] reg174 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg169 = (1'h0);
  reg [(5'h12):(1'h0)] reg168 = (1'h0);
  reg [(5'h13):(1'h0)] reg167 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg165 = (1'h0);
  reg [(5'h12):(1'h0)] reg164 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg218 = (1'h0);
  reg [(5'h12):(1'h0)] forvar217 = (1'h0);
  reg [(3'h4):(1'h0)] reg216 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg212 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar211 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar210 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar204 = (1'h0);
  reg [(5'h15):(1'h0)] reg199 = (1'h0);
  reg [(5'h15):(1'h0)] forvar198 = (1'h0);
  reg [(3'h7):(1'h0)] forvar197 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg195 = (1'h0);
  reg [(4'h9):(1'h0)] reg194 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg191 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar190 = (1'h0);
  reg [(4'h9):(1'h0)] forvar188 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg186 = (1'h0);
  reg [(4'hc):(1'h0)] reg185 = (1'h0);
  reg [(4'hf):(1'h0)] forvar183 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar181 = (1'h0);
  reg [(4'h9):(1'h0)] reg180 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar177 = (1'h0);
  reg [(3'h6):(1'h0)] reg176 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg175 = (1'h0);
  reg [(4'h9):(1'h0)] reg173 = (1'h0);
  reg [(3'h5):(1'h0)] forvar172 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg171 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar170 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg166 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar163 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar162 = (1'h0);
  assign y = {wire219,
                 wire209,
                 wire208,
                 wire187,
                 reg215,
                 reg214,
                 reg213,
                 reg207,
                 reg206,
                 reg205,
                 reg203,
                 reg202,
                 reg201,
                 reg200,
                 reg196,
                 reg193,
                 reg192,
                 reg189,
                 reg184,
                 reg182,
                 reg179,
                 reg178,
                 reg174,
                 reg169,
                 reg168,
                 reg167,
                 reg165,
                 reg164,
                 reg218,
                 forvar217,
                 reg216,
                 reg212,
                 forvar211,
                 forvar210,
                 forvar204,
                 reg199,
                 forvar198,
                 forvar197,
                 reg195,
                 reg194,
                 reg191,
                 forvar190,
                 forvar188,
                 reg186,
                 reg185,
                 forvar183,
                 forvar181,
                 reg180,
                 forvar177,
                 reg176,
                 reg175,
                 reg173,
                 forvar172,
                 reg171,
                 forvar170,
                 reg166,
                 forvar163,
                 forvar162,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar162 = (1'h0); (forvar162 < (2'h3)); forvar162 = (forvar162 + (1'h1)))
        begin
          for (forvar163 = (1'h0); (forvar163 < (2'h2)); forvar163 = (forvar163 + (1'h1)))
            begin
              reg164 <= (^~wire158[(4'hf):(3'h7)]);
              reg165 <= (8'hab);
              reg166 = {wire160[(3'h5):(1'h1)]};
              reg167 <= {wire157};
              reg168 <= {wire159, {(+$signed(forvar163[(1'h0):(1'h0)]))}};
            end
        end
      reg169 <= wire160;
      if ((((^{$signed(reg166), (|reg164)}) > (((|forvar162) ?
              (~|wire160) : (reg165 ? reg168 : wire161)) ?
          (!reg169[(1'h0):(1'h0)]) : ((~wire157) ?
              {(7'h44),
                  (7'h41)} : {forvar162}))) << ({wire160} ^ ((~^wire160[(3'h5):(1'h0)]) ?
          (wire157 ? ((7'h42) * wire160) : (wire159 && reg165)) : (~&(reg167 ?
              forvar162 : wire159))))))
        begin
          for (forvar170 = (1'h0); (forvar170 < (1'h0)); forvar170 = (forvar170 + (1'h1)))
            begin
              reg171 = reg164[(4'he):(3'h6)];
            end
          for (forvar172 = (1'h0); (forvar172 < (2'h2)); forvar172 = (forvar172 + (1'h1)))
            begin
              reg173 = ($signed(($signed($signed(wire161)) ?
                  $unsigned((wire160 ? forvar162 : wire157)) : ((forvar162 ?
                      wire157 : (7'h40)) < wire157[(4'hb):(3'h7)]))) >= {reg171[(2'h3):(2'h3)],
                  ((~&$unsigned(reg168)) & reg168)});
              reg174 <= (|(~reg164[(4'hb):(4'ha)]));
              reg175 = reg171[(4'hd):(4'h9)];
              reg176 = (8'ha2);
            end
          for (forvar177 = (1'h0); (forvar177 < (2'h3)); forvar177 = (forvar177 + (1'h1)))
            begin
              reg178 <= ($signed(((-(forvar170 ? reg175 : forvar163)) ?
                      ($unsigned(wire158) ?
                          $unsigned(wire159) : $unsigned(reg176)) : $signed($signed(wire159)))) ?
                  wire159[(1'h1):(1'h1)] : $unsigned(($unsigned((^~reg165)) * reg168)));
              reg179 <= (($unsigned(((&reg171) ?
                  (forvar162 >= forvar177) : (&reg166))) ~^ wire161) | (forvar162 ?
                  (|reg166[(1'h0):(1'h0)]) : (7'h40)));
              reg180 = ((reg173 >> (~|(-reg175[(3'h5):(2'h2)]))) >> $unsigned((forvar162[(1'h1):(1'h1)] ?
                  $signed((wire157 * (8'hb0))) : ($signed(reg165) <<< $unsigned(forvar170)))));
            end
          for (forvar181 = (1'h0); (forvar181 < (1'h1)); forvar181 = (forvar181 + (1'h1)))
            begin
              reg182 <= ($signed((reg165[(1'h0):(1'h0)] || reg175)) - (&$unsigned(($unsigned(reg164) ^~ $unsigned(reg165)))));
            end
          for (forvar183 = (1'h0); (forvar183 < (3'h4)); forvar183 = (forvar183 + (1'h1)))
            begin
              reg184 <= (reg178 ?
                  (~&($signed((wire158 ? reg166 : wire160)) ?
                      $signed($signed(wire157)) : $unsigned(reg171[(5'h11):(3'h6)]))) : $signed(reg182));
              reg185 = reg174;
              reg186 = $unsigned({$signed(($unsigned(forvar170) ?
                      {reg173} : (+reg176))),
                  ($signed((reg174 ? reg185 : (8'h9e))) ?
                      (~&(wire161 ? reg182 : forvar177)) : (^{reg168}))});
            end
        end
      else
        begin
          for (forvar170 = (1'h0); (forvar170 < (3'h4)); forvar170 = (forvar170 + (1'h1)))
            begin
              reg171 = (-$unsigned(($unsigned(reg180[(4'h8):(2'h3)]) ?
                  {(~&wire160),
                      (^reg166)} : ($unsigned((8'hb7)) == (+forvar170)))));
            end
        end
    end
  assign wire187 = (^~((reg165[(4'h9):(4'h9)] != ($unsigned(reg169) ?
                       wire157 : reg182)) << $signed((8'ha1))));
  always
    @(posedge clk) begin
      for (forvar188 = (1'h0); (forvar188 < (3'h4)); forvar188 = (forvar188 + (1'h1)))
        begin
          reg189 <= (reg174[(2'h3):(2'h2)] || wire160);
          for (forvar190 = (1'h0); (forvar190 < (2'h2)); forvar190 = (forvar190 + (1'h1)))
            begin
              reg191 = ((wire158 ?
                  (~({wire161, (8'hb3)} ?
                      (reg184 ?
                          reg182 : (8'ha7)) : (&reg168))) : ((^(&reg179)) ?
                      {$unsigned(wire157),
                          wire187[(4'h8):(3'h7)]} : wire157[(3'h4):(3'h4)])) << wire159);
              reg192 <= $signed($unsigned((8'hbf)));
              reg193 <= (reg191 >= (($unsigned((wire187 * forvar188)) - reg191) ?
                  $unsigned((reg182[(2'h2):(2'h2)] || (reg179 ?
                      reg182 : (8'hae)))) : (~&$unsigned(((8'h9e) <= wire159)))));
              reg194 = ((reg193 ~^ (~|$unsigned(reg189))) | reg174);
            end
          reg195 = (reg178[(3'h5):(3'h4)] >> (8'hba));
        end
      reg196 <= (!reg192[(4'hd):(2'h2)]);
      for (forvar197 = (1'h0); (forvar197 < (3'h4)); forvar197 = (forvar197 + (1'h1)))
        begin
          for (forvar198 = (1'h0); (forvar198 < (3'h4)); forvar198 = (forvar198 + (1'h1)))
            begin
              reg199 = ($unsigned(reg192) | reg184[(3'h7):(2'h3)]);
              reg200 <= $unsigned($unsigned(reg174));
              reg201 <= (+((reg178 <= $unsigned(reg194[(2'h3):(2'h3)])) | reg178[(3'h5):(2'h3)]));
              reg202 <= wire161;
              reg203 <= wire160[(4'h8):(1'h0)];
            end
          for (forvar204 = (1'h0); (forvar204 < (3'h4)); forvar204 = (forvar204 + (1'h1)))
            begin
              reg205 <= ($signed((^$signed($unsigned((8'ha0))))) & (~|$unsigned(reg189[(2'h2):(1'h0)])));
            end
          reg206 <= forvar190;
        end
      reg207 <= ($signed(({$signed(reg193)} <= reg167)) || (^(({reg196} <= forvar198) ?
          ((!wire187) ?
              (reg201 ? wire159 : reg182) : $signed(reg202)) : forvar197)));
    end
  assign wire208 = $signed({$signed(((reg168 ? reg174 : reg178) ?
                           reg202 : reg167[(3'h6):(1'h1)]))});
  assign wire209 = $signed((!$unsigned(reg193[(1'h0):(1'h0)])));
  always
    @(posedge clk) begin
      for (forvar210 = (1'h0); (forvar210 < (1'h0)); forvar210 = (forvar210 + (1'h1)))
        begin
          for (forvar211 = (1'h0); (forvar211 < (1'h0)); forvar211 = (forvar211 + (1'h1)))
            begin
              reg212 = ((reg193[(5'h12):(4'h9)] ^ reg178[(3'h4):(2'h2)]) ?
                  (({(reg184 ?
                          reg174 : reg165)} || $unsigned($signed(reg206))) >> (^~(!$signed(reg193)))) : ($signed(($unsigned(forvar210) >> $signed(reg165))) ?
                      (^reg193) : ((reg192 ? (!reg206) : reg174) ?
                          (8'had) : reg182[(1'h1):(1'h0)])));
              reg213 <= (~$signed({(^~reg202), reg202}));
              reg214 <= (^~$unsigned((8'ha4)));
              reg215 <= (|({($unsigned(reg164) ?
                          reg168 : (wire158 ? (8'ha9) : reg179)),
                      ($signed(reg192) <= reg213)} ?
                  ({(wire157 >> (8'ha3)),
                      (reg178 < reg182)} ^~ $signed((reg202 ^ (8'hb0)))) : (!forvar211)));
              reg216 = $signed($unsigned(reg205[(1'h0):(1'h0)]));
            end
          for (forvar217 = (1'h0); (forvar217 < (1'h0)); forvar217 = (forvar217 + (1'h1)))
            begin
              reg218 = reg203[(1'h0):(1'h0)];
            end
        end
    end
  assign wire219 = wire209[(2'h2):(1'h1)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module136
#(parameter param153 = (~^({(((8'hb4) ? (8'ha0) : (8'hb9)) | ((8'ha9) ? (8'hb3) : (8'hba))), ((8'h9f) ? ((8'hb6) ? (8'hbb) : (7'h40)) : (~(8'ha5)))} >>> ((((8'ha9) && (8'hb6)) > (~|(7'h43))) ~^ (((8'ha1) ? (8'hb4) : (8'hb3)) ? ((8'ha2) ? (8'hab) : (8'h9f)) : (~&(7'h44)))))))
(y, clk, wire141, wire140, wire139, wire138, wire137);
  output wire [(32'h6e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hf):(1'h0)] wire141;
  input wire signed [(5'h13):(1'h0)] wire140;
  input wire signed [(5'h11):(1'h0)] wire139;
  input wire [(4'hd):(1'h0)] wire138;
  input wire [(5'h11):(1'h0)] wire137;
  wire signed [(3'h4):(1'h0)] wire152;
  wire [(4'ha):(1'h0)] wire151;
  wire [(4'hc):(1'h0)] wire150;
  wire signed [(4'he):(1'h0)] wire149;
  wire [(4'hd):(1'h0)] wire148;
  wire [(3'h6):(1'h0)] wire147;
  wire signed [(4'hc):(1'h0)] wire146;
  wire signed [(2'h3):(1'h0)] wire145;
  wire [(2'h3):(1'h0)] wire144;
  wire [(5'h14):(1'h0)] wire143;
  wire [(4'hc):(1'h0)] wire142;
  assign y = {wire152,
                 wire151,
                 wire150,
                 wire149,
                 wire148,
                 wire147,
                 wire146,
                 wire145,
                 wire144,
                 wire143,
                 wire142,
                 (1'h0)};
  assign wire142 = wire140[(3'h5):(2'h2)];
  assign wire143 = wire137;
  assign wire144 = $unsigned(wire140[(4'h9):(2'h3)]);
  assign wire145 = wire138[(4'hd):(1'h1)];
  assign wire146 = (($signed(wire138) ?
                           (~^wire138) : (!{(~^wire145), $signed(wire143)})) ?
                       $signed((~|(8'hbe))) : (|{(wire140 ?
                               {wire141, wire144} : wire145),
                           $unsigned($signed(wire137))}));
  assign wire147 = $signed($unsigned((~&{wire142[(2'h2):(2'h2)],
                       $unsigned(wire145)})));
  assign wire148 = $signed((-wire139[(4'ha):(1'h0)]));
  assign wire149 = (8'hb1);
  assign wire150 = $signed((^wire138[(4'h8):(2'h3)]));
  assign wire151 = $signed({wire144, wire149});
  assign wire152 = (8'hbf);
endmodule