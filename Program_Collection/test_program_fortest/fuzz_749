(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param43 = (~|((((8'h9d) ? (8'hb0) : (8'hae)) & ((8'haf) >> (8'ha2))) <= ({(8'h9d)} ? {(8'hab)} : ((8'ha1) ? (8'ha0) : (8'ha0))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire41;
  wire signed [(4'h9):(1'h0)] wire6;
  wire signed [(2'h3):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  assign y = {wire41, wire6, wire5, wire4, (1'h0)};
  assign wire4 = $signed((&{wire3[(4'h8):(3'h7)]}));
  assign wire5 = wire2[(2'h3):(1'h1)];
  assign wire6 = (~|wire1);
  module7 #() modinst42 (.wire9(wire0), .clk(clk), .y(wire41), .wire8(wire6), .wire11(wire2), .wire10(wire3));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire8, wire9, wire10, wire11);
  output wire [(32'h61):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire8;
  input wire [(2'h3):(1'h0)] wire9;
  input wire signed [(2'h2):(1'h0)] wire10;
  input wire signed [(3'h7):(1'h0)] wire11;
  wire signed [(4'ha):(1'h0)] wire40;
  wire signed [(4'hb):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire18;
  wire signed [(4'hb):(1'h0)] wire19;
  wire [(4'hb):(1'h0)] wire20;
  wire signed [(4'h9):(1'h0)] wire38;
  reg signed [(4'ha):(1'h0)] reg13 = (1'h0);
  reg [(3'h5):(1'h0)] reg14 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg15 = (1'h0);
  reg [(4'ha):(1'h0)] reg16 = (1'h0);
  assign y = {wire40,
                 wire12,
                 wire17,
                 wire18,
                 wire19,
                 wire20,
                 wire38,
                 reg13,
                 reg14,
                 reg15,
                 reg16,
                 (1'h0)};
  assign wire12 = {(^~$signed($unsigned(wire8)))};
  always
    @(posedge clk) begin
      reg13 <= (^~wire10);
      if (wire8)
        begin
          reg14 <= (wire10[(1'h0):(1'h0)] * {((wire9 ?
                  wire11 : wire10) != (wire10 <= wire8))});
          reg15 <= (((wire9[(1'h0):(1'h0)] & $unsigned(reg14)) ?
              ({(8'ha5)} <<< (wire11 ? (8'hae) : reg13)) : $signed((reg13 ?
                  wire12 : (8'ha2)))) & $unsigned((reg13[(1'h0):(1'h0)] ?
              $signed((8'ha3)) : (wire12 >> wire12))));
        end
      else
        begin
          reg14 <= (-wire11);
        end
      reg16 <= wire8;
    end
  assign wire17 = (($signed(reg13[(3'h6):(3'h4)]) ?
                      (~|reg14) : wire11) <<< (~|($unsigned(wire8) >> (wire10 * (8'ha3)))));
  assign wire18 = reg14[(1'h1):(1'h1)];
  assign wire19 = {((^~(&wire11)) ?
                          $signed(wire8[(2'h2):(1'h1)]) : (~&wire11))};
  assign wire20 = wire17[(3'h7):(2'h3)];
  module21 #() modinst39 (.wire22(wire17), .y(wire38), .wire23(reg16), .wire24(wire12), .wire25(wire11), .clk(clk));
  assign wire40 = $signed({$signed($unsigned(wire9))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21  (y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire25;
  input wire signed [(4'hb):(1'h0)] wire24;
  input wire signed [(4'ha):(1'h0)] wire23;
  input wire [(4'h8):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire37;
  wire [(4'h8):(1'h0)] wire36;
  wire [(2'h2):(1'h0)] wire35;
  wire signed [(3'h5):(1'h0)] wire34;
  wire [(3'h4):(1'h0)] wire32;
  wire [(4'h8):(1'h0)] wire31;
  wire [(3'h6):(1'h0)] wire30;
  wire signed [(4'h9):(1'h0)] wire29;
  wire [(4'hb):(1'h0)] wire28;
  wire [(3'h5):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire26;
  reg [(4'hb):(1'h0)] reg33 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 reg33,
                 (1'h0)};
  assign wire26 = ((-((wire22 ? wire23 : wire25) ~^ (+wire22))) ?
                      $signed($signed($signed(wire22))) : $unsigned($unsigned($signed(wire23))));
  assign wire27 = ((({wire22} > (wire22 ^~ (8'ha1))) ?
                      $unsigned($unsigned((8'hac))) : ((wire24 ~^ wire22) ?
                          (wire25 <<< wire22) : wire25)) & $signed({$unsigned((8'h9e))}));
  assign wire28 = wire26[(3'h5):(3'h4)];
  assign wire29 = wire28;
  assign wire30 = $unsigned(wire26);
  assign wire31 = wire28;
  assign wire32 = wire27;
  always
    @(posedge clk) begin
      reg33 <= wire31[(2'h3):(2'h2)];
    end
  assign wire34 = wire28;
  assign wire35 = (wire29[(2'h3):(1'h1)] & {$signed((wire23 ?
                          wire32 : wire26))});
  assign wire36 = wire26;
  assign wire37 = $unsigned((|wire24));
endmodule