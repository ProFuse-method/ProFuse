(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire74;
  wire signed [(2'h2):(1'h0)] wire73;
  wire [(4'h8):(1'h0)] wire69;
  wire [(4'hb):(1'h0)] wire68;
  wire [(3'h7):(1'h0)] wire67;
  wire signed [(4'ha):(1'h0)] wire66;
  wire signed [(3'h4):(1'h0)] wire64;
  wire [(3'h7):(1'h0)] wire4;
  reg signed [(4'h8):(1'h0)] reg72 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg71 = (1'h0);
  assign y = {wire74,
                 wire73,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire64,
                 wire4,
                 reg72,
                 reg71,
                 (1'h0)};
  assign wire4 = wire2;
  module5 #() modinst65 (wire64, clk, wire0, wire2, wire4, wire1);
  assign wire66 = wire1[(2'h2):(1'h0)];
  assign wire67 = wire1[(3'h4):(1'h0)];
  assign wire68 = (~$unsigned($unsigned($unsigned(wire1))));
  module15 #() modinst70 (.y(wire69), .wire16(wire4), .clk(clk), .wire19(wire66), .wire17(wire0), .wire18(wire67));
  always
    @(posedge clk) begin
      reg71 <= wire67;
      reg72 <= wire0;
    end
  assign wire73 = (~$signed(wire1));
  assign wire74 = (&((((8'hab) ? wire1 : wire73) ?
                      wire68[(4'h9):(3'h6)] : (~&(8'hae))) || wire3[(3'h4):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param63 = ((8'ha6) ^~ (+(((8'hae) >>> (8'had)) ? {(8'hae)} : {(8'hae)}))))
(y, clk, wire6, wire7, wire8, wire9);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire6;
  input wire signed [(4'hb):(1'h0)] wire7;
  input wire [(3'h6):(1'h0)] wire8;
  input wire [(3'h5):(1'h0)] wire9;
  wire [(4'hb):(1'h0)] wire61;
  wire signed [(3'h4):(1'h0)] wire10;
  wire signed [(3'h7):(1'h0)] wire11;
  wire signed [(3'h5):(1'h0)] wire12;
  wire signed [(3'h5):(1'h0)] wire13;
  wire signed [(2'h3):(1'h0)] wire38;
  reg signed [(4'h9):(1'h0)] reg14 = (1'h0);
  assign y = {wire61, wire10, wire11, wire12, wire13, wire38, reg14, (1'h0)};
  assign wire10 = $signed({(wire6[(3'h4):(2'h2)] ?
                          (wire9 ? wire9 : wire8) : (~&(8'h9d)))});
  assign wire11 = wire6;
  assign wire12 = (wire7 || $signed(wire8[(3'h6):(3'h6)]));
  assign wire13 = $signed(($unsigned((wire11 <<< wire12)) ~^ $signed((wire11 > wire8))));
  always
    @(posedge clk) begin
      reg14 <= $unsigned($signed(wire6[(4'h8):(4'h8)]));
    end
  module15 #() modinst39 (wire38, clk, reg14, wire11, wire6, wire10);
  module40 #() modinst62 (wire61, clk, wire7, wire38, wire11, wire13);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module40  (y, clk, wire44, wire43, wire42, wire41);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire44;
  input wire [(2'h2):(1'h0)] wire43;
  input wire signed [(3'h7):(1'h0)] wire42;
  input wire signed [(3'h5):(1'h0)] wire41;
  wire [(3'h7):(1'h0)] wire60;
  wire [(4'ha):(1'h0)] wire59;
  wire signed [(3'h7):(1'h0)] wire58;
  wire signed [(4'ha):(1'h0)] wire57;
  wire [(3'h7):(1'h0)] wire56;
  wire [(3'h4):(1'h0)] wire55;
  reg signed [(2'h3):(1'h0)] reg54 = (1'h0);
  reg [(2'h2):(1'h0)] reg53 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg52 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(3'h5):(1'h0)] reg50 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg49 = (1'h0);
  reg [(3'h7):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg46 = (1'h0);
  reg [(2'h2):(1'h0)] reg45 = (1'h0);
  assign y = {wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg45 <= wire44;
      if (((~|((~^wire43) | $unsigned(wire42))) == wire43[(1'h0):(1'h0)]))
        begin
          reg46 <= (&wire42[(3'h6):(3'h4)]);
        end
      else
        begin
          if ($signed(wire44))
            begin
              reg46 <= reg45[(1'h0):(1'h0)];
              reg47 <= $unsigned((|wire43));
              reg48 <= wire42[(3'h7):(1'h1)];
            end
          else
            begin
              reg46 <= (reg47[(1'h0):(1'h0)] || $unsigned({reg46}));
              reg47 <= $signed($signed(wire43));
              reg48 <= reg46;
            end
          reg49 <= (-$unsigned(($unsigned(reg45) >= (^wire44))));
        end
      if ((~&{reg47[(2'h3):(1'h1)]}))
        begin
          reg50 <= wire41[(3'h4):(1'h0)];
        end
      else
        begin
          reg50 <= $unsigned($unsigned($signed((-wire44))));
          if (((|$unsigned((reg50 ? reg49 : reg49))) ?
              reg48[(1'h0):(1'h0)] : ($signed((^reg48)) ?
                  ((wire44 ? reg45 : reg50) ?
                      $unsigned(wire43) : ((8'ha8) >= wire43)) : wire44)))
            begin
              reg51 <= $unsigned(wire42);
              reg52 <= $unsigned($unsigned(($unsigned((8'haf)) ?
                  reg48 : $unsigned((8'haf)))));
              reg53 <= (~^($unsigned(wire43[(1'h1):(1'h1)]) >> {$unsigned(wire41)}));
            end
          else
            begin
              reg51 <= $signed((~&(+(8'hac))));
              reg52 <= ((((reg52 >> wire41) ? reg46 : (~reg50)) ?
                      reg48 : reg49[(2'h2):(1'h1)]) ?
                  $unsigned({((8'ha9) ?
                          (8'haa) : (8'hab))}) : $unsigned({{reg50}}));
            end
          reg54 <= {(8'hb0)};
        end
    end
  assign wire55 = (reg51[(4'h9):(1'h0)] * $unsigned(((reg50 << reg54) != $signed((8'had)))));
  assign wire56 = reg46;
  assign wire57 = ((~(-$unsigned(wire41))) ?
                      ((&reg54[(2'h3):(1'h1)]) ?
                          $unsigned(((8'haf) > wire42)) : $signed(reg51[(4'h9):(3'h6)])) : $signed((+$signed(reg48))));
  assign wire58 = wire41[(3'h5):(1'h0)];
  assign wire59 = ($signed((~|(wire41 != reg45))) ?
                      wire44[(3'h7):(3'h6)] : (((^wire42) ?
                              ((8'haf) <<< (8'haa)) : $unsigned(reg53)) ?
                          ({reg45} ~^ (&wire43)) : reg51[(4'h8):(3'h5)]));
  assign wire60 = $unsigned($signed(((reg48 ? (8'ha7) : wire59) <= (reg47 ?
                      (8'hae) : (8'ha9)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param37 = (-(((~^(8'ha0)) ~^ ((8'ha4) ? (8'ha9) : (8'haf))) ~^ {(|(8'ha2))})))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h65):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire19;
  input wire [(3'h6):(1'h0)] wire18;
  input wire [(3'h4):(1'h0)] wire17;
  input wire signed [(3'h4):(1'h0)] wire16;
  wire [(4'hb):(1'h0)] wire36;
  wire [(3'h6):(1'h0)] wire35;
  wire signed [(3'h6):(1'h0)] wire32;
  wire [(4'h8):(1'h0)] wire29;
  wire signed [(4'h9):(1'h0)] wire28;
  wire signed [(4'h9):(1'h0)] wire27;
  wire signed [(2'h3):(1'h0)] wire26;
  wire signed [(3'h6):(1'h0)] wire25;
  wire [(2'h2):(1'h0)] wire23;
  reg [(3'h4):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg33 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg31 = (1'h0);
  reg [(3'h7):(1'h0)] reg30 = (1'h0);
  reg [(2'h3):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg22 = (1'h0);
  reg [(3'h5):(1'h0)] reg21 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg20 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire32,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire23,
                 reg34,
                 reg33,
                 reg31,
                 reg30,
                 reg24,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg20 <= (wire16 >>> (wire17 != $signed((wire18 | wire16))));
      reg21 <= ((({wire17} || $signed(wire19)) < wire17[(2'h3):(2'h3)]) ?
          (&wire17[(1'h0):(1'h0)]) : $unsigned((!$signed(wire19))));
      reg22 <= (|{(8'ha7)});
    end
  assign wire23 = (8'ha0);
  always
    @(posedge clk) begin
      reg24 <= $signed(reg20[(3'h6):(1'h1)]);
    end
  assign wire25 = reg24;
  assign wire26 = ({wire17[(2'h3):(1'h0)]} ?
                      $unsigned($signed((8'ha6))) : reg22[(2'h3):(1'h1)]);
  assign wire27 = wire26;
  assign wire28 = (wire25[(2'h3):(2'h2)] ? wire26 : (&wire26[(2'h2):(1'h0)]));
  assign wire29 = (^~{$signed($signed(wire25))});
  always
    @(posedge clk) begin
      reg30 <= $signed($unsigned((&{(8'ha8)})));
      reg31 <= $signed((((reg22 | wire26) ?
          (wire26 ? wire26 : reg22) : (wire26 & (8'h9d))) | ((reg22 ?
              reg20 : wire27) ?
          $unsigned(wire19) : (8'had))));
    end
  assign wire32 = {{{wire17}}};
  always
    @(posedge clk) begin
      reg33 <= (|$unsigned(reg30));
      reg34 <= $unsigned(({$unsigned(wire27)} ?
          ((wire16 ?
              wire19 : reg31) >= wire18[(3'h4):(3'h4)]) : (wire23[(1'h1):(1'h0)] ?
              wire27 : wire29[(2'h3):(1'h0)])));
    end
  assign wire35 = $unsigned($signed(wire16));
  assign wire36 = (({(8'haf)} & $signed(wire35[(2'h2):(2'h2)])) ~^ wire19);
endmodule