(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire59;
  wire signed [(4'h9):(1'h0)] wire58;
  wire [(2'h2):(1'h0)] wire57;
  wire signed [(4'h8):(1'h0)] wire56;
  wire [(4'hb):(1'h0)] wire54;
  wire [(4'h8):(1'h0)] wire21;
  wire [(3'h4):(1'h0)] wire19;
  wire signed [(4'h9):(1'h0)] wire4;
  assign y = {wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire54,
                 wire21,
                 wire19,
                 wire4,
                 (1'h0)};
  assign wire4 = $unsigned($unsigned(((wire2 <= wire1) & ((8'h9f) * wire0))));
  module5 #() modinst20 (wire19, clk, wire0, wire4, wire2, wire3);
  assign wire21 = $unsigned(wire3);
  module22 #() modinst55 (.wire23(wire21), .clk(clk), .wire25(wire0), .y(wire54), .wire24(wire3), .wire26(wire1));
  assign wire56 = ((((wire21 || wire2) * {wire2}) ?
                      wire54 : wire0[(4'ha):(3'h4)]) ^~ (~|wire54[(3'h6):(3'h6)]));
  assign wire57 = (~&$signed($unsigned(wire1)));
  assign wire58 = ($unsigned((wire57[(1'h1):(1'h0)] >= wire56[(2'h3):(2'h2)])) ?
                      (|($unsigned(wire56) ?
                          wire19[(2'h3):(1'h1)] : wire4[(3'h6):(2'h2)])) : wire3[(1'h1):(1'h1)]);
  module5 #() modinst60 (.wire6(wire56), .wire9(wire4), .wire8(wire58), .y(wire59), .clk(clk), .wire7(wire19));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module22  (y, clk, wire26, wire25, wire24, wire23);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire26;
  input wire signed [(4'ha):(1'h0)] wire25;
  input wire [(3'h6):(1'h0)] wire24;
  input wire [(4'h8):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire53;
  wire signed [(4'h8):(1'h0)] wire52;
  wire [(4'h8):(1'h0)] wire51;
  wire signed [(4'h9):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire27;
  reg signed [(3'h5):(1'h0)] reg50 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg49 = (1'h0);
  reg [(3'h7):(1'h0)] reg48 = (1'h0);
  reg [(2'h2):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg46 = (1'h0);
  assign y = {wire53,
                 wire52,
                 wire51,
                 wire44,
                 wire27,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 (1'h0)};
  assign wire27 = $unsigned(($signed((~&wire25)) << $signed($unsigned((8'hae)))));
  module28 #() modinst45 (wire44, clk, wire24, wire27, wire25, wire23);
  always
    @(posedge clk) begin
      reg46 <= ((($unsigned(wire23) ^ (wire25 ? wire23 : wire25)) ?
              $unsigned((wire44 ^ (8'haa))) : wire27[(3'h4):(2'h2)]) ?
          (8'h9f) : ($signed((~(8'ha8))) || ((8'ha5) | wire27)));
      if (wire44)
        begin
          if (wire23)
            begin
              reg47 <= $signed($signed(wire44));
            end
          else
            begin
              reg47 <= (^~{(-$unsigned(wire26))});
              reg48 <= $unsigned((&{{wire27}}));
              reg49 <= $signed((($signed(reg48) + {wire27}) ?
                  ($unsigned(wire24) ?
                      wire44[(3'h7):(1'h1)] : $unsigned(wire24)) : $signed((reg46 ?
                      wire26 : wire27))));
            end
          reg50 <= $unsigned(reg47);
        end
      else
        begin
          reg47 <= wire26[(1'h1):(1'h0)];
          reg48 <= $unsigned($unsigned(($unsigned(reg46) ?
              reg47[(2'h2):(1'h0)] : (wire44 < wire44))));
          reg49 <= reg48;
        end
    end
  assign wire51 = ((^~$unsigned((^wire26))) ?
                      {((reg48 & reg49) >>> $signed(reg50))} : {(reg50[(1'h1):(1'h1)] ^ (reg49 >= reg47))});
  assign wire52 = ({$unsigned((~&(8'h9f)))} ?
                      $unsigned((~&(8'haa))) : $unsigned({$unsigned(wire27)}));
  assign wire53 = (~wire26[(3'h5):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param18 = ((8'hac) & (~|(((8'ha0) - (8'h9e)) ? ((8'ha8) | (8'hb0)) : ((8'ha9) <<< (8'haf))))))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire8;
  input wire signed [(3'h4):(1'h0)] wire7;
  input wire [(2'h2):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire17;
  wire [(3'h6):(1'h0)] wire16;
  wire signed [(3'h6):(1'h0)] wire15;
  wire signed [(3'h5):(1'h0)] wire14;
  reg [(4'h8):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg10 = (1'h0);
  assign y = {wire17,
                 wire16,
                 wire15,
                 wire14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg10 <= (~&wire6);
      if (($signed(wire7) >= $unsigned((wire6 ? (wire8 || reg10) : wire9))))
        begin
          reg11 <= (wire7[(2'h3):(2'h3)] ?
              wire6[(1'h0):(1'h0)] : $signed($signed({wire6})));
          if ((~&((8'hac) ~^ (&wire9[(2'h3):(1'h0)]))))
            begin
              reg12 <= wire8[(4'h9):(4'h8)];
            end
          else
            begin
              reg12 <= reg10;
              reg13 <= (^(8'h9e));
            end
        end
      else
        begin
          reg11 <= (reg13[(4'h8):(1'h0)] ?
              (~({wire8} ^ reg12[(3'h6):(1'h0)])) : ((wire6 >>> (wire8 & reg12)) ?
                  $unsigned({reg10}) : {reg12[(3'h7):(2'h2)]}));
          reg12 <= $signed({$unsigned(reg12[(2'h2):(1'h1)])});
          reg13 <= ((-$signed({wire7})) ?
              ($unsigned((wire8 * (8'haa))) ?
                  reg11[(3'h4):(3'h4)] : wire7) : ((-$unsigned(wire6)) ?
                  {$signed(reg12)} : ($unsigned(wire8) ?
                      (wire6 <<< reg12) : (8'h9c))));
        end
    end
  assign wire14 = $signed(wire9[(2'h3):(1'h0)]);
  assign wire15 = ($unsigned($signed($signed(wire7))) ?
                      $signed($signed(reg12)) : ((~|wire6) ?
                          $signed(wire6[(1'h0):(1'h0)]) : wire6));
  assign wire16 = (wire14 ? wire14[(1'h1):(1'h0)] : (&(8'h9f)));
  assign wire17 = wire8;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module28  (y, clk, wire32, wire31, wire30, wire29);
  output wire [(32'h3b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire32;
  input wire [(3'h4):(1'h0)] wire31;
  input wire [(4'ha):(1'h0)] wire30;
  input wire signed [(2'h3):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire37;
  wire [(2'h3):(1'h0)] wire36;
  wire signed [(3'h5):(1'h0)] wire35;
  wire [(4'ha):(1'h0)] wire34;
  wire signed [(4'h8):(1'h0)] wire33;
  reg [(2'h2):(1'h0)] reg43 = (1'h0);
  reg [(3'h7):(1'h0)] reg42 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg41 = (1'h0);
  reg [(2'h3):(1'h0)] reg40 = (1'h0);
  reg [(4'ha):(1'h0)] reg39 = (1'h0);
  reg [(3'h5):(1'h0)] reg38 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 (1'h0)};
  assign wire33 = (($signed($unsigned(wire32)) ?
                          (!wire29[(1'h1):(1'h1)]) : ((wire32 ?
                                  wire32 : wire29) ?
                              wire32[(2'h2):(2'h2)] : (wire32 ?
                                  wire30 : wire32))) ?
                      wire32[(3'h4):(1'h0)] : $signed(((wire31 >> wire29) && $unsigned(wire32))));
  assign wire34 = ((wire31[(2'h2):(1'h0)] ?
                      $signed(wire31[(2'h3):(2'h2)]) : {$signed(wire29)}) != (-wire33));
  assign wire35 = wire30;
  assign wire36 = (~wire31[(1'h0):(1'h0)]);
  assign wire37 = (wire35 ?
                      $signed(wire35[(2'h3):(2'h3)]) : $unsigned(($signed((8'ha7)) >= $unsigned(wire32))));
  always
    @(posedge clk) begin
      if ((~^wire31[(1'h0):(1'h0)]))
        begin
          reg38 <= (~$signed(wire29));
          reg39 <= $signed($signed(reg38[(2'h3):(2'h2)]));
          reg40 <= $unsigned((~^(!(8'ha2))));
        end
      else
        begin
          reg38 <= wire36[(1'h1):(1'h0)];
        end
      if ($signed((~(^~$unsigned(wire36)))))
        begin
          reg41 <= (~^($signed((-reg39)) ?
              (~$unsigned(wire30)) : $unsigned((wire35 | wire35))));
          reg42 <= ($unsigned($signed(reg38)) ?
              $signed((^reg40[(2'h3):(1'h0)])) : (((wire35 && wire37) && wire35[(3'h5):(3'h4)]) ?
                  $unsigned((8'h9f)) : $unsigned($signed(wire31))));
          reg43 <= wire35;
        end
      else
        begin
          reg41 <= $signed(reg38[(1'h0):(1'h0)]);
          reg42 <= $unsigned((reg38[(3'h5):(3'h5)] * (wire36[(1'h0):(1'h0)] ?
              $unsigned(wire37) : (wire34 && reg43))));
          reg43 <= (wire31[(2'h2):(2'h2)] ?
              ((~&$signed(wire29)) ?
                  $unsigned(wire36) : ($unsigned((8'ha3)) | (wire36 ?
                      wire33 : reg43))) : wire30[(3'h4):(2'h2)]);
        end
    end
endmodule