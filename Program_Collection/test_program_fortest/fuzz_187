(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h73):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire72;
  wire [(3'h7):(1'h0)] wire69;
  wire signed [(3'h4):(1'h0)] wire67;
  wire signed [(3'h7):(1'h0)] wire9;
  wire [(4'hb):(1'h0)] wire8;
  wire signed [(4'hb):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire5;
  wire [(2'h2):(1'h0)] wire4;
  reg [(3'h5):(1'h0)] reg71 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg70 = (1'h0);
  reg [(3'h7):(1'h0)] reg14 = (1'h0);
  reg [(3'h5):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg12 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg10 = (1'h0);
  assign y = {wire72,
                 wire69,
                 wire67,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg71,
                 reg70,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 (1'h0)};
  assign wire4 = {$signed(wire1[(3'h6):(3'h6)])};
  assign wire5 = ((wire1 ? ({wire0} | (~wire0)) : wire2[(4'h9):(3'h4)]) ?
                     (^~(&$unsigned(wire4))) : ((|(^~wire4)) && $signed((wire0 ?
                         wire3 : (8'ha0)))));
  assign wire6 = (wire3 <<< (8'ha6));
  assign wire7 = $signed((|$signed(wire3[(3'h6):(3'h4)])));
  assign wire8 = (^$unsigned($signed($unsigned((8'h9f)))));
  assign wire9 = (!$unsigned((~|{wire6})));
  always
    @(posedge clk) begin
      reg10 <= wire1;
      if ($signed((!(!(wire2 ? wire5 : wire6)))))
        begin
          reg11 <= wire9;
        end
      else
        begin
          if ($signed($signed(wire4)))
            begin
              reg11 <= ((($signed(wire4) ?
                  {wire6} : $signed((8'ha7))) - ($signed(wire4) >> $unsigned(wire7))) ^ wire2[(3'h4):(1'h0)]);
              reg12 <= wire1;
            end
          else
            begin
              reg11 <= wire1[(1'h1):(1'h1)];
              reg12 <= $unsigned(($signed((wire7 ? reg10 : (8'ha0))) ?
                  reg10[(2'h2):(1'h0)] : wire0));
              reg13 <= $signed((wire2[(4'h9):(4'h8)] ?
                  ((wire8 ? (8'haf) : wire5) > $signed(reg11)) : (^~(wire4 ?
                      reg10 : reg12))));
            end
          reg14 <= wire1[(1'h0):(1'h0)];
        end
    end
  module15 #() modinst68 (.wire18(wire8), .wire16(reg10), .wire17(reg12), .wire19(wire6), .y(wire67), .clk(clk));
  assign wire69 = $signed((wire3[(3'h5):(3'h5)] ^~ ($signed(wire1) ?
                      wire4[(2'h2):(1'h1)] : (wire7 ? reg11 : wire6))));
  always
    @(posedge clk) begin
      reg70 <= {wire8[(2'h2):(1'h1)]};
      reg71 <= wire67[(1'h1):(1'h1)];
    end
  module39 #() modinst73 (wire72, clk, wire8, wire0, reg12, reg14);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15  (y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire19;
  input wire signed [(4'h9):(1'h0)] wire18;
  input wire signed [(4'h9):(1'h0)] wire17;
  input wire signed [(3'h7):(1'h0)] wire16;
  wire [(3'h5):(1'h0)] wire66;
  wire [(3'h6):(1'h0)] wire64;
  wire [(4'ha):(1'h0)] wire62;
  wire signed [(4'hb):(1'h0)] wire61;
  wire signed [(3'h5):(1'h0)] wire59;
  wire signed [(2'h3):(1'h0)] wire38;
  wire signed [(3'h4):(1'h0)] wire37;
  wire [(3'h7):(1'h0)] wire36;
  wire [(3'h7):(1'h0)] wire35;
  wire signed [(3'h6):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire33;
  wire signed [(3'h4):(1'h0)] wire31;
  assign y = {wire66,
                 wire64,
                 wire62,
                 wire61,
                 wire59,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire31,
                 (1'h0)};
  module20 #() modinst32 (wire31, clk, wire16, wire17, wire18, wire19);
  assign wire33 = ((wire16[(1'h0):(1'h0)] >>> (!(wire19 ?
                      wire18 : wire17))) & $unsigned($signed((|(8'ha7)))));
  assign wire34 = wire31;
  assign wire35 = (~^((~^(wire34 ? wire18 : wire31)) & ((wire31 ?
                      wire19 : wire31) ^ $signed(wire17))));
  assign wire36 = (($signed($unsigned(wire17)) == ($signed(wire18) <= (!wire35))) <<< wire17);
  assign wire37 = (((+{wire31}) * wire17[(3'h7):(2'h2)]) ?
                      $unsigned($unsigned((^wire35))) : (((~wire19) ?
                              {wire19} : wire33[(3'h4):(2'h3)]) ?
                          wire35[(2'h3):(2'h3)] : $signed((wire33 ^~ wire33))));
  assign wire38 = wire37;
  module39 #() modinst60 (wire59, clk, wire19, wire38, wire36, wire18);
  assign wire61 = (wire38[(1'h0):(1'h0)] ?
                      wire36[(3'h5):(2'h2)] : (($signed(wire36) ?
                              (wire37 > wire18) : $unsigned(wire36)) ?
                          ({wire36} ?
                              (^~wire35) : wire17[(3'h6):(3'h5)]) : (wire18 ?
                              wire18[(3'h4):(1'h0)] : (wire35 ?
                                  wire17 : wire38))));
  module20 #() modinst63 (.clk(clk), .wire23(wire37), .wire21(wire17), .y(wire62), .wire22(wire33), .wire24(wire36));
  module39 #() modinst65 (wire64, clk, wire61, wire33, wire37, wire36);
  assign wire66 = ($unsigned($unsigned($signed(wire16))) ?
                      ((^~(|wire17)) > (wire18[(1'h1):(1'h0)] == (!wire18))) : ((((8'haa) ?
                              wire16 : wire31) ?
                          (wire16 + wire38) : wire19) | ((!wire38) ?
                          $signed(wire16) : (-wire62))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module39  (y, clk, wire43, wire42, wire41, wire40);
  output wire [(32'h75):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire43;
  input wire signed [(2'h3):(1'h0)] wire42;
  input wire [(2'h3):(1'h0)] wire41;
  input wire signed [(3'h7):(1'h0)] wire40;
  wire signed [(4'ha):(1'h0)] wire58;
  wire signed [(3'h6):(1'h0)] wire57;
  wire [(4'h8):(1'h0)] wire53;
  wire signed [(3'h4):(1'h0)] wire45;
  wire [(2'h2):(1'h0)] wire44;
  reg signed [(4'hb):(1'h0)] reg56 = (1'h0);
  reg [(3'h4):(1'h0)] reg55 = (1'h0);
  reg [(4'ha):(1'h0)] reg54 = (1'h0);
  reg [(4'h9):(1'h0)] reg52 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(4'ha):(1'h0)] reg50 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg48 = (1'h0);
  reg [(4'hb):(1'h0)] reg47 = (1'h0);
  reg [(3'h5):(1'h0)] reg46 = (1'h0);
  assign y = {wire58,
                 wire57,
                 wire53,
                 wire45,
                 wire44,
                 reg56,
                 reg55,
                 reg54,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 (1'h0)};
  assign wire44 = wire41[(2'h3):(2'h2)];
  assign wire45 = wire42[(2'h3):(1'h1)];
  always
    @(posedge clk) begin
      reg46 <= (8'ha2);
      reg47 <= wire42;
      if (reg47)
        begin
          reg48 <= $unsigned(wire43);
          if (wire41[(2'h3):(2'h3)])
            begin
              reg49 <= wire43;
              reg50 <= reg46[(1'h0):(1'h0)];
              reg51 <= wire44[(2'h2):(1'h0)];
            end
          else
            begin
              reg49 <= ($signed((reg47[(2'h3):(2'h2)] >= wire41[(1'h1):(1'h0)])) ?
                  {(+$unsigned(wire43))} : (^(reg51 ?
                      reg47[(4'hb):(3'h4)] : (^wire44))));
              reg50 <= ($signed((wire42 ?
                  reg47 : (wire43 ?
                      wire44 : wire44))) && (~^wire40[(1'h0):(1'h0)]));
            end
          reg52 <= (reg49 ? (({reg49} == reg47) | wire40) : $signed((+wire41)));
        end
      else
        begin
          reg48 <= $unsigned((wire42 | $signed($signed(reg52))));
          if (reg52[(1'h0):(1'h0)])
            begin
              reg49 <= $unsigned((8'ha3));
              reg50 <= reg50[(1'h1):(1'h1)];
            end
          else
            begin
              reg49 <= $signed(((!wire42) ? wire45 : $unsigned((^~reg47))));
              reg50 <= {$signed($signed((wire41 ? wire40 : reg47)))};
            end
          reg51 <= ((!$signed(wire45[(2'h3):(1'h0)])) ?
              {(~$unsigned(reg51))} : $signed((&(reg52 == wire44))));
        end
    end
  assign wire53 = ($unsigned((reg50 == (reg52 < reg51))) ?
                      (wire42[(1'h1):(1'h1)] ^~ ((wire43 <<< reg51) ?
                          $signed(reg50) : $signed(wire45))) : reg52);
  always
    @(posedge clk) begin
      if (wire53)
        begin
          reg54 <= $signed(($unsigned($unsigned(wire44)) ?
              wire44 : $unsigned(wire40[(1'h1):(1'h1)])));
          reg55 <= ((~^((~^reg47) && {(8'h9e)})) != $signed(($unsigned(wire41) ?
              $unsigned(reg48) : $signed(reg47))));
        end
      else
        begin
          reg54 <= {((reg48[(1'h1):(1'h1)] ?
                      reg48 : ((8'ha5) ? (8'h9c) : reg50)) ?
                  reg49 : ((wire53 ? reg52 : reg46) ?
                      reg54[(2'h3):(2'h3)] : (wire43 ? wire43 : reg55)))};
          reg55 <= ((((reg52 ? (8'hae) : wire43) ?
                  $signed((8'ha5)) : $signed(reg52)) ?
              wire44[(2'h2):(2'h2)] : wire53) && ($signed((~^wire41)) ?
              (8'ha6) : ((reg51 * reg47) ?
                  $signed(wire44) : ((8'haa) ? (8'hab) : wire42))));
        end
    end
  always
    @(posedge clk) begin
      reg56 <= reg49;
    end
  assign wire57 = $signed($signed(wire42[(1'h1):(1'h1)]));
  assign wire58 = wire53[(2'h2):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param30 = (({((8'ha0) * (8'h9c))} >>> (!(^(8'ha1)))) <= ((((8'h9d) ? (8'ha5) : (8'h9e)) ^ (|(8'haf))) ? (((8'hac) | (8'had)) ? (8'ha2) : ((8'hb0) == (8'ha8))) : ((^(8'haa)) ? ((8'ha9) ? (8'h9f) : (8'ha1)) : (~|(8'hab))))))
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h1b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire24;
  input wire [(3'h4):(1'h0)] wire23;
  input wire [(3'h7):(1'h0)] wire22;
  input wire [(2'h3):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire29;
  wire [(3'h6):(1'h0)] wire28;
  wire signed [(2'h3):(1'h0)] wire27;
  wire signed [(2'h2):(1'h0)] wire26;
  wire [(3'h5):(1'h0)] wire25;
  assign y = {wire29, wire28, wire27, wire26, wire25, (1'h0)};
  assign wire25 = wire21[(2'h3):(1'h1)];
  assign wire26 = (((8'ha2) ? wire24[(2'h2):(1'h0)] : wire24) ?
                      ((~&$signed(wire25)) >> {wire24[(1'h1):(1'h0)]}) : (-(|wire21)));
  assign wire27 = $signed($unsigned($signed($signed(wire23))));
  assign wire28 = ((^$unsigned($signed(wire23))) ?
                      wire23[(2'h3):(2'h3)] : ({(&wire21)} ?
                          ((wire23 & wire25) < {wire23}) : (+(wire21 ?
                              wire27 : (8'ha2)))));
  assign wire29 = (!$signed(($unsigned(wire22) ?
                      (wire24 ? wire21 : wire21) : (+(8'had)))));
endmodule