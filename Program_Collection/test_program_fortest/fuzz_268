(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param47 = (|(((|(8'h9e)) <<< (~|(8'h9f))) != ((&(8'had)) ^ ((8'hb0) ~^ (8'h9e))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire46;
  wire [(4'h9):(1'h0)] wire44;
  wire signed [(4'hb):(1'h0)] wire26;
  wire [(4'h9):(1'h0)] wire24;
  assign y = {wire46, wire44, wire26, wire24, (1'h0)};
  module4 #() modinst25 (.wire8(wire0), .y(wire24), .clk(clk), .wire6(wire1), .wire5(wire3), .wire7(wire2));
  assign wire26 = wire0;
  module27 #() modinst45 (wire44, clk, wire0, wire26, wire3, wire1);
  assign wire46 = wire44;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module27  (y, clk, wire31, wire30, wire29, wire28);
  output wire [(32'h42):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire31;
  input wire signed [(3'h6):(1'h0)] wire30;
  input wire signed [(4'h8):(1'h0)] wire29;
  input wire signed [(2'h3):(1'h0)] wire28;
  wire signed [(3'h4):(1'h0)] wire43;
  wire [(2'h3):(1'h0)] wire42;
  wire signed [(4'h9):(1'h0)] wire36;
  wire [(3'h7):(1'h0)] wire35;
  wire signed [(3'h6):(1'h0)] wire34;
  wire signed [(2'h3):(1'h0)] wire33;
  wire signed [(4'h9):(1'h0)] wire32;
  reg signed [(3'h4):(1'h0)] reg41 = (1'h0);
  reg [(3'h7):(1'h0)] reg40 = (1'h0);
  reg [(2'h2):(1'h0)] reg39 = (1'h0);
  reg [(3'h6):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg37 = (1'h0);
  assign y = {wire43,
                 wire42,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 (1'h0)};
  assign wire32 = (wire31 ^ ($signed((^~wire29)) ?
                      (+$signed(wire30)) : $unsigned(wire31[(1'h0):(1'h0)])));
  assign wire33 = (wire29[(2'h3):(2'h3)] ~^ ((|$signed(wire32)) <<< $signed((wire30 ?
                      wire31 : wire31))));
  assign wire34 = ($unsigned($unsigned($unsigned(wire33))) <<< ({$signed(wire30)} ?
                      ((-wire28) ?
                          (wire30 ? wire30 : wire29) : (wire32 ?
                              wire30 : wire33)) : $signed((wire33 ?
                          wire33 : wire31))));
  assign wire35 = (&(|$unsigned($signed(wire31))));
  assign wire36 = $signed((!wire32));
  always
    @(posedge clk) begin
      if (({$signed((wire35 ? (8'h9d) : wire34))} | $signed($unsigned((wire34 ?
          (8'hb0) : wire29)))))
        begin
          if ((+($signed(wire28[(1'h0):(1'h0)]) ?
              $unsigned($signed(wire32)) : (wire30 ?
                  $unsigned(wire29) : {wire34}))))
            begin
              reg37 <= wire29;
              reg38 <= (~|$unsigned(($unsigned(wire35) << wire36[(3'h7):(3'h6)])));
            end
          else
            begin
              reg37 <= wire32[(2'h3):(2'h2)];
            end
        end
      else
        begin
          if ((reg38 ?
              $signed({$unsigned(wire35)}) : (!((&reg37) - (wire30 ?
                  reg38 : (8'ha3))))))
            begin
              reg37 <= (8'ha9);
            end
          else
            begin
              reg37 <= reg37[(3'h5):(2'h3)];
              reg38 <= ((~|wire32[(2'h2):(1'h1)]) ?
                  $unsigned(($unsigned(wire35) << (^wire34))) : wire29[(3'h7):(2'h3)]);
              reg39 <= wire31[(1'h0):(1'h0)];
            end
        end
      if ((wire29 ? (wire28[(2'h2):(1'h0)] ? wire35 : wire29) : reg37))
        begin
          reg40 <= wire33;
        end
      else
        begin
          reg40 <= reg38[(3'h5):(3'h4)];
          reg41 <= wire31[(2'h3):(2'h3)];
        end
    end
  assign wire42 = {($signed({reg37}) << {$unsigned(wire30)})};
  assign wire43 = wire34;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param23 = {{(~&(-(8'ha8)))}})
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire8;
  input wire signed [(4'ha):(1'h0)] wire7;
  input wire [(3'h6):(1'h0)] wire6;
  input wire signed [(2'h3):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire22;
  wire [(3'h6):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire16;
  wire [(2'h2):(1'h0)] wire15;
  wire [(2'h2):(1'h0)] wire12;
  wire signed [(2'h3):(1'h0)] wire11;
  reg signed [(4'h8):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg19 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg14 = (1'h0);
  reg [(3'h7):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg9 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire16,
                 wire15,
                 wire12,
                 wire11,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg14,
                 reg13,
                 reg10,
                 reg9,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg9 <= $signed(($signed((wire6 ? wire5 : wire7)) > {(8'h9c)}));
      reg10 <= wire8[(1'h1):(1'h1)];
    end
  assign wire11 = wire6[(3'h5):(1'h1)];
  assign wire12 = wire6;
  always
    @(posedge clk) begin
      reg13 <= (~|wire7[(3'h7):(3'h7)]);
      reg14 <= (reg10 & reg10[(1'h0):(1'h0)]);
    end
  assign wire15 = $signed($signed(reg14));
  assign wire16 = (+$signed((^$unsigned(reg9))));
  always
    @(posedge clk) begin
      reg17 <= (reg14 * ($unsigned(wire7[(2'h3):(1'h0)]) ?
          (-(+wire7)) : $signed(wire15)));
      if (reg14)
        begin
          if ({(((wire16 ~^ wire7) >> (8'ha1)) ^ (~|(reg9 ? wire5 : wire12)))})
            begin
              reg18 <= (reg17 ?
                  $unsigned($unsigned(((8'ha9) ? (8'ha0) : reg14))) : (8'ha4));
              reg19 <= reg13[(1'h1):(1'h1)];
            end
          else
            begin
              reg18 <= (|$unsigned(reg18[(2'h3):(2'h2)]));
              reg19 <= reg18;
            end
          reg20 <= {(((wire12 ? (8'hb0) : reg10) ? $signed(wire7) : wire16) ?
                  $signed({(8'ha2)}) : wire15[(1'h1):(1'h1)])};
        end
      else
        begin
          reg18 <= ($signed((!{reg20})) ?
              $unsigned(((+wire11) ?
                  (wire16 ?
                      wire6 : (8'hac)) : (~reg10))) : reg20[(4'h8):(3'h6)]);
        end
    end
  assign wire21 = reg10;
  assign wire22 = (((8'ha2) ?
                      (~^(wire21 || wire5)) : $unsigned($unsigned(reg13))) & wire6[(3'h5):(3'h4)]);
endmodule