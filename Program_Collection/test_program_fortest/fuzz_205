(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param62 = (^(8'hb0)))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h78):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire0;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire3;
  wire signed [(3'h7):(1'h0)] wire4;
  wire signed [(3'h5):(1'h0)] wire5;
  wire [(3'h7):(1'h0)] wire16;
  wire [(4'ha):(1'h0)] wire17;
  wire signed [(2'h2):(1'h0)] wire18;
  wire signed [(2'h2):(1'h0)] wire19;
  wire signed [(3'h5):(1'h0)] wire60;
  reg signed [(2'h3):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg7 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg9 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg10 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg11 = (1'h0);
  reg [(3'h4):(1'h0)] reg12 = (1'h0);
  reg [(4'ha):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg14 = (1'h0);
  reg [(4'hb):(1'h0)] reg15 = (1'h0);
  assign y = {wire4,
                 wire5,
                 wire16,
                 wire17,
                 wire18,
                 wire19,
                 wire60,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 reg11,
                 reg12,
                 reg13,
                 reg14,
                 reg15,
                 (1'h0)};
  assign wire4 = wire2;
  assign wire5 = ($unsigned(((wire0 ? (8'ha2) : wire1) >> ((8'ha1) ?
                         wire3 : (8'h9c)))) ?
                     $unsigned(($unsigned(wire2) ?
                         {wire1} : (wire0 ?
                             wire1 : wire4))) : $unsigned($signed(wire4)));
  always
    @(posedge clk) begin
      if (wire2[(2'h3):(2'h2)])
        begin
          reg6 <= $signed(wire1);
          reg7 <= wire0;
          reg8 <= (|($signed((8'ha3)) ?
              $unsigned((^~reg6)) : $unsigned($unsigned(wire2))));
        end
      else
        begin
          if (($unsigned(reg7) ?
              $unsigned((8'h9d)) : (wire5 >> $unsigned((wire3 << reg7)))))
            begin
              reg6 <= reg6[(1'h1):(1'h0)];
              reg7 <= ((reg7[(2'h3):(2'h2)] ?
                  $signed({wire2}) : wire5[(1'h1):(1'h1)]) == wire1[(3'h5):(3'h4)]);
              reg8 <= wire0;
            end
          else
            begin
              reg6 <= {(+$signed($signed(wire5)))};
              reg7 <= $unsigned((!$signed(wire2)));
              reg8 <= reg6;
            end
          reg9 <= (~$signed((^(reg8 ? wire1 : (8'ha5)))));
        end
      reg10 <= $unsigned(($unsigned(wire1[(4'hb):(3'h6)]) & (-reg8[(3'h5):(3'h5)])));
    end
  always
    @(posedge clk) begin
      if ((!wire0[(2'h3):(2'h3)]))
        begin
          reg11 <= wire3;
          reg12 <= $signed((^~reg8[(3'h6):(2'h2)]));
          if (reg10)
            begin
              reg13 <= reg8;
              reg14 <= (!$unsigned($signed((|wire4))));
            end
          else
            begin
              reg13 <= ((~|reg14) ?
                  $unsigned($unsigned(reg6[(1'h0):(1'h0)])) : reg9[(2'h2):(1'h0)]);
              reg14 <= ((8'hae) < $signed(wire1));
              reg15 <= reg14;
            end
        end
      else
        begin
          if ((!reg8[(1'h1):(1'h0)]))
            begin
              reg11 <= reg15;
            end
          else
            begin
              reg11 <= (^~(!(reg12 ?
                  $signed(reg6) : ((8'ha7) ? wire2 : wire4))));
              reg12 <= (~((~|(wire4 ? reg14 : reg10)) ^~ {reg11}));
              reg13 <= wire1;
            end
        end
    end
  assign wire16 = $signed(($unsigned((reg12 - (8'ha7))) ?
                      (reg7 ?
                          $unsigned(reg10) : wire5) : ($unsigned(wire0) - {reg14})));
  assign wire17 = {$unsigned(((reg15 ? (8'ha4) : reg7) ?
                          {(8'ha8)} : (wire0 ? wire0 : reg10)))};
  assign wire18 = {$signed((((8'ha9) ~^ reg12) + (reg8 ? reg11 : wire16)))};
  assign wire19 = ($signed($signed((8'had))) ?
                      (~|{$unsigned(reg12)}) : $signed(reg13[(3'h4):(1'h0)]));
  module20 #() modinst61 (wire60, clk, reg10, reg8, reg15, wire4);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param59 = (({{(8'ha4)}} < (^~((8'h9c) & (8'hae)))) ? ((|((8'ha8) ? (8'ha4) : (8'h9e))) ? ({(8'ha4)} ? {(8'had)} : (8'ha7)) : ({(8'ha7)} == ((8'ha4) - (8'h9e)))) : ((((8'ha4) * (8'hac)) ? (8'ha3) : ((8'ha5) ^~ (8'ha0))) ? (((8'hb0) >= (8'hac)) ? (~|(8'ha6)) : (!(8'haa))) : (+((8'ha1) || (8'hae))))))
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h19):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire24;
  input wire [(4'hb):(1'h0)] wire23;
  input wire signed [(4'hb):(1'h0)] wire22;
  input wire signed [(3'h7):(1'h0)] wire21;
  wire [(3'h7):(1'h0)] wire58;
  wire signed [(3'h4):(1'h0)] wire56;
  wire [(2'h2):(1'h0)] wire44;
  wire [(4'hb):(1'h0)] wire42;
  assign y = {wire58, wire56, wire44, wire42, (1'h0)};
  module25 #() modinst43 (wire42, clk, wire24, wire21, wire23, wire22);
  assign wire44 = wire21;
  module45 #() modinst57 (wire56, clk, wire24, wire22, wire42, wire23);
  assign wire58 = wire22;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module45
#(parameter param55 = {(8'ha1)})
(y, clk, wire49, wire48, wire47, wire46);
  output wire [(32'h1c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire49;
  input wire signed [(3'h4):(1'h0)] wire48;
  input wire [(4'h8):(1'h0)] wire47;
  input wire [(2'h3):(1'h0)] wire46;
  wire [(3'h6):(1'h0)] wire54;
  wire [(3'h4):(1'h0)] wire53;
  wire signed [(3'h7):(1'h0)] wire52;
  wire signed [(2'h2):(1'h0)] wire51;
  wire [(4'h8):(1'h0)] wire50;
  assign y = {wire54, wire53, wire52, wire51, wire50, (1'h0)};
  assign wire50 = ((((!wire46) ?
                          {wire49} : wire46[(1'h0):(1'h0)]) < wire46[(1'h1):(1'h0)]) ?
                      (wire47 < (wire49[(1'h0):(1'h0)] > wire49)) : ((((8'ha0) | wire48) != ((8'hac) <= wire47)) ?
                          wire46 : $unsigned(wire49[(4'hb):(3'h5)])));
  assign wire51 = (~&$unsigned(wire46));
  assign wire52 = {{((wire47 <<< wire46) - {wire47})}};
  assign wire53 = ((($unsigned(wire50) ?
                      wire50 : wire51) || wire50[(2'h3):(1'h0)]) < (((wire51 ?
                              wire47 : wire49) ?
                          $unsigned(wire48) : (wire52 | wire46)) ?
                      wire47[(3'h6):(3'h5)] : ($unsigned(wire52) ?
                          (wire52 ? wire49 : wire51) : $signed(wire47))));
  assign wire54 = ($signed((^~wire49[(3'h6):(1'h0)])) != (^~wire50[(1'h1):(1'h1)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25
#(parameter param41 = (~|(((+(8'ha0)) >>> ((8'ha9) != (8'haa))) >= {(^(8'haf))})))
(y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire29;
  input wire signed [(2'h3):(1'h0)] wire28;
  input wire signed [(3'h4):(1'h0)] wire27;
  input wire [(2'h2):(1'h0)] wire26;
  wire signed [(2'h2):(1'h0)] wire40;
  wire [(2'h3):(1'h0)] wire39;
  wire signed [(4'ha):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire35;
  wire [(3'h4):(1'h0)] wire31;
  wire signed [(3'h7):(1'h0)] wire30;
  reg signed [(4'ha):(1'h0)] reg37 = (1'h0);
  reg [(3'h6):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg33 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg32 = (1'h0);
  assign y = {wire40,
                 wire39,
                 wire38,
                 wire36,
                 wire35,
                 wire31,
                 wire30,
                 reg37,
                 reg34,
                 reg33,
                 reg32,
                 (1'h0)};
  assign wire30 = $unsigned((8'haf));
  assign wire31 = ((8'haf) > $signed(wire28));
  always
    @(posedge clk) begin
      reg32 <= {($unsigned(wire28[(2'h3):(1'h1)]) ?
              (wire26 ?
                  wire28 : $signed(wire28)) : $signed($unsigned(wire28)))};
      reg33 <= (~^wire30[(3'h4):(1'h0)]);
      reg34 <= $signed(($signed(wire26) <= $signed(wire27)));
    end
  assign wire35 = $unsigned((8'ha7));
  assign wire36 = $unsigned({(~^(|wire29))});
  always
    @(posedge clk) begin
      reg37 <= $signed(wire26);
    end
  assign wire38 = (^~(|wire27));
  assign wire39 = wire29[(2'h2):(2'h2)];
  assign wire40 = (wire28 ?
                      wire38[(1'h0):(1'h0)] : (wire35 ?
                          (-(wire30 * wire35)) : ({reg33} ~^ (reg37 != reg33))));
endmodule