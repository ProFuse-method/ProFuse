(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h10):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire41;
  wire [(3'h6):(1'h0)] wire40;
  wire signed [(3'h4):(1'h0)] wire38;
  wire signed [(2'h3):(1'h0)] wire36;
  assign y = {wire41, wire40, wire38, wire36, (1'h0)};
  module4 #() modinst37 (.wire5(wire2), .clk(clk), .wire8(wire0), .y(wire36), .wire6(wire1), .wire7(wire3));
  module4 #() modinst39 (.wire8(wire2), .wire7(wire1), .clk(clk), .wire5(wire3), .wire6(wire0), .y(wire38));
  assign wire40 = ($unsigned((^~(wire3 * wire0))) ?
                      $signed(((wire3 << wire1) ?
                          wire38[(2'h2):(1'h0)] : (wire2 + wire3))) : ((~|$signed((8'h9f))) ?
                          ((-wire3) | (wire36 ?
                              wire3 : wire1)) : $signed((&wire2))));
  assign wire41 = (8'haa);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param35 = (|(8'h9d)))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire8;
  input wire signed [(3'h7):(1'h0)] wire7;
  input wire signed [(4'h9):(1'h0)] wire6;
  input wire signed [(3'h6):(1'h0)] wire5;
  wire [(3'h4):(1'h0)] wire34;
  wire signed [(3'h4):(1'h0)] wire33;
  wire signed [(3'h6):(1'h0)] wire32;
  wire signed [(2'h2):(1'h0)] wire31;
  wire [(3'h6):(1'h0)] wire30;
  wire signed [(4'ha):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire26;
  wire [(4'h9):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire22;
  wire signed [(4'h9):(1'h0)] wire9;
  reg [(2'h3):(1'h0)] reg25 = (1'h0);
  assign y = {wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire24,
                 wire22,
                 wire9,
                 reg25,
                 (1'h0)};
  assign wire9 = $signed((^~({(8'ha1)} ? $unsigned(wire5) : wire7)));
  module10 #() modinst23 (.y(wire22), .wire13(wire5), .wire14(wire8), .wire12(wire9), .wire11(wire6), .clk(clk));
  assign wire24 = (+(wire5 ^~ $signed($signed(wire8))));
  always
    @(posedge clk) begin
      reg25 <= (-(~&wire22));
    end
  assign wire26 = ($unsigned($unsigned($unsigned(wire5))) ?
                      ($unsigned(wire5[(2'h3):(2'h3)]) >>> $unsigned((!(8'hac)))) : wire7);
  assign wire27 = $unsigned((wire6 ?
                      $signed($signed(wire7)) : (wire22[(1'h0):(1'h0)] >>> {wire7})));
  assign wire28 = $unsigned({reg25[(2'h2):(1'h1)]});
  assign wire29 = wire5[(3'h4):(2'h3)];
  assign wire30 = $unsigned((wire26[(3'h4):(2'h2)] ? wire28 : (!wire28)));
  assign wire31 = {({$unsigned(wire7)} ?
                          ((&wire24) ?
                              (&wire8) : (wire9 ?
                                  (8'hab) : (8'h9c))) : wire6[(3'h7):(3'h7)])};
  assign wire32 = $unsigned(wire8);
  assign wire33 = ((($signed(wire26) ?
                          (wire22 ? wire5 : (8'had)) : $unsigned(reg25)) ?
                      (wire8[(2'h2):(1'h1)] ?
                          $signed(wire22) : (wire30 ?
                              wire9 : wire32)) : $unsigned((8'haa))) << $unsigned($signed($signed((8'ha4)))));
  assign wire34 = wire31;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire14;
  input wire signed [(3'h6):(1'h0)] wire13;
  input wire signed [(4'h9):(1'h0)] wire12;
  input wire [(4'h9):(1'h0)] wire11;
  wire signed [(4'hb):(1'h0)] wire21;
  wire signed [(4'h9):(1'h0)] wire20;
  wire [(2'h2):(1'h0)] wire19;
  wire [(3'h7):(1'h0)] wire18;
  reg [(2'h3):(1'h0)] reg17 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg16 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg15 = (1'h0);
  assign y = {wire21, wire20, wire19, wire18, reg17, reg16, reg15, (1'h0)};
  always
    @(posedge clk) begin
      reg15 <= $unsigned(($signed((wire12 ? wire12 : wire12)) ?
          $unsigned({wire12}) : ({wire12} & wire13[(1'h1):(1'h1)])));
      reg16 <= (wire11 ?
          wire11 : ((~^(reg15 << wire13)) | $signed($signed(wire12))));
      reg17 <= (~^reg15[(1'h0):(1'h0)]);
    end
  assign wire18 = (reg17 ? (|{{wire13}}) : (+$unsigned({(8'h9c)})));
  assign wire19 = ((^(+(+wire13))) <<< (({(8'ha1)} <<< $unsigned(wire14)) ^ reg15));
  assign wire20 = ((wire19[(1'h0):(1'h0)] ?
                      (reg15[(1'h0):(1'h0)] < wire11) : wire14) <<< (((reg16 ?
                          wire18 : reg17) ?
                      (-reg15) : {wire14}) | (~&{(8'ha1)})));
  assign wire21 = $unsigned($signed(($unsigned(wire19) ?
                      $unsigned(wire13) : reg17[(1'h1):(1'h0)])));
endmodule