(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param54 = ((|((~&(8'ha3)) || (+(8'haa)))) - (8'had)))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h84):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire53;
  wire signed [(4'ha):(1'h0)] wire52;
  wire signed [(2'h3):(1'h0)] wire51;
  wire [(3'h4):(1'h0)] wire50;
  wire [(4'ha):(1'h0)] wire42;
  wire [(2'h2):(1'h0)] wire41;
  wire [(4'h8):(1'h0)] wire40;
  wire signed [(3'h7):(1'h0)] wire34;
  wire signed [(2'h3):(1'h0)] wire4;
  reg signed [(4'h8):(1'h0)] reg49 = (1'h0);
  reg [(3'h5):(1'h0)] reg48 = (1'h0);
  reg [(3'h7):(1'h0)] reg47 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg46 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg45 = (1'h0);
  reg [(3'h7):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg39 = (1'h0);
  reg [(3'h4):(1'h0)] reg38 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg37 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg36 = (1'h0);
  assign y = {wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire42,
                 wire41,
                 wire40,
                 wire34,
                 wire4,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 (1'h0)};
  assign wire4 = (&$signed(wire0));
  module5 #() modinst35 (wire34, clk, wire0, wire2, wire1, wire3);
  always
    @(posedge clk) begin
      reg36 <= (~^wire4[(2'h3):(2'h3)]);
      if (((~|({(8'had)} > wire34)) >= wire3))
        begin
          reg37 <= {((+{wire0}) >>> (~|(wire0 ? wire1 : wire1)))};
          reg38 <= reg36;
        end
      else
        begin
          reg37 <= {wire2[(3'h5):(1'h1)]};
          reg38 <= reg36[(4'h9):(3'h4)];
        end
      reg39 <= (^~({wire34} ^ {{wire2}}));
    end
  assign wire40 = wire1;
  assign wire41 = ((($signed((8'haa)) <<< reg37) ^~ $unsigned($signed(reg39))) - (^~wire0[(1'h1):(1'h1)]));
  assign wire42 = wire1[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg43 <= (~(~&wire1));
      if (((reg38[(3'h4):(1'h1)] ? $signed((&reg43)) : reg43[(2'h3):(1'h0)]) ?
          {($unsigned(reg36) == reg37[(1'h1):(1'h1)])} : $signed($signed(reg38[(1'h1):(1'h1)]))))
        begin
          if ((~&$signed(((^wire1) && $signed(reg39)))))
            begin
              reg44 <= $signed({{(wire3 ? wire3 : wire34)}});
              reg45 <= (reg43[(1'h0):(1'h0)] ?
                  ((8'ha6) >= $unsigned((+wire1))) : (~wire1));
              reg46 <= {(($signed((8'ha1)) ? wire40 : (^~(8'h9f))) < (+(wire34 ?
                      wire1 : wire42)))};
            end
          else
            begin
              reg44 <= {reg46[(2'h3):(1'h1)]};
            end
          reg47 <= (reg39 ? {$unsigned((|reg39))} : reg46);
          reg48 <= wire4;
        end
      else
        begin
          reg44 <= $unsigned(((reg36 ?
                  $signed((8'hb0)) : (reg46 ? reg48 : (8'ha8))) ?
              reg43[(3'h7):(2'h2)] : wire42[(1'h1):(1'h0)]));
          reg45 <= ((8'ha3) ~^ $signed((^~reg43)));
        end
      reg49 <= $signed(wire40[(3'h6):(1'h1)]);
    end
  assign wire50 = (~|((|(8'h9e)) * reg48));
  assign wire51 = (wire3 ?
                      $unsigned($unsigned($signed((8'ha9)))) : (|wire1[(2'h2):(1'h0)]));
  assign wire52 = wire42;
  assign wire53 = reg38;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(4'ha):(1'h0)] wire7;
  input wire [(4'ha):(1'h0)] wire6;
  wire signed [(3'h6):(1'h0)] wire33;
  wire [(4'h9):(1'h0)] wire32;
  wire signed [(2'h2):(1'h0)] wire31;
  wire [(3'h5):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire29;
  wire signed [(3'h7):(1'h0)] wire28;
  wire [(2'h3):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire12;
  wire [(4'hb):(1'h0)] wire11;
  wire signed [(2'h2):(1'h0)] wire10;
  assign y = {wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire26,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 (1'h0)};
  assign wire10 = $unsigned($unsigned($signed($unsigned(wire6))));
  assign wire11 = wire9;
  assign wire12 = (~{$signed($unsigned(wire7))});
  assign wire13 = wire11[(4'hb):(4'h8)];
  module14 #() modinst27 (wire26, clk, wire11, wire6, wire7, wire13);
  assign wire28 = (((^~$signed(wire26)) <= ($unsigned(wire6) << $unsigned((8'h9c)))) ?
                      ({(8'haf)} ?
                          (-wire12) : (8'ha9)) : wire13[(4'h9):(2'h2)]);
  assign wire29 = wire10[(1'h1):(1'h0)];
  assign wire30 = (-wire28[(3'h6):(2'h3)]);
  assign wire31 = (8'haa);
  assign wire32 = (wire29 & ((wire8[(1'h1):(1'h0)] & wire10) ?
                      ({wire10} >>> $signed(wire6)) : (^wire7[(3'h6):(1'h1)])));
  assign wire33 = wire31[(2'h2):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param25 = ({(~^((8'ha1) ? (8'ha0) : (8'h9d)))} + ((8'ha7) << (~(!(8'ha3))))))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire18;
  input wire [(3'h4):(1'h0)] wire17;
  input wire [(3'h7):(1'h0)] wire16;
  input wire signed [(4'ha):(1'h0)] wire15;
  wire [(3'h5):(1'h0)] wire24;
  wire signed [(2'h2):(1'h0)] wire23;
  wire signed [(4'ha):(1'h0)] wire22;
  wire [(4'hb):(1'h0)] wire21;
  wire [(3'h7):(1'h0)] wire20;
  wire signed [(4'h9):(1'h0)] wire19;
  assign y = {wire24, wire23, wire22, wire21, wire20, wire19, (1'h0)};
  assign wire19 = wire15;
  assign wire20 = wire18;
  assign wire21 = (~^($signed({wire18}) & (8'hae)));
  assign wire22 = $unsigned(wire19[(4'h8):(3'h7)]);
  assign wire23 = $signed(wire16);
  assign wire24 = wire16;
endmodule