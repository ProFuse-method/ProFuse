(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param50 = (~^{(~(((8'ha1) <<< (8'hbb)) ? (-(8'hba)) : (8'hb8))), (-(|((7'h42) ? (8'ha8) : (8'h9f))))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h15):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(5'h15):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire49;
  wire [(4'he):(1'h0)] wire48;
  wire [(5'h12):(1'h0)] wire47;
  wire [(2'h3):(1'h0)] wire45;
  wire signed [(5'h12):(1'h0)] wire5;
  wire [(5'h10):(1'h0)] wire4;
  assign y = {wire49, wire48, wire47, wire45, wire5, wire4, (1'h0)};
  assign wire4 = wire3;
  assign wire5 = (wire0 != {{$unsigned(wire3), wire3},
                     {$signed({wire4}),
                         ((~&wire4) ? $unsigned(wire4) : wire1)}});
  module6 #() modinst46 (.clk(clk), .wire9(wire5), .wire10(wire4), .y(wire45), .wire8(wire0), .wire7(wire2));
  assign wire47 = $unsigned($signed(((8'ha7) | ((8'hb1) < (wire45 >= wire1)))));
  assign wire48 = $unsigned(wire2);
  assign wire49 = ($unsigned((!(wire0 != (|wire47)))) - $unsigned($signed(wire1[(2'h3):(2'h2)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param44 = {((^~(((8'hb8) + (8'hb4)) ? {(8'ha0), (8'ha0)} : ((8'h9e) << (8'ha4)))) ~^ (8'hb3)), (8'hb6)})
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h1c6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h10):(1'h0)] wire10;
  input wire signed [(5'h12):(1'h0)] wire9;
  input wire [(3'h5):(1'h0)] wire8;
  input wire signed [(3'h4):(1'h0)] wire7;
  wire [(2'h2):(1'h0)] wire43;
  wire [(4'he):(1'h0)] wire42;
  wire [(4'hd):(1'h0)] wire41;
  wire [(5'h13):(1'h0)] wire40;
  wire [(3'h7):(1'h0)] wire39;
  wire signed [(4'hd):(1'h0)] wire38;
  wire [(4'hf):(1'h0)] wire15;
  wire [(4'ha):(1'h0)] wire14;
  wire [(4'hf):(1'h0)] wire13;
  wire signed [(3'h4):(1'h0)] wire12;
  wire [(2'h2):(1'h0)] wire11;
  reg signed [(3'h5):(1'h0)] reg35 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg34 = (1'h0);
  reg [(5'h14):(1'h0)] reg33 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg32 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg30 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg29 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg28 = (1'h0);
  reg [(5'h15):(1'h0)] reg27 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg26 = (1'h0);
  reg [(5'h10):(1'h0)] reg24 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg [(2'h3):(1'h0)] reg22 = (1'h0);
  reg [(5'h14):(1'h0)] reg21 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg20 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg18 = (1'h0);
  reg [(3'h5):(1'h0)] reg16 = (1'h0);
  reg [(5'h10):(1'h0)] reg37 = (1'h0);
  reg [(4'hd):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg31 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg25 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar31 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar25 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar19 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar17 = (1'h0);
  assign y = {wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg18,
                 reg16,
                 reg37,
                 reg36,
                 reg31,
                 reg25,
                 forvar31,
                 forvar25,
                 forvar19,
                 forvar17,
                 (1'h0)};
  assign wire11 = $unsigned(((~&wire7) ^ $unsigned(($signed(wire9) && $unsigned((8'ha2))))));
  assign wire12 = {(^~$signed(((wire8 ? wire11 : wire10) > wire7))),
                      wire10[(4'hf):(2'h3)]};
  assign wire13 = wire8;
  assign wire14 = $unsigned($signed($unsigned(((&wire10) <= (wire13 > wire9)))));
  assign wire15 = wire14;
  always
    @(posedge clk) begin
      reg16 <= $unsigned({{$unsigned($unsigned(wire14)),
              ((wire9 ? (8'ha5) : (8'hbc)) ? (&wire11) : ((7'h40) >>> wire7))},
          (~&wire13[(2'h3):(1'h1)])});
      for (forvar17 = (1'h0); (forvar17 < (1'h1)); forvar17 = (forvar17 + (1'h1)))
        begin
          reg18 <= (wire15[(1'h0):(1'h0)] - $unsigned($signed(({wire13,
                  forvar17} ?
              (~&wire9) : {wire8, wire13}))));
        end
      if ((|forvar17[(4'hd):(3'h5)]))
        begin
          for (forvar19 = (1'h0); (forvar19 < (2'h2)); forvar19 = (forvar19 + (1'h1)))
            begin
              reg20 <= ($signed(reg18) * (-(~^(wire13[(3'h6):(1'h0)] ?
                  forvar17 : $signed(wire10)))));
              reg21 <= $unsigned(((((reg20 ? wire8 : reg20) ?
                          $unsigned(wire14) : $unsigned((8'hac))) ?
                      wire15[(2'h2):(1'h0)] : $signed($unsigned(forvar17))) ?
                  $signed(wire9) : (+(-$signed(forvar17)))));
              reg22 <= $signed($signed(($signed((wire13 ?
                  wire15 : forvar19)) >> $signed(wire11))));
              reg23 <= (-$signed(wire8[(3'h4):(3'h4)]));
              reg24 <= wire13[(4'h9):(3'h4)];
            end
          for (forvar25 = (1'h0); (forvar25 < (1'h0)); forvar25 = (forvar25 + (1'h1)))
            begin
              reg26 <= $signed(forvar25);
              reg27 <= (8'hb3);
              reg28 <= $unsigned(forvar25[(1'h0):(1'h0)]);
              reg29 <= $unsigned((reg18[(1'h1):(1'h0)] - $signed($unsigned((-reg18)))));
              reg30 <= $unsigned(wire8);
            end
          for (forvar31 = (1'h0); (forvar31 < (1'h1)); forvar31 = (forvar31 + (1'h1)))
            begin
              reg32 <= $signed(wire15[(2'h3):(1'h1)]);
              reg33 <= reg24[(3'h5):(2'h2)];
            end
          reg34 <= ((~|reg29) ?
              (reg20 <<< {$unsigned((^~wire14)),
                  (&(~reg22))}) : reg18[(3'h5):(3'h4)]);
          reg35 <= wire9[(4'ha):(3'h6)];
        end
      else
        begin
          for (forvar19 = (1'h0); (forvar19 < (3'h4)); forvar19 = (forvar19 + (1'h1)))
            begin
              reg25 = $signed((~|((forvar31[(3'h7):(1'h0)] < reg30) ~^ {{(8'ha5),
                      forvar19},
                  (reg20 ? reg32 : forvar19)})));
              reg26 <= $unsigned((~^(8'hbd)));
              reg31 = (reg27[(4'hf):(4'hf)] == reg21[(1'h0):(1'h0)]);
              reg36 = $signed((~^reg30[(2'h2):(2'h2)]));
              reg37 = {(reg16[(1'h0):(1'h0)] - $signed(($unsigned(reg16) ?
                      $unsigned(reg18) : {wire14})))};
            end
        end
    end
  assign wire38 = reg16[(3'h5):(2'h2)];
  assign wire39 = (^((8'h9d) ?
                      $signed($signed($signed(wire13))) : {wire14, (8'hb0)}));
  assign wire40 = (((|wire10) != (8'hb5)) ?
                      ((~^(reg30 ? (reg16 * wire10) : $unsigned(wire8))) ?
                          (|$unsigned(reg22[(2'h3):(1'h0)])) : reg28) : ($unsigned($signed(reg16)) >> (8'hbc)));
  assign wire41 = $unsigned((7'h41));
  assign wire42 = wire9[(4'he):(3'h7)];
  assign wire43 = {((wire39 > (~|(!reg16))) ?
                          reg30 : ($unsigned(reg22[(2'h3):(2'h2)]) ^ reg20)),
                      $signed($unsigned((|$signed(wire13))))};
endmodule