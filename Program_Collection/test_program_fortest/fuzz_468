(* use_dsp48="no" *) (* use_dsp="no" *) module top #(parameter param72 = (8'h9e)) (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h6d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire0;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire3;
  wire [(4'h9):(1'h0)] wire60;
  wire [(4'hb):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire24;
  wire [(2'h3):(1'h0)] wire58;
  reg [(3'h4):(1'h0)] reg71 = (1'h0);
  reg [(3'h6):(1'h0)] reg70 = (1'h0);
  reg [(2'h2):(1'h0)] reg69 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg68 = (1'h0);
  reg [(4'hb):(1'h0)] reg67 = (1'h0);
  reg [(3'h4):(1'h0)] reg66 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg64 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg63 = (1'h0);
  reg [(4'h8):(1'h0)] reg62 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg61 = (1'h0);
  reg [(4'hb):(1'h0)] reg4 = (1'h0);
  assign y = {wire60,
                 wire5,
                 wire24,
                 wire58,
                 reg71,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= {({{wire0}} ? $signed($signed(wire2)) : {wire1[(1'h0):(1'h0)]})};
    end
  assign wire5 = (($signed(wire0[(3'h7):(3'h5)]) ?
                     $signed({wire3}) : $signed(wire2[(1'h1):(1'h0)])) >>> reg4);
  module6 #() modinst25 (wire24, clk, wire0, wire2, wire5, wire3);
  module26 #() modinst59 (wire58, clk, wire5, wire0, wire24, reg4);
  assign wire60 = ((wire0[(2'h2):(1'h0)] * ($signed(wire58) || (8'hab))) && $signed(((~^wire5) ?
                      (reg4 || wire2) : $signed((8'h9d)))));
  always
    @(posedge clk) begin
      if ($unsigned($signed($unsigned((wire2 >> wire3)))))
        begin
          reg61 <= wire1;
          reg62 <= ((|{wire0}) ?
              $unsigned($unsigned((wire5 ? wire24 : reg4))) : (!wire5));
        end
      else
        begin
          reg61 <= wire1[(1'h0):(1'h0)];
          reg62 <= reg62;
          if (($signed(reg4) ?
              wire5[(3'h5):(2'h3)] : ((reg61 || wire1) ?
                  $signed({wire24}) : wire60)))
            begin
              reg63 <= (wire3 * wire0[(1'h1):(1'h0)]);
              reg64 <= wire60;
            end
          else
            begin
              reg63 <= (~|({((8'ha1) ~^ wire5)} ?
                  $signed($signed(wire5)) : (~|wire58[(1'h0):(1'h0)])));
              reg64 <= $signed((((reg61 ? reg63 : reg4) ?
                  $signed(reg4) : (wire58 || reg64)) <= ($unsigned((8'ha4)) && reg4[(4'hb):(2'h3)])));
              reg65 <= {wire2};
            end
        end
      reg66 <= reg65;
      if ($unsigned(reg61[(3'h4):(2'h3)]))
        begin
          reg67 <= reg63[(2'h2):(1'h0)];
        end
      else
        begin
          reg67 <= ((reg4[(2'h3):(1'h0)] | ((reg61 & wire1) && (reg63 ?
                  wire24 : (8'ha7)))) ?
              (|(8'ha3)) : reg67[(4'h8):(2'h3)]);
          reg68 <= ($unsigned(reg65) ~^ ($unsigned($unsigned(wire58)) ?
              (8'hb0) : (+((8'ha3) ? reg62 : wire24))));
          if ({$unsigned((8'ha1))})
            begin
              reg69 <= $signed(reg4);
              reg70 <= reg68;
              reg71 <= reg68[(1'h1):(1'h1)];
            end
          else
            begin
              reg69 <= $unsigned((~((8'hab) ? {reg61} : {(8'ha0)})));
              reg70 <= ((8'haf) ?
                  {reg64} : ($signed($signed(reg62)) - (-(&(8'ha4)))));
              reg71 <= $signed(wire60);
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module26  (y, clk, wire30, wire29, wire28, wire27);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire30;
  input wire signed [(4'hb):(1'h0)] wire29;
  input wire [(4'hb):(1'h0)] wire28;
  input wire signed [(3'h6):(1'h0)] wire27;
  wire signed [(4'hb):(1'h0)] wire57;
  wire [(4'ha):(1'h0)] wire56;
  wire signed [(3'h4):(1'h0)] wire55;
  wire signed [(4'h9):(1'h0)] wire54;
  wire signed [(3'h4):(1'h0)] wire53;
  wire [(4'h9):(1'h0)] wire46;
  wire signed [(4'hb):(1'h0)] wire31;
  reg signed [(4'h8):(1'h0)] reg52 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg50 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg49 = (1'h0);
  reg [(4'hb):(1'h0)] reg48 = (1'h0);
  assign y = {wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire46,
                 wire31,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 (1'h0)};
  assign wire31 = (wire28 || wire27[(1'h0):(1'h0)]);
  module32 #() modinst47 (.wire34(wire29), .wire35(wire30), .y(wire46), .clk(clk), .wire33(wire31), .wire36(wire28));
  always
    @(posedge clk) begin
      if (wire46[(2'h2):(2'h2)])
        begin
          reg48 <= $signed((-wire29));
        end
      else
        begin
          reg48 <= $signed(wire27);
          reg49 <= (|((+wire27[(1'h1):(1'h1)]) ^ wire28[(4'ha):(3'h7)]));
          reg50 <= $signed((~^wire30));
        end
      reg51 <= $signed((reg49 << $signed((reg50 + (8'hac)))));
      reg52 <= {$signed(wire28)};
    end
  assign wire53 = ($unsigned($unsigned((^~reg50))) ?
                      $signed($signed(wire28[(4'h9):(2'h2)])) : (((^wire27) ?
                          {wire27} : wire46[(3'h4):(3'h4)]) || $unsigned(wire28)));
  assign wire54 = reg50[(2'h2):(1'h0)];
  assign wire55 = (wire54[(2'h2):(1'h0)] >= ($unsigned(reg49) ?
                      reg49 : (reg49 >= $signed(wire46))));
  assign wire56 = (wire54 << ((((8'ha3) ? wire29 : wire53) ?
                          $unsigned(wire55) : (wire28 || reg50)) ?
                      wire30[(1'h1):(1'h0)] : $unsigned((^reg50))));
  assign wire57 = (($signed(reg52) == (8'hac)) ?
                      $unsigned((|(wire53 <= wire53))) : wire27);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h6b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire10;
  input wire signed [(4'ha):(1'h0)] wire9;
  input wire [(2'h2):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire7;
  wire [(3'h4):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire19;
  wire [(4'h9):(1'h0)] wire18;
  wire signed [(4'h9):(1'h0)] wire17;
  wire signed [(4'hb):(1'h0)] wire11;
  reg signed [(4'ha):(1'h0)] reg23 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg20 = (1'h0);
  reg [(4'h8):(1'h0)] reg16 = (1'h0);
  reg [(3'h4):(1'h0)] reg15 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg14 = (1'h0);
  reg [(3'h7):(1'h0)] reg13 = (1'h0);
  reg [(3'h7):(1'h0)] reg12 = (1'h0);
  assign y = {wire21,
                 wire19,
                 wire18,
                 wire17,
                 wire11,
                 reg23,
                 reg22,
                 reg20,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 (1'h0)};
  assign wire11 = (wire9 >> (~&$signed((wire10 + wire10))));
  always
    @(posedge clk) begin
      if ($unsigned($signed((wire10[(2'h2):(2'h2)] & (wire10 ?
          wire11 : wire10)))))
        begin
          reg12 <= (&(~&{(wire11 > wire9)}));
        end
      else
        begin
          reg12 <= $unsigned(($signed((wire9 + wire11)) < $signed(wire11[(3'h7):(3'h5)])));
          reg13 <= wire11;
          reg14 <= (($unsigned($unsigned(wire10)) ?
              ((8'hac) ?
                  reg12[(2'h3):(1'h0)] : {wire8}) : reg12[(1'h1):(1'h0)]) << wire9);
        end
      reg15 <= {wire7};
      reg16 <= (8'haf);
    end
  assign wire17 = wire8;
  assign wire18 = reg15[(2'h3):(1'h0)];
  assign wire19 = (~^(~|((reg14 ? reg14 : wire11) ?
                      (-reg16) : (wire17 ? wire8 : wire18))));
  always
    @(posedge clk) begin
      reg20 <= (~|($signed(((8'ha9) << wire19)) ?
          ((~|(8'haa)) || $unsigned(reg14)) : ((reg16 ?
              wire9 : wire8) >>> (8'hac))));
    end
  assign wire21 = {$unsigned($unsigned(((8'hae) > reg16)))};
  always
    @(posedge clk) begin
      reg22 <= reg13[(3'h5):(2'h2)];
      reg23 <= ((~wire7) ?
          (reg13 ?
              (wire11 == reg15[(2'h3):(1'h1)]) : wire18) : wire18[(2'h2):(2'h2)]);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module32
#(parameter param45 = (((8'h9d) ? (~|((8'ha9) << (8'ha3))) : {((8'had) ? (8'haf) : (8'ha1))}) <<< ((&(&(8'haa))) & (8'haf))))
(y, clk, wire36, wire35, wire34, wire33);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire36;
  input wire signed [(2'h3):(1'h0)] wire35;
  input wire signed [(3'h5):(1'h0)] wire34;
  input wire [(4'h8):(1'h0)] wire33;
  wire signed [(4'ha):(1'h0)] wire44;
  wire [(3'h7):(1'h0)] wire43;
  wire signed [(3'h5):(1'h0)] wire42;
  wire signed [(3'h5):(1'h0)] wire41;
  wire signed [(3'h4):(1'h0)] wire40;
  wire signed [(3'h4):(1'h0)] wire39;
  wire signed [(4'h8):(1'h0)] wire38;
  wire signed [(3'h7):(1'h0)] wire37;
  assign y = {wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 (1'h0)};
  assign wire37 = $unsigned($unsigned($unsigned((wire36 ? (8'had) : wire36))));
  assign wire38 = $signed($signed(wire33[(1'h0):(1'h0)]));
  assign wire39 = wire35;
  assign wire40 = ($unsigned((|{(8'ha6)})) ?
                      $signed((~&wire37[(3'h4):(2'h3)])) : $signed(wire37));
  assign wire41 = $signed((8'haf));
  assign wire42 = ((^$unsigned((~|(8'h9d)))) && $unsigned(wire37));
  assign wire43 = $signed(wire39);
  assign wire44 = $signed(((wire41 ?
                      wire35[(2'h3):(1'h0)] : $unsigned((8'haa))) & $unsigned($signed(wire38))));
endmodule