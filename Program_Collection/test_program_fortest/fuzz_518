(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param45 = (((((8'ha6) ? (8'h9c) : (8'had)) * ((8'ha5) < (8'h9e))) >>> (!((8'haa) ? (8'had) : (8'hae)))) || (|(((8'ha6) ? (8'had) : (8'ha0)) ? (-(8'had)) : (^~(8'ha5))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire44;
  wire signed [(3'h6):(1'h0)] wire43;
  wire [(3'h6):(1'h0)] wire42;
  wire [(3'h5):(1'h0)] wire41;
  wire signed [(3'h7):(1'h0)] wire40;
  wire signed [(3'h6):(1'h0)] wire39;
  wire [(4'ha):(1'h0)] wire38;
  wire [(4'ha):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire36;
  wire signed [(3'h4):(1'h0)] wire34;
  wire signed [(3'h6):(1'h0)] wire5;
  wire signed [(3'h4):(1'h0)] wire4;
  reg signed [(3'h4):(1'h0)] reg6 = (1'h0);
  assign y = {wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire34,
                 wire5,
                 wire4,
                 reg6,
                 (1'h0)};
  assign wire4 = ((~((wire2 ~^ wire0) << wire1)) >> (wire2[(1'h0):(1'h0)] >>> $unsigned(((8'hae) >= wire2))));
  assign wire5 = wire4[(2'h3):(2'h3)];
  always
    @(posedge clk) begin
      reg6 <= $signed($unsigned(((wire4 < wire5) >>> {wire0})));
    end
  module7 #() modinst35 (wire34, clk, wire5, wire3, wire0, wire1);
  assign wire36 = $signed($unsigned($signed(wire4)));
  assign wire37 = $signed($signed($unsigned($unsigned(wire1))));
  assign wire38 = wire34[(2'h2):(1'h0)];
  assign wire39 = (wire0[(3'h6):(3'h6)] >> (wire2 ?
                      wire38 : ($unsigned(wire34) ? wire2 : wire0)));
  assign wire40 = (^wire0[(4'h8):(3'h4)]);
  assign wire41 = $unsigned((~^wire34[(3'h4):(1'h0)]));
  assign wire42 = $unsigned((&(~^wire34[(3'h4):(2'h2)])));
  assign wire43 = $signed((((wire38 << (8'had)) ?
                      $signed(wire1) : wire41[(1'h0):(1'h0)]) << ((reg6 ~^ wire42) ?
                      (wire36 << wire1) : (reg6 * wire39))));
  assign wire44 = $signed($signed((wire38[(4'h9):(2'h3)] | $signed(wire34))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h8d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire11;
  input wire signed [(2'h2):(1'h0)] wire10;
  input wire [(4'hb):(1'h0)] wire9;
  input wire [(3'h4):(1'h0)] wire8;
  wire [(3'h6):(1'h0)] wire33;
  wire [(3'h6):(1'h0)] wire32;
  wire signed [(4'hb):(1'h0)] wire22;
  wire [(2'h2):(1'h0)] wire21;
  wire [(3'h6):(1'h0)] wire20;
  wire [(3'h7):(1'h0)] wire12;
  reg [(2'h2):(1'h0)] reg31 = (1'h0);
  reg [(3'h7):(1'h0)] reg30 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg29 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg28 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg27 = (1'h0);
  reg [(4'h8):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg25 = (1'h0);
  reg [(3'h6):(1'h0)] reg24 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg23 = (1'h0);
  reg [(3'h5):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  reg [(4'h9):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg14 = (1'h0);
  reg [(3'h5):(1'h0)] reg13 = (1'h0);
  assign y = {wire33,
                 wire32,
                 wire22,
                 wire21,
                 wire20,
                 wire12,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 (1'h0)};
  assign wire12 = ({{$unsigned(wire9)}} && (((~^(8'ha8)) ?
                      {wire10} : wire8) <<< wire8));
  always
    @(posedge clk) begin
      reg13 <= ((-($unsigned(wire11) ? {wire11} : wire12)) ?
          (+wire11[(1'h0):(1'h0)]) : wire10[(2'h2):(1'h0)]);
      if (reg13)
        begin
          reg14 <= wire10[(1'h1):(1'h0)];
          reg15 <= reg13[(2'h3):(1'h1)];
          reg16 <= wire12;
        end
      else
        begin
          if ((~|wire8[(2'h3):(2'h2)]))
            begin
              reg14 <= (((wire9 ?
                  (~&(8'ha1)) : reg14[(2'h3):(2'h2)]) & reg13[(3'h5):(2'h3)]) << $unsigned((^~wire11)));
              reg15 <= wire10;
            end
          else
            begin
              reg14 <= reg14[(1'h0):(1'h0)];
            end
          reg16 <= reg14[(3'h4):(2'h3)];
        end
    end
  always
    @(posedge clk) begin
      reg17 <= $signed($signed(reg15));
      reg18 <= $signed($unsigned(($signed(wire12) >>> wire8)));
      reg19 <= reg15;
    end
  assign wire20 = reg17;
  assign wire21 = $signed(reg14);
  assign wire22 = wire21[(2'h2):(1'h0)];
  always
    @(posedge clk) begin
      reg23 <= $signed((reg15 >>> $signed((wire9 ^ (8'ha3)))));
      if ((|(8'h9e)))
        begin
          reg24 <= (&($signed((&wire22)) ^~ reg17));
        end
      else
        begin
          reg24 <= ((reg24 ?
                  ($unsigned(wire11) ~^ $signed((8'ha4))) : ({wire21} ^~ (8'haf))) ?
              ((^~(reg18 ?
                  reg24 : wire11)) ^ (^(&wire10))) : (($signed(wire22) == $signed(reg14)) ^~ reg15));
          if ($signed(wire9[(3'h7):(1'h0)]))
            begin
              reg25 <= {(reg19 != wire20[(3'h5):(2'h3)])};
              reg26 <= {$unsigned(((wire10 ? wire12 : reg13) ?
                      (~&wire8) : reg19[(3'h4):(2'h2)]))};
              reg27 <= wire21[(1'h0):(1'h0)];
            end
          else
            begin
              reg25 <= (~&((reg18[(2'h2):(1'h0)] || (reg17 >> reg24)) ?
                  ((~reg19) ?
                      $unsigned(reg16) : (&reg23)) : $signed(wire9[(4'h9):(4'h8)])));
            end
          if (((~&reg15[(3'h4):(1'h1)]) <= $unsigned((&$signed(wire20)))))
            begin
              reg28 <= $signed((^reg19));
            end
          else
            begin
              reg28 <= (reg16[(2'h3):(2'h2)] ?
                  wire10[(2'h2):(1'h0)] : {$signed(wire10[(1'h1):(1'h1)])});
              reg29 <= $signed(reg27[(3'h6):(1'h0)]);
              reg30 <= (reg15 + (!$signed((reg28 << wire20))));
            end
        end
      reg31 <= (^(8'ha0));
    end
  assign wire32 = (|((^~reg29[(2'h2):(1'h0)]) <= (^reg19[(2'h2):(1'h0)])));
  assign wire33 = $unsigned($signed($unsigned((|wire20))));
endmodule