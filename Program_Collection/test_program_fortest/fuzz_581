(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h20):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire [(3'h4):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire42;
  wire [(3'h7):(1'h0)] wire41;
  wire signed [(3'h7):(1'h0)] wire40;
  wire signed [(3'h4):(1'h0)] wire39;
  wire [(3'h4):(1'h0)] wire37;
  assign y = {wire42, wire41, wire40, wire39, wire37, (1'h0)};
  module4 #() modinst38 (.y(wire37), .clk(clk), .wire6(wire3), .wire8(wire0), .wire5(wire1), .wire7(wire2));
  assign wire39 = $signed($signed($unsigned({wire2})));
  assign wire40 = wire37[(2'h2):(1'h0)];
  assign wire41 = (((~&(wire2 ^ wire0)) | ((!wire39) || $unsigned(wire40))) >= wire1);
  assign wire42 = wire41;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param36 = ((^~(((8'ha0) || (8'ha9)) - ((8'hb0) << (8'hab)))) ? (^(-((8'hab) > (8'ha4)))) : (~&{{(8'ha1)}})))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h43):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire8;
  input wire [(3'h7):(1'h0)] wire7;
  input wire signed [(4'h8):(1'h0)] wire6;
  input wire [(2'h2):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire35;
  wire signed [(4'h8):(1'h0)] wire33;
  wire signed [(3'h5):(1'h0)] wire15;
  wire [(2'h3):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire13;
  wire signed [(3'h6):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire11;
  wire signed [(4'h9):(1'h0)] wire10;
  wire [(4'ha):(1'h0)] wire9;
  assign y = {wire35,
                 wire33,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 (1'h0)};
  assign wire9 = {(&wire5)};
  assign wire10 = wire9[(4'ha):(2'h2)];
  assign wire11 = wire10[(2'h2):(1'h1)];
  assign wire12 = $signed($signed((|$unsigned(wire7))));
  assign wire13 = (-$signed(wire11));
  assign wire14 = $unsigned(wire8[(2'h3):(1'h1)]);
  assign wire15 = wire5;
  module16 #() modinst34 (.y(wire33), .wire19(wire11), .wire20(wire7), .clk(clk), .wire17(wire10), .wire18(wire13));
  assign wire35 = (~(+$unsigned((~wire9))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h57):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire20;
  input wire [(4'h8):(1'h0)] wire19;
  input wire signed [(4'h8):(1'h0)] wire18;
  input wire [(3'h7):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire32;
  wire signed [(2'h2):(1'h0)] wire31;
  wire signed [(2'h2):(1'h0)] wire30;
  wire signed [(2'h3):(1'h0)] wire29;
  wire [(3'h4):(1'h0)] wire28;
  wire [(2'h3):(1'h0)] wire27;
  wire signed [(4'hb):(1'h0)] wire26;
  wire signed [(4'hb):(1'h0)] wire25;
  wire [(4'ha):(1'h0)] wire23;
  reg [(4'hb):(1'h0)] reg24 = (1'h0);
  reg [(4'h9):(1'h0)] reg22 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg21 = (1'h0);
  assign y = {wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire23,
                 reg24,
                 reg22,
                 reg21,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg21 <= ((^$unsigned((wire18 ? (8'h9d) : wire19))) - (((wire19 ?
              wire18 : (8'h9e)) ~^ $signed(wire20)) ?
          wire20[(2'h3):(1'h1)] : {(&wire20)}));
      reg22 <= ({(!wire20[(1'h0):(1'h0)])} ? wire20 : $signed((~^(+reg21))));
    end
  assign wire23 = {reg21};
  always
    @(posedge clk) begin
      reg24 <= (~&(wire23[(4'h9):(3'h5)] != wire17));
    end
  assign wire25 = (wire19[(3'h4):(2'h2)] ? $unsigned(wire18) : reg21);
  assign wire26 = wire18[(4'h8):(3'h7)];
  assign wire27 = {(+(^(wire25 ? wire26 : wire23)))};
  assign wire28 = reg22;
  assign wire29 = (wire20[(2'h2):(1'h1)] + $unsigned(wire19[(3'h6):(3'h5)]));
  assign wire30 = wire23[(3'h5):(3'h4)];
  assign wire31 = ((~wire17[(1'h1):(1'h1)]) ?
                      ({{(8'haa)}} - (~(reg24 ?
                          wire19 : wire25))) : wire29[(1'h1):(1'h1)]);
  assign wire32 = wire20;
endmodule