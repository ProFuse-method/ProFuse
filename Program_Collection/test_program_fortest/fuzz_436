(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h32):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire38;
  wire signed [(3'h5):(1'h0)] wire37;
  wire [(3'h4):(1'h0)] wire36;
  wire signed [(2'h3):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire33;
  wire [(4'h8):(1'h0)] wire21;
  wire [(3'h6):(1'h0)] wire19;
  wire [(4'h9):(1'h0)] wire4;
  assign y = {wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire33,
                 wire21,
                 wire19,
                 wire4,
                 (1'h0)};
  assign wire4 = {$unsigned((((8'hac) ? wire3 : wire3) >> $unsigned(wire3)))};
  module5 #() modinst20 (.wire8(wire3), .wire7(wire0), .y(wire19), .wire9(wire1), .wire6(wire2), .clk(clk));
  assign wire21 = wire2;
  module22 #() modinst34 (wire33, clk, wire3, wire21, wire19, wire0);
  assign wire35 = ((+wire0) ^ wire3[(1'h1):(1'h1)]);
  assign wire36 = ($unsigned($signed((8'ha9))) | ($unsigned(wire1[(3'h4):(2'h3)]) ?
                      (wire33 ^~ wire21) : wire2));
  assign wire37 = (wire33[(3'h6):(2'h3)] << (^wire1));
  assign wire38 = $signed((~(~^wire0[(3'h4):(1'h1)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module22  (y, clk, wire26, wire25, wire24, wire23);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire26;
  input wire [(3'h4):(1'h0)] wire25;
  input wire [(2'h3):(1'h0)] wire24;
  input wire signed [(3'h6):(1'h0)] wire23;
  wire [(4'h9):(1'h0)] wire32;
  wire signed [(3'h4):(1'h0)] wire31;
  wire [(3'h7):(1'h0)] wire30;
  reg [(3'h4):(1'h0)] reg29 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg27 = (1'h0);
  assign y = {wire32, wire31, wire30, reg29, reg28, reg27, (1'h0)};
  always
    @(posedge clk) begin
      reg27 <= wire26;
      reg28 <= ($signed(reg27) ~^ wire26);
      reg29 <= wire24;
    end
  assign wire30 = wire24;
  assign wire31 = (reg28[(2'h3):(1'h1)] ?
                      (reg28 ?
                          wire24[(1'h1):(1'h0)] : wire23[(1'h0):(1'h0)]) : wire24[(1'h1):(1'h1)]);
  assign wire32 = wire23;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire9;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire signed [(4'h8):(1'h0)] wire7;
  input wire [(4'ha):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire17;
  wire signed [(2'h2):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire15;
  wire [(4'h8):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire13;
  reg signed [(3'h4):(1'h0)] reg12 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg11 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg10 = (1'h0);
  assign y = {wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 reg12,
                 reg11,
                 reg10,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg10 <= ($unsigned($signed({wire8})) <= wire6[(1'h1):(1'h1)]);
      if ((~&{$unsigned($unsigned(wire9))}))
        begin
          reg11 <= reg10;
          reg12 <= $unsigned(((^wire6[(4'ha):(3'h5)]) >= ($unsigned(wire8) - (wire6 ?
              (8'ha8) : wire7))));
        end
      else
        begin
          reg11 <= $signed($unsigned(reg12[(3'h4):(2'h2)]));
        end
    end
  assign wire13 = (~|{($unsigned((8'haa)) ^ (~wire9))});
  assign wire14 = $unsigned($unsigned(reg10[(3'h4):(3'h4)]));
  assign wire15 = (reg12[(3'h4):(2'h2)] != (reg10[(4'hb):(3'h7)] ?
                      $signed((~&wire7)) : wire9[(2'h3):(1'h1)]));
  assign wire16 = (reg11[(2'h3):(2'h2)] ?
                      $signed((!$unsigned(wire14))) : $signed(((-reg12) ~^ $signed(wire8))));
  assign wire17 = (~&(~&((~|wire8) ?
                      (wire6 ? wire14 : wire14) : wire16[(2'h2):(1'h1)])));
  assign wire18 = (-wire15[(3'h7):(3'h7)]);
endmodule