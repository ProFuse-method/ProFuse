(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(3'h5):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire36;
  wire [(4'h9):(1'h0)] wire35;
  wire signed [(2'h2):(1'h0)] wire34;
  wire signed [(2'h2):(1'h0)] wire33;
  wire signed [(4'hb):(1'h0)] wire32;
  wire [(3'h4):(1'h0)] wire31;
  wire signed [(3'h4):(1'h0)] wire30;
  wire signed [(2'h3):(1'h0)] wire29;
  wire signed [(3'h6):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire26;
  reg signed [(4'ha):(1'h0)] reg37 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire26,
                 reg37,
                 (1'h0)};
  module4 #() modinst27 (.y(wire26), .wire8(wire3), .wire5(wire2), .wire7(wire1), .wire6(wire0), .clk(clk));
  assign wire28 = ((wire0[(2'h2):(1'h0)] ?
                          $unsigned(wire0) : (wire1[(3'h4):(3'h4)] ~^ $signed(wire0))) ?
                      $signed((wire0 ?
                          wire3[(4'h9):(3'h6)] : (8'ha4))) : wire2);
  assign wire29 = $signed(($signed($signed((8'ha0))) ?
                      (wire26[(4'ha):(3'h7)] >= $unsigned(wire2)) : ((wire3 ?
                              wire3 : (8'hae)) ?
                          wire26[(4'h8):(2'h3)] : $unsigned(wire1))));
  assign wire30 = $unsigned(wire29);
  assign wire31 = $unsigned(wire0);
  assign wire32 = $unsigned($signed(wire2[(3'h5):(1'h0)]));
  assign wire33 = {(~wire2[(2'h2):(1'h1)])};
  assign wire34 = wire2[(4'h9):(3'h5)];
  assign wire35 = wire28;
  assign wire36 = wire3[(3'h7):(1'h0)];
  always
    @(posedge clk) begin
      reg37 <= ($signed((wire28[(2'h2):(2'h2)] ?
              (wire26 ? wire32 : wire35) : (wire33 - wire29))) ?
          wire34[(1'h1):(1'h1)] : wire34);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param25 = ((((&(8'h9d)) ~^ ((8'ha6) ? (8'ha6) : (8'ha2))) != (|{(8'ha0)})) != (((8'ha0) + ((8'hb0) ? (8'ha6) : (8'haf))) ? ((!(8'haa)) ? ((8'h9f) ? (8'h9c) : (8'haf)) : (^(8'ha4))) : (~((8'haf) ? (8'hb0) : (8'h9f))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire8;
  input wire signed [(3'h7):(1'h0)] wire7;
  input wire signed [(3'h4):(1'h0)] wire6;
  input wire signed [(4'h9):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire24;
  wire signed [(3'h4):(1'h0)] wire23;
  wire signed [(3'h7):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire11;
  wire signed [(4'ha):(1'h0)] wire10;
  wire [(4'h8):(1'h0)] wire9;
  assign y = {wire24, wire23, wire21, wire11, wire10, wire9, (1'h0)};
  assign wire9 = (wire5 ?
                     ($signed(wire8) ?
                         $signed((wire5 != wire8)) : (~^wire8[(4'ha):(2'h3)])) : wire8);
  assign wire10 = $unsigned((wire9[(3'h4):(2'h2)] ?
                      (~|(-wire7)) : wire9[(3'h7):(2'h2)]));
  assign wire11 = wire10;
  module12 #() modinst22 (.wire15(wire9), .wire14(wire6), .y(wire21), .clk(clk), .wire13(wire10), .wire16(wire11));
  assign wire23 = (($unsigned(wire7[(3'h5):(2'h2)]) ?
                      wire10[(1'h0):(1'h0)] : $unsigned(wire9[(1'h1):(1'h1)])) <<< (wire10[(3'h5):(3'h5)] + ($unsigned(wire9) ?
                      wire9[(3'h6):(3'h5)] : (+(8'hab)))));
  assign wire24 = (wire8 ?
                      $signed((wire23 ?
                          $signed(wire23) : (8'had))) : ($unsigned(wire21) ?
                          ($unsigned(wire7) ? {wire5} : wire21) : (8'ha5)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h1f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire15;
  input wire [(3'h4):(1'h0)] wire14;
  input wire [(4'ha):(1'h0)] wire13;
  wire [(4'ha):(1'h0)] wire20;
  wire signed [(3'h6):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire17;
  reg [(4'hb):(1'h0)] reg19 = (1'h0);
  assign y = {wire20, wire18, wire17, reg19, (1'h0)};
  assign wire17 = ($unsigned(wire15[(2'h2):(1'h0)]) ^~ wire13);
  assign wire18 = (($unsigned($signed((8'ha2))) ? $signed(wire13) : wire14) ?
                      (-wire14[(2'h3):(1'h0)]) : $signed($unsigned($signed((8'h9c)))));
  always
    @(posedge clk) begin
      reg19 <= ((-($signed(wire13) << $signed(wire14))) ~^ wire16);
    end
  assign wire20 = {{{(wire15 * (8'ha8))}}};
endmodule