(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param69 = ((~{((8'h9e) ^ (8'ha6))}) ? (~(|((8'hac) ? (8'h9c) : (8'haa)))) : ({((8'ha6) ? (8'h9f) : (8'hae))} >= (+((8'ha9) ^~ (8'hae))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire66;
  wire signed [(4'ha):(1'h0)] wire65;
  wire [(4'ha):(1'h0)] wire64;
  wire signed [(4'h8):(1'h0)] wire63;
  wire signed [(4'h9):(1'h0)] wire61;
  wire [(4'h9):(1'h0)] wire8;
  wire signed [(4'h9):(1'h0)] wire7;
  wire signed [(4'h9):(1'h0)] wire6;
  reg [(3'h6):(1'h0)] reg68 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg5 = (1'h0);
  reg [(3'h6):(1'h0)] reg4 = (1'h0);
  assign y = {wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire61,
                 wire8,
                 wire7,
                 wire6,
                 reg68,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ({((!$signed(wire2)) ? ((wire0 ? wire1 : wire0) >> wire3) : wire0)})
        begin
          reg4 <= $unsigned((wire2 & (^{wire1})));
          reg5 <= (8'h9d);
        end
      else
        begin
          if ($unsigned($unsigned((8'ha8))))
            begin
              reg4 <= (+wire2[(3'h6):(3'h5)]);
            end
          else
            begin
              reg4 <= reg4;
              reg5 <= wire0;
            end
        end
    end
  assign wire6 = wire3;
  assign wire7 = (~&wire1);
  assign wire8 = $signed($signed({(wire7 ? wire2 : wire3)}));
  module9 #() modinst62 (.wire11(wire3), .wire13(wire2), .clk(clk), .y(wire61), .wire10(wire0), .wire12(wire8));
  assign wire63 = (wire0[(3'h4):(3'h4)] < (~&((wire7 | (8'ha6)) + {reg4})));
  assign wire64 = {(reg4 <<< ($unsigned(wire63) - (~^wire0)))};
  assign wire65 = wire6[(3'h6):(2'h3)];
  module35 #() modinst67 (wire66, clk, wire63, wire3, wire8, wire64);
  always
    @(posedge clk) begin
      reg68 <= $unsigned({($unsigned(wire0) ?
              wire1[(3'h5):(3'h4)] : (~&wire65))});
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param60 = (+((((8'ha6) ? (8'ha1) : (8'hac)) && (~^(8'h9e))) >> (-((8'h9e) ? (8'hab) : (8'hac))))))
(y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire13;
  input wire signed [(4'h8):(1'h0)] wire12;
  input wire [(4'h9):(1'h0)] wire11;
  input wire signed [(2'h2):(1'h0)] wire10;
  wire signed [(3'h5):(1'h0)] wire59;
  wire signed [(4'h9):(1'h0)] wire57;
  wire signed [(3'h6):(1'h0)] wire55;
  wire [(3'h6):(1'h0)] wire34;
  wire signed [(3'h6):(1'h0)] wire32;
  wire signed [(3'h7):(1'h0)] wire18;
  wire [(4'ha):(1'h0)] wire17;
  wire [(4'hb):(1'h0)] wire16;
  wire signed [(3'h5):(1'h0)] wire15;
  wire signed [(3'h7):(1'h0)] wire14;
  reg signed [(3'h7):(1'h0)] reg58 = (1'h0);
  assign y = {wire59,
                 wire57,
                 wire55,
                 wire34,
                 wire32,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 reg58,
                 (1'h0)};
  assign wire14 = ($signed(wire13[(1'h1):(1'h0)]) ?
                      $unsigned((~$unsigned(wire12))) : $unsigned(((wire11 ?
                          wire10 : wire10) >> $signed(wire10))));
  assign wire15 = wire12[(2'h2):(1'h0)];
  assign wire16 = wire15[(2'h2):(1'h0)];
  assign wire17 = (~^($unsigned({wire15}) >= $signed((wire16 ?
                      (8'h9f) : wire11))));
  assign wire18 = wire17;
  module19 #() modinst33 (.clk(clk), .y(wire32), .wire23(wire16), .wire21(wire14), .wire22(wire13), .wire20(wire17));
  assign wire34 = wire11;
  module35 #() modinst56 (.clk(clk), .wire36(wire12), .wire37(wire11), .wire38(wire16), .y(wire55), .wire39(wire10));
  assign wire57 = ($unsigned(($unsigned((8'ha2)) ~^ wire32[(2'h3):(2'h2)])) << $signed(($unsigned(wire13) ?
                      ((8'ha1) ? wire15 : (8'h9d)) : {wire12})));
  always
    @(posedge clk) begin
      reg58 <= {($unsigned($signed(wire10)) == $unsigned((wire13 | wire18)))};
    end
  assign wire59 = (~|(-(~&(~&reg58))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module35
#(parameter param54 = {({((8'ha8) != (8'ha4))} ? (!((8'hb0) ? (8'ha3) : (8'ha9))) : (~^{(8'h9d)}))})
(y, clk, wire39, wire38, wire37, wire36);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire39;
  input wire signed [(4'hb):(1'h0)] wire38;
  input wire signed [(3'h4):(1'h0)] wire37;
  input wire [(2'h3):(1'h0)] wire36;
  wire signed [(3'h7):(1'h0)] wire51;
  wire [(4'h8):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire43;
  wire signed [(4'ha):(1'h0)] wire42;
  reg [(3'h6):(1'h0)] reg53 = (1'h0);
  reg [(3'h6):(1'h0)] reg52 = (1'h0);
  reg [(2'h3):(1'h0)] reg50 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg48 = (1'h0);
  reg [(2'h2):(1'h0)] reg47 = (1'h0);
  reg [(3'h6):(1'h0)] reg46 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg45 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg41 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg40 = (1'h0);
  assign y = {wire51,
                 wire44,
                 wire43,
                 wire42,
                 reg53,
                 reg52,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg41,
                 reg40,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (($signed($signed((~^(8'ha6)))) ^ $signed($signed($unsigned(wire36)))))
        begin
          reg40 <= wire37;
          reg41 <= (reg40 >>> {wire36[(2'h2):(2'h2)]});
        end
      else
        begin
          reg40 <= (wire39 ^~ reg41[(4'ha):(1'h1)]);
          reg41 <= $signed(reg41);
        end
    end
  assign wire42 = (~wire36);
  assign wire43 = (!$signed($signed((!wire39))));
  assign wire44 = (wire38[(4'hb):(1'h0)] ?
                      (wire42 << (&((8'hac) == (8'hae)))) : $signed(((wire42 ?
                              wire42 : wire37) ?
                          {wire36} : (8'ha6))));
  always
    @(posedge clk) begin
      if ($unsigned($signed($signed((wire39 ? wire37 : wire43)))))
        begin
          reg45 <= $signed(wire44[(3'h6):(2'h2)]);
          if ($unsigned($signed((wire37 ?
              (wire38 ? wire44 : reg41) : $unsigned(wire44)))))
            begin
              reg46 <= $unsigned((($signed(wire43) <= reg41[(4'ha):(4'h8)]) == ($unsigned((8'haa)) & (wire36 >> (8'ha9)))));
              reg47 <= {reg46[(3'h4):(3'h4)]};
            end
          else
            begin
              reg46 <= $signed(wire42[(3'h4):(3'h4)]);
            end
          if (($unsigned(wire37) <<< $unsigned(wire39[(1'h0):(1'h0)])))
            begin
              reg48 <= ((!($signed(wire37) ?
                      $signed(reg46) : (wire42 ? wire44 : wire42))) ?
                  (~^(wire37[(1'h1):(1'h1)] * wire39)) : wire37[(1'h1):(1'h1)]);
              reg49 <= $signed((reg48[(3'h5):(1'h0)] ?
                  $unsigned($unsigned(reg40)) : wire36[(2'h3):(1'h0)]));
              reg50 <= {(~&((-wire38) && $unsigned((8'haa))))};
            end
          else
            begin
              reg48 <= {reg46[(2'h2):(1'h1)]};
              reg49 <= $signed((8'ha1));
              reg50 <= wire44[(2'h3):(1'h1)];
            end
        end
      else
        begin
          reg45 <= $signed(((8'haa) != wire38));
          reg46 <= {{wire43}};
          reg47 <= $signed(reg40);
        end
    end
  assign wire51 = (wire36 ? (~$signed((~reg49))) : reg49);
  always
    @(posedge clk) begin
      reg52 <= ((~|({wire37} >> (|wire37))) ?
          (^~wire39[(1'h1):(1'h0)]) : ($unsigned((-wire43)) ?
              wire39 : reg45[(3'h7):(2'h2)]));
      reg53 <= {$unsigned({(~^(8'h9d))})};
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module19  (y, clk, wire23, wire22, wire21, wire20);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire23;
  input wire [(3'h5):(1'h0)] wire22;
  input wire [(2'h2):(1'h0)] wire21;
  input wire signed [(4'h9):(1'h0)] wire20;
  wire [(4'hb):(1'h0)] wire31;
  wire signed [(3'h7):(1'h0)] wire30;
  wire signed [(4'hb):(1'h0)] wire29;
  wire [(4'h9):(1'h0)] wire28;
  wire [(2'h3):(1'h0)] wire27;
  wire [(3'h4):(1'h0)] wire26;
  wire [(2'h3):(1'h0)] wire25;
  wire signed [(4'h9):(1'h0)] wire24;
  assign y = {wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 (1'h0)};
  assign wire24 = (wire22 + ((~|(wire23 | wire23)) ?
                      $unsigned((~wire22)) : wire21));
  assign wire25 = wire22[(1'h1):(1'h1)];
  assign wire26 = ((+$unsigned(((8'ha2) ^ wire21))) ?
                      (|wire23) : $signed($unsigned($unsigned(wire23))));
  assign wire27 = wire23[(2'h2):(2'h2)];
  assign wire28 = ((wire20[(2'h3):(2'h3)] ?
                      $signed($unsigned((8'ha2))) : (+wire24)) ~^ ($unsigned($signed(wire27)) >> wire27[(2'h2):(2'h2)]));
  assign wire29 = wire21;
  assign wire30 = wire20;
  assign wire31 = ({wire25} != wire30[(3'h6):(3'h5)]);
endmodule