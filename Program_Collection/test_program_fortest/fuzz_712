(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(3'h4):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire49;
  wire signed [(4'hb):(1'h0)] wire48;
  wire signed [(2'h2):(1'h0)] wire47;
  wire signed [(4'hb):(1'h0)] wire46;
  wire signed [(4'ha):(1'h0)] wire44;
  wire signed [(4'ha):(1'h0)] wire43;
  wire signed [(4'ha):(1'h0)] wire41;
  wire [(2'h3):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire4;
  assign y = {wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire44,
                 wire43,
                 wire41,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = wire2;
  assign wire5 = (((!$unsigned(wire1)) ?
                     ({wire3} >> $unsigned(wire4)) : ($unsigned(wire1) ?
                         wire0 : $unsigned((8'haf)))) || $signed(((wire2 ?
                     wire2 : wire4) < (wire2 && wire0))));
  module6 #() modinst42 (.wire10(wire0), .wire8(wire4), .clk(clk), .wire9(wire2), .wire7(wire3), .y(wire41));
  assign wire43 = wire1;
  module12 #() modinst45 (wire44, clk, wire4, wire41, wire2, wire0);
  assign wire46 = ({$signed(wire44[(4'ha):(1'h1)])} - (~&($signed(wire5) ?
                      (-(8'h9e)) : wire44[(3'h6):(3'h6)])));
  assign wire47 = wire5;
  assign wire48 = ({{wire46}} ?
                      (((wire5 ? wire44 : wire0) ?
                              $unsigned(wire1) : (wire41 & wire44)) ?
                          $unsigned((wire5 ?
                              wire47 : wire41)) : $signed(wire1[(2'h3):(2'h3)])) : wire46);
  assign wire49 = ((8'ha4) ?
                      {$unsigned(wire0[(3'h6):(1'h1)])} : (~(wire4 != (|wire3))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param40 = ((((+(8'hab)) ? ((8'ha5) | (8'hac)) : (~|(8'haa))) - (8'ha7)) ? (~&(!(~(8'ha5)))) : (((+(8'h9f)) ? (^~(8'hb0)) : ((8'ha6) ? (8'haf) : (8'h9f))) <<< (~^((8'haf) | (8'hac))))))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire signed [(3'h7):(1'h0)] wire8;
  input wire [(2'h2):(1'h0)] wire7;
  wire [(3'h4):(1'h0)] wire39;
  wire signed [(3'h4):(1'h0)] wire38;
  wire signed [(4'hb):(1'h0)] wire36;
  wire signed [(4'h9):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire11;
  assign y = {wire39, wire38, wire36, wire22, wire11, (1'h0)};
  assign wire11 = wire9;
  module12 #() modinst23 (wire22, clk, wire9, wire10, wire8, wire7);
  module24 #() modinst37 (.wire27(wire11), .wire28(wire22), .wire25(wire10), .clk(clk), .y(wire36), .wire26(wire8));
  assign wire38 = $signed({$unsigned((wire22 ^~ wire10))});
  assign wire39 = $unsigned(wire7[(1'h1):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module24  (y, clk, wire28, wire27, wire26, wire25);
  output wire [(32'h2b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire28;
  input wire [(3'h5):(1'h0)] wire27;
  input wire [(2'h2):(1'h0)] wire26;
  input wire signed [(2'h2):(1'h0)] wire25;
  wire [(3'h7):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire34;
  wire [(2'h3):(1'h0)] wire31;
  wire signed [(4'h9):(1'h0)] wire30;
  wire signed [(2'h2):(1'h0)] wire29;
  reg [(3'h5):(1'h0)] reg33 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg32 = (1'h0);
  assign y = {wire35, wire34, wire31, wire30, wire29, reg33, reg32, (1'h0)};
  assign wire29 = wire28[(1'h1):(1'h1)];
  assign wire30 = (~|wire28);
  assign wire31 = (+(((wire30 && wire28) || (wire26 ?
                      wire28 : wire29)) < ({wire28} ?
                      $unsigned((8'h9e)) : $signed(wire27))));
  always
    @(posedge clk) begin
      reg32 <= (wire27 && (((8'ha0) != (~&(8'ha1))) >> wire26));
      reg33 <= $signed(($unsigned(wire26) ?
          (~|wire31[(2'h2):(2'h2)]) : (&(wire28 ? reg32 : (8'hab)))));
    end
  assign wire34 = wire30[(4'h9):(3'h4)];
  assign wire35 = $unsigned((-reg33[(1'h0):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param21 = ({(+(+(8'ha9)))} == {(~^((8'ha1) ? (8'had) : (8'hab)))}))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h19):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire16;
  input wire signed [(4'ha):(1'h0)] wire15;
  input wire [(2'h3):(1'h0)] wire14;
  input wire [(2'h2):(1'h0)] wire13;
  wire [(4'h9):(1'h0)] wire19;
  wire [(2'h2):(1'h0)] wire18;
  wire [(3'h7):(1'h0)] wire17;
  reg signed [(3'h6):(1'h0)] reg20 = (1'h0);
  assign y = {wire19, wire18, wire17, reg20, (1'h0)};
  assign wire17 = $unsigned({($signed((8'ha7)) ?
                          (~wire15) : $unsigned(wire13))});
  assign wire18 = (((~|{wire15}) ? wire17 : $signed((wire16 >= wire14))) ?
                      $signed($unsigned({(8'h9c)})) : wire13);
  assign wire19 = (^($unsigned($signed(wire18)) ?
                      wire13[(1'h1):(1'h0)] : wire18[(1'h1):(1'h0)]));
  always
    @(posedge clk) begin
      reg20 <= $unsigned((($signed(wire13) * wire19[(1'h0):(1'h0)]) * wire15[(1'h0):(1'h0)]));
    end
endmodule