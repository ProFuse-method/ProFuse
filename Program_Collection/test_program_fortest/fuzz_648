(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h65):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire19;
  wire [(4'h8):(1'h0)] wire18;
  wire signed [(3'h5):(1'h0)] wire16;
  wire [(4'ha):(1'h0)] wire15;
  wire signed [(3'h4):(1'h0)] wire14;
  wire signed [(3'h7):(1'h0)] wire13;
  wire signed [(4'hb):(1'h0)] wire12;
  wire signed [(4'h9):(1'h0)] wire6;
  wire [(3'h6):(1'h0)] wire5;
  reg signed [(2'h3):(1'h0)] reg17 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg4 = (1'h0);
  assign y = {wire19,
                 wire18,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire6,
                 wire5,
                 reg17,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= (~|(wire2 ?
          $unsigned(wire0[(1'h1):(1'h1)]) : (^wire0[(2'h2):(1'h1)])));
    end
  assign wire5 = wire1[(2'h3):(2'h2)];
  assign wire6 = (8'ha5);
  always
    @(posedge clk) begin
      if (wire1[(3'h7):(1'h0)])
        begin
          reg7 <= wire5[(2'h3):(2'h3)];
        end
      else
        begin
          if ($unsigned((-wire6)))
            begin
              reg7 <= $unsigned($signed($signed((-wire1))));
              reg8 <= ((((|wire0) ?
                  (wire3 == wire2) : {wire5}) < (~&reg7)) * (({(8'ha3)} * (wire2 == reg7)) ?
                  wire5[(2'h2):(1'h1)] : (8'hab)));
              reg9 <= (^($unsigned((8'h9c)) ?
                  ((^(8'h9e)) << (reg7 ?
                      wire2 : wire3)) : $unsigned($unsigned((8'hac)))));
            end
          else
            begin
              reg7 <= $signed($signed(reg7[(2'h3):(1'h1)]));
            end
          reg10 <= {{$signed($unsigned(wire2))}};
        end
      reg11 <= (-(|reg8));
    end
  assign wire12 = $unsigned({(-$unsigned((8'ha8)))});
  assign wire13 = {(~|$unsigned(reg8[(2'h2):(2'h2)]))};
  assign wire14 = wire0[(3'h5):(2'h2)];
  assign wire15 = $signed($signed(($signed(reg4) || {(8'ha4)})));
  assign wire16 = $unsigned($signed(reg9));
  always
    @(posedge clk) begin
      reg17 <= $unsigned(wire5);
    end
  assign wire18 = wire12[(3'h6):(3'h5)];
  assign wire19 = (~^(reg8[(4'h8):(3'h7)] < $signed($unsigned((8'hae)))));
endmodule