(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param10 = ((&(((8'had) > (8'ha1)) - ((8'ha7) >>> (8'hac)))) && (({(8'hac)} - {(8'ha3)}) == (((8'ha2) ? (8'ha4) : (8'haa)) ? ((8'h9e) ? (8'hab) : (8'haf)) : (&(8'ha5))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h27):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(2'h2):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire8;
  wire [(3'h6):(1'h0)] wire7;
  wire signed [(3'h5):(1'h0)] wire5;
  reg [(3'h7):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg4 = (1'h0);
  assign y = {wire9, wire8, wire7, wire5, reg6, reg4, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= ({wire1} ?
          (8'ha5) : $signed(((wire0 != wire0) + wire2[(4'h8):(1'h0)])));
    end
  assign wire5 = ($unsigned(((wire2 ? reg4 : wire1) ?
                         (wire0 + wire1) : (|wire1))) ?
                     (-wire2[(2'h3):(2'h2)]) : $unsigned($unsigned($signed((8'haa)))));
  always
    @(posedge clk) begin
      reg6 <= (&($signed(wire0) ?
          ($unsigned(wire0) == {wire1}) : $unsigned($unsigned(wire3))));
    end
  assign wire7 = wire0[(2'h2):(1'h1)];
  assign wire8 = ($unsigned(reg6) >>> wire7);
  assign wire9 = wire2;
endmodule