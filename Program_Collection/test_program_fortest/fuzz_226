(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire69;
  wire signed [(2'h3):(1'h0)] wire68;
  wire [(3'h7):(1'h0)] wire66;
  wire [(4'ha):(1'h0)] wire65;
  wire signed [(4'h8):(1'h0)] wire64;
  wire [(3'h5):(1'h0)] wire63;
  wire [(3'h6):(1'h0)] wire62;
  wire signed [(3'h7):(1'h0)] wire61;
  wire [(3'h4):(1'h0)] wire60;
  wire [(4'h9):(1'h0)] wire58;
  wire signed [(4'hb):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire5;
  wire signed [(2'h3):(1'h0)] wire4;
  assign y = {wire69,
                 wire68,
                 wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire58,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = (+wire0);
  assign wire5 = (~|$unsigned(((wire1 >> wire0) <= $signed(wire2))));
  assign wire6 = {(^($signed(wire2) + (~^wire4)))};
  module7 #() modinst59 (.wire11(wire5), .wire9(wire0), .y(wire58), .wire8(wire6), .clk(clk), .wire10(wire2));
  assign wire60 = (((8'haf) ? (^~$unsigned(wire4)) : wire4[(2'h3):(1'h0)]) ?
                      ((wire0 >= $signed(wire1)) <= (((8'hab) << wire5) - (wire4 < wire4))) : {(((8'hac) || wire6) < $unsigned(wire58))});
  assign wire61 = (|wire6[(2'h3):(2'h2)]);
  assign wire62 = $signed(wire0[(1'h0):(1'h0)]);
  assign wire63 = wire60[(2'h2):(2'h2)];
  assign wire64 = ((wire3 ~^ {(wire2 >> wire62)}) ?
                      wire61[(1'h0):(1'h0)] : ((^$signed((8'ha1))) <= $signed((wire0 ?
                          (8'h9d) : wire0))));
  assign wire65 = ($signed((^(wire2 ^ wire61))) ?
                      {$signed(wire63)} : $unsigned((-$signed(wire4))));
  module16 #() modinst67 (wire66, clk, wire2, wire1, wire6, wire65);
  assign wire68 = ($unsigned((((8'ha1) ^ wire66) ?
                          (wire60 <<< wire60) : wire2)) ?
                      wire0[(3'h5):(1'h1)] : $unsigned((~|$unsigned(wire65))));
  assign wire69 = (!$unsigned((8'ha3)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param57 = ((~&(|((8'ha8) ? (8'h9e) : (8'hac)))) >>> (((~&(8'hab)) && ((8'ha4) ? (8'ha1) : (8'ha4))) ? (((8'h9f) ? (8'hae) : (8'hab)) ? (+(8'ha5)) : ((8'h9d) == (8'ha8))) : (((8'hab) ? (8'ha3) : (8'ha7)) && {(8'haf)}))))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h43):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire11;
  input wire signed [(3'h7):(1'h0)] wire10;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire signed [(4'hb):(1'h0)] wire8;
  wire [(4'hb):(1'h0)] wire56;
  wire [(4'h9):(1'h0)] wire55;
  wire [(3'h5):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire15;
  wire signed [(2'h2):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire51;
  wire [(4'ha):(1'h0)] wire53;
  reg [(4'h8):(1'h0)] reg14 = (1'h0);
  reg [(2'h2):(1'h0)] reg13 = (1'h0);
  assign y = {wire56,
                 wire55,
                 wire31,
                 wire15,
                 wire12,
                 wire51,
                 wire53,
                 reg14,
                 reg13,
                 (1'h0)};
  assign wire12 = ((wire11[(2'h2):(1'h0)] || (wire11 ^~ $signed((8'ha7)))) ?
                      wire9[(4'ha):(1'h1)] : wire8);
  always
    @(posedge clk) begin
      reg13 <= (&((&wire9[(3'h4):(3'h4)]) ~^ wire10));
      reg14 <= $signed((wire11 << ((reg13 ~^ wire12) <<< $unsigned(wire12))));
    end
  assign wire15 = $unsigned((|((-wire9) ? (wire12 >>> wire10) : (&reg13))));
  module16 #() modinst32 (.wire20(wire9), .wire17(wire15), .clk(clk), .wire19(reg14), .wire18(wire11), .y(wire31));
  module33 #() modinst52 (.wire34(wire9), .clk(clk), .y(wire51), .wire37(wire8), .wire36(wire31), .wire35(wire10));
  module33 #() modinst54 (wire53, clk, wire51, wire12, wire15, reg14);
  assign wire55 = wire9[(3'h5):(2'h2)];
  assign wire56 = wire8[(2'h2):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module33
#(parameter param50 = (8'ha1))
(y, clk, wire37, wire36, wire35, wire34);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire37;
  input wire [(2'h2):(1'h0)] wire36;
  input wire [(3'h7):(1'h0)] wire35;
  input wire [(3'h7):(1'h0)] wire34;
  wire signed [(3'h5):(1'h0)] wire49;
  wire signed [(3'h5):(1'h0)] wire48;
  wire signed [(4'h8):(1'h0)] wire47;
  wire signed [(4'h9):(1'h0)] wire46;
  wire [(3'h7):(1'h0)] wire45;
  wire signed [(2'h2):(1'h0)] wire44;
  wire [(3'h7):(1'h0)] wire43;
  wire signed [(4'h8):(1'h0)] wire42;
  wire [(2'h3):(1'h0)] wire41;
  wire signed [(2'h2):(1'h0)] wire40;
  wire [(4'ha):(1'h0)] wire39;
  wire [(2'h3):(1'h0)] wire38;
  assign y = {wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 (1'h0)};
  assign wire38 = {wire37};
  assign wire39 = wire37;
  assign wire40 = (~^$signed($signed((wire37 && wire39))));
  assign wire41 = (wire39 ? wire36[(1'h0):(1'h0)] : {wire35});
  assign wire42 = $signed($signed($signed({(8'ha6)})));
  assign wire43 = wire38;
  assign wire44 = (-(~{(wire42 ? wire41 : wire40)}));
  assign wire45 = {(|(-wire39[(1'h0):(1'h0)]))};
  assign wire46 = (-wire40);
  assign wire47 = (wire35 ? wire36[(1'h0):(1'h0)] : wire43);
  assign wire48 = wire43;
  assign wire49 = (wire36 ~^ wire35[(1'h1):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire20;
  input wire [(2'h2):(1'h0)] wire19;
  input wire [(4'ha):(1'h0)] wire18;
  input wire signed [(4'ha):(1'h0)] wire17;
  wire signed [(4'ha):(1'h0)] wire30;
  wire [(4'ha):(1'h0)] wire29;
  wire [(4'ha):(1'h0)] wire23;
  wire [(2'h2):(1'h0)] wire22;
  wire [(4'ha):(1'h0)] wire21;
  reg [(4'h9):(1'h0)] reg28 = (1'h0);
  reg [(3'h7):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg26 = (1'h0);
  reg [(3'h5):(1'h0)] reg25 = (1'h0);
  reg [(3'h7):(1'h0)] reg24 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire23,
                 wire22,
                 wire21,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 (1'h0)};
  assign wire21 = (({$unsigned(wire18)} ?
                      ((wire18 ? (8'had) : wire20) ?
                          $signed(wire17) : ((8'hae) ^~ (8'ha8))) : $unsigned($unsigned(wire19))) <<< wire20[(3'h4):(2'h2)]);
  assign wire22 = (wire18 ?
                      $unsigned($unsigned({wire20})) : $signed({$unsigned(wire18)}));
  assign wire23 = wire19[(1'h1):(1'h0)];
  always
    @(posedge clk) begin
      reg24 <= (wire18 ^ ((8'ha4) ?
          (wire19 ^~ wire18[(3'h6):(1'h1)]) : $signed(wire19[(1'h0):(1'h0)])));
      if ((+wire18[(2'h2):(2'h2)]))
        begin
          reg25 <= ((|wire23) ?
              (wire20[(2'h3):(1'h0)] ?
                  $signed({wire23}) : wire20) : ($unsigned($signed(wire21)) ?
                  ($signed(wire17) ?
                      {(8'ha5)} : (wire22 >>> wire21)) : (wire19[(1'h1):(1'h0)] ?
                      (~&wire18) : wire23[(1'h1):(1'h0)])));
          reg26 <= wire23[(4'ha):(4'ha)];
          reg27 <= {((8'haa) || (wire17 << (reg26 && (8'ha0))))};
        end
      else
        begin
          reg25 <= $signed(reg26);
        end
      reg28 <= (&$signed({(reg25 ? wire23 : reg26)}));
    end
  assign wire29 = ($unsigned(wire22[(1'h1):(1'h0)]) + $signed((!$unsigned(wire23))));
  assign wire30 = {reg24[(3'h5):(3'h5)]};
endmodule