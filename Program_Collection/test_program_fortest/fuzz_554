(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h58):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire15;
  wire [(3'h7):(1'h0)] wire14;
  wire [(3'h5):(1'h0)] wire13;
  wire [(3'h6):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire11;
  wire [(3'h7):(1'h0)] wire10;
  wire [(4'ha):(1'h0)] wire9;
  wire signed [(4'ha):(1'h0)] wire8;
  wire signed [(4'h9):(1'h0)] wire7;
  wire signed [(3'h5):(1'h0)] wire6;
  wire [(2'h3):(1'h0)] wire5;
  reg [(4'ha):(1'h0)] reg4 = (1'h0);
  assign y = {wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= ($signed({(wire1 ~^ wire1)}) ?
          (($unsigned(wire3) ~^ (~&wire2)) <<< $unsigned(wire0)) : ((wire0 ~^ (~^wire1)) - {wire1[(1'h0):(1'h0)]}));
    end
  assign wire5 = wire1[(3'h4):(2'h2)];
  assign wire6 = $unsigned({((wire2 ? reg4 : wire3) <= $signed(wire3))});
  assign wire7 = ((^{(wire3 ? wire3 : wire6)}) <= $signed({$signed(wire6)}));
  assign wire8 = wire6[(1'h0):(1'h0)];
  assign wire9 = reg4;
  assign wire10 = (&wire7);
  assign wire11 = $unsigned(wire1);
  assign wire12 = $signed(wire9);
  assign wire13 = wire9;
  assign wire14 = (+wire10);
  assign wire15 = ((~^(wire14[(1'h1):(1'h1)] ?
                      (wire7 ?
                          wire14 : wire7) : {wire14})) + wire1[(2'h3):(2'h3)]);
endmodule