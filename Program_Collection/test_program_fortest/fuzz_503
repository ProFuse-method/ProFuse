(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param73 = ((|(&{(8'had)})) > (((+(8'had)) ? (^~(8'ha1)) : ((8'ha0) ? (8'ha1) : (8'ha2))) & (|((8'ha3) ^ (8'h9c))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire0;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire3;
  wire signed [(4'hb):(1'h0)] wire4;
  wire [(4'ha):(1'h0)] wire5;
  wire signed [(3'h4):(1'h0)] wire6;
  wire [(2'h3):(1'h0)] wire68;
  reg [(4'h9):(1'h0)] reg72 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg71 = (1'h0);
  reg [(4'h9):(1'h0)] reg70 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg7 = (1'h0);
  reg [(3'h6):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg9 = (1'h0);
  assign y = {wire4,
                 wire5,
                 wire6,
                 wire68,
                 reg72,
                 reg71,
                 reg70,
                 reg7,
                 reg8,
                 reg9,
                 (1'h0)};
  assign wire4 = {{wire2}};
  assign wire5 = (($unsigned((-wire0)) ? wire3 : ({wire4} < $signed(wire4))) ?
                     ($signed($unsigned(wire3)) ?
                         ($unsigned(wire0) >>> (wire3 ?
                             (8'ha7) : (8'had))) : ((wire1 - wire2) << (wire3 - wire3))) : wire0);
  assign wire6 = $signed(wire0);
  always
    @(posedge clk) begin
      reg7 <= wire1[(4'h9):(3'h7)];
      reg8 <= (wire0 ~^ (|(~&wire5)));
      reg9 <= $unsigned(({wire5} & ((wire4 ? wire0 : wire0) ?
          $signed(wire5) : (wire6 & reg8))));
    end
  module10 #() modinst69 (.wire13(wire0), .y(wire68), .clk(clk), .wire11(wire2), .wire14(reg7), .wire12(wire5));
  always
    @(posedge clk) begin
      reg70 <= (!$signed(($unsigned(reg9) < $signed(wire3))));
      reg71 <= reg70[(2'h2):(1'h1)];
      reg72 <= (8'ha3);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param67 = ({{{(8'hab)}}} ? (~((~&(8'ha5)) <<< ((8'ha2) || (8'ha9)))) : (((~&(8'hac)) && ((8'hb0) < (8'ha3))) - (!(8'ha9)))))
(y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire14;
  input wire signed [(4'h8):(1'h0)] wire13;
  input wire signed [(4'ha):(1'h0)] wire12;
  input wire [(4'h9):(1'h0)] wire11;
  wire signed [(3'h5):(1'h0)] wire65;
  wire signed [(4'h9):(1'h0)] wire64;
  wire [(4'h9):(1'h0)] wire62;
  wire [(4'h8):(1'h0)] wire61;
  wire [(4'h9):(1'h0)] wire60;
  wire [(4'h8):(1'h0)] wire59;
  wire signed [(3'h4):(1'h0)] wire57;
  wire signed [(3'h7):(1'h0)] wire56;
  wire signed [(4'h8):(1'h0)] wire54;
  wire signed [(4'h9):(1'h0)] wire52;
  wire [(2'h2):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire15;
  reg signed [(2'h3):(1'h0)] reg58 = (1'h0);
  assign y = {wire65,
                 wire64,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire57,
                 wire56,
                 wire54,
                 wire52,
                 wire31,
                 wire15,
                 reg58,
                 (1'h0)};
  assign wire15 = wire11;
  module16 #() modinst32 (wire31, clk, wire14, wire11, wire13, wire12);
  module33 #() modinst53 (.wire37(wire13), .y(wire52), .wire36(wire11), .wire35(wire14), .wire34(wire15), .clk(clk));
  module33 #() modinst55 (.wire35(wire31), .wire36(wire15), .wire37(wire52), .wire34(wire12), .clk(clk), .y(wire54));
  assign wire56 = $signed((&($unsigned((8'h9e)) ?
                      wire31[(1'h0):(1'h0)] : (wire12 ? wire54 : wire52))));
  assign wire57 = $unsigned($unsigned(({wire56} < wire56)));
  always
    @(posedge clk) begin
      reg58 <= ($unsigned(wire14) ?
          $unsigned(((wire56 ? wire57 : (8'ha8)) ?
              (^~wire13) : (~&wire15))) : (($signed(wire52) ?
                  wire57[(2'h2):(1'h0)] : $unsigned(wire54)) ?
              $signed((wire57 - wire14)) : $signed((8'hb0))));
    end
  assign wire59 = wire54;
  assign wire60 = wire15;
  assign wire61 = (wire52[(1'h1):(1'h1)] ? (~&wire31) : (8'ha5));
  module33 #() modinst63 (.wire34(wire11), .wire36(wire54), .y(wire62), .wire37(wire61), .wire35(wire31), .clk(clk));
  assign wire64 = (~^{({wire54} << ((8'ha4) >> wire59))});
  module16 #() modinst66 (wire65, clk, wire60, wire61, wire14, wire11);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module33  (y, clk, wire37, wire36, wire35, wire34);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire37;
  input wire signed [(4'h8):(1'h0)] wire36;
  input wire signed [(2'h2):(1'h0)] wire35;
  input wire signed [(2'h3):(1'h0)] wire34;
  wire signed [(3'h4):(1'h0)] wire51;
  wire signed [(4'hb):(1'h0)] wire50;
  wire signed [(2'h3):(1'h0)] wire43;
  wire signed [(2'h3):(1'h0)] wire42;
  wire signed [(4'h8):(1'h0)] wire41;
  wire signed [(4'hb):(1'h0)] wire40;
  wire [(4'ha):(1'h0)] wire39;
  wire signed [(4'h9):(1'h0)] wire38;
  reg signed [(2'h2):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg46 = (1'h0);
  reg [(4'h8):(1'h0)] reg45 = (1'h0);
  reg [(3'h4):(1'h0)] reg44 = (1'h0);
  assign y = {wire51,
                 wire50,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 (1'h0)};
  assign wire38 = {wire34};
  assign wire39 = $signed(wire35);
  assign wire40 = $signed((wire35 || wire36[(3'h4):(2'h2)]));
  assign wire41 = (($unsigned((8'ha0)) ^~ wire38[(1'h0):(1'h0)]) ?
                      ((wire38 ? (wire36 ? wire36 : wire34) : (~|wire38)) ?
                          wire39[(3'h6):(2'h2)] : $signed($signed(wire35))) : $signed(wire39));
  assign wire42 = {$signed(wire37[(2'h2):(1'h1)])};
  assign wire43 = {(+wire39[(4'h8):(1'h0)])};
  always
    @(posedge clk) begin
      if ((({(8'hb0)} ?
          wire43 : wire38[(4'h8):(1'h1)]) >= (($signed(wire36) - ((8'haf) << wire34)) ?
          $signed((wire42 - wire35)) : (((8'hac) || (8'hae)) ~^ $unsigned(wire38)))))
        begin
          if (($unsigned((wire43[(1'h1):(1'h0)] != wire36)) <= wire41[(1'h1):(1'h0)]))
            begin
              reg44 <= $unsigned($signed((wire36[(1'h1):(1'h1)] ?
                  wire37[(3'h4):(1'h0)] : {wire41})));
              reg45 <= $signed(($signed($unsigned(wire42)) ?
                  (!(!wire35)) : ($unsigned(wire37) == (wire41 >> reg44))));
              reg46 <= $signed($unsigned((^(8'hac))));
            end
          else
            begin
              reg44 <= {$unsigned((reg44[(1'h1):(1'h1)] ? reg44 : wire39))};
            end
          reg47 <= $signed((+(8'ha6)));
          reg48 <= ((((~^wire41) ?
              (wire42 ? reg45 : wire42) : $unsigned(wire34)) < (~(wire34 ?
              wire34 : wire36))) || wire38[(4'h8):(2'h2)]);
        end
      else
        begin
          reg44 <= ((^({wire36} + reg47)) ?
              wire35 : ({((8'ha3) ? wire35 : wire40)} <= (wire43 ?
                  wire40 : {wire37})));
        end
      reg49 <= (|(~^reg45[(3'h6):(3'h4)]));
    end
  assign wire50 = (&wire38[(3'h7):(3'h4)]);
  assign wire51 = wire37[(2'h3):(2'h3)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16
#(parameter param30 = {{(((8'ha1) - (8'haa)) ~^ {(8'ha6)})}})
(y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire20;
  input wire signed [(3'h7):(1'h0)] wire19;
  input wire signed [(2'h2):(1'h0)] wire18;
  input wire [(4'h9):(1'h0)] wire17;
  wire [(4'h8):(1'h0)] wire29;
  wire [(4'h8):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire27;
  wire signed [(4'ha):(1'h0)] wire26;
  wire signed [(3'h7):(1'h0)] wire25;
  wire signed [(3'h5):(1'h0)] wire24;
  wire signed [(4'hb):(1'h0)] wire23;
  wire [(4'ha):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire21;
  assign y = {wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 (1'h0)};
  assign wire21 = ($unsigned(wire19) ? wire20[(4'h8):(4'h8)] : wire17);
  assign wire22 = {{(8'had)}};
  assign wire23 = wire18[(2'h2):(2'h2)];
  assign wire24 = (-({$signed(wire17)} ? $unsigned({wire21}) : wire23));
  assign wire25 = (!$signed({(^wire19)}));
  assign wire26 = $unsigned($unsigned($signed({wire19})));
  assign wire27 = $signed(wire24);
  assign wire28 = $signed($signed(((+wire21) ?
                      wire19 : (wire24 ? wire24 : wire25))));
  assign wire29 = wire22[(3'h4):(1'h0)];
endmodule