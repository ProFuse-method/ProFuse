(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(3'h5):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire50;
  wire [(3'h4):(1'h0)] wire49;
  wire signed [(3'h7):(1'h0)] wire48;
  wire signed [(3'h5):(1'h0)] wire47;
  wire signed [(4'ha):(1'h0)] wire46;
  wire [(3'h7):(1'h0)] wire45;
  wire signed [(3'h4):(1'h0)] wire44;
  wire [(2'h3):(1'h0)] wire42;
  wire [(4'h9):(1'h0)] wire8;
  wire signed [(4'ha):(1'h0)] wire7;
  wire signed [(4'h8):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire4;
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire42,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = (+(~^((wire1 ? (8'haa) : wire0) < $unsigned(wire0))));
  assign wire5 = $unsigned($unsigned(($unsigned((8'ha5)) & (|wire4))));
  assign wire6 = $unsigned($unsigned((wire0 ? {wire0} : $signed(wire1))));
  assign wire7 = wire5[(3'h4):(3'h4)];
  assign wire8 = $unsigned((^$signed((wire3 ? wire6 : wire2))));
  module9 #() modinst43 (wire42, clk, wire3, wire7, wire1, wire8);
  assign wire44 = ((($signed((8'ha7)) || $signed((8'hab))) ?
                      wire0[(2'h3):(2'h2)] : $unsigned($unsigned(wire2))) && ({wire3} && $unsigned($signed(wire4))));
  assign wire45 = (&{$unsigned((wire3 ? wire42 : wire5))});
  assign wire46 = (8'hac);
  assign wire47 = wire42;
  assign wire48 = (wire6[(4'h8):(1'h0)] + wire0[(3'h5):(3'h5)]);
  assign wire49 = wire44;
  assign wire50 = (wire49[(1'h0):(1'h0)] ?
                      {($signed(wire5) ?
                              {wire2} : $signed(wire46))} : $unsigned($signed((wire45 ?
                          wire5 : wire46))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9  (y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h25):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire13;
  input wire [(4'ha):(1'h0)] wire12;
  input wire [(4'hb):(1'h0)] wire11;
  input wire signed [(4'h8):(1'h0)] wire10;
  wire [(3'h6):(1'h0)] wire41;
  wire signed [(3'h6):(1'h0)] wire40;
  wire [(3'h7):(1'h0)] wire39;
  wire signed [(3'h6):(1'h0)] wire37;
  wire [(4'hb):(1'h0)] wire14;
  assign y = {wire41, wire40, wire39, wire37, wire14, (1'h0)};
  assign wire14 = $unsigned(((^~(~wire11)) ?
                      ((~^wire11) >> ((8'hac) - wire10)) : wire10[(3'h5):(3'h5)]));
  module15 #() modinst38 (.clk(clk), .wire16(wire14), .y(wire37), .wire17(wire10), .wire18(wire12), .wire19(wire11));
  assign wire39 = $unsigned($unsigned({{wire14}}));
  assign wire40 = wire10[(3'h4):(2'h3)];
  assign wire41 = wire39;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15  (y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h6d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire19;
  input wire signed [(4'ha):(1'h0)] wire18;
  input wire [(3'h7):(1'h0)] wire17;
  input wire signed [(4'hb):(1'h0)] wire16;
  wire signed [(4'h8):(1'h0)] wire36;
  wire [(4'h9):(1'h0)] wire35;
  wire [(3'h6):(1'h0)] wire34;
  wire [(3'h5):(1'h0)] wire30;
  wire signed [(2'h2):(1'h0)] wire29;
  wire signed [(4'h8):(1'h0)] wire28;
  wire signed [(4'h9):(1'h0)] wire24;
  wire [(3'h5):(1'h0)] wire22;
  wire [(2'h3):(1'h0)] wire21;
  reg [(3'h5):(1'h0)] reg33 = (1'h0);
  reg [(3'h6):(1'h0)] reg32 = (1'h0);
  reg [(4'h9):(1'h0)] reg31 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg27 = (1'h0);
  reg [(4'ha):(1'h0)] reg26 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg20 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire30,
                 wire29,
                 wire28,
                 wire24,
                 wire22,
                 wire21,
                 reg33,
                 reg32,
                 reg31,
                 reg27,
                 reg26,
                 reg25,
                 reg23,
                 reg20,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg20 <= $signed($signed({{wire18}}));
    end
  assign wire21 = {(!$unsigned((reg20 ? reg20 : wire19)))};
  assign wire22 = wire16[(2'h3):(1'h0)];
  always
    @(posedge clk) begin
      reg23 <= $signed($signed(wire21));
    end
  assign wire24 = (^~wire18);
  always
    @(posedge clk) begin
      reg25 <= (8'hb0);
      if (($signed($signed($unsigned((8'h9e)))) != $unsigned($unsigned($signed(reg23)))))
        begin
          reg26 <= $unsigned(($unsigned((reg23 ?
              wire24 : (8'h9e))) << (8'haf)));
        end
      else
        begin
          if ((wire19[(4'h8):(3'h4)] ?
              (~(wire24[(1'h0):(1'h0)] ?
                  (~&reg25) : $signed((8'h9e)))) : ((!(wire16 * wire17)) ?
                  ($signed((8'haa)) | (8'ha7)) : (wire18[(3'h7):(1'h1)] ?
                      $unsigned(wire16) : (~wire19)))))
            begin
              reg26 <= ($signed(($signed(wire21) ?
                      (wire19 - reg20) : (reg25 <<< (8'h9e)))) ?
                  (wire18 >= reg20[(2'h3):(2'h2)]) : $unsigned(($signed(wire17) && {wire24})));
            end
          else
            begin
              reg26 <= $signed(wire16[(2'h3):(2'h3)]);
            end
        end
      reg27 <= $signed(($unsigned({wire16}) | $signed(reg23[(1'h0):(1'h0)])));
    end
  assign wire28 = reg23;
  assign wire29 = $signed($unsigned((+$signed(wire22))));
  assign wire30 = wire22[(2'h3):(1'h1)];
  always
    @(posedge clk) begin
      reg31 <= ({$unsigned((wire28 ? wire24 : wire18))} || (8'h9e));
      reg32 <= $unsigned(wire30);
      reg33 <= (^wire29[(1'h1):(1'h0)]);
    end
  assign wire34 = $unsigned(reg23[(2'h2):(2'h2)]);
  assign wire35 = (($unsigned({reg23}) <= (^reg20[(2'h3):(1'h0)])) ?
                      ($unsigned((reg32 ?
                          reg33 : wire16)) >>> ($unsigned(wire34) ?
                          $unsigned(wire24) : $unsigned(wire17))) : $unsigned({$signed(wire22)}));
  assign wire36 = (({(wire29 ? wire22 : reg32)} ?
                      $unsigned((~wire19)) : ($unsigned(reg31) && (wire30 < (8'ha3)))) || {$signed((wire34 + reg32))});
endmodule