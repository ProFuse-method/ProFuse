(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param65 = (~&{((8'ha9) ? ((8'ha0) ^~ (8'ha0)) : ((8'ha4) ? (8'haa) : (8'hac)))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire64;
  wire signed [(4'h9):(1'h0)] wire63;
  wire [(4'h8):(1'h0)] wire61;
  wire [(2'h3):(1'h0)] wire60;
  wire [(3'h7):(1'h0)] wire59;
  wire [(2'h2):(1'h0)] wire57;
  wire signed [(4'ha):(1'h0)] wire56;
  wire [(3'h6):(1'h0)] wire55;
  wire [(3'h6):(1'h0)] wire53;
  wire signed [(4'h8):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire4;
  assign y = {wire64,
                 wire63,
                 wire61,
                 wire60,
                 wire59,
                 wire57,
                 wire56,
                 wire55,
                 wire53,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = wire1;
  assign wire5 = ((wire2[(3'h4):(2'h2)] ?
                         (wire1 * $signed(wire2)) : ($signed(wire3) ?
                             wire4 : (^wire2))) ?
                     wire3[(4'h8):(1'h0)] : wire2);
  module6 #() modinst54 (.wire7(wire3), .clk(clk), .wire8(wire1), .y(wire53), .wire10(wire2), .wire9(wire0));
  assign wire55 = $unsigned(wire2);
  assign wire56 = {wire3[(3'h6):(3'h6)]};
  module25 #() modinst58 (.wire27(wire55), .wire28(wire5), .y(wire57), .clk(clk), .wire29(wire0), .wire26(wire53));
  assign wire59 = wire53;
  assign wire60 = wire1[(1'h1):(1'h0)];
  module6 #() modinst62 (.wire9(wire56), .clk(clk), .wire10(wire0), .wire8(wire5), .wire7(wire59), .y(wire61));
  assign wire63 = ($signed(wire0[(4'hb):(3'h7)]) ?
                      (!(^~$signed(wire4))) : wire1);
  assign wire64 = $unsigned((|((wire56 | (8'hab)) ?
                      $unsigned(wire5) : wire3[(2'h3):(1'h0)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param52 = (^~((^~((8'hab) ? (8'hac) : (8'haf))) ? (((8'h9d) ^~ (8'had)) ? (&(8'h9c)) : ((8'ha9) || (8'h9d))) : (((8'ha5) * (8'hae)) | (~(8'ha1))))))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h6c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire10;
  input wire [(4'h8):(1'h0)] wire9;
  input wire signed [(3'h5):(1'h0)] wire8;
  input wire [(3'h7):(1'h0)] wire7;
  wire [(3'h7):(1'h0)] wire46;
  wire signed [(3'h6):(1'h0)] wire37;
  wire signed [(4'hb):(1'h0)] wire23;
  reg signed [(3'h5):(1'h0)] reg51 = (1'h0);
  reg [(4'h9):(1'h0)] reg50 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg49 = (1'h0);
  reg [(2'h3):(1'h0)] reg48 = (1'h0);
  reg [(4'ha):(1'h0)] reg47 = (1'h0);
  reg [(3'h7):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg44 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg43 = (1'h0);
  reg [(3'h7):(1'h0)] reg42 = (1'h0);
  reg [(3'h6):(1'h0)] reg41 = (1'h0);
  reg [(4'hb):(1'h0)] reg40 = (1'h0);
  reg [(3'h6):(1'h0)] reg39 = (1'h0);
  assign y = {wire46,
                 wire37,
                 wire23,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 (1'h0)};
  module11 #() modinst24 (.wire13(wire10), .wire12(wire8), .wire14(wire7), .clk(clk), .wire15(wire9), .y(wire23));
  module25 #() modinst38 (wire37, clk, wire23, wire9, wire10, wire7);
  always
    @(posedge clk) begin
      if ((8'ha5))
        begin
          if (wire8[(1'h0):(1'h0)])
            begin
              reg39 <= ((-{$unsigned((8'ha1))}) ?
                  {(wire9 ~^ $unsigned((8'ha9)))} : ({$unsigned(wire8)} ?
                      $signed((|wire9)) : ($signed(wire7) ?
                          $unsigned(wire8) : wire23)));
            end
          else
            begin
              reg39 <= $unsigned((^~(reg39 ?
                  ((8'ha7) ? reg39 : reg39) : wire23[(2'h3):(2'h2)])));
              reg40 <= wire37[(2'h3):(2'h3)];
              reg41 <= ($unsigned(wire23[(4'h8):(1'h0)]) - {wire37[(3'h4):(2'h3)]});
            end
          reg42 <= $unsigned($unsigned({(~reg41)}));
          reg43 <= (8'ha5);
        end
      else
        begin
          reg39 <= reg41;
          reg40 <= (-$signed($unsigned(((8'hae) != reg41))));
        end
      reg44 <= (^~$signed(reg43[(2'h2):(1'h1)]));
      reg45 <= ($signed($unsigned($unsigned(wire7))) | (8'had));
    end
  assign wire46 = ($unsigned((wire10[(3'h4):(2'h2)] ?
                      (reg41 <= reg39) : $unsigned((8'haf)))) < {$unsigned($unsigned(wire10))});
  always
    @(posedge clk) begin
      if ($signed((&($signed(wire10) ? wire8 : {wire37}))))
        begin
          if ({reg45[(3'h7):(3'h4)]})
            begin
              reg47 <= (reg42[(3'h4):(1'h0)] ~^ $unsigned($unsigned((wire37 ?
                  reg40 : reg39))));
              reg48 <= reg45;
              reg49 <= ($unsigned(reg42) <= reg42[(3'h7):(2'h3)]);
            end
          else
            begin
              reg47 <= $signed(wire23[(4'ha):(1'h0)]);
            end
          reg50 <= {($unsigned((reg47 ? reg43 : (8'ha1))) * (&(-reg48)))};
        end
      else
        begin
          if (wire8[(1'h0):(1'h0)])
            begin
              reg47 <= reg45;
              reg48 <= (($signed(reg49) ?
                  ((!reg49) ?
                      reg49[(1'h0):(1'h0)] : reg40[(3'h5):(3'h4)]) : wire7[(1'h1):(1'h0)]) > $signed($unsigned((~(8'h9d)))));
              reg49 <= ({$unsigned((wire46 <= (8'ha8)))} ?
                  wire23 : ((^~(wire37 ? wire8 : reg42)) ?
                      (reg42 ?
                          wire46[(3'h4):(2'h3)] : ((8'ha7) ?
                              wire37 : wire46)) : $unsigned((~^reg44))));
            end
          else
            begin
              reg47 <= $signed(($unsigned($unsigned(wire7)) + (8'hae)));
              reg48 <= (-$signed(reg44[(3'h6):(3'h6)]));
              reg49 <= reg41;
            end
          reg50 <= wire8;
          reg51 <= ($unsigned(reg47[(2'h2):(2'h2)]) ?
              reg49[(1'h0):(1'h0)] : $signed((reg40 ?
                  $unsigned(wire7) : wire37)));
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25  (y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h3d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire29;
  input wire [(3'h7):(1'h0)] wire28;
  input wire signed [(3'h4):(1'h0)] wire27;
  input wire signed [(2'h2):(1'h0)] wire26;
  wire [(4'h9):(1'h0)] wire36;
  wire signed [(4'hb):(1'h0)] wire35;
  wire signed [(3'h7):(1'h0)] wire34;
  wire signed [(4'ha):(1'h0)] wire33;
  wire signed [(4'h8):(1'h0)] wire31;
  wire signed [(4'h8):(1'h0)] wire30;
  reg signed [(3'h7):(1'h0)] reg32 = (1'h0);
  assign y = {wire36, wire35, wire34, wire33, wire31, wire30, reg32, (1'h0)};
  assign wire30 = (~|$unsigned($signed((wire29 ? wire28 : wire29))));
  assign wire31 = wire28[(2'h3):(1'h0)];
  always
    @(posedge clk) begin
      if ({wire31[(3'h5):(3'h4)]})
        begin
          reg32 <= (~&(^~wire31[(2'h3):(1'h1)]));
        end
      else
        begin
          reg32 <= ({reg32[(3'h5):(1'h1)]} ^ (wire27[(3'h4):(2'h2)] == wire29[(3'h5):(1'h1)]));
        end
    end
  assign wire33 = ($unsigned({(&wire27)}) | (wire29[(1'h0):(1'h0)] ?
                      reg32 : (&(~wire29))));
  assign wire34 = wire30;
  assign wire35 = wire34[(2'h2):(1'h1)];
  assign wire36 = $signed({(((8'ha6) <= wire28) > $unsigned(wire29))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param22 = (~|{(~|(~^(8'ha5)))}))
(y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire15;
  input wire [(3'h7):(1'h0)] wire14;
  input wire [(4'h9):(1'h0)] wire13;
  input wire [(3'h4):(1'h0)] wire12;
  wire signed [(3'h5):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire20;
  wire signed [(3'h5):(1'h0)] wire19;
  wire signed [(3'h4):(1'h0)] wire18;
  wire signed [(2'h3):(1'h0)] wire17;
  wire [(4'h8):(1'h0)] wire16;
  assign y = {wire21, wire20, wire19, wire18, wire17, wire16, (1'h0)};
  assign wire16 = (({$signed(wire12)} != wire14) & (~{$unsigned((8'haa))}));
  assign wire17 = wire15[(2'h3):(1'h0)];
  assign wire18 = {(|({wire13} ? $unsigned(wire15) : (wire12 <= (8'hb0))))};
  assign wire19 = (($unsigned(wire16) + (wire15 ?
                      (wire16 ? wire13 : wire12) : $signed(wire14))) ~^ wire15);
  assign wire20 = wire13;
  assign wire21 = $signed((($signed(wire17) ? (wire15 >= wire17) : {(8'ha0)}) ?
                      wire12 : (wire18[(1'h0):(1'h0)] ?
                          (wire14 + wire15) : wire18[(3'h4):(2'h2)])));
endmodule