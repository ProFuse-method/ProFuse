(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h1cc):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire4;
  input wire [(4'hc):(1'h0)] wire3;
  input wire [(5'h14):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire [(4'hc):(1'h0)] wire45;
  wire [(5'h12):(1'h0)] wire44;
  wire signed [(5'h10):(1'h0)] wire25;
  wire signed [(5'h13):(1'h0)] wire7;
  wire [(4'h9):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire5;
  reg [(2'h2):(1'h0)] reg42 = (1'h0);
  reg [(4'hc):(1'h0)] reg41 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg39 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg38 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg36 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg33 = (1'h0);
  reg [(3'h6):(1'h0)] reg30 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg28 = (1'h0);
  reg [(4'h9):(1'h0)] reg23 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg22 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg21 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg20 = (1'h0);
  reg [(5'h11):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg17 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg16 = (1'h0);
  reg [(5'h15):(1'h0)] reg15 = (1'h0);
  reg [(5'h10):(1'h0)] reg12 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg43 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar40 = (1'h0);
  reg [(4'h8):(1'h0)] reg35 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar34 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar32 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg31 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg29 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar27 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar26 = (1'h0);
  reg [(4'he):(1'h0)] reg24 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar19 = (1'h0);
  reg [(5'h15):(1'h0)] forvar14 = (1'h0);
  reg [(5'h12):(1'h0)] reg13 = (1'h0);
  reg [(2'h3):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg10 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar9 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar8 = (1'h0);
  assign y = {wire45,
                 wire44,
                 wire25,
                 wire7,
                 wire6,
                 wire5,
                 reg42,
                 reg41,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg33,
                 reg30,
                 reg28,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg12,
                 reg43,
                 forvar40,
                 reg35,
                 forvar34,
                 forvar32,
                 reg31,
                 reg29,
                 forvar27,
                 forvar26,
                 reg24,
                 forvar19,
                 forvar14,
                 reg13,
                 reg11,
                 reg10,
                 forvar9,
                 forvar8,
                 (1'h0)};
  assign wire5 = {wire2};
  assign wire6 = {(7'h43)};
  assign wire7 = ((^~((wire6 ? $unsigned(wire2) : $signed(wire3)) ?
                     $signed(wire2) : ({wire2} ?
                         (8'hb3) : (~^(8'hb2))))) ~^ (+(8'ha1)));
  always
    @(posedge clk) begin
      for (forvar8 = (1'h0); (forvar8 < (2'h2)); forvar8 = (forvar8 + (1'h1)))
        begin
          for (forvar9 = (1'h0); (forvar9 < (1'h0)); forvar9 = (forvar9 + (1'h1)))
            begin
              reg10 = wire5;
              reg11 = $signed((wire0 ^~ ((((8'had) & forvar9) ?
                  (~^wire1) : (&wire7)) >> forvar9)));
              reg12 <= ($unsigned((~wire3)) ?
                  ($signed($unsigned(reg11)) ?
                      ($unsigned(forvar8) ?
                          {(&forvar8),
                              {wire7,
                                  wire3}} : wire0[(1'h1):(1'h1)]) : ({(!wire2)} ?
                          reg10 : $unsigned((wire4 && (8'hb2))))) : forvar8[(1'h0):(1'h0)]);
              reg13 = $signed(((~|(8'h9e)) ?
                  {$unsigned($signed((8'ha9)))} : wire0));
            end
          for (forvar14 = (1'h0); (forvar14 < (2'h3)); forvar14 = (forvar14 + (1'h1)))
            begin
              reg15 <= reg13[(4'hd):(3'h6)];
              reg16 <= wire2;
              reg17 <= $signed(((wire2[(4'hf):(4'h9)] ?
                      {$unsigned(reg12), forvar9} : reg13) ?
                  (^wire6[(3'h6):(2'h3)]) : reg13[(5'h11):(1'h1)]));
            end
          reg18 <= ((^{($unsigned(wire0) ? (wire3 ? reg11 : wire5) : reg13)}) ?
              (reg15 << reg17[(1'h1):(1'h0)]) : (+$signed(wire0)));
          for (forvar19 = (1'h0); (forvar19 < (1'h1)); forvar19 = (forvar19 + (1'h1)))
            begin
              reg20 <= reg16[(1'h1):(1'h1)];
              reg21 <= (~&$unsigned((-(^wire7))));
              reg22 <= $unsigned(((((^reg20) > (wire5 ?
                  reg20 : wire1)) & $unsigned(wire0)) == wire4[(3'h6):(1'h0)]));
              reg23 <= (8'ha0);
            end
          reg24 = ($unsigned((+$signed((wire6 <= wire6)))) ?
              reg21[(1'h1):(1'h0)] : reg10);
        end
    end
  assign wire25 = $signed($unsigned($unsigned((wire4[(3'h5):(2'h3)] ^~ wire7[(3'h5):(2'h2)]))));
  always
    @(posedge clk) begin
      for (forvar26 = (1'h0); (forvar26 < (1'h1)); forvar26 = (forvar26 + (1'h1)))
        begin
          for (forvar27 = (1'h0); (forvar27 < (2'h3)); forvar27 = (forvar27 + (1'h1)))
            begin
              reg28 <= {({((!wire3) ?
                          reg12 : {reg20})} >> reg12[(1'h0):(1'h0)]),
                  ((reg20[(1'h1):(1'h1)] ?
                          ({reg15} ?
                              (reg15 << wire2) : reg23) : ($unsigned((8'ha4)) ?
                              (reg23 ? wire3 : reg23) : wire7)) ?
                      $signed($signed(((8'hae) & wire7))) : $unsigned(wire6[(3'h7):(3'h6)]))};
              reg29 = (~^$unsigned(wire4));
              reg30 <= wire25[(5'h10):(3'h5)];
              reg31 = (((({reg21, wire6} <<< (reg21 || reg12)) ?
                      reg16[(3'h4):(3'h4)] : wire25) ?
                  ({{wire6}} ?
                      ($unsigned(wire0) ?
                          (reg15 ?
                              reg12 : wire0) : $signed(reg28)) : (-$signed(wire4))) : (+(7'h43))) >= reg29[(1'h0):(1'h0)]);
            end
          for (forvar32 = (1'h0); (forvar32 < (2'h2)); forvar32 = (forvar32 + (1'h1)))
            begin
              reg33 <= {$unsigned(wire6),
                  ((^~(&$unsigned(reg23))) ?
                      $unsigned($signed((reg15 ?
                          wire1 : reg28))) : ($signed(((7'h43) && forvar32)) ?
                          reg22 : ($signed(forvar27) && reg15)))};
            end
          for (forvar34 = (1'h0); (forvar34 < (1'h1)); forvar34 = (forvar34 + (1'h1)))
            begin
              reg35 = $signed(reg29);
              reg36 <= wire6;
              reg37 <= {(8'ha4), reg22[(3'h5):(3'h4)]};
              reg38 <= reg12[(4'hd):(3'h6)];
              reg39 <= (($unsigned($unsigned($unsigned(reg35))) | (wire2 ?
                  $unsigned(((7'h43) >= reg29)) : ((~|(8'hb2)) ?
                      $unsigned(reg30) : ((8'hb0) ?
                          reg21 : (8'hbd))))) - $unsigned({(^(forvar32 ?
                      reg35 : reg15)),
                  $unsigned((reg22 <<< reg35))}));
            end
          for (forvar40 = (1'h0); (forvar40 < (2'h2)); forvar40 = (forvar40 + (1'h1)))
            begin
              reg41 <= ((&((reg39[(1'h1):(1'h0)] ?
                          $unsigned(forvar26) : $signed(wire6)) ?
                      $unsigned({reg17}) : (7'h43))) ?
                  (($unsigned(reg30) != ((^~wire7) ?
                          $unsigned(wire0) : (wire6 <= reg12))) ?
                      wire25[(3'h5):(1'h0)] : ($unsigned(reg37) ?
                          reg37[(4'h8):(1'h0)] : ((^(8'ha6)) ?
                              (~|reg21) : (^~wire2)))) : ($unsigned(((+reg23) ?
                      reg37 : (reg23 <= forvar34))) ~^ $signed(forvar26[(2'h2):(1'h0)])));
              reg42 <= (~(~|$unsigned($unsigned({reg39}))));
              reg43 = ($unsigned(reg29[(1'h1):(1'h1)]) ?
                  reg23[(1'h0):(1'h0)] : (wire7[(3'h5):(2'h2)] > reg38));
            end
        end
    end
  assign wire44 = wire2[(5'h12):(1'h1)];
  assign wire45 = ((~|$signed(reg37[(4'hc):(3'h7)])) << {((8'hb6) ?
                          {$signed(reg22),
                              $signed(reg30)} : (~wire0[(2'h3):(1'h1)]))});
endmodule