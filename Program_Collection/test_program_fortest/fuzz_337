(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param59 = (^~(&(((8'h9e) > (8'ha0)) << {(8'haf)}))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h18):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(2'h3):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire58;
  wire [(2'h3):(1'h0)] wire57;
  wire [(2'h3):(1'h0)] wire56;
  wire [(4'h8):(1'h0)] wire54;
  wire [(3'h5):(1'h0)] wire4;
  assign y = {wire58, wire57, wire56, wire54, wire4, (1'h0)};
  assign wire4 = ((8'ha9) ?
                     $signed(((!wire0) <= {wire0})) : wire1[(2'h2):(1'h0)]);
  module5 #() modinst55 (wire54, clk, wire4, wire3, wire1, wire0);
  assign wire56 = wire1[(3'h5):(2'h2)];
  assign wire57 = (($signed(((8'hab) != wire56)) | ((wire0 ~^ wire0) & wire2)) & ((wire2[(1'h1):(1'h1)] - {(8'ha2)}) + ($unsigned(wire2) ?
                      wire54[(1'h0):(1'h0)] : $signed(wire56))));
  assign wire58 = (-$unsigned((~wire0[(1'h0):(1'h0)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param53 = ((({(8'hb0)} << ((8'had) != (8'ha5))) | (8'h9c)) ? ((((8'ha3) ? (8'ha2) : (8'ha9)) ? ((8'ha4) && (8'hac)) : ((8'ha1) ? (8'ha6) : (8'hac))) ? ({(8'haa)} == {(8'ha3)}) : ({(8'ha4)} - ((8'h9e) ? (8'ha5) : (8'ha2)))) : (~|(^(+(8'ha0))))))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h7e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(3'h4):(1'h0)] wire7;
  input wire signed [(4'h8):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire47;
  wire signed [(4'h9):(1'h0)] wire46;
  wire [(3'h5):(1'h0)] wire45;
  wire [(4'hb):(1'h0)] wire44;
  wire signed [(4'ha):(1'h0)] wire43;
  wire [(2'h3):(1'h0)] wire40;
  wire signed [(3'h6):(1'h0)] wire39;
  wire [(2'h3):(1'h0)] wire37;
  wire [(3'h7):(1'h0)] wire12;
  wire signed [(2'h3):(1'h0)] wire11;
  wire signed [(3'h6):(1'h0)] wire10;
  reg signed [(4'h9):(1'h0)] reg52 = (1'h0);
  reg [(4'h9):(1'h0)] reg51 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg50 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg49 = (1'h0);
  reg [(4'h9):(1'h0)] reg48 = (1'h0);
  reg [(4'h8):(1'h0)] reg42 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg41 = (1'h0);
  assign y = {wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire40,
                 wire39,
                 wire37,
                 wire12,
                 wire11,
                 wire10,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg42,
                 reg41,
                 (1'h0)};
  assign wire10 = $unsigned(wire8);
  assign wire11 = ($unsigned($signed((wire6 ?
                      wire8 : wire6))) <= $unsigned(wire9));
  assign wire12 = wire8[(3'h5):(2'h3)];
  module13 #() modinst38 (.wire17(wire6), .wire14(wire8), .clk(clk), .wire15(wire7), .wire16(wire12), .y(wire37));
  assign wire39 = wire7;
  assign wire40 = {{{$unsigned(wire10)}}};
  always
    @(posedge clk) begin
      reg41 <= wire9[(1'h1):(1'h1)];
      reg42 <= wire9;
    end
  assign wire43 = ((-(+wire7[(1'h0):(1'h0)])) >= (+(|{(8'h9f)})));
  assign wire44 = (8'hab);
  assign wire45 = wire44;
  assign wire46 = $unsigned((~$unsigned(((8'ha7) && wire6))));
  assign wire47 = wire12[(3'h6):(3'h4)];
  always
    @(posedge clk) begin
      if ((wire6[(3'h6):(3'h6)] ?
          wire39[(1'h0):(1'h0)] : ((wire47[(3'h5):(3'h4)] >= (&wire12)) | wire37[(2'h3):(1'h1)])))
        begin
          reg48 <= (~((wire9[(1'h1):(1'h1)] >= (wire6 ? wire6 : (8'ha4))) ?
              (~wire7[(1'h0):(1'h0)]) : reg42[(4'h8):(4'h8)]));
          if (reg48[(4'h9):(2'h3)])
            begin
              reg49 <= $signed(reg42);
            end
          else
            begin
              reg49 <= $unsigned(wire8[(2'h3):(1'h1)]);
              reg50 <= wire47;
            end
          reg51 <= wire43;
        end
      else
        begin
          reg48 <= wire6[(2'h2):(1'h1)];
        end
      reg52 <= ($unsigned($signed($signed((8'haf)))) ?
          $signed(wire37[(2'h2):(2'h2)]) : $unsigned((&(&wire12))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param36 = (((!(8'haa)) ? (~^(^~(8'ha5))) : (((8'hb0) ? (8'h9f) : (8'ha9)) ? ((8'h9e) ~^ (8'ha6)) : (~&(8'ha4)))) || ({((8'hae) <= (8'haf))} ? (8'ha8) : ({(8'h9d)} ? {(8'hb0)} : {(8'ha6)}))))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h72):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire17;
  input wire signed [(3'h7):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire15;
  input wire [(4'ha):(1'h0)] wire14;
  wire [(4'ha):(1'h0)] wire35;
  wire [(3'h6):(1'h0)] wire25;
  wire [(4'h8):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire22;
  wire [(3'h5):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire20;
  wire signed [(3'h4):(1'h0)] wire19;
  wire signed [(3'h7):(1'h0)] wire18;
  reg signed [(3'h4):(1'h0)] reg34 = (1'h0);
  reg [(3'h6):(1'h0)] reg33 = (1'h0);
  reg [(2'h2):(1'h0)] reg32 = (1'h0);
  reg [(3'h5):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg30 = (1'h0);
  reg [(3'h4):(1'h0)] reg29 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg26 = (1'h0);
  assign y = {wire35,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire18 = ($unsigned({$signed(wire16)}) ?
                      {wire15[(2'h2):(1'h0)]} : $unsigned($unsigned((wire16 ?
                          wire16 : wire16))));
  assign wire19 = $unsigned(wire18[(1'h1):(1'h1)]);
  assign wire20 = (((wire17 ?
                      ((8'ha3) ?
                          wire18 : wire15) : wire19) | (wire18 <= $unsigned(wire16))) - $unsigned($signed(wire19[(1'h0):(1'h0)])));
  assign wire21 = wire15[(1'h1):(1'h1)];
  assign wire22 = (8'h9e);
  assign wire23 = $unsigned((wire15[(1'h0):(1'h0)] <= (~^wire16[(3'h4):(2'h2)])));
  assign wire24 = {(8'ha5)};
  assign wire25 = ((((!wire23) ?
                              wire21[(3'h4):(2'h2)] : wire22[(4'h8):(2'h3)]) ?
                          $unsigned($unsigned(wire15)) : (~^(~wire19))) ?
                      wire22 : ($signed($unsigned(wire24)) <= {$signed(wire22)}));
  always
    @(posedge clk) begin
      reg26 <= ((wire14 >> wire18) ? (8'h9e) : (8'ha0));
      reg27 <= reg26[(3'h7):(2'h2)];
      if (((&(wire16 ?
          wire19[(1'h1):(1'h0)] : {wire25})) ^~ $signed(((~&wire18) <= reg26[(3'h5):(1'h1)]))))
        begin
          if ((~(-((wire15 < wire23) ?
              (wire22 ? wire14 : (8'h9c)) : (reg27 ? wire20 : wire17)))))
            begin
              reg28 <= {wire14};
            end
          else
            begin
              reg28 <= $unsigned(wire16[(1'h0):(1'h0)]);
              reg29 <= ((8'hb0) ? reg27 : $unsigned((~wire15[(2'h3):(2'h2)])));
              reg30 <= $signed((!$unsigned((8'ha5))));
            end
          if ((8'ha4))
            begin
              reg31 <= ($unsigned((wire15[(3'h4):(2'h3)] ?
                  $signed(wire17) : wire20)) >> (&reg29[(1'h0):(1'h0)]));
              reg32 <= $unsigned($signed(wire22));
              reg33 <= ($unsigned((8'ha4)) >= $signed(((wire20 > wire14) ?
                  $unsigned((8'ha4)) : $unsigned(reg31))));
            end
          else
            begin
              reg31 <= (reg32 ?
                  (&({reg28} ?
                      $unsigned(reg30) : (~&wire18))) : (-wire22[(3'h6):(3'h4)]));
              reg32 <= (^(((reg29 ?
                  reg32 : reg28) >> wire22) | $signed($unsigned(wire15))));
            end
          reg34 <= {wire21[(2'h3):(1'h0)]};
        end
      else
        begin
          reg28 <= $unsigned($signed((wire24 ? $unsigned(wire17) : wire15)));
        end
    end
  assign wire35 = ($signed($unsigned({wire15})) ?
                      (-(~(wire20 > reg33))) : wire24[(3'h6):(1'h1)]);
endmodule