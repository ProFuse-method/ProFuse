(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param38 = (-((-(8'hac)) * (~&((8'ha0) * (8'had))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h6b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire37;
  wire [(3'h4):(1'h0)] wire36;
  wire [(3'h6):(1'h0)] wire29;
  wire signed [(3'h7):(1'h0)] wire24;
  wire signed [(3'h6):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg34 = (1'h0);
  reg [(2'h2):(1'h0)] reg33 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg31 = (1'h0);
  reg [(3'h5):(1'h0)] reg30 = (1'h0);
  reg [(3'h5):(1'h0)] reg28 = (1'h0);
  reg [(4'h9):(1'h0)] reg27 = (1'h0);
  reg [(4'h8):(1'h0)] reg26 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire29,
                 wire24,
                 wire6,
                 wire5,
                 wire4,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg28,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire4 = ((wire2 ?
                         {((8'ha6) ? wire1 : wire0)} : (-(wire0 ?
                             wire0 : wire0))) ?
                     ((wire3[(1'h1):(1'h0)] ?
                         (wire1 & wire1) : (|wire0)) | ((wire0 ?
                             wire1 : wire0) ?
                         (wire1 < wire1) : wire3)) : wire2[(3'h4):(2'h2)]);
  assign wire5 = $signed((((wire1 ? wire2 : wire2) ?
                         (^wire4) : $unsigned(wire1)) ?
                     {(!wire1)} : (~&(wire2 - wire2))));
  assign wire6 = ($unsigned(wire1[(2'h3):(2'h2)]) & (({(8'ha7)} ?
                         wire3[(1'h1):(1'h1)] : (wire4 <<< wire2)) ?
                     wire4[(1'h1):(1'h1)] : $signed($signed(wire1))));
  module7 #() modinst25 (.wire10(wire3), .y(wire24), .clk(clk), .wire9(wire4), .wire11(wire5), .wire8(wire6));
  always
    @(posedge clk) begin
      reg26 <= wire24;
      reg27 <= wire1;
      reg28 <= $unsigned({{(wire2 ? wire24 : reg27)}});
    end
  assign wire29 = ((^~$signed(wire1)) * ($signed($unsigned(wire1)) ?
                      reg26[(3'h6):(3'h4)] : ($signed((8'hab)) ?
                          $unsigned(wire1) : reg27)));
  always
    @(posedge clk) begin
      reg30 <= $unsigned($signed($unsigned((reg26 ? wire1 : reg28))));
      if (($signed((wire24[(1'h0):(1'h0)] + $signed(wire2))) ?
          ($signed((wire6 ?
              wire3 : wire4)) < $signed($unsigned(wire4))) : $unsigned((&{wire24}))))
        begin
          reg31 <= (reg27[(1'h0):(1'h0)] > ({wire2} >>> $unsigned({(8'hab)})));
          reg32 <= wire6;
          reg33 <= $signed(($signed((~(8'hb0))) ?
              $unsigned((8'ha4)) : (wire5 ?
                  (reg28 | reg26) : (reg27 ? reg27 : (8'h9d)))));
        end
      else
        begin
          reg31 <= ({($unsigned(reg26) || $unsigned(reg27))} | reg31[(2'h3):(2'h2)]);
          if ((~((^(reg33 <= reg26)) || {(reg33 ? wire6 : reg26)})))
            begin
              reg32 <= $unsigned(($unsigned((wire24 ? wire29 : reg31)) ?
                  {((8'ha3) ? wire3 : reg27)} : reg30[(1'h1):(1'h1)]));
              reg33 <= $unsigned((&$signed(((8'haa) ? reg28 : reg26))));
              reg34 <= $signed($signed((wire0 ? reg28 : (8'h9d))));
            end
          else
            begin
              reg32 <= $signed($unsigned((!$signed(wire29))));
              reg33 <= (wire6[(1'h0):(1'h0)] ?
                  $signed((&(reg27 ? reg33 : reg32))) : (($signed(wire5) ?
                          reg28 : $signed((8'h9d))) ?
                      $unsigned(wire6) : {wire0[(4'h8):(3'h7)]}));
            end
        end
      reg35 <= {(reg34[(1'h1):(1'h1)] ? (8'h9c) : {{wire6}})};
    end
  assign wire36 = {$signed($unsigned(reg30[(3'h4):(2'h2)]))};
  assign wire37 = wire36;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire11;
  input wire signed [(3'h5):(1'h0)] wire10;
  input wire signed [(4'ha):(1'h0)] wire9;
  input wire signed [(2'h2):(1'h0)] wire8;
  wire signed [(3'h5):(1'h0)] wire23;
  wire signed [(3'h7):(1'h0)] wire22;
  wire [(4'h8):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  wire signed [(3'h6):(1'h0)] wire19;
  wire [(2'h3):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire12;
  reg signed [(4'h9):(1'h0)] reg15 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg14 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg13 = (1'h0);
  assign y = {wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire12,
                 reg15,
                 reg14,
                 reg13,
                 (1'h0)};
  assign wire12 = ($unsigned(wire8) < (((~^wire10) | {(8'ha3)}) ?
                      {wire10[(3'h4):(2'h2)]} : ({(8'had)} ?
                          (^wire9) : (wire10 >>> wire9))));
  always
    @(posedge clk) begin
      reg13 <= {($signed((wire9 ? wire8 : wire8)) ?
              $unsigned({wire8}) : $unsigned(wire9[(4'ha):(1'h0)]))};
      reg14 <= $signed((wire11[(3'h4):(2'h3)] * (-(wire10 ? wire10 : wire10))));
      reg15 <= {$signed(((~&reg13) ? {wire11} : $unsigned((8'hab))))};
    end
  assign wire16 = wire11[(3'h5):(1'h0)];
  assign wire17 = (~|(reg13[(3'h4):(2'h2)] ?
                      (|(~wire9)) : (~|$signed(wire10))));
  assign wire18 = $unsigned($signed(($signed(wire11) ?
                      ((8'h9f) ^ reg13) : {(8'hac)})));
  assign wire19 = (~((&$unsigned(wire8)) - ((wire12 >> reg15) ^~ $unsigned(reg15))));
  assign wire20 = (wire10[(2'h2):(1'h1)] - (({(8'ha8)} << wire12) <<< ($unsigned((8'h9f)) < $signed((8'ha7)))));
  assign wire21 = (wire12 ?
                      ($unsigned((wire8 ?
                          wire18 : wire10)) <<< (!(^~wire20))) : reg13[(3'h6):(1'h0)]);
  assign wire22 = ($signed((^{wire8})) ?
                      $signed($signed({wire20})) : wire12[(3'h6):(1'h0)]);
  assign wire23 = reg15[(3'h6):(3'h5)];
endmodule