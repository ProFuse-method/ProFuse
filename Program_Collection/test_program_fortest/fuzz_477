(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param95 = (!((8'ha8) << (~|((8'haa) >> (8'h9e))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h6d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire83;
  wire signed [(4'hb):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire4;
  wire [(4'hb):(1'h0)] wire85;
  wire [(3'h7):(1'h0)] wire86;
  wire [(4'hb):(1'h0)] wire87;
  wire [(3'h4):(1'h0)] wire88;
  wire signed [(3'h6):(1'h0)] wire92;
  wire [(4'ha):(1'h0)] wire93;
  reg [(3'h4):(1'h0)] reg5 = (1'h0);
  reg [(4'hb):(1'h0)] reg89 = (1'h0);
  reg [(4'h9):(1'h0)] reg90 = (1'h0);
  reg [(4'h8):(1'h0)] reg91 = (1'h0);
  assign y = {wire83,
                 wire23,
                 wire4,
                 wire85,
                 wire86,
                 wire87,
                 wire88,
                 wire92,
                 wire93,
                 reg5,
                 reg89,
                 reg90,
                 reg91,
                 (1'h0)};
  assign wire4 = {{$unsigned(wire0)}};
  always
    @(posedge clk) begin
      reg5 <= $unsigned((!(wire1[(3'h6):(3'h5)] >> $signed(wire1))));
    end
  module6 #() modinst24 (.clk(clk), .y(wire23), .wire8(wire0), .wire10(wire1), .wire9(wire3), .wire7(wire4));
  module25 #() modinst84 (wire83, clk, wire4, reg5, wire3, wire2);
  assign wire85 = wire23;
  assign wire86 = wire2;
  assign wire87 = ((~|{wire83[(3'h5):(2'h3)]}) > (-((~&(8'ha2)) <<< $signed(wire3))));
  assign wire88 = $signed(wire0[(4'h9):(4'h9)]);
  always
    @(posedge clk) begin
      if (wire86)
        begin
          if ((wire83 ?
              (-({wire83} ? $signed(wire3) : (^wire86))) : (($signed(wire1) ?
                      wire4 : (wire3 ~^ (8'ha1))) ?
                  wire0[(2'h3):(2'h3)] : (((8'ha9) <= wire23) >> wire1))))
            begin
              reg89 <= wire0[(1'h0):(1'h0)];
            end
          else
            begin
              reg89 <= wire3;
            end
        end
      else
        begin
          reg89 <= wire23[(2'h2):(2'h2)];
        end
      reg90 <= $signed((8'ha1));
      reg91 <= wire88;
    end
  assign wire92 = $unsigned((($signed(wire2) & (&wire88)) ?
                      wire0[(4'h8):(4'h8)] : wire1[(4'h8):(2'h2)]));
  module25 #() modinst94 (wire93, clk, wire85, wire3, reg89, wire23);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25  (y, clk, wire26, wire27, wire28, wire29);
  output wire [(32'h3d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire26;
  input wire [(3'h4):(1'h0)] wire27;
  input wire [(3'h6):(1'h0)] wire28;
  input wire [(4'hb):(1'h0)] wire29;
  wire [(4'h8):(1'h0)] wire61;
  wire signed [(3'h7):(1'h0)] wire63;
  wire [(4'h8):(1'h0)] wire64;
  wire signed [(4'ha):(1'h0)] wire65;
  wire [(4'h8):(1'h0)] wire66;
  wire signed [(2'h3):(1'h0)] wire68;
  wire [(3'h4):(1'h0)] wire69;
  wire signed [(3'h7):(1'h0)] wire81;
  reg signed [(3'h5):(1'h0)] reg67 = (1'h0);
  assign y = {wire61,
                 wire63,
                 wire64,
                 wire65,
                 wire66,
                 wire68,
                 wire69,
                 wire81,
                 reg67,
                 (1'h0)};
  module30 #() modinst62 (.wire31(wire28), .wire32(wire29), .clk(clk), .wire33(wire26), .y(wire61), .wire34(wire27));
  assign wire63 = wire29[(2'h3):(1'h1)];
  assign wire64 = $signed({$unsigned((~^wire28))});
  assign wire65 = (+(+$unsigned(wire28[(2'h3):(2'h3)])));
  assign wire66 = $signed(($signed(wire64[(1'h0):(1'h0)]) ?
                      $unsigned(wire29[(4'h8):(2'h3)]) : wire65));
  always
    @(posedge clk) begin
      reg67 <= (-wire28[(1'h1):(1'h0)]);
    end
  assign wire68 = $signed((wire65[(1'h1):(1'h0)] ^ $unsigned((wire27 && (8'had)))));
  assign wire69 = (^~($unsigned(wire29[(4'ha):(3'h6)]) == wire29));
  module70 #() modinst82 (wire81, clk, wire29, reg67, wire26, wire65);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param22 = (((((8'h9e) ^~ (8'ha0)) ? (!(8'ha7)) : (~^(8'hb0))) < {((8'h9d) ? (8'hae) : (8'h9c))}) ? (({(8'h9e)} >> {(8'ha5)}) ? (((8'hac) >= (8'hae)) == ((8'had) & (8'haa))) : {((8'h9d) ? (8'ha0) : (8'ha7))}) : ((((8'had) ? (8'ha5) : (8'ha5)) - (&(8'hac))) ? {((8'ha5) > (8'ha4))} : (((8'h9e) ? (8'ha6) : (8'ha3)) ^ (~^(8'hab))))))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire10;
  input wire [(4'ha):(1'h0)] wire9;
  input wire signed [(2'h3):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire7;
  wire [(2'h2):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  wire signed [(3'h6):(1'h0)] wire19;
  wire signed [(4'h8):(1'h0)] wire18;
  wire signed [(4'hb):(1'h0)] wire17;
  wire [(4'hb):(1'h0)] wire16;
  wire [(3'h4):(1'h0)] wire11;
  reg [(4'h9):(1'h0)] reg15 = (1'h0);
  reg [(3'h7):(1'h0)] reg14 = (1'h0);
  reg [(4'h9):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg12 = (1'h0);
  assign y = {wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire11,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 (1'h0)};
  assign wire11 = {(wire9[(3'h6):(3'h6)] ? wire10[(2'h2):(1'h0)] : wire7)};
  always
    @(posedge clk) begin
      reg12 <= wire8;
      if (wire7[(3'h7):(2'h3)])
        begin
          if (wire11[(1'h0):(1'h0)])
            begin
              reg13 <= (-(~&$signed((reg12 ? wire10 : wire8))));
              reg14 <= wire7[(4'ha):(4'ha)];
              reg15 <= ($signed(wire7[(3'h4):(1'h1)]) ?
                  $unsigned((!(wire7 ? reg13 : wire9))) : $unsigned(wire8));
            end
          else
            begin
              reg13 <= (~($signed(reg12) ?
                  (-wire11[(1'h1):(1'h0)]) : (~|(8'ha7))));
              reg14 <= ($unsigned($signed((reg12 ? reg13 : reg12))) == {reg14});
            end
        end
      else
        begin
          if ($signed({wire10}))
            begin
              reg13 <= {((~|reg15) ?
                      ($signed(wire10) ^ reg15[(3'h7):(3'h4)]) : reg12[(3'h4):(1'h0)])};
            end
          else
            begin
              reg13 <= (($signed($unsigned(wire10)) >= ($signed(wire10) << (-(8'ha2)))) ?
                  ($unsigned((~|wire11)) ?
                      $signed($signed(wire9)) : reg12[(3'h4):(1'h0)]) : {{wire8}});
            end
          reg14 <= $signed(reg14);
          reg15 <= wire8[(2'h3):(1'h0)];
        end
    end
  assign wire16 = {{reg12[(3'h6):(1'h1)]}};
  assign wire17 = $unsigned(reg15);
  assign wire18 = $signed($unsigned(reg15[(3'h7):(3'h7)]));
  assign wire19 = reg14[(3'h5):(3'h5)];
  assign wire20 = $unsigned(wire8[(2'h2):(1'h0)]);
  assign wire21 = (((|$signed(wire10)) ?
                      reg13 : ((reg13 ? wire8 : wire19) ?
                          reg14 : wire20[(1'h1):(1'h1)])) <= $signed({{wire10}}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module70
#(parameter param80 = (((+((8'hac) ? (8'had) : (8'h9f))) - ({(8'hab)} ? {(8'ha0)} : (8'ha2))) && (~({(8'ha6)} ? (8'ha4) : ((8'ha9) ? (8'haf) : (8'ha5))))))
(y, clk, wire74, wire73, wire72, wire71);
  output wire [(32'h2a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire74;
  input wire [(3'h5):(1'h0)] wire73;
  input wire [(4'h9):(1'h0)] wire72;
  input wire [(4'ha):(1'h0)] wire71;
  wire signed [(4'ha):(1'h0)] wire79;
  wire signed [(4'ha):(1'h0)] wire78;
  wire signed [(2'h2):(1'h0)] wire77;
  reg signed [(4'hb):(1'h0)] reg76 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg75 = (1'h0);
  assign y = {wire79, wire78, wire77, reg76, reg75, (1'h0)};
  always
    @(posedge clk) begin
      reg75 <= wire72[(1'h0):(1'h0)];
      reg76 <= ((($signed(wire71) ^ $unsigned(reg75)) ^ $signed($unsigned(wire74))) != wire73);
    end
  assign wire77 = (!$unsigned(wire74[(2'h2):(2'h2)]));
  assign wire78 = (~^wire74);
  assign wire79 = (((~{reg75}) ?
                      reg76[(4'h8):(3'h5)] : (~$signed(reg76))) && (&$signed($signed(wire74))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module30  (y, clk, wire34, wire33, wire32, wire31);
  output wire [(32'hb4):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire34;
  input wire [(2'h2):(1'h0)] wire33;
  input wire [(4'h8):(1'h0)] wire32;
  input wire [(3'h5):(1'h0)] wire31;
  wire [(4'h9):(1'h0)] wire59;
  wire signed [(4'hb):(1'h0)] wire58;
  wire [(4'hb):(1'h0)] wire54;
  wire [(4'h9):(1'h0)] wire53;
  wire signed [(2'h2):(1'h0)] wire42;
  wire [(3'h4):(1'h0)] wire41;
  wire signed [(3'h5):(1'h0)] wire40;
  reg signed [(3'h4):(1'h0)] reg60 = (1'h0);
  reg [(3'h7):(1'h0)] reg57 = (1'h0);
  reg [(4'hb):(1'h0)] reg56 = (1'h0);
  reg [(4'h8):(1'h0)] reg55 = (1'h0);
  reg [(3'h6):(1'h0)] reg52 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg51 = (1'h0);
  reg [(4'h9):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg49 = (1'h0);
  reg [(3'h5):(1'h0)] reg48 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg47 = (1'h0);
  reg [(3'h5):(1'h0)] reg46 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg45 = (1'h0);
  reg [(2'h3):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg43 = (1'h0);
  reg [(3'h7):(1'h0)] reg39 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg38 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg37 = (1'h0);
  reg [(4'h9):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg35 = (1'h0);
  assign y = {wire59,
                 wire58,
                 wire54,
                 wire53,
                 wire42,
                 wire41,
                 wire40,
                 reg60,
                 reg57,
                 reg56,
                 reg55,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ((|wire34))
        begin
          reg35 <= (-$unsigned((|$unsigned(wire32))));
          reg36 <= wire31[(3'h5):(2'h2)];
        end
      else
        begin
          reg35 <= ($unsigned($signed($signed(reg35))) ?
              $unsigned($signed((reg35 ? reg35 : wire33))) : {wire32});
          reg36 <= {$signed((-$signed(wire34)))};
        end
      reg37 <= (^wire34[(2'h2):(1'h0)]);
      reg38 <= $signed(wire32);
    end
  always
    @(posedge clk) begin
      reg39 <= reg38[(2'h2):(1'h1)];
    end
  assign wire40 = (&wire33[(2'h2):(2'h2)]);
  assign wire41 = (&(+(wire40 <= (wire34 ? wire32 : reg36))));
  assign wire42 = reg35[(3'h4):(2'h2)];
  always
    @(posedge clk) begin
      reg43 <= $unsigned($signed(wire33));
      reg44 <= ($unsigned((~^$signed(wire33))) ?
          $unsigned({wire32}) : (|$unsigned(wire33[(1'h1):(1'h0)])));
      if ((wire34[(2'h2):(1'h0)] ?
          ({$unsigned(wire40)} == reg37) : $signed({$signed((8'h9e))})))
        begin
          if ($unsigned(reg38))
            begin
              reg45 <= $unsigned($unsigned($unsigned(reg44)));
              reg46 <= (~&reg35[(1'h0):(1'h0)]);
            end
          else
            begin
              reg45 <= $unsigned($unsigned($unsigned((!(8'ha3)))));
              reg46 <= $unsigned(wire34);
              reg47 <= $unsigned({$unsigned($signed(wire42))});
            end
          reg48 <= ({$unsigned(wire32[(3'h7):(1'h1)])} ?
              reg44[(1'h1):(1'h0)] : (~^$signed(((8'ha4) >= reg46))));
        end
      else
        begin
          if (((~reg43) - $unsigned($signed($unsigned(wire42)))))
            begin
              reg45 <= reg45[(4'ha):(2'h2)];
              reg46 <= (|(~wire40));
            end
          else
            begin
              reg45 <= reg45[(3'h4):(1'h1)];
            end
          reg47 <= (reg39[(3'h7):(3'h5)] < (^{$signed(wire33)}));
          if (($signed((reg37[(3'h6):(3'h4)] ?
              reg44[(2'h3):(1'h0)] : ((8'h9c) >>> (8'ha6)))) >> ($signed((^~reg47)) && (~{(8'h9e)}))))
            begin
              reg48 <= reg38[(1'h1):(1'h1)];
              reg49 <= reg36;
            end
          else
            begin
              reg48 <= reg36;
              reg49 <= $signed($signed(wire31[(3'h5):(3'h5)]));
              reg50 <= ((reg39[(1'h0):(1'h0)] ?
                  (((8'ha3) || reg38) << {wire34}) : reg35[(3'h6):(2'h2)]) || (~&$unsigned(reg43[(1'h0):(1'h0)])));
            end
        end
    end
  always
    @(posedge clk) begin
      reg51 <= ({reg45} ~^ (+({reg45} ?
          ((8'h9e) ? (8'ha9) : wire31) : (-(8'hac)))));
      reg52 <= $signed((8'hac));
    end
  assign wire53 = $unsigned((!(~^((8'ha4) << reg45))));
  assign wire54 = (reg52 ?
                      ($unsigned($signed(reg51)) ?
                          reg43 : (wire31[(2'h2):(2'h2)] && reg52[(3'h5):(1'h0)])) : {(&wire53)});
  always
    @(posedge clk) begin
      reg55 <= reg39[(3'h5):(2'h3)];
      reg56 <= $signed($unsigned(((~wire53) ?
          (reg36 ? reg46 : reg38) : (reg36 ? (8'ha0) : (8'h9f)))));
      reg57 <= wire31;
    end
  assign wire58 = wire54[(2'h3):(1'h0)];
  assign wire59 = ((((~|reg44) ? reg48 : (wire53 < wire53)) ?
                      reg57[(2'h3):(1'h1)] : (~|(!reg56))) <= reg39);
  always
    @(posedge clk) begin
      reg60 <= $unsigned($unsigned(reg46));
    end
endmodule