(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'hec):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h11):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(4'hd):(1'h0)] wire22;
  wire [(5'h10):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire20;
  wire signed [(5'h10):(1'h0)] wire19;
  wire signed [(5'h12):(1'h0)] wire18;
  wire signed [(5'h10):(1'h0)] wire17;
  wire [(4'hd):(1'h0)] wire16;
  wire [(4'hc):(1'h0)] wire15;
  wire [(3'h4):(1'h0)] wire14;
  wire signed [(5'h12):(1'h0)] wire13;
  wire [(3'h5):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire11;
  wire [(2'h3):(1'h0)] wire4;
  reg [(5'h10):(1'h0)] reg10 = (1'h0);
  reg [(4'hd):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg5 = (1'h0);
  reg [(4'hd):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg6 = (1'h0);
  reg [(5'h15):(1'h0)] reg9 = (1'h0);
  reg [(2'h3):(1'h0)] forvar7 = (1'h0);
  reg [(3'h6):(1'h0)] forvar5 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire4,
                 reg10,
                 reg7,
                 reg5,
                 reg8,
                 reg6,
                 reg9,
                 forvar7,
                 forvar5,
                 (1'h0)};
  assign wire4 = wire1[(2'h2):(2'h2)];
  always
    @(posedge clk) begin
      if ((~&(wire4[(1'h0):(1'h0)] >> (((wire2 && wire4) ?
              ((8'ha2) ? wire1 : wire1) : wire1) ?
          $unsigned({wire3, (8'hb0)}) : ((wire4 ?
              wire3 : wire3) & $signed(wire0))))))
        begin
          for (forvar5 = (1'h0); (forvar5 < (1'h0)); forvar5 = (forvar5 + (1'h1)))
            begin
              reg6 <= (wire3 ? (-wire0[(3'h6):(3'h5)]) : wire3[(5'h11):(4'hc)]);
            end
          for (forvar7 = (1'h0); (forvar7 < (2'h2)); forvar7 = (forvar7 + (1'h1)))
            begin
              reg8 <= (-(^wire4[(2'h2):(1'h0)]));
            end
        end
      else
        begin
          if ((!wire3))
            begin
              reg5 <= $unsigned(wire4);
              reg6 <= $unsigned((((-reg5) ?
                      (|(-(8'had))) : {((8'hba) ? wire0 : reg8),
                          ((8'hb2) ? wire0 : (8'ha3))}) ?
                  $unsigned((wire0[(3'h7):(3'h6)] ?
                      (~wire1) : ((7'h43) <= wire0))) : ($unsigned($unsigned(wire4)) ^~ wire3[(3'h6):(2'h2)])));
              reg7 <= wire1;
            end
          else
            begin
              reg5 <= (~(reg8[(4'hd):(4'ha)] <<< ($signed((!wire1)) <<< {(reg6 ?
                      wire1 : (8'ha0))})));
              reg6 <= forvar5;
              reg9 = wire1[(1'h1):(1'h1)];
            end
          reg10 <= forvar5[(3'h5):(3'h4)];
        end
    end
  assign wire11 = $signed($signed((wire4 ?
                      reg8[(4'ha):(1'h0)] : {(reg7 ? (8'hbe) : reg6)})));
  assign wire12 = ({($unsigned((wire11 ? reg10 : reg7)) + $signed(reg10))} ?
                      {{(((8'hb2) ? (7'h40) : (8'hbe)) ?
                                  (reg5 ? reg10 : reg10) : $signed(reg7)),
                              ($unsigned(wire1) ?
                                  reg7 : (wire11 ? wire3 : reg8))},
                          reg5} : reg5[(1'h1):(1'h1)]);
  assign wire13 = reg8[(3'h6):(2'h2)];
  assign wire14 = wire1;
  assign wire15 = $signed((|reg10[(4'he):(4'he)]));
  assign wire16 = {(($signed((reg8 ? wire11 : wire11)) ~^ (wire12 ?
                              reg6[(2'h2):(1'h1)] : (-(8'hae)))) ?
                          {wire1[(2'h2):(1'h1)]} : (8'ha2)),
                      wire0};
  assign wire17 = {((~&(reg7 != (|reg10))) ?
                          ({reg10[(1'h1):(1'h0)]} ?
                              ($signed(wire4) & wire0) : (8'hb5)) : {(+(reg10 ?
                                  reg8 : reg8))}),
                      {$signed(wire11)}};
  assign wire18 = $signed($unsigned(((^$signed((8'hbe))) < ((reg6 <<< wire16) && (wire13 ~^ wire12)))));
  assign wire19 = reg8;
  assign wire20 = $unsigned((($signed((~wire11)) ?
                          (8'hbf) : (~^(reg5 ? (8'haf) : reg10))) ?
                      ($signed((wire1 ?
                          reg7 : (8'haf))) >> wire19[(2'h3):(1'h1)]) : ((reg10 ?
                          (~wire4) : $unsigned(reg8)) ~^ ($signed(wire4) >> (wire3 ?
                          wire0 : wire18)))));
  assign wire21 = reg7[(4'hb):(3'h5)];
  assign wire22 = ((^~$signed({reg6[(4'h8):(3'h4)], $unsigned(wire18)})) ?
                      (+reg5) : reg7[(4'hb):(3'h6)]);
endmodule