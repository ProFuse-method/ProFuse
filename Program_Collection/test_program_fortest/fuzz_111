(* use_dsp48="no" *) (* use_dsp="no" *) module top #(parameter param14 = (8'ha9)) (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(3'h4):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire13;
  wire signed [(3'h5):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire4;
  reg [(3'h5):(1'h0)] reg12 = (1'h0);
  reg [(2'h3):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg10 = (1'h0);
  reg [(3'h4):(1'h0)] reg9 = (1'h0);
  reg [(3'h6):(1'h0)] reg8 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg7 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg6 = (1'h0);
  assign y = {wire13,
                 wire5,
                 wire4,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = wire3;
  assign wire5 = ($unsigned((wire4 ? $signed((8'ha8)) : (-wire1))) ^ wire0);
  always
    @(posedge clk) begin
      if (({(wire4 ? wire5 : (wire4 & wire2))} ^ wire5))
        begin
          reg6 <= {(wire1 ^~ wire2)};
          reg7 <= (($signed(wire5[(2'h3):(2'h2)]) < ((8'hae) * wire3)) && (((wire0 ?
                  wire2 : wire3) ?
              wire5 : {wire3}) >>> ((wire4 >= wire4) ?
              wire2[(2'h2):(1'h1)] : wire1[(3'h4):(1'h0)])));
        end
      else
        begin
          reg6 <= (wire0[(1'h1):(1'h1)] ?
              $signed({{wire3}}) : $unsigned($signed($signed(reg7))));
        end
      if (wire5)
        begin
          reg8 <= (&$signed(({wire0} && (wire5 ? wire3 : (8'ha8)))));
          if (((~^(~(~^wire1))) ?
              (~$unsigned(wire2[(3'h5):(2'h3)])) : ($signed($signed(reg6)) ?
                  {$unsigned(wire5)} : wire4[(3'h6):(3'h6)])))
            begin
              reg9 <= reg6;
              reg10 <= reg8;
              reg11 <= ($signed($signed($signed(wire0))) ?
                  ((&$unsigned(reg7)) ?
                      wire1 : (~reg6)) : {wire4[(1'h1):(1'h0)]});
            end
          else
            begin
              reg9 <= ((reg8[(1'h1):(1'h1)] ?
                  (-wire0) : (^(wire4 && (8'ha1)))) || $signed((^{(8'hb0)})));
              reg10 <= ({reg7} & ((+wire4[(2'h3):(1'h0)]) ?
                  ($unsigned((8'h9e)) ?
                      $signed(wire4) : (reg6 ?
                          wire0 : wire5)) : (-$unsigned(reg9))));
            end
        end
      else
        begin
          reg8 <= $signed(reg6[(1'h0):(1'h0)]);
        end
      reg12 <= reg8;
    end
  assign wire13 = ({$signed({reg9})} ? $unsigned(wire0) : wire0);
endmodule