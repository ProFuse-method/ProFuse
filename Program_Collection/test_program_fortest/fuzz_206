(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param67 = ({(~|((8'hb0) << (8'hac)))} << ((((8'h9c) ? (8'haf) : (8'ha9)) ^~ ((8'ha8) - (8'ha7))) == (+(-(8'h9d))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h42):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire66;
  wire signed [(4'hb):(1'h0)] wire65;
  wire signed [(2'h3):(1'h0)] wire59;
  wire signed [(3'h6):(1'h0)] wire28;
  wire signed [(4'h9):(1'h0)] wire26;
  reg [(3'h4):(1'h0)] reg64 = (1'h0);
  reg [(4'ha):(1'h0)] reg63 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg62 = (1'h0);
  reg [(4'h9):(1'h0)] reg61 = (1'h0);
  assign y = {wire66,
                 wire65,
                 wire59,
                 wire28,
                 wire26,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 (1'h0)};
  module4 #() modinst27 (wire26, clk, wire3, wire0, wire1, wire2);
  assign wire28 = ((($signed((8'hac)) ? wire3 : (wire2 ? wire2 : wire0)) ?
                          wire2[(1'h1):(1'h0)] : ($unsigned(wire3) ?
                              (wire1 ? (8'h9e) : wire26) : $signed(wire0))) ?
                      $unsigned((|{wire0})) : (wire26 + wire2[(3'h6):(2'h2)]));
  module29 #() modinst60 (wire59, clk, wire2, wire1, wire26, wire0);
  always
    @(posedge clk) begin
      reg61 <= (~&wire59);
    end
  always
    @(posedge clk) begin
      if ((!$unsigned(wire3[(4'h9):(1'h0)])))
        begin
          reg62 <= $signed($unsigned($unsigned($unsigned(reg61))));
          reg63 <= wire1;
          reg64 <= wire0;
        end
      else
        begin
          reg62 <= $signed($signed(reg63[(2'h2):(1'h0)]));
        end
    end
  assign wire65 = ($signed($unsigned($signed(wire3))) ?
                      wire1[(3'h7):(1'h0)] : wire0[(3'h6):(1'h1)]);
  assign wire66 = wire3;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module29
#(parameter param58 = {(((-(8'had)) ? ((8'h9f) ? (8'ha3) : (8'haa)) : ((8'ha0) ? (8'ha1) : (8'had))) + ((~&(8'haf)) ? (&(8'ha5)) : (^(8'ha3))))})
(y, clk, wire30, wire31, wire32, wire33);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire30;
  input wire [(3'h6):(1'h0)] wire31;
  input wire signed [(4'h9):(1'h0)] wire32;
  input wire [(4'ha):(1'h0)] wire33;
  wire [(3'h6):(1'h0)] wire57;
  wire [(3'h5):(1'h0)] wire56;
  wire [(2'h2):(1'h0)] wire55;
  wire signed [(3'h5):(1'h0)] wire54;
  wire signed [(3'h7):(1'h0)] wire53;
  wire [(4'hb):(1'h0)] wire51;
  reg signed [(4'h9):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg35 = (1'h0);
  assign y = {wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire51,
                 reg34,
                 reg35,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg34 <= $signed(($unsigned(wire33[(4'h8):(1'h1)]) ?
          wire32 : ((wire31 == wire31) ^ wire31[(1'h0):(1'h0)])));
      reg35 <= $signed(((8'h9d) << {$signed(wire31)}));
    end
  module36 #() modinst52 (wire51, clk, reg35, wire31, wire32, wire33);
  assign wire53 = $signed(wire31);
  assign wire54 = {(~|wire51)};
  assign wire55 = reg35[(1'h1):(1'h1)];
  assign wire56 = ((wire31 ?
                          (+$unsigned(wire32)) : ($signed(wire54) ?
                              $signed((8'h9e)) : (reg35 ? wire51 : (8'haa)))) ?
                      (($unsigned(reg34) ? {(8'h9d)} : (~&wire32)) ?
                          ((~wire53) ?
                              wire33[(4'h9):(2'h3)] : wire55) : wire31) : (~$signed($signed(wire55))));
  assign wire57 = ({$signed($signed(wire54))} ?
                      ($unsigned(wire53) ^~ $signed((reg34 > (8'ha1)))) : (~^((wire53 < wire53) << (wire53 >> wire32))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param25 = (((8'hab) ? ((+(8'haa)) > {(8'hae)}) : (&((8'ha1) ? (8'ha7) : (8'ha9)))) <<< (({(8'haf)} ? ((8'h9c) ? (8'haa) : (8'h9d)) : (&(8'h9f))) ? (8'had) : (^~{(8'hac)}))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h6d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire [(3'h5):(1'h0)] wire7;
  input wire [(4'h8):(1'h0)] wire6;
  input wire signed [(3'h5):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  wire [(4'h9):(1'h0)] wire22;
  wire [(3'h6):(1'h0)] wire20;
  wire [(2'h3):(1'h0)] wire19;
  wire signed [(4'h8):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire17;
  wire signed [(4'h9):(1'h0)] wire16;
  wire [(4'h9):(1'h0)] wire10;
  wire [(3'h7):(1'h0)] wire9;
  reg signed [(4'h8):(1'h0)] reg21 = (1'h0);
  reg [(3'h5):(1'h0)] reg15 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg14 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg13 = (1'h0);
  reg [(3'h5):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  assign y = {wire24,
                 wire23,
                 wire22,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire10,
                 wire9,
                 reg21,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 (1'h0)};
  assign wire9 = wire5;
  assign wire10 = {(^(~&wire7[(2'h3):(1'h1)]))};
  always
    @(posedge clk) begin
      if ((wire6[(1'h0):(1'h0)] ~^ wire9))
        begin
          reg11 <= (|wire5[(1'h1):(1'h1)]);
        end
      else
        begin
          if (wire10[(3'h4):(1'h0)])
            begin
              reg11 <= $signed(wire9);
              reg12 <= $signed($signed(((reg11 ?
                  wire7 : reg11) | wire8[(3'h5):(2'h3)])));
              reg13 <= wire9;
            end
          else
            begin
              reg11 <= $signed({$signed(reg11[(1'h0):(1'h0)])});
              reg12 <= ({((8'had) < wire5[(2'h3):(1'h1)])} && reg11);
            end
          reg14 <= $unsigned((~&($unsigned(reg12) ? $unsigned(wire9) : wire8)));
          reg15 <= ({(~&(~^(8'ha4)))} || $signed($unsigned($unsigned(wire7))));
        end
    end
  assign wire16 = (((^(reg12 <<< wire10)) ?
                      reg15 : ($signed(wire10) >= reg14)) <= ((|$signed((8'ha2))) ?
                      (+(wire9 > wire6)) : $unsigned($signed(wire9))));
  assign wire17 = wire6[(3'h5):(2'h2)];
  assign wire18 = {(reg15 || $signed(wire5[(2'h3):(2'h2)]))};
  assign wire19 = (-reg15);
  assign wire20 = (({wire19[(2'h3):(2'h2)]} & (wire9[(2'h2):(1'h0)] != reg11[(3'h5):(3'h4)])) ?
                      ($unsigned(wire10) ?
                          wire17 : ((wire17 > wire19) || $unsigned(wire17))) : wire17[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      reg21 <= wire20[(3'h5):(3'h5)];
    end
  assign wire22 = {(wire16[(2'h3):(2'h2)] >>> (~&(^~wire16)))};
  assign wire23 = reg11;
  assign wire24 = $signed(wire7[(3'h5):(3'h5)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module36  (y, clk, wire40, wire39, wire38, wire37);
  output wire [(32'h38):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire40;
  input wire signed [(3'h4):(1'h0)] wire39;
  input wire [(4'h8):(1'h0)] wire38;
  input wire [(4'h9):(1'h0)] wire37;
  wire signed [(3'h7):(1'h0)] wire50;
  wire signed [(2'h3):(1'h0)] wire49;
  wire signed [(4'h8):(1'h0)] wire43;
  wire [(2'h2):(1'h0)] wire42;
  wire signed [(4'hb):(1'h0)] wire41;
  reg [(4'h8):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg47 = (1'h0);
  reg [(2'h3):(1'h0)] reg46 = (1'h0);
  reg [(3'h5):(1'h0)] reg45 = (1'h0);
  reg [(3'h4):(1'h0)] reg44 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire43,
                 wire42,
                 wire41,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 (1'h0)};
  assign wire41 = wire38[(3'h4):(3'h4)];
  assign wire42 = wire37;
  assign wire43 = wire37[(2'h3):(2'h2)];
  always
    @(posedge clk) begin
      if (wire37)
        begin
          reg44 <= $signed((((wire40 ?
              wire42 : wire41) > wire37[(1'h0):(1'h0)]) << ($signed(wire40) * wire40[(1'h1):(1'h0)])));
          reg45 <= wire42[(1'h0):(1'h0)];
        end
      else
        begin
          reg44 <= (-(wire38 ?
              $signed($unsigned(reg45)) : wire38[(3'h6):(3'h4)]));
          reg45 <= (($signed(wire39) << $unsigned((+wire37))) || wire40[(1'h0):(1'h0)]);
        end
      if ({(~^wire42)})
        begin
          reg46 <= ((8'had) || $signed($signed((&wire42))));
          if (wire42)
            begin
              reg47 <= {((8'had) ?
                      $unsigned((wire40 != wire41)) : (+wire38[(2'h3):(1'h0)]))};
            end
          else
            begin
              reg47 <= ((+$unsigned($unsigned(wire41))) ?
                  {(8'ha1)} : wire43[(3'h6):(1'h1)]);
              reg48 <= wire43[(3'h4):(1'h1)];
            end
        end
      else
        begin
          reg46 <= reg44;
          reg47 <= wire37;
          reg48 <= ((wire37 < reg47) ^ reg44);
        end
    end
  assign wire49 = {reg45};
  assign wire50 = (+$unsigned((~^wire38[(1'h1):(1'h1)])));
endmodule