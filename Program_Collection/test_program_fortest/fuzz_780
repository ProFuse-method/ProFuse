(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire83;
  wire signed [(2'h2):(1'h0)] wire82;
  wire signed [(4'hb):(1'h0)] wire81;
  wire [(3'h7):(1'h0)] wire80;
  wire signed [(4'h9):(1'h0)] wire79;
  wire signed [(4'hb):(1'h0)] wire78;
  wire [(3'h6):(1'h0)] wire77;
  wire [(2'h3):(1'h0)] wire75;
  wire signed [(3'h7):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire4;
  assign y = {wire83,
                 wire82,
                 wire81,
                 wire80,
                 wire79,
                 wire78,
                 wire77,
                 wire75,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = wire0[(4'h9):(3'h4)];
  assign wire5 = ((wire0[(1'h1):(1'h1)] ?
                     ($signed(wire4) ?
                         (8'haf) : (wire0 > wire1)) : wire1[(1'h1):(1'h0)]) >> (^~((wire3 ?
                     (8'ha1) : wire4) <<< $unsigned(wire1))));
  module6 #() modinst76 (.clk(clk), .wire10(wire5), .wire9(wire0), .y(wire75), .wire8(wire1), .wire7(wire2));
  assign wire77 = ((wire0 && (^wire1[(2'h3):(2'h2)])) ?
                      wire5[(3'h4):(3'h4)] : (((wire75 ?
                          wire4 : wire3) * wire0[(4'hb):(3'h5)]) > $signed((wire3 == (8'ha4)))));
  assign wire78 = wire77;
  assign wire79 = (((&(wire4 - wire1)) ?
                          wire78[(3'h6):(3'h6)] : {(wire5 ? wire75 : wire3)}) ?
                      wire77 : (wire3[(2'h2):(2'h2)] ?
                          $signed((wire2 ? (8'ha8) : wire5)) : wire3));
  assign wire80 = $unsigned($signed($unsigned(wire0[(4'hb):(3'h5)])));
  assign wire81 = (|wire80);
  assign wire82 = (^~({$signed((8'had))} <<< wire0));
  module11 #() modinst84 (.wire14(wire77), .wire15(wire79), .wire13(wire4), .wire12(wire1), .clk(clk), .y(wire83));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire10;
  input wire [(4'hb):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire signed [(4'ha):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire73;
  wire [(4'h9):(1'h0)] wire72;
  wire [(4'h9):(1'h0)] wire70;
  wire [(4'hb):(1'h0)] wire36;
  assign y = {wire73, wire72, wire70, wire36, (1'h0)};
  module11 #() modinst37 (wire36, clk, wire8, wire10, wire7, wire9);
  module38 #() modinst71 (wire70, clk, wire10, wire36, wire8, wire7);
  assign wire72 = $signed(wire8);
  module11 #() modinst74 (.wire13(wire8), .y(wire73), .wire12(wire9), .clk(clk), .wire15(wire70), .wire14(wire7));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module38  (y, clk, wire42, wire41, wire40, wire39);
  output wire [(32'ha8):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire42;
  input wire [(4'hb):(1'h0)] wire41;
  input wire [(4'ha):(1'h0)] wire40;
  input wire signed [(4'ha):(1'h0)] wire39;
  wire [(2'h3):(1'h0)] wire69;
  wire signed [(3'h5):(1'h0)] wire68;
  wire signed [(2'h2):(1'h0)] wire67;
  wire [(3'h7):(1'h0)] wire66;
  wire [(4'hb):(1'h0)] wire59;
  wire signed [(4'ha):(1'h0)] wire58;
  wire [(4'ha):(1'h0)] wire57;
  wire [(3'h4):(1'h0)] wire56;
  reg signed [(2'h2):(1'h0)] reg65 = (1'h0);
  reg [(4'ha):(1'h0)] reg64 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg63 = (1'h0);
  reg [(3'h7):(1'h0)] reg62 = (1'h0);
  reg [(3'h7):(1'h0)] reg61 = (1'h0);
  reg [(2'h2):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg55 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg54 = (1'h0);
  reg [(3'h6):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg52 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg48 = (1'h0);
  reg [(4'h8):(1'h0)] reg47 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg44 = (1'h0);
  reg [(2'h2):(1'h0)] reg43 = (1'h0);
  assign y = {wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($signed($unsigned($unsigned($unsigned((8'hac))))))
        begin
          reg43 <= (($unsigned((wire39 ? wire39 : wire42)) ?
                  ($unsigned(wire42) * wire41[(4'h9):(2'h3)]) : wire39) ?
              ({$signed(wire42)} ?
                  ((wire39 <= wire39) ?
                      (^wire42) : wire40[(3'h7):(3'h7)]) : ($unsigned(wire42) ?
                      (wire41 <= wire42) : $unsigned((8'haa)))) : $unsigned(wire39));
          reg44 <= $unsigned($unsigned(wire40));
          if (((($unsigned(reg44) + wire40[(3'h5):(2'h2)]) << $unsigned(wire42)) ?
              (-($signed(reg44) != wire42[(2'h3):(2'h2)])) : $unsigned(({wire39} <<< (wire40 >> wire41)))))
            begin
              reg45 <= $unsigned($unsigned((^(wire39 ? wire39 : wire41))));
            end
          else
            begin
              reg45 <= ($unsigned((reg44 ?
                  wire41[(3'h6):(1'h0)] : (wire41 ?
                      wire41 : reg43))) != (8'had));
            end
        end
      else
        begin
          reg43 <= (wire42 ?
              (reg43[(2'h2):(1'h0)] & (^~$signed(wire42))) : (~&$unsigned((+reg44))));
          reg44 <= ($unsigned(wire42) ~^ reg43[(1'h0):(1'h0)]);
          reg45 <= ((|reg43) ?
              ($unsigned((reg44 == wire39)) * $unsigned(reg43)) : {$signed(wire41)});
        end
      if ((|$signed(wire39[(4'ha):(3'h6)])))
        begin
          reg46 <= (-((&(^wire40)) ?
              $unsigned($signed(wire40)) : wire39[(1'h1):(1'h1)]));
          reg47 <= $unsigned({$signed($unsigned(reg46))});
        end
      else
        begin
          reg46 <= reg45;
          reg47 <= $signed($unsigned(reg46[(3'h4):(1'h0)]));
        end
      reg48 <= (~|wire40[(4'ha):(4'h9)]);
    end
  always
    @(posedge clk) begin
      reg49 <= $unsigned(wire39[(2'h2):(1'h0)]);
      reg50 <= reg49;
      if (((!(-wire42[(3'h4):(2'h2)])) ?
          ($unsigned(reg48) ? (&wire41) : reg44[(1'h1):(1'h1)]) : (reg50 ?
              wire40 : ((!wire41) && (reg43 >= reg46)))))
        begin
          reg51 <= ((reg49[(3'h5):(1'h1)] ? reg48 : reg48) | wire41);
          reg52 <= reg49[(2'h3):(2'h2)];
        end
      else
        begin
          if (((($signed((8'ha5)) ?
                      reg44[(1'h1):(1'h0)] : (wire42 ? reg43 : reg46)) ?
                  ((reg47 | (8'had)) >>> (wire41 ?
                      reg52 : reg50)) : reg44[(1'h1):(1'h1)]) ?
              ($signed((!(8'ha0))) ?
                  (reg50 << reg43[(1'h1):(1'h1)]) : (((8'hab) ? reg47 : reg47) ?
                      wire41[(1'h0):(1'h0)] : reg43[(1'h1):(1'h1)])) : reg50[(4'h8):(3'h5)]))
            begin
              reg51 <= wire40[(1'h1):(1'h1)];
              reg52 <= wire42;
              reg53 <= {$signed($signed(((8'h9e) ? reg47 : reg44)))};
            end
          else
            begin
              reg51 <= $signed((reg52 ^ {(^~wire39)}));
            end
          reg54 <= ((~|reg50) ?
              reg44[(3'h4):(2'h3)] : (wire39[(1'h0):(1'h0)] << $unsigned((~^reg46))));
          reg55 <= (~^(^~$signed(wire39[(3'h5):(3'h4)])));
        end
    end
  assign wire56 = {reg47};
  assign wire57 = (({$unsigned(reg46)} != {reg49[(1'h1):(1'h0)]}) == reg46[(3'h4):(1'h1)]);
  assign wire58 = {$signed($signed(((8'haf) ? reg44 : reg43)))};
  assign wire59 = (8'hac);
  always
    @(posedge clk) begin
      reg60 <= reg49;
      reg61 <= ($signed(reg55[(1'h1):(1'h1)]) ?
          ((reg52 ? $signed((8'h9d)) : wire56) ?
              reg54[(1'h1):(1'h0)] : reg51) : (~&$signed(reg55)));
      if (reg54[(2'h2):(1'h1)])
        begin
          reg62 <= $unsigned(wire57[(2'h2):(1'h0)]);
          if ($unsigned((reg49 ?
              reg49[(3'h4):(2'h3)] : $unsigned(reg49[(3'h4):(1'h1)]))))
            begin
              reg63 <= ((!(^~((8'ha4) ? wire58 : reg61))) ?
                  (wire57[(1'h0):(1'h0)] ?
                      (~|(reg47 ?
                          (8'ha1) : wire39)) : reg50[(3'h6):(2'h3)]) : $signed(reg46[(1'h0):(1'h0)]));
              reg64 <= $unsigned(reg55);
            end
          else
            begin
              reg63 <= ($unsigned(wire40[(3'h5):(1'h0)]) <<< $signed((~&reg62[(2'h3):(2'h3)])));
            end
          reg65 <= (8'ha9);
        end
      else
        begin
          reg62 <= (~&(reg65[(2'h2):(1'h0)] ?
              ((reg43 ?
                  wire39 : reg46) <= $unsigned(reg51)) : $unsigned({reg50})));
          reg63 <= wire56[(2'h3):(1'h1)];
          if ((&reg54))
            begin
              reg64 <= $unsigned($unsigned(reg54[(2'h3):(2'h3)]));
              reg65 <= wire42[(2'h2):(1'h0)];
            end
          else
            begin
              reg64 <= reg61;
              reg65 <= $unsigned((reg51[(4'h8):(1'h1)] ?
                  ((wire41 ? wire39 : wire58) ?
                      $unsigned((8'haf)) : reg47[(2'h3):(2'h2)]) : $unsigned({reg51})));
            end
        end
    end
  assign wire66 = ((|(&(reg45 && reg50))) ?
                      ((8'ha4) ?
                          (8'ha0) : ({reg54} || wire57[(4'h9):(2'h3)])) : (reg60[(1'h1):(1'h1)] + (&(reg48 >> reg51))));
  assign wire67 = reg62;
  assign wire68 = (reg61 ?
                      reg54 : ($signed(wire42[(1'h0):(1'h0)]) ?
                          ((reg44 + (8'h9d)) ?
                              ((8'ha4) ?
                                  reg43 : (8'ha6)) : (wire42 ~^ reg45)) : {$unsigned((8'h9e))}));
  assign wire69 = {(($unsigned(reg63) ?
                          $signed(wire56) : ((8'ha2) ?
                              (8'had) : reg44)) >= (((8'haf) & reg43) >= $signed(reg53)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h81):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire15;
  input wire signed [(3'h5):(1'h0)] wire14;
  input wire signed [(4'ha):(1'h0)] wire13;
  input wire signed [(4'h8):(1'h0)] wire12;
  wire signed [(3'h6):(1'h0)] wire35;
  wire signed [(3'h4):(1'h0)] wire34;
  wire signed [(3'h6):(1'h0)] wire33;
  wire [(3'h4):(1'h0)] wire32;
  wire signed [(4'ha):(1'h0)] wire31;
  wire signed [(3'h6):(1'h0)] wire18;
  wire [(4'h8):(1'h0)] wire17;
  wire signed [(4'h8):(1'h0)] wire16;
  reg signed [(3'h6):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg28 = (1'h0);
  reg [(3'h5):(1'h0)] reg27 = (1'h0);
  reg [(3'h5):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg25 = (1'h0);
  reg [(3'h4):(1'h0)] reg24 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg23 = (1'h0);
  reg [(4'h9):(1'h0)] reg22 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg21 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg20 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg19 = (1'h0);
  assign y = {wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire18,
                 wire17,
                 wire16,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire16 = $signed({(wire15 ? wire15[(2'h2):(1'h0)] : $signed(wire13))});
  assign wire17 = $unsigned(wire12);
  assign wire18 = wire14[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      if ($unsigned(($unsigned($unsigned(wire16)) ?
          (wire16 <<< wire16) : (+(~wire15)))))
        begin
          reg19 <= wire14[(2'h2):(2'h2)];
        end
      else
        begin
          reg19 <= (~^$signed(((wire13 & wire16) ~^ $signed(wire15))));
          if ($unsigned(wire18))
            begin
              reg20 <= wire15;
              reg21 <= (wire13 ?
                  $signed(wire18[(3'h6):(3'h6)]) : (~|(|$unsigned(wire17))));
              reg22 <= (($unsigned((|wire13)) == wire15) < (((~^(8'ha2)) ~^ (wire13 ^ reg19)) < wire12));
            end
          else
            begin
              reg20 <= (!reg22);
              reg21 <= $unsigned((((reg22 << wire17) ~^ (&reg22)) ^ (~&(&wire15))));
              reg22 <= (!({(wire15 ? wire18 : wire12)} | wire18));
            end
          reg23 <= $signed(($signed($signed(wire17)) >> ({wire17} ?
              (wire17 ? wire18 : wire16) : reg22[(3'h6):(1'h0)])));
        end
      if ($unsigned(reg23))
        begin
          reg24 <= $signed($signed(reg22[(4'h9):(3'h4)]));
          if ($signed((({wire13} ^~ wire17[(3'h7):(3'h7)]) ?
              $signed((reg19 & wire18)) : $signed(((8'ha6) ?
                  (8'hb0) : reg19)))))
            begin
              reg25 <= (wire15[(4'h8):(4'h8)] ?
                  reg23[(2'h3):(2'h2)] : (^~(^wire18)));
              reg26 <= reg22[(3'h7):(3'h7)];
            end
          else
            begin
              reg25 <= (-(($unsigned(reg23) ? reg21 : {wire14}) ?
                  ($unsigned(wire17) ?
                      (~^reg24) : wire17[(3'h7):(1'h0)]) : (~^(wire14 ?
                      wire12 : reg26))));
              reg26 <= wire12[(1'h1):(1'h1)];
            end
          if ((8'h9f))
            begin
              reg27 <= $signed($unsigned(reg24[(1'h0):(1'h0)]));
              reg28 <= wire14;
              reg29 <= wire12;
            end
          else
            begin
              reg27 <= $signed($unsigned({(wire15 ? (8'ha4) : reg28)}));
              reg28 <= (reg24 ?
                  reg26 : ({$signed(reg27)} ^~ $unsigned((reg26 ?
                      reg27 : wire13))));
            end
        end
      else
        begin
          reg24 <= (&$unsigned((~$signed(wire14))));
          reg25 <= reg28;
        end
      reg30 <= $unsigned((wire18[(1'h0):(1'h0)] ?
          (8'h9f) : $unsigned((reg28 ? reg19 : reg27))));
    end
  assign wire31 = {(-(wire17 ? {reg26} : {reg22}))};
  assign wire32 = $signed(($signed((reg29 ?
                      reg19 : reg28)) >> (reg30 & ((8'ha4) ?
                      wire18 : wire12))));
  assign wire33 = {((^reg27) <<< ((~reg25) ? wire17[(2'h2):(2'h2)] : wire32))};
  assign wire34 = ($unsigned(reg27) ^ (($signed(wire33) << (reg28 ?
                      wire12 : reg22)) ^ wire16[(2'h3):(2'h2)]));
  assign wire35 = $unsigned(reg27);
endmodule