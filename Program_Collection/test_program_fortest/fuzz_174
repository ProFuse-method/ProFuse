(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h92):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire23;
  wire [(3'h5):(1'h0)] wire22;
  wire [(4'hb):(1'h0)] wire21;
  wire [(2'h2):(1'h0)] wire20;
  wire [(3'h7):(1'h0)] wire11;
  wire signed [(4'hb):(1'h0)] wire10;
  wire signed [(3'h5):(1'h0)] wire9;
  wire signed [(3'h5):(1'h0)] wire8;
  wire [(2'h3):(1'h0)] wire7;
  reg signed [(4'h8):(1'h0)] reg19 = (1'h0);
  reg [(2'h2):(1'h0)] reg18 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg17 = (1'h0);
  reg [(2'h3):(1'h0)] reg16 = (1'h0);
  reg [(3'h4):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg14 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg13 = (1'h0);
  reg [(4'hb):(1'h0)] reg12 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg5 = (1'h0);
  reg [(4'hb):(1'h0)] reg4 = (1'h0);
  assign y = {wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ({wire1[(3'h5):(2'h3)]})
        begin
          reg4 <= ((8'had) ?
              $signed($signed((wire0 + wire1))) : ((8'ha4) ?
                  $signed((wire0 ? wire1 : (8'h9f))) : wire1));
          reg5 <= (^~$signed((!(~|wire0))));
        end
      else
        begin
          reg4 <= ((~^$unsigned($signed(wire1))) << ((-(8'ha5)) ?
              ($signed((8'hae)) ?
                  (~^reg4) : wire2[(4'h9):(2'h2)]) : ($unsigned((8'had)) ?
                  wire1 : (wire0 && reg5))));
          if (reg4)
            begin
              reg5 <= $signed($unsigned(((~^reg4) * {reg5})));
            end
          else
            begin
              reg5 <= (wire1 <= $unsigned(((wire0 ?
                  (8'ha0) : wire0) <= ((8'ha1) || wire1))));
            end
          reg6 <= $signed((reg4[(3'h4):(1'h1)] >>> (wire2[(3'h4):(1'h0)] && (+wire0))));
        end
    end
  assign wire7 = $unsigned($signed($unsigned($unsigned(wire1))));
  assign wire8 = wire0;
  assign wire9 = $signed(wire1[(2'h3):(1'h0)]);
  assign wire10 = (8'h9d);
  assign wire11 = (-(((wire7 ~^ reg4) != (wire9 > wire9)) >>> $signed($unsigned(wire8))));
  always
    @(posedge clk) begin
      if ((^~$unsigned(($signed(wire0) ?
          reg6[(3'h6):(1'h0)] : $unsigned(reg4)))))
        begin
          reg12 <= (((^(wire10 ^ wire1)) ?
                  wire8[(1'h1):(1'h0)] : ((~|reg6) && $signed(wire9))) ?
              wire0 : reg6[(3'h5):(2'h3)]);
        end
      else
        begin
          if ((8'haf))
            begin
              reg12 <= ($unsigned(reg4[(3'h4):(3'h4)]) ?
                  ({(wire0 ? wire9 : wire2)} ?
                      $signed($signed(reg6)) : (wire8[(2'h2):(1'h1)] && (wire2 >>> wire8))) : ((8'haf) ?
                      wire9 : wire11));
              reg13 <= {$signed(reg12[(4'hb):(3'h6)])};
            end
          else
            begin
              reg12 <= $signed(($signed((wire10 ?
                  reg5 : reg6)) | $unsigned($unsigned((8'ha8)))));
            end
          reg14 <= (8'h9c);
        end
      if (((wire7 >> $unsigned(reg4)) ?
          (&($unsigned((8'ha7)) | $signed(wire2))) : ($signed($unsigned(reg4)) || reg5[(1'h1):(1'h1)])))
        begin
          reg15 <= wire9;
          if (reg6[(1'h1):(1'h0)])
            begin
              reg16 <= reg13;
              reg17 <= wire9;
              reg18 <= $unsigned((!{(|reg14)}));
            end
          else
            begin
              reg16 <= reg13[(1'h1):(1'h0)];
              reg17 <= ((^wire1) <<< reg12);
              reg18 <= reg5[(3'h5):(1'h1)];
            end
        end
      else
        begin
          reg15 <= wire11[(1'h0):(1'h0)];
          reg16 <= wire8[(3'h4):(1'h0)];
        end
      reg19 <= (+{reg14[(2'h2):(1'h1)]});
    end
  assign wire20 = (wire3[(1'h0):(1'h0)] ?
                      $unsigned($signed({reg13})) : {((8'ha3) ?
                              wire7[(1'h0):(1'h0)] : reg18[(1'h1):(1'h1)])});
  assign wire21 = ($unsigned((+wire20[(2'h2):(2'h2)])) & (reg13[(3'h5):(2'h2)] ?
                      reg15 : reg12));
  assign wire22 = $unsigned(wire7[(1'h0):(1'h0)]);
  assign wire23 = {$signed(((wire21 ? reg4 : (8'ha6)) >> (^reg19)))};
endmodule