(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param23 = (({(~^(8'hb0))} ? {{(8'h9c)}} : ((&(8'hab)) >> ((8'ha7) ? (8'ha6) : (8'hab)))) >>> {(((8'h9e) <= (8'ha5)) && {(8'ha8)})}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h29):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire20;
  wire [(4'h9):(1'h0)] wire19;
  wire [(3'h5):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire15;
  reg signed [(4'hb):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg21 = (1'h0);
  reg [(4'h8):(1'h0)] reg17 = (1'h0);
  assign y = {wire20, wire19, wire18, wire15, reg22, reg21, reg17, (1'h0)};
  module4 #() modinst16 (.wire6(wire2), .y(wire15), .wire5(wire3), .wire7(wire0), .clk(clk), .wire8(wire1));
  always
    @(posedge clk) begin
      reg17 <= $unsigned(($signed($unsigned((8'h9e))) ?
          $unsigned((wire1 ? wire1 : wire15)) : $signed(wire1)));
    end
  assign wire18 = $unsigned(wire0[(1'h0):(1'h0)]);
  assign wire19 = $unsigned((&{{wire1}}));
  assign wire20 = {(~&$signed((wire3 >> wire3)))};
  always
    @(posedge clk) begin
      reg21 <= (wire15[(1'h0):(1'h0)] || (wire2[(1'h1):(1'h0)] != $unsigned(wire2)));
      reg22 <= ($signed((!$signed((8'ha7)))) ? wire20 : wire20[(2'h2):(1'h0)]);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param14 = (({(!(8'haa))} ^~ ((-(8'had)) >= {(8'hab)})) ^~ (((&(8'hab)) ? ((8'hae) >= (8'h9d)) : ((8'hb0) ? (8'haa) : (8'ha6))) != (-((8'h9f) >= (8'ha6))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h1c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire8;
  input wire signed [(4'h9):(1'h0)] wire7;
  input wire signed [(3'h6):(1'h0)] wire6;
  input wire signed [(3'h6):(1'h0)] wire5;
  wire signed [(2'h3):(1'h0)] wire13;
  wire [(3'h7):(1'h0)] wire12;
  wire signed [(2'h2):(1'h0)] wire10;
  wire [(4'h8):(1'h0)] wire9;
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  assign y = {wire13, wire12, wire10, wire9, reg11, (1'h0)};
  assign wire9 = (|wire7);
  assign wire10 = (($signed((wire7 ?
                          (8'ha5) : wire6)) ^~ $signed($signed(wire9))) ?
                      wire7 : $signed(($signed(wire9) ?
                          $signed(wire9) : wire5)));
  always
    @(posedge clk) begin
      reg11 <= $unsigned($signed($signed({wire8})));
    end
  assign wire12 = ((+wire6[(2'h3):(2'h3)]) ?
                      (wire5 ?
                          ((&wire10) < $signed(wire10)) : $unsigned($signed(wire5))) : $signed($unsigned(wire6)));
  assign wire13 = wire10;
endmodule