(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param56 = ((({(8'had)} ? ((8'ha9) > (8'ha5)) : (~|(8'h9d))) < ((+(8'ha1)) ? ((8'ha5) + (8'h9d)) : ((8'ha4) - (8'ha8)))) ~^ ((~^((8'h9e) ? (8'h9d) : (8'ha7))) ? (((8'ha9) | (8'h9f)) ? ((8'ha5) ? (8'hae) : (8'hac)) : (|(8'ha1))) : (~(&(8'hae))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire54;
  wire [(2'h3):(1'h0)] wire50;
  wire signed [(4'h8):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg55 = (1'h0);
  reg [(2'h2):(1'h0)] reg53 = (1'h0);
  reg [(4'hb):(1'h0)] reg52 = (1'h0);
  assign y = {wire54, wire50, wire5, wire4, reg55, reg53, reg52, (1'h0)};
  assign wire4 = (&{(8'ha3)});
  assign wire5 = $signed($unsigned($unsigned((-(8'h9d)))));
  module6 #() modinst51 (wire50, clk, wire5, wire0, wire2, wire3);
  always
    @(posedge clk) begin
      reg52 <= wire5[(4'h8):(2'h2)];
      reg53 <= (^{$signed({(8'hb0)})});
    end
  assign wire54 = wire3[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg55 <= wire2[(3'h5):(3'h5)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire10;
  input wire signed [(3'h4):(1'h0)] wire9;
  input wire signed [(3'h5):(1'h0)] wire8;
  input wire [(4'h8):(1'h0)] wire7;
  wire [(4'h9):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire26;
  wire signed [(3'h6):(1'h0)] wire14;
  wire [(3'h5):(1'h0)] wire13;
  wire [(4'h9):(1'h0)] wire11;
  wire [(4'h8):(1'h0)] wire31;
  wire [(2'h2):(1'h0)] wire46;
  reg [(3'h6):(1'h0)] reg12 = (1'h0);
  reg [(3'h4):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg29 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg30 = (1'h0);
  assign y = {wire48,
                 wire26,
                 wire14,
                 wire13,
                 wire11,
                 wire31,
                 wire46,
                 reg12,
                 reg28,
                 reg29,
                 reg30,
                 (1'h0)};
  assign wire11 = (8'h9c);
  always
    @(posedge clk) begin
      reg12 <= (|$signed(((|(8'hae)) * $unsigned(wire7))));
    end
  assign wire13 = ({($signed(wire10) ? (~^wire9) : (wire7 * wire9))} || reg12);
  assign wire14 = $unsigned(reg12[(1'h0):(1'h0)]);
  module15 #() modinst27 (wire26, clk, wire14, reg12, wire9, wire11);
  always
    @(posedge clk) begin
      reg28 <= $unsigned((($signed(wire14) ?
              reg12[(1'h0):(1'h0)] : wire13[(1'h0):(1'h0)]) ?
          (^~{wire10}) : (~|{reg12})));
      reg29 <= $unsigned({{(reg12 ? wire8 : (8'h9c))}});
      reg30 <= wire9[(3'h4):(1'h1)];
    end
  assign wire31 = {$unsigned(wire13[(3'h4):(2'h2)])};
  module32 #() modinst47 (wire46, clk, reg29, wire8, wire26, wire7);
  module15 #() modinst49 (wire48, clk, wire14, reg29, wire13, reg30);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module32  (y, clk, wire36, wire35, wire34, wire33);
  output wire [(32'h3e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire36;
  input wire [(2'h2):(1'h0)] wire35;
  input wire signed [(3'h7):(1'h0)] wire34;
  input wire signed [(4'h8):(1'h0)] wire33;
  wire [(3'h5):(1'h0)] wire45;
  wire signed [(3'h5):(1'h0)] wire44;
  wire [(4'ha):(1'h0)] wire43;
  wire [(3'h5):(1'h0)] wire42;
  wire [(4'h9):(1'h0)] wire41;
  wire signed [(2'h2):(1'h0)] wire40;
  wire [(4'h8):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire37;
  reg signed [(4'h9):(1'h0)] reg39 = (1'h0);
  assign y = {wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire38,
                 wire37,
                 reg39,
                 (1'h0)};
  assign wire37 = (8'hae);
  assign wire38 = $signed((($signed(wire33) <= wire37[(3'h6):(3'h4)]) ?
                      wire34 : (((8'ha4) != wire33) ?
                          $signed(wire33) : (wire33 & wire34))));
  always
    @(posedge clk) begin
      reg39 <= (8'ha6);
    end
  assign wire40 = $signed((($signed(wire38) != (wire33 ~^ wire33)) ^~ wire35));
  assign wire41 = $signed(($signed(wire38) ?
                      ($signed((8'ha7)) ?
                          ((8'hac) ? wire35 : wire36) : (wire36 ?
                              wire35 : wire33)) : wire33[(1'h1):(1'h0)]));
  assign wire42 = $signed($signed(({wire38} != $signed(wire38))));
  assign wire43 = ((&$unsigned(wire33)) ?
                      (($signed((8'hac)) ? (wire35 == wire42) : {(8'had)}) ?
                          $unsigned((wire34 >>> (8'ha2))) : ((wire33 > wire37) ?
                              (wire34 ?
                                  wire42 : wire33) : $unsigned(reg39))) : wire33);
  assign wire44 = $signed(wire37);
  assign wire45 = (|((~|$signed((8'had))) - $signed($unsigned((8'h9c)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param25 = (~&((8'hab) ? (|(~^(8'ha7))) : (((8'ha6) ? (8'ha7) : (8'ha9)) ? {(8'ha8)} : ((8'h9f) & (8'hb0))))))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h1d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire19;
  input wire [(3'h6):(1'h0)] wire18;
  input wire [(3'h4):(1'h0)] wire17;
  input wire signed [(4'h9):(1'h0)] wire16;
  wire signed [(2'h3):(1'h0)] wire24;
  wire signed [(2'h3):(1'h0)] wire23;
  wire [(4'h8):(1'h0)] wire22;
  wire [(4'ha):(1'h0)] wire21;
  wire signed [(3'h4):(1'h0)] wire20;
  assign y = {wire24, wire23, wire22, wire21, wire20, (1'h0)};
  assign wire20 = (wire17[(2'h3):(1'h0)] ?
                      $unsigned(wire19[(1'h1):(1'h1)]) : wire18[(3'h5):(2'h2)]);
  assign wire21 = $unsigned({(wire16[(3'h6):(3'h6)] ?
                          wire17[(2'h3):(2'h3)] : $signed((8'ha4)))});
  assign wire22 = {(wire17[(2'h3):(1'h1)] << (8'ha1))};
  assign wire23 = (~^({wire22} - wire21));
  assign wire24 = ($unsigned({{(8'ha7)}}) ?
                      $unsigned((~(8'ha0))) : wire17[(2'h3):(1'h0)]);
endmodule