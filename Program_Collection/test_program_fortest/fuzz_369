(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param83 = ((+{{(8'ha8)}}) ? ((^~((8'ha6) ? (8'ha4) : (8'ha3))) != {(~(8'hac))}) : {(((8'ha4) ? (8'ha8) : (8'h9d)) != {(8'ha3)})}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h6f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire77;
  wire [(3'h5):(1'h0)] wire76;
  wire [(4'hb):(1'h0)] wire75;
  wire [(4'h8):(1'h0)] wire74;
  wire [(4'h9):(1'h0)] wire71;
  wire signed [(4'h9):(1'h0)] wire69;
  wire signed [(3'h6):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg82 = (1'h0);
  reg [(3'h6):(1'h0)] reg81 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg80 = (1'h0);
  reg [(4'h8):(1'h0)] reg79 = (1'h0);
  reg [(3'h5):(1'h0)] reg78 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg73 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg72 = (1'h0);
  assign y = {wire77,
                 wire76,
                 wire75,
                 wire74,
                 wire71,
                 wire69,
                 wire5,
                 wire4,
                 reg82,
                 reg81,
                 reg80,
                 reg79,
                 reg78,
                 reg73,
                 reg72,
                 (1'h0)};
  assign wire4 = wire1;
  assign wire5 = ((!(+(|wire1))) ?
                     wire0[(3'h6):(1'h0)] : $unsigned(($signed(wire2) | (wire2 ~^ wire4))));
  module6 #() modinst70 (wire69, clk, wire1, wire5, wire0, wire3);
  assign wire71 = wire3[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      reg72 <= {(+wire71[(2'h2):(1'h1)])};
      reg73 <= (wire5[(1'h1):(1'h1)] ?
          wire0 : $signed(((~&wire2) && reg72[(3'h4):(1'h0)])));
    end
  assign wire74 = ({wire5[(3'h4):(2'h3)]} ^~ $signed(($signed(wire69) && ((8'hab) ?
                      wire3 : (8'ha4)))));
  assign wire75 = reg72[(1'h0):(1'h0)];
  assign wire76 = wire4[(4'hb):(4'h8)];
  assign wire77 = $unsigned(wire3[(2'h3):(1'h1)]);
  always
    @(posedge clk) begin
      if (wire75[(3'h5):(3'h5)])
        begin
          reg78 <= ($signed($unsigned(wire69[(4'h8):(1'h1)])) >>> $signed($signed({wire3})));
        end
      else
        begin
          if (($unsigned(($unsigned((8'ha4)) ?
              $unsigned((8'hb0)) : (wire1 < wire71))) != $unsigned($signed($signed(reg78)))))
            begin
              reg78 <= (wire2 == (reg78[(3'h5):(2'h2)] > (wire2 ?
                  ((8'hb0) || (8'h9d)) : reg73)));
              reg79 <= ($unsigned($signed(wire69)) ?
                  wire75[(3'h7):(2'h3)] : (wire77 ?
                      wire3[(3'h4):(2'h2)] : (&$signed(wire69))));
              reg80 <= ($unsigned($unsigned((|wire75))) > $signed($unsigned((reg73 ?
                  wire76 : reg72))));
            end
          else
            begin
              reg78 <= ($unsigned(wire74[(1'h0):(1'h0)]) ?
                  $unsigned(wire69[(2'h2):(1'h1)]) : ({(-wire77)} > wire1));
            end
          reg81 <= wire4;
          reg82 <= ($signed($unsigned(wire76)) != $unsigned({(reg79 ?
                  wire1 : wire4)}));
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h76):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire10;
  input wire signed [(3'h6):(1'h0)] wire9;
  input wire [(2'h3):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire7;
  wire signed [(4'h8):(1'h0)] wire68;
  wire [(3'h4):(1'h0)] wire67;
  wire [(3'h5):(1'h0)] wire66;
  wire [(4'ha):(1'h0)] wire62;
  wire signed [(4'h8):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire36;
  wire signed [(4'hb):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire15;
  wire signed [(3'h7):(1'h0)] wire14;
  wire [(4'h9):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire12;
  wire [(4'ha):(1'h0)] wire11;
  reg [(4'h8):(1'h0)] reg65 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg64 = (1'h0);
  assign y = {wire68,
                 wire67,
                 wire66,
                 wire62,
                 wire38,
                 wire36,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 reg65,
                 reg64,
                 (1'h0)};
  assign wire11 = $signed($signed({$signed((8'ha4))}));
  assign wire12 = $unsigned(({$signed(wire8)} ?
                      {wire8} : ((wire10 ? wire8 : wire10) ?
                          $unsigned(wire7) : wire8)));
  assign wire13 = (wire8 >> {(&wire11)});
  assign wire14 = wire12;
  assign wire15 = wire14[(2'h3):(1'h1)];
  assign wire16 = $unsigned(wire13);
  module17 #() modinst37 (wire36, clk, wire16, wire15, wire14, wire7);
  assign wire38 = ($signed(wire10) | $signed((wire7[(3'h4):(3'h4)] < (~|wire9))));
  module39 #() modinst63 (.wire41(wire7), .y(wire62), .wire40(wire16), .clk(clk), .wire42(wire12), .wire43(wire15));
  always
    @(posedge clk) begin
      reg64 <= {$signed($signed(wire38))};
      reg65 <= wire38[(1'h0):(1'h0)];
    end
  assign wire66 = (^~($unsigned(wire8) ?
                      $unsigned(reg64) : (wire15 >> wire36[(2'h2):(1'h0)])));
  assign wire67 = (|(((wire62 + wire7) ?
                      $unsigned((8'ha2)) : reg64[(3'h5):(2'h3)]) * ((wire13 | wire16) ?
                      (-(8'had)) : wire16)));
  assign wire68 = ((&(+reg64)) < (($unsigned(wire10) * $unsigned(wire62)) != wire66[(3'h4):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module39
#(parameter param61 = {(&(((8'h9f) ? (8'h9f) : (8'haa)) ? {(8'hab)} : (8'ha2)))})
(y, clk, wire43, wire42, wire41, wire40);
  output wire [(32'h68):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire43;
  input wire signed [(4'ha):(1'h0)] wire42;
  input wire signed [(3'h4):(1'h0)] wire41;
  input wire [(4'h8):(1'h0)] wire40;
  wire [(3'h5):(1'h0)] wire58;
  wire signed [(4'h9):(1'h0)] wire57;
  wire [(3'h6):(1'h0)] wire56;
  wire signed [(3'h5):(1'h0)] wire49;
  wire [(4'h8):(1'h0)] wire46;
  wire [(3'h7):(1'h0)] wire45;
  wire [(3'h5):(1'h0)] wire44;
  reg [(4'h9):(1'h0)] reg60 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg59 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg54 = (1'h0);
  reg [(4'h9):(1'h0)] reg53 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg52 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg50 = (1'h0);
  reg [(3'h6):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg47 = (1'h0);
  assign y = {wire58,
                 wire57,
                 wire56,
                 wire49,
                 wire46,
                 wire45,
                 wire44,
                 reg60,
                 reg59,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg48,
                 reg47,
                 (1'h0)};
  assign wire44 = wire41;
  assign wire45 = {wire41[(2'h3):(1'h0)]};
  assign wire46 = (~|wire40);
  always
    @(posedge clk) begin
      reg47 <= ($signed($unsigned((wire43 <= wire44))) == $signed(wire41));
      reg48 <= (^($signed($signed(wire44)) | $signed({wire44})));
    end
  assign wire49 = (8'ha8);
  always
    @(posedge clk) begin
      reg50 <= ({($unsigned(reg47) * (~|reg48))} ?
          reg47[(1'h1):(1'h1)] : (-wire42[(1'h0):(1'h0)]));
      reg51 <= wire46[(4'h8):(3'h5)];
      reg52 <= ($signed($signed(reg50)) ?
          $signed((^$unsigned(wire42))) : (^~{$unsigned(wire40)}));
    end
  always
    @(posedge clk) begin
      reg53 <= $signed((reg52[(1'h1):(1'h1)] + {(wire42 && reg51)}));
      reg54 <= $unsigned($unsigned((reg53[(4'h8):(3'h6)] < wire42)));
      reg55 <= wire43[(3'h7):(3'h4)];
    end
  assign wire56 = ($unsigned($signed((reg52 ?
                      reg50 : wire45))) >= (((!wire43) * (reg53 < (8'ha9))) == (-(reg48 > wire43))));
  assign wire57 = wire56;
  assign wire58 = ({(&$unsigned(reg53))} >>> ($unsigned($signed(reg47)) ~^ ($unsigned(reg51) && (~|reg53))));
  always
    @(posedge clk) begin
      reg59 <= $unsigned($signed(($signed(reg51) ?
          wire56 : wire57[(2'h2):(1'h1)])));
      reg60 <= $unsigned((&((reg52 >> reg59) ? wire49 : $signed(reg54))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17
#(parameter param35 = {((~|(^(8'had))) & ({(8'ha2)} ? (&(8'hac)) : (~&(8'had))))})
(y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire21;
  input wire signed [(4'hb):(1'h0)] wire20;
  input wire signed [(3'h7):(1'h0)] wire19;
  input wire signed [(2'h3):(1'h0)] wire18;
  wire signed [(2'h3):(1'h0)] wire33;
  wire signed [(3'h5):(1'h0)] wire32;
  wire signed [(2'h2):(1'h0)] wire31;
  wire signed [(2'h2):(1'h0)] wire30;
  wire signed [(2'h2):(1'h0)] wire29;
  wire signed [(3'h4):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire27;
  wire [(3'h7):(1'h0)] wire26;
  wire signed [(4'h8):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire24;
  wire signed [(3'h6):(1'h0)] wire23;
  wire signed [(3'h4):(1'h0)] wire22;
  reg [(4'h8):(1'h0)] reg34 = (1'h0);
  assign y = {wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 reg34,
                 (1'h0)};
  assign wire22 = ($unsigned(wire19) >= ({(&wire20)} ^~ wire21[(1'h1):(1'h1)]));
  assign wire23 = $unsigned($unsigned({(wire20 < wire18)}));
  assign wire24 = $unsigned({{(wire22 >= wire20)}});
  assign wire25 = (wire20 - $signed($signed((wire19 <<< wire24))));
  assign wire26 = {(wire20[(2'h2):(2'h2)] << $signed($unsigned(wire23)))};
  assign wire27 = $unsigned($signed((((8'ha6) + wire20) == wire22[(2'h3):(1'h0)])));
  assign wire28 = wire23;
  assign wire29 = (^~wire19);
  assign wire30 = wire29;
  assign wire31 = (wire19[(3'h5):(1'h1)] - $unsigned((wire27 ?
                      (wire28 ? wire30 : wire21) : (~^wire20))));
  assign wire32 = $signed($signed($unsigned(wire25[(3'h6):(2'h3)])));
  assign wire33 = $signed((^~$signed((wire27 ? wire25 : wire27))));
  always
    @(posedge clk) begin
      reg34 <= wire19[(2'h2):(1'h1)];
    end
endmodule