(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h7d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire0;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(3'h5):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire3;
  wire [(4'hb):(1'h0)] wire63;
  wire [(2'h2):(1'h0)] wire62;
  wire signed [(3'h6):(1'h0)] wire61;
  wire [(4'h8):(1'h0)] wire58;
  wire [(2'h3):(1'h0)] wire57;
  wire [(2'h3):(1'h0)] wire56;
  wire [(4'h8):(1'h0)] wire11;
  wire signed [(3'h4):(1'h0)] wire54;
  reg [(4'hb):(1'h0)] reg60 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg59 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg4 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg5 = (1'h0);
  reg [(3'h5):(1'h0)] reg6 = (1'h0);
  reg [(3'h7):(1'h0)] reg7 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg9 = (1'h0);
  reg [(4'h8):(1'h0)] reg10 = (1'h0);
  assign y = {wire63,
                 wire62,
                 wire61,
                 wire58,
                 wire57,
                 wire56,
                 wire11,
                 wire54,
                 reg60,
                 reg59,
                 reg4,
                 reg5,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= $signed(({$unsigned(wire1)} >= ({wire3} ?
          wire1 : $signed(wire2))));
      reg5 <= $unsigned(((wire3 ? (8'ha9) : (reg4 | (8'hab))) ?
          $unsigned((~wire0)) : reg4[(3'h5):(1'h1)]));
      if (((|$unsigned((wire1 & reg5))) << ($signed(wire1) >= (reg5[(1'h0):(1'h0)] << $unsigned(wire1)))))
        begin
          if (wire0[(1'h1):(1'h1)])
            begin
              reg6 <= reg5;
            end
          else
            begin
              reg6 <= wire2[(1'h0):(1'h0)];
            end
          reg7 <= ((((reg4 ? wire2 : reg4) ? wire3 : $signed(wire2)) ?
              reg5 : wire0) && (~&$signed(wire3)));
        end
      else
        begin
          reg6 <= {$unsigned(((!wire3) ?
                  $signed((8'hae)) : reg4[(3'h6):(2'h3)]))};
          reg7 <= (wire2 ?
              $signed($unsigned(wire2[(3'h4):(2'h3)])) : reg6[(3'h5):(2'h3)]);
        end
    end
  always
    @(posedge clk) begin
      if ((wire2 ?
          (reg6 ^~ reg5[(3'h5):(1'h1)]) : $signed((+((8'haf) ^ wire2)))))
        begin
          reg8 <= (~|(wire2[(2'h3):(1'h1)] ?
              wire3[(3'h6):(3'h6)] : $unsigned(wire2)));
          reg9 <= reg6[(2'h3):(2'h3)];
          reg10 <= (+((reg6 | $unsigned(wire0)) ^ $unsigned($signed(reg6))));
        end
      else
        begin
          reg8 <= wire1[(4'ha):(4'ha)];
        end
    end
  assign wire11 = {$signed((8'h9c))};
  module12 #() modinst55 (.wire14(reg7), .wire15(wire0), .wire13(reg10), .wire16(reg8), .clk(clk), .y(wire54));
  assign wire56 = (+(wire1[(3'h4):(1'h1)] ?
                      $signed(((8'h9d) <= reg6)) : (8'ha3)));
  assign wire57 = wire1;
  assign wire58 = ((~|$unsigned($unsigned(wire3))) ^ wire56);
  always
    @(posedge clk) begin
      reg59 <= reg8[(2'h3):(2'h3)];
      reg60 <= $unsigned($signed($unsigned(((8'ha9) >>> wire54))));
    end
  assign wire61 = reg5;
  assign wire62 = reg59[(4'h8):(2'h2)];
  assign wire63 = ($unsigned(wire1) + $signed(((~|wire57) ?
                      ((8'ha6) | wire1) : reg7[(3'h6):(1'h0)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h88):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire16;
  input wire [(4'h9):(1'h0)] wire15;
  input wire signed [(3'h7):(1'h0)] wire14;
  input wire signed [(3'h4):(1'h0)] wire13;
  wire signed [(3'h4):(1'h0)] wire53;
  wire signed [(3'h5):(1'h0)] wire52;
  wire [(4'hb):(1'h0)] wire51;
  wire [(3'h7):(1'h0)] wire50;
  wire signed [(3'h5):(1'h0)] wire49;
  wire signed [(3'h6):(1'h0)] wire48;
  wire [(4'ha):(1'h0)] wire47;
  wire signed [(3'h4):(1'h0)] wire46;
  wire [(3'h6):(1'h0)] wire42;
  wire signed [(3'h5):(1'h0)] wire41;
  wire signed [(4'hb):(1'h0)] wire39;
  reg [(3'h7):(1'h0)] reg45 = (1'h0);
  reg [(2'h3):(1'h0)] reg44 = (1'h0);
  reg [(4'ha):(1'h0)] reg43 = (1'h0);
  reg [(4'hb):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg21 = (1'h0);
  reg [(3'h5):(1'h0)] reg20 = (1'h0);
  reg [(3'h4):(1'h0)] reg19 = (1'h0);
  reg [(4'ha):(1'h0)] reg18 = (1'h0);
  reg [(3'h6):(1'h0)] reg17 = (1'h0);
  assign y = {wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire42,
                 wire41,
                 wire39,
                 reg45,
                 reg44,
                 reg43,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (($unsigned(($unsigned(wire14) >= $unsigned(wire16))) > $signed((wire13[(2'h2):(1'h0)] ?
          (wire14 ? wire13 : wire13) : wire16))))
        begin
          if ((+$unsigned(((-wire15) ?
              wire15[(3'h5):(2'h2)] : $signed((8'h9d))))))
            begin
              reg17 <= (8'ha0);
              reg18 <= (&(((wire14 | wire15) ?
                  (&wire16) : wire13) ~^ $unsigned(wire15[(4'h8):(4'h8)])));
              reg19 <= ($unsigned(wire14) ?
                  {reg18} : ({{wire14}} ? (8'ha2) : $signed(reg17)));
            end
          else
            begin
              reg17 <= wire15;
            end
        end
      else
        begin
          if (reg18)
            begin
              reg17 <= ((^$unsigned($unsigned(reg19))) || reg17);
              reg18 <= $unsigned(wire14[(3'h4):(1'h1)]);
              reg19 <= $unsigned((-wire13[(3'h4):(3'h4)]));
            end
          else
            begin
              reg17 <= (reg18 >> (&wire15));
              reg18 <= ((~^reg19[(3'h4):(1'h0)]) ?
                  $unsigned($unsigned((reg19 ?
                      wire14 : wire14))) : $signed(wire14));
              reg19 <= ($unsigned((8'ha0)) - wire13[(2'h2):(1'h1)]);
            end
          reg20 <= ({wire13} ?
              (((wire16 ? reg19 : wire14) >>> ((8'h9e) ? reg19 : wire13)) ?
                  reg18 : reg18[(4'h8):(3'h4)]) : wire14[(3'h6):(2'h3)]);
        end
      reg21 <= (~((+(wire13 ^~ reg18)) ? $signed($signed(reg18)) : reg17));
      reg22 <= $unsigned(({{wire15}} ?
          reg19[(2'h3):(2'h3)] : $unsigned({reg17})));
    end
  module23 #() modinst40 (.y(wire39), .wire27(reg22), .wire25(wire14), .wire26(reg21), .wire24(wire15), .clk(clk));
  assign wire41 = $unsigned($unsigned($signed((8'h9d))));
  assign wire42 = ((~&$signed({wire39})) ^~ {reg20[(2'h2):(1'h0)]});
  always
    @(posedge clk) begin
      reg43 <= wire16;
      reg44 <= reg19[(2'h2):(1'h0)];
      reg45 <= {wire14[(1'h1):(1'h1)]};
    end
  assign wire46 = reg17;
  assign wire47 = reg18[(1'h1):(1'h1)];
  assign wire48 = wire39[(2'h3):(1'h0)];
  assign wire49 = (&(wire16 & (wire47[(2'h2):(2'h2)] ?
                      $signed(reg43) : (reg17 ^ wire46))));
  assign wire50 = wire48;
  assign wire51 = (8'ha6);
  assign wire52 = reg44;
  assign wire53 = (+(+($signed(reg22) || wire46)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23
#(parameter param38 = (~&(|((!(8'ha8)) ? ((8'hac) ? (8'haf) : (8'hac)) : (|(8'haf))))))
(y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'h3e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire27;
  input wire signed [(3'h5):(1'h0)] wire26;
  input wire signed [(3'h4):(1'h0)] wire25;
  input wire [(3'h4):(1'h0)] wire24;
  wire [(3'h6):(1'h0)] wire37;
  wire signed [(4'ha):(1'h0)] wire36;
  wire signed [(4'ha):(1'h0)] wire35;
  wire [(3'h5):(1'h0)] wire34;
  wire signed [(3'h7):(1'h0)] wire33;
  wire signed [(3'h4):(1'h0)] wire32;
  wire [(4'h8):(1'h0)] wire31;
  wire [(3'h4):(1'h0)] wire30;
  reg [(2'h3):(1'h0)] reg29 = (1'h0);
  reg [(3'h4):(1'h0)] reg28 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 reg29,
                 reg28,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg28 <= (wire25[(2'h2):(1'h1)] >= wire24);
      reg29 <= reg28[(3'h4):(1'h0)];
    end
  assign wire30 = (-wire24[(3'h4):(2'h3)]);
  assign wire31 = wire30[(3'h4):(1'h1)];
  assign wire32 = $signed((wire30[(2'h2):(1'h1)] << ((~^wire30) ?
                      (wire24 ? wire24 : wire27) : (wire30 > wire31))));
  assign wire33 = $unsigned(((8'ha6) >= ($signed(reg28) ?
                      reg28[(3'h4):(1'h1)] : (wire32 + wire25))));
  assign wire34 = (wire30 == (^~wire31));
  assign wire35 = $signed($signed($signed({(8'hab)})));
  assign wire36 = (|(($unsigned(wire25) | (~^wire33)) || ((+reg28) > wire25[(2'h2):(1'h1)])));
  assign wire37 = {$unsigned((wire35 ?
                          ((8'ha5) ? wire35 : reg28) : $unsigned((8'ha1))))};
endmodule