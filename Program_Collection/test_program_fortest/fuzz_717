(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param69 = (((((8'h9c) ? (8'haa) : (8'ha9)) << (8'ha1)) & ((+(8'h9f)) & {(8'h9d)})) ? ((^(^(8'ha6))) & {(^(8'hb0))}) : {{(^~(8'hab))}}))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h54):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire0;
  input wire [(2'h3):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire3;
  wire [(3'h4):(1'h0)] wire68;
  wire [(3'h6):(1'h0)] wire4;
  wire [(4'hb):(1'h0)] wire5;
  wire [(3'h4):(1'h0)] wire6;
  wire signed [(4'h8):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire66;
  reg signed [(4'hb):(1'h0)] reg7 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg8 = (1'h0);
  reg [(4'h9):(1'h0)] reg9 = (1'h0);
  reg [(4'h8):(1'h0)] reg10 = (1'h0);
  assign y = {wire68,
                 wire4,
                 wire5,
                 wire6,
                 wire11,
                 wire66,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 (1'h0)};
  assign wire4 = (8'haa);
  assign wire5 = (8'haa);
  assign wire6 = {($unsigned(wire5[(1'h0):(1'h0)]) ~^ wire0[(1'h0):(1'h0)])};
  always
    @(posedge clk) begin
      reg7 <= $signed($signed(((~wire3) ? $signed(wire5) : (wire2 >>> wire2))));
      reg8 <= wire0;
    end
  always
    @(posedge clk) begin
      if ((reg8 ? $unsigned(wire3) : (-{(~|(8'h9c))})))
        begin
          reg9 <= wire3;
        end
      else
        begin
          reg9 <= {wire5[(1'h1):(1'h0)]};
        end
      reg10 <= wire2[(3'h7):(3'h7)];
    end
  assign wire11 = $signed(reg7[(4'ha):(1'h0)]);
  module12 #() modinst67 (wire66, clk, wire3, wire11, reg10, wire5);
  assign wire68 = (-((8'ha2) ?
                      ($unsigned(wire2) & (wire5 ?
                          wire66 : wire6)) : wire6[(1'h1):(1'h1)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire16;
  input wire signed [(4'h8):(1'h0)] wire15;
  input wire [(3'h6):(1'h0)] wire14;
  input wire [(4'hb):(1'h0)] wire13;
  wire signed [(3'h6):(1'h0)] wire65;
  wire signed [(3'h6):(1'h0)] wire64;
  wire signed [(4'h8):(1'h0)] wire63;
  wire [(3'h4):(1'h0)] wire60;
  wire signed [(3'h6):(1'h0)] wire41;
  wire signed [(4'ha):(1'h0)] wire39;
  wire signed [(4'h9):(1'h0)] wire19;
  wire signed [(3'h4):(1'h0)] wire18;
  wire signed [(4'h9):(1'h0)] wire17;
  reg signed [(3'h5):(1'h0)] reg62 = (1'h0);
  assign y = {wire65,
                 wire64,
                 wire63,
                 wire60,
                 wire41,
                 wire39,
                 wire19,
                 wire18,
                 wire17,
                 reg62,
                 (1'h0)};
  assign wire17 = ((({wire15} ? wire14 : $signed(wire14)) <= (wire14 ?
                          $unsigned((8'h9e)) : {wire16})) ?
                      (|$unsigned(((8'had) ?
                          (8'ha3) : wire15))) : (($signed(wire16) ?
                              wire16[(2'h2):(2'h2)] : (wire15 ?
                                  wire13 : wire13)) ?
                          wire13[(2'h2):(2'h2)] : ($unsigned(wire14) ?
                              wire13 : wire13[(2'h2):(1'h1)])));
  assign wire18 = ((wire17[(2'h2):(2'h2)] & $signed(wire16)) == wire14);
  assign wire19 = (^~(^wire18[(3'h4):(2'h3)]));
  module20 #() modinst40 (.wire21(wire13), .y(wire39), .wire22(wire18), .wire23(wire14), .clk(clk), .wire24(wire17));
  assign wire41 = wire39;
  module42 #() modinst61 (.wire44(wire15), .clk(clk), .wire46(wire13), .y(wire60), .wire43(wire39), .wire45(wire41));
  always
    @(posedge clk) begin
      reg62 <= (^($unsigned(((8'ha5) ? wire41 : wire14)) ?
          $unsigned((wire13 ? wire13 : wire15)) : (wire15 ?
              (~^(8'haf)) : (wire17 ^ wire16))));
    end
  assign wire63 = (wire39[(3'h5):(1'h1)] ?
                      $unsigned(reg62[(3'h5):(1'h1)]) : ($signed(((8'ha4) ~^ (8'ha4))) ?
                          (&(8'ha8)) : $signed(((8'hb0) ? wire16 : wire16))));
  assign wire64 = ((wire39[(3'h7):(1'h1)] ?
                          ($unsigned((8'ha9)) ?
                              wire19[(4'h8):(4'h8)] : (8'h9d)) : (^~(wire39 >= wire41))) ?
                      (~({wire18} ?
                          (wire15 ? wire13 : wire15) : ((8'h9f) ?
                              (8'had) : (8'had)))) : (~^(8'had)));
  assign wire65 = reg62[(2'h3):(2'h3)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module42  (y, clk, wire46, wire45, wire44, wire43);
  output wire [(32'h68):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire46;
  input wire signed [(2'h3):(1'h0)] wire45;
  input wire signed [(3'h7):(1'h0)] wire44;
  input wire [(4'ha):(1'h0)] wire43;
  wire signed [(3'h7):(1'h0)] wire59;
  wire [(3'h6):(1'h0)] wire58;
  wire signed [(2'h3):(1'h0)] wire57;
  wire [(4'ha):(1'h0)] wire56;
  wire signed [(4'ha):(1'h0)] wire55;
  wire [(4'h8):(1'h0)] wire54;
  wire signed [(4'hb):(1'h0)] wire52;
  wire [(4'h8):(1'h0)] wire51;
  wire signed [(3'h7):(1'h0)] wire50;
  wire signed [(4'ha):(1'h0)] wire49;
  wire [(3'h6):(1'h0)] wire48;
  wire [(4'h9):(1'h0)] wire47;
  reg signed [(4'h8):(1'h0)] reg53 = (1'h0);
  assign y = {wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 reg53,
                 (1'h0)};
  assign wire47 = wire45[(1'h0):(1'h0)];
  assign wire48 = $signed($signed(($signed((8'haf)) << $unsigned((8'h9c)))));
  assign wire49 = (8'ha2);
  assign wire50 = wire44;
  assign wire51 = ($signed(wire50[(1'h0):(1'h0)]) >>> {wire47[(3'h6):(2'h2)]});
  assign wire52 = $signed($signed((|(|wire51))));
  always
    @(posedge clk) begin
      reg53 <= wire48[(2'h3):(1'h1)];
    end
  assign wire54 = ((!reg53) << (8'ha7));
  assign wire55 = (+{($signed(wire43) != wire47)});
  assign wire56 = wire52[(1'h1):(1'h0)];
  assign wire57 = {wire45[(2'h3):(2'h3)]};
  assign wire58 = {((wire56 ^~ {(8'ha5)}) ?
                          {$unsigned(wire49)} : (^(wire46 ^~ wire43)))};
  assign wire59 = ({($signed(wire50) && (wire43 && wire57))} ?
                      ((+(wire46 ? (8'ha0) : wire49)) ?
                          (((8'h9d) ^ wire43) ?
                              (wire57 ? wire51 : wire43) : (wire52 ?
                                  wire44 : wire45)) : (wire44[(2'h2):(1'h0)] ?
                              wire51[(1'h1):(1'h1)] : (wire50 ?
                                  wire46 : wire48))) : {$unsigned((wire48 ?
                              (8'haa) : wire55))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param38 = ({(8'ha4)} ? {((^(8'h9c)) ? ((8'h9c) >>> (8'had)) : {(8'ha7)})} : (8'hab)))
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire24;
  input wire signed [(3'h6):(1'h0)] wire23;
  input wire [(2'h2):(1'h0)] wire22;
  input wire signed [(4'hb):(1'h0)] wire21;
  wire [(3'h7):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire36;
  wire [(4'h8):(1'h0)] wire35;
  wire [(2'h2):(1'h0)] wire34;
  wire signed [(4'h9):(1'h0)] wire33;
  wire [(3'h6):(1'h0)] wire30;
  wire signed [(4'h9):(1'h0)] wire29;
  wire signed [(4'h8):(1'h0)] wire28;
  wire [(4'h8):(1'h0)] wire27;
  wire [(4'h9):(1'h0)] wire26;
  wire [(3'h6):(1'h0)] wire25;
  reg [(2'h3):(1'h0)] reg32 = (1'h0);
  reg [(3'h5):(1'h0)] reg31 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 reg32,
                 reg31,
                 (1'h0)};
  assign wire25 = (((|wire21[(3'h7):(1'h1)]) && wire23[(1'h1):(1'h1)]) ?
                      (+(wire24[(3'h5):(1'h1)] ?
                          wire22[(1'h0):(1'h0)] : {wire23})) : ($signed(((8'ha6) ?
                              wire21 : wire24)) ?
                          wire23 : $unsigned({wire23})));
  assign wire26 = wire21[(4'h8):(3'h7)];
  assign wire27 = $signed($signed($signed((8'had))));
  assign wire28 = (wire26 ?
                      ((((8'h9d) - wire27) >> wire27[(1'h1):(1'h0)]) ?
                          wire24[(3'h7):(3'h5)] : wire26[(4'h8):(3'h5)]) : {($signed(wire25) > $signed(wire24))});
  assign wire29 = ({wire21[(1'h1):(1'h1)]} ?
                      wire25[(2'h2):(1'h0)] : $signed(wire25));
  assign wire30 = (wire26[(3'h4):(3'h4)] << $unsigned($signed((wire26 && wire28))));
  always
    @(posedge clk) begin
      if (((8'h9e) ^ (wire24 ? wire29[(3'h6):(2'h3)] : $unsigned(wire21))))
        begin
          reg31 <= $signed(wire21);
        end
      else
        begin
          reg31 <= $unsigned(((wire23 >>> wire28) ?
              {(wire22 ? wire28 : wire28)} : $unsigned($unsigned(wire26))));
          reg32 <= (wire27 ?
              ((wire26[(4'h8):(3'h7)] <<< $unsigned((8'h9c))) ?
                  $signed(wire24) : wire24) : ((-{wire24}) ?
                  $signed(wire26) : ((wire29 ? wire28 : wire29) ?
                      (wire28 ? wire22 : wire23) : wire29)));
        end
    end
  assign wire33 = $unsigned((~|(reg32 ? wire21 : (^wire28))));
  assign wire34 = ($signed((-(wire28 ?
                      wire26 : wire25))) ^ (wire25[(3'h5):(2'h2)] ?
                      (wire27 <<< wire30[(3'h6):(3'h5)]) : wire25));
  assign wire35 = (((((8'h9c) ? wire27 : wire23) ?
                              wire23 : ((8'haa) ? (8'ha3) : (8'ha7))) ?
                          ((wire33 ? wire23 : wire23) <= (wire34 ?
                              wire29 : wire25)) : ($signed(wire26) ?
                              wire25[(3'h5):(3'h5)] : $signed(wire30))) ?
                      $unsigned($unsigned((~&wire27))) : ((wire28[(3'h5):(1'h1)] ?
                              (+wire27) : (|wire25)) ?
                          ((~wire22) || {wire33}) : (wire24[(2'h3):(2'h3)] ?
                              wire22 : wire22)));
  assign wire36 = ({wire21} ? wire25[(3'h4):(2'h2)] : (^$signed(wire22)));
  assign wire37 = {(-reg32)};
endmodule