(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param60 = ((({(8'ha7)} ? ((8'ha4) <= (8'had)) : (^~(8'ha5))) ? (((8'h9d) ? (8'ha4) : (8'h9f)) ? (~|(8'haa)) : (&(8'haa))) : (((8'ha7) != (8'hb0)) << ((8'h9c) >> (8'had)))) >> ((-(8'ha0)) || (|((8'ha6) ? (8'h9f) : (8'hab))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire59;
  wire signed [(4'hb):(1'h0)] wire58;
  wire signed [(2'h2):(1'h0)] wire56;
  wire signed [(2'h3):(1'h0)] wire9;
  wire [(4'hb):(1'h0)] wire8;
  wire signed [(4'hb):(1'h0)] wire7;
  wire [(2'h3):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire5;
  wire [(3'h7):(1'h0)] wire4;
  assign y = {wire59,
                 wire58,
                 wire56,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = $signed(wire3[(1'h1):(1'h0)]);
  assign wire5 = (wire3[(1'h0):(1'h0)] ?
                     (~^{(+wire1)}) : ((wire1[(3'h7):(3'h5)] == $unsigned(wire0)) ?
                         wire4[(1'h0):(1'h0)] : $signed((wire2 ?
                             wire1 : wire0))));
  assign wire6 = ((~|wire3) + {{wire2[(2'h3):(2'h3)]}});
  assign wire7 = wire5[(3'h6):(3'h4)];
  assign wire8 = $unsigned(wire2);
  assign wire9 = {(((^wire1) ? (wire0 ? wire5 : wire8) : (+wire5)) ?
                         wire3[(3'h6):(2'h3)] : $signed($unsigned(wire2)))};
  module10 #() modinst57 (wire56, clk, wire4, wire0, wire2, wire1);
  assign wire58 = $unsigned($unsigned((~&wire5)));
  assign wire59 = {$signed($unsigned($unsigned(wire5)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param55 = (~|(8'ha3)))
(y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h4d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire14;
  input wire [(4'ha):(1'h0)] wire13;
  input wire signed [(4'h9):(1'h0)] wire12;
  input wire [(3'h5):(1'h0)] wire11;
  wire signed [(3'h7):(1'h0)] wire54;
  wire signed [(3'h4):(1'h0)] wire53;
  wire signed [(2'h3):(1'h0)] wire52;
  wire [(3'h5):(1'h0)] wire51;
  wire [(2'h2):(1'h0)] wire50;
  wire signed [(4'h9):(1'h0)] wire49;
  wire signed [(4'h8):(1'h0)] wire48;
  wire signed [(3'h5):(1'h0)] wire47;
  wire [(3'h4):(1'h0)] wire46;
  wire [(2'h3):(1'h0)] wire45;
  wire signed [(3'h6):(1'h0)] wire43;
  wire signed [(4'ha):(1'h0)] wire16;
  wire [(4'ha):(1'h0)] wire15;
  assign y = {wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire43,
                 wire16,
                 wire15,
                 (1'h0)};
  assign wire15 = wire13[(2'h2):(2'h2)];
  assign wire16 = wire12;
  module17 #() modinst44 (wire43, clk, wire12, wire16, wire14, wire11);
  assign wire45 = $unsigned(wire12[(3'h5):(1'h0)]);
  assign wire46 = ($signed(($signed(wire45) || wire14[(3'h5):(1'h1)])) ?
                      wire12[(4'h8):(3'h7)] : {$signed($signed(wire13))});
  assign wire47 = wire46[(2'h3):(1'h1)];
  assign wire48 = $unsigned(wire15[(3'h5):(2'h3)]);
  assign wire49 = wire45[(2'h2):(1'h0)];
  assign wire50 = $signed($unsigned(((wire46 + (8'h9e)) ?
                      $unsigned(wire46) : $signed(wire13))));
  assign wire51 = wire46[(1'h0):(1'h0)];
  assign wire52 = wire14;
  assign wire53 = (~wire49[(1'h1):(1'h0)]);
  assign wire54 = $unsigned(wire51[(1'h0):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17
#(parameter param42 = {(((+(8'ha5)) < ((8'ha5) ? (8'ha8) : (8'ha8))) * {((8'haa) >>> (8'had))})})
(y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h8c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire21;
  input wire signed [(2'h3):(1'h0)] wire20;
  input wire signed [(3'h5):(1'h0)] wire19;
  input wire signed [(2'h2):(1'h0)] wire18;
  wire signed [(4'h9):(1'h0)] wire41;
  wire signed [(2'h2):(1'h0)] wire40;
  wire [(4'h9):(1'h0)] wire39;
  wire signed [(3'h7):(1'h0)] wire38;
  wire signed [(2'h2):(1'h0)] wire37;
  wire signed [(4'h8):(1'h0)] wire36;
  wire signed [(4'ha):(1'h0)] wire30;
  wire [(4'h8):(1'h0)] wire29;
  reg [(4'ha):(1'h0)] reg35 = (1'h0);
  reg [(4'h8):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg33 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg32 = (1'h0);
  reg [(3'h4):(1'h0)] reg31 = (1'h0);
  reg [(4'hb):(1'h0)] reg28 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg26 = (1'h0);
  reg [(4'h9):(1'h0)] reg25 = (1'h0);
  reg [(2'h2):(1'h0)] reg24 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg [(2'h3):(1'h0)] reg22 = (1'h0);
  assign y = {wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire30,
                 wire29,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg22 <= ((8'ha8) ?
          ((^$signed(wire20)) ?
              (wire20 | {wire21}) : $unsigned((wire20 ?
                  wire20 : wire19))) : wire18);
      if (reg22)
        begin
          reg23 <= ({$signed(wire19)} - wire21[(1'h0):(1'h0)]);
          reg24 <= reg22[(2'h3):(2'h2)];
        end
      else
        begin
          reg23 <= $unsigned(((wire21 ? (~&reg24) : $signed(reg23)) ?
              {(wire20 & wire20)} : $signed((wire20 == wire19))));
        end
      reg25 <= ($unsigned(wire21) ?
          wire21[(3'h7):(3'h7)] : reg23[(2'h2):(1'h1)]);
    end
  always
    @(posedge clk) begin
      reg26 <= reg23[(2'h2):(1'h0)];
      if (reg24)
        begin
          reg27 <= (wire21 ?
              (((wire21 ? reg25 : reg24) ?
                  $unsigned(reg25) : (wire18 ?
                      reg22 : reg22)) ~^ wire20) : $signed($unsigned({wire18})));
          reg28 <= reg26[(2'h3):(2'h3)];
        end
      else
        begin
          reg27 <= wire18[(2'h2):(2'h2)];
        end
    end
  assign wire29 = (8'hae);
  assign wire30 = (!reg26[(3'h4):(2'h3)]);
  always
    @(posedge clk) begin
      if ((wire30[(2'h3):(1'h0)] ^ {((reg24 - wire29) ?
              (wire30 >= reg24) : $signed(wire19))}))
        begin
          reg31 <= (~^{((!wire30) & wire18[(1'h0):(1'h0)])});
          reg32 <= $unsigned(($unsigned(((8'ha0) | reg31)) + wire29[(3'h4):(3'h4)]));
          reg33 <= wire20[(2'h3):(1'h1)];
        end
      else
        begin
          reg31 <= ((8'hb0) ? (&$signed(wire21)) : reg32[(3'h4):(1'h1)]);
        end
      reg34 <= $unsigned(wire20[(1'h1):(1'h1)]);
      reg35 <= reg22;
    end
  assign wire36 = ((~^($signed(reg25) ?
                      (reg24 - reg23) : $signed(reg34))) || ((~&$signed(wire20)) ~^ $unsigned($unsigned(reg27))));
  assign wire37 = reg34;
  assign wire38 = ($signed((-reg31[(2'h2):(1'h1)])) ?
                      (wire20[(2'h3):(2'h3)] ?
                          (~|(reg35 ^~ reg27)) : ({wire20} ?
                              {reg23} : (wire37 << reg24))) : (^(8'h9d)));
  assign wire39 = $unsigned(($unsigned($signed(reg33)) ~^ $signed($signed(wire21))));
  assign wire40 = (!$unsigned(reg24[(2'h2):(1'h0)]));
  assign wire41 = ($signed({(reg22 ? wire29 : wire40)}) ?
                      (!$signed(wire18)) : (wire21[(1'h0):(1'h0)] && $unsigned((wire30 ?
                          reg35 : reg28))));
endmodule