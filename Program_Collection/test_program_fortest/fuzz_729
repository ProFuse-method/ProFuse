(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param55 = {((~^((8'ha5) <= (8'hac))) ? (^~(~|(8'hae))) : (~&{(8'ha6)}))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire54;
  wire [(3'h5):(1'h0)] wire53;
  wire signed [(4'h9):(1'h0)] wire52;
  wire signed [(2'h2):(1'h0)] wire44;
  wire signed [(4'hb):(1'h0)] wire43;
  wire [(4'hb):(1'h0)] wire42;
  wire [(2'h2):(1'h0)] wire41;
  wire signed [(3'h4):(1'h0)] wire39;
  reg signed [(4'h9):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg50 = (1'h0);
  reg [(2'h2):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg48 = (1'h0);
  reg [(3'h7):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg46 = (1'h0);
  assign y = {wire54,
                 wire53,
                 wire52,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire39,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 (1'h0)};
  module4 #() modinst40 (wire39, clk, wire1, wire0, wire2, wire3);
  assign wire41 = ($unsigned(wire0) && wire2);
  assign wire42 = {wire3[(3'h6):(1'h1)]};
  assign wire43 = ((($unsigned(wire0) | (^wire3)) ?
                          (wire42 ^~ (wire3 ?
                              (8'haf) : wire39)) : ((wire2 > wire2) ?
                              (wire2 ^ wire42) : (wire1 ? wire42 : wire2))) ?
                      (~^wire0[(1'h0):(1'h0)]) : ((^(+(8'h9d))) != wire2));
  module9 #() modinst45 (wire44, clk, wire42, wire39, wire43, wire2);
  always
    @(posedge clk) begin
      reg46 <= wire3[(3'h5):(2'h3)];
      if (((!((wire44 < wire0) ? $signed(wire2) : $signed(wire0))) ?
          ($unsigned((wire2 >>> wire42)) ^ $signed(reg46[(2'h3):(1'h1)])) : ($signed($signed(wire3)) ~^ (^~wire42[(3'h5):(3'h5)]))))
        begin
          if (($unsigned(wire3[(3'h6):(2'h3)]) << (wire0 >= wire1[(4'h9):(3'h6)])))
            begin
              reg47 <= {$unsigned({(wire3 < wire41)})};
              reg48 <= (wire44 ?
                  wire0[(4'h9):(1'h1)] : {($signed(wire0) < wire1[(3'h6):(2'h2)])});
            end
          else
            begin
              reg47 <= wire43;
              reg48 <= reg48;
            end
          reg49 <= wire3[(2'h3):(1'h0)];
          reg50 <= reg46;
        end
      else
        begin
          reg47 <= (~$unsigned((!wire1)));
        end
      reg51 <= ($unsigned(wire44) << wire39[(1'h1):(1'h1)]);
    end
  assign wire52 = $signed($unsigned(wire2));
  assign wire53 = (((~|wire52[(1'h0):(1'h0)]) | wire2[(2'h3):(2'h3)]) ?
                      $signed($signed($signed(reg48))) : wire2[(3'h6):(1'h0)]);
  assign wire54 = (&wire3[(1'h0):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h6b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire8;
  input wire signed [(4'hb):(1'h0)] wire7;
  input wire signed [(4'ha):(1'h0)] wire6;
  input wire [(4'h8):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire37;
  wire signed [(3'h5):(1'h0)] wire31;
  wire [(3'h4):(1'h0)] wire30;
  wire [(4'h9):(1'h0)] wire27;
  wire signed [(4'h9):(1'h0)] wire26;
  wire [(4'ha):(1'h0)] wire25;
  wire [(3'h4):(1'h0)] wire24;
  wire [(3'h7):(1'h0)] wire22;
  reg signed [(4'h8):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg35 = (1'h0);
  reg [(4'hb):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg33 = (1'h0);
  reg [(2'h2):(1'h0)] reg32 = (1'h0);
  reg [(3'h6):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg28 = (1'h0);
  assign y = {wire38,
                 wire37,
                 wire31,
                 wire30,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire22,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg29,
                 reg28,
                 (1'h0)};
  module9 #() modinst23 (wire22, clk, wire7, wire5, wire8, wire6);
  assign wire24 = (^wire5);
  assign wire25 = (8'h9f);
  assign wire26 = (wire6 ?
                      (~|wire8[(2'h3):(2'h3)]) : (((wire8 >> wire24) ?
                          (wire6 ?
                              wire6 : wire22) : {wire8}) & ($unsigned(wire22) ?
                          (wire22 != wire6) : (wire25 <<< wire24))));
  assign wire27 = $signed(wire22[(1'h1):(1'h1)]);
  always
    @(posedge clk) begin
      reg28 <= wire6;
      reg29 <= wire7;
    end
  assign wire30 = (($signed({wire24}) ?
                          $signed((~wire24)) : $unsigned($unsigned(wire8))) ?
                      (wire24 ^ $unsigned((wire25 ?
                          wire6 : (8'ha4)))) : (reg29[(2'h2):(2'h2)] ?
                          ((wire24 || (8'ha5)) ?
                              ((8'h9e) ?
                                  reg29 : wire5) : {(8'ha1)}) : ($signed(wire27) ?
                              {wire27} : {wire24})));
  assign wire31 = wire24[(1'h1):(1'h0)];
  always
    @(posedge clk) begin
      reg32 <= wire8[(3'h6):(2'h2)];
      reg33 <= (wire5[(2'h2):(1'h1)] << $signed($signed((~|wire27))));
      reg34 <= (wire6[(2'h3):(1'h0)] ?
          ({$unsigned(wire24)} * wire5[(3'h7):(3'h6)]) : ($unsigned((^~wire30)) ?
              (((8'had) ? wire5 : (8'hac)) << (wire24 ?
                  wire31 : reg32)) : wire8[(3'h5):(3'h4)]));
    end
  always
    @(posedge clk) begin
      if (($unsigned((|$signed(reg32))) ? wire24[(3'h4):(1'h0)] : (~|(8'ha6))))
        begin
          if ($signed($unsigned(wire25[(1'h0):(1'h0)])))
            begin
              reg35 <= (($unsigned({wire27}) ?
                      ((reg28 ? wire26 : (8'hae)) ?
                          (!wire27) : reg34) : {$signed(reg32)}) ?
                  (+{wire24[(2'h3):(2'h3)]}) : reg29[(1'h1):(1'h0)]);
            end
          else
            begin
              reg35 <= reg34;
            end
        end
      else
        begin
          reg35 <= (($unsigned((reg34 ? reg34 : wire24)) ?
              (reg29[(2'h3):(1'h0)] && (reg34 || wire5)) : (wire25[(2'h3):(2'h2)] ?
                  (wire8 & wire25) : {wire22})) || $unsigned($signed($signed(wire31))));
          reg36 <= {(+{$unsigned(wire7)})};
        end
    end
  assign wire37 = $unsigned(reg36);
  assign wire38 = (wire6[(4'h9):(3'h5)] ?
                      wire5 : $unsigned(((reg35 + wire6) * (-reg32))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9  (y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h32):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire13;
  input wire signed [(3'h4):(1'h0)] wire12;
  input wire signed [(4'ha):(1'h0)] wire11;
  input wire [(4'ha):(1'h0)] wire10;
  wire [(3'h7):(1'h0)] wire21;
  wire [(2'h2):(1'h0)] wire20;
  wire signed [(2'h2):(1'h0)] wire19;
  wire [(3'h4):(1'h0)] wire18;
  wire [(3'h4):(1'h0)] wire17;
  wire [(4'ha):(1'h0)] wire16;
  reg [(4'ha):(1'h0)] reg15 = (1'h0);
  reg [(4'ha):(1'h0)] reg14 = (1'h0);
  assign y = {wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 reg15,
                 reg14,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg14 <= $signed((~wire10[(4'h8):(3'h5)]));
      reg15 <= wire13[(4'ha):(3'h7)];
    end
  assign wire16 = wire13[(4'h9):(3'h6)];
  assign wire17 = (reg14 ?
                      ((wire16[(4'ha):(3'h7)] ? wire16 : wire10) ?
                          reg14 : $signed(wire13)) : $unsigned(($unsigned(wire13) ?
                          reg15[(1'h1):(1'h1)] : {wire10})));
  assign wire18 = ({(-((8'hae) || wire12))} & (wire13 ?
                      $signed($unsigned(wire11)) : wire17));
  assign wire19 = wire11[(4'h9):(1'h1)];
  assign wire20 = $signed(wire18);
  assign wire21 = $signed((((~wire13) ?
                      $signed(wire12) : (wire16 << wire17)) >= wire13[(4'hb):(3'h7)]));
endmodule