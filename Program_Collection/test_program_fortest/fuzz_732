(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire57;
  wire signed [(4'h9):(1'h0)] wire55;
  wire [(4'ha):(1'h0)] wire53;
  wire signed [(4'h9):(1'h0)] wire4;
  assign y = {wire57, wire55, wire53, wire4, (1'h0)};
  assign wire4 = {{wire0}};
  module5 #() modinst54 (.wire7(wire3), .wire8(wire2), .wire6(wire1), .wire9(wire0), .y(wire53), .clk(clk));
  module5 #() modinst56 (wire55, clk, wire4, wire53, wire0, wire1);
  assign wire57 = (($unsigned(wire1) - $unsigned((wire4 == wire1))) ~^ $unsigned((~^(!wire1))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param52 = (((|((8'ha4) >= (8'hac))) ? (^(&(8'h9f))) : (~&((8'ha8) ? (8'hac) : (8'haf)))) >> (-(((8'hae) ? (8'ha4) : (8'h9e)) ? {(8'ha2)} : ((8'ha2) ? (8'h9c) : (8'hac))))))
(y, clk, wire6, wire7, wire8, wire9);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire6;
  input wire [(4'ha):(1'h0)] wire7;
  input wire signed [(4'h8):(1'h0)] wire8;
  input wire signed [(4'h8):(1'h0)] wire9;
  wire signed [(2'h2):(1'h0)] wire51;
  wire signed [(3'h5):(1'h0)] wire48;
  wire signed [(4'hb):(1'h0)] wire47;
  wire [(3'h7):(1'h0)] wire46;
  wire [(2'h3):(1'h0)] wire27;
  wire [(3'h5):(1'h0)] wire29;
  wire signed [(4'h9):(1'h0)] wire32;
  wire [(3'h7):(1'h0)] wire33;
  wire signed [(3'h4):(1'h0)] wire44;
  reg [(2'h3):(1'h0)] reg50 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg30 = (1'h0);
  reg [(4'h8):(1'h0)] reg31 = (1'h0);
  assign y = {wire51,
                 wire48,
                 wire47,
                 wire46,
                 wire27,
                 wire29,
                 wire32,
                 wire33,
                 wire44,
                 reg50,
                 reg49,
                 reg30,
                 reg31,
                 (1'h0)};
  module10 #() modinst28 (wire27, clk, wire7, wire9, wire6, wire8);
  assign wire29 = (|wire7);
  always
    @(posedge clk) begin
      reg30 <= ($unsigned((wire6[(3'h6):(2'h2)] + $unsigned(wire27))) ?
          (wire29 != $signed((wire27 ?
              (8'hab) : wire6))) : (~wire29[(2'h2):(1'h0)]));
      reg31 <= $signed((8'haf));
    end
  assign wire32 = $unsigned((!(wire6[(3'h4):(3'h4)] ^~ ((8'hac) ?
                      wire7 : wire6))));
  assign wire33 = {$signed(wire7)};
  module34 #() modinst45 (.y(wire44), .wire36(wire6), .wire35(reg31), .wire38(wire8), .clk(clk), .wire37(wire7));
  assign wire46 = (($signed($signed((8'hac))) >>> {(wire6 > wire9)}) ^ $signed(($unsigned(reg31) ?
                      $signed(wire6) : $signed(reg30))));
  assign wire47 = {(~reg31[(2'h3):(1'h0)])};
  assign wire48 = wire29[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      reg49 <= wire8;
      reg50 <= $signed(wire7);
    end
  assign wire51 = (^~(8'ha0));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34  (y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h20):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire38;
  input wire [(3'h5):(1'h0)] wire37;
  input wire signed [(4'h9):(1'h0)] wire36;
  input wire signed [(3'h5):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire43;
  wire [(4'h8):(1'h0)] wire42;
  wire signed [(3'h4):(1'h0)] wire41;
  wire signed [(3'h4):(1'h0)] wire40;
  wire [(3'h4):(1'h0)] wire39;
  assign y = {wire43, wire42, wire41, wire40, wire39, (1'h0)};
  assign wire39 = ({wire36[(3'h5):(1'h1)]} ?
                      (((wire38 != wire38) & wire36[(3'h6):(2'h2)]) | $unsigned($signed(wire37))) : wire35[(2'h2):(2'h2)]);
  assign wire40 = {wire38};
  assign wire41 = {(~&wire37)};
  assign wire42 = wire41[(3'h4):(1'h1)];
  assign wire43 = {$unsigned(((wire36 ? wire42 : wire41) ?
                          wire39[(1'h1):(1'h1)] : (8'ha8)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param26 = ({(((8'hab) ? (8'hb0) : (8'h9e)) ? (^~(8'h9f)) : ((8'ha0) ? (8'haa) : (8'haa)))} ? ((((8'ha8) >> (8'h9e)) ? ((8'ha6) == (8'ha6)) : (~(8'ha1))) >= (|((8'ha8) ? (8'h9f) : (8'ha6)))) : (+{((8'ha5) ^~ (8'hb0))})))
(y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire14;
  input wire [(3'h5):(1'h0)] wire13;
  input wire [(4'h9):(1'h0)] wire12;
  input wire signed [(4'h8):(1'h0)] wire11;
  wire signed [(4'hb):(1'h0)] wire25;
  wire signed [(4'ha):(1'h0)] wire21;
  wire [(2'h3):(1'h0)] wire20;
  wire [(4'h9):(1'h0)] wire17;
  wire signed [(3'h5):(1'h0)] wire16;
  wire signed [(4'h9):(1'h0)] wire15;
  reg signed [(4'h8):(1'h0)] reg24 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  assign y = {wire25,
                 wire21,
                 wire20,
                 wire17,
                 wire16,
                 wire15,
                 reg24,
                 reg23,
                 reg22,
                 reg19,
                 reg18,
                 (1'h0)};
  assign wire15 = (~&(~|(!{(8'hab)})));
  assign wire16 = $unsigned($unsigned((~^{wire14})));
  assign wire17 = (((^wire12[(3'h4):(3'h4)]) ~^ (wire16 || wire15[(3'h6):(3'h5)])) & $signed(wire15[(2'h2):(2'h2)]));
  always
    @(posedge clk) begin
      reg18 <= wire16[(2'h3):(1'h1)];
      reg19 <= (-(~wire16[(3'h4):(2'h2)]));
    end
  assign wire20 = $signed((wire13[(2'h3):(1'h0)] ?
                      {$unsigned(wire13)} : (wire11[(4'h8):(3'h7)] + wire16[(2'h2):(2'h2)])));
  assign wire21 = $unsigned((^~wire11[(1'h1):(1'h1)]));
  always
    @(posedge clk) begin
      reg22 <= (~^$signed(wire16[(1'h1):(1'h0)]));
      reg23 <= ($signed($signed(reg19)) <= wire21);
      reg24 <= (~^$signed((^$signed(reg19))));
    end
  assign wire25 = (~|$unsigned(((~wire16) ^ $signed(wire20))));
endmodule