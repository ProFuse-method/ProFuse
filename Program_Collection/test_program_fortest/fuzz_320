(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param66 = ((((~(8'ha9)) ~^ (8'ha4)) && ((^(8'ha3)) ? ((8'ha5) - (8'ha4)) : (^(8'ha0)))) ? {(8'hac)} : (~|({(8'hae)} ? {(8'ha9)} : ((8'ha4) ? (8'h9f) : (8'h9e))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(2'h2):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire65;
  wire signed [(2'h2):(1'h0)] wire64;
  wire [(3'h7):(1'h0)] wire63;
  wire signed [(4'h9):(1'h0)] wire59;
  wire signed [(3'h7):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire4;
  wire signed [(2'h2):(1'h0)] wire61;
  reg [(4'ha):(1'h0)] reg12 = (1'h0);
  reg [(2'h2):(1'h0)] reg11 = (1'h0);
  reg [(4'h8):(1'h0)] reg10 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg8 = (1'h0);
  reg [(4'hb):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg6 = (1'h0);
  assign y = {wire65,
                 wire64,
                 wire63,
                 wire59,
                 wire5,
                 wire4,
                 wire61,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = ({$unsigned((~(8'haa)))} ?
                     (&(wire2 ?
                         $signed(wire1) : $unsigned(wire0))) : $signed(({wire2} ?
                         (wire0 ? wire2 : wire3) : $unsigned(wire0))));
  assign wire5 = (~|wire2);
  always
    @(posedge clk) begin
      if ($signed($unsigned($unsigned(((8'ha5) ? wire2 : wire3)))))
        begin
          if ({($unsigned((wire3 <<< wire2)) & (8'ha9))})
            begin
              reg6 <= {(8'h9e)};
              reg7 <= ({$unsigned({wire4})} <<< {wire4[(2'h3):(2'h2)]});
              reg8 <= $unsigned($unsigned(reg7[(4'h8):(1'h0)]));
            end
          else
            begin
              reg6 <= ($unsigned(wire1[(2'h2):(1'h0)]) << wire5);
              reg7 <= $unsigned(reg7);
            end
          reg9 <= reg6;
          reg10 <= (reg6 ?
              wire0[(1'h1):(1'h0)] : ({(wire5 ^~ (8'ha5))} ~^ $signed($signed(reg7))));
        end
      else
        begin
          reg6 <= ((+$signed((|reg8))) ?
              $signed($signed($unsigned(reg6))) : wire3[(1'h0):(1'h0)]);
        end
      reg11 <= (wire0[(1'h0):(1'h0)] | reg8);
      reg12 <= {wire3[(3'h5):(2'h3)]};
    end
  module13 #() modinst60 (.wire14(reg6), .wire17(wire5), .wire16(reg12), .y(wire59), .wire15(reg10), .clk(clk));
  module30 #() modinst62 (wire61, clk, reg12, wire4, reg6, reg7);
  assign wire63 = reg9[(2'h3):(1'h1)];
  assign wire64 = $signed($signed(({reg11} ?
                      (wire59 | reg11) : $unsigned((8'h9d)))));
  assign wire65 = $signed(((8'h9f) ^~ ((wire1 ? wire0 : wire61) ?
                      $signed(wire61) : wire63[(3'h7):(1'h1)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire14, wire15, wire16, wire17);
  output wire [(32'h8d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire14;
  input wire signed [(3'h5):(1'h0)] wire15;
  input wire signed [(4'ha):(1'h0)] wire16;
  input wire [(3'h7):(1'h0)] wire17;
  wire signed [(4'hb):(1'h0)] wire58;
  wire signed [(3'h4):(1'h0)] wire57;
  wire signed [(4'hb):(1'h0)] wire56;
  wire signed [(4'ha):(1'h0)] wire55;
  wire signed [(4'hb):(1'h0)] wire54;
  wire signed [(3'h4):(1'h0)] wire53;
  wire [(3'h4):(1'h0)] wire18;
  wire signed [(3'h6):(1'h0)] wire26;
  wire [(3'h5):(1'h0)] wire27;
  wire [(4'ha):(1'h0)] wire51;
  reg [(4'hb):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg21 = (1'h0);
  reg [(3'h5):(1'h0)] reg22 = (1'h0);
  reg [(4'h8):(1'h0)] reg23 = (1'h0);
  reg [(4'h8):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg25 = (1'h0);
  reg [(4'h8):(1'h0)] reg28 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg29 = (1'h0);
  assign y = {wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire18,
                 wire26,
                 wire27,
                 wire51,
                 reg19,
                 reg20,
                 reg21,
                 reg22,
                 reg23,
                 reg24,
                 reg25,
                 reg28,
                 reg29,
                 (1'h0)};
  assign wire18 = wire16;
  always
    @(posedge clk) begin
      reg19 <= ((wire15 >= (~|{wire15})) + (!((wire15 * wire14) - (wire16 * wire17))));
      if ($signed(reg19))
        begin
          reg20 <= wire17[(1'h1):(1'h0)];
        end
      else
        begin
          if (($signed((8'ha6)) ?
              ({(wire15 - wire15)} && wire18[(3'h4):(3'h4)]) : reg19))
            begin
              reg20 <= $signed(((wire16 ?
                  $unsigned(wire15) : (reg19 | wire14)) >>> $unsigned($unsigned(wire17))));
            end
          else
            begin
              reg20 <= {wire17};
              reg21 <= (wire16 ?
                  (~|((-wire18) | (wire15 < wire16))) : $unsigned(reg19));
              reg22 <= (reg19[(4'h8):(2'h3)] >= $unsigned(reg21));
            end
          if ($unsigned($signed(($unsigned(reg20) <= (&reg21)))))
            begin
              reg23 <= $signed($unsigned((-$signed(wire15))));
              reg24 <= ({(^((8'hb0) << reg22))} ?
                  wire18[(1'h1):(1'h0)] : {(reg20[(1'h0):(1'h0)] != (reg22 ?
                          (8'hb0) : (8'hae)))});
            end
          else
            begin
              reg23 <= (~(~(wire14 ?
                  wire16[(2'h3):(1'h0)] : $signed((8'h9f)))));
            end
        end
      reg25 <= wire15;
    end
  assign wire26 = (wire16 ?
                      ($unsigned((wire16 ? reg22 : reg19)) ?
                          (8'h9d) : wire15) : $signed(wire18));
  assign wire27 = wire17;
  always
    @(posedge clk) begin
      reg28 <= ((~|$unsigned(wire18[(2'h3):(2'h2)])) <<< (~&(!$signed(reg24))));
      reg29 <= reg20;
    end
  module30 #() modinst52 (wire51, clk, reg28, wire15, reg24, reg19);
  assign wire53 = (~&reg25);
  assign wire54 = $unsigned($signed(wire18[(3'h4):(1'h0)]));
  assign wire55 = (~wire14);
  assign wire56 = (wire17 ?
                      $unsigned($unsigned((reg23 != reg22))) : $unsigned($unsigned((wire26 ?
                          wire55 : wire15))));
  assign wire57 = (^$unsigned(((wire15 ?
                      wire16 : (8'hb0)) >= $unsigned(wire54))));
  assign wire58 = (&reg24[(2'h2):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module30
#(parameter param50 = (((((8'ha8) ? (8'ha1) : (8'h9e)) >> (^(8'h9c))) ? (((8'ha3) != (8'hac)) ? ((8'ha0) && (8'ha9)) : (~(8'ha0))) : ((^(8'had)) ? ((8'hac) >>> (8'hab)) : ((8'h9e) ? (8'ha8) : (8'hae)))) ^~ ((!((8'ha2) & (8'haa))) ? (((8'hae) & (8'hac)) ? ((8'ha4) ^ (8'hae)) : ((8'hac) >= (8'hae))) : (~((8'h9d) ? (8'h9e) : (8'hae))))))
(y, clk, wire34, wire33, wire32, wire31);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire34;
  input wire [(3'h5):(1'h0)] wire33;
  input wire signed [(3'h5):(1'h0)] wire32;
  input wire signed [(4'hb):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire49;
  wire [(3'h5):(1'h0)] wire48;
  wire signed [(3'h5):(1'h0)] wire47;
  wire [(2'h2):(1'h0)] wire41;
  wire signed [(4'ha):(1'h0)] wire40;
  wire signed [(4'ha):(1'h0)] wire39;
  wire signed [(2'h3):(1'h0)] wire38;
  wire signed [(3'h4):(1'h0)] wire37;
  wire [(2'h3):(1'h0)] wire36;
  wire [(3'h6):(1'h0)] wire35;
  reg signed [(4'h9):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg45 = (1'h0);
  reg [(3'h7):(1'h0)] reg44 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg43 = (1'h0);
  reg [(3'h7):(1'h0)] reg42 = (1'h0);
  assign y = {wire49,
                 wire48,
                 wire47,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 (1'h0)};
  assign wire35 = $signed(wire33[(2'h3):(1'h0)]);
  assign wire36 = wire34[(1'h0):(1'h0)];
  assign wire37 = $unsigned((((|(8'ha6)) != wire31[(4'ha):(3'h4)]) ?
                      $signed(wire36) : wire32));
  assign wire38 = $unsigned(wire35[(3'h6):(1'h1)]);
  assign wire39 = $signed(($unsigned($unsigned(wire32)) ?
                      ($signed(wire35) + (wire35 >>> wire34)) : $unsigned(wire31[(3'h6):(2'h2)])));
  assign wire40 = (^(wire38[(1'h0):(1'h0)] | (~$unsigned(wire39))));
  assign wire41 = $unsigned(wire36);
  always
    @(posedge clk) begin
      reg42 <= $signed((((~|wire39) ?
          wire37[(3'h4):(3'h4)] : wire32[(1'h1):(1'h0)]) <= (8'ha6)));
      if ($unsigned((~((wire34 ? wire32 : wire38) <<< $signed(wire31)))))
        begin
          reg43 <= wire39[(1'h0):(1'h0)];
        end
      else
        begin
          reg43 <= (wire33 ? wire32[(3'h4):(1'h1)] : reg42[(1'h1):(1'h0)]);
          reg44 <= $signed(reg42[(1'h1):(1'h1)]);
          reg45 <= (~^wire35);
        end
      reg46 <= $signed((((reg42 ? wire31 : (8'hac)) ?
          (reg43 != wire39) : ((8'hae) ?
              wire35 : reg42)) < $unsigned($unsigned(wire32))));
    end
  assign wire47 = $unsigned((reg46[(3'h7):(3'h7)] ?
                      (wire32[(2'h2):(1'h0)] ^ $unsigned((8'hae))) : ($unsigned(wire36) ?
                          $signed(wire31) : (~|wire39))));
  assign wire48 = reg44;
  assign wire49 = wire47;
endmodule