(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param11 = {((((8'hae) && (8'ha4)) > ((8'ha3) != (8'h9f))) >>> ((-(8'ha5)) ^~ ((8'ha3) >>> (8'hac))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h32):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire [(3'h5):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire10;
  wire [(3'h4):(1'h0)] wire9;
  wire signed [(4'hb):(1'h0)] wire8;
  wire [(2'h3):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg6 = (1'h0);
  assign y = {wire10, wire9, wire8, wire5, wire4, reg7, reg6, (1'h0)};
  assign wire4 = ($signed(wire1[(3'h5):(3'h4)]) << ({{wire3}} ?
                     wire1[(1'h0):(1'h0)] : ($unsigned((8'ha7)) ?
                         wire3[(2'h3):(2'h2)] : (wire3 || wire3))));
  assign wire5 = wire4[(3'h5):(1'h1)];
  always
    @(posedge clk) begin
      reg6 <= (~|(~|(&$signed(wire2))));
    end
  always
    @(posedge clk) begin
      reg7 <= wire0;
    end
  assign wire8 = $signed(($signed((wire0 ? reg7 : wire2)) ?
                     (reg7[(3'h5):(1'h0)] || ((8'haf) ?
                         wire4 : wire2)) : {$unsigned(reg7)}));
  assign wire9 = ($signed((&$signed(reg6))) ?
                     $unsigned($signed(wire0)) : $unsigned(((-wire4) && (8'hae))));
  assign wire10 = wire9;
endmodule