(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h5f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire0;
  input wire [(4'hb):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire3;
  wire [(2'h3):(1'h0)] wire57;
  wire signed [(4'hb):(1'h0)] wire56;
  wire signed [(4'h8):(1'h0)] wire55;
  wire [(2'h3):(1'h0)] wire54;
  wire signed [(2'h3):(1'h0)] wire53;
  wire [(4'h9):(1'h0)] wire52;
  wire [(3'h6):(1'h0)] wire51;
  wire signed [(2'h3):(1'h0)] wire41;
  wire signed [(3'h5):(1'h0)] wire43;
  wire signed [(3'h5):(1'h0)] wire47;
  wire signed [(4'h9):(1'h0)] wire48;
  wire signed [(3'h5):(1'h0)] wire49;
  reg signed [(4'hb):(1'h0)] reg44 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg46 = (1'h0);
  assign y = {wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire41,
                 wire43,
                 wire47,
                 wire48,
                 wire49,
                 reg44,
                 reg45,
                 reg46,
                 (1'h0)};
  module4 #() modinst42 (wire41, clk, wire3, wire2, wire1, wire0);
  assign wire43 = (^(({wire2} ^ wire3[(2'h2):(1'h1)]) ^~ $unsigned((wire0 + (8'ha4)))));
  always
    @(posedge clk) begin
      reg44 <= $signed(wire41);
      reg45 <= {(8'haf)};
      reg46 <= (-($unsigned(reg45) << wire41[(2'h2):(1'h1)]));
    end
  assign wire47 = $unsigned(($unsigned(reg44[(4'ha):(4'ha)]) | $signed($unsigned(reg46))));
  assign wire48 = {(|wire47)};
  module4 #() modinst50 (.wire8(reg44), .y(wire49), .wire6(reg45), .wire7(reg46), .clk(clk), .wire5(wire2));
  assign wire51 = ((wire2 < $signed({wire3})) ? reg45 : wire43[(2'h2):(2'h2)]);
  assign wire52 = (8'had);
  assign wire53 = {($unsigned((wire2 - wire48)) < wire51[(3'h6):(3'h6)])};
  assign wire54 = (wire3 + $unsigned((wire48 ? (-wire1) : (-reg46))));
  assign wire55 = (reg45 ?
                      ($unsigned(((8'ha6) << wire54)) ?
                          {(wire41 ? reg46 : wire48)} : ({reg44} ?
                              $signed(wire3) : (reg44 <= wire41))) : wire53);
  assign wire56 = $signed(wire43[(2'h2):(2'h2)]);
  assign wire57 = (($unsigned((-wire1)) ?
                          $unsigned((^~wire41)) : ($unsigned(wire3) << (wire48 ?
                              wire0 : (8'hab)))) ?
                      (((wire2 ? wire53 : wire56) ?
                          reg45[(3'h5):(2'h2)] : (wire3 ?
                              (8'ha0) : reg46)) ~^ (wire55[(3'h6):(1'h1)] >> (!(8'h9f)))) : $signed(wire54[(1'h1):(1'h1)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(3'h6):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire6;
  input wire [(3'h5):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire40;
  wire [(3'h7):(1'h0)] wire39;
  wire [(2'h3):(1'h0)] wire38;
  wire signed [(3'h4):(1'h0)] wire37;
  wire signed [(3'h5):(1'h0)] wire36;
  wire signed [(3'h5):(1'h0)] wire35;
  wire signed [(2'h3):(1'h0)] wire34;
  wire [(3'h5):(1'h0)] wire33;
  wire signed [(2'h3):(1'h0)] wire32;
  wire [(4'hb):(1'h0)] wire30;
  wire [(4'hb):(1'h0)] wire9;
  assign y = {wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire30,
                 wire9,
                 (1'h0)};
  assign wire9 = ((&(wire5 ^~ $unsigned((8'ha0)))) <= (((&wire7) >= (wire8 ?
                         wire8 : wire8)) ?
                     ((wire6 && wire7) ?
                         $unsigned(wire8) : wire6[(3'h7):(3'h5)]) : {(~&wire5)}));
  module10 #() modinst31 (.clk(clk), .wire12(wire8), .y(wire30), .wire13(wire5), .wire11(wire6), .wire14(wire9));
  assign wire32 = {wire6};
  assign wire33 = ((((wire30 == wire5) ?
                          wire7 : (wire30 ? wire32 : (8'ha4))) && ((8'ha5) ?
                          $unsigned(wire30) : $signed(wire7))) ?
                      {((wire6 < (8'ha3)) ?
                              (^wire6) : $signed(wire30))} : ((wire6[(3'h6):(3'h5)] || $signed(wire9)) == (&wire5[(3'h4):(1'h0)])));
  assign wire34 = wire33;
  assign wire35 = wire30;
  assign wire36 = wire32;
  assign wire37 = wire33[(3'h4):(2'h2)];
  assign wire38 = $unsigned($signed($unsigned($signed(wire32))));
  assign wire39 = $unsigned((^~(~&wire5)));
  assign wire40 = ($unsigned(((wire9 ? wire33 : wire34) ?
                          (^~wire8) : ((8'hac) != (8'ha1)))) ?
                      (~$signed($unsigned(wire30))) : wire32[(1'h0):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param29 = (&(^~(!((8'ha9) < (8'ha9))))))
(y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h66):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire14;
  input wire signed [(3'h5):(1'h0)] wire13;
  input wire [(4'ha):(1'h0)] wire12;
  input wire [(2'h3):(1'h0)] wire11;
  wire [(3'h4):(1'h0)] wire28;
  wire signed [(3'h7):(1'h0)] wire27;
  wire [(3'h6):(1'h0)] wire26;
  wire [(4'ha):(1'h0)] wire25;
  wire [(4'ha):(1'h0)] wire23;
  wire signed [(4'hb):(1'h0)] wire22;
  wire [(4'h9):(1'h0)] wire21;
  wire signed [(4'h8):(1'h0)] wire20;
  wire signed [(3'h5):(1'h0)] wire19;
  wire [(3'h5):(1'h0)] wire18;
  reg signed [(3'h7):(1'h0)] reg24 = (1'h0);
  reg [(3'h4):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg16 = (1'h0);
  reg [(4'ha):(1'h0)] reg15 = (1'h0);
  assign y = {wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 reg24,
                 reg17,
                 reg16,
                 reg15,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg15 <= wire11;
      reg16 <= (~^$signed(wire11));
      reg17 <= $unsigned($unsigned((+reg16)));
    end
  assign wire18 = reg16;
  assign wire19 = wire13[(3'h4):(2'h2)];
  assign wire20 = $unsigned($signed(((~&reg17) + $signed(reg17))));
  assign wire21 = wire18;
  assign wire22 = (|$unsigned(wire12));
  assign wire23 = $unsigned((reg16[(3'h4):(2'h2)] ?
                      wire20[(3'h5):(3'h4)] : (-{wire21})));
  always
    @(posedge clk) begin
      reg24 <= {(&(^wire19[(3'h5):(1'h0)]))};
    end
  assign wire25 = $signed((8'ha5));
  assign wire26 = wire19;
  assign wire27 = reg24[(3'h7):(2'h3)];
  assign wire28 = wire14;
endmodule