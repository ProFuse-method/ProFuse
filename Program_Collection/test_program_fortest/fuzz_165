(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param79 = ((^~((|(8'ha5)) ? ((8'hac) ^ (8'had)) : (+(8'ha0)))) > {((~|(8'ha2)) ? (!(8'ha6)) : (~&(8'ha1)))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h99):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire78;
  wire [(4'ha):(1'h0)] wire77;
  wire signed [(4'h8):(1'h0)] wire76;
  wire signed [(4'hb):(1'h0)] wire75;
  wire [(3'h5):(1'h0)] wire63;
  wire signed [(3'h5):(1'h0)] wire62;
  wire signed [(2'h3):(1'h0)] wire60;
  wire signed [(3'h7):(1'h0)] wire59;
  wire signed [(3'h6):(1'h0)] wire57;
  reg [(4'h8):(1'h0)] reg74 = (1'h0);
  reg [(4'ha):(1'h0)] reg73 = (1'h0);
  reg [(3'h7):(1'h0)] reg72 = (1'h0);
  reg [(4'hb):(1'h0)] reg71 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg70 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg69 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg67 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg66 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg64 = (1'h0);
  assign y = {wire78,
                 wire77,
                 wire76,
                 wire75,
                 wire63,
                 wire62,
                 wire60,
                 wire59,
                 wire57,
                 reg74,
                 reg73,
                 reg72,
                 reg71,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 reg64,
                 (1'h0)};
  module4 #() modinst58 (.wire5(wire1), .wire7(wire0), .wire8(wire2), .y(wire57), .wire6(wire3), .clk(clk));
  assign wire59 = wire3[(4'h8):(3'h4)];
  module4 #() modinst61 (.wire5(wire1), .wire6(wire59), .wire8(wire57), .clk(clk), .wire7(wire3), .y(wire60));
  assign wire62 = (((^wire57[(3'h4):(3'h4)]) - wire2[(3'h5):(1'h0)]) ?
                      $signed({(wire60 >> (8'ha8))}) : $signed((8'ha6)));
  assign wire63 = (($unsigned({(8'ha4)}) ~^ (^~$unsigned(wire1))) != $unsigned($unsigned($unsigned((8'ha8)))));
  always
    @(posedge clk) begin
      reg64 <= (^(8'hab));
    end
  always
    @(posedge clk) begin
      if ((|(8'hae)))
        begin
          if ($unsigned($unsigned($signed($unsigned((8'haf))))))
            begin
              reg65 <= wire3[(3'h7):(1'h1)];
              reg66 <= reg65;
            end
          else
            begin
              reg65 <= ({($unsigned(reg64) ? reg65 : (8'ha2))} ?
                  (wire63 ?
                      {wire1[(4'h8):(4'h8)]} : wire57[(1'h1):(1'h1)]) : (reg66[(1'h0):(1'h0)] ?
                      $unsigned((~wire1)) : (^$signed(wire0))));
            end
          if (((|(~|((8'ha9) & reg66))) ^~ $unsigned(($unsigned(wire0) ^ (8'ha3)))))
            begin
              reg67 <= wire2[(3'h4):(2'h3)];
              reg68 <= $unsigned(({((8'ha4) || wire3)} >= ({wire62} ?
                  $unsigned(wire60) : (wire59 * wire62))));
              reg69 <= wire2[(2'h3):(2'h2)];
            end
          else
            begin
              reg67 <= $signed((((~^wire59) ?
                      reg68[(2'h3):(1'h0)] : ((8'ha8) ^~ wire57)) ?
                  (-((8'ha1) ?
                      wire2 : wire2)) : ($unsigned(wire2) ^~ $signed((8'ha3)))));
            end
        end
      else
        begin
          if (wire2[(1'h0):(1'h0)])
            begin
              reg65 <= $signed(wire59);
              reg66 <= (~^{{reg69}});
              reg67 <= ((reg65 ?
                  (+{wire2}) : ($signed(wire3) ?
                      {(8'haa)} : (wire2 ?
                          wire63 : wire2))) || $signed(wire60));
            end
          else
            begin
              reg65 <= wire57;
            end
        end
      if (($signed($unsigned((&(8'ha3)))) ?
          $unsigned((reg68[(1'h0):(1'h0)] << $unsigned(reg66))) : wire63))
        begin
          reg70 <= (wire57[(2'h2):(2'h2)] == (wire59 >>> $unsigned((reg65 >> wire3))));
        end
      else
        begin
          reg70 <= (reg67[(2'h3):(2'h2)] ?
              $unsigned(($unsigned(reg69) < wire0)) : (+{reg67[(1'h1):(1'h1)]}));
          if ($signed((wire1[(1'h1):(1'h1)] ~^ (reg64 ?
              $signed(wire1) : ((8'ha3) ? reg67 : reg64)))))
            begin
              reg71 <= (|wire1);
              reg72 <= $unsigned(($unsigned((reg66 ?
                  wire63 : wire63)) >= (-(-reg65))));
              reg73 <= wire60;
            end
          else
            begin
              reg71 <= wire59[(2'h2):(1'h0)];
            end
        end
      reg74 <= wire60;
    end
  assign wire75 = ((reg74[(3'h5):(3'h5)] ?
                          wire2[(1'h1):(1'h1)] : $signed($signed((8'ha2)))) ?
                      $signed(reg73) : $signed(reg72[(3'h5):(2'h2)]));
  assign wire76 = wire3;
  assign wire77 = {(~&{wire62[(2'h2):(1'h0)]})};
  assign wire78 = ($unsigned((~&{wire0})) ?
                      (^~$unsigned(reg74[(3'h5):(2'h3)])) : $signed((~|$unsigned((8'ha6)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h64):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire8;
  input wire [(4'ha):(1'h0)] wire7;
  input wire [(2'h3):(1'h0)] wire6;
  input wire [(4'h9):(1'h0)] wire5;
  wire signed [(2'h2):(1'h0)] wire56;
  wire signed [(3'h6):(1'h0)] wire32;
  wire [(2'h2):(1'h0)] wire12;
  wire signed [(4'ha):(1'h0)] wire11;
  wire [(3'h4):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire34;
  wire [(2'h2):(1'h0)] wire37;
  wire [(3'h7):(1'h0)] wire38;
  wire [(4'hb):(1'h0)] wire43;
  wire [(2'h3):(1'h0)] wire54;
  reg [(4'h8):(1'h0)] reg10 = (1'h0);
  reg [(3'h7):(1'h0)] reg35 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg36 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg39 = (1'h0);
  reg [(3'h6):(1'h0)] reg40 = (1'h0);
  reg [(2'h2):(1'h0)] reg41 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg42 = (1'h0);
  assign y = {wire56,
                 wire32,
                 wire12,
                 wire11,
                 wire9,
                 wire34,
                 wire37,
                 wire38,
                 wire43,
                 wire54,
                 reg10,
                 reg35,
                 reg36,
                 reg39,
                 reg40,
                 reg41,
                 reg42,
                 (1'h0)};
  assign wire9 = {((^$unsigned(wire8)) ?
                         $signed((wire5 >= wire6)) : ((wire8 ? wire6 : wire8) ?
                             $unsigned(wire7) : {wire5}))};
  always
    @(posedge clk) begin
      reg10 <= $unsigned(wire6);
    end
  assign wire11 = (~$signed(wire6[(2'h3):(1'h1)]));
  assign wire12 = wire11[(1'h1):(1'h1)];
  module13 #() modinst33 (.wire15(wire9), .y(wire32), .wire14(reg10), .clk(clk), .wire16(wire8), .wire17(wire11));
  assign wire34 = wire32[(2'h3):(1'h0)];
  always
    @(posedge clk) begin
      reg35 <= {$signed($signed(((8'ha8) ? wire32 : wire6)))};
      reg36 <= ($unsigned((^~$unsigned(wire5))) >> (~^wire32));
    end
  assign wire37 = ((~^$unsigned((^(8'hac)))) << wire7[(3'h4):(2'h3)]);
  assign wire38 = (~|{$unsigned(((8'ha8) ? (8'h9d) : wire5))});
  always
    @(posedge clk) begin
      reg39 <= $signed((8'ha0));
      if ({((8'haf) == wire9[(3'h4):(3'h4)])})
        begin
          if ($unsigned($signed(reg39)))
            begin
              reg40 <= $unsigned(wire11[(2'h2):(1'h0)]);
            end
          else
            begin
              reg40 <= {$unsigned((~&$signed((8'ha2))))};
            end
          reg41 <= (~|((~&$signed((8'haa))) * $unsigned((wire7 ?
              (8'hae) : wire34))));
          reg42 <= $signed($signed((|(reg36 - wire6))));
        end
      else
        begin
          reg40 <= ((wire7[(1'h1):(1'h0)] ?
              ((wire37 < (8'h9c)) ?
                  $unsigned(reg10) : (wire34 <= reg36)) : $unsigned(reg39[(2'h3):(1'h1)])) && (&wire8[(3'h5):(3'h5)]));
        end
    end
  assign wire43 = (~&$unsigned(reg39));
  module44 #() modinst55 (wire54, clk, reg39, wire5, wire11, wire9);
  assign wire56 = wire37[(1'h1):(1'h1)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module44  (y, clk, wire48, wire47, wire46, wire45);
  output wire [(32'h21):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire48;
  input wire signed [(4'h9):(1'h0)] wire47;
  input wire [(4'ha):(1'h0)] wire46;
  input wire signed [(2'h3):(1'h0)] wire45;
  wire signed [(2'h3):(1'h0)] wire53;
  wire [(2'h2):(1'h0)] wire52;
  wire [(4'hb):(1'h0)] wire51;
  wire signed [(4'hb):(1'h0)] wire50;
  wire signed [(3'h5):(1'h0)] wire49;
  assign y = {wire53, wire52, wire51, wire50, wire49, (1'h0)};
  assign wire49 = (8'hb0);
  assign wire50 = $signed((wire45[(2'h3):(2'h3)] > wire46));
  assign wire51 = wire48[(3'h6):(1'h0)];
  assign wire52 = $signed((8'haa));
  assign wire53 = $unsigned(($signed(wire50) ?
                      (8'h9e) : ($signed(wire45) ?
                          $unsigned(wire52) : (wire49 ? wire49 : wire52))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param31 = ((^~{(&(8'hac))}) ? (|({(8'hab)} || ((8'h9c) << (8'hb0)))) : ((~&((8'ha2) ? (8'haa) : (8'hab))) ? (((8'had) ? (8'h9c) : (8'ha0)) <= ((8'ha5) ? (8'ha1) : (8'ha0))) : (8'h9f))))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire17;
  input wire [(3'h6):(1'h0)] wire16;
  input wire [(3'h4):(1'h0)] wire15;
  input wire signed [(3'h6):(1'h0)] wire14;
  wire [(2'h2):(1'h0)] wire30;
  wire signed [(3'h5):(1'h0)] wire29;
  wire [(4'ha):(1'h0)] wire28;
  wire [(4'h8):(1'h0)] wire27;
  wire [(4'hb):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire22;
  wire signed [(4'hb):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire20;
  wire [(3'h6):(1'h0)] wire19;
  wire [(2'h2):(1'h0)] wire18;
  reg signed [(4'ha):(1'h0)] reg26 = (1'h0);
  reg [(2'h2):(1'h0)] reg25 = (1'h0);
  reg [(4'h9):(1'h0)] reg24 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 reg26,
                 reg25,
                 reg24,
                 (1'h0)};
  assign wire18 = $signed($signed(wire17));
  assign wire19 = ($unsigned(((!wire16) ?
                      (wire18 * wire17) : (~&wire17))) ^~ $signed({$signed((8'h9e))}));
  assign wire20 = ((wire15 >> (~&wire16)) << (|{wire16[(1'h0):(1'h0)]}));
  assign wire21 = (!(~&(~{wire17})));
  assign wire22 = ((~&(~$unsigned((8'ha7)))) ?
                      $unsigned($signed((wire16 ?
                          wire15 : wire21))) : ((~|((8'h9f) ?
                              (8'ha8) : wire17)) ?
                          {{wire18}} : {wire15[(1'h0):(1'h0)]}));
  assign wire23 = (({$unsigned(wire17)} ?
                      (8'h9f) : ($unsigned((8'ha3)) | wire21)) * ((!(wire14 << wire14)) ^~ wire19));
  always
    @(posedge clk) begin
      if (wire20)
        begin
          reg24 <= ($signed($unsigned((wire21 != wire14))) <= $signed(((wire21 & (8'haf)) | $unsigned(wire20))));
          reg25 <= ($unsigned($unsigned($signed(wire16))) ?
              wire20[(3'h5):(3'h4)] : ($signed({wire23}) <= ({wire21} ?
                  {wire20} : wire15)));
        end
      else
        begin
          reg24 <= wire19[(3'h4):(2'h2)];
          if ($unsigned((((-wire23) ? (&wire22) : (wire22 <= reg24)) ?
              (wire18 ? wire23 : reg25) : $unsigned((wire23 ~^ wire22)))))
            begin
              reg25 <= $unsigned(({(wire23 ? reg24 : (8'had))} ?
                  (wire20 ?
                      (wire23 ? wire20 : wire14) : (wire14 ?
                          wire17 : wire20)) : (+wire15)));
            end
          else
            begin
              reg25 <= ((-$unsigned($unsigned(wire19))) == $signed({{reg24}}));
            end
          reg26 <= (($unsigned($signed(reg24)) ?
              ((8'haf) ?
                  reg25[(1'h1):(1'h0)] : wire23) : wire15) << $signed($unsigned((wire15 ?
              wire15 : wire19))));
        end
    end
  assign wire27 = reg24[(2'h2):(1'h0)];
  assign wire28 = reg25;
  assign wire29 = (wire20 ?
                      (wire22[(2'h2):(1'h0)] ~^ wire23) : $signed(({(8'had)} ?
                          wire16[(3'h4):(3'h4)] : (reg26 ? wire27 : reg26))));
  assign wire30 = $unsigned(wire17);
endmodule