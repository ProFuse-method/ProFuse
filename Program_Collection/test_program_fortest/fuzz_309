(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire6;
  wire signed [(3'h7):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire4;
  reg [(3'h5):(1'h0)] reg9 = (1'h0);
  reg [(4'hb):(1'h0)] reg8 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg7 = (1'h0);
  assign y = {wire6, wire5, wire4, reg9, reg8, reg7, (1'h0)};
  assign wire4 = (+$unsigned((8'ha7)));
  assign wire5 = $unsigned(wire1[(2'h3):(1'h1)]);
  assign wire6 = ((&({wire5} || (wire4 == wire3))) << $signed(((!wire3) || (wire4 ?
                     wire0 : wire3))));
  always
    @(posedge clk) begin
      reg7 <= wire5;
      reg8 <= $signed(((8'hae) ?
          (~^reg7[(4'ha):(2'h2)]) : $signed($unsigned(wire2))));
      reg9 <= wire5[(3'h4):(1'h0)];
    end
endmodule