(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param35 = ({(~|((8'ha5) == (8'ha7)))} == ((((8'h9c) ~^ (8'ha7)) << {(8'haa)}) >>> (((8'had) >> (8'h9d)) >>> ((8'ha4) <= (8'hae))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(4'h8):(1'h0)] wire34;
  wire signed [(3'h7):(1'h0)] wire33;
  wire [(3'h7):(1'h0)] wire32;
  wire [(4'h8):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire30;
  wire [(4'hb):(1'h0)] wire29;
  wire signed [(4'ha):(1'h0)] wire28;
  wire [(3'h7):(1'h0)] wire27;
  wire [(3'h6):(1'h0)] wire26;
  wire [(3'h6):(1'h0)] wire25;
  wire signed [(3'h4):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  wire [(2'h2):(1'h0)] wire21;
  assign y = {wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire21,
                 (1'h0)};
  module4 #() modinst22 (wire21, clk, wire3, wire1, wire0, wire2);
  assign wire23 = wire21;
  assign wire24 = ((8'h9c) * (wire1[(4'ha):(1'h1)] - wire1));
  assign wire25 = ((-wire3) ~^ (|{(8'ha9)}));
  assign wire26 = wire24;
  assign wire27 = (((wire0 ? wire23 : $unsigned(wire2)) ?
                      ((wire3 ? wire26 : wire24) ?
                          ((8'haa) ?
                              wire3 : wire0) : (wire25 <<< wire21)) : wire24[(2'h2):(1'h1)]) == ((wire1 - (wire24 >>> wire2)) * wire2[(3'h5):(2'h2)]));
  assign wire28 = $unsigned($signed((wire24 ? wire26 : (wire1 + wire21))));
  assign wire29 = $unsigned(wire0);
  assign wire30 = $signed($signed({((8'ha3) ^ wire26)}));
  assign wire31 = wire25[(3'h4):(3'h4)];
  assign wire32 = wire30;
  assign wire33 = $unsigned($unsigned({(wire31 ? wire26 : wire30)}));
  assign wire34 = $unsigned((+$unsigned((^~wire26))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param20 = {(+(((8'h9d) <<< (8'ha8)) ^~ ((8'ha1) > (8'ha6))))})
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h40):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire8;
  input wire signed [(4'ha):(1'h0)] wire7;
  input wire [(4'hb):(1'h0)] wire6;
  input wire signed [(3'h4):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire19;
  wire signed [(3'h4):(1'h0)] wire18;
  wire signed [(4'ha):(1'h0)] wire17;
  wire [(3'h6):(1'h0)] wire16;
  wire [(3'h4):(1'h0)] wire15;
  wire signed [(3'h5):(1'h0)] wire14;
  wire [(3'h6):(1'h0)] wire13;
  wire [(3'h4):(1'h0)] wire12;
  wire signed [(3'h6):(1'h0)] wire11;
  reg signed [(2'h3):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg9 = (1'h0);
  assign y = {wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 reg10,
                 reg9,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg9 <= wire7;
      reg10 <= ($unsigned($unsigned(((8'h9f) ? wire7 : wire7))) || wire5);
    end
  assign wire11 = reg10;
  assign wire12 = $signed((~$unsigned($signed(wire5))));
  assign wire13 = $signed(wire12);
  assign wire14 = wire12[(3'h4):(2'h3)];
  assign wire15 = $signed((wire13[(2'h3):(2'h2)] ?
                      {wire11[(3'h5):(1'h0)]} : {(wire5 < reg9)}));
  assign wire16 = (~^reg9[(4'h9):(2'h3)]);
  assign wire17 = $signed($signed(reg9));
  assign wire18 = reg9;
  assign wire19 = {((|wire5) ?
                          $unsigned($unsigned(wire14)) : wire13[(3'h6):(2'h2)])};
endmodule