(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire3;
  wire [(4'h9):(1'h0)] wire4;
  wire signed [(4'hb):(1'h0)] wire12;
  wire signed [(3'h6):(1'h0)] wire13;
  wire [(3'h6):(1'h0)] wire57;
  reg signed [(3'h4):(1'h0)] reg5 = (1'h0);
  reg [(2'h2):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg7 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg9 = (1'h0);
  reg [(3'h5):(1'h0)] reg10 = (1'h0);
  reg [(4'ha):(1'h0)] reg11 = (1'h0);
  assign y = {wire4,
                 wire12,
                 wire13,
                 wire57,
                 reg5,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 reg11,
                 (1'h0)};
  assign wire4 = (wire3 >>> $unsigned(((8'ha1) & (wire1 ~^ wire2))));
  always
    @(posedge clk) begin
      reg5 <= {{(8'hab)}};
      if ((wire2[(3'h4):(3'h4)] - ((8'hab) == wire4[(3'h6):(3'h5)])))
        begin
          reg6 <= wire3[(4'h9):(3'h4)];
          if ((8'h9f))
            begin
              reg7 <= ($unsigned(wire1) | ((8'h9c) ?
                  wire0[(3'h4):(3'h4)] : (((8'h9d) && wire3) | {wire2})));
              reg8 <= (({$signed(wire0)} ?
                  ((wire3 ? reg7 : reg6) ?
                      $signed(wire1) : (~&wire3)) : {(wire0 ?
                          wire3 : wire4)}) != $unsigned(wire4[(4'h9):(1'h0)]));
              reg9 <= ($unsigned(reg6) ?
                  $signed((~|(!wire2))) : (($unsigned(reg5) ?
                          $signed(wire2) : {(8'ha3)}) ?
                      wire2[(2'h3):(1'h0)] : $unsigned((reg7 ?
                          wire2 : wire2))));
            end
          else
            begin
              reg7 <= $signed(($unsigned($unsigned(wire1)) + $unsigned(((8'h9c) ?
                  wire0 : (8'ha0)))));
              reg8 <= (-(wire3[(1'h1):(1'h1)] | reg6[(1'h1):(1'h0)]));
            end
          reg10 <= reg5;
        end
      else
        begin
          reg6 <= $signed(reg9[(3'h4):(2'h2)]);
          reg7 <= wire2[(1'h1):(1'h0)];
        end
      reg11 <= $signed((~&wire3[(2'h3):(2'h3)]));
    end
  assign wire12 = (+$signed($signed((^~reg9))));
  assign wire13 = reg8;
  module14 #() modinst58 (wire57, clk, reg6, reg9, reg10, wire13);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire15, wire16, wire17, wire18);
  output wire [(32'hb9):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire15;
  input wire [(4'h8):(1'h0)] wire16;
  input wire [(3'h4):(1'h0)] wire17;
  input wire [(3'h4):(1'h0)] wire18;
  wire signed [(2'h3):(1'h0)] wire56;
  wire [(4'ha):(1'h0)] wire55;
  wire signed [(3'h5):(1'h0)] wire54;
  wire signed [(3'h5):(1'h0)] wire53;
  wire signed [(4'hb):(1'h0)] wire52;
  wire [(3'h6):(1'h0)] wire30;
  wire signed [(4'h9):(1'h0)] wire32;
  wire signed [(4'ha):(1'h0)] wire33;
  wire [(4'ha):(1'h0)] wire34;
  wire [(4'h9):(1'h0)] wire48;
  reg signed [(3'h7):(1'h0)] reg51 = (1'h0);
  reg [(4'h9):(1'h0)] reg50 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg19 = (1'h0);
  reg [(3'h6):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg21 = (1'h0);
  reg [(4'ha):(1'h0)] reg22 = (1'h0);
  reg [(3'h7):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg25 = (1'h0);
  reg [(3'h7):(1'h0)] reg26 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg27 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg28 = (1'h0);
  reg [(4'ha):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg31 = (1'h0);
  assign y = {wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire30,
                 wire32,
                 wire33,
                 wire34,
                 wire48,
                 reg51,
                 reg50,
                 reg19,
                 reg20,
                 reg21,
                 reg22,
                 reg23,
                 reg24,
                 reg25,
                 reg26,
                 reg27,
                 reg28,
                 reg29,
                 reg31,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg19 <= wire17;
      reg20 <= wire15[(1'h1):(1'h0)];
      if ($unsigned(reg20))
        begin
          if ((8'hac))
            begin
              reg21 <= ($signed(wire16) | {wire15});
              reg22 <= ((((^wire17) == ((8'ha6) <<< wire18)) ?
                  ((reg21 ?
                      wire18 : reg19) <<< $unsigned(wire16)) : reg20) << (wire17 <<< (~((8'ha6) ?
                  reg20 : (8'ha3)))));
              reg23 <= ((^reg21) ?
                  ((~|(8'ha7)) - (reg22 ?
                      $signed(reg21) : $signed(wire15))) : reg22[(1'h1):(1'h1)]);
            end
          else
            begin
              reg21 <= {reg22[(2'h3):(2'h2)]};
              reg22 <= wire17;
              reg23 <= (reg21[(1'h0):(1'h0)] ?
                  {reg21} : $unsigned(reg22[(4'ha):(4'ha)]));
            end
          if ($signed($unsigned($unsigned((reg23 || wire17)))))
            begin
              reg24 <= reg23[(3'h6):(2'h3)];
              reg25 <= {reg23[(1'h0):(1'h0)]};
              reg26 <= ($signed($unsigned((^~wire16))) | (-((reg23 ?
                      reg19 : (8'ha7)) ?
                  (reg24 && reg20) : (reg21 && reg20))));
            end
          else
            begin
              reg24 <= $unsigned($signed($signed($unsigned(wire15))));
            end
          if ((8'hac))
            begin
              reg27 <= ((((reg21 ? reg24 : wire15) ?
                      $signed((8'haf)) : $signed(reg20)) ?
                  $signed(wire15[(1'h0):(1'h0)]) : $signed((reg19 == (8'h9d)))) >= reg24);
              reg28 <= (&$signed(((~^reg19) > (reg25 ? reg19 : wire18))));
              reg29 <= $signed($unsigned(($unsigned(reg25) ~^ $signed(reg23))));
            end
          else
            begin
              reg27 <= $signed($signed((|(wire16 ? (8'h9e) : reg22))));
              reg28 <= ($unsigned({(!wire16)}) << {$unsigned((reg26 >>> wire15))});
            end
        end
      else
        begin
          reg21 <= $signed((({(8'ha6)} ?
              {wire16} : $signed(wire15)) >= (^~(reg21 ? reg22 : reg20))));
        end
    end
  assign wire30 = wire17;
  always
    @(posedge clk) begin
      reg31 <= (~&(~^$signed($signed(wire15))));
    end
  assign wire32 = $unsigned(wire16);
  assign wire33 = (^~(($unsigned(reg25) ? $signed(reg31) : $unsigned((8'h9c))) ?
                      ($signed(reg29) ?
                          (reg28 << reg31) : $unsigned(reg28)) : ((reg29 ?
                          reg23 : reg22) ^~ (reg20 | reg31))));
  assign wire34 = $unsigned((((8'ha4) > ((8'h9d) - reg29)) >>> ((&(8'hae)) >= (^~reg19))));
  module35 #() modinst49 (.wire39(reg25), .wire37(reg21), .wire36(wire34), .y(wire48), .wire38(reg24), .clk(clk));
  always
    @(posedge clk) begin
      reg50 <= $unsigned((~^(reg29[(3'h4):(2'h3)] << (8'ha3))));
      reg51 <= reg25;
    end
  assign wire52 = $unsigned(reg28);
  assign wire53 = $signed((~^wire33));
  assign wire54 = ({reg24} > (~^(reg51 + ((8'h9d) <= reg22))));
  assign wire55 = wire54[(2'h2):(1'h0)];
  assign wire56 = wire48[(3'h4):(3'h4)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module35
#(parameter param47 = ((((!(8'ha1)) ? ((8'ha8) ? (8'ha4) : (8'haf)) : ((8'hb0) << (8'had))) << (((8'h9e) && (8'h9d)) ^~ {(8'h9d)})) ~^ (|{((8'ha3) - (8'ha5))})))
(y, clk, wire39, wire38, wire37, wire36);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire39;
  input wire [(3'h4):(1'h0)] wire38;
  input wire [(3'h7):(1'h0)] wire37;
  input wire signed [(4'ha):(1'h0)] wire36;
  wire [(2'h3):(1'h0)] wire46;
  wire [(3'h7):(1'h0)] wire45;
  wire signed [(4'h9):(1'h0)] wire44;
  wire [(3'h7):(1'h0)] wire43;
  wire signed [(3'h7):(1'h0)] wire42;
  wire [(4'hb):(1'h0)] wire41;
  wire [(2'h3):(1'h0)] wire40;
  assign y = {wire46, wire45, wire44, wire43, wire42, wire41, wire40, (1'h0)};
  assign wire40 = (wire37 ? wire37 : wire38[(3'h4):(2'h3)]);
  assign wire41 = wire38[(1'h0):(1'h0)];
  assign wire42 = wire41[(1'h0):(1'h0)];
  assign wire43 = ($signed(wire38) ?
                      ((|(+wire40)) ?
                          wire42[(3'h4):(1'h0)] : (!((8'ha1) * wire39))) : wire40);
  assign wire44 = ((wire42 >> (8'hae)) && $signed(wire40));
  assign wire45 = ((8'ha2) ?
                      wire41[(3'h7):(3'h4)] : $unsigned($signed((wire37 < (8'ha2)))));
  assign wire46 = (+($signed(wire41) ?
                      $signed($signed(wire44)) : $unsigned((^~wire41))));
endmodule