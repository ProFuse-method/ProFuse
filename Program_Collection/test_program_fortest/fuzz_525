(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param46 = {(&(~|((8'ha3) != (8'haa))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire45;
  wire signed [(3'h5):(1'h0)] wire44;
  wire signed [(4'hb):(1'h0)] wire40;
  wire signed [(2'h3):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire38;
  wire signed [(4'h9):(1'h0)] wire36;
  wire signed [(4'hb):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire5;
  reg [(3'h7):(1'h0)] reg43 = (1'h0);
  reg [(4'h9):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg41 = (1'h0);
  reg [(4'hb):(1'h0)] reg4 = (1'h0);
  assign y = {wire45,
                 wire44,
                 wire40,
                 wire39,
                 wire38,
                 wire36,
                 wire6,
                 wire5,
                 reg43,
                 reg42,
                 reg41,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= {$signed($unsigned((!wire1)))};
    end
  assign wire5 = $unsigned(($signed(wire2) >= wire3));
  assign wire6 = (-({wire1} <= $signed((|reg4))));
  module7 #() modinst37 (wire36, clk, wire0, wire3, wire1, wire2);
  assign wire38 = ((wire36[(1'h1):(1'h1)] ?
                      (~|$signed(wire0)) : (^~(reg4 || wire36))) << reg4[(1'h0):(1'h0)]);
  assign wire39 = ((^(8'ha4)) ?
                      {(8'h9f)} : (wire3[(2'h3):(1'h0)] ?
                          $unsigned(wire0[(2'h2):(1'h1)]) : $signed((reg4 <= wire6))));
  assign wire40 = wire3[(2'h3):(2'h3)];
  always
    @(posedge clk) begin
      reg41 <= $unsigned($unsigned($unsigned($unsigned(wire40))));
    end
  always
    @(posedge clk) begin
      reg42 <= (($unsigned($unsigned(wire5)) < {(wire1 >> (8'haa))}) <= (~&$unsigned((^~wire36))));
      reg43 <= $signed((~|$unsigned((~|wire39))));
    end
  assign wire44 = wire36[(3'h7):(1'h0)];
  assign wire45 = (~&(wire36 != $unsigned((reg4 | wire38))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire8, wire9, wire10, wire11);
  output wire [(32'h5e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire [(4'ha):(1'h0)] wire11;
  wire signed [(2'h3):(1'h0)] wire35;
  wire [(4'ha):(1'h0)] wire12;
  wire signed [(4'ha):(1'h0)] wire21;
  wire signed [(4'h8):(1'h0)] wire33;
  reg signed [(4'h8):(1'h0)] reg13 = (1'h0);
  reg [(2'h3):(1'h0)] reg14 = (1'h0);
  reg [(4'hb):(1'h0)] reg15 = (1'h0);
  reg [(3'h7):(1'h0)] reg16 = (1'h0);
  reg [(4'ha):(1'h0)] reg17 = (1'h0);
  reg [(4'h8):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg19 = (1'h0);
  reg [(4'hb):(1'h0)] reg20 = (1'h0);
  assign y = {wire35,
                 wire12,
                 wire21,
                 wire33,
                 reg13,
                 reg14,
                 reg15,
                 reg16,
                 reg17,
                 reg18,
                 reg19,
                 reg20,
                 (1'h0)};
  assign wire12 = ($unsigned($unsigned((~|wire11))) | ((8'hb0) ~^ {wire8}));
  always
    @(posedge clk) begin
      reg13 <= (|$unsigned($unsigned(wire10)));
      reg14 <= wire9;
    end
  always
    @(posedge clk) begin
      if ({(((wire10 ? wire11 : wire8) && wire12) ?
              ((wire12 ? (8'ha7) : reg14) ?
                  $signed(wire12) : (~wire12)) : wire8)})
        begin
          reg15 <= $signed((wire9[(4'h9):(2'h3)] ?
              (-wire12) : wire10[(1'h1):(1'h0)]));
          if ((reg15 ?
              $signed(({wire11} ?
                  wire11[(1'h0):(1'h0)] : reg13)) : $signed($unsigned(((8'h9e) + (8'ha9))))))
            begin
              reg16 <= reg15;
            end
          else
            begin
              reg16 <= wire10;
              reg17 <= $unsigned(wire12[(2'h2):(1'h1)]);
            end
          reg18 <= (|{((&wire10) <= {wire12})});
        end
      else
        begin
          if (wire9)
            begin
              reg15 <= $unsigned($unsigned(({reg15} ? (^~reg13) : {reg13})));
              reg16 <= wire12[(3'h4):(2'h2)];
            end
          else
            begin
              reg15 <= ((|{(-wire8)}) ?
                  $unsigned($unsigned((!reg17))) : (~reg13));
              reg16 <= reg18[(3'h5):(3'h5)];
            end
        end
      reg19 <= {(^reg17[(4'h8):(3'h4)])};
      reg20 <= (wire12 ?
          reg17[(3'h5):(3'h4)] : ($unsigned((8'hab)) ?
              $unsigned(reg17) : reg17));
    end
  assign wire21 = wire12[(2'h2):(1'h1)];
  module22 #() modinst34 (wire33, clk, reg13, reg16, reg15, wire9);
  assign wire35 = ($unsigned(reg18) ?
                      $signed(reg20[(3'h5):(3'h4)]) : (-{(wire9 <= reg20)}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module22  (y, clk, wire26, wire25, wire24, wire23);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire26;
  input wire [(3'h5):(1'h0)] wire25;
  input wire [(4'hb):(1'h0)] wire24;
  input wire [(4'h8):(1'h0)] wire23;
  wire [(4'h9):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire31;
  wire signed [(4'ha):(1'h0)] wire30;
  wire [(3'h5):(1'h0)] wire29;
  wire signed [(3'h6):(1'h0)] wire28;
  wire signed [(4'h9):(1'h0)] wire27;
  assign y = {wire32, wire31, wire30, wire29, wire28, wire27, (1'h0)};
  assign wire27 = wire24[(4'h9):(2'h3)];
  assign wire28 = (wire24 * wire24[(3'h6):(3'h6)]);
  assign wire29 = $signed($unsigned(wire24));
  assign wire30 = $unsigned((wire29[(1'h0):(1'h0)] >>> wire25));
  assign wire31 = $unsigned((8'ha2));
  assign wire32 = wire28;
endmodule