(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h8d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire79;
  wire [(4'h9):(1'h0)] wire78;
  wire [(2'h3):(1'h0)] wire72;
  wire signed [(4'hb):(1'h0)] wire68;
  wire signed [(4'ha):(1'h0)] wire67;
  wire signed [(3'h7):(1'h0)] wire65;
  reg [(3'h5):(1'h0)] reg86 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg85 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg84 = (1'h0);
  reg [(3'h5):(1'h0)] reg83 = (1'h0);
  reg [(2'h2):(1'h0)] reg82 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg81 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg80 = (1'h0);
  reg [(3'h5):(1'h0)] reg77 = (1'h0);
  reg [(4'ha):(1'h0)] reg76 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg75 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg74 = (1'h0);
  reg [(4'h9):(1'h0)] reg73 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg71 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg70 = (1'h0);
  reg [(4'h9):(1'h0)] reg69 = (1'h0);
  assign y = {wire79,
                 wire78,
                 wire72,
                 wire68,
                 wire67,
                 wire65,
                 reg86,
                 reg85,
                 reg84,
                 reg83,
                 reg82,
                 reg81,
                 reg80,
                 reg77,
                 reg76,
                 reg75,
                 reg74,
                 reg73,
                 reg71,
                 reg70,
                 reg69,
                 (1'h0)};
  module4 #() modinst66 (.wire8(wire0), .wire6(wire2), .y(wire65), .clk(clk), .wire7(wire1), .wire5(wire3));
  assign wire67 = (|{$signed((-wire2))});
  assign wire68 = $signed(wire0);
  always
    @(posedge clk) begin
      reg69 <= (wire68 || (8'ha9));
      reg70 <= wire68[(3'h4):(1'h1)];
      reg71 <= {wire68[(3'h7):(2'h3)]};
    end
  assign wire72 = reg69[(3'h6):(3'h5)];
  always
    @(posedge clk) begin
      if (((reg71 | $signed(wire68[(4'ha):(3'h7)])) ?
          $signed(reg71) : ($signed($signed(reg71)) != $signed((wire3 ^~ wire0)))))
        begin
          reg73 <= reg71;
        end
      else
        begin
          reg73 <= ($signed(wire3[(3'h6):(1'h1)]) ?
              {{(wire67 ? wire67 : wire0)}} : $signed($unsigned(wire65)));
          reg74 <= (&$unsigned(($signed(reg70) ? $signed(reg71) : (~wire67))));
          reg75 <= reg71[(2'h2):(1'h0)];
        end
      reg76 <= $unsigned($unsigned(($signed((8'haf)) ?
          (wire3 + wire67) : (wire68 < wire1))));
      reg77 <= wire65[(3'h5):(3'h5)];
    end
  assign wire78 = {{wire0}};
  assign wire79 = {reg75[(3'h5):(2'h3)]};
  always
    @(posedge clk) begin
      reg80 <= (reg69[(4'h9):(3'h7)] ?
          $signed(reg74[(2'h3):(1'h1)]) : wire79[(1'h1):(1'h0)]);
      if (wire3[(2'h3):(1'h0)])
        begin
          reg81 <= $signed((+(8'ha2)));
        end
      else
        begin
          if ({(^$unsigned(wire67[(3'h7):(1'h0)]))})
            begin
              reg81 <= (~^$signed(((^wire2) ?
                  $signed(reg76) : $signed((8'ha2)))));
              reg82 <= $signed(wire78[(2'h2):(2'h2)]);
            end
          else
            begin
              reg81 <= wire2[(2'h2):(2'h2)];
              reg82 <= (!((~|reg77[(1'h0):(1'h0)]) ?
                  reg76[(4'h9):(1'h1)] : ({reg82} ?
                      (-reg71) : $unsigned(wire72))));
              reg83 <= (($unsigned($unsigned(reg73)) ?
                      $signed((wire67 ? wire2 : wire0)) : (~(reg80 ?
                          reg74 : wire68))) ?
                  $signed((&reg80)) : reg82);
            end
          reg84 <= wire72[(2'h3):(1'h1)];
        end
      reg85 <= $unsigned($unsigned(reg76[(3'h7):(3'h5)]));
    end
  always
    @(posedge clk) begin
      reg86 <= wire72[(1'h1):(1'h0)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h23):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire8;
  input wire [(3'h5):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire6;
  input wire signed [(4'hb):(1'h0)] wire5;
  wire [(3'h7):(1'h0)] wire63;
  wire signed [(4'ha):(1'h0)] wire48;
  wire [(4'h8):(1'h0)] wire47;
  wire [(4'h9):(1'h0)] wire45;
  assign y = {wire63, wire48, wire47, wire45, (1'h0)};
  module9 #() modinst46 (wire45, clk, wire5, wire8, wire6, wire7);
  assign wire47 = $unsigned(($unsigned((wire6 ?
                      wire8 : wire8)) > $signed(wire7[(1'h1):(1'h1)])));
  assign wire48 = {$signed($signed(wire5))};
  module49 #() modinst64 (wire63, clk, wire47, wire8, wire5, wire48);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module49
#(parameter param62 = (((~|((8'h9f) <<< (8'hac))) ? ((^~(8'hac)) ? ((8'hb0) + (8'had)) : ((8'h9e) ? (8'ha6) : (8'ha6))) : ({(8'ha5)} ? ((8'hab) == (8'ha3)) : ((8'ha4) <<< (8'haa)))) <<< ({(~&(8'hb0))} || (&(|(8'had))))))
(y, clk, wire53, wire52, wire51, wire50);
  output wire [(32'h38):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire53;
  input wire [(4'h9):(1'h0)] wire52;
  input wire [(3'h7):(1'h0)] wire51;
  input wire signed [(3'h7):(1'h0)] wire50;
  wire signed [(4'h9):(1'h0)] wire61;
  wire [(4'h8):(1'h0)] wire60;
  wire [(4'h8):(1'h0)] wire59;
  wire signed [(4'ha):(1'h0)] wire58;
  wire signed [(2'h3):(1'h0)] wire57;
  wire signed [(3'h6):(1'h0)] wire56;
  wire signed [(3'h7):(1'h0)] wire55;
  wire [(3'h4):(1'h0)] wire54;
  assign y = {wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 (1'h0)};
  assign wire54 = wire52;
  assign wire55 = $unsigned(($unsigned(((8'ha8) ? wire52 : (8'ha2))) > (wire53 ?
                      (!wire50) : (^~wire54))));
  assign wire56 = ($unsigned(($signed(wire51) ?
                      (wire51 <<< wire53) : $signed(wire54))) << wire51);
  assign wire57 = (wire54 ?
                      wire55[(2'h2):(1'h0)] : $unsigned($signed((-wire50))));
  assign wire58 = $signed((~|wire57[(1'h0):(1'h0)]));
  assign wire59 = wire58[(3'h6):(3'h6)];
  assign wire60 = wire50;
  assign wire61 = wire57;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9  (y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'hb9):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire13;
  input wire signed [(4'h9):(1'h0)] wire12;
  input wire [(2'h3):(1'h0)] wire11;
  input wire signed [(2'h2):(1'h0)] wire10;
  wire signed [(3'h6):(1'h0)] wire44;
  wire [(4'h9):(1'h0)] wire43;
  wire [(2'h3):(1'h0)] wire42;
  wire signed [(4'hb):(1'h0)] wire41;
  wire [(4'ha):(1'h0)] wire40;
  wire [(4'hb):(1'h0)] wire39;
  wire signed [(2'h3):(1'h0)] wire17;
  reg [(3'h5):(1'h0)] reg38 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg37 = (1'h0);
  reg [(4'h8):(1'h0)] reg36 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg33 = (1'h0);
  reg [(2'h3):(1'h0)] reg32 = (1'h0);
  reg [(3'h6):(1'h0)] reg31 = (1'h0);
  reg [(4'ha):(1'h0)] reg30 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg29 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg24 = (1'h0);
  reg [(3'h6):(1'h0)] reg23 = (1'h0);
  reg [(2'h3):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg21 = (1'h0);
  reg [(3'h5):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg19 = (1'h0);
  reg [(3'h4):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg15 = (1'h0);
  reg [(3'h7):(1'h0)] reg14 = (1'h0);
  assign y = {wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire17,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg16,
                 reg15,
                 reg14,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg14 <= wire13;
      reg15 <= (~|(reg14[(3'h6):(1'h1)] ?
          (wire11[(2'h2):(2'h2)] > (wire11 <<< wire12)) : wire10));
      reg16 <= (&(&((wire12 ^ reg14) ? {wire13} : $unsigned((8'ha1)))));
    end
  assign wire17 = (((~$unsigned(wire11)) < (8'ha3)) << ((((8'ha2) ^ (8'h9c)) ?
                      $signed(reg15) : ((8'ha6) ?
                          wire10 : reg15)) > $unsigned(reg15[(3'h5):(3'h4)])));
  always
    @(posedge clk) begin
      reg18 <= (reg14 | reg15);
      if ($signed(($signed(wire10) ?
          ((wire13 ? wire12 : wire13) ?
              wire13 : ((8'ha1) ? reg14 : wire10)) : {(reg15 ?
                  wire17 : wire12)})))
        begin
          reg19 <= ((-{$unsigned((8'hb0))}) | (((reg14 >= wire12) ?
              $signed(reg18) : (~|wire12)) ^ (~&$signed(reg16))));
          reg20 <= wire17[(1'h1):(1'h0)];
          reg21 <= $unsigned($signed(reg14));
        end
      else
        begin
          reg19 <= $unsigned(((8'haf) ? wire17 : $unsigned(reg15)));
        end
      reg22 <= (8'h9e);
    end
  always
    @(posedge clk) begin
      if (((((reg15 ? reg14 : reg14) >>> {wire17}) ?
          (^$signed(wire17)) : ((~|wire12) >>> (reg21 ?
              wire13 : (8'haa)))) > $unsigned(wire10[(1'h0):(1'h0)])))
        begin
          reg23 <= (!((reg19[(2'h3):(2'h3)] == $signed(reg19)) > $signed((wire10 > reg21))));
          reg24 <= reg23;
          reg25 <= $unsigned((($unsigned(wire13) ?
                  (wire11 >>> reg21) : (wire10 >> wire13)) ?
              reg15 : ((wire17 ? wire11 : reg20) > (wire10 ~^ (8'hae)))));
        end
      else
        begin
          reg23 <= (reg25[(2'h3):(2'h2)] ?
              (((8'hae) ? (&reg24) : (wire11 ? (8'ha8) : (8'h9e))) ?
                  wire12 : (reg25[(3'h6):(2'h3)] - (^~reg23))) : reg16);
          if (($unsigned(($unsigned(reg25) ~^ $signed(reg18))) ?
              $unsigned(($unsigned((8'hab)) - reg23)) : $unsigned($unsigned((~&reg21)))))
            begin
              reg24 <= (((reg21[(2'h2):(2'h2)] ?
                  (wire11 != (8'haf)) : (8'ha1)) > reg16[(3'h6):(3'h6)]) != $unsigned(($unsigned(wire12) ?
                  $signed(reg23) : wire17)));
              reg25 <= $signed((|(wire10[(1'h1):(1'h0)] ?
                  wire13[(3'h6):(2'h2)] : {wire12})));
              reg26 <= wire11;
            end
          else
            begin
              reg24 <= (8'had);
            end
          if ((~&reg19[(1'h0):(1'h0)]))
            begin
              reg27 <= $unsigned($signed(reg26));
            end
          else
            begin
              reg27 <= reg27;
              reg28 <= ($unsigned($signed({(8'hb0)})) ?
                  $unsigned(reg23[(1'h1):(1'h0)]) : (+((&reg24) && $unsigned(wire17))));
              reg29 <= reg24[(1'h0):(1'h0)];
            end
        end
      if (((reg14 == $signed(reg25)) ? $unsigned((8'ha6)) : reg20))
        begin
          if ($unsigned((~&$signed($signed(wire12)))))
            begin
              reg30 <= reg25[(3'h6):(1'h0)];
              reg31 <= ($signed(reg22) ?
                  ({(reg23 ?
                          reg22 : reg22)} > wire11) : $unsigned(wire17[(2'h2):(1'h1)]));
            end
          else
            begin
              reg30 <= ($signed($signed((wire11 ^ reg22))) ? reg24 : reg28);
              reg31 <= (^~wire11[(2'h3):(2'h2)]);
              reg32 <= (~&(((wire11 + wire17) && ((8'ha3) << reg14)) && $unsigned(((8'hae) - reg29))));
            end
          reg33 <= reg32[(1'h1):(1'h0)];
        end
      else
        begin
          reg30 <= reg25[(2'h2):(1'h1)];
          reg31 <= ($signed(((wire17 ? wire12 : reg26) ?
              $unsigned(reg30) : reg26)) | wire17);
        end
    end
  always
    @(posedge clk) begin
      if (reg15[(1'h1):(1'h1)])
        begin
          reg34 <= $signed($unsigned(((reg19 >= reg27) > ((8'hb0) && reg18))));
          reg35 <= $signed(reg20[(1'h1):(1'h0)]);
          if (wire12)
            begin
              reg36 <= reg18[(2'h2):(2'h2)];
            end
          else
            begin
              reg36 <= $signed($signed($signed((reg27 ? reg25 : reg36))));
              reg37 <= reg23[(3'h4):(1'h0)];
              reg38 <= reg36[(2'h2):(1'h1)];
            end
        end
      else
        begin
          reg34 <= $signed((&((reg16 ? wire12 : reg24) ?
              (reg20 + reg36) : (~^reg36))));
        end
    end
  assign wire39 = $signed(reg18);
  assign wire40 = wire39[(3'h4):(2'h2)];
  assign wire41 = reg26[(1'h1):(1'h1)];
  assign wire42 = reg21[(2'h2):(1'h1)];
  assign wire43 = ((~&reg23[(3'h5):(3'h5)]) ?
                      reg36[(3'h6):(3'h5)] : ($unsigned(((8'hab) << reg16)) ?
                          reg20 : $unsigned($unsigned(reg15))));
  assign wire44 = $unsigned(reg15);
endmodule