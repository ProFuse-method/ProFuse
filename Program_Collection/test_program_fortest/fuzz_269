(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param10 = ((~(((8'ha8) >= (8'ha7)) ? ((8'ha7) ? (8'hab) : (8'haf)) : ((8'hae) == (8'ha8)))) | {(((8'ha0) ? (8'ha0) : (8'haf)) <<< ((8'ha4) < (8'ha2)))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(3'h4):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire7;
  wire [(3'h4):(1'h0)] wire6;
  wire signed [(3'h5):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg [(4'h9):(1'h0)] reg8 = (1'h0);
  assign y = {wire7, wire6, wire5, wire4, reg9, reg8, (1'h0)};
  assign wire4 = (((~&wire2[(1'h1):(1'h1)]) == $signed(wire3)) ^~ (8'haf));
  assign wire5 = (($signed($unsigned(wire1)) >= ((wire3 > wire0) - wire3[(2'h2):(1'h1)])) >>> wire2);
  assign wire6 = (wire3 ? wire5 : ($unsigned((wire4 <= wire1)) * wire5));
  assign wire7 = (|$signed((8'h9f)));
  always
    @(posedge clk) begin
      reg8 <= ($unsigned($unsigned({wire4})) >= (~{$unsigned(wire6)}));
      reg9 <= $unsigned((((8'h9f) > (!wire1)) ?
          $unsigned({wire6}) : ($signed(wire3) ?
              (wire2 != wire0) : {(8'ha4)})));
    end
endmodule