(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire0;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire3;
  wire [(3'h5):(1'h0)] wire24;
  wire [(3'h6):(1'h0)] wire23;
  wire signed [(4'hb):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire4;
  wire [(4'h8):(1'h0)] wire5;
  wire signed [(3'h4):(1'h0)] wire6;
  wire signed [(4'h8):(1'h0)] wire7;
  wire [(4'ha):(1'h0)] wire20;
  reg [(2'h2):(1'h0)] reg8 = (1'h0);
  reg [(4'h8):(1'h0)] reg9 = (1'h0);
  assign y = {wire24,
                 wire23,
                 wire22,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire20,
                 reg8,
                 reg9,
                 (1'h0)};
  assign wire4 = ({wire0[(1'h0):(1'h0)]} ~^ $unsigned(($unsigned(wire1) ?
                     {wire1} : (~wire0))));
  assign wire5 = wire4;
  assign wire6 = $signed((wire2 ?
                     wire5 : (((8'ha7) >= wire5) * (wire5 ?
                         (8'ha8) : (8'ha9)))));
  assign wire7 = $unsigned(wire2[(3'h6):(2'h2)]);
  always
    @(posedge clk) begin
      reg8 <= (wire1[(2'h3):(2'h2)] <<< wire2[(1'h1):(1'h1)]);
      reg9 <= {wire1[(3'h5):(3'h4)]};
    end
  module10 #() modinst21 (.wire13(reg9), .wire14(wire1), .clk(clk), .wire11(wire0), .y(wire20), .wire12(wire2));
  assign wire22 = wire1[(3'h5):(2'h2)];
  assign wire23 = $signed(wire22[(3'h4):(2'h3)]);
  assign wire24 = (((&{wire22}) > (8'h9d)) - reg8[(1'h0):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire14;
  input wire [(2'h3):(1'h0)] wire13;
  input wire [(3'h6):(1'h0)] wire12;
  input wire [(2'h2):(1'h0)] wire11;
  wire signed [(4'h9):(1'h0)] wire19;
  wire [(4'ha):(1'h0)] wire18;
  wire signed [(3'h5):(1'h0)] wire17;
  wire signed [(4'h9):(1'h0)] wire16;
  wire signed [(3'h4):(1'h0)] wire15;
  assign y = {wire19, wire18, wire17, wire16, wire15, (1'h0)};
  assign wire15 = (~^(8'h9f));
  assign wire16 = (((wire15 ? $unsigned(wire11) : $unsigned(wire12)) ?
                      ({wire13} ^ (wire13 ?
                          wire12 : wire15)) : wire13[(2'h2):(1'h1)]) >> $unsigned((wire11[(1'h0):(1'h0)] ?
                      (-wire13) : $unsigned((8'ha2)))));
  assign wire17 = wire13[(1'h0):(1'h0)];
  assign wire18 = wire15[(1'h0):(1'h0)];
  assign wire19 = (((|wire11) ?
                      (|$signed(wire15)) : wire12) >= $unsigned(((8'h9c) != wire13)));
endmodule