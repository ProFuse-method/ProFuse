(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'hca):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(2'h2):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire78;
  wire signed [(3'h7):(1'h0)] wire76;
  wire [(3'h6):(1'h0)] wire32;
  wire signed [(3'h6):(1'h0)] wire24;
  wire signed [(3'h5):(1'h0)] wire18;
  wire signed [(3'h7):(1'h0)] wire17;
  wire signed [(3'h5):(1'h0)] wire16;
  wire signed [(3'h5):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire4;
  reg [(4'ha):(1'h0)] reg31 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg [(4'h8):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg26 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg25 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg23 = (1'h0);
  reg [(2'h3):(1'h0)] reg22 = (1'h0);
  reg [(3'h4):(1'h0)] reg21 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg20 = (1'h0);
  reg [(4'hb):(1'h0)] reg19 = (1'h0);
  reg [(2'h3):(1'h0)] reg15 = (1'h0);
  reg [(4'hb):(1'h0)] reg14 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  reg [(4'ha):(1'h0)] reg10 = (1'h0);
  reg [(2'h3):(1'h0)] reg9 = (1'h0);
  reg [(2'h2):(1'h0)] reg8 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg6 = (1'h0);
  assign y = {wire78,
                 wire76,
                 wire32,
                 wire24,
                 wire18,
                 wire17,
                 wire16,
                 wire5,
                 wire4,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = $signed(wire3);
  assign wire5 = {({{wire2}} ? (|$unsigned(wire0)) : (~$signed(wire3)))};
  always
    @(posedge clk) begin
      if ($signed((~|wire5[(3'h5):(2'h2)])))
        begin
          reg6 <= wire1[(1'h1):(1'h1)];
          reg7 <= ($unsigned($unsigned((|(8'ha3)))) + (8'h9d));
        end
      else
        begin
          reg6 <= {reg6};
          if ($unsigned(wire5[(1'h1):(1'h1)]))
            begin
              reg7 <= $unsigned((wire4 <<< ($signed((8'hae)) ?
                  $unsigned(wire1) : ((8'ha1) | reg6))));
              reg8 <= wire1[(3'h6):(1'h0)];
            end
          else
            begin
              reg7 <= ((|reg8) ?
                  ($signed((+wire5)) <<< reg6) : (~&$unsigned((~&wire3))));
              reg8 <= ((^wire0) ?
                  wire0[(3'h4):(2'h2)] : (($signed(wire4) ?
                      (wire2 ?
                          (8'ha0) : wire4) : $signed(wire2)) * $unsigned((~^reg8))));
              reg9 <= ($unsigned(wire0) ?
                  ($unsigned((reg6 & wire5)) - ($unsigned(wire3) - wire3[(4'h8):(3'h5)])) : reg8);
            end
          reg10 <= ((~reg9) & (~wire2));
        end
      if ((({reg9[(2'h3):(1'h0)]} <= $unsigned((+reg10))) <= ($unsigned(wire4[(3'h4):(1'h0)]) * ((wire0 << (8'h9d)) >= (-reg9)))))
        begin
          reg11 <= (reg6[(1'h1):(1'h1)] < reg9[(2'h3):(1'h0)]);
          reg12 <= $unsigned(((^(reg9 ? wire0 : wire4)) ?
              ((wire5 ?
                  (8'hab) : (8'hae)) >> $unsigned((8'ha3))) : wire0[(3'h5):(3'h5)]));
        end
      else
        begin
          if ({(^$unsigned({(8'h9d)}))})
            begin
              reg11 <= $signed((($signed(reg7) >>> $unsigned(reg7)) ?
                  reg8[(1'h1):(1'h0)] : $unsigned(((8'ha8) ? wire1 : wire2))));
              reg12 <= (^$signed(((reg10 << wire3) ^~ $signed(reg9))));
              reg13 <= $signed($unsigned(reg9[(1'h1):(1'h1)]));
            end
          else
            begin
              reg11 <= {(^~$unsigned((reg8 + (8'h9f))))};
            end
          reg14 <= (~reg12);
          reg15 <= ($unsigned((reg13 && (wire1 ? (8'ha9) : reg9))) ?
              (8'ha4) : (wire5[(2'h3):(2'h3)] ?
                  ({wire1} ? (8'ha0) : $signed(reg11)) : (+reg8)));
        end
    end
  assign wire16 = (~&$signed(wire0));
  assign wire17 = wire3;
  assign wire18 = (~reg15);
  always
    @(posedge clk) begin
      if (wire1[(3'h4):(1'h1)])
        begin
          reg19 <= (reg8[(2'h2):(1'h1)] ?
              ($unsigned(wire5[(3'h4):(1'h0)]) >= $signed(reg14[(4'ha):(1'h0)])) : (wire18 < ((^~reg12) ?
                  (!reg6) : (^~wire2))));
          reg20 <= wire0[(3'h4):(3'h4)];
        end
      else
        begin
          reg19 <= wire1;
        end
      reg21 <= (^~(~&(^~(wire17 >> wire3))));
      if ((~^(~|{reg19[(3'h5):(3'h5)]})))
        begin
          reg22 <= $signed(((^~reg12[(2'h2):(1'h1)]) ?
              $signed({reg11}) : {(&(8'ha3))}));
          reg23 <= (~|wire18[(2'h3):(1'h0)]);
        end
      else
        begin
          reg22 <= reg8;
        end
    end
  assign wire24 = wire17[(3'h5):(1'h0)];
  always
    @(posedge clk) begin
      reg25 <= (^($unsigned(wire18[(3'h4):(1'h1)]) ? reg6 : reg11));
      if ((reg8 | wire0[(3'h7):(3'h5)]))
        begin
          reg26 <= (&$unsigned(wire24[(2'h2):(1'h1)]));
          reg27 <= {reg21};
        end
      else
        begin
          reg26 <= (reg27 <= $unsigned($unsigned({reg27})));
          if ((~&(reg25 + (reg9 >>> (~^wire16)))))
            begin
              reg27 <= {(((~&reg8) - (reg9 + wire0)) ?
                      $unsigned(reg26) : ($signed(reg14) ?
                          (+wire5) : wire17[(1'h0):(1'h0)]))};
            end
          else
            begin
              reg27 <= $signed(wire0[(4'h9):(3'h6)]);
            end
        end
      if (wire4[(1'h1):(1'h0)])
        begin
          reg28 <= $signed(reg25[(1'h1):(1'h0)]);
          reg29 <= reg10;
          if (wire16)
            begin
              reg30 <= $signed((wire18[(3'h5):(1'h1)] ?
                  reg20 : $signed({reg8})));
              reg31 <= $unsigned(wire17[(1'h1):(1'h0)]);
            end
          else
            begin
              reg30 <= (reg19 >> $signed($signed((+reg25))));
            end
        end
      else
        begin
          reg28 <= wire4;
          reg29 <= (^~reg8);
          reg30 <= reg19;
        end
    end
  assign wire32 = wire2;
  module33 #() modinst77 (.wire36(wire4), .y(wire76), .wire34(reg13), .clk(clk), .wire35(wire16), .wire37(reg9));
  assign wire78 = (~|$unsigned((~|(reg31 ? reg23 : wire16))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module33  (y, clk, wire37, wire36, wire35, wire34);
  output wire [(32'h8b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire37;
  input wire signed [(4'h8):(1'h0)] wire36;
  input wire signed [(2'h3):(1'h0)] wire35;
  input wire [(3'h5):(1'h0)] wire34;
  wire signed [(4'h9):(1'h0)] wire74;
  wire [(2'h3):(1'h0)] wire49;
  wire signed [(4'hb):(1'h0)] wire48;
  wire signed [(4'ha):(1'h0)] wire47;
  wire signed [(4'hb):(1'h0)] wire46;
  wire signed [(4'ha):(1'h0)] wire45;
  wire [(4'ha):(1'h0)] wire39;
  wire [(3'h6):(1'h0)] wire38;
  reg signed [(4'h9):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg54 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg53 = (1'h0);
  reg [(4'h9):(1'h0)] reg52 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg51 = (1'h0);
  reg [(4'h9):(1'h0)] reg50 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg44 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg43 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg42 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg41 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg40 = (1'h0);
  assign y = {wire74,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire39,
                 wire38,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 (1'h0)};
  assign wire38 = wire34[(2'h3):(2'h3)];
  assign wire39 = ($unsigned($signed({(8'hae)})) ?
                      wire36 : ((wire35 != wire38[(1'h1):(1'h1)]) ?
                          {((8'ha7) * wire35)} : wire37));
  always
    @(posedge clk) begin
      reg40 <= ({(&(~wire38))} + wire38[(3'h5):(1'h0)]);
      reg41 <= wire36;
      if ({$signed($unsigned((^~reg40)))})
        begin
          if ($signed((wire37[(1'h1):(1'h1)] ? {(~^wire35)} : wire38)))
            begin
              reg42 <= ($unsigned(($signed((8'ha2)) ?
                  wire34 : ((8'h9e) <<< wire36))) < (wire34 << $signed((reg40 | reg41))));
            end
          else
            begin
              reg42 <= ($signed((^~$signed(wire39))) ?
                  wire38[(1'h1):(1'h1)] : ($unsigned(wire37[(2'h2):(2'h2)]) * ($signed((8'ha2)) ^~ (wire35 ?
                      (8'h9f) : wire39))));
              reg43 <= ($unsigned({wire38[(1'h0):(1'h0)]}) <= $signed(((wire36 ?
                      reg40 : reg40) ?
                  reg41[(1'h1):(1'h0)] : $unsigned(wire38))));
              reg44 <= $unsigned((!wire36[(3'h6):(3'h6)]));
            end
        end
      else
        begin
          reg42 <= wire38;
        end
    end
  assign wire45 = reg42[(2'h3):(1'h0)];
  assign wire46 = (^~{{wire37[(2'h2):(2'h2)]}});
  assign wire47 = (wire39 ? (-reg40[(2'h3):(2'h2)]) : wire34[(3'h5):(1'h1)]);
  assign wire48 = (~wire35[(1'h1):(1'h0)]);
  assign wire49 = reg40;
  always
    @(posedge clk) begin
      reg50 <= ((((wire39 ? reg44 : wire48) ~^ (wire37 ? reg41 : wire49)) ?
          wire34[(2'h2):(1'h1)] : ((~^wire34) ?
              wire49 : wire36)) ^ wire35[(2'h2):(2'h2)]);
      reg51 <= reg50;
      reg52 <= {$unsigned(((reg51 == reg40) ?
              (wire39 ? wire39 : wire39) : (wire35 ~^ (8'haf))))};
    end
  always
    @(posedge clk) begin
      reg53 <= ((~wire37[(2'h2):(1'h0)]) ~^ {(((8'hae) & wire38) ?
              {(8'ha2)} : (8'ha2))});
      if ((reg41 & $unsigned((reg40[(4'ha):(4'ha)] << (wire48 ?
          wire38 : (8'ha3))))))
        begin
          reg54 <= $unsigned($signed(reg51[(1'h0):(1'h0)]));
          reg55 <= $unsigned(wire49);
        end
      else
        begin
          reg54 <= $signed((|reg42));
          reg55 <= wire34;
        end
    end
  module56 #() modinst75 (.clk(clk), .wire59(wire39), .y(wire74), .wire60(wire35), .wire57(wire38), .wire58(wire36));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module56  (y, clk, wire60, wire59, wire58, wire57);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire60;
  input wire signed [(4'h9):(1'h0)] wire59;
  input wire [(4'h8):(1'h0)] wire58;
  input wire [(3'h6):(1'h0)] wire57;
  wire signed [(4'hb):(1'h0)] wire67;
  wire [(3'h7):(1'h0)] wire66;
  wire [(3'h5):(1'h0)] wire65;
  wire [(3'h5):(1'h0)] wire64;
  wire signed [(3'h6):(1'h0)] wire63;
  reg [(4'h8):(1'h0)] reg73 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg72 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg71 = (1'h0);
  reg [(4'h8):(1'h0)] reg70 = (1'h0);
  reg [(3'h6):(1'h0)] reg69 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg62 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg61 = (1'h0);
  assign y = {wire67,
                 wire66,
                 wire65,
                 wire64,
                 wire63,
                 reg73,
                 reg72,
                 reg71,
                 reg70,
                 reg69,
                 reg68,
                 reg62,
                 reg61,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg61 <= $signed($unsigned((wire57[(3'h5):(3'h5)] > wire58[(3'h5):(2'h2)])));
    end
  always
    @(posedge clk) begin
      reg62 <= (wire57[(1'h0):(1'h0)] - ((((8'haf) | wire59) * wire57[(2'h3):(2'h2)]) < $signed((wire57 - wire60))));
    end
  assign wire63 = wire58;
  assign wire64 = reg61;
  assign wire65 = $signed((|(+$unsigned(reg61))));
  assign wire66 = wire59[(3'h7):(1'h1)];
  assign wire67 = $unsigned(wire64);
  always
    @(posedge clk) begin
      if (wire63[(2'h2):(1'h1)])
        begin
          if ((wire66 ?
              (wire63 >> wire64[(2'h3):(2'h3)]) : (~^((-wire64) & (wire63 ?
                  wire66 : reg62)))))
            begin
              reg68 <= reg61;
              reg69 <= $signed($signed(wire67[(3'h5):(3'h4)]));
            end
          else
            begin
              reg68 <= {(wire58[(3'h5):(3'h5)] >> ((wire65 ? wire57 : reg62) ?
                      (~^wire57) : (~|(8'ha5))))};
              reg69 <= (+$unsigned(($unsigned(wire60) << {reg68})));
            end
          if ($signed((reg62[(3'h5):(1'h0)] ?
              $signed($unsigned(wire63)) : ($unsigned(reg68) || (-wire60)))))
            begin
              reg70 <= wire57[(3'h6):(2'h3)];
              reg71 <= {(~^wire65[(3'h4):(3'h4)])};
            end
          else
            begin
              reg70 <= wire65[(2'h3):(2'h3)];
              reg71 <= (((&$signed((8'ha2))) ?
                  ((wire57 * wire66) ?
                      (~wire65) : (reg69 ? wire64 : wire59)) : ((reg71 ?
                          wire60 : wire60) ?
                      reg71 : wire65)) << $unsigned((reg61 ?
                  $signed(reg62) : (wire66 == reg61))));
              reg72 <= reg62;
            end
          reg73 <= ($unsigned(reg71) == reg71[(2'h2):(1'h0)]);
        end
      else
        begin
          reg68 <= ((({reg62} >= wire64[(1'h0):(1'h0)]) ?
              wire59[(3'h6):(3'h4)] : $signed((reg69 ~^ wire67))) >> $unsigned($unsigned((reg71 ?
              wire57 : wire60))));
          reg69 <= $signed($unsigned({((8'h9e) ? wire65 : (8'ha3))}));
          if ($signed(reg61[(3'h7):(2'h2)]))
            begin
              reg70 <= $signed(reg62[(2'h2):(2'h2)]);
              reg71 <= ({$unsigned((^reg73))} < ($signed($unsigned(wire66)) ?
                  wire67 : $unsigned((reg70 ^ reg69))));
            end
          else
            begin
              reg70 <= (~|($signed(wire57) <= (wire63 ? (8'ha1) : (~&reg73))));
              reg71 <= (-$signed((wire64[(1'h1):(1'h0)] ?
                  (^~reg72) : $signed(wire57))));
            end
        end
    end
endmodule