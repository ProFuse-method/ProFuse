(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(3'h5):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire53;
  wire signed [(2'h3):(1'h0)] wire51;
  wire signed [(4'hb):(1'h0)] wire50;
  wire [(4'hb):(1'h0)] wire49;
  wire signed [(3'h4):(1'h0)] wire48;
  wire [(3'h5):(1'h0)] wire46;
  wire signed [(3'h6):(1'h0)] wire6;
  wire signed [(3'h5):(1'h0)] wire5;
  wire signed [(3'h4):(1'h0)] wire4;
  assign y = {wire53,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire46,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = ({wire2[(2'h2):(2'h2)]} & (wire1 ?
                     wire1 : $signed((~&(8'ha2)))));
  assign wire5 = (8'hab);
  assign wire6 = wire4[(2'h2):(1'h0)];
  module7 #() modinst47 (.wire10(wire1), .wire11(wire4), .wire8(wire2), .y(wire46), .wire9(wire0), .clk(clk));
  assign wire48 = wire2[(3'h4):(3'h4)];
  assign wire49 = wire1[(4'h9):(3'h4)];
  assign wire50 = $signed(($unsigned($unsigned(wire6)) ?
                      (^$signed(wire3)) : $signed(wire49)));
  module7 #() modinst52 (wire51, clk, wire48, wire50, wire1, wire46);
  assign wire53 = (+{$unsigned($signed(wire51))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire11;
  input wire [(4'hb):(1'h0)] wire10;
  input wire signed [(3'h5):(1'h0)] wire9;
  input wire signed [(3'h4):(1'h0)] wire8;
  wire [(4'hb):(1'h0)] wire40;
  wire [(4'hb):(1'h0)] wire38;
  wire [(4'h9):(1'h0)] wire19;
  wire signed [(2'h2):(1'h0)] wire18;
  wire [(2'h2):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire16;
  wire signed [(3'h4):(1'h0)] wire15;
  wire [(3'h4):(1'h0)] wire14;
  wire [(2'h3):(1'h0)] wire13;
  wire signed [(3'h5):(1'h0)] wire12;
  reg [(2'h2):(1'h0)] reg45 = (1'h0);
  reg [(2'h2):(1'h0)] reg44 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg42 = (1'h0);
  reg [(3'h7):(1'h0)] reg41 = (1'h0);
  assign y = {wire40,
                 wire38,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 (1'h0)};
  assign wire12 = (|((!(^~wire8)) ? $signed($signed(wire11)) : (~|wire11)));
  assign wire13 = {{($signed(wire8) ? wire10 : $unsigned(wire9))}};
  assign wire14 = ((+(!(&wire10))) ^~ ((wire10 ?
                          (wire12 ? wire8 : wire9) : {wire12}) ?
                      $unsigned(wire13) : $unsigned(((8'hb0) ^ wire9))));
  assign wire15 = (wire9[(2'h2):(2'h2)] ?
                      $unsigned(((wire13 ^ wire14) ?
                          {wire10} : wire12)) : wire11);
  assign wire16 = $signed((~|wire12[(1'h1):(1'h1)]));
  assign wire17 = $unsigned(wire16);
  assign wire18 = wire9[(1'h0):(1'h0)];
  assign wire19 = wire14;
  module20 #() modinst39 (.clk(clk), .wire23(wire16), .y(wire38), .wire22(wire9), .wire24(wire15), .wire21(wire19));
  assign wire40 = wire18[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg41 <= $signed($signed((((8'ha4) ?
          wire16 : wire40) && $signed(wire40))));
      if ((((^(wire15 < wire40)) ? $signed((|wire11)) : $unsigned((~&wire14))) ?
          wire14 : (~^(&wire13[(2'h2):(1'h1)]))))
        begin
          reg42 <= $unsigned($unsigned(wire13));
          reg43 <= $signed(wire16);
          reg44 <= ($signed((|wire13)) <<< $unsigned($signed(wire10[(4'ha):(3'h6)])));
        end
      else
        begin
          reg42 <= {reg42[(1'h0):(1'h0)]};
        end
      reg45 <= ((wire15 != (-$unsigned(wire17))) ?
          ((reg44[(1'h0):(1'h0)] + {wire11}) || wire14[(1'h1):(1'h0)]) : $unsigned($signed(wire40[(4'h9):(3'h7)])));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20  (y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h58):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire24;
  input wire [(2'h2):(1'h0)] wire23;
  input wire [(3'h5):(1'h0)] wire22;
  input wire signed [(3'h4):(1'h0)] wire21;
  wire signed [(3'h6):(1'h0)] wire37;
  wire [(2'h3):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire35;
  wire [(4'h8):(1'h0)] wire34;
  wire [(2'h3):(1'h0)] wire33;
  wire signed [(3'h6):(1'h0)] wire32;
  wire signed [(4'hb):(1'h0)] wire29;
  wire [(3'h5):(1'h0)] wire28;
  wire signed [(3'h4):(1'h0)] wire27;
  reg signed [(3'h4):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg30 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg26 = (1'h0);
  reg [(4'ha):(1'h0)] reg25 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire29,
                 wire28,
                 wire27,
                 reg31,
                 reg30,
                 reg26,
                 reg25,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg25 <= ($signed(wire22[(1'h0):(1'h0)]) ?
          ((&(~|wire22)) ~^ $unsigned((wire22 ? wire21 : wire22))) : (8'ha5));
      reg26 <= wire23;
    end
  assign wire27 = reg26[(4'h9):(3'h4)];
  assign wire28 = $signed((!$unsigned(wire21)));
  assign wire29 = $signed((8'ha0));
  always
    @(posedge clk) begin
      reg30 <= wire22;
    end
  always
    @(posedge clk) begin
      reg31 <= $signed((&reg30));
    end
  assign wire32 = reg25;
  assign wire33 = $unsigned($unsigned(wire21[(1'h1):(1'h1)]));
  assign wire34 = (+$signed((!(reg31 && reg30))));
  assign wire35 = ((((^~reg26) | (wire32 >= wire21)) ?
                          wire23[(1'h1):(1'h1)] : $signed((^~wire23))) ?
                      wire22[(2'h2):(1'h1)] : {$unsigned((wire24 ^ reg30))});
  assign wire36 = reg31[(2'h3):(1'h0)];
  assign wire37 = wire24;
endmodule