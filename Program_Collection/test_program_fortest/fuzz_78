(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param67 = (~|(~&((8'ha8) ? ((8'hb0) ? (8'hab) : (8'ha7)) : ((8'ha9) ? (8'hae) : (8'ha1))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire0;
  input wire [(3'h6):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire3;
  wire signed [(4'h8):(1'h0)] wire66;
  wire [(4'ha):(1'h0)] wire62;
  wire signed [(3'h7):(1'h0)] wire4;
  wire [(3'h5):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire7;
  wire signed [(3'h4):(1'h0)] wire8;
  wire [(4'hb):(1'h0)] wire60;
  reg signed [(3'h7):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg64 = (1'h0);
  reg [(3'h6):(1'h0)] reg63 = (1'h0);
  reg [(3'h5):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg10 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg11 = (1'h0);
  assign y = {wire66,
                 wire62,
                 wire4,
                 wire5,
                 wire7,
                 wire8,
                 wire60,
                 reg65,
                 reg64,
                 reg63,
                 reg6,
                 reg9,
                 reg10,
                 reg11,
                 (1'h0)};
  assign wire4 = (8'ha3);
  assign wire5 = $unsigned((((~|wire0) ?
                     $signed((8'had)) : (wire0 <= wire3)) <= wire3));
  always
    @(posedge clk) begin
      reg6 <= ((~|wire4[(1'h0):(1'h0)]) && (wire3 >> (~&(wire1 ?
          wire3 : wire1))));
    end
  assign wire7 = {{(!$signed((8'ha9)))}};
  assign wire8 = wire2;
  always
    @(posedge clk) begin
      reg9 <= $signed({(~&{(8'h9d)})});
      if (wire5)
        begin
          reg10 <= $signed((|reg6[(1'h1):(1'h0)]));
        end
      else
        begin
          reg10 <= (~|(~wire4[(2'h2):(1'h1)]));
          reg11 <= (~^$signed($signed((wire8 && wire3))));
        end
    end
  module12 #() modinst61 (.clk(clk), .wire13(reg6), .wire14(reg11), .wire15(wire2), .wire16(reg10), .y(wire60));
  assign wire62 = $unsigned((8'hae));
  always
    @(posedge clk) begin
      reg63 <= wire8;
      reg64 <= (((~&((8'ha6) ? wire62 : (8'hb0))) ? {$signed(wire62)} : reg10) ?
          reg63[(3'h6):(2'h3)] : (8'ha7));
      reg65 <= reg9;
    end
  assign wire66 = (|reg63[(1'h1):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param59 = (8'h9e))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h42):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire16;
  input wire signed [(3'h7):(1'h0)] wire15;
  input wire signed [(4'h9):(1'h0)] wire14;
  input wire signed [(3'h5):(1'h0)] wire13;
  wire [(4'ha):(1'h0)] wire58;
  wire signed [(3'h4):(1'h0)] wire56;
  wire [(3'h7):(1'h0)] wire39;
  wire [(4'ha):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire19;
  wire signed [(3'h6):(1'h0)] wire18;
  wire signed [(4'ha):(1'h0)] wire17;
  assign y = {wire58,
                 wire56,
                 wire39,
                 wire38,
                 wire36,
                 wire19,
                 wire18,
                 wire17,
                 (1'h0)};
  assign wire17 = $signed($unsigned(($signed(wire15) + $unsigned(wire15))));
  assign wire18 = $unsigned((~|(!wire15[(1'h0):(1'h0)])));
  assign wire19 = wire17[(4'h8):(3'h4)];
  module20 #() modinst37 (.clk(clk), .wire21(wire17), .wire22(wire13), .wire23(wire14), .wire24(wire18), .y(wire36));
  assign wire38 = (wire15 < wire36[(1'h1):(1'h0)]);
  assign wire39 = $unsigned($signed((wire14[(1'h1):(1'h0)] ?
                      {wire16} : (8'ha7))));
  module40 #() modinst57 (.wire43(wire19), .y(wire56), .wire42(wire16), .wire44(wire14), .clk(clk), .wire41(wire17));
  assign wire58 = (wire39[(3'h6):(1'h1)] ?
                      $signed($signed((wire14 ?
                          wire16 : (8'hab)))) : ((-((8'ha4) + wire15)) ?
                          $unsigned((|(8'ha4))) : wire56));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module40  (y, clk, wire44, wire43, wire42, wire41);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire44;
  input wire [(4'hb):(1'h0)] wire43;
  input wire signed [(4'ha):(1'h0)] wire42;
  input wire [(2'h3):(1'h0)] wire41;
  wire [(4'hb):(1'h0)] wire54;
  wire [(2'h2):(1'h0)] wire53;
  wire [(4'ha):(1'h0)] wire52;
  wire [(3'h6):(1'h0)] wire51;
  wire signed [(3'h4):(1'h0)] wire50;
  wire [(3'h7):(1'h0)] wire49;
  wire [(4'h8):(1'h0)] wire48;
  wire [(3'h7):(1'h0)] wire47;
  wire [(3'h4):(1'h0)] wire45;
  reg signed [(4'hb):(1'h0)] reg55 = (1'h0);
  reg [(3'h5):(1'h0)] reg46 = (1'h0);
  assign y = {wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire45,
                 reg55,
                 reg46,
                 (1'h0)};
  assign wire45 = (+wire41);
  always
    @(posedge clk) begin
      reg46 <= {$unsigned(wire44[(2'h2):(1'h0)])};
    end
  assign wire47 = $signed($signed($signed((!reg46))));
  assign wire48 = wire47[(3'h7):(1'h1)];
  assign wire49 = wire48[(1'h0):(1'h0)];
  assign wire50 = wire47[(2'h3):(2'h3)];
  assign wire51 = wire44;
  assign wire52 = ($unsigned(($signed(wire47) | (wire41 ? wire45 : wire41))) ?
                      (!($unsigned(wire47) * $unsigned(wire41))) : wire42);
  assign wire53 = ($signed((wire50[(3'h4):(1'h0)] || wire44)) ~^ (wire48 >> $signed((~wire48))));
  assign wire54 = ((-(-wire53)) + (~&wire51[(1'h0):(1'h0)]));
  always
    @(posedge clk) begin
      reg55 <= wire54;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param35 = (((((8'ha0) >= (8'ha5)) ? (!(8'ha8)) : (~^(8'hab))) || (8'h9c)) ? (&(~&(8'haa))) : (!((|(8'ha0)) ? (8'ha8) : {(8'hab)}))))
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire24;
  input wire [(3'h5):(1'h0)] wire23;
  input wire signed [(2'h2):(1'h0)] wire22;
  input wire [(3'h4):(1'h0)] wire21;
  wire signed [(2'h2):(1'h0)] wire34;
  wire signed [(4'hb):(1'h0)] wire33;
  wire [(3'h7):(1'h0)] wire32;
  wire [(3'h6):(1'h0)] wire31;
  wire [(2'h2):(1'h0)] wire30;
  wire [(4'ha):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire25;
  reg signed [(4'hb):(1'h0)] reg29 = (1'h0);
  assign y = {wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 reg29,
                 (1'h0)};
  assign wire25 = (|(^~((!wire23) ? wire24 : (wire22 >>> wire23))));
  assign wire26 = $signed($signed((-(~&wire25))));
  assign wire27 = (((wire24[(3'h4):(2'h3)] >>> wire24) ?
                          $signed(wire24[(3'h6):(1'h1)]) : $unsigned(wire26)) ?
                      (wire22[(1'h0):(1'h0)] ^ (wire24[(1'h0):(1'h0)] ?
                          (+(8'hab)) : $signed((8'h9f)))) : (-wire24));
  assign wire28 = wire27;
  always
    @(posedge clk) begin
      reg29 <= $unsigned((((~wire23) >= wire27[(3'h4):(2'h3)]) ?
          (^~wire21[(3'h4):(2'h2)]) : wire28));
    end
  assign wire30 = wire22[(2'h2):(1'h0)];
  assign wire31 = $signed((~^$signed(wire24)));
  assign wire32 = $unsigned($signed($unsigned((wire27 > wire26))));
  assign wire33 = $unsigned((!((8'ha7) ?
                      wire26[(3'h7):(3'h4)] : $signed(wire21))));
  assign wire34 = wire26;
endmodule