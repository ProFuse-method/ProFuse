(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param59 = ((&(^~(^(8'ha8)))) ? {(((8'had) > (8'h9f)) ~^ (|(8'h9f)))} : ({((8'ha5) ? (8'h9d) : (8'ha5))} ? (((8'ha8) ? (8'ha6) : (8'ha7)) != ((8'h9d) >>> (8'ha2))) : ((!(8'ha1)) ? {(8'h9f)} : (~&(8'ha1))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire58;
  wire [(3'h6):(1'h0)] wire57;
  wire signed [(3'h7):(1'h0)] wire56;
  wire signed [(3'h5):(1'h0)] wire55;
  wire [(3'h4):(1'h0)] wire53;
  assign y = {wire58, wire57, wire56, wire55, wire53, (1'h0)};
  module4 #() modinst54 (.wire7(wire2), .wire8(wire1), .clk(clk), .y(wire53), .wire6(wire0), .wire5(wire3));
  assign wire55 = wire53;
  assign wire56 = ($unsigned($signed($signed(wire1))) ?
                      ((~^((8'haa) <<< (8'ha0))) >= ((wire2 >> wire55) >> (&wire55))) : (((~|wire53) ?
                          ((8'ha5) >>> wire55) : wire53) >= ((^wire3) != (&wire53))));
  assign wire57 = ((wire53[(1'h1):(1'h1)] ?
                      ($unsigned(wire3) ?
                          (^(8'ha4)) : ((8'ha6) * (8'hae))) : {(wire0 ?
                              (8'ha6) : wire55)}) == wire2[(3'h7):(3'h7)]);
  assign wire58 = (|$unsigned($signed((wire56 || wire0))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'haa):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire8;
  input wire signed [(3'h5):(1'h0)] wire7;
  input wire signed [(4'h9):(1'h0)] wire6;
  input wire [(3'h6):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire41;
  wire signed [(3'h6):(1'h0)] wire40;
  wire signed [(4'h8):(1'h0)] wire39;
  wire [(2'h3):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire14;
  wire [(4'h8):(1'h0)] wire13;
  wire signed [(4'h9):(1'h0)] wire12;
  wire [(4'ha):(1'h0)] wire11;
  wire signed [(2'h3):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire9;
  reg [(3'h4):(1'h0)] reg52 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg51 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg50 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg49 = (1'h0);
  reg [(4'h9):(1'h0)] reg48 = (1'h0);
  reg [(3'h5):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg44 = (1'h0);
  reg [(3'h7):(1'h0)] reg43 = (1'h0);
  reg [(3'h4):(1'h0)] reg42 = (1'h0);
  reg [(4'h8):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg37 = (1'h0);
  reg [(3'h6):(1'h0)] reg36 = (1'h0);
  reg [(4'h8):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg34 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg33 = (1'h0);
  assign y = {wire41,
                 wire40,
                 wire39,
                 wire31,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 (1'h0)};
  assign wire9 = {($signed($signed(wire5)) - ((|wire5) ?
                         wire6[(2'h3):(1'h1)] : wire6))};
  assign wire10 = (8'h9e);
  assign wire11 = $unsigned(wire10);
  assign wire12 = (-($unsigned((wire7 ? wire6 : wire6)) ? wire11 : wire8));
  assign wire13 = wire5;
  assign wire14 = (^$signed(((wire5 == wire13) ?
                      (wire9 ? wire10 : wire7) : (wire12 ? wire13 : wire5))));
  module15 #() modinst32 (wire31, clk, wire8, wire11, wire14, wire12);
  always
    @(posedge clk) begin
      reg33 <= $unsigned($signed((^((8'haa) ^ wire12))));
      if ($signed((!$signed((wire12 ? wire13 : wire8)))))
        begin
          reg34 <= $signed(wire10[(1'h0):(1'h0)]);
        end
      else
        begin
          reg34 <= ($unsigned(wire12[(4'h9):(3'h4)]) ~^ (((~&wire31) & wire31[(2'h3):(2'h2)]) >= (8'ha8)));
          reg35 <= $unsigned($unsigned(wire6[(3'h5):(1'h1)]));
          if ($signed(wire5))
            begin
              reg36 <= $signed(reg35[(1'h1):(1'h1)]);
              reg37 <= wire8;
              reg38 <= (wire12[(1'h1):(1'h1)] ?
                  $unsigned(wire8[(2'h2):(1'h1)]) : (wire11 ?
                      $signed(wire8[(2'h3):(1'h1)]) : ((reg33 ?
                              wire14 : (8'ha1)) ?
                          wire11 : $unsigned((8'hb0)))));
            end
          else
            begin
              reg36 <= (&(|(!$unsigned(reg34))));
              reg37 <= wire14;
              reg38 <= (~(-$unsigned(((8'h9e) - wire13))));
            end
        end
    end
  assign wire39 = (reg34[(2'h3):(2'h3)] + (wire14[(2'h3):(2'h2)] && wire31[(1'h0):(1'h0)]));
  assign wire40 = reg33;
  assign wire41 = wire8;
  always
    @(posedge clk) begin
      reg42 <= wire41[(2'h3):(1'h1)];
      reg43 <= $unsigned((+$signed((reg36 ? wire41 : wire31))));
      reg44 <= $signed((-wire40[(3'h5):(2'h3)]));
    end
  always
    @(posedge clk) begin
      if ($signed((~&$signed($unsigned((8'h9d))))))
        begin
          reg45 <= $signed((-wire6));
          reg46 <= (^$signed(($unsigned(wire41) <= ((8'ha3) ?
              wire13 : (8'h9e)))));
          if ($unsigned((~|(|reg34))))
            begin
              reg47 <= wire7;
              reg48 <= reg33;
              reg49 <= (|{wire10});
            end
          else
            begin
              reg47 <= $unsigned($signed(($unsigned(reg45) <<< $signed((8'ha0)))));
            end
        end
      else
        begin
          reg45 <= (wire41 && (8'ha9));
        end
      if ($unsigned({(reg47 >> wire12[(1'h0):(1'h0)])}))
        begin
          reg50 <= $unsigned(wire6[(3'h6):(3'h4)]);
          reg51 <= (wire41[(2'h3):(1'h0)] && $unsigned(wire11));
          reg52 <= $signed($unsigned((~^wire41)));
        end
      else
        begin
          reg50 <= (((~|((8'h9e) ^ reg47)) != $signed(reg51)) ?
              $signed((reg34 ?
                  ((8'ha9) ? wire39 : wire12) : (wire9 ?
                      wire41 : wire11))) : $unsigned(reg34));
          reg51 <= ((~&(+(~&wire39))) ?
              (({reg34} - (reg37 >>> (8'h9c))) ?
                  $unsigned((!reg46)) : (wire31[(1'h0):(1'h0)] ?
                      $signed(wire14) : reg50)) : ($signed($signed(reg35)) ?
                  {$signed(wire13)} : ((reg50 ? (8'hac) : wire13) ?
                      $unsigned(reg45) : (wire41 | wire14))));
          reg52 <= (reg43[(3'h5):(3'h5)] ?
              ($signed(reg42[(3'h4):(2'h3)]) + {(reg43 ?
                      wire11 : wire10)}) : {$signed((reg48 ? reg48 : wire40))});
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param30 = {(({(8'ha9)} == (^(8'hb0))) >>> (!((8'ha2) ? (8'hb0) : (8'h9e))))})
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire19;
  input wire [(4'ha):(1'h0)] wire18;
  input wire signed [(3'h6):(1'h0)] wire17;
  input wire [(4'h9):(1'h0)] wire16;
  wire signed [(3'h4):(1'h0)] wire22;
  wire signed [(3'h6):(1'h0)] wire21;
  wire [(4'hb):(1'h0)] wire20;
  reg [(4'hb):(1'h0)] reg29 = (1'h0);
  reg [(4'h8):(1'h0)] reg28 = (1'h0);
  reg [(4'h8):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg26 = (1'h0);
  reg [(3'h4):(1'h0)] reg25 = (1'h0);
  reg [(3'h6):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg23 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire20,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 (1'h0)};
  assign wire20 = {({{wire17}} || {wire19[(2'h3):(2'h3)]})};
  assign wire21 = (~(~|$signed($signed(wire17))));
  assign wire22 = $signed(($signed(wire20[(3'h6):(1'h1)]) ? wire19 : wire17));
  always
    @(posedge clk) begin
      reg23 <= {wire17};
      reg24 <= $signed((~&(wire19 ? wire16[(2'h2):(1'h1)] : $signed(wire19))));
    end
  always
    @(posedge clk) begin
      if ((((wire16[(3'h6):(2'h3)] ? (-wire19) : {wire16}) ?
          reg24 : (~&(~&(8'ha2)))) + wire21[(3'h6):(2'h2)]))
        begin
          reg25 <= ((^~{$unsigned(wire22)}) ?
              $signed({reg23}) : ((wire17[(2'h2):(1'h1)] > (wire21 >>> (8'haa))) ^ (~&(wire19 ?
                  reg23 : wire18))));
        end
      else
        begin
          reg25 <= (|wire17);
          reg26 <= (($signed((~wire22)) ?
              {$signed((8'ha2))} : wire18) <<< (~|((reg25 ?
              wire18 : wire22) - (&wire20))));
          if ($signed(reg23[(1'h1):(1'h1)]))
            begin
              reg27 <= $unsigned(($unsigned($unsigned(wire16)) ?
                  {(&wire16)} : wire22[(1'h0):(1'h0)]));
              reg28 <= (^reg24);
              reg29 <= $unsigned($signed(wire17[(3'h6):(3'h4)]));
            end
          else
            begin
              reg27 <= $signed({((reg25 ? reg24 : reg29) >= $signed(reg24))});
              reg28 <= wire22;
              reg29 <= (wire20 | reg28);
            end
        end
    end
endmodule