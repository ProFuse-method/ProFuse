(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param20 = (((((8'ha7) ? (8'hb0) : (8'hac)) ? ((8'ha6) ^ (8'ha7)) : ((8'haa) ? (8'ha9) : (8'hab))) ? (+((8'ha7) ? (8'hb0) : (8'haa))) : (((8'ha4) < (8'ha8)) ? {(8'h9c)} : ((8'ha3) ? (8'hb0) : (8'ha4)))) ? (~(+((8'hae) < (8'ha9)))) : ({((8'h9e) + (8'hae))} ? ((^(8'ha8)) * {(8'ha0)}) : ({(8'ha1)} & ((8'haa) ? (8'ha0) : (8'hab))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h6d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire [(2'h3):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire19;
  wire [(4'ha):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire17;
  wire [(4'ha):(1'h0)] wire16;
  wire [(4'hb):(1'h0)] wire10;
  wire signed [(4'hb):(1'h0)] wire9;
  wire signed [(2'h2):(1'h0)] wire8;
  wire [(4'h8):(1'h0)] wire7;
  wire [(3'h6):(1'h0)] wire6;
  reg [(2'h3):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg14 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg13 = (1'h0);
  reg [(3'h4):(1'h0)] reg12 = (1'h0);
  reg [(3'h7):(1'h0)] reg11 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg5 = (1'h0);
  reg [(3'h7):(1'h0)] reg4 = (1'h0);
  assign y = {wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= (({(^wire0)} ?
          (8'ha7) : wire0[(1'h0):(1'h0)]) >> wire0[(1'h0):(1'h0)]);
      reg5 <= ($unsigned($signed((reg4 - wire1))) ?
          $signed(wire2[(1'h1):(1'h1)]) : $unsigned((((8'had) ? wire2 : reg4) ?
              ((8'h9c) ? reg4 : wire2) : reg4[(1'h0):(1'h0)])));
    end
  assign wire6 = ($unsigned(reg4) ? wire3 : $signed(wire1));
  assign wire7 = wire0[(1'h1):(1'h0)];
  assign wire8 = (($unsigned($signed(wire1)) ? reg5 : wire3[(2'h3):(1'h0)]) ?
                     wire2 : (wire6[(2'h2):(2'h2)] ?
                         reg4[(1'h0):(1'h0)] : (+reg5[(2'h2):(1'h0)])));
  assign wire9 = {$unsigned(wire2[(1'h1):(1'h1)])};
  assign wire10 = ($signed(($signed(wire6) == (wire6 <= wire9))) | ((~|(wire3 ?
                      wire0 : wire8)) < $signed((wire6 < wire0))));
  always
    @(posedge clk) begin
      reg11 <= ((~wire3) ?
          ($signed((wire3 ? (8'hb0) : wire9)) ?
              $signed((~&(8'h9f))) : (((8'h9f) ? wire2 : wire0) ?
                  (wire7 - wire0) : (wire1 ? wire0 : (8'ha7)))) : reg4);
      reg12 <= ({$unsigned(reg5)} ?
          $signed($unsigned(wire1)) : wire6[(1'h0):(1'h0)]);
    end
  always
    @(posedge clk) begin
      reg13 <= wire10[(1'h0):(1'h0)];
      reg14 <= reg5[(2'h2):(2'h2)];
      reg15 <= $signed(((wire7[(3'h5):(2'h2)] ?
          {wire8} : (wire2 ? wire9 : wire3)) * (!$signed(wire10))));
    end
  assign wire16 = reg12[(2'h2):(1'h1)];
  assign wire17 = reg12;
  assign wire18 = $unsigned(wire1);
  assign wire19 = $signed(wire17[(1'h1):(1'h1)]);
endmodule