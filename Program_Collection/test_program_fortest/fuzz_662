(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param76 = (~|((((8'ha1) ^ (8'hae)) >> (&(8'ha7))) ? ((&(8'ha5)) ? ((8'had) ? (8'ha0) : (8'hb0)) : ((8'hab) || (8'hab))) : (((8'hae) ? (8'ha7) : (8'haf)) << ((8'ha7) ? (8'ha1) : (8'ha8))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire73;
  wire signed [(3'h7):(1'h0)] wire72;
  wire [(4'ha):(1'h0)] wire71;
  wire signed [(4'ha):(1'h0)] wire70;
  wire signed [(2'h3):(1'h0)] wire69;
  wire [(4'h8):(1'h0)] wire68;
  wire signed [(4'hb):(1'h0)] wire67;
  wire [(4'h8):(1'h0)] wire66;
  wire [(3'h7):(1'h0)] wire65;
  wire [(3'h4):(1'h0)] wire62;
  wire signed [(3'h7):(1'h0)] wire4;
  reg [(4'h9):(1'h0)] reg75 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg74 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg64 = (1'h0);
  assign y = {wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire62,
                 wire4,
                 reg75,
                 reg74,
                 reg64,
                 (1'h0)};
  assign wire4 = (wire3[(1'h1):(1'h0)] ?
                     wire1[(1'h0):(1'h0)] : $unsigned((!wire2[(1'h1):(1'h0)])));
  module5 #() modinst63 (wire62, clk, wire2, wire0, wire1, wire3);
  always
    @(posedge clk) begin
      reg64 <= $unsigned(((wire2 ?
          $unsigned(wire62) : ((8'ha3) <<< wire1)) * ($unsigned(wire0) ?
          wire1 : (wire2 | wire62))));
    end
  assign wire65 = $signed($unsigned($unsigned($signed(wire2))));
  assign wire66 = $signed(((~^$unsigned(wire1)) * {(~&wire65)}));
  assign wire67 = ({({(8'ha9)} ? wire4 : $signed(wire62))} ?
                      $signed(($signed(wire0) >> (-wire2))) : {$signed($signed(wire1))});
  assign wire68 = $unsigned((((8'ha0) ? wire67 : (8'hae)) ?
                      wire0[(4'ha):(1'h1)] : (&$signed((8'ha1)))));
  assign wire69 = $unsigned($unsigned(wire0[(2'h3):(2'h3)]));
  assign wire70 = ((+reg64) > (&$unsigned((wire0 ? wire67 : wire1))));
  assign wire71 = ($signed(($unsigned(wire69) ?
                      {wire4} : $unsigned(wire69))) <= (~^wire67[(2'h2):(1'h1)]));
  assign wire72 = wire70;
  assign wire73 = $signed($unsigned(wire71[(4'h9):(1'h0)]));
  always
    @(posedge clk) begin
      reg74 <= $unsigned($signed(wire4[(3'h4):(3'h4)]));
      reg75 <= (wire70 ^ (((~|wire70) - (wire71 << wire72)) != (^((8'haf) != wire4))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param61 = (+(^~(+((8'h9d) ? (8'ha1) : (8'ha3))))))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h3d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire9;
  input wire [(4'ha):(1'h0)] wire8;
  input wire [(3'h6):(1'h0)] wire7;
  input wire signed [(4'hb):(1'h0)] wire6;
  wire [(2'h3):(1'h0)] wire57;
  wire [(4'ha):(1'h0)] wire55;
  wire [(3'h5):(1'h0)] wire54;
  wire signed [(4'h8):(1'h0)] wire53;
  wire signed [(3'h4):(1'h0)] wire51;
  wire signed [(2'h2):(1'h0)] wire32;
  wire [(4'ha):(1'h0)] wire10;
  reg [(2'h3):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg59 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg58 = (1'h0);
  reg [(4'h8):(1'h0)] reg56 = (1'h0);
  assign y = {wire57,
                 wire55,
                 wire54,
                 wire53,
                 wire51,
                 wire32,
                 wire10,
                 reg60,
                 reg59,
                 reg58,
                 reg56,
                 (1'h0)};
  assign wire10 = wire9;
  module11 #() modinst33 (.wire15(wire9), .clk(clk), .wire14(wire7), .wire13(wire8), .y(wire32), .wire12(wire6));
  module34 #() modinst52 (wire51, clk, wire7, wire8, wire6, wire9);
  assign wire53 = wire32;
  assign wire54 = ($unsigned((~|(wire7 ? wire51 : wire51))) ?
                      ((wire7 ? (^wire6) : ((8'ha9) >> wire10)) ?
                          wire6 : wire6[(3'h6):(2'h2)]) : ($signed($signed(wire8)) ^ $unsigned((wire10 || wire8))));
  assign wire55 = wire7;
  always
    @(posedge clk) begin
      reg56 <= {wire9};
    end
  assign wire57 = (^~wire6);
  always
    @(posedge clk) begin
      reg58 <= $signed(wire6[(4'ha):(1'h1)]);
      reg59 <= reg58[(2'h3):(2'h3)];
      reg60 <= $unsigned(($unsigned($signed(wire53)) ?
          (~^wire53[(1'h1):(1'h0)]) : wire10));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34
#(parameter param50 = (&((+((8'haf) ? (8'had) : (8'ha0))) ? (8'ha8) : (~((8'hac) ? (8'h9e) : (8'ha0))))))
(y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire38;
  input wire [(4'ha):(1'h0)] wire37;
  input wire [(3'h7):(1'h0)] wire36;
  input wire signed [(3'h5):(1'h0)] wire35;
  wire [(3'h6):(1'h0)] wire49;
  wire signed [(4'h8):(1'h0)] wire41;
  wire [(3'h7):(1'h0)] wire40;
  wire signed [(4'h8):(1'h0)] wire39;
  reg signed [(2'h2):(1'h0)] reg48 = (1'h0);
  reg [(4'h9):(1'h0)] reg47 = (1'h0);
  reg [(4'hb):(1'h0)] reg46 = (1'h0);
  reg [(3'h5):(1'h0)] reg45 = (1'h0);
  reg [(4'h8):(1'h0)] reg44 = (1'h0);
  reg [(3'h5):(1'h0)] reg43 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg42 = (1'h0);
  assign y = {wire49,
                 wire41,
                 wire40,
                 wire39,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 (1'h0)};
  assign wire39 = wire38;
  assign wire40 = {(wire36[(3'h7):(1'h1)] ?
                          wire37[(4'h8):(3'h7)] : $signed($signed(wire36)))};
  assign wire41 = $unsigned($signed($signed({wire39})));
  always
    @(posedge clk) begin
      reg42 <= (^~wire39);
      reg43 <= ((((wire35 ? (8'h9c) : wire35) || $unsigned(wire36)) ?
              reg42[(3'h6):(1'h0)] : wire41) ?
          $signed((~$unsigned(reg42))) : ($unsigned($unsigned(wire38)) ?
              wire36 : wire41[(1'h0):(1'h0)]));
    end
  always
    @(posedge clk) begin
      reg44 <= wire39;
      if ((~(^((wire40 ? reg44 : (8'ha1)) ? {wire41} : wire37[(3'h7):(3'h6)]))))
        begin
          reg45 <= ((((wire38 ? wire39 : wire40) < $unsigned(reg43)) ?
                  (wire35[(3'h5):(3'h4)] ?
                      ((8'hab) != wire35) : (reg44 ?
                          reg44 : reg44)) : $signed($unsigned(reg43))) ?
              $signed(((wire41 ? wire39 : wire40) ?
                  reg42 : (!reg42))) : (8'haf));
          reg46 <= $unsigned($unsigned({(^~wire38)}));
          reg47 <= reg44[(4'h8):(1'h0)];
        end
      else
        begin
          reg45 <= $unsigned(reg46[(3'h5):(1'h1)]);
        end
      reg48 <= ((((wire39 >= wire41) ? {reg42} : $unsigned(wire41)) ?
              $signed(wire39[(3'h5):(1'h1)]) : $unsigned($signed(wire40))) ?
          (+wire36[(3'h4):(2'h2)]) : (reg43 ?
              ((~wire36) ^~ (wire41 ?
                  wire40 : wire38)) : $unsigned((reg43 >>> reg43))));
    end
  assign wire49 = ($signed(reg45[(3'h5):(2'h2)]) ?
                      wire37 : $signed($signed($unsigned(wire40))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire15;
  input wire signed [(2'h3):(1'h0)] wire14;
  input wire signed [(4'h9):(1'h0)] wire13;
  input wire [(4'hb):(1'h0)] wire12;
  wire [(3'h6):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire28;
  wire signed [(2'h2):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire24;
  wire [(4'ha):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire22;
  wire signed [(3'h6):(1'h0)] wire16;
  reg [(2'h3):(1'h0)] reg30 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg26 = (1'h0);
  reg [(2'h3):(1'h0)] reg25 = (1'h0);
  reg [(4'hb):(1'h0)] reg21 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg19 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg18 = (1'h0);
  reg [(3'h5):(1'h0)] reg17 = (1'h0);
  assign y = {wire31,
                 wire29,
                 wire28,
                 wire27,
                 wire24,
                 wire23,
                 wire22,
                 wire16,
                 reg30,
                 reg26,
                 reg25,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 (1'h0)};
  assign wire16 = (~(wire14[(1'h0):(1'h0)] + $signed((wire14 ?
                      wire13 : wire13))));
  always
    @(posedge clk) begin
      if (wire16[(1'h0):(1'h0)])
        begin
          reg17 <= (~&$unsigned(wire12[(1'h0):(1'h0)]));
          if (((8'ha1) ?
              wire14 : (reg17 ?
                  $signed((+wire15)) : $signed(wire14[(2'h2):(1'h0)]))))
            begin
              reg18 <= (wire16[(2'h2):(1'h1)] ?
                  ((+wire12[(3'h4):(1'h1)]) ?
                      wire16[(1'h1):(1'h0)] : $unsigned(wire13)) : wire14[(1'h0):(1'h0)]);
              reg19 <= $unsigned(((wire12 ?
                  $signed(reg17) : $unsigned(wire14)) < reg18));
            end
          else
            begin
              reg18 <= $unsigned(wire16[(1'h0):(1'h0)]);
              reg19 <= $signed(($signed(reg19) ?
                  $unsigned(((8'hab) ? reg18 : wire13)) : {(|wire14)}));
            end
          reg20 <= $signed($unsigned(((wire12 ? wire16 : wire15) ?
              wire14[(2'h3):(2'h3)] : (wire15 > wire13))));
        end
      else
        begin
          reg17 <= ((-wire16[(2'h2):(1'h0)]) + reg17);
          reg18 <= $unsigned({(~&{reg17})});
          if (($unsigned({$signed(wire12)}) < $unsigned(($unsigned(wire16) < wire16[(2'h3):(2'h3)]))))
            begin
              reg19 <= $signed($unsigned(((reg20 ~^ reg19) ?
                  (8'ha0) : reg19[(2'h3):(2'h2)])));
              reg20 <= (^reg17);
            end
          else
            begin
              reg19 <= $unsigned(wire15);
              reg20 <= wire14[(2'h2):(1'h0)];
              reg21 <= $signed((8'hab));
            end
        end
    end
  assign wire22 = wire13;
  assign wire23 = reg18;
  assign wire24 = wire16[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg25 <= (+{$unsigned((wire15 ? wire22 : wire24))});
      reg26 <= (^~(($signed((8'ha9)) + $signed(reg20)) ?
          wire15 : {wire13[(1'h1):(1'h1)]}));
    end
  assign wire27 = $signed({((wire15 * reg25) >>> (~wire16))});
  assign wire28 = (({$signed(wire23)} ?
                          ($unsigned(wire13) ?
                              (reg26 ?
                                  wire14 : reg21) : $unsigned(reg20)) : ((reg21 < wire13) ?
                              wire22 : {wire24})) ?
                      (reg19[(2'h3):(2'h2)] && $unsigned($unsigned(wire22))) : (reg21 & $signed($unsigned((8'ha9)))));
  assign wire29 = ($unsigned((reg26 ? (+reg20) : $signed(reg21))) ?
                      reg20 : (~|$unsigned(((8'ha2) ? reg18 : wire22))));
  always
    @(posedge clk) begin
      reg30 <= (~((!wire16) >> $unsigned((reg26 ? wire27 : (8'h9e)))));
    end
  assign wire31 = $unsigned((~$signed((~|wire16))));
endmodule