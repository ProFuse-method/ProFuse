(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param37 = (~{((|(8'ha4)) ^~ {(8'hb0)})}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h6d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire [(2'h2):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(3'h4):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire36;
  wire [(3'h6):(1'h0)] wire33;
  wire signed [(3'h6):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire31;
  wire signed [(4'h9):(1'h0)] wire30;
  wire signed [(3'h5):(1'h0)] wire29;
  wire [(4'h9):(1'h0)] wire28;
  wire signed [(3'h7):(1'h0)] wire27;
  wire signed [(3'h4):(1'h0)] wire26;
  wire [(4'hb):(1'h0)] wire24;
  wire [(3'h7):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  reg signed [(3'h6):(1'h0)] reg35 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg34 = (1'h0);
  assign y = {wire36,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire24,
                 wire5,
                 wire4,
                 reg35,
                 reg34,
                 (1'h0)};
  assign wire4 = ($unsigned(($signed(wire3) ~^ $signed(wire0))) & (^~wire3));
  assign wire5 = $unsigned({wire3[(3'h5):(1'h0)]});
  module6 #() modinst25 (.wire8(wire0), .wire9(wire5), .y(wire24), .clk(clk), .wire7(wire1), .wire10(wire4));
  assign wire26 = wire4;
  assign wire27 = {($signed($signed(wire4)) ~^ {$unsigned(wire3)})};
  assign wire28 = (((!$unsigned(wire2)) ?
                          (wire2[(1'h1):(1'h0)] ?
                              ((8'ha4) ?
                                  (8'ha0) : wire4) : (wire27 >>> wire3)) : $unsigned(wire26[(1'h1):(1'h1)])) ?
                      wire1[(1'h1):(1'h1)] : {wire3[(4'h8):(4'h8)]});
  assign wire29 = (^$signed(((wire27 <= wire26) >>> (~&wire28))));
  assign wire30 = (^~$unsigned(wire28));
  assign wire31 = (8'ha5);
  assign wire32 = $signed((8'had));
  assign wire33 = wire31;
  always
    @(posedge clk) begin
      reg34 <= wire4;
      reg35 <= $unsigned(wire3);
    end
  assign wire36 = $unsigned((^~wire30));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param23 = {({{(8'ha0)}} > {(~|(8'hab))})})
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire signed [(2'h3):(1'h0)] wire9;
  input wire [(2'h2):(1'h0)] wire8;
  input wire [(4'h8):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire22;
  wire signed [(3'h4):(1'h0)] wire19;
  wire signed [(4'ha):(1'h0)] wire15;
  wire signed [(3'h4):(1'h0)] wire14;
  wire signed [(3'h5):(1'h0)] wire13;
  wire signed [(4'h9):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire11;
  reg signed [(3'h6):(1'h0)] reg21 = (1'h0);
  reg [(4'hb):(1'h0)] reg20 = (1'h0);
  reg [(3'h5):(1'h0)] reg18 = (1'h0);
  reg [(3'h5):(1'h0)] reg17 = (1'h0);
  reg [(2'h3):(1'h0)] reg16 = (1'h0);
  assign y = {wire22,
                 wire19,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 reg21,
                 reg20,
                 reg18,
                 reg17,
                 reg16,
                 (1'h0)};
  assign wire11 = (+wire8);
  assign wire12 = $signed($signed((~^$signed(wire11))));
  assign wire13 = $signed(wire7);
  assign wire14 = (~|wire10);
  assign wire15 = ((~|((wire13 >>> wire13) ? (wire8 * wire7) : wire8)) ?
                      $unsigned(($signed((8'hb0)) ?
                          $signed(wire10) : (8'hac))) : ($unsigned($unsigned(wire13)) ?
                          (&wire11) : wire8[(2'h2):(2'h2)]));
  always
    @(posedge clk) begin
      reg16 <= wire14[(2'h2):(1'h1)];
      if ($signed($signed(wire7)))
        begin
          reg17 <= wire15;
        end
      else
        begin
          reg17 <= reg16;
        end
      reg18 <= ({((wire10 >= reg17) ?
              (&wire10) : ((8'had) << wire13))} - (wire7[(1'h0):(1'h0)] <<< ($unsigned(reg16) >= {wire14})));
    end
  assign wire19 = wire7;
  always
    @(posedge clk) begin
      reg20 <= wire9[(1'h1):(1'h0)];
      reg21 <= (|((wire12[(1'h0):(1'h0)] ?
              wire8[(2'h2):(1'h1)] : wire8[(2'h2):(1'h1)]) ?
          reg18[(3'h5):(1'h1)] : (^~(8'ha4))));
    end
  assign wire22 = (wire13 && (8'ha5));
endmodule