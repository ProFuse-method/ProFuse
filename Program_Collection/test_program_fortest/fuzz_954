(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h68b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire4;
  input wire [(5'h15):(1'h0)] wire3;
  input wire [(5'h11):(1'h0)] wire2;
  input wire signed [(4'he):(1'h0)] wire1;
  input wire [(5'h14):(1'h0)] wire0;
  wire signed [(5'h15):(1'h0)] wire482;
  wire [(5'h15):(1'h0)] wire440;
  wire [(4'hf):(1'h0)] wire439;
  wire [(3'h6):(1'h0)] wire438;
  wire signed [(5'h10):(1'h0)] wire437;
  wire signed [(5'h13):(1'h0)] wire159;
  wire [(4'ha):(1'h0)] wire364;
  wire [(5'h13):(1'h0)] wire366;
  wire [(3'h6):(1'h0)] wire367;
  wire signed [(2'h2):(1'h0)] wire368;
  wire [(5'h11):(1'h0)] wire369;
  wire [(5'h10):(1'h0)] wire370;
  wire [(5'h15):(1'h0)] wire371;
  wire [(4'he):(1'h0)] wire433;
  wire signed [(3'h7):(1'h0)] wire434;
  wire [(5'h11):(1'h0)] wire435;
  reg [(4'hd):(1'h0)] reg478 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg477 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg476 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg474 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg472 = (1'h0);
  reg [(5'h15):(1'h0)] reg468 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg467 = (1'h0);
  reg [(4'hc):(1'h0)] reg462 = (1'h0);
  reg [(3'h7):(1'h0)] reg460 = (1'h0);
  reg [(3'h7):(1'h0)] reg457 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg456 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg455 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg452 = (1'h0);
  reg signed [(4'he):(1'h0)] reg451 = (1'h0);
  reg [(2'h3):(1'h0)] reg448 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg446 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg444 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg164 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg166 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg167 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg168 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg169 = (1'h0);
  reg [(5'h14):(1'h0)] reg170 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg171 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg172 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg174 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg176 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg177 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg178 = (1'h0);
  reg [(4'hd):(1'h0)] reg180 = (1'h0);
  reg [(3'h5):(1'h0)] reg373 = (1'h0);
  reg [(4'hc):(1'h0)] reg376 = (1'h0);
  reg signed [(4'he):(1'h0)] reg384 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg387 = (1'h0);
  reg signed [(4'he):(1'h0)] reg388 = (1'h0);
  reg [(3'h6):(1'h0)] reg389 = (1'h0);
  reg [(4'h8):(1'h0)] reg393 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg394 = (1'h0);
  reg [(4'hf):(1'h0)] reg395 = (1'h0);
  reg [(5'h14):(1'h0)] reg396 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg398 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg399 = (1'h0);
  reg [(4'hc):(1'h0)] reg401 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg402 = (1'h0);
  reg [(5'h12):(1'h0)] reg404 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg406 = (1'h0);
  reg [(4'hf):(1'h0)] reg408 = (1'h0);
  reg signed [(4'he):(1'h0)] reg410 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg412 = (1'h0);
  reg [(5'h12):(1'h0)] reg414 = (1'h0);
  reg [(5'h10):(1'h0)] reg415 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg416 = (1'h0);
  reg [(4'hb):(1'h0)] reg421 = (1'h0);
  reg [(5'h13):(1'h0)] reg422 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg425 = (1'h0);
  reg [(4'hd):(1'h0)] reg426 = (1'h0);
  reg [(4'ha):(1'h0)] reg428 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg429 = (1'h0);
  reg [(5'h12):(1'h0)] reg430 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg431 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg432 = (1'h0);
  reg [(3'h6):(1'h0)] reg481 = (1'h0);
  reg [(5'h11):(1'h0)] reg480 = (1'h0);
  reg [(2'h3):(1'h0)] forvar479 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg475 = (1'h0);
  reg [(5'h11):(1'h0)] forvar473 = (1'h0);
  reg [(4'hd):(1'h0)] forvar471 = (1'h0);
  reg [(4'hc):(1'h0)] reg470 = (1'h0);
  reg [(4'hd):(1'h0)] reg469 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar466 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar465 = (1'h0);
  reg [(4'ha):(1'h0)] reg464 = (1'h0);
  reg signed [(4'he):(1'h0)] reg463 = (1'h0);
  reg [(4'hc):(1'h0)] reg461 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar459 = (1'h0);
  reg [(3'h5):(1'h0)] forvar458 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar454 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg453 = (1'h0);
  reg [(4'h8):(1'h0)] forvar450 = (1'h0);
  reg [(2'h3):(1'h0)] reg449 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar447 = (1'h0);
  reg [(3'h7):(1'h0)] reg445 = (1'h0);
  reg [(5'h15):(1'h0)] reg443 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar442 = (1'h0);
  reg [(5'h14):(1'h0)] forvar441 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar427 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar424 = (1'h0);
  reg [(4'hc):(1'h0)] forvar423 = (1'h0);
  reg [(2'h2):(1'h0)] reg420 = (1'h0);
  reg [(5'h14):(1'h0)] reg419 = (1'h0);
  reg [(5'h15):(1'h0)] forvar418 = (1'h0);
  reg [(5'h10):(1'h0)] reg417 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar413 = (1'h0);
  reg [(5'h14):(1'h0)] forvar411 = (1'h0);
  reg [(4'hf):(1'h0)] reg409 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg407 = (1'h0);
  reg [(5'h14):(1'h0)] forvar405 = (1'h0);
  reg [(2'h3):(1'h0)] reg403 = (1'h0);
  reg [(3'h4):(1'h0)] forvar400 = (1'h0);
  reg [(5'h14):(1'h0)] forvar397 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg392 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar391 = (1'h0);
  reg [(4'h9):(1'h0)] forvar390 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg386 = (1'h0);
  reg [(4'h9):(1'h0)] forvar385 = (1'h0);
  reg [(2'h2):(1'h0)] forvar383 = (1'h0);
  reg [(5'h13):(1'h0)] reg382 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg381 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar380 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg379 = (1'h0);
  reg [(4'he):(1'h0)] reg378 = (1'h0);
  reg signed [(4'he):(1'h0)] reg377 = (1'h0);
  reg [(5'h11):(1'h0)] reg375 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar374 = (1'h0);
  reg [(2'h2):(1'h0)] forvar372 = (1'h0);
  reg [(3'h5):(1'h0)] reg182 = (1'h0);
  reg [(4'h9):(1'h0)] reg181 = (1'h0);
  reg [(3'h7):(1'h0)] forvar179 = (1'h0);
  reg [(4'hf):(1'h0)] forvar175 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar173 = (1'h0);
  reg [(3'h7):(1'h0)] reg165 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg163 = (1'h0);
  reg [(5'h15):(1'h0)] forvar162 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar161 = (1'h0);
  assign y = {wire482,
                 wire440,
                 wire439,
                 wire438,
                 wire437,
                 wire159,
                 wire364,
                 wire366,
                 wire367,
                 wire368,
                 wire369,
                 wire370,
                 wire371,
                 wire433,
                 wire434,
                 wire435,
                 reg478,
                 reg477,
                 reg476,
                 reg474,
                 reg472,
                 reg468,
                 reg467,
                 reg462,
                 reg460,
                 reg457,
                 reg456,
                 reg455,
                 reg452,
                 reg451,
                 reg448,
                 reg446,
                 reg444,
                 reg164,
                 reg166,
                 reg167,
                 reg168,
                 reg169,
                 reg170,
                 reg171,
                 reg172,
                 reg174,
                 reg176,
                 reg177,
                 reg178,
                 reg180,
                 reg373,
                 reg376,
                 reg384,
                 reg387,
                 reg388,
                 reg389,
                 reg393,
                 reg394,
                 reg395,
                 reg396,
                 reg398,
                 reg399,
                 reg401,
                 reg402,
                 reg404,
                 reg406,
                 reg408,
                 reg410,
                 reg412,
                 reg414,
                 reg415,
                 reg416,
                 reg421,
                 reg422,
                 reg425,
                 reg426,
                 reg428,
                 reg429,
                 reg430,
                 reg431,
                 reg432,
                 reg481,
                 reg480,
                 forvar479,
                 reg475,
                 forvar473,
                 forvar471,
                 reg470,
                 reg469,
                 forvar466,
                 forvar465,
                 reg464,
                 reg463,
                 reg461,
                 forvar459,
                 forvar458,
                 forvar454,
                 reg453,
                 forvar450,
                 reg449,
                 forvar447,
                 reg445,
                 reg443,
                 forvar442,
                 forvar441,
                 forvar427,
                 forvar424,
                 forvar423,
                 reg420,
                 reg419,
                 forvar418,
                 reg417,
                 forvar413,
                 forvar411,
                 reg409,
                 reg407,
                 forvar405,
                 reg403,
                 forvar400,
                 forvar397,
                 reg392,
                 forvar391,
                 forvar390,
                 reg386,
                 forvar385,
                 forvar383,
                 reg382,
                 reg381,
                 forvar380,
                 reg379,
                 reg378,
                 reg377,
                 reg375,
                 forvar374,
                 forvar372,
                 reg182,
                 reg181,
                 forvar179,
                 forvar175,
                 forvar173,
                 reg165,
                 reg163,
                 forvar162,
                 forvar161,
                 (1'h0)};
  module5 #() modinst160 (.wire9(wire2), .wire6(wire3), .wire8(wire1), .wire7(wire0), .clk(clk), .y(wire159), .wire10(wire4));
  always
    @(posedge clk) begin
      for (forvar161 = (1'h0); (forvar161 < (3'h4)); forvar161 = (forvar161 + (1'h1)))
        begin
          for (forvar162 = (1'h0); (forvar162 < (2'h3)); forvar162 = (forvar162 + (1'h1)))
            begin
              reg163 = $signed(wire0[(3'h7):(3'h7)]);
              reg164 <= wire1[(4'h9):(3'h6)];
              reg165 = ((+(|(&wire2[(3'h5):(3'h4)]))) ?
                  wire3[(4'ha):(1'h1)] : $signed($unsigned($unsigned((~^wire0)))));
              reg166 <= reg164[(3'h7):(3'h6)];
              reg167 <= $signed((!$unsigned(wire159)));
            end
          if ($signed((wire0[(4'h9):(2'h3)] >> (reg167[(1'h0):(1'h0)] * wire1[(4'h8):(1'h1)]))))
            begin
              reg168 <= (wire1[(1'h0):(1'h0)] == wire159);
              reg169 <= wire4[(2'h2):(2'h2)];
              reg170 <= reg164;
              reg171 <= {(+(reg166 << (~|(wire159 ? reg167 : reg169)))),
                  (~&(~reg169))};
              reg172 <= $unsigned((reg166 ?
                  reg170 : (-(+((8'ha2) || wire159)))));
            end
          else
            begin
              reg168 <= (((~|(reg171[(4'h9):(3'h7)] << reg172)) ?
                      forvar161[(2'h3):(2'h3)] : (+(forvar162[(3'h6):(3'h6)] <= $signed(reg170)))) ?
                  $signed(reg169[(4'hb):(3'h5)]) : reg166[(3'h7):(2'h2)]);
              reg169 <= reg164[(2'h2):(1'h0)];
            end
        end
      for (forvar173 = (1'h0); (forvar173 < (2'h3)); forvar173 = (forvar173 + (1'h1)))
        begin
          reg174 <= wire3;
          for (forvar175 = (1'h0); (forvar175 < (2'h3)); forvar175 = (forvar175 + (1'h1)))
            begin
              reg176 <= {($signed(reg169[(3'h6):(3'h5)]) ?
                      reg171[(4'hc):(3'h7)] : ($signed(((7'h40) << wire159)) ?
                          $signed(reg174[(2'h3):(1'h0)]) : ($signed(reg171) ^~ {reg165,
                              reg174})))};
              reg177 <= ($unsigned((((wire159 ?
                      forvar162 : reg167) ~^ (&reg166)) ?
                  $unsigned(reg171) : {$signed(wire2),
                      $unsigned(reg165)})) && {($unsigned((reg163 ?
                          reg172 : reg169)) ?
                      $unsigned((+(8'had))) : (&(8'ha8))),
                  (((forvar175 ? wire0 : reg169) ?
                      $signed(wire0) : ((8'h9e) ?
                          reg167 : reg167)) * reg174[(1'h0):(1'h0)])});
              reg178 <= reg167;
            end
          for (forvar179 = (1'h0); (forvar179 < (2'h3)); forvar179 = (forvar179 + (1'h1)))
            begin
              reg180 <= {(((^~reg170) ?
                          $unsigned(reg170[(1'h0):(1'h0)]) : reg163) ?
                      forvar162[(3'h6):(1'h1)] : $signed({(forvar179 ?
                              wire0 : reg163)}))};
              reg181 = (7'h43);
              reg182 = wire2;
            end
        end
    end
  module183 #() modinst365 (wire364, clk, reg171, reg170, reg166, reg176);
  assign wire366 = (reg168 ?
                       ((((!wire159) ?
                               $signed(reg172) : reg170[(4'ha):(3'h7)]) ?
                           ($unsigned(reg167) <= $signed(reg180)) : (-$unsigned((8'ha4)))) > ({$unsigned(reg164)} ?
                           $signed((7'h42)) : {(reg169 ? reg170 : wire3),
                               reg170})) : wire0);
  assign wire367 = $signed(reg177[(2'h2):(1'h0)]);
  assign wire368 = ((^(-(~^wire367[(3'h4):(3'h4)]))) | reg170);
  assign wire369 = (~^$unsigned(($signed($signed(reg164)) ?
                       reg176[(4'h8):(2'h3)] : wire367)));
  assign wire370 = $signed(reg178[(4'hb):(1'h0)]);
  assign wire371 = (|reg164);
  always
    @(posedge clk) begin
      for (forvar372 = (1'h0); (forvar372 < (3'h4)); forvar372 = (forvar372 + (1'h1)))
        begin
          reg373 <= ($unsigned($unsigned((&$unsigned(reg172)))) << wire364);
          for (forvar374 = (1'h0); (forvar374 < (1'h0)); forvar374 = (forvar374 + (1'h1)))
            begin
              reg375 = {($signed((wire364[(4'h8):(4'h8)] ~^ $signed(wire3))) ?
                      reg169 : ((reg171[(4'hc):(4'hc)] ^~ $signed(forvar374)) ?
                          (+(&wire364)) : ((reg176 ?
                              (8'hb4) : wire366) ^ (forvar372 >> reg167))))};
              reg376 <= ((($signed((!(8'hb5))) * $unsigned($unsigned((7'h44)))) ?
                      ((reg375[(4'hc):(4'hc)] ?
                              $signed(wire1) : (forvar374 ? wire3 : (8'haf))) ?
                          ((!forvar372) ?
                              $unsigned((8'had)) : (~&wire2)) : ($unsigned(wire2) ?
                              ((8'hbf) ~^ reg373) : {reg174,
                                  reg168})) : wire368[(1'h1):(1'h1)]) ?
                  wire367[(1'h1):(1'h1)] : $signed(((forvar372 ?
                          ((8'ha3) ? reg178 : wire2) : (forvar372 ^~ reg172)) ?
                      ($unsigned(wire2) ?
                          (^~wire370) : ((8'hbb) ?
                              wire366 : (8'h9c))) : (~^(forvar374 <= wire367)))));
              reg377 = $signed((8'hb7));
              reg378 = $signed(($unsigned((^((8'ha1) ? forvar372 : reg376))) ?
                  reg176[(3'h7):(2'h3)] : {({reg375} || (reg375 && wire2))}));
              reg379 = $unsigned(reg373[(2'h3):(2'h2)]);
            end
          for (forvar380 = (1'h0); (forvar380 < (1'h1)); forvar380 = (forvar380 + (1'h1)))
            begin
              reg381 = (|$unsigned({reg176[(4'h9):(4'h8)]}));
              reg382 = ((8'ha6) ?
                  ((~^wire159[(5'h12):(3'h6)]) ?
                      $unsigned(reg172[(4'hf):(3'h6)]) : (forvar374 ^ wire159[(5'h13):(4'hb)])) : ((+(wire159 == (8'hb4))) ~^ (wire371 ~^ ($signed((8'hae)) ?
                      $signed(forvar374) : $unsigned(wire3)))));
            end
        end
      for (forvar383 = (1'h0); (forvar383 < (2'h2)); forvar383 = (forvar383 + (1'h1)))
        begin
          reg384 <= ((~($signed((reg376 ? reg178 : forvar372)) ?
                  ((!(8'hac)) ?
                      forvar383[(1'h0):(1'h0)] : wire367[(3'h4):(2'h2)]) : ((7'h41) ?
                      (wire369 >>> (8'hbe)) : (8'hb1)))) ?
              {$signed(reg373[(3'h5):(1'h0)])} : {(($unsigned(reg176) ?
                          (reg170 ? reg172 : reg177) : reg177) ?
                      reg174 : (((8'hbe) >> reg376) ?
                          $unsigned(wire159) : $signed(reg381))),
                  $unsigned(((+wire3) ? (~^reg176) : reg169))});
          for (forvar385 = (1'h0); (forvar385 < (2'h2)); forvar385 = (forvar385 + (1'h1)))
            begin
              reg386 = $unsigned($unsigned((|$unsigned((8'ha4)))));
              reg387 <= ((reg172[(4'hc):(1'h0)] ?
                      (reg180 > {$signed((8'ha6)),
                          (~|(8'ha3))}) : $unsigned(({forvar374} ?
                          (forvar374 & reg174) : reg375))) ?
                  $signed(((!(!reg170)) & ($unsigned(reg377) && $signed(forvar383)))) : reg167);
              reg388 <= ((~&(reg375[(1'h0):(1'h0)] <<< $signed(reg170[(1'h0):(1'h0)]))) <= $signed(reg384[(4'he):(4'hd)]));
              reg389 <= wire370;
            end
        end
      for (forvar390 = (1'h0); (forvar390 < (2'h2)); forvar390 = (forvar390 + (1'h1)))
        begin
          for (forvar391 = (1'h0); (forvar391 < (2'h2)); forvar391 = (forvar391 + (1'h1)))
            begin
              reg392 = reg176[(2'h2):(1'h1)];
              reg393 <= (reg382[(1'h1):(1'h1)] <= $unsigned(reg387));
              reg394 <= $signed(wire3[(1'h0):(1'h0)]);
              reg395 <= reg171;
              reg396 <= $unsigned((~(~&((8'hb9) ?
                  (-wire2) : wire366[(5'h11):(3'h6)]))));
            end
          for (forvar397 = (1'h0); (forvar397 < (1'h0)); forvar397 = (forvar397 + (1'h1)))
            begin
              reg398 <= (reg392 ^~ forvar372);
              reg399 <= reg393;
            end
          for (forvar400 = (1'h0); (forvar400 < (3'h4)); forvar400 = (forvar400 + (1'h1)))
            begin
              reg401 <= reg389[(3'h4):(2'h2)];
              reg402 <= $unsigned(reg377[(3'h5):(3'h4)]);
              reg403 = (^((8'hac) + (-(!{forvar397}))));
            end
          reg404 <= ((^~((+(8'hb8)) ?
                  $signed((wire369 ?
                      reg375 : reg381)) : $unsigned((^~reg379)))) ?
              (^~wire368[(1'h0):(1'h0)]) : (~|{(-reg402)}));
        end
      for (forvar405 = (1'h0); (forvar405 < (2'h3)); forvar405 = (forvar405 + (1'h1)))
        begin
          if ({$signed($unsigned((reg176[(3'h7):(2'h3)] & wire368))),
              $signed($signed((~^forvar374[(1'h0):(1'h0)])))})
            begin
              reg406 <= ($unsigned(reg403[(2'h2):(1'h1)]) ?
                  {$unsigned($unsigned({reg384})),
                      $signed(wire368)} : (~^{(|$signed(reg169))}));
            end
          else
            begin
              reg406 <= reg379;
              reg407 = (!forvar390[(3'h7):(2'h3)]);
              reg408 <= ($signed((~|((wire2 >= wire368) ?
                      $signed((8'h9e)) : (7'h40)))) ?
                  $signed((forvar397[(3'h6):(1'h0)] ?
                      reg174 : (((8'haf) ~^ reg402) ?
                          (8'had) : forvar383[(1'h1):(1'h0)]))) : (|$unsigned(((reg392 ^ reg398) & reg382[(1'h1):(1'h1)]))));
              reg409 = reg180;
              reg410 <= $unsigned((((&(reg408 < reg389)) ?
                      $unsigned((reg376 & wire2)) : reg393[(2'h2):(1'h1)]) ?
                  ((reg168[(3'h6):(3'h4)] >= (|reg402)) != $signed($signed(reg394))) : $unsigned(reg375)));
            end
          for (forvar411 = (1'h0); (forvar411 < (2'h2)); forvar411 = (forvar411 + (1'h1)))
            begin
              reg412 <= {($unsigned((+(reg401 ?
                      reg171 : forvar397))) <<< $signed(((reg404 * forvar411) ?
                      forvar380[(1'h0):(1'h0)] : (wire366 <<< reg392))))};
            end
          for (forvar413 = (1'h0); (forvar413 < (3'h4)); forvar413 = (forvar413 + (1'h1)))
            begin
              reg414 <= ((({(reg398 ? wire370 : reg393)} ?
                      {$signed((8'hb9)), {reg404}} : (8'h9f)) ?
                  {(8'hbc)} : reg167) && ($unsigned((^~$signed(reg174))) ?
                  {(8'hb7)} : {(-(~|wire1)),
                      ((wire366 ? (8'h9d) : reg393) >>> (wire367 ?
                          reg171 : (8'h9d)))}));
              reg415 <= (+$signed(($unsigned(reg386[(3'h6):(1'h1)]) ?
                  reg180 : (|(7'h42)))));
              reg416 <= $unsigned(((wire0[(1'h0):(1'h0)] ~^ (^(&wire4))) >= reg394));
              reg417 = (reg376 ~^ (($signed(reg378[(4'hb):(3'h5)]) != ((forvar413 ?
                      reg174 : reg392) ?
                  wire368[(1'h1):(1'h0)] : (-wire4))) >> ((+(^wire370)) ?
                  reg373[(3'h5):(3'h5)] : reg412[(3'h7):(3'h7)])));
            end
          for (forvar418 = (1'h0); (forvar418 < (3'h4)); forvar418 = (forvar418 + (1'h1)))
            begin
              reg419 = (~^(wire159[(4'h9):(3'h6)] | ((-((8'ha2) ?
                      forvar405 : (8'hb0))) ?
                  (reg382 ?
                      reg416[(4'hc):(3'h7)] : {wire367,
                          reg166}) : (reg387 | wire4[(3'h6):(1'h0)]))));
              reg420 = reg404;
              reg421 <= (^~({(~((8'hbd) * (7'h40))),
                      $signed((reg412 ? reg412 : reg164))} ?
                  (reg408 ?
                      $signed({(7'h43), wire371}) : $unsigned(((8'hbc) ?
                          (8'hb9) : (8'h9e)))) : wire159));
              reg422 <= (-forvar372);
            end
        end
      for (forvar423 = (1'h0); (forvar423 < (1'h1)); forvar423 = (forvar423 + (1'h1)))
        begin
          for (forvar424 = (1'h0); (forvar424 < (2'h2)); forvar424 = (forvar424 + (1'h1)))
            begin
              reg425 <= (({($unsigned(wire3) != $unsigned(wire2)),
                      (~|(reg172 <= forvar385))} ?
                  (+(-(-reg393))) : wire366[(3'h5):(3'h5)]) | (~&(8'hb3)));
              reg426 <= {$signed(forvar400[(1'h0):(1'h0)])};
            end
          for (forvar427 = (1'h0); (forvar427 < (2'h2)); forvar427 = (forvar427 + (1'h1)))
            begin
              reg428 <= ((reg381 <= forvar427[(4'hb):(3'h4)]) ?
                  forvar374 : (-(forvar413[(2'h3):(2'h3)] ?
                      {(reg392 ? reg420 : reg398), (!(8'ha1))} : (forvar374 ?
                          reg178 : (-(8'ha5))))));
              reg429 <= (~^$unsigned((reg407 ?
                  reg180[(4'h9):(2'h3)] : reg167[(1'h0):(1'h0)])));
              reg430 <= $signed(((!{(reg376 == reg421),
                  (reg415 ^~ reg377)}) && $signed(reg169)));
              reg431 <= ($unsigned({$signed({reg408})}) <= reg180[(4'ha):(3'h7)]);
            end
          reg432 <= (8'haf);
        end
    end
  assign wire433 = $signed((reg431 ?
                       ({reg414,
                           ((7'h43) ?
                               reg167 : reg172)} >>> reg389[(1'h0):(1'h0)]) : reg178[(2'h3):(2'h3)]));
  assign wire434 = (reg416 ?
                       $signed(reg176[(5'h13):(4'hd)]) : reg422[(1'h0):(1'h0)]);
  module183 #() modinst436 (.wire187(wire3), .y(wire435), .wire184(reg414), .clk(clk), .wire186(reg174), .wire185(reg168));
  assign wire437 = (+($signed(((~&reg408) ~^ (reg170 ^ wire434))) & $signed(wire434[(1'h1):(1'h1)])));
  assign wire438 = ((reg171 ?
                           $signed(wire435[(3'h5):(1'h0)]) : ($unsigned($unsigned((8'hb7))) ?
                               $unsigned(wire371[(1'h0):(1'h0)]) : reg430[(4'h8):(2'h3)])) ?
                       (wire364 > $unsigned((wire433[(3'h7):(1'h1)] ?
                           (reg177 ?
                               (8'hb7) : reg426) : (reg425 ^~ reg408)))) : {$signed((reg169 & (reg402 ?
                               reg421 : reg388))),
                           $signed({reg389})});
  assign wire439 = $unsigned(($signed($unsigned(reg166[(2'h2):(1'h1)])) ?
                       ((^$signed(reg425)) ?
                           $unsigned($unsigned(reg408)) : reg421[(2'h3):(2'h3)]) : $unsigned({$unsigned(reg166)})));
  assign wire440 = reg176;
  always
    @(posedge clk) begin
      for (forvar441 = (1'h0); (forvar441 < (3'h4)); forvar441 = (forvar441 + (1'h1)))
        begin
          for (forvar442 = (1'h0); (forvar442 < (1'h0)); forvar442 = (forvar442 + (1'h1)))
            begin
              reg443 = (reg171[(5'h10):(3'h4)] | ($signed($signed((wire434 ?
                      wire369 : reg431))) ?
                  reg174 : (((|wire159) ^ (reg177 > (8'hb3))) ?
                      wire0 : $signed((&reg168)))));
              reg444 <= (&(+($unsigned($unsigned(wire3)) ?
                  $signed((reg430 ?
                      reg171 : reg169)) : {reg168[(5'h12):(5'h12)]})));
              reg445 = $signed({({(reg393 <<< reg168)} ^~ (reg416[(3'h5):(2'h2)] >= $unsigned(wire371))),
                  ((~&(~|forvar442)) ?
                      $unsigned($unsigned(wire433)) : ($unsigned(reg428) & $signed(wire437)))});
              reg446 <= (|$signed(reg406[(1'h0):(1'h0)]));
            end
          for (forvar447 = (1'h0); (forvar447 < (1'h1)); forvar447 = (forvar447 + (1'h1)))
            begin
              reg448 <= reg432[(5'h10):(4'h9)];
              reg449 = reg428;
            end
          for (forvar450 = (1'h0); (forvar450 < (3'h4)); forvar450 = (forvar450 + (1'h1)))
            begin
              reg451 <= $signed(($signed($signed($signed(reg166))) ^ ((((8'haf) * wire3) << forvar441[(4'ha):(4'ha)]) * $unsigned(reg167[(1'h0):(1'h0)]))));
              reg452 <= (|(~(reg404[(4'ha):(2'h2)] >>> $signed((!wire3)))));
              reg453 = forvar441[(2'h3):(2'h3)];
            end
          for (forvar454 = (1'h0); (forvar454 < (1'h0)); forvar454 = (forvar454 + (1'h1)))
            begin
              reg455 <= $unsigned((~|(^~$signed((-reg169)))));
              reg456 <= reg415;
              reg457 <= $unsigned(reg445[(3'h7):(3'h4)]);
            end
        end
      for (forvar458 = (1'h0); (forvar458 < (2'h3)); forvar458 = (forvar458 + (1'h1)))
        begin
          for (forvar459 = (1'h0); (forvar459 < (1'h1)); forvar459 = (forvar459 + (1'h1)))
            begin
              reg460 <= (reg428 ?
                  ($signed($unsigned($signed(reg172))) ?
                      $unsigned((~&reg170[(3'h7):(3'h6)])) : reg166) : reg415[(4'h9):(3'h6)]);
              reg461 = $signed(wire370[(1'h0):(1'h0)]);
              reg462 <= $signed(((^reg445) ?
                  reg421[(3'h4):(3'h4)] : (^$signed($signed(reg393)))));
              reg463 = (!wire439[(2'h2):(2'h2)]);
              reg464 = ($signed((($unsigned(reg389) ^ (8'hba)) ?
                  ((~|reg443) ? reg463 : {wire369}) : ({reg167,
                      reg445} - (reg429 ~^ reg402)))) + (^~$unsigned(reg452)));
            end
        end
      for (forvar465 = (1'h0); (forvar465 < (1'h0)); forvar465 = (forvar465 + (1'h1)))
        begin
          for (forvar466 = (1'h0); (forvar466 < (1'h0)); forvar466 = (forvar466 + (1'h1)))
            begin
              reg467 <= reg172;
              reg468 <= $signed($signed((&$unsigned($signed(reg452)))));
              reg469 = wire367;
              reg470 = reg432[(3'h6):(1'h0)];
            end
          for (forvar471 = (1'h0); (forvar471 < (3'h4)); forvar471 = (forvar471 + (1'h1)))
            begin
              reg472 <= {((^$unsigned((^~reg467))) ?
                      ($unsigned($unsigned(wire440)) > reg452[(3'h4):(1'h1)]) : reg168),
                  reg394};
            end
          for (forvar473 = (1'h0); (forvar473 < (2'h2)); forvar473 = (forvar473 + (1'h1)))
            begin
              reg474 <= (reg410[(4'hd):(1'h0)] ?
                  reg406[(3'h4):(2'h3)] : (reg412 ?
                      (&$unsigned((reg457 ?
                          wire159 : reg166))) : reg398[(5'h11):(4'ha)]));
              reg475 = (($unsigned(reg457) ?
                      $signed((^$unsigned(reg167))) : $signed($unsigned(wire2))) ?
                  ((8'haf) || $signed((|((7'h42) << reg463)))) : (reg395 <<< {(wire435 >= (8'hbe))}));
              reg476 <= wire433;
              reg477 <= (~(~|((+$unsigned(reg464)) == (!((8'haa) ?
                  reg396 : forvar465)))));
              reg478 <= $signed($signed((reg453[(3'h4):(1'h1)] ?
                  ($unsigned(reg410) ?
                      {reg408} : {reg474,
                          reg172}) : (reg398[(4'h9):(2'h2)] == $unsigned((8'haf))))));
            end
        end
      for (forvar479 = (1'h0); (forvar479 < (2'h2)); forvar479 = (forvar479 + (1'h1)))
        begin
          reg480 = {$unsigned(reg468[(2'h3):(2'h3)]),
              $unsigned((~&$signed((^~reg376))))};
        end
      reg481 = {(&(~&{(wire371 == wire367)}))};
    end
  assign wire482 = $unsigned((^wire1));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module183
#(parameter param362 = {{(8'h9d), ((~(~&(8'ha7))) ^~ (((8'hbe) ? (8'haa) : (8'hae)) ? (~^(8'hae)) : {(8'hae), (7'h40)}))}}, 
parameter param363 = {(param362 ? param362 : ({(param362 <<< param362)} ? (~|(!(8'h9e))) : (^((8'hbe) ? param362 : param362)))), ((param362 << ((param362 ? param362 : param362) != (8'ha7))) + (+((param362 ? param362 : param362) - param362)))})
(y, clk, wire184, wire185, wire186, wire187);
  output wire [(32'h6ab):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire184;
  input wire signed [(5'h14):(1'h0)] wire185;
  input wire signed [(3'h4):(1'h0)] wire186;
  input wire signed [(5'h15):(1'h0)] wire187;
  wire [(4'hf):(1'h0)] wire361;
  wire signed [(4'hb):(1'h0)] wire360;
  wire signed [(5'h10):(1'h0)] wire188;
  wire signed [(4'hd):(1'h0)] wire221;
  wire signed [(4'hd):(1'h0)] wire222;
  wire signed [(5'h13):(1'h0)] wire258;
  wire [(5'h10):(1'h0)] wire333;
  wire [(3'h6):(1'h0)] wire358;
  reg [(5'h10):(1'h0)] reg332 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg331 = (1'h0);
  reg [(4'h8):(1'h0)] reg329 = (1'h0);
  reg [(4'he):(1'h0)] reg327 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg326 = (1'h0);
  reg [(5'h10):(1'h0)] reg322 = (1'h0);
  reg [(4'hc):(1'h0)] reg321 = (1'h0);
  reg [(4'hc):(1'h0)] reg320 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg319 = (1'h0);
  reg [(4'h8):(1'h0)] reg317 = (1'h0);
  reg [(5'h13):(1'h0)] reg315 = (1'h0);
  reg [(3'h5):(1'h0)] reg314 = (1'h0);
  reg [(4'h8):(1'h0)] reg313 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg311 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg310 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg309 = (1'h0);
  reg [(4'hb):(1'h0)] reg308 = (1'h0);
  reg [(5'h15):(1'h0)] reg307 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg299 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg295 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg289 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg285 = (1'h0);
  reg [(4'hb):(1'h0)] reg284 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg283 = (1'h0);
  reg [(4'hd):(1'h0)] reg279 = (1'h0);
  reg [(5'h14):(1'h0)] reg277 = (1'h0);
  reg [(4'hd):(1'h0)] reg276 = (1'h0);
  reg [(5'h14):(1'h0)] reg265 = (1'h0);
  reg signed [(4'he):(1'h0)] reg262 = (1'h0);
  reg [(2'h2):(1'h0)] reg260 = (1'h0);
  reg [(4'h8):(1'h0)] reg256 = (1'h0);
  reg [(3'h4):(1'h0)] reg247 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg245 = (1'h0);
  reg [(5'h14):(1'h0)] reg239 = (1'h0);
  reg [(3'h6):(1'h0)] reg237 = (1'h0);
  reg [(3'h6):(1'h0)] reg236 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg232 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg231 = (1'h0);
  reg [(4'hf):(1'h0)] reg229 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg227 = (1'h0);
  reg signed [(4'he):(1'h0)] reg224 = (1'h0);
  reg [(5'h15):(1'h0)] reg220 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg219 = (1'h0);
  reg [(4'hb):(1'h0)] reg218 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg217 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg216 = (1'h0);
  reg [(5'h11):(1'h0)] reg215 = (1'h0);
  reg [(5'h10):(1'h0)] reg212 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg211 = (1'h0);
  reg [(3'h6):(1'h0)] reg210 = (1'h0);
  reg [(4'he):(1'h0)] reg208 = (1'h0);
  reg [(4'hc):(1'h0)] reg207 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg206 = (1'h0);
  reg [(3'h5):(1'h0)] reg203 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg201 = (1'h0);
  reg [(4'h9):(1'h0)] reg198 = (1'h0);
  reg [(4'hc):(1'h0)] reg197 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg196 = (1'h0);
  reg [(5'h15):(1'h0)] reg193 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg189 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg330 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar328 = (1'h0);
  reg [(4'h8):(1'h0)] reg325 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar324 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar323 = (1'h0);
  reg [(4'ha):(1'h0)] reg318 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg316 = (1'h0);
  reg [(4'hc):(1'h0)] forvar312 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar306 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar305 = (1'h0);
  reg [(4'hd):(1'h0)] reg304 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg303 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar302 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg301 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg300 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg298 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar297 = (1'h0);
  reg [(4'h8):(1'h0)] reg296 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar294 = (1'h0);
  reg [(4'ha):(1'h0)] forvar293 = (1'h0);
  reg [(2'h3):(1'h0)] reg292 = (1'h0);
  reg [(3'h5):(1'h0)] reg291 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar290 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar288 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg287 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg286 = (1'h0);
  reg [(4'h9):(1'h0)] forvar282 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg281 = (1'h0);
  reg [(3'h5):(1'h0)] reg280 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg278 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg275 = (1'h0);
  reg [(4'ha):(1'h0)] reg274 = (1'h0);
  reg [(4'hf):(1'h0)] reg273 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg272 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar271 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg270 = (1'h0);
  reg [(5'h13):(1'h0)] reg269 = (1'h0);
  reg [(5'h11):(1'h0)] reg268 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar267 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar266 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg264 = (1'h0);
  reg [(5'h10):(1'h0)] reg263 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar261 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar259 = (1'h0);
  reg [(3'h5):(1'h0)] reg257 = (1'h0);
  reg [(5'h11):(1'h0)] reg255 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg254 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar253 = (1'h0);
  reg [(2'h3):(1'h0)] reg252 = (1'h0);
  reg [(3'h4):(1'h0)] reg251 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg250 = (1'h0);
  reg [(4'hf):(1'h0)] forvar249 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar248 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg246 = (1'h0);
  reg [(5'h10):(1'h0)] reg244 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar243 = (1'h0);
  reg [(3'h6):(1'h0)] reg242 = (1'h0);
  reg [(4'ha):(1'h0)] reg241 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar240 = (1'h0);
  reg [(4'hf):(1'h0)] reg238 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg235 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar234 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg233 = (1'h0);
  reg [(2'h2):(1'h0)] forvar230 = (1'h0);
  reg [(2'h2):(1'h0)] forvar228 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg226 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar225 = (1'h0);
  reg [(5'h15):(1'h0)] forvar223 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar214 = (1'h0);
  reg [(3'h7):(1'h0)] forvar213 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar209 = (1'h0);
  reg [(5'h12):(1'h0)] forvar205 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar204 = (1'h0);
  reg [(5'h11):(1'h0)] reg202 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar200 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg199 = (1'h0);
  reg [(3'h5):(1'h0)] reg195 = (1'h0);
  reg [(4'h9):(1'h0)] forvar194 = (1'h0);
  reg [(5'h13):(1'h0)] forvar192 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg191 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar190 = (1'h0);
  assign y = {wire361,
                 wire360,
                 wire188,
                 wire221,
                 wire222,
                 wire258,
                 wire333,
                 wire358,
                 reg332,
                 reg331,
                 reg329,
                 reg327,
                 reg326,
                 reg322,
                 reg321,
                 reg320,
                 reg319,
                 reg317,
                 reg315,
                 reg314,
                 reg313,
                 reg311,
                 reg310,
                 reg309,
                 reg308,
                 reg307,
                 reg299,
                 reg295,
                 reg289,
                 reg285,
                 reg284,
                 reg283,
                 reg279,
                 reg277,
                 reg276,
                 reg265,
                 reg262,
                 reg260,
                 reg256,
                 reg247,
                 reg245,
                 reg239,
                 reg237,
                 reg236,
                 reg232,
                 reg231,
                 reg229,
                 reg227,
                 reg224,
                 reg220,
                 reg219,
                 reg218,
                 reg217,
                 reg216,
                 reg215,
                 reg212,
                 reg211,
                 reg210,
                 reg208,
                 reg207,
                 reg206,
                 reg203,
                 reg201,
                 reg198,
                 reg197,
                 reg196,
                 reg193,
                 reg189,
                 reg330,
                 forvar328,
                 reg325,
                 forvar324,
                 forvar323,
                 reg318,
                 reg316,
                 forvar312,
                 forvar306,
                 forvar305,
                 reg304,
                 reg303,
                 forvar302,
                 reg301,
                 reg300,
                 reg298,
                 forvar297,
                 reg296,
                 forvar294,
                 forvar293,
                 reg292,
                 reg291,
                 forvar290,
                 forvar288,
                 reg287,
                 reg286,
                 forvar282,
                 reg281,
                 reg280,
                 reg278,
                 reg275,
                 reg274,
                 reg273,
                 reg272,
                 forvar271,
                 reg270,
                 reg269,
                 reg268,
                 forvar267,
                 forvar266,
                 reg264,
                 reg263,
                 forvar261,
                 forvar259,
                 reg257,
                 reg255,
                 reg254,
                 forvar253,
                 reg252,
                 reg251,
                 reg250,
                 forvar249,
                 forvar248,
                 reg246,
                 reg244,
                 forvar243,
                 reg242,
                 reg241,
                 forvar240,
                 reg238,
                 reg235,
                 forvar234,
                 reg233,
                 forvar230,
                 forvar228,
                 reg226,
                 forvar225,
                 forvar223,
                 forvar214,
                 forvar213,
                 forvar209,
                 forvar205,
                 forvar204,
                 reg202,
                 forvar200,
                 reg199,
                 reg195,
                 forvar194,
                 forvar192,
                 reg191,
                 forvar190,
                 (1'h0)};
  assign wire188 = {(~^((-(+wire184)) ?
                           wire185[(5'h14):(4'hf)] : $unsigned($unsigned(wire184)))),
                       wire187};
  always
    @(posedge clk) begin
      reg189 <= $signed(wire185[(4'hb):(4'h9)]);
      for (forvar190 = (1'h0); (forvar190 < (1'h0)); forvar190 = (forvar190 + (1'h1)))
        begin
          reg191 = (8'h9e);
          for (forvar192 = (1'h0); (forvar192 < (1'h1)); forvar192 = (forvar192 + (1'h1)))
            begin
              reg193 <= wire188[(4'he):(4'he)];
            end
          for (forvar194 = (1'h0); (forvar194 < (3'h4)); forvar194 = (forvar194 + (1'h1)))
            begin
              reg195 = $signed((wire185 ^ $unsigned({$unsigned(reg189)})));
              reg196 <= ({wire185[(3'h6):(3'h6)]} ?
                  $signed(forvar194) : ($signed(wire185[(4'hc):(3'h6)]) == ($signed($unsigned(reg193)) ?
                      $signed((reg193 == reg193)) : ($signed(forvar192) >>> $unsigned(wire187)))));
              reg197 <= (8'hbf);
              reg198 <= ({($unsigned(reg189) || wire187[(4'ha):(2'h2)])} ?
                  wire188 : forvar192[(4'h9):(2'h2)]);
            end
          reg199 = reg198[(1'h1):(1'h0)];
          for (forvar200 = (1'h0); (forvar200 < (2'h2)); forvar200 = (forvar200 + (1'h1)))
            begin
              reg201 <= (forvar192[(1'h0):(1'h0)] ?
                  reg191 : (({{forvar190, wire184},
                      (wire185 ?
                          reg196 : reg198)} << (+(^forvar190))) <<< $signed((8'h9f))));
              reg202 = $signed($unsigned(forvar194));
            end
        end
      reg203 <= wire188[(2'h2):(1'h0)];
    end
  always
    @(posedge clk) begin
      for (forvar204 = (1'h0); (forvar204 < (1'h0)); forvar204 = (forvar204 + (1'h1)))
        begin
          for (forvar205 = (1'h0); (forvar205 < (2'h2)); forvar205 = (forvar205 + (1'h1)))
            begin
              reg206 <= $signed(wire187);
              reg207 <= $unsigned($signed((7'h44)));
              reg208 <= wire187;
            end
          for (forvar209 = (1'h0); (forvar209 < (3'h4)); forvar209 = (forvar209 + (1'h1)))
            begin
              reg210 <= ((8'h9d) < (wire184[(1'h0):(1'h0)] * (reg189 - $unsigned($unsigned(wire184)))));
              reg211 <= (wire185 ?
                  (^~($unsigned((^(7'h41))) ?
                      $unsigned($signed(wire185)) : (forvar209[(3'h6):(1'h1)] >> (wire188 ?
                          reg208 : wire188)))) : $unsigned((|{{wire185,
                          (7'h42)},
                      (8'ha5)})));
              reg212 <= $signed(reg198[(1'h1):(1'h1)]);
            end
        end
      for (forvar213 = (1'h0); (forvar213 < (1'h0)); forvar213 = (forvar213 + (1'h1)))
        begin
          for (forvar214 = (1'h0); (forvar214 < (1'h1)); forvar214 = (forvar214 + (1'h1)))
            begin
              reg215 <= (!forvar214[(2'h3):(1'h0)]);
              reg216 <= reg201;
              reg217 <= reg207;
              reg218 <= ($unsigned($signed((~$signed((8'ha5))))) ^~ $unsigned((^~$signed(reg217))));
              reg219 <= $signed(reg208[(4'he):(2'h2)]);
            end
        end
      reg220 <= {$signed((^reg219[(2'h2):(1'h0)]))};
    end
  assign wire221 = $unsigned($signed($unsigned($unsigned(reg207[(3'h4):(2'h2)]))));
  assign wire222 = $unsigned((|$signed(reg198[(4'h8):(1'h0)])));
  always
    @(posedge clk) begin
      for (forvar223 = (1'h0); (forvar223 < (2'h2)); forvar223 = (forvar223 + (1'h1)))
        begin
          reg224 <= $unsigned((~|reg210));
          for (forvar225 = (1'h0); (forvar225 < (2'h3)); forvar225 = (forvar225 + (1'h1)))
            begin
              reg226 = ((wire184 ?
                      ($signed($signed(reg210)) ?
                          (reg189 ?
                              reg217[(1'h1):(1'h1)] : reg197[(3'h5):(1'h0)]) : wire222) : reg198) ?
                  wire188[(3'h4):(1'h1)] : reg203[(3'h4):(3'h4)]);
            end
          reg227 <= reg226[(3'h4):(1'h0)];
        end
      for (forvar228 = (1'h0); (forvar228 < (1'h1)); forvar228 = (forvar228 + (1'h1)))
        begin
          reg229 <= (8'hb3);
          for (forvar230 = (1'h0); (forvar230 < (1'h1)); forvar230 = (forvar230 + (1'h1)))
            begin
              reg231 <= $signed((reg207[(1'h1):(1'h0)] ?
                  ($unsigned((wire188 ? reg207 : reg216)) ?
                      (((8'hb4) <<< reg216) >>> $signed(reg224)) : (~|reg201[(4'h9):(4'h8)])) : wire188));
              reg232 <= reg219;
              reg233 = wire186[(2'h2):(1'h1)];
            end
          for (forvar234 = (1'h0); (forvar234 < (3'h4)); forvar234 = (forvar234 + (1'h1)))
            begin
              reg235 = (($signed((reg201 ?
                      (reg206 ? reg232 : (8'hb2)) : {reg207, (8'haa)})) ?
                  reg193 : (((|reg193) ? $signed(wire186) : (!forvar228)) ?
                      (reg198[(2'h3):(2'h2)] ?
                          wire222[(1'h0):(1'h0)] : {reg208,
                              reg231}) : ($signed(forvar230) - ((8'hae) == reg215)))) >> (reg229[(3'h7):(3'h6)] ~^ $unsigned($signed({(8'ha2)}))));
              reg236 <= ((reg211[(4'he):(4'hb)] ?
                  forvar230[(1'h1):(1'h0)] : forvar225[(2'h2):(2'h2)]) >>> reg197[(3'h5):(1'h0)]);
              reg237 <= $unsigned(reg201[(3'h5):(3'h5)]);
              reg238 = $unsigned((8'hbf));
              reg239 <= ((~^reg226) ?
                  $signed((8'hb2)) : ($unsigned(reg218) ?
                      ($signed($unsigned(reg238)) ?
                          $unsigned(reg216[(4'hd):(4'hb)]) : $unsigned((reg189 ?
                              wire185 : reg233))) : reg233[(3'h4):(3'h4)]));
            end
          for (forvar240 = (1'h0); (forvar240 < (2'h2)); forvar240 = (forvar240 + (1'h1)))
            begin
              reg241 = $unsigned($unsigned($unsigned($unsigned((forvar240 ?
                  (8'hb1) : reg226)))));
              reg242 = (($signed((8'haa)) ?
                  (~&((8'hab) <<< (reg239 || reg189))) : $unsigned(wire185)) >>> $unsigned((reg219 ~^ $signed((wire186 << wire222)))));
            end
          for (forvar243 = (1'h0); (forvar243 < (3'h4)); forvar243 = (forvar243 + (1'h1)))
            begin
              reg244 = (^$unsigned($signed(($signed(wire184) <= (reg232 * (8'ha2))))));
              reg245 <= $unsigned({($signed((reg238 ? reg189 : reg227)) ?
                      $signed(reg211) : $signed(forvar225[(2'h3):(1'h0)]))});
              reg246 = (+forvar234);
              reg247 <= $signed(reg208);
            end
        end
      for (forvar248 = (1'h0); (forvar248 < (3'h4)); forvar248 = (forvar248 + (1'h1)))
        begin
          for (forvar249 = (1'h0); (forvar249 < (1'h0)); forvar249 = (forvar249 + (1'h1)))
            begin
              reg250 = {$unsigned(((7'h43) ?
                      {wire186[(2'h2):(2'h2)]} : reg218[(3'h6):(3'h4)])),
                  (8'haa)};
              reg251 = $signed((-(reg245 < ($unsigned(reg224) ?
                  reg218[(2'h3):(2'h3)] : $unsigned(reg237)))));
              reg252 = $signed($unsigned(reg224));
            end
          for (forvar253 = (1'h0); (forvar253 < (2'h3)); forvar253 = (forvar253 + (1'h1)))
            begin
              reg254 = forvar243[(4'h8):(4'h8)];
              reg255 = (!(&(~&reg235[(5'h12):(4'ha)])));
              reg256 <= (((reg251 ?
                          $signed((reg210 < reg203)) : (^~{forvar230})) ?
                      (((^~wire221) ~^ (reg239 << reg229)) ~^ $unsigned({forvar230,
                          reg235})) : reg233[(5'h12):(4'hd)]) ?
                  wire184[(3'h4):(2'h2)] : reg198);
              reg257 = reg196;
            end
        end
    end
  assign wire258 = $unsigned(reg208[(4'ha):(3'h6)]);
  always
    @(posedge clk) begin
      for (forvar259 = (1'h0); (forvar259 < (1'h0)); forvar259 = (forvar259 + (1'h1)))
        begin
          reg260 <= $unsigned(reg207[(3'h7):(3'h4)]);
          for (forvar261 = (1'h0); (forvar261 < (1'h0)); forvar261 = (forvar261 + (1'h1)))
            begin
              reg262 <= $unsigned($signed((^~wire184[(3'h4):(1'h1)])));
              reg263 = $unsigned(($signed({$signed(reg262),
                      forvar259[(2'h3):(1'h1)]}) ?
                  {wire188[(3'h6):(2'h2)],
                      $unsigned((reg239 ?
                          reg189 : wire186))} : ($signed(reg198[(4'h8):(4'h8)]) ?
                      reg206[(4'h8):(1'h1)] : $unsigned(reg210[(3'h5):(3'h5)]))));
              reg264 = ($signed(reg201[(3'h6):(1'h1)]) ?
                  $signed({(~reg207), wire187}) : wire185[(1'h0):(1'h0)]);
              reg265 <= $signed((~($signed((!(8'hb0))) ?
                  $unsigned(reg247) : (~|{(8'hbf)}))));
            end
        end
      for (forvar266 = (1'h0); (forvar266 < (3'h4)); forvar266 = (forvar266 + (1'h1)))
        begin
          for (forvar267 = (1'h0); (forvar267 < (3'h4)); forvar267 = (forvar267 + (1'h1)))
            begin
              reg268 = $signed((reg260 ?
                  {($signed(reg220) ?
                          $unsigned(reg239) : (reg217 ? reg263 : reg260)),
                      $signed($unsigned(forvar259))} : wire222[(3'h6):(2'h2)]));
              reg269 = wire258;
              reg270 = wire221[(4'hc):(3'h5)];
            end
          for (forvar271 = (1'h0); (forvar271 < (1'h1)); forvar271 = (forvar271 + (1'h1)))
            begin
              reg272 = {reg216};
              reg273 = ({$unsigned((reg215 - $signed((8'hac)))),
                      ((((8'hb2) <<< reg189) || {reg201,
                          wire258}) >>> reg193)} ?
                  (&{$signed((8'hb2))}) : reg265[(5'h12):(3'h6)]);
              reg274 = {forvar259[(1'h1):(1'h1)], (&{$signed(reg229)})};
            end
          if ($signed(reg211[(4'hf):(4'he)]))
            begin
              reg275 = ($unsigned(reg231) ^ $signed($signed(((reg269 + reg256) ?
                  (!reg229) : $signed(reg212)))));
              reg276 <= (+reg265[(5'h11):(1'h0)]);
              reg277 <= $signed({reg217[(1'h0):(1'h0)]});
              reg278 = (~^$unsigned(($unsigned(reg277[(4'hf):(4'hc)]) ?
                  reg206 : (8'hb3))));
              reg279 <= (~^{(((+reg273) < $signed(reg247)) ?
                      {$signed((8'hae))} : reg220)});
            end
          else
            begin
              reg276 <= reg193;
              reg277 <= $signed($unsigned(((-(|(8'hae))) ?
                  wire258 : (&(reg275 ^~ reg273)))));
              reg279 <= {reg276};
              reg280 = {(reg247[(2'h3):(2'h2)] ?
                      ((wire221[(3'h5):(3'h5)] ?
                          $signed(forvar259) : (~&reg276)) & ({reg239} >> $signed((8'hb9)))) : (($signed((8'h9d)) & reg215) ^~ ((reg245 ~^ reg247) | (reg274 >>> wire187)))),
                  (($unsigned($unsigned(forvar261)) >> {(reg237 ^ reg227),
                      $signed(reg260)}) | reg198[(4'h8):(2'h2)])};
            end
          reg281 = (reg265 ?
              $signed((((wire186 ?
                  reg269 : reg280) + wire258) && (8'hb9))) : wire221[(2'h2):(2'h2)]);
          for (forvar282 = (1'h0); (forvar282 < (2'h3)); forvar282 = (forvar282 + (1'h1)))
            begin
              reg283 <= (((($unsigned((8'hbe)) ?
                          (reg279 >= reg276) : (forvar259 + (8'hbd))) ?
                      (^~$signed((8'haa))) : (((7'h44) ? reg208 : reg274) ?
                          $unsigned(reg272) : (&wire186))) + $signed(reg227[(3'h4):(1'h1)])) ?
                  ($unsigned($signed((~&reg239))) - $signed((reg207[(4'hb):(3'h6)] ?
                      (reg197 ?
                          reg273 : reg262) : reg275[(4'hc):(4'h9)]))) : (~^(-$signed($signed(reg207)))));
              reg284 <= $unsigned({$signed((~wire222[(2'h2):(1'h0)]))});
              reg285 <= {(reg198[(2'h3):(1'h0)] ?
                      ($unsigned((wire187 ?
                          reg263 : reg276)) >>> (&(&(8'hae)))) : $unsigned((!$unsigned((8'hb7)))))};
              reg286 = reg215[(5'h11):(3'h7)];
              reg287 = {$unsigned((reg229[(2'h2):(1'h0)] ?
                      reg203 : forvar261))};
            end
        end
      for (forvar288 = (1'h0); (forvar288 < (2'h3)); forvar288 = (forvar288 + (1'h1)))
        begin
          reg289 <= reg208[(4'h9):(1'h0)];
        end
      for (forvar290 = (1'h0); (forvar290 < (1'h1)); forvar290 = (forvar290 + (1'h1)))
        begin
          reg291 = $unsigned($signed((({reg270} ?
              $signed(forvar259) : {forvar288}) ~^ (~|$signed(forvar288)))));
          reg292 = $signed({$unsigned(reg291[(3'h4):(1'h0)])});
        end
    end
  always
    @(posedge clk) begin
      for (forvar293 = (1'h0); (forvar293 < (2'h2)); forvar293 = (forvar293 + (1'h1)))
        begin
          for (forvar294 = (1'h0); (forvar294 < (2'h3)); forvar294 = (forvar294 + (1'h1)))
            begin
              reg295 <= $unsigned(reg206[(5'h10):(4'hc)]);
              reg296 = reg206[(4'hc):(1'h0)];
            end
          for (forvar297 = (1'h0); (forvar297 < (2'h2)); forvar297 = (forvar297 + (1'h1)))
            begin
              reg298 = $unsigned((reg229[(4'hf):(3'h7)] == $signed($unsigned($signed(reg219)))));
              reg299 <= reg284;
              reg300 = (~^forvar294[(3'h5):(2'h3)]);
              reg301 = reg299;
            end
          for (forvar302 = (1'h0); (forvar302 < (3'h4)); forvar302 = (forvar302 + (1'h1)))
            begin
              reg303 = (~|((!(((8'ha4) ? reg245 : reg215) >>> (reg279 ?
                  reg203 : reg300))) <= forvar302[(2'h2):(2'h2)]));
              reg304 = ((reg276 ^~ (({reg247,
                      reg236} & (^forvar302)) || $signed(((8'ha7) ?
                      reg279 : wire187)))) ?
                  ((~^({(8'ha6), (8'hb0)} ?
                          (reg295 + wire258) : (reg298 ? reg285 : reg284))) ?
                      reg219[(1'h0):(1'h0)] : wire185[(4'h8):(2'h2)]) : $signed($unsigned((&(reg211 ?
                      (8'ha0) : reg295)))));
            end
        end
      for (forvar305 = (1'h0); (forvar305 < (2'h3)); forvar305 = (forvar305 + (1'h1)))
        begin
          for (forvar306 = (1'h0); (forvar306 < (1'h0)); forvar306 = (forvar306 + (1'h1)))
            begin
              reg307 <= (8'hbb);
              reg308 <= forvar302;
              reg309 <= (8'ha1);
              reg310 <= forvar302[(1'h0):(1'h0)];
              reg311 <= $signed({(8'had)});
            end
          for (forvar312 = (1'h0); (forvar312 < (2'h2)); forvar312 = (forvar312 + (1'h1)))
            begin
              reg313 <= reg219[(3'h4):(1'h1)];
              reg314 <= ((!($signed((reg217 ^~ reg203)) ?
                  reg262 : reg298)) & $signed($signed(reg189)));
              reg315 <= $signed($signed($signed(reg232)));
            end
          if ((^~(-$unsigned(((&reg208) | $signed((8'ha2)))))))
            begin
              reg316 = $unsigned($unsigned($unsigned((-{(8'hb1)}))));
              reg317 <= $signed(reg276);
              reg318 = ($signed(reg313[(2'h2):(1'h1)]) * $unsigned(reg300));
            end
          else
            begin
              reg317 <= ($signed((((reg220 > reg239) << ((8'h9f) ?
                      reg313 : reg277)) >= wire184[(3'h7):(3'h6)])) ?
                  ({(reg196 & (reg206 ?
                          reg283 : (8'ha5)))} > reg309[(3'h5):(3'h5)]) : $unsigned((!(|(^~(8'hbd))))));
              reg319 <= {reg279[(4'hc):(3'h6)]};
              reg320 <= (reg256[(1'h0):(1'h0)] ?
                  ((((reg219 ? reg224 : (7'h40)) <= {(8'ha4)}) ?
                          (-(reg207 && forvar312)) : $unsigned(wire222)) ?
                      (^(reg285[(4'hb):(2'h2)] ?
                          (^forvar294) : {forvar293})) : reg304[(1'h0):(1'h0)]) : $signed($unsigned($signed($unsigned(reg298)))));
            end
          reg321 <= (+{reg216});
          if ($signed(reg201))
            begin
              reg322 <= reg217[(2'h3):(2'h3)];
            end
          else
            begin
              reg322 <= (reg231[(1'h0):(1'h0)] ?
                  $signed(reg236) : ({$unsigned(reg227[(3'h6):(1'h1)]),
                      (&(reg279 | reg215))} >>> reg193[(1'h1):(1'h0)]));
            end
        end
      for (forvar323 = (1'h0); (forvar323 < (1'h0)); forvar323 = (forvar323 + (1'h1)))
        begin
          for (forvar324 = (1'h0); (forvar324 < (1'h1)); forvar324 = (forvar324 + (1'h1)))
            begin
              reg325 = ({(8'ha3), reg321[(2'h2):(1'h1)]} ?
                  (~^(+wire221[(4'hd):(1'h0)])) : (reg277[(3'h7):(2'h3)] ?
                      reg203[(3'h5):(2'h2)] : $unsigned($unsigned({reg298,
                          (8'ha7)}))));
              reg326 <= wire186[(2'h3):(1'h1)];
              reg327 <= ($unsigned((~^reg189)) != reg229[(3'h7):(3'h6)]);
            end
          for (forvar328 = (1'h0); (forvar328 < (2'h3)); forvar328 = (forvar328 + (1'h1)))
            begin
              reg329 <= ({($signed($unsigned(reg300)) & (~^{(8'hb8), reg229})),
                  {{(forvar328 ? reg239 : reg284)}}} && reg262);
              reg330 = $signed(wire185);
              reg331 <= $unsigned((reg285 ^ $signed((^~$signed(forvar294)))));
            end
        end
      reg332 <= $unsigned((($unsigned((^~reg299)) <<< reg232) ?
          forvar306[(3'h4):(1'h1)] : ($signed(reg303) ?
              wire187 : {(+forvar306), $unsigned(wire184)})));
    end
  assign wire333 = (8'haa);
  module334 #() modinst359 (wire358, clk, reg197, reg208, wire258, reg237, reg219);
  assign wire360 = reg189;
  assign wire361 = (wire184[(3'h5):(3'h5)] ?
                       (&($unsigned({reg331}) <= ((reg262 * reg217) ?
                           $signed(reg314) : (reg215 || reg311)))) : (!(~$signed($signed((8'ha5))))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire10, wire9, wire8, wire7, wire6);
  output wire [(32'hfa):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire10;
  input wire [(5'h11):(1'h0)] wire9;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(5'h11):(1'h0)] wire7;
  input wire signed [(5'h15):(1'h0)] wire6;
  wire signed [(5'h13):(1'h0)] wire157;
  wire signed [(4'h8):(1'h0)] wire70;
  wire signed [(4'hd):(1'h0)] wire69;
  wire [(4'hf):(1'h0)] wire68;
  wire signed [(4'hc):(1'h0)] wire66;
  wire signed [(5'h14):(1'h0)] wire22;
  wire signed [(4'hc):(1'h0)] wire21;
  wire [(5'h14):(1'h0)] wire20;
  wire [(5'h14):(1'h0)] wire19;
  wire signed [(5'h14):(1'h0)] wire18;
  wire signed [(4'hd):(1'h0)] wire17;
  wire signed [(4'hd):(1'h0)] wire16;
  wire [(5'h13):(1'h0)] wire15;
  wire [(5'h13):(1'h0)] wire14;
  wire signed [(4'h8):(1'h0)] wire13;
  wire [(3'h7):(1'h0)] wire12;
  wire signed [(4'hb):(1'h0)] wire11;
  assign y = {wire157,
                 wire70,
                 wire69,
                 wire68,
                 wire66,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 (1'h0)};
  assign wire11 = ((wire7 <= ((^~$unsigned(wire8)) ?
                          (wire6 == ((7'h42) & wire9)) : ($signed((8'hb5)) ?
                              {wire8} : wire8))) ?
                      $unsigned($signed(wire7)) : $unsigned((wire8[(1'h1):(1'h1)] ?
                          $signed($signed(wire6)) : (wire10[(2'h3):(2'h2)] || (wire6 | wire7)))));
  assign wire12 = (~$unsigned(((((8'hbf) ?
                          wire9 : (8'ha7)) < wire11[(3'h4):(1'h0)]) ?
                      ((!wire9) ?
                          $signed(wire8) : (wire10 & (7'h41))) : $signed((wire10 ?
                          wire8 : wire7)))));
  assign wire13 = $signed((({wire9} ?
                          wire6 : ($unsigned(wire11) ?
                              $unsigned(wire9) : $unsigned(wire11))) ?
                      ({wire8[(4'h9):(2'h2)]} & wire11[(4'ha):(1'h0)]) : ($signed((wire7 ?
                              wire8 : wire6)) ?
                          {(wire9 >>> (8'hbe)),
                              {(8'hb5)}} : wire8[(2'h3):(1'h0)])));
  assign wire14 = (wire7 ?
                      {({(wire7 ? wire10 : wire6)} ?
                              ((!wire12) ? wire13 : (~wire6)) : {wire6,
                                  (wire9 < wire9)})} : (-wire12[(3'h4):(3'h4)]));
  assign wire15 = (+(&$unsigned(((!wire10) ?
                      $signed(wire12) : (wire7 ? wire6 : wire11)))));
  assign wire16 = $signed($unsigned(wire10[(1'h0):(1'h0)]));
  assign wire17 = $signed((~&(~wire12)));
  assign wire18 = wire16;
  assign wire19 = wire9;
  assign wire20 = $unsigned($unsigned(($unsigned($signed(wire6)) ?
                      {wire17, $signed(wire17)} : $signed((wire7 ?
                          wire16 : wire19)))));
  assign wire21 = ((&((wire18[(4'hc):(3'h6)] << (wire18 > wire14)) < wire20[(1'h1):(1'h1)])) ?
                      wire6[(5'h12):(5'h12)] : wire11);
  assign wire22 = (&$signed((($signed(wire9) >= wire11[(2'h3):(2'h2)]) <<< ((wire21 <= wire13) ?
                      wire8 : {wire10}))));
  module23 #() modinst67 (wire66, clk, wire6, wire7, wire15, wire12);
  assign wire68 = $signed(((~&wire16) ?
                      $unsigned($unsigned(wire6)) : wire21[(2'h3):(2'h3)]));
  assign wire69 = wire11;
  assign wire70 = $unsigned(wire66[(3'h4):(1'h1)]);
  module71 #() modinst158 (wire157, clk, wire7, wire22, wire69, wire13);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module71
#(parameter param155 = (((~^((!(8'ha9)) >> ((8'hb3) ? (8'ha9) : (8'hb4)))) ? ({((8'haa) ^~ (8'hb5))} ^~ (((8'hb7) ? (8'ha4) : (8'ha5)) * ((8'hae) << (8'hba)))) : ((((8'hb5) && (7'h42)) ? ((7'h43) ? (8'ha4) : (8'h9c)) : ((8'h9f) ? (8'haa) : (7'h41))) ? {(~&(8'hbe))} : ({(8'hba)} && (|(8'hb1))))) + (({(+(8'hab))} > {((8'h9f) || (8'ha5)), ((8'hbb) ? (8'hab) : (8'hab))}) ? ((((8'hbb) ~^ (8'ha0)) > ((8'haf) ^ (7'h44))) ? ((-(8'hb3)) ? ((8'ha6) & (8'ha7)) : {(8'hb9)}) : (((8'ha5) ? (8'ha7) : (8'hab)) || {(8'hbb), (8'hbf)})) : (!(~(^(8'ha8)))))), 
parameter param156 = (~^(~^(-param155))))
(y, clk, wire75, wire74, wire73, wire72);
  output wire [(32'h376):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h11):(1'h0)] wire75;
  input wire [(5'h14):(1'h0)] wire74;
  input wire [(4'hd):(1'h0)] wire73;
  input wire [(4'h8):(1'h0)] wire72;
  wire [(2'h2):(1'h0)] wire154;
  wire signed [(3'h6):(1'h0)] wire153;
  wire signed [(5'h12):(1'h0)] wire152;
  wire signed [(2'h2):(1'h0)] wire151;
  wire signed [(3'h5):(1'h0)] wire120;
  wire [(4'h9):(1'h0)] wire119;
  wire signed [(3'h5):(1'h0)] wire118;
  wire signed [(5'h13):(1'h0)] wire117;
  wire signed [(2'h2):(1'h0)] wire101;
  wire [(4'he):(1'h0)] wire100;
  wire [(3'h7):(1'h0)] wire99;
  wire signed [(5'h14):(1'h0)] wire82;
  wire signed [(4'h8):(1'h0)] wire81;
  wire [(2'h3):(1'h0)] wire80;
  wire [(2'h2):(1'h0)] wire79;
  wire signed [(5'h10):(1'h0)] wire78;
  wire [(4'he):(1'h0)] wire77;
  wire [(4'hf):(1'h0)] wire76;
  reg signed [(4'h8):(1'h0)] reg149 = (1'h0);
  reg [(3'h5):(1'h0)] reg147 = (1'h0);
  reg [(2'h2):(1'h0)] reg145 = (1'h0);
  reg [(3'h4):(1'h0)] reg144 = (1'h0);
  reg [(2'h3):(1'h0)] reg143 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg141 = (1'h0);
  reg [(5'h10):(1'h0)] reg139 = (1'h0);
  reg [(2'h2):(1'h0)] reg134 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg132 = (1'h0);
  reg signed [(4'he):(1'h0)] reg129 = (1'h0);
  reg [(5'h15):(1'h0)] reg124 = (1'h0);
  reg [(4'hb):(1'h0)] reg107 = (1'h0);
  reg [(4'h8):(1'h0)] reg102 = (1'h0);
  reg [(2'h2):(1'h0)] reg116 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg114 = (1'h0);
  reg [(4'ha):(1'h0)] reg113 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg106 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg104 = (1'h0);
  reg [(4'ha):(1'h0)] reg103 = (1'h0);
  reg [(4'hc):(1'h0)] reg95 = (1'h0);
  reg [(5'h10):(1'h0)] reg94 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg92 = (1'h0);
  reg [(4'hb):(1'h0)] reg90 = (1'h0);
  reg [(4'hf):(1'h0)] reg87 = (1'h0);
  reg [(5'h13):(1'h0)] reg86 = (1'h0);
  reg [(4'hb):(1'h0)] reg150 = (1'h0);
  reg [(5'h14):(1'h0)] reg148 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar146 = (1'h0);
  reg [(4'hd):(1'h0)] forvar142 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg140 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg138 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg137 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg136 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar135 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar133 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg131 = (1'h0);
  reg [(3'h7):(1'h0)] reg130 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar128 = (1'h0);
  reg signed [(4'he):(1'h0)] reg127 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg126 = (1'h0);
  reg [(5'h15):(1'h0)] reg125 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg123 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar122 = (1'h0);
  reg [(3'h5):(1'h0)] forvar121 = (1'h0);
  reg [(5'h11):(1'h0)] reg115 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar114 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar115 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg112 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg111 = (1'h0);
  reg [(3'h5):(1'h0)] reg110 = (1'h0);
  reg [(3'h6):(1'h0)] reg109 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg108 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar107 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg105 = (1'h0);
  reg [(4'hc):(1'h0)] forvar102 = (1'h0);
  reg [(4'h9):(1'h0)] reg98 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg97 = (1'h0);
  reg [(4'h8):(1'h0)] forvar96 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg93 = (1'h0);
  reg [(4'hc):(1'h0)] forvar91 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg89 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar88 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar85 = (1'h0);
  reg [(3'h6):(1'h0)] forvar84 = (1'h0);
  reg [(4'hd):(1'h0)] reg83 = (1'h0);
  assign y = {wire154,
                 wire153,
                 wire152,
                 wire151,
                 wire120,
                 wire119,
                 wire118,
                 wire117,
                 wire101,
                 wire100,
                 wire99,
                 wire82,
                 wire81,
                 wire80,
                 wire79,
                 wire78,
                 wire77,
                 wire76,
                 reg149,
                 reg147,
                 reg145,
                 reg144,
                 reg143,
                 reg141,
                 reg139,
                 reg134,
                 reg132,
                 reg129,
                 reg124,
                 reg107,
                 reg102,
                 reg116,
                 reg114,
                 reg113,
                 reg106,
                 reg104,
                 reg103,
                 reg95,
                 reg94,
                 reg92,
                 reg90,
                 reg87,
                 reg86,
                 reg150,
                 reg148,
                 forvar146,
                 forvar142,
                 reg140,
                 reg138,
                 reg137,
                 reg136,
                 forvar135,
                 forvar133,
                 reg131,
                 reg130,
                 forvar128,
                 reg127,
                 reg126,
                 reg125,
                 reg123,
                 forvar122,
                 forvar121,
                 reg115,
                 forvar114,
                 forvar115,
                 reg112,
                 reg111,
                 reg110,
                 reg109,
                 reg108,
                 forvar107,
                 reg105,
                 forvar102,
                 reg98,
                 reg97,
                 forvar96,
                 reg93,
                 forvar91,
                 reg89,
                 forvar88,
                 forvar85,
                 forvar84,
                 reg83,
                 (1'h0)};
  assign wire76 = (-wire74);
  assign wire77 = $signed(wire73);
  assign wire78 = ($signed({wire75[(5'h10):(4'h8)]}) || {((8'hbb) ?
                          $signed((wire77 ?
                              wire75 : wire74)) : (wire76 <= $signed(wire76))),
                      (8'hbc)});
  assign wire79 = wire74;
  assign wire80 = wire74[(4'hb):(1'h1)];
  assign wire81 = $signed(wire78);
  assign wire82 = $signed({wire81[(2'h3):(1'h0)],
                      (((wire78 != (8'h9c)) ?
                              ((7'h42) ? wire78 : wire76) : $signed((8'hb7))) ?
                          {wire76[(4'hb):(1'h1)]} : $unsigned(wire77[(4'h9):(3'h6)]))});
  always
    @(posedge clk) begin
      reg83 = {$unsigned({((wire79 ? (8'hba) : wire74) ?
                  wire72[(2'h2):(1'h0)] : (wire76 | wire80))})};
      for (forvar84 = (1'h0); (forvar84 < (1'h1)); forvar84 = (forvar84 + (1'h1)))
        begin
          for (forvar85 = (1'h0); (forvar85 < (1'h0)); forvar85 = (forvar85 + (1'h1)))
            begin
              reg86 <= $signed(wire80[(1'h1):(1'h0)]);
              reg87 <= wire79;
            end
          for (forvar88 = (1'h0); (forvar88 < (2'h3)); forvar88 = (forvar88 + (1'h1)))
            begin
              reg89 = ($signed(wire82[(4'hf):(4'hc)]) >> $signed(wire78));
              reg90 <= wire73[(1'h1):(1'h0)];
            end
          for (forvar91 = (1'h0); (forvar91 < (1'h0)); forvar91 = (forvar91 + (1'h1)))
            begin
              reg92 <= wire77[(4'h8):(3'h5)];
              reg93 = (($unsigned(($signed((8'hb5)) ?
                  $unsigned(wire77) : wire81[(2'h3):(2'h2)])) > (^~(-wire75[(3'h5):(1'h0)]))) ^ $unsigned($signed(reg89)));
            end
          reg94 <= $signed($unsigned(((8'h9c) | (reg86 ?
              {(8'hb4)} : (~|forvar84)))));
          reg95 <= (|(-(!$signed($unsigned(reg89)))));
        end
      for (forvar96 = (1'h0); (forvar96 < (2'h3)); forvar96 = (forvar96 + (1'h1)))
        begin
          reg97 = $signed(((wire76[(2'h2):(1'h1)] >>> wire73[(4'hb):(2'h3)]) ?
              reg87 : $unsigned(((reg93 && wire78) || {reg87, reg94}))));
          reg98 = reg92[(4'hb):(4'hb)];
        end
    end
  assign wire99 = (8'haa);
  assign wire100 = ($unsigned(((^$unsigned(wire78)) ?
                           (!$unsigned(reg92)) : {(^wire99),
                               $unsigned(wire75)})) ?
                       reg90[(1'h0):(1'h0)] : (-{reg95}));
  assign wire101 = $signed((^reg92[(4'hc):(3'h5)]));
  always
    @(posedge clk) begin
      if ($signed(((^~{wire74[(3'h4):(1'h0)]}) <= ($unsigned(wire79) ?
          ($unsigned(reg92) <= {reg86,
              wire77}) : ($unsigned(wire74) != reg92)))))
        begin
          for (forvar102 = (1'h0); (forvar102 < (1'h0)); forvar102 = (forvar102 + (1'h1)))
            begin
              reg103 <= $signed({$signed(reg95[(4'h8):(2'h2)]),
                  wire80[(2'h3):(2'h3)]});
              reg104 <= reg94[(4'hc):(2'h3)];
              reg105 = $signed((^~{(&reg95), {(&wire101)}}));
              reg106 <= ($signed(($unsigned((wire81 || reg95)) ?
                      $unsigned((&reg94)) : (|wire81[(3'h5):(3'h5)]))) ?
                  wire82[(4'hc):(2'h3)] : $signed($unsigned(wire79)));
            end
          for (forvar107 = (1'h0); (forvar107 < (2'h2)); forvar107 = (forvar107 + (1'h1)))
            begin
              reg108 = {reg90[(1'h1):(1'h0)],
                  ({$unsigned($signed(wire101))} | ($unsigned(((8'ha6) < forvar102)) ?
                      reg90 : forvar107[(3'h7):(2'h3)]))};
              reg109 = (!wire82[(1'h0):(1'h0)]);
              reg110 = {(reg103[(3'h5):(3'h5)] ?
                      (((wire75 ? (8'ha9) : wire81) == (wire74 ?
                          reg103 : wire75)) && (+$signed(wire78))) : ((&wire73) <= ($unsigned((8'hbc)) == wire100))),
                  $unsigned((~(-(~^(8'hae)))))};
              reg111 = $unsigned($signed($signed(((^(8'hb7)) ?
                  (wire73 < reg95) : (+reg92)))));
              reg112 = ($unsigned((+(~|(~^wire73)))) * reg106);
            end
          reg113 <= ({((+reg104[(3'h6):(2'h3)]) != (~|((8'ha9) == wire99))),
                  $unsigned((|reg111[(1'h0):(1'h0)]))} ?
              wire100[(3'h7):(1'h0)] : (($signed($unsigned((8'ha3))) >= (~|(forvar102 ?
                      reg112 : reg106))) ?
                  $signed($signed({reg90})) : $signed($unsigned((^wire74)))));
          reg114 <= (reg104[(1'h1):(1'h1)] ?
              ((((^~reg104) & reg90[(4'h8):(1'h1)]) ?
                      (reg108 ? {wire74} : {reg111}) : wire81) ?
                  ($signed((wire75 && reg95)) == $unsigned((~^reg95))) : $unsigned(((~&reg87) ?
                      {(8'hb2), (8'hbd)} : {(8'hb9)}))) : ($signed(reg105) ?
                  $signed((wire76 ?
                      wire73[(4'hd):(4'hb)] : $signed(reg87))) : wire80));
          for (forvar115 = (1'h0); (forvar115 < (2'h2)); forvar115 = (forvar115 + (1'h1)))
            begin
              reg116 <= (^(-(($unsigned(wire73) ? (~&reg111) : (^~(8'hbc))) ?
                  $signed($unsigned(reg95)) : reg111)));
            end
        end
      else
        begin
          if (wire74[(4'hc):(4'ha)])
            begin
              reg102 <= reg112;
              reg103 <= $signed($signed($unsigned(($unsigned(reg86) ?
                  (wire73 ? (8'hbc) : reg105) : wire79))));
              reg104 <= reg108[(4'hd):(1'h0)];
              reg106 <= (-(~$unsigned(((wire82 + reg114) ?
                  forvar107[(4'h8):(1'h0)] : reg94[(4'h8):(2'h3)]))));
            end
          else
            begin
              reg105 = (~&$unsigned((wire77 & $unsigned((&(8'hb4))))));
              reg106 <= forvar102;
              reg107 <= reg90[(1'h1):(1'h1)];
              reg113 <= ($signed((wire73 - $signed($signed(wire82)))) ?
                  ($signed($unsigned(reg112)) ?
                      ((7'h43) ?
                          (8'hb8) : {$unsigned(reg114)}) : $unsigned(reg110)) : reg110[(1'h0):(1'h0)]);
            end
          for (forvar114 = (1'h0); (forvar114 < (2'h2)); forvar114 = (forvar114 + (1'h1)))
            begin
              reg115 = (wire100 ?
                  {(forvar107 ?
                          $signed($unsigned(reg110)) : $signed(forvar107))} : reg113[(2'h2):(1'h1)]);
            end
        end
    end
  assign wire117 = reg104[(3'h4):(2'h2)];
  assign wire118 = (^wire77[(4'ha):(2'h2)]);
  assign wire119 = {(~&(8'ha1))};
  assign wire120 = wire73[(4'h9):(4'h8)];
  always
    @(posedge clk) begin
      for (forvar121 = (1'h0); (forvar121 < (2'h3)); forvar121 = (forvar121 + (1'h1)))
        begin
          for (forvar122 = (1'h0); (forvar122 < (2'h3)); forvar122 = (forvar122 + (1'h1)))
            begin
              reg123 = ($unsigned($signed((reg114 & $unsigned(reg103)))) ?
                  {(^(reg106[(5'h10):(5'h10)] ?
                          ((8'h9d) ?
                              reg102 : reg92) : (^wire119)))} : ($unsigned(reg116[(2'h2):(1'h1)]) >>> (~&$unsigned(reg95))));
              reg124 <= wire99;
              reg125 = $unsigned($unsigned(reg123));
              reg126 = (!$signed((forvar122 == {wire77, (reg113 && reg95)})));
              reg127 = {({$signed((&(8'h9d))), reg113} ?
                      wire72 : $unsigned($unsigned(((8'hbb) ?
                          reg106 : wire81)))),
                  wire82};
            end
          for (forvar128 = (1'h0); (forvar128 < (1'h1)); forvar128 = (forvar128 + (1'h1)))
            begin
              reg129 <= $unsigned(wire81);
              reg130 = (($unsigned({((8'ha1) ?
                      wire99 : wire75)}) >>> ((+wire99[(3'h7):(3'h7)]) ?
                  wire100[(4'h9):(4'h9)] : reg125)) + $signed(wire117[(4'h9):(3'h6)]));
              reg131 = ({reg113, reg127[(4'he):(4'h9)]} > ($signed((+wire75)) ?
                  (+$unsigned((!reg102))) : reg113[(3'h7):(3'h7)]));
              reg132 <= (~^$unsigned((reg113[(2'h2):(1'h0)] ^~ ((forvar122 ?
                      wire119 : wire81) ?
                  (reg94 | reg131) : $signed(forvar122)))));
            end
          for (forvar133 = (1'h0); (forvar133 < (2'h2)); forvar133 = (forvar133 + (1'h1)))
            begin
              reg134 <= (($unsigned(forvar128) ^ $unsigned(((reg132 <<< (7'h42)) ~^ (reg104 ?
                      wire119 : reg114)))) ?
                  wire76 : $unsigned(forvar121));
            end
          for (forvar135 = (1'h0); (forvar135 < (1'h1)); forvar135 = (forvar135 + (1'h1)))
            begin
              reg136 = $unsigned((reg130 && (8'ha4)));
              reg137 = $unsigned({reg132[(3'h5):(2'h2)],
                  (reg106 ~^ (+(forvar121 >> wire120)))});
              reg138 = (~(wire80 ?
                  (!(reg114[(3'h6):(3'h4)] ?
                      wire72 : $signed(reg124))) : $signed(reg129[(1'h0):(1'h0)])));
              reg139 <= reg138;
              reg140 = reg116[(1'h0):(1'h0)];
            end
          reg141 <= (-(reg104[(4'h9):(2'h2)] && (((reg140 == wire75) || {forvar135,
                  reg103}) ?
              ($signed(wire100) >> {(8'hba)}) : $signed((reg102 == wire99)))));
        end
      for (forvar142 = (1'h0); (forvar142 < (1'h0)); forvar142 = (forvar142 + (1'h1)))
        begin
          if ((($signed({(reg87 | reg125), {reg113}}) ?
                  ($unsigned((reg104 && (8'hb3))) ?
                      $unsigned(forvar133[(5'h10):(4'hf)]) : (8'hba)) : $unsigned(reg132)) ?
              $unsigned(reg139) : reg132[(1'h0):(1'h0)]))
            begin
              reg143 <= $unsigned((&reg136[(2'h2):(2'h2)]));
              reg144 <= ($unsigned((~$unsigned((~wire117)))) << (+$signed($signed((forvar128 ^ reg102)))));
            end
          else
            begin
              reg143 <= $signed($unsigned(wire76[(4'ha):(4'ha)]));
              reg144 <= ({$signed(((!wire74) ~^ reg139)),
                      (wire72[(1'h0):(1'h0)] ?
                          $signed((~|(8'hba))) : reg125[(3'h4):(1'h0)])} ?
                  $signed(reg140[(3'h4):(1'h1)]) : reg127);
              reg145 <= {(^reg144[(1'h0):(1'h0)])};
            end
          for (forvar146 = (1'h0); (forvar146 < (1'h0)); forvar146 = (forvar146 + (1'h1)))
            begin
              reg147 <= reg95[(1'h1):(1'h1)];
              reg148 = wire78;
            end
          reg149 <= reg114[(4'ha):(3'h7)];
          reg150 = reg132[(2'h3):(2'h3)];
        end
    end
  assign wire151 = (~|(reg134 ?
                       $unsigned(((reg104 ^~ reg149) >> (wire78 ?
                           reg104 : wire76))) : (((reg139 ~^ reg147) ?
                               (wire73 == wire79) : {wire72, wire79}) ?
                           ($unsigned(wire100) ?
                               (reg107 ?
                                   wire81 : reg147) : wire119) : $signed(reg144[(1'h1):(1'h1)]))));
  assign wire152 = (^$unsigned(wire100[(4'ha):(4'h8)]));
  assign wire153 = ($signed({(((8'hb8) ^ reg104) || (~wire73)),
                           reg124[(5'h12):(3'h5)]}) ?
                       ($unsigned(reg103[(4'h8):(2'h3)]) << {wire101[(1'h1):(1'h1)]}) : $signed(reg86));
  assign wire154 = $signed(wire78[(4'h8):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23  (y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'h1d6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire27;
  input wire [(3'h6):(1'h0)] wire26;
  input wire [(4'ha):(1'h0)] wire25;
  input wire [(3'h7):(1'h0)] wire24;
  wire [(3'h6):(1'h0)] wire65;
  wire [(4'hf):(1'h0)] wire64;
  wire [(4'hd):(1'h0)] wire63;
  wire [(3'h7):(1'h0)] wire36;
  wire signed [(5'h10):(1'h0)] wire35;
  wire signed [(3'h6):(1'h0)] wire34;
  wire signed [(2'h3):(1'h0)] wire33;
  wire [(4'he):(1'h0)] wire32;
  wire signed [(5'h15):(1'h0)] wire31;
  wire [(3'h4):(1'h0)] wire30;
  wire signed [(5'h10):(1'h0)] wire29;
  wire [(4'ha):(1'h0)] wire28;
  reg signed [(4'hf):(1'h0)] reg62 = (1'h0);
  reg [(4'hc):(1'h0)] reg61 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg58 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg55 = (1'h0);
  reg [(5'h11):(1'h0)] reg54 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg53 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg49 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg47 = (1'h0);
  reg [(4'hf):(1'h0)] reg46 = (1'h0);
  reg [(4'he):(1'h0)] reg44 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg42 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg41 = (1'h0);
  reg [(3'h4):(1'h0)] reg60 = (1'h0);
  reg [(5'h14):(1'h0)] forvar59 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg57 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg56 = (1'h0);
  reg signed [(4'he):(1'h0)] reg52 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg51 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar50 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg48 = (1'h0);
  reg [(4'hd):(1'h0)] forvar45 = (1'h0);
  reg [(4'hc):(1'h0)] forvar43 = (1'h0);
  reg [(4'hd):(1'h0)] reg40 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg39 = (1'h0);
  reg [(5'h12):(1'h0)] forvar38 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar37 = (1'h0);
  assign y = {wire65,
                 wire64,
                 wire63,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 reg62,
                 reg61,
                 reg58,
                 reg55,
                 reg54,
                 reg53,
                 reg49,
                 reg47,
                 reg46,
                 reg44,
                 reg42,
                 reg41,
                 reg60,
                 forvar59,
                 reg57,
                 reg56,
                 reg52,
                 reg51,
                 forvar50,
                 reg48,
                 forvar45,
                 forvar43,
                 reg40,
                 reg39,
                 forvar38,
                 forvar37,
                 (1'h0)};
  assign wire28 = wire27[(2'h3):(1'h1)];
  assign wire29 = wire24;
  assign wire30 = (({$signed((8'hbd)), $unsigned((^(7'h41)))} ?
                          (!$unsigned((wire25 ^~ wire29))) : wire27) ?
                      {(8'hb5)} : $unsigned(wire29));
  assign wire31 = (8'ha0);
  assign wire32 = $signed($signed(wire29[(4'hb):(2'h3)]));
  assign wire33 = wire25[(2'h3):(2'h2)];
  assign wire34 = wire31;
  assign wire35 = $signed(wire26[(1'h1):(1'h0)]);
  assign wire36 = wire25[(3'h4):(2'h3)];
  always
    @(posedge clk) begin
      for (forvar37 = (1'h0); (forvar37 < (3'h4)); forvar37 = (forvar37 + (1'h1)))
        begin
          for (forvar38 = (1'h0); (forvar38 < (2'h3)); forvar38 = (forvar38 + (1'h1)))
            begin
              reg39 = (((!(+wire28)) ~^ $unsigned($signed($signed(wire31)))) ?
                  (&wire30) : wire32);
              reg40 = $unsigned((8'h9d));
            end
          reg41 <= (+wire31[(5'h15):(3'h5)]);
          reg42 <= (!(wire29[(4'hd):(1'h0)] == $signed(wire27)));
        end
      for (forvar43 = (1'h0); (forvar43 < (1'h1)); forvar43 = (forvar43 + (1'h1)))
        begin
          reg44 <= ({$unsigned(reg42)} ?
              (+$unsigned((!wire35[(5'h10):(4'hc)]))) : ($signed((7'h42)) >>> wire30));
          for (forvar45 = (1'h0); (forvar45 < (2'h2)); forvar45 = (forvar45 + (1'h1)))
            begin
              reg46 <= $unsigned(((((wire30 ? reg39 : reg40) || {wire32,
                      wire25}) && reg42[(4'h8):(4'h8)]) ?
                  $unsigned($signed($unsigned(reg42))) : (((wire36 + wire29) && (reg42 && reg40)) ?
                      wire31 : (forvar43 < wire24[(3'h6):(3'h6)]))));
              reg47 <= {(~|wire27)};
              reg48 = $signed($signed((forvar37[(5'h13):(2'h3)] ?
                  wire29 : forvar45)));
              reg49 <= $signed((+$signed((+((8'hb4) == (8'hb7))))));
            end
          for (forvar50 = (1'h0); (forvar50 < (1'h1)); forvar50 = (forvar50 + (1'h1)))
            begin
              reg51 = ((wire33[(2'h3):(2'h3)] + ($unsigned((wire28 ?
                      (8'hab) : (8'ha7))) || $unsigned((wire36 <<< forvar43)))) ?
                  (~|{((!wire31) < $signed(wire31)),
                      {(wire26 ? wire31 : forvar50)}}) : (^reg47));
              reg52 = $signed(((wire31 ?
                      $signed((reg44 >= reg51)) : ((^(8'h9c)) ?
                          (forvar37 ? forvar43 : wire28) : reg49)) ?
                  (reg51 & wire27[(1'h1):(1'h0)]) : $unsigned($signed(((8'ha4) - wire36)))));
              reg53 <= $signed(wire26[(3'h4):(2'h2)]);
            end
          if (reg52)
            begin
              reg54 <= $signed(reg53);
              reg55 <= $signed(reg41[(4'ha):(2'h2)]);
              reg56 = wire32[(4'h9):(3'h5)];
              reg57 = (wire30[(2'h3):(1'h1)] ? (~|reg53) : {wire31});
              reg58 <= forvar38[(4'ha):(3'h4)];
            end
          else
            begin
              reg54 <= (reg58[(2'h3):(1'h0)] ?
                  reg46 : (~$signed($unsigned($signed(reg48)))));
            end
          for (forvar59 = (1'h0); (forvar59 < (2'h2)); forvar59 = (forvar59 + (1'h1)))
            begin
              reg60 = forvar45[(4'ha):(3'h4)];
              reg61 <= ($unsigned((^forvar50[(2'h3):(1'h1)])) >> forvar43[(3'h6):(3'h4)]);
              reg62 <= (!($unsigned((forvar59 ?
                  (reg48 > forvar43) : (wire26 ^~ reg51))) < $unsigned(reg49)));
            end
        end
    end
  assign wire63 = wire29[(3'h7):(3'h5)];
  assign wire64 = (wire35 - (!wire30));
  assign wire65 = {$unsigned({{$unsigned(wire31)},
                          ((|reg49) ? (wire25 ? reg53 : reg62) : (~reg47))})};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module334
#(parameter param357 = (((|(~(8'hb3))) ? (((~(8'ha8)) ? ((7'h40) <<< (7'h40)) : {(8'had)}) ? (&{(8'hb4), (8'h9e)}) : (((8'h9e) ? (7'h43) : (7'h43)) <= ((8'h9c) ? (8'haa) : (8'hb8)))) : {(((8'hb5) ? (8'ha5) : (7'h44)) ? {(7'h41), (7'h40)} : ((8'ha1) != (8'hb3))), (((7'h42) ? (8'hb4) : (8'hae)) | ((8'ha1) & (8'h9c)))}) ? (((~&((8'hae) >>> (8'hb9))) ? {{(8'hb4), (8'ha7)}, ((8'hbc) && (8'hb2))} : ((^(8'hb0)) > ((8'hb3) - (8'hac)))) ? ((((8'h9d) == (8'haf)) ? ((8'hb3) ? (7'h41) : (7'h43)) : (^~(8'hb1))) - ((|(8'hbb)) && ((7'h43) ? (8'hbf) : (8'hb3)))) : ((!{(8'hb0)}) >= ((~(8'hb6)) * ((8'ha4) ? (8'hae) : (8'ha9))))) : ((^~(((7'h40) + (8'ha9)) ? (~|(8'hb8)) : (~^(8'h9c)))) >= {(((8'hbf) * (8'h9d)) ? ((8'hb8) ? (8'had) : (7'h40)) : ((8'hbe) & (8'hb4))), (((7'h40) ? (7'h41) : (8'h9f)) ? (~^(8'hb4)) : ((7'h40) ? (8'ha5) : (8'ha2)))})))
(y, clk, wire339, wire338, wire337, wire336, wire335);
  output wire [(32'hb8):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hc):(1'h0)] wire339;
  input wire signed [(2'h3):(1'h0)] wire338;
  input wire signed [(3'h4):(1'h0)] wire337;
  input wire signed [(3'h6):(1'h0)] wire336;
  input wire [(2'h3):(1'h0)] wire335;
  wire [(4'hd):(1'h0)] wire356;
  wire signed [(5'h12):(1'h0)] wire342;
  wire signed [(3'h4):(1'h0)] wire341;
  wire signed [(4'h8):(1'h0)] wire340;
  reg [(5'h15):(1'h0)] reg355 = (1'h0);
  reg [(3'h7):(1'h0)] reg353 = (1'h0);
  reg [(4'ha):(1'h0)] reg350 = (1'h0);
  reg [(5'h11):(1'h0)] reg349 = (1'h0);
  reg [(4'hb):(1'h0)] reg347 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg345 = (1'h0);
  reg [(4'hc):(1'h0)] reg354 = (1'h0);
  reg [(2'h3):(1'h0)] reg352 = (1'h0);
  reg [(2'h2):(1'h0)] reg351 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg348 = (1'h0);
  reg [(3'h7):(1'h0)] forvar346 = (1'h0);
  reg [(5'h14):(1'h0)] reg344 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar343 = (1'h0);
  assign y = {wire356,
                 wire342,
                 wire341,
                 wire340,
                 reg355,
                 reg353,
                 reg350,
                 reg349,
                 reg347,
                 reg345,
                 reg354,
                 reg352,
                 reg351,
                 reg348,
                 forvar346,
                 reg344,
                 forvar343,
                 (1'h0)};
  assign wire340 = (wire339 ? {{wire339}, wire335} : wire338[(1'h1):(1'h1)]);
  assign wire341 = ((-wire340) && wire335[(2'h2):(2'h2)]);
  assign wire342 = wire337;
  always
    @(posedge clk) begin
      for (forvar343 = (1'h0); (forvar343 < (1'h0)); forvar343 = (forvar343 + (1'h1)))
        begin
          reg344 = $unsigned((wire339 ?
              {(wire335[(1'h0):(1'h0)] ?
                      wire335[(1'h0):(1'h0)] : (wire339 ? wire337 : wire335)),
                  (&(-forvar343))} : wire335[(2'h2):(1'h1)]));
          reg345 <= $unsigned((wire335[(1'h1):(1'h0)] ^ (~|(^((8'ha1) ?
              (7'h43) : wire336)))));
          for (forvar346 = (1'h0); (forvar346 < (2'h3)); forvar346 = (forvar346 + (1'h1)))
            begin
              reg347 <= ({((-{wire342, wire337}) && $unsigned({wire338})),
                  (8'hba)} + wire337[(1'h1):(1'h0)]);
              reg348 = (-(~|(reg344 ^ (~|$unsigned((8'h9c))))));
              reg349 <= ({(((wire342 ? wire338 : reg344) ?
                      wire342[(4'hb):(2'h2)] : reg345) & (reg348[(1'h0):(1'h0)] ?
                      (wire342 >> wire338) : $unsigned((8'had)))),
                  (!$signed($signed(wire338)))} != wire335);
              reg350 <= $unsigned({((~&wire340[(4'h8):(3'h6)]) ?
                      (~&{reg348}) : (wire340[(1'h0):(1'h0)] ?
                          $signed(forvar346) : forvar343)),
                  reg348});
              reg351 = (^{reg349,
                  (($signed(forvar346) ?
                      forvar343[(4'hf):(2'h3)] : ((8'hb3) ^~ wire336)) + wire337[(2'h2):(1'h1)])});
            end
          if ($unsigned(reg350[(3'h5):(1'h1)]))
            begin
              reg352 = $unsigned(wire337[(2'h3):(1'h0)]);
              reg353 <= {({wire340[(3'h5):(2'h3)]} ?
                      reg347[(3'h5):(2'h3)] : reg347)};
              reg354 = $unsigned(wire340);
              reg355 <= $signed($unsigned(reg349));
            end
          else
            begin
              reg352 = (({($unsigned(reg351) || $signed(reg345))} ?
                  wire338[(2'h2):(1'h1)] : $unsigned((7'h44))) | ({(~$unsigned(forvar343))} ?
                  reg350 : $signed($unsigned(reg347))));
              reg353 <= (^~(($signed((8'hbf)) <<< {reg353}) ?
                  $signed((~^$unsigned((8'hb0)))) : $signed(((reg354 <<< wire341) & (wire340 & wire340)))));
            end
        end
    end
  assign wire356 = ($signed(wire335) * (~^wire339));
endmodule