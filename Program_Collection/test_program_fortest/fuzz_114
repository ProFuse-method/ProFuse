(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire52;
  wire [(2'h3):(1'h0)] wire50;
  wire signed [(3'h7):(1'h0)] wire49;
  wire [(2'h2):(1'h0)] wire47;
  reg signed [(3'h6):(1'h0)] reg53 = (1'h0);
  assign y = {wire52, wire50, wire49, wire47, reg53, (1'h0)};
  module4 #() modinst48 (.y(wire47), .wire5(wire0), .clk(clk), .wire6(wire3), .wire8(wire1), .wire7(wire2));
  assign wire49 = $signed(($unsigned({(8'ha8)}) || (&(wire47 ^~ wire3))));
  module13 #() modinst51 (.wire15(wire3), .clk(clk), .wire14(wire1), .wire16(wire2), .wire17(wire49), .y(wire50));
  assign wire52 = wire1[(3'h6):(1'h1)];
  always
    @(posedge clk) begin
      reg53 <= $unsigned($signed($unsigned((|(8'hab)))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param46 = (&{((~^(8'had)) ? ((8'h9d) | (8'ha0)) : ((8'h9f) ? (8'ha4) : (8'haa)))}))
(y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire5;
  input wire signed [(4'h9):(1'h0)] wire6;
  input wire [(4'h8):(1'h0)] wire7;
  input wire signed [(4'hb):(1'h0)] wire8;
  wire [(4'h9):(1'h0)] wire45;
  wire signed [(4'hb):(1'h0)] wire44;
  wire [(3'h5):(1'h0)] wire43;
  wire [(3'h7):(1'h0)] wire42;
  wire [(4'h9):(1'h0)] wire41;
  wire signed [(2'h2):(1'h0)] wire40;
  wire [(4'h8):(1'h0)] wire9;
  wire signed [(3'h5):(1'h0)] wire11;
  wire signed [(3'h5):(1'h0)] wire12;
  wire [(2'h3):(1'h0)] wire38;
  reg [(4'h9):(1'h0)] reg10 = (1'h0);
  assign y = {wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire9,
                 wire11,
                 wire12,
                 wire38,
                 reg10,
                 (1'h0)};
  assign wire9 = (wire6 > $unsigned(((wire8 * wire8) >>> wire5)));
  always
    @(posedge clk) begin
      reg10 <= $signed((+{((8'ha0) ? (8'hb0) : wire6)}));
    end
  assign wire11 = $unsigned(($signed($unsigned((8'h9e))) ?
                      ((wire8 >= wire8) ^~ ((8'hac) - (8'h9e))) : (~^{wire8})));
  assign wire12 = wire8;
  module13 #() modinst39 (wire38, clk, reg10, wire9, wire11, wire5);
  assign wire40 = ($signed($signed((8'h9d))) ^~ ((~^wire6) ?
                      (|{wire8}) : ({wire12} ?
                          $signed(reg10) : (wire11 > wire8))));
  assign wire41 = $signed($signed(reg10));
  assign wire42 = reg10[(4'h9):(1'h1)];
  assign wire43 = reg10;
  assign wire44 = (+wire5[(2'h3):(1'h1)]);
  assign wire45 = {(&(wire12 <= wire12))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h8c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire17;
  input wire signed [(3'h7):(1'h0)] wire16;
  input wire signed [(2'h3):(1'h0)] wire15;
  input wire signed [(4'ha):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire30;
  wire [(3'h7):(1'h0)] wire29;
  wire [(3'h5):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire26;
  wire signed [(4'h8):(1'h0)] wire25;
  wire [(3'h6):(1'h0)] wire24;
  reg [(4'hb):(1'h0)] reg37 = (1'h0);
  reg [(2'h2):(1'h0)] reg36 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg34 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg33 = (1'h0);
  reg [(4'h8):(1'h0)] reg32 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg23 = (1'h0);
  reg [(4'hb):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg21 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg20 = (1'h0);
  reg [(4'h9):(1'h0)] reg19 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg18 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ((wire16[(3'h5):(1'h1)] && wire14))
        begin
          reg18 <= (&(8'h9f));
        end
      else
        begin
          reg18 <= ($signed((&wire15)) ? wire15[(2'h2):(1'h0)] : (8'ha2));
          reg19 <= reg18[(4'ha):(3'h4)];
        end
      reg20 <= (8'hab);
      reg21 <= wire15;
    end
  always
    @(posedge clk) begin
      reg22 <= reg19;
      reg23 <= $signed(reg19[(2'h3):(2'h2)]);
    end
  assign wire24 = $unsigned($signed((((8'ha3) ^~ reg20) ?
                      reg18 : (reg19 == reg22))));
  assign wire25 = (~&reg18[(3'h6):(3'h5)]);
  assign wire26 = (~(($signed(wire14) & (wire14 <<< wire17)) ?
                      {wire16} : ((wire15 + reg22) ?
                          (wire24 ? wire16 : (8'ha9)) : $unsigned(reg21))));
  assign wire27 = (8'h9f);
  assign wire28 = {(-reg18[(3'h4):(1'h0)])};
  assign wire29 = ((&(+(wire24 | wire27))) ?
                      $signed(wire27) : reg21[(1'h0):(1'h0)]);
  assign wire30 = ($unsigned(wire28[(3'h5):(3'h5)]) ^ (~|$unsigned((wire14 | reg23))));
  always
    @(posedge clk) begin
      if ((($unsigned($unsigned(wire28)) ?
              wire16 : ((wire16 || wire28) & (wire24 ~^ wire27))) ?
          ({(8'h9e)} ?
              wire14[(1'h1):(1'h1)] : (+wire16)) : (reg23[(2'h3):(1'h0)] ?
              reg19[(3'h7):(1'h0)] : (~|(wire24 != wire26)))))
        begin
          reg31 <= $signed(wire30[(2'h2):(2'h2)]);
          if (((({wire14} ? reg31 : (~|reg22)) ?
                  $unsigned((wire24 == reg18)) : (~(reg23 ~^ (8'hae)))) ?
              (reg31[(1'h0):(1'h0)] - (8'h9d)) : $signed((~^(wire15 > wire24)))))
            begin
              reg32 <= (~&(&$signed((+reg23))));
            end
          else
            begin
              reg32 <= (^((~^(^~reg31)) ?
                  (~|(wire27 ? (8'hac) : wire30)) : ($unsigned(wire27) ?
                      ((8'ha9) | (8'hac)) : $signed((8'had)))));
              reg33 <= (|({$unsigned(wire17)} ? wire17 : wire29));
            end
        end
      else
        begin
          if ((((((8'h9d) ? wire26 : wire27) ?
                  $unsigned(reg33) : $unsigned((8'ha6))) >>> (8'haa)) ?
              $unsigned(reg32) : reg21[(2'h2):(1'h1)]))
            begin
              reg31 <= ((^reg22[(3'h5):(3'h5)]) ~^ $signed({(reg33 ?
                      wire17 : reg33)}));
              reg32 <= {(reg18 ? $unsigned((reg19 >= reg31)) : wire27)};
              reg33 <= ((!(wire15[(2'h2):(1'h1)] ?
                      $signed(wire26) : reg23[(1'h1):(1'h1)])) ?
                  {wire28[(2'h3):(1'h0)]} : reg31[(2'h2):(1'h1)]);
            end
          else
            begin
              reg31 <= ({{((8'h9f) ? (8'ha2) : wire14)}} ?
                  reg20[(2'h2):(1'h1)] : (|$unsigned(wire26[(4'h8):(4'h8)])));
              reg32 <= (~&(8'ha2));
              reg33 <= reg22[(2'h2):(1'h0)];
            end
          reg34 <= (($signed(wire24[(3'h6):(3'h6)]) ?
              reg31 : ((8'h9f) ?
                  (~reg22) : reg33[(3'h6):(3'h4)])) && $unsigned(((reg32 - reg22) == $unsigned(reg31))));
          reg35 <= reg22[(2'h3):(2'h3)];
        end
      reg36 <= reg18;
      reg37 <= ((8'hac) == ((~$unsigned(wire27)) ? (^(~&reg34)) : (+(+reg35))));
    end
endmodule