(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h88):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire [(3'h7):(1'h0)] wire39;
  wire signed [(2'h3):(1'h0)] wire38;
  wire [(4'hb):(1'h0)] wire37;
  wire [(2'h2):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire19;
  wire signed [(2'h2):(1'h0)] wire18;
  wire signed [(3'h6):(1'h0)] wire16;
  reg [(3'h6):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg34 = (1'h0);
  reg [(3'h5):(1'h0)] reg33 = (1'h0);
  reg [(4'ha):(1'h0)] reg31 = (1'h0);
  reg [(4'ha):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg28 = (1'h0);
  reg [(3'h5):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg24 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg [(4'h9):(1'h0)] reg22 = (1'h0);
  reg [(4'h8):(1'h0)] reg21 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg20 = (1'h0);
  assign y = {wire39,
                 wire38,
                 wire37,
                 wire32,
                 wire19,
                 wire18,
                 wire16,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  module4 #() modinst17 (wire16, clk, wire0, wire1, wire3, wire2);
  assign wire18 = $unsigned(wire3[(3'h7):(3'h4)]);
  assign wire19 = wire1[(3'h7):(1'h1)];
  always
    @(posedge clk) begin
      reg20 <= wire1;
      reg21 <= wire3;
    end
  always
    @(posedge clk) begin
      if ((^($signed($unsigned((8'ha7))) | ($unsigned(wire18) ?
          {wire18} : (~|(8'ha4))))))
        begin
          if ($unsigned((-(-{(8'ha8)}))))
            begin
              reg22 <= $signed((($unsigned(wire16) ?
                      (wire2 ? wire16 : wire16) : {reg21}) ?
                  ($signed(reg20) << (^wire18)) : wire3));
              reg23 <= ({(~&wire16[(3'h4):(2'h3)])} ?
                  $unsigned((wire19 * (reg22 ?
                      wire18 : reg21))) : ($unsigned((&reg22)) <= {{reg21}}));
              reg24 <= ((|($signed(wire1) ^ (wire16 ?
                  wire3 : reg20))) != (wire2 >> wire1));
            end
          else
            begin
              reg22 <= $unsigned($unsigned(wire2[(3'h5):(3'h4)]));
            end
        end
      else
        begin
          reg22 <= reg24;
          if ($signed((((wire1 || wire18) ?
              reg23[(1'h1):(1'h1)] : $signed(wire0)) && $signed({(8'had)}))))
            begin
              reg23 <= reg23;
              reg24 <= (8'hac);
            end
          else
            begin
              reg23 <= (({wire2} ?
                  wire2[(4'hb):(4'hb)] : (~|(-reg23))) - ($signed({reg22}) > $unsigned($unsigned(reg24))));
              reg24 <= wire16;
              reg25 <= $signed({(8'hab)});
            end
        end
      reg26 <= ($signed($unsigned($unsigned(reg25))) ?
          $unsigned(($signed(reg21) ?
              (reg21 < wire2) : (reg22 ?
                  wire18 : wire2))) : $unsigned(wire0[(3'h5):(2'h2)]));
      if ((^($unsigned((wire1 - wire19)) ?
          (reg20 ?
              (wire0 ?
                  wire0 : reg25) : reg20[(1'h0):(1'h0)]) : $unsigned((reg21 ?
              reg22 : wire0)))))
        begin
          if ((+(wire16 ? wire16 : {(&wire0)})))
            begin
              reg27 <= $unsigned($unsigned((+$signed(wire19))));
            end
          else
            begin
              reg27 <= reg27;
              reg28 <= reg21[(3'h5):(3'h5)];
              reg29 <= $signed((+$signed({wire18})));
            end
          if (reg26[(3'h7):(3'h6)])
            begin
              reg30 <= $unsigned((|{reg25}));
              reg31 <= ($unsigned((wire0[(2'h3):(1'h0)] ~^ (~|reg23))) + ((((8'hac) >= reg24) ?
                      reg20[(2'h2):(1'h0)] : (wire0 >>> wire2)) ?
                  (8'h9d) : (reg25[(3'h5):(1'h0)] & $unsigned((8'ha1)))));
            end
          else
            begin
              reg30 <= $unsigned(($unsigned((8'h9c)) || $unsigned((reg24 ?
                  wire3 : (8'ha1)))));
              reg31 <= reg30[(2'h2):(1'h1)];
            end
        end
      else
        begin
          if ($unsigned(wire16))
            begin
              reg27 <= $unsigned(reg25);
              reg28 <= (~wire3[(1'h0):(1'h0)]);
            end
          else
            begin
              reg27 <= (-($signed($signed(wire19)) ?
                  $signed((8'hb0)) : wire19[(1'h0):(1'h0)]));
            end
        end
    end
  assign wire32 = reg24[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg33 <= ($unsigned(((^(8'had)) ? (^~reg30) : (&wire18))) ?
          reg26[(1'h0):(1'h0)] : reg24[(2'h3):(2'h2)]);
      if ($unsigned($signed($unsigned((reg27 >= (8'hac))))))
        begin
          reg34 <= ($unsigned((~^$signed(wire0))) ?
              (($signed(reg21) != wire18) << (^(-reg25))) : (wire1 ?
                  $unsigned((reg22 | wire0)) : (~|$unsigned(reg28))));
        end
      else
        begin
          if (wire2)
            begin
              reg34 <= (($signed((^reg31)) ?
                  (reg34[(2'h3):(2'h3)] ?
                      (+wire18) : ((8'h9c) ?
                          reg31 : wire16)) : ($signed(reg20) ?
                      reg22[(3'h6):(3'h6)] : ((8'h9e) >= wire32))) && wire19);
            end
          else
            begin
              reg34 <= (8'ha7);
            end
          reg35 <= ((~|({reg21} ?
              $signed(reg34) : (8'hab))) * ($signed(reg23[(2'h2):(2'h2)]) + ((reg23 <= wire19) & $signed(reg20))));
        end
      reg36 <= {(wire18 ? wire3 : reg27)};
    end
  assign wire37 = (reg24 ^ (((wire3 != (8'hb0)) ^~ {reg21}) >= ({wire3} ?
                      (reg36 >> reg36) : (reg21 ? reg28 : wire32))));
  assign wire38 = (reg36[(2'h2):(2'h2)] << reg30);
  assign wire39 = $signed(wire37[(1'h1):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param15 = (((-{(8'ha5)}) <<< (~&(!(8'ha6)))) >> (+(((8'ha6) > (8'hab)) ? ((8'had) ? (8'ha2) : (8'ha3)) : ((8'ha3) ? (8'ha1) : (8'haf))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h2b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(4'ha):(1'h0)] wire7;
  input wire [(2'h2):(1'h0)] wire6;
  input wire signed [(4'hb):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire14;
  wire signed [(2'h3):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire10;
  wire signed [(3'h6):(1'h0)] wire9;
  reg [(3'h7):(1'h0)] reg12 = (1'h0);
  reg [(4'hb):(1'h0)] reg11 = (1'h0);
  assign y = {wire14, wire13, wire10, wire9, reg12, reg11, (1'h0)};
  assign wire9 = wire7;
  assign wire10 = $unsigned(wire6);
  always
    @(posedge clk) begin
      reg11 <= (wire10 ? (^~(|wire9)) : wire8);
      reg12 <= (reg11 ?
          (~&$unsigned($signed(wire6))) : (((+wire7) ^ (wire6 != reg11)) ?
              ((~&wire5) ?
                  wire10[(2'h3):(1'h0)] : wire7[(1'h0):(1'h0)]) : $signed((&(8'had)))));
    end
  assign wire13 = wire9;
  assign wire14 = ($unsigned((|(wire6 ^ wire9))) > {((wire6 | wire8) | (+(8'h9f)))});
endmodule