(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h6f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire0;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire3;
  wire [(2'h3):(1'h0)] wire88;
  wire signed [(4'hb):(1'h0)] wire4;
  wire signed [(3'h4):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire6;
  wire signed [(3'h6):(1'h0)] wire7;
  wire signed [(2'h2):(1'h0)] wire73;
  wire [(2'h2):(1'h0)] wire75;
  wire signed [(3'h7):(1'h0)] wire76;
  wire signed [(4'h9):(1'h0)] wire77;
  wire [(4'ha):(1'h0)] wire85;
  wire [(3'h7):(1'h0)] wire86;
  reg signed [(4'h8):(1'h0)] reg78 = (1'h0);
  reg [(3'h7):(1'h0)] reg79 = (1'h0);
  reg [(2'h3):(1'h0)] reg80 = (1'h0);
  reg [(3'h6):(1'h0)] reg81 = (1'h0);
  reg [(4'hb):(1'h0)] reg82 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg83 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg84 = (1'h0);
  assign y = {wire88,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire73,
                 wire75,
                 wire76,
                 wire77,
                 wire85,
                 wire86,
                 reg78,
                 reg79,
                 reg80,
                 reg81,
                 reg82,
                 reg83,
                 reg84,
                 (1'h0)};
  assign wire4 = (wire3[(1'h0):(1'h0)] ? wire0 : (~|{wire3}));
  assign wire5 = (wire3 ?
                     $signed($unsigned((~&wire2))) : {((-wire1) ?
                             wire2[(2'h3):(2'h3)] : (+(8'haa)))});
  assign wire6 = (wire2 ? wire0 : $signed((|wire4[(1'h0):(1'h0)])));
  assign wire7 = wire2;
  module8 #() modinst74 (wire73, clk, wire3, wire0, wire2, wire1);
  assign wire75 = $signed(((~|(!wire7)) ?
                      ($unsigned((8'ha4)) && wire6) : wire2[(3'h5):(1'h1)]));
  assign wire76 = (8'h9c);
  assign wire77 = (!wire6[(3'h5):(1'h1)]);
  always
    @(posedge clk) begin
      reg78 <= wire6;
      if ((+wire0))
        begin
          reg79 <= {wire76[(2'h3):(2'h3)]};
        end
      else
        begin
          reg79 <= $signed($unsigned($signed((!wire0))));
          reg80 <= (8'hac);
        end
      if (reg80[(2'h2):(2'h2)])
        begin
          if ($unsigned(((^(wire75 & (8'ha0))) ~^ ((8'h9d) ?
              $unsigned(wire75) : {wire0}))))
            begin
              reg81 <= wire6;
            end
          else
            begin
              reg81 <= {($signed($unsigned(wire73)) && $unsigned((wire6 == wire3)))};
              reg82 <= $unsigned(wire3);
              reg83 <= $signed({wire6});
            end
          reg84 <= (($signed({wire3}) ? $unsigned(wire7) : wire1) ?
              ({(reg81 ? reg81 : wire0)} << {reg78}) : (($signed(reg79) ?
                      reg83 : wire77) ?
                  wire5[(3'h4):(2'h3)] : wire76));
        end
      else
        begin
          reg81 <= $unsigned(reg82);
          reg82 <= $unsigned((!wire4[(2'h2):(1'h1)]));
        end
    end
  assign wire85 = wire6[(2'h3):(2'h2)];
  module16 #() modinst87 (wire86, clk, reg81, wire3, wire85, wire4);
  assign wire88 = $signed((((wire86 < wire77) + (8'ha1)) >> $unsigned((reg80 ?
                      wire73 : wire85))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param72 = {{(&(~^(8'ha3)))}})
(y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire12;
  input wire [(4'hb):(1'h0)] wire11;
  input wire [(4'h9):(1'h0)] wire10;
  input wire [(4'h9):(1'h0)] wire9;
  wire [(4'ha):(1'h0)] wire71;
  wire [(4'h8):(1'h0)] wire70;
  wire signed [(3'h7):(1'h0)] wire68;
  wire [(4'ha):(1'h0)] wire44;
  wire signed [(4'ha):(1'h0)] wire43;
  wire signed [(2'h3):(1'h0)] wire41;
  wire signed [(3'h6):(1'h0)] wire15;
  wire signed [(4'hb):(1'h0)] wire14;
  wire signed [(2'h2):(1'h0)] wire13;
  assign y = {wire71,
                 wire70,
                 wire68,
                 wire44,
                 wire43,
                 wire41,
                 wire15,
                 wire14,
                 wire13,
                 (1'h0)};
  assign wire13 = $signed((8'haa));
  assign wire14 = wire13[(2'h2):(2'h2)];
  assign wire15 = ({($signed((8'hac)) * {wire12})} & ($unsigned($unsigned(wire13)) ?
                      wire13 : (^~wire13)));
  module16 #() modinst42 (.y(wire41), .wire20(wire10), .wire19(wire14), .wire17(wire11), .clk(clk), .wire18(wire15));
  assign wire43 = ((((wire10 ? wire14 : wire10) ? {wire41} : (^wire12)) ?
                          {(wire13 ?
                                  (8'hac) : wire12)} : {(wire14 != wire14)}) ?
                      (wire12[(2'h2):(1'h1)] || {(wire9 ?
                              wire41 : wire10)}) : $unsigned({$unsigned((8'ha0))}));
  assign wire44 = ((wire10[(4'h9):(3'h5)] <= ($signed(wire9) ?
                          (wire43 * wire43) : {wire12})) ?
                      $unsigned({$signed(wire9)}) : $signed((+(|wire12))));
  module45 #() modinst69 (.wire49(wire10), .wire47(wire12), .y(wire68), .clk(clk), .wire48(wire15), .wire46(wire44));
  assign wire70 = $signed((^(^~(wire44 ? wire12 : wire44))));
  assign wire71 = ((+$signed((wire44 & wire10))) | (wire11[(3'h7):(2'h3)] & $signed({wire43})));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module45
#(parameter param67 = (~((((8'ha8) >> (8'had)) ? {(8'haf)} : (~(8'h9f))) ? ((^(8'ha2)) * (~(8'hb0))) : (+((8'hae) > (8'ha9))))))
(y, clk, wire49, wire48, wire47, wire46);
  output wire [(32'h6e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire49;
  input wire [(2'h2):(1'h0)] wire48;
  input wire [(3'h6):(1'h0)] wire47;
  input wire signed [(4'ha):(1'h0)] wire46;
  wire [(4'ha):(1'h0)] wire66;
  wire signed [(4'h9):(1'h0)] wire53;
  wire signed [(4'h9):(1'h0)] wire52;
  wire [(3'h4):(1'h0)] wire51;
  wire [(3'h6):(1'h0)] wire50;
  reg [(2'h2):(1'h0)] reg65 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg64 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg63 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg62 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg61 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg60 = (1'h0);
  reg [(2'h3):(1'h0)] reg59 = (1'h0);
  reg [(2'h2):(1'h0)] reg58 = (1'h0);
  reg [(3'h6):(1'h0)] reg57 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg54 = (1'h0);
  assign y = {wire66,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 (1'h0)};
  assign wire50 = (wire46 ?
                      wire47[(3'h5):(1'h1)] : ({wire46} < $signed($unsigned(wire46))));
  assign wire51 = wire50;
  assign wire52 = $unsigned((wire49 ? (~&wire46) : $signed($signed(wire48))));
  assign wire53 = wire49;
  always
    @(posedge clk) begin
      reg54 <= $unsigned((wire47 * (~|(wire48 > wire53))));
      reg55 <= wire52;
    end
  always
    @(posedge clk) begin
      reg56 <= ((~&wire52) ^~ (8'h9e));
      reg57 <= (($signed(wire53[(4'h8):(1'h1)]) > $unsigned((reg54 - (8'hab)))) >> $signed($signed((|wire49))));
      if ((+wire51))
        begin
          reg58 <= $signed($signed($unsigned((~reg57))));
          reg59 <= $signed((8'h9e));
          reg60 <= reg56;
        end
      else
        begin
          if (wire50)
            begin
              reg58 <= ({((~(8'ha7)) ? reg56[(4'h9):(1'h1)] : reg60)} ?
                  reg58[(1'h1):(1'h0)] : reg59);
              reg59 <= $unsigned((&((reg54 ?
                  (8'had) : wire51) | $unsigned(reg59))));
              reg60 <= $unsigned(((!((8'hb0) ?
                  wire51 : wire50)) <<< $signed($signed(reg59))));
            end
          else
            begin
              reg58 <= {$signed($signed(wire48))};
            end
          reg61 <= (|(+(wire50 == (wire49 - reg59))));
        end
    end
  always
    @(posedge clk) begin
      reg62 <= ($unsigned($signed($signed(wire50))) >>> $unsigned($signed(wire52)));
      if (reg60[(2'h2):(2'h2)])
        begin
          if (wire53[(2'h2):(2'h2)])
            begin
              reg63 <= $signed($signed((reg60 & $unsigned(wire53))));
            end
          else
            begin
              reg63 <= reg61[(1'h1):(1'h1)];
              reg64 <= $unsigned((|$unsigned((~|reg60))));
            end
        end
      else
        begin
          reg63 <= ((reg57[(2'h2):(1'h0)] && (reg54 > wire49)) ?
              wire47[(3'h4):(3'h4)] : ($unsigned(reg56[(2'h3):(1'h0)]) ?
                  (wire50[(2'h2):(1'h1)] ?
                      $signed(reg64) : reg54) : (&$unsigned(reg61))));
          reg64 <= (^{reg64});
        end
      reg65 <= reg63;
    end
  assign wire66 = (|$unsigned(reg57));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16
#(parameter param40 = ({(^((8'hb0) ? (8'ha5) : (8'h9d)))} ? (((~(8'hab)) ^~ ((8'haa) ^ (8'ha2))) ? {((8'hac) | (8'ha9))} : ((^~(8'h9d)) ^ ((8'ha4) ? (8'haf) : (8'h9c)))) : {((~^(8'ha8)) ^~ (~^(8'ha3)))}))
(y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h64):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire20;
  input wire [(4'ha):(1'h0)] wire19;
  input wire signed [(2'h2):(1'h0)] wire18;
  input wire [(4'hb):(1'h0)] wire17;
  wire signed [(2'h2):(1'h0)] wire39;
  wire signed [(2'h2):(1'h0)] wire38;
  wire signed [(3'h6):(1'h0)] wire37;
  wire [(3'h7):(1'h0)] wire36;
  wire signed [(3'h7):(1'h0)] wire35;
  wire [(3'h4):(1'h0)] wire34;
  wire [(4'hb):(1'h0)] wire31;
  wire [(3'h4):(1'h0)] wire30;
  wire signed [(3'h7):(1'h0)] wire29;
  wire [(3'h7):(1'h0)] wire28;
  wire [(3'h7):(1'h0)] wire21;
  reg [(3'h4):(1'h0)] reg33 = (1'h0);
  reg [(2'h2):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg26 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg25 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg23 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg22 = (1'h0);
  assign y = {wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire21,
                 reg33,
                 reg32,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire21 = wire18;
  always
    @(posedge clk) begin
      if ($unsigned(wire19))
        begin
          reg22 <= $unsigned((wire18[(1'h0):(1'h0)] ?
              ($unsigned(wire18) ?
                  (wire21 ? wire18 : wire18) : wire17) : ((wire18 ?
                  wire21 : wire18) && $unsigned(wire21))));
          if (((&$unsigned($signed(wire18))) ?
              (wire18 & (wire20[(2'h3):(1'h1)] != (~(8'ha1)))) : ($signed($unsigned(reg22)) ?
                  $unsigned((&wire19)) : (^(~|wire20)))))
            begin
              reg23 <= ((!$unsigned((wire20 >> wire20))) ?
                  $signed(((wire18 >>> wire20) ?
                      $unsigned(wire20) : wire20[(3'h5):(2'h2)])) : {(|wire18[(2'h2):(1'h0)])});
              reg24 <= (&$unsigned($signed((reg23 <<< reg23))));
              reg25 <= (wire17[(1'h0):(1'h0)] ?
                  (wire18 ?
                      ((wire17 + wire21) ?
                          {wire21} : $unsigned(wire18)) : $signed({wire17})) : reg22[(3'h4):(2'h3)]);
            end
          else
            begin
              reg23 <= {(|$unsigned($signed(reg23)))};
              reg24 <= wire19;
            end
          reg26 <= (reg25[(2'h3):(2'h3)] >= reg23);
        end
      else
        begin
          reg22 <= $unsigned($unsigned(((8'h9c) ?
              wire17 : (reg23 ? wire21 : wire18))));
        end
      reg27 <= reg23[(1'h1):(1'h1)];
    end
  assign wire28 = (({(wire18 ?
                          wire17 : wire18)} >> (!reg23[(1'h1):(1'h1)])) || (reg27 ?
                      $unsigned(wire19) : ($signed(reg22) >> $unsigned(reg22))));
  assign wire29 = (!$unsigned(($unsigned((8'hac)) ?
                      reg22 : (reg26 ? (8'h9e) : reg25))));
  assign wire30 = (~&(((reg24 & (8'ha6)) * (reg22 ?
                      (8'ha2) : reg24)) > ($signed(wire19) ?
                      (wire20 ? wire19 : wire17) : (8'ha7))));
  assign wire31 = (^((~|((8'hab) - (8'ha6))) ?
                      $unsigned($unsigned(reg27)) : ((reg25 || (8'ha0)) ?
                          $unsigned((8'ha3)) : (~^reg22))));
  always
    @(posedge clk) begin
      reg32 <= ((reg22[(2'h3):(1'h0)] == wire31) < ({$signed(wire17)} ?
          $signed($signed(wire31)) : {wire20[(3'h6):(3'h4)]}));
      reg33 <= {($unsigned((^~wire31)) | (wire31 ^~ ((8'ha5) ?
              wire28 : reg27)))};
    end
  assign wire34 = $unsigned(((+{wire31}) ? reg26 : wire19[(3'h5):(3'h5)]));
  assign wire35 = reg23;
  assign wire36 = reg33[(3'h4):(2'h3)];
  assign wire37 = ($unsigned(reg26[(1'h1):(1'h1)]) <<< {reg27[(3'h6):(1'h1)]});
  assign wire38 = wire19[(4'h9):(1'h1)];
  assign wire39 = $signed((reg26[(1'h1):(1'h0)] ?
                      $signed($signed((8'hac))) : wire29));
endmodule