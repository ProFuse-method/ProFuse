(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param71 = ((({(8'hb0)} ? ((8'ha2) | (8'haf)) : (~&(8'haf))) ? ((~(8'ha4)) ? (8'hb0) : ((8'ha3) ? (8'ha7) : (8'ha3))) : (^((8'haf) + (8'hb0)))) ? (~&(((8'hac) - (8'hae)) ? (~&(8'haa)) : ((8'ha8) ~^ (8'haa)))) : (-(8'hab))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h64):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire70;
  wire signed [(2'h2):(1'h0)] wire69;
  wire signed [(4'ha):(1'h0)] wire68;
  wire [(2'h2):(1'h0)] wire67;
  wire [(4'hb):(1'h0)] wire65;
  wire signed [(3'h7):(1'h0)] wire32;
  wire signed [(4'hb):(1'h0)] wire30;
  wire [(4'h8):(1'h0)] wire29;
  wire signed [(4'hb):(1'h0)] wire27;
  wire signed [(4'hb):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire4;
  reg signed [(4'hb):(1'h0)] reg31 = (1'h0);
  assign y = {wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire65,
                 wire32,
                 wire30,
                 wire29,
                 wire27,
                 wire5,
                 wire4,
                 reg31,
                 (1'h0)};
  assign wire4 = wire3[(3'h5):(1'h0)];
  assign wire5 = {(~wire4)};
  module6 #() modinst28 (wire27, clk, wire3, wire1, wire5, wire4);
  assign wire29 = $unsigned((~((wire27 != wire3) ?
                      $unsigned(wire4) : $unsigned((8'h9d)))));
  assign wire30 = (&wire5);
  always
    @(posedge clk) begin
      reg31 <= wire29[(3'h4):(1'h1)];
    end
  assign wire32 = {$signed($signed((~&(8'ha2))))};
  module33 #() modinst66 (.y(wire65), .wire36(wire5), .clk(clk), .wire37(wire30), .wire34(wire1), .wire35(wire0));
  assign wire67 = $signed($unsigned(wire2[(2'h2):(2'h2)]));
  assign wire68 = {$signed(wire3)};
  assign wire69 = (^~(8'haa));
  assign wire70 = wire5;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module33
#(parameter param64 = (((&((8'ha4) >> (8'haf))) - ((|(8'ha4)) ? {(8'haa)} : {(8'hae)})) ? {{(|(8'h9d))}} : (((~|(8'h9c)) ? ((8'ha6) || (8'ha7)) : (8'hab)) * (!{(8'ha6)}))))
(y, clk, wire37, wire36, wire35, wire34);
  output wire [(32'h39):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire37;
  input wire [(4'h8):(1'h0)] wire36;
  input wire [(3'h4):(1'h0)] wire35;
  input wire [(3'h6):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire63;
  wire [(4'ha):(1'h0)] wire61;
  wire [(3'h6):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire39;
  wire signed [(2'h2):(1'h0)] wire38;
  reg [(4'h9):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg42 = (1'h0);
  reg [(3'h7):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  assign y = {wire63,
                 wire61,
                 wire44,
                 wire39,
                 wire38,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 (1'h0)};
  assign wire38 = $signed((~&$signed((wire34 ? wire37 : wire37))));
  assign wire39 = wire37;
  always
    @(posedge clk) begin
      reg40 <= (8'haa);
      if ((~(~&(&(~|wire35)))))
        begin
          reg41 <= $unsigned((~&wire39));
        end
      else
        begin
          if (wire39)
            begin
              reg41 <= wire37[(3'h5):(2'h3)];
            end
          else
            begin
              reg41 <= $signed(((&(wire39 ? wire36 : wire36)) ?
                  {wire36} : ((wire39 ? wire35 : reg40) ?
                      wire36[(3'h7):(1'h1)] : wire36[(2'h2):(2'h2)])));
              reg42 <= wire34;
            end
        end
      reg43 <= $unsigned(((^$signed(reg40)) + wire34));
    end
  assign wire44 = (8'ha3);
  module45 #() modinst62 (wire61, clk, reg43, wire44, reg41, wire37);
  assign wire63 = (wire61 >= reg40[(3'h5):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire10;
  input wire [(3'h7):(1'h0)] wire9;
  input wire [(3'h7):(1'h0)] wire8;
  input wire [(3'h7):(1'h0)] wire7;
  wire signed [(3'h4):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire25;
  wire [(3'h5):(1'h0)] wire24;
  wire [(3'h5):(1'h0)] wire23;
  wire signed [(4'h9):(1'h0)] wire22;
  wire [(3'h5):(1'h0)] wire20;
  wire [(4'h8):(1'h0)] wire19;
  wire signed [(2'h2):(1'h0)] wire18;
  wire signed [(2'h2):(1'h0)] wire11;
  reg [(4'h9):(1'h0)] reg21 = (1'h0);
  reg [(4'h9):(1'h0)] reg17 = (1'h0);
  reg [(4'hb):(1'h0)] reg16 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg15 = (1'h0);
  reg [(2'h3):(1'h0)] reg14 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg12 = (1'h0);
  assign y = {wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire20,
                 wire19,
                 wire18,
                 wire11,
                 reg21,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 (1'h0)};
  assign wire11 = wire10[(1'h1):(1'h0)];
  always
    @(posedge clk) begin
      if ((8'hae))
        begin
          reg12 <= $signed($unsigned($signed((wire9 ^~ wire7))));
        end
      else
        begin
          reg12 <= wire8;
          reg13 <= {$signed(wire10[(1'h0):(1'h0)])};
          if ($signed(wire11[(1'h1):(1'h1)]))
            begin
              reg14 <= wire11[(1'h0):(1'h0)];
              reg15 <= $signed($unsigned(($unsigned(reg14) ?
                  (wire7 ? reg12 : (8'ha3)) : (!wire7))));
              reg16 <= wire11;
            end
          else
            begin
              reg14 <= ((({wire7} ? wire9[(2'h2):(1'h0)] : wire9) ?
                  wire9 : {$signed((8'ha0))}) < wire11[(1'h0):(1'h0)]);
              reg15 <= ((wire8 ~^ reg16[(1'h1):(1'h0)]) & wire8[(3'h4):(3'h4)]);
              reg16 <= (wire7[(1'h0):(1'h0)] ?
                  reg16[(4'ha):(1'h1)] : reg14[(1'h1):(1'h1)]);
            end
        end
      reg17 <= $unsigned($signed((!{wire7})));
    end
  assign wire18 = wire8;
  assign wire19 = ({(8'haa)} <= (((wire11 ? (8'ha4) : (8'ha8)) ?
                      $signed(reg12) : (-reg16)) >>> $signed((wire11 ^ (8'ha1)))));
  assign wire20 = ((&({reg14} ?
                      reg16 : (reg12 >= reg15))) << $unsigned(wire19));
  always
    @(posedge clk) begin
      reg21 <= (~^$signed(wire11[(1'h1):(1'h0)]));
    end
  assign wire22 = (wire11 ?
                      wire10[(2'h2):(1'h0)] : ($unsigned((8'ha5)) ?
                          ((reg12 ^ reg12) ?
                              (~^wire7) : (wire10 <= wire19)) : ((!reg15) > (|wire19))));
  assign wire23 = (reg12 ?
                      $signed(($signed(wire8) ?
                          wire7[(1'h0):(1'h0)] : reg13[(1'h1):(1'h0)])) : (wire11[(1'h0):(1'h0)] >> $unsigned((wire20 & wire9))));
  assign wire24 = $signed(($unsigned((~&wire7)) ~^ ((reg21 > wire22) ?
                      $unsigned(wire18) : $signed((8'h9f)))));
  assign wire25 = $signed((+(wire22 == $unsigned(wire8))));
  assign wire26 = (wire22[(2'h2):(1'h1)] ?
                      (+wire8) : ($unsigned((+reg14)) * (wire18[(1'h0):(1'h0)] ?
                          (wire10 ? (8'ha0) : wire7) : $unsigned((8'h9f)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module45  (y, clk, wire49, wire48, wire47, wire46);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire49;
  input wire signed [(3'h6):(1'h0)] wire48;
  input wire signed [(3'h7):(1'h0)] wire47;
  input wire [(4'hb):(1'h0)] wire46;
  wire signed [(4'h9):(1'h0)] wire56;
  wire signed [(3'h5):(1'h0)] wire55;
  wire signed [(3'h7):(1'h0)] wire54;
  wire [(4'h9):(1'h0)] wire53;
  wire [(4'hb):(1'h0)] wire52;
  wire [(4'h8):(1'h0)] wire51;
  wire signed [(3'h4):(1'h0)] wire50;
  reg signed [(4'ha):(1'h0)] reg60 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg59 = (1'h0);
  reg [(3'h6):(1'h0)] reg58 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg57 = (1'h0);
  assign y = {wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 reg60,
                 reg59,
                 reg58,
                 reg57,
                 (1'h0)};
  assign wire50 = (wire47[(3'h4):(2'h2)] | $signed(((wire49 ?
                      wire46 : (8'h9e)) - (wire49 ^~ wire49))));
  assign wire51 = $signed(wire49[(2'h2):(2'h2)]);
  assign wire52 = (~(wire46 + $unsigned($unsigned(wire49))));
  assign wire53 = ($signed($unsigned((^wire50))) ^~ $signed($signed($signed(wire46))));
  assign wire54 = wire50;
  assign wire55 = ($signed((8'hac)) < $signed((~&(~^(8'ha5)))));
  assign wire56 = wire46[(3'h4):(2'h2)];
  always
    @(posedge clk) begin
      reg57 <= wire48[(1'h0):(1'h0)];
      if ((-$signed($unsigned(((8'ha2) ? wire48 : wire49)))))
        begin
          reg58 <= $unsigned((((wire48 ? (8'h9d) : wire46) ^ wire49) ?
              ({wire52} | (wire52 ? wire52 : wire54)) : reg57[(3'h6):(3'h5)]));
          reg59 <= wire56;
        end
      else
        begin
          reg58 <= {wire55[(3'h4):(1'h1)]};
        end
      reg60 <= wire51;
    end
endmodule