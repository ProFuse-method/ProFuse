(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param71 = (+({(|(8'hac))} ? (|((8'ha0) ? (8'hb0) : (8'ha7))) : (|((8'ha0) ? (8'ha8) : (8'h9f))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire70;
  wire signed [(3'h4):(1'h0)] wire69;
  wire signed [(4'hb):(1'h0)] wire68;
  wire signed [(4'ha):(1'h0)] wire67;
  wire signed [(2'h3):(1'h0)] wire66;
  wire signed [(4'h8):(1'h0)] wire64;
  assign y = {wire70, wire69, wire68, wire67, wire66, wire64, (1'h0)};
  module4 #() modinst65 (wire64, clk, wire2, wire1, wire0, wire3);
  assign wire66 = ($unsigned((-$unsigned(wire2))) <<< wire0);
  assign wire67 = $signed($unsigned(wire64));
  assign wire68 = wire3;
  assign wire69 = (~^(~&(!{(8'ha0)})));
  assign wire70 = ((~^$signed(wire69)) | wire69);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param63 = (((~|(-(8'ha8))) ? ((~|(8'hb0)) >= ((8'ha6) - (8'ha6))) : ((8'ha4) ? {(8'had)} : ((8'ha1) ? (8'ha6) : (8'ha8)))) ? (((~^(8'ha4)) == {(8'ha8)}) == (+(8'ha0))) : (~|(&((8'h9c) && (8'hae))))))
(y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h79):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire5;
  input wire signed [(4'hb):(1'h0)] wire6;
  input wire [(4'h8):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire8;
  wire [(4'ha):(1'h0)] wire56;
  wire [(2'h3):(1'h0)] wire14;
  wire signed [(3'h6):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire33;
  wire [(3'h6):(1'h0)] wire54;
  wire [(4'hb):(1'h0)] wire58;
  wire signed [(3'h4):(1'h0)] wire59;
  wire [(4'hb):(1'h0)] wire60;
  wire [(4'h9):(1'h0)] wire61;
  reg [(3'h6):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg10 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg11 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg13 = (1'h0);
  assign y = {wire56,
                 wire14,
                 wire15,
                 wire31,
                 wire33,
                 wire54,
                 wire58,
                 wire59,
                 wire60,
                 wire61,
                 reg9,
                 reg10,
                 reg11,
                 reg12,
                 reg13,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($unsigned($unsigned(wire6)))
        begin
          reg9 <= (^~(-$unsigned(wire8)));
          reg10 <= (~^(-$unsigned($unsigned(wire8))));
          reg11 <= wire7;
        end
      else
        begin
          reg9 <= wire5[(1'h0):(1'h0)];
          reg10 <= $signed((({reg11} ?
              reg9 : $unsigned(reg9)) >= $signed($signed(reg11))));
          reg11 <= reg9;
        end
      reg12 <= $unsigned($signed(wire6[(3'h4):(2'h3)]));
      reg13 <= reg10;
    end
  assign wire14 = ($unsigned((~|$signed(reg11))) ?
                      $signed($signed(wire6)) : (&{(8'ha0)}));
  assign wire15 = (({wire8[(3'h6):(2'h2)]} ?
                          ((reg13 - wire5) ?
                              wire5 : wire6[(1'h0):(1'h0)]) : ((reg10 ?
                                  wire5 : wire5) ?
                              (-reg11) : wire7[(1'h0):(1'h0)])) ?
                      wire6[(2'h2):(1'h0)] : $signed($signed((wire5 != wire6))));
  module16 #() modinst32 (wire31, clk, wire6, wire7, reg11, reg10);
  assign wire33 = $unsigned(wire5[(2'h2):(2'h2)]);
  module34 #() modinst55 (.wire36(wire5), .y(wire54), .wire35(reg12), .wire38(wire6), .clk(clk), .wire37(wire15));
  module34 #() modinst57 (wire56, clk, wire31, reg9, reg12, reg11);
  assign wire58 = $signed(($signed($unsigned((8'hab))) * (&wire54[(3'h4):(1'h0)])));
  assign wire59 = (($unsigned((-reg12)) != {reg11[(2'h3):(2'h3)]}) | $unsigned((~^$unsigned(reg11))));
  assign wire60 = (-$unsigned($unsigned($signed(wire31))));
  module16 #() modinst62 (.wire20(wire60), .y(wire61), .clk(clk), .wire17(reg11), .wire18(wire56), .wire19(wire6));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34  (y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire38;
  input wire [(3'h6):(1'h0)] wire37;
  input wire signed [(4'ha):(1'h0)] wire36;
  input wire signed [(3'h7):(1'h0)] wire35;
  wire signed [(4'ha):(1'h0)] wire53;
  wire signed [(2'h2):(1'h0)] wire52;
  wire [(2'h2):(1'h0)] wire51;
  wire signed [(4'hb):(1'h0)] wire50;
  wire [(3'h5):(1'h0)] wire49;
  wire signed [(3'h6):(1'h0)] wire48;
  wire signed [(3'h7):(1'h0)] wire47;
  wire [(4'ha):(1'h0)] wire42;
  wire [(2'h3):(1'h0)] wire41;
  wire signed [(3'h7):(1'h0)] wire40;
  wire signed [(2'h2):(1'h0)] wire39;
  reg [(2'h2):(1'h0)] reg46 = (1'h0);
  reg [(4'h9):(1'h0)] reg45 = (1'h0);
  reg [(2'h3):(1'h0)] reg44 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg43 = (1'h0);
  assign y = {wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 (1'h0)};
  assign wire39 = $unsigned(wire38[(1'h0):(1'h0)]);
  assign wire40 = ($unsigned((((8'h9e) << wire35) ?
                      $unsigned(wire35) : (wire37 ?
                          wire38 : wire37))) ~^ $signed((~|(wire39 == wire36))));
  assign wire41 = wire39[(1'h1):(1'h0)];
  assign wire42 = $signed(wire40[(3'h5):(3'h4)]);
  always
    @(posedge clk) begin
      reg43 <= $unsigned((^~$unsigned(wire41[(1'h0):(1'h0)])));
      reg44 <= ($signed(wire41[(1'h1):(1'h1)]) * $signed(wire37[(2'h3):(2'h3)]));
      if ((((wire42 ? (!wire42) : (wire36 ? (8'h9d) : wire40)) <<< (8'ha2)) ?
          (~^$unsigned(((8'ha5) ?
              reg44 : wire39))) : (!$unsigned(wire37[(3'h4):(1'h0)]))))
        begin
          reg45 <= $unsigned($unsigned($signed((8'ha4))));
        end
      else
        begin
          reg45 <= {$signed((wire42 ? reg45 : wire37[(3'h4):(2'h3)]))};
          reg46 <= (~wire41[(2'h2):(2'h2)]);
        end
    end
  assign wire47 = $signed((8'haa));
  assign wire48 = $signed((|reg44));
  assign wire49 = wire48[(1'h0):(1'h0)];
  assign wire50 = wire49[(3'h4):(2'h3)];
  assign wire51 = $signed(reg46);
  assign wire52 = ($signed($signed((-wire37))) ?
                      ($unsigned((8'h9f)) ?
                          (!reg44[(1'h0):(1'h0)]) : (^~(wire35 | wire50))) : wire47);
  assign wire53 = $unsigned(wire35[(1'h1):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16
#(parameter param30 = ((((~^(8'ha5)) ? ((8'had) || (8'ha8)) : ((8'hab) < (8'ha8))) && ((&(8'hae)) << ((8'ha6) << (8'haf)))) >= (((^(8'h9f)) ? ((8'ha8) ? (8'ha7) : (8'ha0)) : {(8'ha7)}) ? (!((8'hae) <<< (8'ha8))) : (~^((8'haf) >> (8'had))))))
(y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h3c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire20;
  input wire signed [(2'h2):(1'h0)] wire19;
  input wire [(4'ha):(1'h0)] wire18;
  input wire [(2'h2):(1'h0)] wire17;
  wire [(4'h9):(1'h0)] wire29;
  wire signed [(3'h6):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire26;
  wire signed [(4'h9):(1'h0)] wire25;
  wire [(3'h7):(1'h0)] wire24;
  wire signed [(3'h7):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire22;
  wire signed [(2'h2):(1'h0)] wire21;
  assign y = {wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 (1'h0)};
  assign wire21 = ($unsigned($signed({wire20})) ?
                      wire17[(1'h1):(1'h1)] : {wire18[(1'h1):(1'h0)]});
  assign wire22 = $unsigned(wire18);
  assign wire23 = (+(8'hb0));
  assign wire24 = (((~{wire19}) ?
                      ((^wire21) ?
                          {wire20} : (wire19 >> wire20)) : wire22[(1'h1):(1'h0)]) + (&wire20[(4'ha):(3'h5)]));
  assign wire25 = wire24[(3'h5):(2'h2)];
  assign wire26 = wire21;
  assign wire27 = $unsigned((((wire23 <= (8'h9f)) ?
                          {wire19} : wire18[(3'h7):(3'h6)]) ?
                      {(wire26 ? (8'hac) : wire24)} : (~^(wire24 ?
                          wire21 : wire17))));
  assign wire28 = $signed(wire17);
  assign wire29 = wire20[(1'h1):(1'h1)];
endmodule