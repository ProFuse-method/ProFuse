(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param66 = ({(!((8'ha9) ? (8'ha0) : (8'ha8)))} & (^((~(8'ha8)) > {(8'h9d)}))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire signed [(2'h2):(1'h0)] wire1;
  input wire [(3'h4):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire65;
  wire [(4'h9):(1'h0)] wire64;
  wire [(3'h4):(1'h0)] wire61;
  wire [(3'h4):(1'h0)] wire59;
  wire [(4'h8):(1'h0)] wire31;
  wire [(4'hb):(1'h0)] wire29;
  wire [(4'ha):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire4;
  reg [(3'h7):(1'h0)] reg63 = (1'h0);
  reg [(3'h4):(1'h0)] reg62 = (1'h0);
  assign y = {wire65,
                 wire64,
                 wire61,
                 wire59,
                 wire31,
                 wire29,
                 wire6,
                 wire5,
                 wire4,
                 reg63,
                 reg62,
                 (1'h0)};
  assign wire4 = {wire2[(3'h5):(2'h2)]};
  assign wire5 = (wire3[(4'h9):(4'h9)] - wire2);
  assign wire6 = (wire4[(1'h1):(1'h0)] ?
                     (wire3 > $signed(((8'h9c) ?
                         (8'h9c) : wire2))) : (^~(wire2 <= wire5[(4'ha):(3'h5)])));
  module7 #() modinst30 (.wire11(wire6), .wire10(wire2), .y(wire29), .wire8(wire4), .wire9(wire5), .clk(clk));
  assign wire31 = wire1;
  module32 #() modinst60 (wire59, clk, wire31, wire2, wire6, wire29);
  assign wire61 = $signed($signed($unsigned($signed(wire4))));
  always
    @(posedge clk) begin
      reg62 <= wire4;
      reg63 <= ($signed($unsigned($unsigned(wire2))) ?
          ((^wire4[(3'h6):(1'h1)]) ?
              $signed(wire4) : ((-wire4) ?
                  wire29[(3'h7):(3'h5)] : (wire31 >> wire2))) : $unsigned(wire6));
    end
  assign wire64 = wire2;
  assign wire65 = (-(wire6 >= ($signed(wire0) ?
                      (wire6 >> wire61) : {(8'hae)})));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module32
#(parameter param58 = {((&((8'h9e) | (8'ha8))) != (~((8'hab) ? (8'haa) : (8'haf))))})
(y, clk, wire36, wire35, wire34, wire33);
  output wire [(32'h23):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire36;
  input wire [(3'h7):(1'h0)] wire35;
  input wire signed [(3'h4):(1'h0)] wire34;
  input wire [(4'hb):(1'h0)] wire33;
  wire [(4'ha):(1'h0)] wire57;
  wire signed [(4'h8):(1'h0)] wire56;
  wire signed [(4'h8):(1'h0)] wire55;
  wire [(4'h8):(1'h0)] wire53;
  assign y = {wire57, wire56, wire55, wire53, (1'h0)};
  module37 #() modinst54 (.wire41(wire34), .wire38(wire35), .wire39(wire36), .wire40(wire33), .y(wire53), .clk(clk));
  assign wire55 = $signed($signed(({(8'had)} ? (wire33 > (8'had)) : wire34)));
  assign wire56 = wire53[(3'h7):(3'h4)];
  assign wire57 = (~&(wire53 ^~ wire33[(3'h4):(3'h4)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param28 = (~({(!(8'haa))} ? ((^~(8'hb0)) & {(8'hac)}) : (8'h9d))))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h75):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire11;
  input wire [(4'h8):(1'h0)] wire10;
  input wire [(4'h8):(1'h0)] wire9;
  input wire [(3'h6):(1'h0)] wire8;
  wire [(2'h2):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire19;
  wire [(4'h8):(1'h0)] wire18;
  wire [(3'h5):(1'h0)] wire17;
  wire signed [(3'h7):(1'h0)] wire16;
  wire [(3'h6):(1'h0)] wire13;
  wire [(3'h7):(1'h0)] wire12;
  reg signed [(3'h7):(1'h0)] reg27 = (1'h0);
  reg [(4'hb):(1'h0)] reg26 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg23 = (1'h0);
  reg [(3'h7):(1'h0)] reg22 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg21 = (1'h0);
  reg [(4'ha):(1'h0)] reg20 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg15 = (1'h0);
  reg [(3'h7):(1'h0)] reg14 = (1'h0);
  assign y = {wire24,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire13,
                 wire12,
                 reg27,
                 reg26,
                 reg25,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg15,
                 reg14,
                 (1'h0)};
  assign wire12 = wire9;
  assign wire13 = wire8[(2'h2):(2'h2)];
  always
    @(posedge clk) begin
      reg14 <= wire10[(2'h2):(2'h2)];
      reg15 <= wire9;
    end
  assign wire16 = wire8[(3'h5):(1'h1)];
  assign wire17 = ((~|$unsigned((+wire11))) & ($unsigned((-wire8)) ~^ $unsigned($unsigned(wire12))));
  assign wire18 = (($signed($unsigned((8'hab))) | reg14[(2'h3):(1'h1)]) << reg15);
  assign wire19 = $signed($signed(wire10));
  always
    @(posedge clk) begin
      if (wire10)
        begin
          reg20 <= wire10[(3'h7):(1'h0)];
          reg21 <= ({wire11[(3'h7):(3'h5)]} ^~ (wire17[(2'h3):(2'h3)] - wire9[(3'h7):(2'h3)]));
          reg22 <= wire12[(1'h0):(1'h0)];
        end
      else
        begin
          reg20 <= wire12[(1'h0):(1'h0)];
        end
      reg23 <= (!($unsigned(wire19[(4'h9):(4'h8)]) ?
          $unsigned($unsigned(reg21)) : wire16[(3'h5):(3'h4)]));
    end
  assign wire24 = (reg20 ? $signed(reg23) : wire10[(2'h3):(1'h0)]);
  always
    @(posedge clk) begin
      reg25 <= wire16;
      reg26 <= $unsigned($signed($signed((8'ha5))));
    end
  always
    @(posedge clk) begin
      reg27 <= reg25[(1'h1):(1'h1)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module37  (y, clk, wire41, wire40, wire39, wire38);
  output wire [(32'h42):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire41;
  input wire [(4'hb):(1'h0)] wire40;
  input wire signed [(2'h3):(1'h0)] wire39;
  input wire signed [(2'h3):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire52;
  wire signed [(2'h2):(1'h0)] wire51;
  wire [(3'h6):(1'h0)] wire50;
  wire signed [(3'h4):(1'h0)] wire49;
  reg signed [(3'h4):(1'h0)] reg48 = (1'h0);
  reg [(4'h9):(1'h0)] reg47 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg46 = (1'h0);
  reg [(2'h3):(1'h0)] reg45 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg44 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg43 = (1'h0);
  reg [(3'h5):(1'h0)] reg42 = (1'h0);
  assign y = {wire52,
                 wire51,
                 wire50,
                 wire49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($signed(wire39))
        begin
          if (($unsigned((8'ha5)) - wire41[(1'h1):(1'h0)]))
            begin
              reg42 <= ($signed(wire38[(2'h3):(1'h1)]) <<< (!wire38));
              reg43 <= $signed($signed({(!(8'ha4))}));
              reg44 <= ((wire38 >>> $unsigned(wire40)) && wire41[(3'h4):(1'h1)]);
            end
          else
            begin
              reg42 <= (reg43[(3'h6):(1'h1)] ?
                  wire39[(1'h1):(1'h0)] : $unsigned(wire41));
            end
          reg45 <= (!$signed(((+wire40) ? (reg43 - (8'had)) : wire41)));
        end
      else
        begin
          if ({{(-(reg44 <= wire38))}})
            begin
              reg42 <= (((!reg45[(1'h0):(1'h0)]) <= (8'h9f)) ?
                  wire38 : (((reg44 ?
                      (8'haa) : wire39) <= wire41) < (~^wire40[(2'h3):(2'h3)])));
              reg43 <= (-$signed({{wire41}}));
            end
          else
            begin
              reg42 <= wire40;
              reg43 <= (~&$unsigned({(8'hae)}));
              reg44 <= $signed((^reg44));
            end
          reg45 <= (&$signed(reg45));
        end
      if ($signed(($unsigned((reg43 + (8'hb0))) ?
          $signed(reg42[(1'h1):(1'h0)]) : ($unsigned(reg45) >= wire40))))
        begin
          reg46 <= (^~wire39[(1'h0):(1'h0)]);
          reg47 <= (($unsigned($signed((8'hac))) ?
              $signed(wire38[(1'h1):(1'h0)]) : ((reg46 ? reg43 : (8'h9e)) ?
                  {reg44} : reg42[(1'h1):(1'h1)])) || $signed($signed(wire39[(2'h2):(1'h1)])));
          if (reg45)
            begin
              reg48 <= $unsigned($unsigned(wire41));
            end
          else
            begin
              reg48 <= ($signed((reg48[(2'h3):(1'h0)] || ((8'ha9) ?
                      (8'h9c) : wire40))) ?
                  {(reg48[(1'h0):(1'h0)] ?
                          ((8'ha1) ?
                              reg45 : reg47) : $unsigned(reg42))} : $signed($unsigned(((8'haf) ^ wire39))));
            end
        end
      else
        begin
          reg46 <= ((reg43[(2'h2):(2'h2)] ?
              wire41[(1'h0):(1'h0)] : ((wire40 ?
                  (8'hac) : wire40) <= reg44[(1'h0):(1'h0)])) * (reg43 ?
              $unsigned(reg46[(2'h3):(2'h3)]) : (wire41[(1'h0):(1'h0)] * reg43[(2'h2):(1'h1)])));
          reg47 <= $signed($unsigned(reg47[(3'h5):(1'h0)]));
          if (reg43)
            begin
              reg48 <= (((8'hab) ? wire40[(4'hb):(2'h2)] : {$signed(wire41)}) ?
                  reg48 : reg48[(3'h4):(1'h1)]);
            end
          else
            begin
              reg48 <= {(^wire40)};
            end
        end
    end
  assign wire49 = (^~reg47[(4'h9):(3'h7)]);
  assign wire50 = $unsigned(wire40[(1'h1):(1'h1)]);
  assign wire51 = reg44;
  assign wire52 = $unsigned($unsigned($signed($signed(wire39))));
endmodule