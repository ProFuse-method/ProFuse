(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h29):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire71;
  wire signed [(3'h7):(1'h0)] wire70;
  wire [(3'h7):(1'h0)] wire69;
  wire signed [(4'h8):(1'h0)] wire67;
  wire [(4'h8):(1'h0)] wire65;
  assign y = {wire71, wire70, wire69, wire67, wire65, (1'h0)};
  module4 #() modinst66 (wire65, clk, wire2, wire1, wire0, wire3);
  module37 #() modinst68 (wire67, clk, wire0, wire2, wire1, wire65);
  assign wire69 = $signed(wire1[(2'h2):(2'h2)]);
  assign wire70 = ({(8'ha5)} >>> (-wire2[(2'h3):(2'h2)]));
  assign wire71 = $signed($unsigned((|(wire65 ? wire69 : wire1))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire5, wire6, wire7, wire8);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire5;
  input wire [(2'h3):(1'h0)] wire6;
  input wire [(4'h8):(1'h0)] wire7;
  input wire signed [(4'ha):(1'h0)] wire8;
  wire [(4'ha):(1'h0)] wire64;
  wire [(3'h6):(1'h0)] wire9;
  wire [(4'h9):(1'h0)] wire10;
  wire [(3'h6):(1'h0)] wire11;
  wire signed [(3'h6):(1'h0)] wire25;
  wire signed [(3'h5):(1'h0)] wire27;
  wire signed [(4'h9):(1'h0)] wire28;
  wire [(3'h7):(1'h0)] wire29;
  wire signed [(3'h6):(1'h0)] wire30;
  wire signed [(2'h3):(1'h0)] wire31;
  wire signed [(4'h8):(1'h0)] wire32;
  wire [(3'h5):(1'h0)] wire62;
  reg [(4'h9):(1'h0)] reg33 = (1'h0);
  reg [(3'h5):(1'h0)] reg34 = (1'h0);
  reg [(2'h2):(1'h0)] reg35 = (1'h0);
  reg [(4'h8):(1'h0)] reg36 = (1'h0);
  assign y = {wire64,
                 wire9,
                 wire10,
                 wire11,
                 wire25,
                 wire27,
                 wire28,
                 wire29,
                 wire30,
                 wire31,
                 wire32,
                 wire62,
                 reg33,
                 reg34,
                 reg35,
                 reg36,
                 (1'h0)};
  assign wire9 = (wire6 | {(|((8'ha8) <<< wire7))});
  assign wire10 = (((~&(wire9 ?
                      wire7 : (8'h9d))) >>> {wire6[(1'h1):(1'h0)]}) && $unsigned(wire6[(1'h1):(1'h1)]));
  assign wire11 = $signed({(~&wire10[(3'h4):(2'h2)])});
  module12 #() modinst26 (wire25, clk, wire10, wire11, wire7, wire8);
  assign wire27 = (^$signed(wire9));
  assign wire28 = $signed({((&(8'had)) ?
                          (wire5 ? (8'ha5) : wire27) : $unsigned(wire11))});
  assign wire29 = wire28[(2'h3):(2'h3)];
  assign wire30 = wire5[(1'h0):(1'h0)];
  assign wire31 = $unsigned(wire25[(1'h1):(1'h1)]);
  assign wire32 = ($unsigned(({wire8} ?
                          $signed(wire8) : wire5[(2'h3):(1'h1)])) ?
                      $signed((wire6[(2'h3):(2'h2)] != wire29[(1'h0):(1'h0)])) : (($unsigned((8'h9c)) ?
                              wire10[(2'h3):(2'h3)] : $signed(wire7)) ?
                          wire29 : $signed((wire28 ? wire30 : wire6))));
  always
    @(posedge clk) begin
      if (wire25)
        begin
          reg33 <= ($signed(wire28[(3'h7):(3'h5)]) ?
              $unsigned(wire32) : ((wire9 ^~ (wire29 ?
                  wire32 : wire6)) & (wire11[(2'h3):(2'h3)] ^ (wire27 + (8'h9e)))));
        end
      else
        begin
          reg33 <= $signed((wire9[(3'h5):(3'h5)] > $signed(((8'ha1) ?
              wire31 : (8'had)))));
          if (wire32[(3'h5):(3'h5)])
            begin
              reg34 <= $signed((8'ha9));
              reg35 <= $signed(wire32[(3'h6):(3'h5)]);
            end
          else
            begin
              reg34 <= wire32[(2'h2):(1'h1)];
              reg35 <= ((wire29 && ((wire10 ?
                  (8'ha1) : wire5) != (-wire25))) > $unsigned((((8'ha6) < wire11) <= wire5[(3'h5):(1'h1)])));
            end
          reg36 <= (~^((~{(8'ha5)}) <= wire5[(2'h2):(2'h2)]));
        end
    end
  module37 #() modinst63 (wire62, clk, wire10, wire8, reg36, wire7);
  assign wire64 = wire8[(3'h4):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module37  (y, clk, wire41, wire40, wire39, wire38);
  output wire [(32'h7d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire41;
  input wire signed [(4'ha):(1'h0)] wire40;
  input wire [(4'h8):(1'h0)] wire39;
  input wire [(4'h8):(1'h0)] wire38;
  wire [(4'h9):(1'h0)] wire61;
  wire signed [(3'h6):(1'h0)] wire60;
  wire [(4'h9):(1'h0)] wire59;
  wire [(3'h6):(1'h0)] wire58;
  wire [(4'h8):(1'h0)] wire54;
  wire signed [(3'h5):(1'h0)] wire53;
  wire signed [(3'h6):(1'h0)] wire52;
  reg signed [(3'h6):(1'h0)] reg57 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg56 = (1'h0);
  reg [(3'h5):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg51 = (1'h0);
  reg [(2'h2):(1'h0)] reg50 = (1'h0);
  reg [(3'h4):(1'h0)] reg49 = (1'h0);
  reg [(3'h4):(1'h0)] reg48 = (1'h0);
  reg [(2'h3):(1'h0)] reg47 = (1'h0);
  reg [(4'hb):(1'h0)] reg46 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg44 = (1'h0);
  reg [(3'h6):(1'h0)] reg43 = (1'h0);
  reg [(3'h6):(1'h0)] reg42 = (1'h0);
  assign y = {wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire54,
                 wire53,
                 wire52,
                 reg57,
                 reg56,
                 reg55,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire41)
        begin
          reg42 <= (wire38[(3'h6):(3'h5)] ?
              wire38[(1'h0):(1'h0)] : $signed($unsigned($unsigned((8'ha1)))));
          reg43 <= (reg42 - ({$unsigned(reg42)} ?
              ({wire41} ~^ $unsigned(wire40)) : (^~wire38)));
          if (($signed($signed(wire40[(3'h6):(3'h6)])) ?
              $signed(reg42[(2'h2):(2'h2)]) : $signed({wire39})))
            begin
              reg44 <= wire40;
              reg45 <= (reg43 || wire41[(3'h7):(2'h3)]);
              reg46 <= $signed($unsigned(wire39[(3'h7):(1'h1)]));
            end
          else
            begin
              reg44 <= ($unsigned((reg43[(3'h4):(1'h1)] ?
                      (8'hac) : (^~wire40))) ?
                  ((reg44[(2'h2):(1'h0)] ? {wire39} : (8'hab)) ?
                      ($signed(reg44) ?
                          {wire40} : $signed(reg43)) : wire41) : (wire39[(1'h1):(1'h1)] != ((~^(8'h9e)) > $unsigned(reg43))));
            end
        end
      else
        begin
          reg42 <= ((({wire41} ? (wire40 - reg42) : wire39[(2'h2):(1'h1)]) ?
              wire40[(4'h9):(4'h8)] : reg44[(2'h3):(2'h2)]) != (({(8'h9f)} << (8'ha4)) ?
              $signed((^~reg42)) : (|$unsigned(reg46))));
          if ((((wire39[(3'h4):(2'h2)] || $signed(wire41)) ?
                  wire41[(3'h4):(1'h1)] : ((reg45 ? (8'ha2) : reg44) ?
                      wire38 : reg43[(1'h0):(1'h0)])) ?
              ((~(wire40 ? wire40 : reg43)) != (!(reg46 ?
                  reg45 : reg42))) : (+wire39)))
            begin
              reg43 <= $signed((~^wire41[(3'h6):(3'h6)]));
              reg44 <= {wire40[(4'h8):(3'h5)]};
              reg45 <= $signed((reg46[(4'h8):(3'h4)] ?
                  ((wire39 ~^ wire39) ^ reg46[(1'h1):(1'h1)]) : (8'ha2)));
            end
          else
            begin
              reg43 <= (8'h9e);
              reg44 <= (((&wire40) ?
                  reg46[(3'h6):(1'h1)] : reg46[(2'h3):(1'h1)]) ~^ ({{reg44}} | ((~reg45) ?
                  (wire40 ? reg46 : wire40) : wire40[(4'h9):(1'h0)])));
            end
          if (((~&$unsigned($signed((8'ha9)))) ?
              (|wire41[(3'h4):(1'h0)]) : $signed({(wire38 ? wire40 : reg45)})))
            begin
              reg46 <= (((~((8'haf) >> wire39)) && (((8'haa) ?
                      wire38 : wire41) && (!wire39))) ?
                  $unsigned((reg44[(4'h9):(1'h1)] <= $unsigned(wire38))) : $signed(reg45[(1'h0):(1'h0)]));
              reg47 <= ($signed($signed((wire38 ?
                  reg46 : (8'hab)))) <= ($signed(wire39) ^~ (^((8'ha0) >> (8'had)))));
              reg48 <= reg46;
            end
          else
            begin
              reg46 <= $signed((reg44 ?
                  {(wire39 ? (8'h9e) : reg42)} : $unsigned((reg47 ?
                      reg46 : reg48))));
              reg47 <= $signed($unsigned((reg42 >= (reg44 & wire39))));
            end
        end
      if ($unsigned(reg47))
        begin
          reg49 <= $signed((&reg45));
          reg50 <= $signed($signed(reg45[(3'h7):(3'h5)]));
        end
      else
        begin
          reg49 <= (~|$signed(reg42[(2'h3):(2'h3)]));
        end
      reg51 <= ((|$unsigned((~&reg49))) >= ($signed((!reg46)) ?
          reg42 : (~|{(8'ha5)})));
    end
  assign wire52 = reg50;
  assign wire53 = reg50[(2'h2):(1'h1)];
  assign wire54 = (reg43[(1'h1):(1'h1)] && $signed((reg51 >= (^wire38))));
  always
    @(posedge clk) begin
      reg55 <= $unsigned({(reg43[(3'h4):(1'h1)] ? $signed(reg42) : reg44)});
      reg56 <= $unsigned({(~(reg51 ^~ reg47))});
    end
  always
    @(posedge clk) begin
      reg57 <= wire38;
    end
  assign wire58 = $signed((^~(reg44 - $signed(reg49))));
  assign wire59 = wire58;
  assign wire60 = (($signed(wire53) >>> $signed(((8'had) ? wire59 : wire39))) ?
                      $signed($signed($signed(reg51))) : wire39);
  assign wire61 = $unsigned((&(~&(wire58 >= reg42))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h38):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire16;
  input wire [(3'h4):(1'h0)] wire15;
  input wire signed [(4'h8):(1'h0)] wire14;
  input wire signed [(4'ha):(1'h0)] wire13;
  wire [(2'h2):(1'h0)] wire24;
  wire [(4'h8):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire22;
  wire signed [(4'hb):(1'h0)] wire21;
  wire signed [(2'h2):(1'h0)] wire20;
  wire signed [(4'ha):(1'h0)] wire19;
  wire signed [(4'h8):(1'h0)] wire18;
  wire [(4'hb):(1'h0)] wire17;
  assign y = {wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 (1'h0)};
  assign wire17 = {($signed((wire13 << wire15)) ~^ wire16[(4'h8):(3'h4)])};
  assign wire18 = wire15;
  assign wire19 = (wire16[(3'h4):(1'h0)] < (wire14[(3'h6):(3'h6)] <= $unsigned(wire16)));
  assign wire20 = $unsigned($signed(wire19[(2'h3):(2'h2)]));
  assign wire21 = {(wire18 ?
                          $signed(wire19) : ($signed(wire19) && $unsigned(wire17)))};
  assign wire22 = (+(wire20 | (|(8'ha7))));
  assign wire23 = (wire17[(3'h4):(1'h0)] - ({{wire21}} << {wire20[(1'h1):(1'h0)]}));
  assign wire24 = $signed(wire19[(3'h5):(3'h5)]);
endmodule