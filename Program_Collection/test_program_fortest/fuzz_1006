(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h81):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hf):(1'h0)] wire4;
  input wire signed [(5'h11):(1'h0)] wire3;
  input wire [(5'h12):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(4'hf):(1'h0)] wire0;
  wire signed [(4'hc):(1'h0)] wire33;
  wire signed [(5'h13):(1'h0)] wire8;
  wire [(4'h8):(1'h0)] wire7;
  wire signed [(5'h11):(1'h0)] wire6;
  wire signed [(4'hf):(1'h0)] wire5;
  reg [(4'he):(1'h0)] reg15 = (1'h0);
  reg [(3'h7):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg14 = (1'h0);
  reg [(3'h4):(1'h0)] reg12 = (1'h0);
  reg [(2'h3):(1'h0)] reg11 = (1'h0);
  reg [(5'h11):(1'h0)] forvar10 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar9 = (1'h0);
  assign y = {wire33,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 reg15,
                 reg13,
                 reg14,
                 reg12,
                 reg11,
                 forvar10,
                 forvar9,
                 (1'h0)};
  assign wire5 = ((($signed(wire2[(4'hc):(1'h1)]) ?
                             $unsigned($signed(wire4)) : wire4[(4'hd):(1'h0)]) ?
                         (wire4 ~^ ($signed((8'haa)) ?
                             (|wire4) : $unsigned(wire4))) : $signed(($signed((8'haa)) ^ wire4[(4'hd):(3'h6)]))) ?
                     (((wire1 ? wire0 : (wire4 ? wire3 : wire3)) ?
                         wire2[(4'h8):(3'h7)] : wire3) >>> $unsigned((&$unsigned(wire4)))) : wire3[(5'h10):(4'hd)]);
  assign wire6 = (wire0 ?
                     {(wire0[(3'h4):(2'h2)] ?
                             $signed(wire5) : ((wire0 ? (8'hab) : (8'hbb)) ?
                                 wire4 : $unsigned(wire4)))} : $signed($signed(((wire0 > wire0) ?
                         $unsigned(wire3) : $signed((8'h9e))))));
  assign wire7 = (|wire6[(4'ha):(3'h4)]);
  assign wire8 = (wire4[(3'h5):(2'h3)] | ({(^(~&wire5)),
                     ((^~wire6) ?
                         (wire4 ?
                             (8'ha2) : wire0) : $signed(wire7))} <= $signed($signed((8'ha7)))));
  always
    @(posedge clk) begin
      for (forvar9 = (1'h0); (forvar9 < (2'h3)); forvar9 = (forvar9 + (1'h1)))
        begin
          for (forvar10 = (1'h0); (forvar10 < (2'h2)); forvar10 = (forvar10 + (1'h1)))
            begin
              reg11 = $signed((($unsigned((wire1 > (8'hbc))) <<< wire2) ?
                  wire1 : wire3));
              reg12 = {$unsigned((8'hb9))};
              reg13 <= forvar9[(2'h3):(1'h0)];
              reg14 = ({(8'hb9),
                  ($unsigned((wire2 <<< forvar10)) ?
                      ($signed(wire0) ?
                          (wire5 ?
                              wire6 : reg11) : reg13) : wire4)} != $signed(forvar10[(1'h1):(1'h0)]));
            end
          reg15 <= $unsigned($unsigned(({$signed((8'hb5))} ?
              (((7'h40) - (8'ha3)) | wire2[(1'h0):(1'h0)]) : reg14)));
        end
    end
  module16 #() modinst34 (wire33, clk, wire4, wire1, wire7, wire2);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h71):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire20;
  input wire signed [(3'h4):(1'h0)] wire19;
  input wire [(4'h8):(1'h0)] wire18;
  input wire signed [(2'h3):(1'h0)] wire17;
  wire signed [(5'h11):(1'h0)] wire32;
  wire signed [(4'h9):(1'h0)] wire31;
  wire [(4'h9):(1'h0)] wire30;
  wire [(3'h6):(1'h0)] wire29;
  wire signed [(3'h4):(1'h0)] wire28;
  reg [(4'ha):(1'h0)] reg23 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg27 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar26 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg25 = (1'h0);
  reg [(4'h8):(1'h0)] forvar24 = (1'h0);
  reg [(3'h5):(1'h0)] forvar22 = (1'h0);
  reg [(5'h10):(1'h0)] forvar21 = (1'h0);
  assign y = {wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 reg23,
                 reg27,
                 forvar26,
                 reg25,
                 forvar24,
                 forvar22,
                 forvar21,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar21 = (1'h0); (forvar21 < (1'h0)); forvar21 = (forvar21 + (1'h1)))
        begin
          for (forvar22 = (1'h0); (forvar22 < (1'h1)); forvar22 = (forvar22 + (1'h1)))
            begin
              reg23 <= wire19;
            end
          for (forvar24 = (1'h0); (forvar24 < (1'h0)); forvar24 = (forvar24 + (1'h1)))
            begin
              reg25 = ($unsigned((((-wire17) ?
                  ((8'ha5) == wire18) : $signed(wire20)) + (8'ha0))) & $signed((~&(8'hbc))));
            end
          for (forvar26 = (1'h0); (forvar26 < (1'h1)); forvar26 = (forvar26 + (1'h1)))
            begin
              reg27 = forvar22;
            end
        end
    end
  assign wire28 = (-$signed(wire20[(3'h5):(1'h0)]));
  assign wire29 = (~|((&(~(^wire20))) ?
                      $signed(((wire18 ?
                          wire28 : wire28) <<< (7'h42))) : ($unsigned(reg23[(3'h5):(1'h1)]) >= $unsigned(wire17))));
  assign wire30 = wire28;
  assign wire31 = wire18[(4'h8):(1'h0)];
  assign wire32 = (&((&$signed($unsigned(wire17))) ?
                      (~|wire19) : $signed((wire29 ?
                          wire28[(2'h2):(2'h2)] : wire18))));
endmodule