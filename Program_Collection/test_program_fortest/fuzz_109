(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire66;
  wire [(3'h4):(1'h0)] wire65;
  wire signed [(4'h9):(1'h0)] wire64;
  wire signed [(3'h4):(1'h0)] wire63;
  wire signed [(3'h5):(1'h0)] wire62;
  wire [(4'ha):(1'h0)] wire61;
  wire [(4'hb):(1'h0)] wire60;
  wire [(4'h9):(1'h0)] wire58;
  assign y = {wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire58,
                 (1'h0)};
  module4 #() modinst59 (.wire6(wire0), .wire8(wire3), .y(wire58), .clk(clk), .wire5(wire2), .wire7(wire1));
  assign wire60 = $unsigned({($signed((8'ha2)) ?
                          wire58[(4'h9):(1'h0)] : $unsigned(wire3))});
  assign wire61 = wire0[(4'ha):(4'h9)];
  assign wire62 = wire58[(3'h4):(1'h1)];
  assign wire63 = wire58;
  assign wire64 = wire2;
  assign wire65 = $signed({{(wire2 ? wire63 : wire61)}});
  assign wire66 = (+(|$unsigned(wire3)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param57 = (((((8'ha3) >= (8'ha9)) ? ((8'ha1) ? (8'ha1) : (8'ha6)) : (~&(8'ha4))) ^ (!((8'ha9) && (8'hae)))) ? ((~|{(8'haa)}) ? (((8'h9e) ? (8'ha4) : (8'h9d)) ? {(8'ha4)} : ((8'h9e) <= (8'h9c))) : (&((8'ha5) ? (8'haa) : (8'hae)))) : ((8'ha2) << (((8'ha6) < (8'ha0)) ? (8'had) : (|(8'ha6))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h6f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire signed [(3'h6):(1'h0)] wire7;
  input wire signed [(3'h5):(1'h0)] wire6;
  input wire [(4'ha):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire56;
  wire signed [(3'h5):(1'h0)] wire55;
  wire [(3'h5):(1'h0)] wire50;
  wire signed [(4'ha):(1'h0)] wire49;
  wire [(3'h5):(1'h0)] wire48;
  wire signed [(3'h5):(1'h0)] wire46;
  wire [(4'h9):(1'h0)] wire25;
  wire [(3'h7):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  wire signed [(4'h9):(1'h0)] wire22;
  wire signed [(3'h5):(1'h0)] wire20;
  wire signed [(3'h6):(1'h0)] wire9;
  reg signed [(3'h7):(1'h0)] reg54 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg53 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg52 = (1'h0);
  reg [(3'h5):(1'h0)] reg51 = (1'h0);
  assign y = {wire56,
                 wire55,
                 wire50,
                 wire49,
                 wire48,
                 wire46,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire20,
                 wire9,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 (1'h0)};
  assign wire9 = {wire6[(3'h5):(2'h3)]};
  module10 #() modinst21 (.wire14(wire6), .y(wire20), .wire13(wire5), .clk(clk), .wire11(wire7), .wire12(wire9));
  assign wire22 = ((wire6[(1'h0):(1'h0)] ?
                          {$unsigned(wire20)} : $signed((wire5 < (8'ha0)))) ?
                      $unsigned({$signed(wire7)}) : wire5);
  assign wire23 = (~(+wire22[(4'h8):(2'h3)]));
  assign wire24 = (~^(^(|(!wire7))));
  assign wire25 = $unsigned($unsigned($unsigned($unsigned(wire8))));
  module26 #() modinst47 (wire46, clk, wire7, wire23, wire22, wire5);
  assign wire48 = (~&{$signed($signed(wire7))});
  assign wire49 = ($unsigned(wire6) - (wire24 ?
                      wire5 : ((wire6 ? wire46 : wire24) ?
                          $signed(wire20) : (wire22 ? wire5 : wire24))));
  assign wire50 = wire5[(2'h3):(1'h0)];
  always
    @(posedge clk) begin
      reg51 <= ($unsigned((~^wire48)) | wire48);
      if ($unsigned((!((reg51 != reg51) && wire20[(2'h2):(1'h0)]))))
        begin
          reg52 <= wire24;
        end
      else
        begin
          reg52 <= $signed(($signed(wire25) ?
              $signed((wire46 + wire50)) : (~$unsigned(wire50))));
          reg53 <= $unsigned(((~|wire49) | wire5[(1'h0):(1'h0)]));
        end
      reg54 <= ($unsigned((wire25[(4'h8):(1'h0)] | wire6)) ?
          (8'ha7) : reg51[(3'h4):(2'h2)]);
    end
  assign wire55 = $signed($signed($signed((wire48 << wire20))));
  assign wire56 = $unsigned(wire20);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module26  (y, clk, wire30, wire29, wire28, wire27);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire30;
  input wire [(2'h3):(1'h0)] wire29;
  input wire [(3'h5):(1'h0)] wire28;
  input wire signed [(3'h7):(1'h0)] wire27;
  wire signed [(4'h9):(1'h0)] wire35;
  wire [(2'h2):(1'h0)] wire34;
  wire [(3'h7):(1'h0)] wire32;
  wire [(3'h6):(1'h0)] wire31;
  reg [(4'h9):(1'h0)] reg45 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg44 = (1'h0);
  reg [(3'h5):(1'h0)] reg43 = (1'h0);
  reg [(4'h8):(1'h0)] reg42 = (1'h0);
  reg [(3'h4):(1'h0)] reg41 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg39 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg38 = (1'h0);
  reg [(4'hb):(1'h0)] reg37 = (1'h0);
  reg [(3'h4):(1'h0)] reg36 = (1'h0);
  reg [(4'hb):(1'h0)] reg33 = (1'h0);
  assign y = {wire35,
                 wire34,
                 wire32,
                 wire31,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg33,
                 (1'h0)};
  assign wire31 = wire28[(3'h4):(1'h0)];
  assign wire32 = ((wire30 ?
                      $unsigned(((8'ha0) & wire30)) : wire28[(1'h0):(1'h0)]) << wire29[(2'h2):(1'h1)]);
  always
    @(posedge clk) begin
      reg33 <= wire31[(1'h1):(1'h1)];
    end
  assign wire34 = (((-$unsigned(wire27)) ?
                          $signed($signed((8'h9e))) : ($signed(wire31) & wire30)) ?
                      ($unsigned(wire27) + wire27) : {wire30});
  assign wire35 = (8'ha5);
  always
    @(posedge clk) begin
      if ($unsigned((({(8'ha9)} ? {wire32} : (wire34 ~^ wire34)) ?
          wire28[(3'h4):(3'h4)] : {$unsigned(wire34)})))
        begin
          reg36 <= (($unsigned((+(8'ha5))) ?
                  (~^{(8'ha1)}) : ($unsigned(wire35) >>> wire27)) ?
              $unsigned((~^{wire31})) : $unsigned(wire29));
          reg37 <= ((((wire34 | wire35) ?
                  (~&wire27) : wire32) != $signed((+wire30))) ?
              (8'hae) : ($signed((wire28 == wire34)) ?
                  (~^(wire32 ? wire35 : wire29)) : (~&$unsigned((8'ha5)))));
          reg38 <= ((^(~^wire28[(2'h3):(2'h3)])) && $unsigned((wire30 ?
              wire29[(2'h3):(1'h0)] : wire34)));
        end
      else
        begin
          reg36 <= $unsigned(((~^{reg37}) + $signed((reg38 & reg38))));
          reg37 <= (8'had);
        end
      reg39 <= ((~^{$signed(reg33)}) <<< $unsigned((~&(8'hac))));
    end
  always
    @(posedge clk) begin
      reg40 <= (^~$signed(wire28[(2'h2):(1'h0)]));
    end
  always
    @(posedge clk) begin
      if ((($signed($signed(wire35)) + (wire30 ?
          (~|reg36) : (wire30 ?
              wire34 : reg38))) || {$signed($unsigned(reg37))}))
        begin
          reg41 <= (8'ha9);
          if (((&((wire35 ? wire31 : wire31) | (~wire28))) ^ reg39))
            begin
              reg42 <= reg39[(2'h3):(2'h2)];
              reg43 <= ({$unsigned($signed(wire27))} ~^ $signed(($unsigned(wire32) ^~ (reg40 ?
                  reg33 : reg41))));
            end
          else
            begin
              reg42 <= ($signed((reg33[(4'ha):(2'h2)] ^~ $unsigned((8'haa)))) ?
                  {$signed((wire29 << wire30))} : $unsigned($signed((8'h9d))));
            end
          reg44 <= (^(~|$unsigned((-reg39))));
        end
      else
        begin
          reg41 <= (~&(~^({reg42} >= {wire35})));
          if ($signed($unsigned($unsigned(wire29[(2'h3):(1'h1)]))))
            begin
              reg42 <= {$unsigned(wire28[(1'h1):(1'h1)])};
            end
          else
            begin
              reg42 <= {(reg42[(1'h0):(1'h0)] ?
                      ((reg43 ? (8'ha4) : wire27) ?
                          $signed(wire32) : reg37[(4'h8):(2'h2)]) : wire35)};
            end
          reg43 <= (^$unsigned((8'hab)));
        end
      reg45 <= $signed($unsigned($signed((~|(8'h9f)))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h1f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire14;
  input wire [(4'ha):(1'h0)] wire13;
  input wire [(2'h3):(1'h0)] wire12;
  input wire signed [(3'h4):(1'h0)] wire11;
  wire signed [(3'h7):(1'h0)] wire19;
  wire [(2'h3):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire17;
  wire [(4'h8):(1'h0)] wire16;
  wire signed [(2'h3):(1'h0)] wire15;
  assign y = {wire19, wire18, wire17, wire16, wire15, (1'h0)};
  assign wire15 = $unsigned(wire12[(1'h0):(1'h0)]);
  assign wire16 = (((8'haf) ? wire13 : ((8'hb0) ? (~wire15) : (~|wire12))) ?
                      $unsigned($signed((-wire11))) : (((&wire11) ?
                              $unsigned(wire12) : (wire13 ^ wire13)) ?
                          ((wire11 | wire12) >= ((8'hab) + wire12)) : ((!wire15) * ((8'ha2) ?
                              (8'h9e) : wire13))));
  assign wire17 = (wire14 << wire14);
  assign wire18 = {($signed(wire13) && wire13)};
  assign wire19 = wire17[(3'h4):(1'h0)];
endmodule