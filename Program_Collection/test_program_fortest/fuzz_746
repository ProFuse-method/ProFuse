(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h87):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire73;
  wire [(4'ha):(1'h0)] wire72;
  wire [(4'ha):(1'h0)] wire71;
  wire [(2'h3):(1'h0)] wire70;
  wire signed [(2'h3):(1'h0)] wire69;
  wire signed [(2'h2):(1'h0)] wire67;
  wire [(3'h4):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire12;
  wire [(4'ha):(1'h0)] wire11;
  wire signed [(3'h4):(1'h0)] wire10;
  reg [(2'h2):(1'h0)] reg76 = (1'h0);
  reg [(4'h9):(1'h0)] reg75 = (1'h0);
  reg [(4'hb):(1'h0)] reg74 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg [(2'h2):(1'h0)] reg8 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg5 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg4 = (1'h0);
  assign y = {wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 wire67,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 reg76,
                 reg75,
                 reg74,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= wire3;
      if (reg4)
        begin
          reg5 <= ((wire3[(2'h3):(1'h1)] >> (reg4[(1'h1):(1'h0)] ?
              (wire2 <= wire2) : (wire2 ^ (8'haa)))) << wire1[(4'h9):(3'h5)]);
          if ($signed((+(wire3[(4'h9):(3'h5)] || (8'h9c)))))
            begin
              reg6 <= (wire3 ? (8'h9d) : wire2[(1'h0):(1'h0)]);
              reg7 <= (~^($unsigned({(8'h9c)}) ?
                  ($unsigned(wire1) ? wire0 : $signed(wire0)) : (-((8'haf) ?
                      wire2 : wire3))));
              reg8 <= {(8'ha3)};
            end
          else
            begin
              reg6 <= $signed({reg6[(1'h1):(1'h1)]});
            end
        end
      else
        begin
          reg5 <= $unsigned($unsigned(wire3[(3'h7):(1'h0)]));
        end
      reg9 <= reg7;
    end
  assign wire10 = {((8'ha8) <= (8'ha3))};
  assign wire11 = reg7;
  assign wire12 = $signed((!$signed(wire0[(3'h5):(1'h0)])));
  assign wire13 = (&$signed($unsigned(reg9)));
  module14 #() modinst68 (.wire15(reg7), .wire16(reg6), .clk(clk), .wire17(wire13), .wire18(wire2), .y(wire67));
  assign wire69 = reg6[(3'h5):(3'h5)];
  assign wire70 = {{wire69[(1'h0):(1'h0)]}};
  assign wire71 = wire67[(2'h2):(1'h1)];
  assign wire72 = ((&{$unsigned(wire13)}) ?
                      $unsigned(wire12[(3'h4):(1'h1)]) : ({$unsigned(reg9)} ?
                          (wire13 <<< (~&reg7)) : (8'ha3)));
  assign wire73 = (wire72 <= $unsigned((wire72[(3'h6):(3'h4)] ?
                      (reg9 - wire2) : wire1)));
  always
    @(posedge clk) begin
      if (($unsigned($signed(wire13)) <<< $unsigned($unsigned(reg8))))
        begin
          if ((-$unsigned(($signed((8'hab)) ? wire69 : (+reg6)))))
            begin
              reg74 <= ((!($signed(reg9) ?
                  (wire71 ?
                      wire3 : wire12) : reg4[(2'h2):(2'h2)])) << $signed($signed(reg4)));
            end
          else
            begin
              reg74 <= $signed((^($signed(reg4) * wire72)));
              reg75 <= ((^~wire12) < (((reg74 - reg6) - (wire0 >= reg5)) ?
                  (^~(wire12 != (8'h9e))) : (reg5 * $signed(wire72))));
              reg76 <= (wire69 ~^ ({reg7[(2'h3):(1'h1)]} ?
                  wire11[(3'h6):(3'h4)] : wire71));
            end
        end
      else
        begin
          reg74 <= reg9;
          reg75 <= ((^~(wire10[(3'h4):(3'h4)] ?
              $signed(wire12) : reg9[(4'h8):(3'h6)])) ~^ (!(((8'had) | wire72) * wire71[(4'h9):(2'h2)])));
          reg76 <= $unsigned(($unsigned((!(8'hab))) ?
              (((8'haf) & wire0) + (reg7 ?
                  reg4 : wire10)) : $unsigned($signed(wire3))));
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire15, wire16, wire17, wire18);
  output wire [(32'h88):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire15;
  input wire signed [(4'h8):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire17;
  input wire signed [(3'h4):(1'h0)] wire18;
  wire signed [(3'h7):(1'h0)] wire65;
  wire signed [(2'h3):(1'h0)] wire54;
  wire signed [(4'hb):(1'h0)] wire53;
  wire signed [(2'h3):(1'h0)] wire19;
  wire signed [(3'h5):(1'h0)] wire20;
  wire signed [(3'h4):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire25;
  wire signed [(3'h5):(1'h0)] wire31;
  wire signed [(4'ha):(1'h0)] wire32;
  wire signed [(4'hb):(1'h0)] wire33;
  wire signed [(4'h9):(1'h0)] wire51;
  reg signed [(3'h5):(1'h0)] reg21 = (1'h0);
  reg [(4'ha):(1'h0)] reg22 = (1'h0);
  reg [(3'h5):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg26 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg27 = (1'h0);
  reg [(4'h9):(1'h0)] reg28 = (1'h0);
  reg [(3'h4):(1'h0)] reg29 = (1'h0);
  reg [(4'h9):(1'h0)] reg30 = (1'h0);
  assign y = {wire65,
                 wire54,
                 wire53,
                 wire19,
                 wire20,
                 wire24,
                 wire25,
                 wire31,
                 wire32,
                 wire33,
                 wire51,
                 reg21,
                 reg22,
                 reg23,
                 reg26,
                 reg27,
                 reg28,
                 reg29,
                 reg30,
                 (1'h0)};
  assign wire19 = wire17;
  assign wire20 = {(|wire17)};
  always
    @(posedge clk) begin
      if ({(wire17 ?
              (wire20 <= {wire16}) : (((8'had) ? wire15 : (8'ha8)) ?
                  {wire19} : $signed(wire20)))})
        begin
          reg21 <= (~^$unsigned($signed({wire20})));
        end
      else
        begin
          reg21 <= $signed((wire16[(1'h0):(1'h0)] > wire17[(3'h4):(1'h1)]));
          reg22 <= $unsigned(((-(wire17 ? (8'hae) : wire16)) > (&(^wire19))));
        end
      reg23 <= ((&((!reg21) ? (wire15 && reg21) : (reg22 > wire19))) ?
          (&(8'ha8)) : reg21[(3'h4):(1'h1)]);
    end
  assign wire24 = ($signed(wire19[(2'h2):(2'h2)]) ?
                      (8'ha8) : (~wire17[(1'h1):(1'h1)]));
  assign wire25 = $unsigned(wire15);
  always
    @(posedge clk) begin
      if (wire18[(3'h4):(2'h3)])
        begin
          if ((~$unsigned((~(wire17 >>> wire16)))))
            begin
              reg26 <= wire24;
            end
          else
            begin
              reg26 <= ((+($signed(wire16) * reg23[(3'h4):(3'h4)])) ?
                  wire16 : $signed(wire15[(3'h7):(3'h4)]));
            end
        end
      else
        begin
          reg26 <= wire15[(4'h9):(1'h0)];
        end
      if ((^$signed(($signed(reg22) || wire18[(1'h0):(1'h0)]))))
        begin
          reg27 <= ((^$signed((reg21 >>> wire20))) ?
              $unsigned(wire18) : wire25);
          if (($unsigned({{reg27}}) + wire16[(2'h2):(1'h1)]))
            begin
              reg28 <= (((^(reg22 ?
                      wire20 : (8'ha2))) | $unsigned($signed((8'h9e)))) ?
                  (reg22 ? $signed(wire25[(1'h0):(1'h0)]) : reg21) : (wire18 ?
                      wire24[(2'h2):(1'h1)] : ($signed(reg27) ?
                          (reg22 ? wire16 : wire15) : wire25)));
              reg29 <= wire17[(1'h1):(1'h0)];
              reg30 <= $signed((&$unsigned((wire16 >> wire16))));
            end
          else
            begin
              reg28 <= wire25[(2'h3):(1'h0)];
              reg29 <= (+($unsigned((reg22 ? (8'hac) : wire25)) ?
                  reg28[(3'h5):(2'h2)] : ($signed(wire16) & $signed(reg28))));
            end
        end
      else
        begin
          reg27 <= (|(~&$unsigned((~reg30))));
          if ($signed(wire15[(3'h5):(2'h3)]))
            begin
              reg28 <= $signed($unsigned(((reg29 >= wire16) ?
                  (wire24 >>> wire24) : (~^reg23))));
              reg29 <= ($signed($unsigned((reg21 && reg22))) ?
                  reg30 : $signed((8'hb0)));
              reg30 <= ((wire20[(1'h1):(1'h1)] ?
                      wire15[(1'h0):(1'h0)] : ((wire25 && wire20) | (~&reg28))) ?
                  ((!reg27) == (reg29[(1'h1):(1'h0)] == wire24[(1'h0):(1'h0)])) : ($signed((reg22 ~^ reg26)) ?
                      (~$unsigned(reg27)) : reg30[(3'h5):(1'h0)]));
            end
          else
            begin
              reg28 <= $unsigned(wire16[(2'h3):(2'h3)]);
              reg29 <= {$unsigned($unsigned($signed(wire24)))};
              reg30 <= {$signed(((^wire17) ?
                      (wire18 < reg23) : (reg22 > wire24)))};
            end
        end
    end
  assign wire31 = wire25[(3'h5):(3'h5)];
  assign wire32 = $signed((($unsigned(reg21) + (reg30 ^ wire31)) >>> {{reg29}}));
  assign wire33 = reg27[(1'h1):(1'h0)];
  module34 #() modinst52 (wire51, clk, wire33, wire20, reg28, wire24);
  assign wire53 = reg27[(4'h9):(4'h8)];
  assign wire54 = {(((~(8'haf)) ? $unsigned(wire51) : $unsigned(wire24)) ?
                          wire31 : reg21)};
  module55 #() modinst66 (.wire58(reg30), .clk(clk), .wire57(wire54), .y(wire65), .wire56(reg22), .wire59(wire31));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module55
#(parameter param64 = (((((8'ha2) || (8'ha8)) ? ((8'hae) >> (8'haf)) : ((8'ha7) ? (8'hab) : (8'haf))) ? ((~(8'ha5)) + ((8'h9f) ~^ (8'h9c))) : {((8'ha6) ? (8'ha9) : (8'ha4))}) != {(~(-(8'ha7)))}))
(y, clk, wire59, wire58, wire57, wire56);
  output wire [(32'h18):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire59;
  input wire signed [(3'h7):(1'h0)] wire58;
  input wire [(2'h3):(1'h0)] wire57;
  input wire signed [(3'h6):(1'h0)] wire56;
  wire signed [(3'h5):(1'h0)] wire63;
  wire signed [(4'hb):(1'h0)] wire61;
  wire [(2'h2):(1'h0)] wire60;
  reg [(3'h5):(1'h0)] reg62 = (1'h0);
  assign y = {wire63, wire61, wire60, reg62, (1'h0)};
  assign wire60 = (+$unsigned($unsigned((wire59 ? wire56 : wire59))));
  assign wire61 = $signed($unsigned({(wire60 ? wire56 : wire58)}));
  always
    @(posedge clk) begin
      reg62 <= (wire60 | ($signed($signed((8'ha1))) == (~&(wire59 ?
          (8'ha1) : wire59))));
    end
  assign wire63 = ($unsigned(reg62) && (($signed(wire59) < $signed((8'h9c))) == $unsigned((wire58 <= reg62))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34  (y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire38;
  input wire signed [(3'h4):(1'h0)] wire37;
  input wire [(4'h9):(1'h0)] wire36;
  input wire signed [(3'h4):(1'h0)] wire35;
  wire [(4'h9):(1'h0)] wire50;
  wire signed [(3'h7):(1'h0)] wire49;
  wire [(3'h6):(1'h0)] wire48;
  wire signed [(2'h3):(1'h0)] wire47;
  wire signed [(4'h9):(1'h0)] wire46;
  wire signed [(2'h2):(1'h0)] wire42;
  wire [(3'h7):(1'h0)] wire41;
  wire signed [(4'h9):(1'h0)] wire40;
  wire signed [(3'h4):(1'h0)] wire39;
  reg [(4'h9):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg44 = (1'h0);
  reg [(4'hb):(1'h0)] reg43 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 reg45,
                 reg44,
                 reg43,
                 (1'h0)};
  assign wire39 = wire36;
  assign wire40 = $signed($unsigned(wire37));
  assign wire41 = $signed($signed(wire35[(2'h3):(2'h2)]));
  assign wire42 = {((wire37 ? ((8'ha5) != wire39) : wire37[(1'h0):(1'h0)]) ?
                          $signed(wire41) : (~&(8'ha4)))};
  always
    @(posedge clk) begin
      reg43 <= (~^{((wire39 ? wire37 : wire41) ? $signed((8'had)) : {wire38})});
      reg44 <= $unsigned(wire35[(1'h0):(1'h0)]);
      reg45 <= ((^~$unsigned((wire42 ? wire41 : wire35))) - wire40);
    end
  assign wire46 = $signed(($signed((wire39 ?
                      reg45 : reg45)) ^~ ($signed(wire38) >= reg44[(3'h7):(3'h4)])));
  assign wire47 = (~^wire35[(1'h1):(1'h0)]);
  assign wire48 = reg45[(3'h7):(3'h7)];
  assign wire49 = wire40;
  assign wire50 = {$unsigned(($unsigned(reg45) ? (|wire40) : (~|wire36)))};
endmodule