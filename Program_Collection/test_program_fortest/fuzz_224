(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(3'h7):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire47;
  wire [(3'h4):(1'h0)] wire45;
  wire [(4'ha):(1'h0)] wire44;
  wire [(4'h9):(1'h0)] wire42;
  wire signed [(4'h9):(1'h0)] wire8;
  wire [(4'h8):(1'h0)] wire7;
  wire [(3'h4):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  assign y = {wire47,
                 wire45,
                 wire44,
                 wire42,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = (8'h9e);
  assign wire5 = (&(~|wire3));
  assign wire6 = $signed($unsigned({(wire5 ? (8'h9e) : wire4)}));
  assign wire7 = $unsigned(wire5[(2'h3):(1'h1)]);
  assign wire8 = $unsigned(wire0);
  module9 #() modinst43 (wire42, clk, wire5, wire7, wire0, wire8);
  assign wire44 = (wire5 && ({(~|wire2)} >> wire3[(3'h6):(3'h4)]));
  module9 #() modinst46 (wire45, clk, wire2, wire0, wire1, wire42);
  assign wire47 = wire0[(3'h4):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9  (y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire13;
  input wire [(3'h7):(1'h0)] wire12;
  input wire signed [(2'h3):(1'h0)] wire11;
  input wire [(4'h9):(1'h0)] wire10;
  wire signed [(4'hb):(1'h0)] wire41;
  wire [(3'h6):(1'h0)] wire38;
  wire [(4'ha):(1'h0)] wire36;
  wire signed [(4'h8):(1'h0)] wire15;
  wire [(2'h2):(1'h0)] wire14;
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg39 = (1'h0);
  reg [(2'h3):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg16 = (1'h0);
  assign y = {wire41,
                 wire38,
                 wire36,
                 wire15,
                 wire14,
                 reg40,
                 reg39,
                 reg17,
                 reg16,
                 (1'h0)};
  assign wire14 = (~&{(((8'hae) ? wire11 : wire12) ?
                          {wire13} : $signed(wire11))});
  assign wire15 = (8'haa);
  always
    @(posedge clk) begin
      reg16 <= wire10;
      reg17 <= {$signed({(+reg16)})};
    end
  module18 #() modinst37 (.wire22(wire15), .y(wire36), .wire20(wire11), .wire19(wire10), .wire21(wire14), .clk(clk));
  assign wire38 = $signed($signed($unsigned($signed(wire11))));
  always
    @(posedge clk) begin
      reg39 <= wire13;
      reg40 <= (|$signed(($unsigned(wire14) == {(8'had)})));
    end
  assign wire41 = wire13[(3'h6):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18
#(parameter param35 = (((((8'hab) ? (8'ha0) : (8'haf)) ? ((8'had) ^ (8'ha1)) : ((8'had) ^ (8'h9c))) ? (((8'ha2) ? (8'hae) : (8'hab)) ? (+(8'hae)) : (~&(8'ha6))) : (&(|(8'hae)))) - ((((8'hb0) ? (8'h9d) : (8'h9e)) ^~ (~(8'hae))) ? (+{(8'haf)}) : (8'ha3))))
(y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h43):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire22;
  input wire [(2'h2):(1'h0)] wire21;
  input wire [(2'h2):(1'h0)] wire20;
  input wire [(4'h9):(1'h0)] wire19;
  wire [(4'h9):(1'h0)] wire32;
  wire [(4'ha):(1'h0)] wire31;
  wire signed [(2'h3):(1'h0)] wire30;
  wire [(4'h8):(1'h0)] wire29;
  wire [(3'h5):(1'h0)] wire28;
  wire [(3'h4):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire26;
  wire [(3'h5):(1'h0)] wire25;
  wire [(3'h6):(1'h0)] wire24;
  wire signed [(2'h2):(1'h0)] wire23;
  reg signed [(2'h3):(1'h0)] reg34 = (1'h0);
  reg [(2'h3):(1'h0)] reg33 = (1'h0);
  assign y = {wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 reg34,
                 reg33,
                 (1'h0)};
  assign wire23 = ($signed($unsigned((wire21 ? wire22 : wire21))) ?
                      $signed((8'ha0)) : wire21[(1'h0):(1'h0)]);
  assign wire24 = wire21[(2'h2):(2'h2)];
  assign wire25 = ($signed($unsigned((wire20 == wire21))) == {($signed(wire21) ?
                          $signed((8'ha5)) : wire19[(1'h0):(1'h0)])});
  assign wire26 = $signed($signed((wire23 ?
                      (wire21 <<< wire24) : ((8'h9e) == wire19))));
  assign wire27 = (($signed((^~wire20)) ? wire21[(2'h2):(2'h2)] : (8'ha9)) ?
                      (^wire25[(2'h2):(2'h2)]) : $unsigned($unsigned($signed(wire21))));
  assign wire28 = wire22[(3'h4):(2'h2)];
  assign wire29 = ($unsigned((^$unsigned(wire27))) | $unsigned((|(wire23 ?
                      wire24 : wire19))));
  assign wire30 = $signed(((wire29[(3'h7):(2'h2)] + wire19[(4'h8):(3'h4)]) & wire22[(3'h7):(3'h6)]));
  assign wire31 = wire19;
  assign wire32 = wire19;
  always
    @(posedge clk) begin
      reg33 <= (wire26 ?
          ((wire19[(3'h4):(2'h3)] <= (+wire20)) ?
              wire22[(1'h0):(1'h0)] : wire26) : (8'ha9));
      reg34 <= wire31;
    end
endmodule