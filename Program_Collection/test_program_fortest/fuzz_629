(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire8;
  wire [(4'hb):(1'h0)] wire7;
  wire signed [(2'h3):(1'h0)] wire6;
  reg [(4'h9):(1'h0)] reg5 = (1'h0);
  reg [(3'h5):(1'h0)] reg4 = (1'h0);
  assign y = {wire8, wire7, wire6, reg5, reg4, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= (wire0[(2'h2):(2'h2)] ? $signed($signed(wire1)) : wire2);
      reg5 <= ($signed(wire3[(2'h3):(1'h1)]) <<< wire3);
    end
  assign wire6 = $unsigned(wire0[(3'h4):(2'h2)]);
  assign wire7 = $signed((|$signed((wire2 ? (8'h9e) : wire2))));
  assign wire8 = reg5;
endmodule