(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire59;
  wire [(3'h6):(1'h0)] wire58;
  wire signed [(2'h2):(1'h0)] wire57;
  wire signed [(3'h4):(1'h0)] wire56;
  wire signed [(2'h2):(1'h0)] wire55;
  wire signed [(3'h7):(1'h0)] wire54;
  wire [(3'h4):(1'h0)] wire53;
  wire signed [(2'h3):(1'h0)] wire49;
  wire [(2'h3):(1'h0)] wire48;
  wire [(3'h6):(1'h0)] wire46;
  reg signed [(2'h2):(1'h0)] reg52 = (1'h0);
  reg [(4'h9):(1'h0)] reg51 = (1'h0);
  reg [(4'ha):(1'h0)] reg50 = (1'h0);
  assign y = {wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire49,
                 wire48,
                 wire46,
                 reg52,
                 reg51,
                 reg50,
                 (1'h0)};
  module4 #() modinst47 (.wire6(wire0), .wire7(wire1), .y(wire46), .wire8(wire2), .wire5(wire3), .clk(clk));
  assign wire48 = $signed(($signed(((8'h9d) != (8'ha3))) ?
                      ($unsigned(wire3) ?
                          (^wire3) : (wire46 ?
                              wire0 : wire2)) : $unsigned($signed(wire0))));
  assign wire49 = ($signed((+wire48[(1'h1):(1'h0)])) - {{$signed(wire1)}});
  always
    @(posedge clk) begin
      reg50 <= wire49;
      if ($unsigned($signed((wire2 ? {wire46} : reg50[(1'h1):(1'h1)]))))
        begin
          reg51 <= ((wire48[(1'h1):(1'h1)] ^ (wire48 ?
                  wire2 : reg50[(3'h7):(3'h5)])) ?
              ($signed($unsigned((8'had))) ^~ (!wire1[(3'h4):(1'h1)])) : wire2);
        end
      else
        begin
          reg51 <= wire3;
          if ($signed($signed($signed((wire48 ^~ wire2)))))
            begin
              reg52 <= {({((8'ha0) ? (8'ha5) : wire1)} & $unsigned({wire1}))};
            end
          else
            begin
              reg52 <= (~^wire3);
            end
        end
    end
  assign wire53 = (-wire49[(2'h2):(2'h2)]);
  assign wire54 = $unsigned(($unsigned(wire53[(3'h4):(2'h2)]) ?
                      reg50 : $signed({reg51})));
  assign wire55 = $signed(($signed((^reg52)) >>> reg52));
  assign wire56 = $signed((^~$unsigned((wire53 ? wire53 : wire55))));
  assign wire57 = (^~((^~wire0[(3'h7):(3'h7)]) != wire46));
  assign wire58 = {$unsigned(({wire2} ? (~^wire56) : {(8'h9c)}))};
  assign wire59 = $unsigned($unsigned({$unsigned((8'ha3))}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param45 = (((((8'ha0) ? (8'h9c) : (8'ha1)) | ((8'ha2) ? (8'ha9) : (8'hac))) <= ({(8'ha2)} >= {(8'haf)})) ? (8'haf) : (&({(8'ha8)} ? ((8'ha1) ? (8'had) : (8'hab)) : ((8'h9d) ? (8'ha4) : (8'had))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h54):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire8;
  input wire [(3'h4):(1'h0)] wire7;
  input wire signed [(4'h8):(1'h0)] wire6;
  input wire signed [(3'h5):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire42;
  wire [(4'h8):(1'h0)] wire16;
  wire [(4'h8):(1'h0)] wire15;
  wire signed [(3'h6):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire11;
  wire signed [(4'h9):(1'h0)] wire10;
  wire [(4'hb):(1'h0)] wire9;
  assign y = {wire44,
                 wire42,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 (1'h0)};
  assign wire9 = (wire8[(3'h6):(1'h1)] > wire7[(1'h0):(1'h0)]);
  assign wire10 = $signed(wire6);
  assign wire11 = ((wire7[(3'h4):(1'h0)] <<< {(wire8 ?
                          wire10 : wire5)}) >>> (((~^wire8) ?
                      wire9 : (wire10 ?
                          wire10 : wire6)) >> ({wire5} <= (&wire10))));
  assign wire12 = $signed({$signed($signed(wire10))});
  assign wire13 = $unsigned($unsigned((&(wire10 ^ wire8))));
  assign wire14 = ($signed(wire5[(3'h5):(2'h2)]) ?
                      (($signed(wire12) ~^ wire5[(3'h5):(3'h5)]) >> ((wire8 > (8'had)) < wire11)) : $signed(wire5[(1'h1):(1'h0)]));
  assign wire15 = wire7;
  assign wire16 = wire6[(1'h1):(1'h1)];
  module17 #() modinst43 (wire42, clk, wire14, wire9, wire12, wire11);
  assign wire44 = wire9[(2'h3):(2'h3)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17  (y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h8d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire21;
  input wire signed [(4'hb):(1'h0)] wire20;
  input wire [(4'h8):(1'h0)] wire19;
  input wire [(4'h9):(1'h0)] wire18;
  wire signed [(4'h9):(1'h0)] wire41;
  wire [(2'h2):(1'h0)] wire40;
  wire [(4'ha):(1'h0)] wire39;
  wire signed [(4'hb):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire29;
  wire signed [(4'hb):(1'h0)] wire24;
  wire signed [(2'h3):(1'h0)] wire23;
  wire signed [(3'h6):(1'h0)] wire22;
  reg signed [(2'h3):(1'h0)] reg38 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg36 = (1'h0);
  reg [(3'h4):(1'h0)] reg34 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg33 = (1'h0);
  reg [(4'h8):(1'h0)] reg32 = (1'h0);
  reg [(4'ha):(1'h0)] reg31 = (1'h0);
  reg [(4'hb):(1'h0)] reg30 = (1'h0);
  reg [(3'h5):(1'h0)] reg28 = (1'h0);
  reg [(3'h7):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg26 = (1'h0);
  reg [(4'hb):(1'h0)] reg25 = (1'h0);
  assign y = {wire41,
                 wire40,
                 wire39,
                 wire35,
                 wire29,
                 wire24,
                 wire23,
                 wire22,
                 reg38,
                 reg37,
                 reg36,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 (1'h0)};
  assign wire22 = $unsigned({$unsigned($unsigned(wire21))});
  assign wire23 = ((($signed(wire22) ? $unsigned(wire22) : (wire21 & wire22)) ?
                      ($unsigned(wire18) ?
                          {wire19} : wire19[(3'h7):(1'h0)]) : (-$signed(wire22))) <<< wire20);
  assign wire24 = ($signed(wire23) ?
                      wire23[(2'h3):(2'h2)] : (~^(^(wire23 * wire18))));
  always
    @(posedge clk) begin
      reg25 <= {(!wire21)};
      if ((~wire24[(4'ha):(3'h7)]))
        begin
          if (({(((8'ha1) >>> wire21) ?
                  $unsigned(wire23) : wire20[(4'ha):(3'h4)])} <= wire24[(3'h5):(3'h5)]))
            begin
              reg26 <= wire19;
            end
          else
            begin
              reg26 <= (^~(&reg26));
            end
        end
      else
        begin
          if ((^(reg26 ? (~&wire22[(1'h1):(1'h0)]) : wire21[(3'h6):(3'h5)])))
            begin
              reg26 <= $unsigned(reg25);
            end
          else
            begin
              reg26 <= ((&(~&wire22[(3'h6):(3'h5)])) >= wire23[(2'h3):(1'h1)]);
            end
        end
      reg27 <= $signed($signed($unsigned(reg26[(3'h6):(3'h6)])));
    end
  always
    @(posedge clk) begin
      reg28 <= $unsigned(((~(!wire20)) ^ (wire23 ~^ (wire21 ^~ wire18))));
    end
  assign wire29 = ((wire22[(3'h6):(3'h4)] ?
                      (|reg28) : ($unsigned((8'haa)) ?
                          (wire24 != reg26) : $unsigned(wire20))) <= ({{reg28}} ^ ((reg26 >> wire21) ?
                      wire23 : (~^reg25))));
  always
    @(posedge clk) begin
      if ((({((8'hab) && reg26)} * (wire20 ?
          (reg25 >= wire22) : wire23)) > $unsigned($signed($unsigned(wire19)))))
        begin
          if (wire18)
            begin
              reg30 <= $unsigned(wire24);
              reg31 <= wire23;
            end
          else
            begin
              reg30 <= $signed($unsigned(reg28));
            end
        end
      else
        begin
          if (wire20)
            begin
              reg30 <= $unsigned($unsigned($unsigned((8'h9e))));
              reg31 <= (~&(~^$signed(reg27)));
              reg32 <= {{$signed($unsigned(wire24))}};
            end
          else
            begin
              reg30 <= (8'ha8);
            end
          reg33 <= ((-reg32) ^~ wire19);
        end
      reg34 <= $signed((($unsigned(wire22) ?
          $unsigned(reg28) : (reg32 ? reg33 : wire24)) <<< (reg26 >> ((8'ha1) ?
          wire22 : wire29))));
    end
  assign wire35 = wire23[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg36 <= reg34;
    end
  always
    @(posedge clk) begin
      reg37 <= (~(^(-(|wire20))));
      reg38 <= (((8'ha9) - $signed(reg25[(4'h8):(3'h7)])) * ((-(reg34 ?
              reg34 : wire22)) ?
          ({wire23} || (wire22 ^ reg33)) : wire20[(1'h1):(1'h1)]));
    end
  assign wire39 = reg25;
  assign wire40 = (~&(~(+wire22)));
  assign wire41 = ($unsigned($signed((~&reg31))) ?
                      $unsigned($signed((+reg30))) : $signed({wire19}));
endmodule