(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire81;
  wire [(3'h7):(1'h0)] wire80;
  wire signed [(4'hb):(1'h0)] wire79;
  wire signed [(3'h6):(1'h0)] wire78;
  wire [(2'h2):(1'h0)] wire77;
  wire signed [(3'h5):(1'h0)] wire75;
  wire signed [(4'h9):(1'h0)] wire73;
  wire signed [(4'hb):(1'h0)] wire8;
  wire signed [(3'h4):(1'h0)] wire7;
  wire [(3'h7):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire5;
  wire [(2'h2):(1'h0)] wire4;
  assign y = {wire81,
                 wire80,
                 wire79,
                 wire78,
                 wire77,
                 wire75,
                 wire73,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = $signed((((wire2 != wire2) ?
                         wire0[(2'h2):(2'h2)] : wire2[(3'h6):(2'h2)]) ?
                     wire3 : (|(wire3 ? wire3 : wire3))));
  assign wire5 = $unsigned(wire3[(2'h3):(2'h2)]);
  assign wire6 = wire2;
  assign wire7 = ((wire0 != $unsigned($unsigned(wire3))) >>> $signed(((|wire2) ?
                     $signed(wire3) : (&wire0))));
  assign wire8 = wire4[(1'h1):(1'h0)];
  module9 #() modinst74 (.wire11(wire6), .wire12(wire5), .y(wire73), .clk(clk), .wire13(wire3), .wire10(wire1));
  module14 #() modinst76 (.wire17(wire8), .clk(clk), .wire15(wire2), .wire16(wire73), .wire18(wire0), .y(wire75));
  assign wire77 = ($signed(wire2[(3'h4):(3'h4)]) ?
                      (~^wire7) : $unsigned(($signed(wire4) && wire73)));
  assign wire78 = $unsigned({((wire77 ^ wire3) ?
                          $signed(wire0) : wire77[(1'h1):(1'h1)])});
  assign wire79 = $signed(wire73[(2'h3):(1'h1)]);
  assign wire80 = wire8;
  assign wire81 = $signed({{(wire8 * wire4)}});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param72 = (+(^~(((8'ha8) ? (8'hab) : (8'h9c)) ? {(8'haf)} : (-(8'ha5))))))
(y, clk, wire10, wire11, wire12, wire13);
  output wire [(32'h7f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire signed [(3'h7):(1'h0)] wire11;
  input wire signed [(4'ha):(1'h0)] wire12;
  input wire signed [(4'h9):(1'h0)] wire13;
  wire signed [(2'h3):(1'h0)] wire71;
  wire [(3'h6):(1'h0)] wire70;
  wire [(4'h9):(1'h0)] wire69;
  wire signed [(3'h5):(1'h0)] wire68;
  wire signed [(4'ha):(1'h0)] wire67;
  wire signed [(4'ha):(1'h0)] wire66;
  wire [(3'h7):(1'h0)] wire27;
  wire signed [(4'h8):(1'h0)] wire32;
  wire signed [(2'h2):(1'h0)] wire33;
  wire signed [(4'hb):(1'h0)] wire34;
  wire [(3'h6):(1'h0)] wire64;
  reg [(2'h2):(1'h0)] reg29 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg30 = (1'h0);
  reg [(2'h3):(1'h0)] reg31 = (1'h0);
  reg [(4'hb):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg36 = (1'h0);
  reg [(3'h7):(1'h0)] reg37 = (1'h0);
  reg [(3'h4):(1'h0)] reg38 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg39 = (1'h0);
  assign y = {wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire27,
                 wire32,
                 wire33,
                 wire34,
                 wire64,
                 reg29,
                 reg30,
                 reg31,
                 reg35,
                 reg36,
                 reg37,
                 reg38,
                 reg39,
                 (1'h0)};
  module14 #() modinst28 (wire27, clk, wire12, wire10, wire13, wire11);
  always
    @(posedge clk) begin
      if (wire13)
        begin
          reg29 <= $unsigned(wire10);
          if ($signed(wire13[(1'h0):(1'h0)]))
            begin
              reg30 <= $unsigned(reg29[(1'h1):(1'h0)]);
            end
          else
            begin
              reg30 <= $signed((~&$signed((wire27 ? (8'h9d) : (8'hab)))));
            end
        end
      else
        begin
          reg29 <= wire13;
          reg30 <= reg29[(1'h0):(1'h0)];
        end
      reg31 <= (($signed($signed(wire13)) ?
          $signed(((8'hb0) ?
              wire10 : wire11)) : (wire27 | reg29[(1'h0):(1'h0)])) * ((|{wire12}) + {{wire13}}));
    end
  assign wire32 = $signed($signed(($unsigned(reg29) ? $signed(reg30) : reg29)));
  assign wire33 = reg29;
  assign wire34 = wire27;
  always
    @(posedge clk) begin
      if (($signed(($signed(wire11) ?
          $unsigned(wire10) : (^~wire32))) ~^ (8'ha0)))
        begin
          reg35 <= {wire27};
          reg36 <= ((8'h9c) ? wire10 : reg35[(4'h8):(3'h6)]);
        end
      else
        begin
          if ((reg30[(3'h7):(2'h2)] <= ({((8'hab) ?
                  wire11 : (8'ha2))} || $signed(wire11))))
            begin
              reg35 <= $signed((wire33[(1'h0):(1'h0)] - wire32));
              reg36 <= (((wire32[(4'h8):(2'h3)] ?
                      reg30[(3'h4):(1'h0)] : (wire27 ?
                          (8'had) : reg31)) + $signed($unsigned(wire33))) ?
                  wire34[(4'h9):(3'h6)] : wire33);
            end
          else
            begin
              reg35 <= $unsigned(($signed((reg29 ? wire34 : wire33)) ?
                  wire32 : (~|$signed(wire32))));
            end
          reg37 <= wire10;
          reg38 <= {$signed(((wire27 >> reg36) >> (reg31 * reg37)))};
        end
      reg39 <= wire34;
    end
  module40 #() modinst65 (.wire41(wire34), .clk(clk), .wire44(wire27), .wire42(wire10), .y(wire64), .wire43(reg35));
  assign wire66 = reg30;
  assign wire67 = reg37[(2'h2):(1'h0)];
  assign wire68 = {wire67};
  assign wire69 = reg37[(3'h5):(3'h4)];
  assign wire70 = (^wire12[(3'h6):(2'h3)]);
  assign wire71 = $unsigned((wire10[(1'h0):(1'h0)] ?
                      wire70 : $signed((reg30 ? (8'h9e) : reg30))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module40
#(parameter param63 = (&((^~((8'had) ? (8'ha2) : (8'ha3))) ? (~^{(8'h9d)}) : (((8'hac) ^~ (8'haa)) || (^(8'ha5))))))
(y, clk, wire44, wire43, wire42, wire41);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire44;
  input wire [(3'h6):(1'h0)] wire43;
  input wire [(4'ha):(1'h0)] wire42;
  input wire signed [(4'hb):(1'h0)] wire41;
  wire [(4'h9):(1'h0)] wire61;
  wire [(4'ha):(1'h0)] wire60;
  wire [(2'h2):(1'h0)] wire59;
  wire signed [(3'h7):(1'h0)] wire58;
  wire signed [(4'h9):(1'h0)] wire52;
  wire [(3'h5):(1'h0)] wire51;
  wire [(2'h3):(1'h0)] wire46;
  wire signed [(3'h4):(1'h0)] wire45;
  reg [(3'h4):(1'h0)] reg62 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg57 = (1'h0);
  reg [(3'h7):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg54 = (1'h0);
  reg [(3'h7):(1'h0)] reg53 = (1'h0);
  reg [(3'h4):(1'h0)] reg50 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg49 = (1'h0);
  reg [(2'h2):(1'h0)] reg48 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg47 = (1'h0);
  assign y = {wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire52,
                 wire51,
                 wire46,
                 wire45,
                 reg62,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 (1'h0)};
  assign wire45 = (wire42 - (($signed(wire44) >= $unsigned(wire41)) > $signed(wire44[(3'h7):(3'h6)])));
  assign wire46 = wire43[(3'h4):(1'h1)];
  always
    @(posedge clk) begin
      reg47 <= wire41;
      if ((wire44 ?
          (wire41[(3'h4):(2'h3)] * $unsigned(wire46)) : ($signed($signed(reg47)) ^ wire42)))
        begin
          reg48 <= $unsigned(((^(wire43 ?
              wire46 : (8'haf))) <<< wire44[(2'h3):(2'h3)]));
          reg49 <= (~wire46);
        end
      else
        begin
          reg48 <= (|($unsigned(wire42) ?
              $unsigned((wire41 <<< wire46)) : ({reg49} ?
                  (reg48 ? wire42 : (8'ha6)) : $unsigned(reg48))));
          reg49 <= (-reg48);
          reg50 <= ($signed(reg49[(2'h3):(1'h0)]) ?
              $unsigned($signed((reg48 > wire44))) : (!wire43));
        end
    end
  assign wire51 = (wire42[(4'h9):(2'h2)] * wire43);
  assign wire52 = reg48;
  always
    @(posedge clk) begin
      reg53 <= ((wire46 ?
          {(reg49 ?
                  wire43 : wire41)} : wire52[(1'h1):(1'h0)]) >>> ({(wire41 >> wire44)} ?
          $signed((reg48 > reg48)) : $unsigned((wire44 && wire44))));
      if (({(reg47[(3'h4):(3'h4)] > (wire46 | reg49))} >>> (reg48 ~^ $unsigned((wire52 & reg50)))))
        begin
          reg54 <= ({((wire42 ? reg50 : wire43) ^~ reg47[(2'h3):(2'h3)])} ?
              (^$unsigned((reg53 ?
                  (8'hab) : (8'h9e)))) : ((-(~reg49)) == ((wire42 ?
                      reg47 : reg47) ?
                  wire41[(4'hb):(4'h9)] : (~wire41))));
          reg55 <= $signed($unsigned(wire46));
          reg56 <= wire43;
        end
      else
        begin
          reg54 <= wire42;
          reg55 <= wire43[(3'h5):(3'h5)];
        end
      reg57 <= $signed({$signed((wire51 ? wire43 : reg47))});
    end
  assign wire58 = reg57[(2'h2):(1'h1)];
  assign wire59 = $unsigned((wire51 ?
                      (reg47 ?
                          wire43[(3'h5):(2'h2)] : $signed(wire51)) : ($unsigned((8'ha7)) < (~|wire43))));
  assign wire60 = wire46[(2'h2):(2'h2)];
  assign wire61 = wire42[(3'h5):(3'h4)];
  always
    @(posedge clk) begin
      reg62 <= (~^(reg49[(3'h6):(1'h1)] ?
          $unsigned(reg47[(3'h6):(3'h4)]) : ($signed(wire52) || wire46[(1'h1):(1'h0)])));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire18;
  input wire [(2'h3):(1'h0)] wire17;
  input wire [(4'h9):(1'h0)] wire16;
  input wire [(2'h3):(1'h0)] wire15;
  wire [(4'hb):(1'h0)] wire26;
  wire signed [(3'h5):(1'h0)] wire25;
  wire signed [(3'h5):(1'h0)] wire22;
  wire [(4'h9):(1'h0)] wire21;
  wire signed [(2'h3):(1'h0)] wire19;
  reg [(2'h2):(1'h0)] reg24 = (1'h0);
  reg [(4'ha):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg20 = (1'h0);
  assign y = {wire26,
                 wire25,
                 wire22,
                 wire21,
                 wire19,
                 reg24,
                 reg23,
                 reg20,
                 (1'h0)};
  assign wire19 = (^wire16[(4'h8):(4'h8)]);
  always
    @(posedge clk) begin
      reg20 <= $signed(wire17[(1'h1):(1'h1)]);
    end
  assign wire21 = wire17;
  assign wire22 = wire15[(2'h2):(1'h1)];
  always
    @(posedge clk) begin
      reg23 <= wire18[(1'h1):(1'h1)];
      reg24 <= ($signed(((|reg23) | ((8'h9f) ? wire16 : wire18))) ~^ ({(wire22 ?
                  reg23 : wire15)} ?
          ($signed(wire16) * wire19[(1'h0):(1'h0)]) : (|((8'ha7) ?
              wire22 : wire22))));
    end
  assign wire25 = wire15[(2'h3):(1'h1)];
  assign wire26 = reg23;
endmodule