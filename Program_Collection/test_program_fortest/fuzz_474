(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h56):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire67;
  wire [(3'h5):(1'h0)] wire66;
  wire [(3'h4):(1'h0)] wire65;
  wire signed [(3'h4):(1'h0)] wire64;
  wire signed [(3'h6):(1'h0)] wire61;
  wire signed [(2'h2):(1'h0)] wire59;
  wire signed [(4'h9):(1'h0)] wire58;
  wire [(4'h9):(1'h0)] wire57;
  wire signed [(4'h9):(1'h0)] wire55;
  wire signed [(4'h9):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire4;
  reg [(2'h3):(1'h0)] reg63 = (1'h0);
  reg [(3'h5):(1'h0)] reg62 = (1'h0);
  assign y = {wire67,
                 wire66,
                 wire65,
                 wire64,
                 wire61,
                 wire59,
                 wire58,
                 wire57,
                 wire55,
                 wire5,
                 wire4,
                 reg63,
                 reg62,
                 (1'h0)};
  assign wire4 = wire1[(2'h3):(2'h3)];
  assign wire5 = $signed(($signed(wire3) ?
                     ((wire1 ? wire0 : wire0) * wire1) : wire2));
  module6 #() modinst56 (.wire10(wire5), .y(wire55), .clk(clk), .wire7(wire4), .wire9(wire1), .wire8(wire2));
  assign wire57 = (8'hac);
  assign wire58 = $unsigned((((~wire4) ?
                      ((8'hac) + wire5) : {wire55}) >> ((|(8'h9f)) ?
                      (~&wire4) : (wire55 ? wire3 : wire1))));
  module6 #() modinst60 (.wire8(wire55), .clk(clk), .wire10(wire4), .wire7(wire58), .wire9(wire1), .y(wire59));
  assign wire61 = ((8'ha8) ?
                      $unsigned((8'h9c)) : ($unsigned(wire5[(3'h6):(2'h2)]) << (wire2[(1'h0):(1'h0)] ?
                          wire58[(3'h6):(2'h3)] : (wire57 >>> (8'ha0)))));
  always
    @(posedge clk) begin
      if (wire58)
        begin
          reg62 <= (~^(-$signed((~|wire4))));
          reg63 <= (wire58 != wire5);
        end
      else
        begin
          reg62 <= (8'ha6);
        end
    end
  assign wire64 = reg63;
  assign wire65 = {(~|(wire59 ? reg62[(2'h2):(1'h0)] : (wire57 == reg62)))};
  assign wire66 = {$unsigned(wire65[(3'h4):(3'h4)])};
  assign wire67 = (^~(((8'ha9) <= $signed(wire65)) ?
                      (wire65[(2'h2):(2'h2)] ^~ (wire59 ?
                          wire5 : wire2)) : $unsigned($unsigned((8'ha1)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire7, wire8, wire9, wire10);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire7;
  input wire [(4'h9):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire10;
  wire [(3'h7):(1'h0)] wire11;
  wire signed [(3'h6):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire27;
  wire [(4'hb):(1'h0)] wire29;
  wire signed [(3'h5):(1'h0)] wire45;
  wire [(2'h3):(1'h0)] wire47;
  wire [(4'h8):(1'h0)] wire50;
  reg signed [(4'h9):(1'h0)] reg54 = (1'h0);
  reg [(4'ha):(1'h0)] reg53 = (1'h0);
  reg [(3'h5):(1'h0)] reg52 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg48 = (1'h0);
  reg [(4'hb):(1'h0)] reg49 = (1'h0);
  assign y = {wire11,
                 wire12,
                 wire27,
                 wire29,
                 wire45,
                 wire47,
                 wire50,
                 reg54,
                 reg53,
                 reg52,
                 reg48,
                 reg49,
                 (1'h0)};
  assign wire11 = (wire7[(2'h2):(2'h2)] ?
                      $signed(((^~wire10) ?
                          {wire7} : wire9)) : wire8[(3'h7):(1'h1)]);
  assign wire12 = ($signed(((wire8 == wire10) ?
                          $unsigned(wire8) : ((8'haa) || wire10))) ?
                      ($unsigned((^~wire11)) ?
                          wire10[(2'h3):(2'h3)] : wire7) : ($signed(wire7[(2'h3):(1'h0)]) ?
                          wire9[(3'h6):(2'h3)] : ($unsigned(wire10) ?
                              (^(8'haf)) : (wire8 ? wire8 : wire8))));
  module13 #() modinst28 (.wire16(wire9), .wire15(wire8), .clk(clk), .wire17(wire7), .wire14(wire11), .y(wire27));
  assign wire29 = {$signed(wire12)};
  module30 #() modinst46 (wire45, clk, wire12, wire11, wire29, wire7);
  assign wire47 = {$signed($signed((wire12 <= wire12)))};
  always
    @(posedge clk) begin
      reg48 <= wire45;
      reg49 <= ($unsigned($unsigned((reg48 ? wire11 : wire12))) ?
          wire7 : ((8'ha2) ? wire47 : (|$signed(wire12))));
    end
  module13 #() modinst51 (.wire15(wire45), .wire16(wire29), .y(wire50), .wire14(reg49), .clk(clk), .wire17(wire9));
  always
    @(posedge clk) begin
      reg52 <= wire47;
      reg53 <= (((8'ha7) ?
          $signed({reg48}) : ($unsigned(reg52) <= (8'ha4))) >>> $signed($unsigned($signed((8'ha2)))));
      reg54 <= reg49;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module30
#(parameter param44 = ((~|{((8'haf) <<< (8'hac))}) ? {(~&((8'h9e) || (8'hab)))} : {{((8'ha9) ? (8'hac) : (8'ha9))}}))
(y, clk, wire34, wire33, wire32, wire31);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire34;
  input wire signed [(3'h6):(1'h0)] wire33;
  input wire signed [(4'hb):(1'h0)] wire32;
  input wire [(4'h9):(1'h0)] wire31;
  wire [(4'hb):(1'h0)] wire43;
  wire signed [(4'h9):(1'h0)] wire42;
  wire signed [(2'h3):(1'h0)] wire41;
  wire [(4'ha):(1'h0)] wire40;
  wire [(2'h2):(1'h0)] wire39;
  wire [(4'h9):(1'h0)] wire38;
  wire [(4'h9):(1'h0)] wire37;
  wire signed [(4'h9):(1'h0)] wire36;
  wire [(4'h8):(1'h0)] wire35;
  assign y = {wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 (1'h0)};
  assign wire35 = (wire31 ?
                      (($signed((8'haa)) ^ (|wire33)) ?
                          (|(wire32 ?
                              wire33 : wire31)) : (wire32[(3'h7):(3'h7)] ?
                              wire33[(3'h6):(3'h4)] : wire34[(2'h2):(1'h1)])) : $signed((&$signed(wire32))));
  assign wire36 = $unsigned(wire35);
  assign wire37 = wire32;
  assign wire38 = (|$signed((wire36 ? wire36 : (wire32 + (8'ha6)))));
  assign wire39 = (wire34[(1'h0):(1'h0)] - $unsigned(((~&wire32) <= {wire36})));
  assign wire40 = wire34[(1'h1):(1'h0)];
  assign wire41 = ($unsigned((+$signed(wire31))) ?
                      (((!wire35) <<< wire38) << wire37) : wire39);
  assign wire42 = ((($signed(wire35) + ((8'haf) ? wire40 : wire35)) ?
                      (+(wire41 && wire33)) : $unsigned(wire33[(2'h2):(1'h0)])) >>> (wire40 ?
                      $unsigned((!wire31)) : ((wire38 ? wire38 : wire36) ?
                          (wire31 ~^ wire39) : ((8'hab) && wire35))));
  assign wire43 = wire34[(1'h0):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param26 = ((&(|(~|(8'ha7)))) ? (+((-(8'ha5)) ? ((8'hac) ? (8'ha4) : (8'ha4)) : ((8'ha9) || (8'ha3)))) : {(~|(~&(8'hab)))}))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire17;
  input wire [(4'h8):(1'h0)] wire16;
  input wire [(3'h5):(1'h0)] wire15;
  input wire signed [(3'h7):(1'h0)] wire14;
  wire [(4'h8):(1'h0)] wire25;
  wire [(3'h6):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  wire signed [(2'h3):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire21;
  wire [(2'h3):(1'h0)] wire18;
  reg [(4'h9):(1'h0)] reg20 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg19 = (1'h0);
  assign y = {wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire18,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire18 = ((({wire17} ?
                          ((8'ha1) ?
                              wire17 : wire16) : $signed(wire15)) <= wire14) ?
                      {($signed(wire15) ~^ $unsigned((8'hae)))} : $signed(wire17[(2'h2):(1'h0)]));
  always
    @(posedge clk) begin
      reg19 <= (~&(|((wire17 < wire18) || wire16[(4'h8):(3'h5)])));
      reg20 <= $unsigned(((wire16 >> (wire17 < (8'ha7))) ?
          $signed({wire16}) : $unsigned($signed(wire18))));
    end
  assign wire21 = (~&wire18[(2'h2):(1'h1)]);
  assign wire22 = wire21;
  assign wire23 = (wire17[(2'h2):(1'h0)] ?
                      wire15 : $unsigned($unsigned($unsigned(reg20))));
  assign wire24 = $signed(reg19);
  assign wire25 = ($signed(wire21) - ({reg19[(3'h4):(1'h1)]} >>> (8'ha6)));
endmodule