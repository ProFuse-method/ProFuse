(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire [(3'h7):(1'h0)] wire42;
  wire [(3'h5):(1'h0)] wire41;
  wire signed [(4'h9):(1'h0)] wire39;
  wire [(3'h4):(1'h0)] wire4;
  assign y = {wire42, wire41, wire39, wire4, (1'h0)};
  assign wire4 = wire2[(2'h2):(2'h2)];
  module5 #() modinst40 (wire39, clk, wire3, wire1, wire0, wire2);
  assign wire41 = $unsigned($signed(wire1[(1'h1):(1'h0)]));
  assign wire42 = $unsigned($unsigned($signed((wire1 ^~ wire2))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire6, wire7, wire8, wire9);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire6;
  input wire signed [(3'h6):(1'h0)] wire7;
  input wire [(4'h8):(1'h0)] wire8;
  input wire signed [(3'h4):(1'h0)] wire9;
  wire signed [(4'h9):(1'h0)] wire38;
  wire [(4'h8):(1'h0)] wire37;
  wire [(3'h4):(1'h0)] wire36;
  wire [(4'h9):(1'h0)] wire35;
  wire [(3'h7):(1'h0)] wire34;
  wire signed [(2'h3):(1'h0)] wire33;
  wire signed [(3'h6):(1'h0)] wire32;
  wire signed [(3'h4):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire30;
  wire [(4'h8):(1'h0)] wire12;
  wire [(4'h8):(1'h0)] wire28;
  reg signed [(3'h4):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg11 = (1'h0);
  assign y = {wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire12,
                 wire28,
                 reg10,
                 reg11,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg10 <= (8'haf);
      reg11 <= ($signed(wire6[(1'h0):(1'h0)]) != wire9);
    end
  assign wire12 = (8'ha9);
  module13 #() modinst29 (wire28, clk, reg11, wire7, wire12, wire9);
  assign wire30 = {$unsigned($signed((reg10 == (8'hac))))};
  assign wire31 = $signed($signed((wire12[(3'h6):(3'h4)] ?
                      $signed(wire12) : $signed(wire28))));
  assign wire32 = wire28;
  assign wire33 = ((((+wire7) ^ wire6) >>> wire8[(3'h7):(2'h3)]) ?
                      ((~|$signed(wire9)) ?
                          (~^(!wire6)) : $unsigned(wire32)) : ((((8'h9d) ?
                          wire7 : wire32) & wire32) != wire32));
  assign wire34 = {$signed($signed((wire30 ? wire33 : wire30)))};
  assign wire35 = {reg11[(2'h2):(2'h2)]};
  assign wire36 = ($unsigned((wire6[(2'h2):(2'h2)] ? wire32 : (~^wire35))) ?
                      wire34[(3'h4):(1'h1)] : $unsigned((8'ha2)));
  assign wire37 = (&{$signed(wire31)});
  assign wire38 = $unsigned(wire30);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param27 = (((((8'ha8) ? (8'haa) : (8'h9d)) && {(8'ha0)}) ? (8'ha6) : {(~&(8'hac))}) & (8'ha7)))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire17;
  input wire [(3'h5):(1'h0)] wire16;
  input wire [(4'h8):(1'h0)] wire15;
  input wire [(2'h3):(1'h0)] wire14;
  wire signed [(3'h7):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire25;
  wire signed [(3'h4):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire19;
  wire [(4'h8):(1'h0)] wire18;
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg [(4'hb):(1'h0)] reg22 = (1'h0);
  reg [(3'h7):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg20 = (1'h0);
  assign y = {wire26,
                 wire25,
                 wire24,
                 wire19,
                 wire18,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  assign wire18 = $signed($signed(wire14));
  assign wire19 = $unsigned({wire18[(1'h1):(1'h0)]});
  always
    @(posedge clk) begin
      if ($signed(((wire16[(1'h0):(1'h0)] ?
          (wire17 ? wire17 : wire16) : (wire17 ?
              wire19 : (8'h9f))) * $unsigned(wire19))))
        begin
          reg20 <= {wire15};
          if (($signed($signed(((8'haf) ~^ wire14))) ?
              (|$signed((-wire18))) : (8'h9f)))
            begin
              reg21 <= ((~(|$unsigned(wire18))) ?
                  wire16[(3'h5):(3'h5)] : wire16[(2'h2):(2'h2)]);
              reg22 <= (8'ha0);
              reg23 <= ($unsigned((~((8'h9d) * (8'ha5)))) ?
                  {$unsigned((wire17 << (8'h9e)))} : ($unsigned((wire18 ?
                          reg21 : reg22)) ?
                      $unsigned((wire17 * reg21)) : ({(8'h9e)} & (wire15 ?
                          wire18 : reg20))));
            end
          else
            begin
              reg21 <= $unsigned($signed($signed({wire17})));
              reg22 <= ({($signed(wire14) ?
                          (wire18 & (8'hac)) : (reg23 | reg23))} ?
                  reg23[(2'h2):(1'h0)] : (|$unsigned((~|wire18))));
              reg23 <= $unsigned((({wire17} & $unsigned(reg21)) == reg23[(1'h0):(1'h0)]));
            end
        end
      else
        begin
          reg20 <= (^{$unsigned(reg20)});
          reg21 <= ((~reg23[(2'h2):(1'h1)]) > (~^reg22));
          reg22 <= (reg22[(1'h0):(1'h0)] ?
              ({(~reg20)} * $signed(reg21)) : $signed(wire17[(3'h7):(1'h1)]));
        end
    end
  assign wire24 = {{($unsigned((8'ha4)) ?
                              $signed(wire14) : $unsigned(wire18))}};
  assign wire25 = wire24[(2'h3):(2'h2)];
  assign wire26 = wire25[(1'h0):(1'h0)];
endmodule