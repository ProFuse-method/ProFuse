(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h29):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire21;
  wire [(4'h9):(1'h0)] wire19;
  wire [(4'h9):(1'h0)] wire6;
  reg signed [(4'hb):(1'h0)] reg5 = (1'h0);
  reg [(3'h6):(1'h0)] reg4 = (1'h0);
  assign y = {wire21, wire19, wire6, reg5, reg4, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= (wire3[(4'h9):(1'h1)] != wire2[(4'h8):(3'h4)]);
      reg5 <= {($unsigned({(8'ha2)}) < ((8'h9d) ^ {wire0}))};
    end
  assign wire6 = $unsigned(((~reg5[(3'h5):(3'h5)]) <<< $signed(wire1[(1'h1):(1'h1)])));
  module7 #() modinst20 (.wire8(reg5), .y(wire19), .wire9(reg4), .wire11(wire3), .clk(clk), .wire10(wire2));
  assign wire21 = {wire6};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h34):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire11;
  input wire [(3'h7):(1'h0)] wire10;
  input wire signed [(3'h6):(1'h0)] wire9;
  input wire signed [(3'h7):(1'h0)] wire8;
  wire [(3'h6):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire16;
  wire [(3'h7):(1'h0)] wire15;
  wire signed [(3'h6):(1'h0)] wire14;
  wire signed [(3'h4):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire12;
  reg signed [(4'h9):(1'h0)] reg17 = (1'h0);
  assign y = {wire18, wire16, wire15, wire14, wire13, wire12, reg17, (1'h0)};
  assign wire12 = $signed(wire8[(3'h4):(1'h1)]);
  assign wire13 = $signed($signed($unsigned(wire10[(2'h3):(2'h3)])));
  assign wire14 = ({({wire12} ? (+wire8) : (~|wire9))} ?
                      (({wire10} >> $unsigned(wire9)) != wire9) : wire12[(4'ha):(3'h4)]);
  assign wire15 = ($signed((wire9 << (wire11 ? wire14 : wire8))) ?
                      $signed((wire12[(3'h6):(1'h0)] | $unsigned(wire12))) : $signed((wire11[(3'h7):(1'h1)] ?
                          $signed(wire14) : (^wire13))));
  assign wire16 = wire9[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      reg17 <= {{wire14[(1'h0):(1'h0)]}};
    end
  assign wire18 = ({wire9[(1'h0):(1'h0)]} ?
                      $unsigned({(&wire10)}) : (-$signed($unsigned(wire14))));
endmodule