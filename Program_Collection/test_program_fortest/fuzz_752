(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param41 = ({(((8'ha6) ? (8'hae) : (8'ha2)) >>> ((8'ha4) <= (8'ha6)))} ? ((((8'ha3) ? (8'h9d) : (8'ha6)) >> (~&(8'ha8))) ? ({(8'ha2)} ? ((8'ha7) ? (8'ha7) : (8'haa)) : (+(8'ha6))) : (-{(8'h9e)})) : ((((8'hae) >>> (8'ha1)) ~^ (~(8'ha1))) ? (8'had) : ({(8'ha0)} >>> ((8'ha0) && (8'ha6))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire40;
  wire signed [(4'hb):(1'h0)] wire37;
  wire signed [(4'hb):(1'h0)] wire36;
  wire [(3'h6):(1'h0)] wire34;
  wire signed [(3'h5):(1'h0)] wire7;
  wire signed [(2'h2):(1'h0)] wire6;
  wire [(2'h2):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  reg [(3'h5):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg38 = (1'h0);
  assign y = {wire40,
                 wire37,
                 wire36,
                 wire34,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg39,
                 reg38,
                 (1'h0)};
  assign wire4 = {(^(8'ha0))};
  assign wire5 = (~&wire1);
  assign wire6 = wire5;
  assign wire7 = $signed($signed(wire6));
  module8 #() modinst35 (.wire12(wire7), .wire11(wire0), .wire10(wire4), .wire9(wire2), .clk(clk), .y(wire34));
  assign wire36 = wire6[(2'h2):(1'h0)];
  assign wire37 = (^wire3);
  always
    @(posedge clk) begin
      if ((((-(-wire7)) ?
              wire4[(4'h8):(2'h3)] : ((~|wire2) ?
                  $unsigned(wire34) : $unsigned(wire3))) ?
          ((+wire37) ?
              (8'ha1) : ((wire0 & wire3) | (+wire36))) : $unsigned($unsigned({wire5}))))
        begin
          reg38 <= ($signed(wire3) ? {wire3} : wire6);
        end
      else
        begin
          reg38 <= ((8'ha8) ^~ wire7[(1'h0):(1'h0)]);
        end
      reg39 <= wire4[(1'h1):(1'h1)];
    end
  assign wire40 = $signed((wire6 ~^ {$unsigned(wire0)}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h7e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire12;
  input wire [(2'h3):(1'h0)] wire11;
  input wire [(4'ha):(1'h0)] wire10;
  input wire signed [(2'h3):(1'h0)] wire9;
  wire [(3'h5):(1'h0)] wire33;
  wire [(2'h3):(1'h0)] wire18;
  wire signed [(4'h9):(1'h0)] wire17;
  wire [(3'h6):(1'h0)] wire16;
  wire [(4'h9):(1'h0)] wire15;
  wire [(3'h5):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire13;
  reg [(2'h2):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg31 = (1'h0);
  reg [(4'ha):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg29 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg28 = (1'h0);
  reg [(4'ha):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg25 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg24 = (1'h0);
  reg [(4'h8):(1'h0)] reg23 = (1'h0);
  reg [(2'h2):(1'h0)] reg22 = (1'h0);
  reg [(3'h5):(1'h0)] reg21 = (1'h0);
  reg [(4'hb):(1'h0)] reg20 = (1'h0);
  reg [(2'h2):(1'h0)] reg19 = (1'h0);
  assign y = {wire33,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire13 = ((((~&wire9) < (wire10 | wire9)) ^~ (8'h9e)) <= wire10);
  assign wire14 = {$signed(($unsigned((8'ha3)) ? wire13 : $signed(wire10)))};
  assign wire15 = wire9[(2'h3):(1'h1)];
  assign wire16 = ({wire11} || wire11);
  assign wire17 = wire13[(1'h1):(1'h1)];
  assign wire18 = $signed(($signed((wire17 ? wire17 : wire11)) + (wire9 ?
                      (|(8'ha4)) : (wire16 ? wire14 : (8'ha8)))));
  always
    @(posedge clk) begin
      if ($signed((wire10 ? (8'ha0) : wire17)))
        begin
          reg19 <= wire10;
          reg20 <= $signed($signed(((wire13 != wire10) ?
              (~&wire12) : $signed((8'ha3)))));
          reg21 <= wire18[(1'h1):(1'h1)];
        end
      else
        begin
          if ($unsigned(wire18[(1'h0):(1'h0)]))
            begin
              reg19 <= reg19;
              reg20 <= ($signed((wire13 ?
                      (reg19 ? wire13 : (8'hab)) : (wire10 ^~ wire14))) ?
                  ({$signed((8'ha3))} ?
                      ((wire18 ^~ wire11) <<< wire11[(2'h3):(1'h0)]) : (-((8'h9d) ?
                          wire15 : wire12))) : (!((wire17 ?
                      reg21 : wire15) & $signed(wire12))));
            end
          else
            begin
              reg19 <= wire12[(1'h1):(1'h1)];
            end
        end
      if ((((wire13[(4'h9):(4'h8)] >>> $signed(reg20)) ?
          $signed((+wire15)) : reg19) + $signed(((wire13 - wire13) == wire11))))
        begin
          if ((^wire13))
            begin
              reg22 <= wire15;
              reg23 <= wire11;
              reg24 <= $unsigned(({$unsigned(reg22)} ~^ $signed(reg20[(3'h5):(2'h3)])));
            end
          else
            begin
              reg22 <= $unsigned(($unsigned($signed(wire12)) ?
                  $signed(wire16[(3'h6):(3'h4)]) : (reg24 && (wire10 ?
                      (8'ha9) : wire12))));
            end
          reg25 <= (^~(8'ha2));
          if (reg20)
            begin
              reg26 <= $unsigned((-(reg22[(1'h1):(1'h0)] == (reg22 ?
                  wire15 : (8'ha1)))));
              reg27 <= ((reg23[(1'h1):(1'h1)] || (wire17[(4'h9):(3'h5)] ?
                      wire13 : ((8'ha6) >> wire10))) ?
                  reg25[(1'h0):(1'h0)] : reg26);
            end
          else
            begin
              reg26 <= (({(~wire14)} < wire13[(3'h4):(3'h4)]) ~^ $unsigned((~&(reg24 + reg19))));
              reg27 <= {(~|($unsigned((8'h9e)) && wire15[(4'h8):(2'h2)]))};
              reg28 <= reg24[(2'h2):(2'h2)];
            end
        end
      else
        begin
          reg22 <= (&($unsigned($unsigned(reg20)) ?
              (reg22 >= (^~wire12)) : ((wire11 < reg19) ?
                  $signed((8'ha8)) : wire15[(1'h0):(1'h0)])));
          reg23 <= $unsigned(reg19);
        end
      reg29 <= $signed(wire16[(3'h4):(1'h0)]);
    end
  always
    @(posedge clk) begin
      reg30 <= $unsigned((reg28 ^ $unsigned((-wire16))));
      reg31 <= $signed($signed({((8'hab) - reg22)}));
      reg32 <= (|(reg28[(1'h1):(1'h1)] ? $signed(reg19) : (8'h9d)));
    end
  assign wire33 = $unsigned(reg22);
endmodule