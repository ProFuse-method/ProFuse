(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param30 = ({(((8'ha8) ? (8'ha4) : (8'h9f)) ^~ (!(8'haf)))} <<< (((~&(8'h9d)) ? ((8'ha2) - (8'ha5)) : ((8'haf) ? (8'h9f) : (8'ha3))) == ((-(8'ha7)) ? ((8'haf) ? (8'h9d) : (8'ha2)) : ((8'haa) ^~ (8'h9d))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire1;
  input wire signed [(2'h2):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire29;
  wire [(2'h3):(1'h0)] wire27;
  wire signed [(4'hb):(1'h0)] wire13;
  wire [(3'h5):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire11;
  wire signed [(2'h2):(1'h0)] wire5;
  wire signed [(2'h2):(1'h0)] wire4;
  reg [(3'h6):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg9 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg8 = (1'h0);
  reg [(4'h8):(1'h0)] reg7 = (1'h0);
  reg [(2'h3):(1'h0)] reg6 = (1'h0);
  assign y = {wire29,
                 wire27,
                 wire13,
                 wire12,
                 wire11,
                 wire5,
                 wire4,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = ((^~wire0) ?
                     $unsigned({wire0[(1'h0):(1'h0)]}) : $unsigned((!wire0[(1'h0):(1'h0)])));
  assign wire5 = wire2;
  always
    @(posedge clk) begin
      if ($unsigned((wire5 >= (wire5 >>> {wire1}))))
        begin
          reg6 <= $signed({$signed((wire2 && wire0))});
          if ($signed((wire1[(1'h1):(1'h0)] ?
              (~^$signed(wire0)) : $signed(reg6[(1'h0):(1'h0)]))))
            begin
              reg7 <= (((~$unsigned(reg6)) & $signed((wire0 ?
                  wire3 : wire5))) || (wire3 ?
                  ((wire4 ? wire2 : reg6) != (^~reg6)) : $unsigned(wire2)));
            end
          else
            begin
              reg7 <= $signed(wire5);
            end
          reg8 <= (~&$signed((wire1[(2'h3):(2'h2)] ?
              $unsigned(wire1) : ((8'had) || wire5))));
        end
      else
        begin
          reg6 <= ((8'ha3) ? wire2 : {(-reg6[(2'h2):(1'h1)])});
        end
      reg9 <= $unsigned((!$unsigned(reg7[(1'h1):(1'h1)])));
      reg10 <= (~{(-(reg6 << wire2))});
    end
  assign wire11 = $unsigned($unsigned($signed($unsigned(reg7))));
  assign wire12 = ((wire11 && {$unsigned(wire0)}) ?
                      (~|wire0) : ((+(~&reg10)) ?
                          wire5 : ($signed(wire0) & wire3)));
  assign wire13 = {((~^{wire11}) ?
                          ((wire2 ?
                              wire3 : wire3) | $signed((8'h9d))) : {(reg6 && wire5)})};
  module14 #() modinst28 (.wire17(wire12), .wire18(reg10), .clk(clk), .wire15(reg7), .y(wire27), .wire16(wire3));
  assign wire29 = (((8'ha5) > {reg8[(2'h2):(1'h1)]}) + $signed(reg7[(1'h1):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param26 = (((~|(~(8'had))) ? (8'ha3) : (~&((8'hac) ? (8'ha7) : (8'ha2)))) ? (8'hac) : (({(8'ha7)} * ((8'hac) ? (8'ha8) : (8'h9f))) ? (&((8'haa) ? (8'hab) : (8'h9c))) : (((8'ha2) ? (8'ha3) : (8'hab)) ? ((8'hae) ? (8'ha5) : (8'h9d)) : {(8'h9f)}))))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire18;
  input wire [(3'h5):(1'h0)] wire17;
  input wire [(3'h7):(1'h0)] wire16;
  input wire [(3'h4):(1'h0)] wire15;
  wire [(4'h9):(1'h0)] wire25;
  wire signed [(3'h7):(1'h0)] wire24;
  wire [(2'h3):(1'h0)] wire19;
  reg [(4'h9):(1'h0)] reg23 = (1'h0);
  reg [(4'hb):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg21 = (1'h0);
  reg [(2'h2):(1'h0)] reg20 = (1'h0);
  assign y = {wire25, wire24, wire19, reg23, reg22, reg21, reg20, (1'h0)};
  assign wire19 = (~(^$signed(wire16)));
  always
    @(posedge clk) begin
      if ((~|wire15))
        begin
          reg20 <= (|(~{(^~wire15)}));
          if ({{{(wire17 * wire18)}}})
            begin
              reg21 <= $unsigned((-wire18));
              reg22 <= (&$unsigned((~&$signed(reg20))));
            end
          else
            begin
              reg21 <= ({(!(wire15 & wire19))} ?
                  ((8'hac) & wire16[(3'h7):(1'h0)]) : ($unsigned({wire18}) ?
                      ((wire17 < wire17) <= ((8'had) ?
                          reg22 : wire19)) : $signed(wire19[(2'h3):(1'h1)])));
              reg22 <= (wire15[(2'h3):(1'h0)] ?
                  (reg21[(2'h3):(2'h2)] ?
                      $unsigned((wire16 || reg20)) : wire18) : (wire17 ?
                      ((^reg21) ?
                          (wire17 <= wire19) : reg21[(3'h4):(2'h3)]) : $unsigned((wire17 ?
                          (8'hac) : wire19))));
            end
        end
      else
        begin
          reg20 <= (-($unsigned((~|reg22)) | {$unsigned((8'ha7))}));
        end
      reg23 <= wire19;
    end
  assign wire24 = reg23;
  assign wire25 = $unsigned($unsigned($signed($signed(reg20))));
endmodule