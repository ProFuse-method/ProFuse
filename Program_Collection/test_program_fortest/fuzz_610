(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param85 = (!((!(~^(8'ha2))) << {(^(8'ha1))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h39):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire84;
  wire [(4'h8):(1'h0)] wire83;
  wire signed [(4'h9):(1'h0)] wire82;
  wire signed [(2'h3):(1'h0)] wire81;
  wire [(2'h3):(1'h0)] wire80;
  wire signed [(3'h5):(1'h0)] wire78;
  wire signed [(4'h9):(1'h0)] wire76;
  wire [(4'hb):(1'h0)] wire17;
  assign y = {wire84,
                 wire83,
                 wire82,
                 wire81,
                 wire80,
                 wire78,
                 wire76,
                 wire17,
                 (1'h0)};
  module4 #() modinst18 (.wire8(wire3), .clk(clk), .y(wire17), .wire6(wire0), .wire5(wire1), .wire7(wire2));
  module19 #() modinst77 (.wire20(wire3), .wire21(wire1), .y(wire76), .wire22(wire0), .clk(clk), .wire23(wire2));
  module19 #() modinst79 (wire78, clk, wire3, wire0, wire2, wire17);
  assign wire80 = ({wire78[(3'h4):(2'h3)]} ?
                      ({$signed((8'ha5))} ?
                          ($signed((8'hab)) ^~ (wire1 ?
                              wire2 : wire3)) : $signed(wire78[(3'h5):(2'h3)])) : $signed(wire2[(3'h5):(3'h4)]));
  assign wire81 = $unsigned((8'ha3));
  assign wire82 = wire1;
  assign wire83 = $unsigned($signed(((wire17 >= wire1) ?
                      wire78[(2'h2):(1'h1)] : wire1)));
  assign wire84 = (($unsigned((~&wire2)) == $unsigned((^wire81))) >>> wire81[(1'h1):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module19
#(parameter param75 = ({(!(~&(8'ha5)))} >= (-((+(8'ha3)) ? ((8'ha5) ? (8'h9c) : (8'h9d)) : ((8'ha3) ? (8'haa) : (8'ha1))))))
(y, clk, wire23, wire22, wire21, wire20);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire23;
  input wire signed [(4'hb):(1'h0)] wire22;
  input wire signed [(4'h9):(1'h0)] wire21;
  input wire [(4'hb):(1'h0)] wire20;
  wire [(3'h4):(1'h0)] wire74;
  wire [(2'h2):(1'h0)] wire73;
  wire [(2'h2):(1'h0)] wire72;
  wire [(4'ha):(1'h0)] wire70;
  wire signed [(3'h4):(1'h0)] wire69;
  wire signed [(2'h2):(1'h0)] wire68;
  wire [(4'h9):(1'h0)] wire67;
  wire signed [(2'h2):(1'h0)] wire65;
  wire [(4'hb):(1'h0)] wire64;
  wire [(4'ha):(1'h0)] wire63;
  wire signed [(3'h7):(1'h0)] wire61;
  wire [(4'h9):(1'h0)] wire59;
  wire signed [(3'h6):(1'h0)] wire37;
  assign y = {wire74,
                 wire73,
                 wire72,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire65,
                 wire64,
                 wire63,
                 wire61,
                 wire59,
                 wire37,
                 (1'h0)};
  module24 #() modinst38 (.wire27(wire20), .wire25(wire22), .y(wire37), .wire28(wire23), .wire26(wire21), .clk(clk));
  module39 #() modinst60 (wire59, clk, wire37, wire20, wire22, wire23);
  module24 #() modinst62 (.y(wire61), .clk(clk), .wire28(wire37), .wire25(wire22), .wire27(wire21), .wire26(wire20));
  assign wire63 = $signed((-(~|$signed(wire37))));
  assign wire64 = ($signed((wire37 ? wire61[(2'h3):(1'h1)] : wire63)) ?
                      wire59[(3'h4):(2'h3)] : wire23[(1'h1):(1'h0)]);
  module39 #() modinst66 (wire65, clk, wire64, wire37, wire22, wire23);
  assign wire67 = $unsigned(wire22[(4'h8):(3'h7)]);
  assign wire68 = (~^$unsigned($signed({wire64})));
  assign wire69 = wire63;
  module24 #() modinst71 (.wire26(wire21), .clk(clk), .wire27(wire67), .wire25(wire20), .y(wire70), .wire28(wire22));
  assign wire72 = $unsigned($unsigned($signed((~^wire22))));
  assign wire73 = (((wire37 >= wire23) + wire68) >> ($signed($signed(wire22)) >= ((!wire70) ?
                      $signed(wire37) : $signed(wire22))));
  assign wire74 = ($unsigned($unsigned(wire23[(2'h2):(1'h0)])) >> {$signed(wire65[(1'h0):(1'h0)])});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param16 = (-(~^(|((8'ha6) ? (8'ha1) : (8'h9d))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h2d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire8;
  input wire [(4'hb):(1'h0)] wire7;
  input wire [(3'h5):(1'h0)] wire6;
  input wire [(4'ha):(1'h0)] wire5;
  wire signed [(2'h3):(1'h0)] wire15;
  wire signed [(4'hb):(1'h0)] wire14;
  wire [(3'h6):(1'h0)] wire13;
  wire [(4'h8):(1'h0)] wire12;
  wire [(3'h4):(1'h0)] wire11;
  wire [(2'h3):(1'h0)] wire10;
  wire [(4'h9):(1'h0)] wire9;
  assign y = {wire15, wire14, wire13, wire12, wire11, wire10, wire9, (1'h0)};
  assign wire9 = $unsigned($signed(wire8));
  assign wire10 = {wire9[(1'h0):(1'h0)]};
  assign wire11 = (&wire7[(3'h5):(3'h4)]);
  assign wire12 = $signed($signed($unsigned((wire5 <= wire6))));
  assign wire13 = (wire5[(2'h3):(2'h2)] * $unsigned(wire12));
  assign wire14 = $unsigned($unsigned(((&wire8) ?
                      $unsigned(wire8) : wire12[(3'h4):(1'h0)])));
  assign wire15 = (-wire12[(3'h5):(2'h2)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module39
#(parameter param58 = (((~(^(8'hae))) >>> {(&(8'ha6))}) ^ {(~{(8'hab)})}))
(y, clk, wire43, wire42, wire41, wire40);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire43;
  input wire [(3'h5):(1'h0)] wire42;
  input wire signed [(4'h9):(1'h0)] wire41;
  input wire signed [(3'h6):(1'h0)] wire40;
  wire signed [(3'h6):(1'h0)] wire57;
  wire signed [(3'h4):(1'h0)] wire56;
  wire [(3'h4):(1'h0)] wire55;
  wire signed [(2'h2):(1'h0)] wire54;
  wire [(3'h7):(1'h0)] wire52;
  reg signed [(2'h3):(1'h0)] reg53 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg51 = (1'h0);
  reg [(3'h6):(1'h0)] reg50 = (1'h0);
  reg [(4'ha):(1'h0)] reg49 = (1'h0);
  reg [(3'h4):(1'h0)] reg48 = (1'h0);
  reg [(4'ha):(1'h0)] reg47 = (1'h0);
  reg [(4'h8):(1'h0)] reg46 = (1'h0);
  reg [(4'h8):(1'h0)] reg45 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg44 = (1'h0);
  assign y = {wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire52,
                 reg53,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg44 <= wire42[(3'h4):(2'h2)];
      if (($unsigned(wire43) ? wire42 : {reg44[(3'h6):(2'h3)]}))
        begin
          reg45 <= (($unsigned((wire43 == wire43)) ?
              wire41[(3'h4):(3'h4)] : wire40) >> wire43);
          reg46 <= wire41[(2'h3):(1'h1)];
        end
      else
        begin
          if ($unsigned((reg46 ?
              (((8'ha5) >> wire43) ?
                  $signed(wire41) : (wire40 ? wire43 : wire42)) : wire43)))
            begin
              reg45 <= ($unsigned((+$signed(reg45))) >>> ((&reg46[(3'h5):(2'h3)]) ?
                  ($unsigned(reg44) >= (reg44 ?
                      (8'ha6) : wire42)) : $unsigned($signed(wire43))));
            end
          else
            begin
              reg45 <= $unsigned((wire40 >> reg46));
              reg46 <= {(($unsigned(wire43) & wire41) != wire41[(3'h6):(3'h4)])};
            end
          reg47 <= ((~^$unsigned($unsigned((8'ha9)))) >>> ((8'hb0) || wire43[(1'h0):(1'h0)]));
          if (($signed(reg45) >>> reg46[(1'h0):(1'h0)]))
            begin
              reg48 <= {$signed({$signed(reg47)})};
              reg49 <= $unsigned(reg46);
            end
          else
            begin
              reg48 <= (~&$signed(wire43[(1'h0):(1'h0)]));
              reg49 <= $unsigned($signed($unsigned($signed(reg49))));
              reg50 <= ((~($unsigned((8'h9c)) == (reg44 ?
                  reg46 : reg44))) ^ {$signed($unsigned(reg45))});
            end
        end
      reg51 <= $unsigned(wire40[(2'h2):(1'h1)]);
    end
  assign wire52 = (reg46 ?
                      ((reg44 & $signed(wire43)) ?
                          wire40[(2'h2):(2'h2)] : $unsigned($unsigned((8'ha7)))) : (reg48 ?
                          $signed($unsigned(reg47)) : wire43));
  always
    @(posedge clk) begin
      reg53 <= $signed({reg49});
    end
  assign wire54 = ($signed(reg51) ?
                      reg51 : (wire43 ?
                          (+$unsigned(reg51)) : (^~wire42[(3'h4):(2'h3)])));
  assign wire55 = (reg44[(2'h2):(1'h0)] ?
                      (~^((~^reg48) ?
                          reg45 : reg49[(2'h3):(2'h3)])) : ($unsigned($signed(reg49)) ?
                          $signed((reg53 ?
                              (8'ha9) : reg44)) : wire42[(2'h2):(1'h0)]));
  assign wire56 = (-(~(8'h9f)));
  assign wire57 = (-$unsigned(wire54));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module24  (y, clk, wire28, wire27, wire26, wire25);
  output wire [(32'h3d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire28;
  input wire signed [(4'h9):(1'h0)] wire27;
  input wire signed [(3'h6):(1'h0)] wire26;
  input wire [(4'hb):(1'h0)] wire25;
  wire [(2'h2):(1'h0)] wire36;
  wire signed [(4'h9):(1'h0)] wire35;
  wire [(3'h5):(1'h0)] wire34;
  wire signed [(4'ha):(1'h0)] wire33;
  wire [(4'hb):(1'h0)] wire32;
  wire [(2'h3):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire30;
  wire [(4'ha):(1'h0)] wire29;
  assign y = {wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 (1'h0)};
  assign wire29 = (|((&$signed(wire25)) - ($unsigned(wire27) ?
                      (wire27 <= wire25) : (wire27 ? wire26 : wire26))));
  assign wire30 = (wire29 ? (~&wire27[(3'h5):(1'h0)]) : (8'ha4));
  assign wire31 = (+(~|(wire27 ? $signed(wire26) : $signed((8'ha8)))));
  assign wire32 = $unsigned($unsigned(wire29[(3'h5):(1'h0)]));
  assign wire33 = $unsigned(($unsigned(wire27[(4'h9):(4'h8)]) ?
                      $unsigned((wire26 ?
                          wire30 : wire29)) : {wire30[(1'h0):(1'h0)]}));
  assign wire34 = wire32[(1'h0):(1'h0)];
  assign wire35 = ((({wire29} <<< $signed(wire30)) ?
                          $unsigned((+wire33)) : wire31) ?
                      wire33 : (~&{$signed(wire34)}));
  assign wire36 = (wire32[(4'ha):(3'h4)] ?
                      (+$unsigned((wire27 ?
                          wire26 : (8'had)))) : wire35[(3'h5):(1'h0)]);
endmodule