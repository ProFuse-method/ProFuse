(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param20 = (((~&{(8'h9e)}) >= (~^((8'haa) && (8'ha4)))) | (({(8'ha9)} ? (-(8'ha7)) : ((8'ha2) < (8'hab))) ? ((|(8'had)) ? (!(8'haa)) : {(8'ha5)}) : (^~(-(8'had))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire0;
  input wire [(3'h7):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire3;
  wire [(3'h6):(1'h0)] wire19;
  wire signed [(3'h7):(1'h0)] wire4;
  wire signed [(4'h9):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire17;
  reg [(4'h8):(1'h0)] reg6 = (1'h0);
  reg [(4'ha):(1'h0)] reg7 = (1'h0);
  assign y = {wire19, wire4, wire5, wire17, reg6, reg7, (1'h0)};
  assign wire4 = wire3;
  assign wire5 = ((+((wire4 ?
                     wire0 : wire3) >> $unsigned(wire0))) < $signed(wire3[(2'h3):(2'h2)]));
  always
    @(posedge clk) begin
      reg6 <= $signed($unsigned((|$unsigned(wire2))));
      reg7 <= (wire3[(1'h0):(1'h0)] ?
          ($unsigned((wire1 ?
              wire2 : wire2)) > wire3[(1'h0):(1'h0)]) : (wire4 < $unsigned((~&(8'had)))));
    end
  module8 #() modinst18 (wire17, clk, wire5, wire4, wire1, reg7);
  assign wire19 = wire5;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h16):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire12;
  input wire signed [(3'h6):(1'h0)] wire11;
  input wire [(2'h2):(1'h0)] wire10;
  input wire signed [(4'ha):(1'h0)] wire9;
  wire signed [(2'h2):(1'h0)] wire16;
  wire [(2'h2):(1'h0)] wire15;
  wire signed [(4'h8):(1'h0)] wire13;
  reg [(4'h9):(1'h0)] reg14 = (1'h0);
  assign y = {wire16, wire15, wire13, reg14, (1'h0)};
  assign wire13 = wire11[(2'h3):(1'h0)];
  always
    @(posedge clk) begin
      reg14 <= (8'hae);
    end
  assign wire15 = wire13[(2'h3):(2'h2)];
  assign wire16 = wire15;
endmodule