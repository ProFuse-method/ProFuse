(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h9e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire0;
  input wire signed [(3'h5):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire3;
  wire signed [(2'h3):(1'h0)] wire83;
  wire [(4'h8):(1'h0)] wire82;
  wire [(3'h5):(1'h0)] wire81;
  wire [(3'h4):(1'h0)] wire80;
  wire signed [(4'hb):(1'h0)] wire78;
  wire [(3'h7):(1'h0)] wire77;
  wire [(3'h6):(1'h0)] wire76;
  wire [(4'ha):(1'h0)] wire75;
  wire [(4'hb):(1'h0)] wire14;
  wire [(3'h5):(1'h0)] wire73;
  reg signed [(4'ha):(1'h0)] reg79 = (1'h0);
  reg [(4'hb):(1'h0)] reg4 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg5 = (1'h0);
  reg [(3'h7):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg7 = (1'h0);
  reg [(4'h8):(1'h0)] reg8 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg10 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg13 = (1'h0);
  assign y = {wire83,
                 wire82,
                 wire81,
                 wire80,
                 wire78,
                 wire77,
                 wire76,
                 wire75,
                 wire14,
                 wire73,
                 reg79,
                 reg4,
                 reg5,
                 reg6,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 reg11,
                 reg12,
                 reg13,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= wire3[(3'h5):(1'h0)];
    end
  always
    @(posedge clk) begin
      if ({$unsigned(wire3)})
        begin
          reg5 <= ((~($signed(wire2) ? $signed((8'h9c)) : wire3)) ?
              wire3 : reg4);
          reg6 <= (8'haf);
          reg7 <= wire1;
        end
      else
        begin
          if (((wire1[(2'h3):(1'h1)] << (((8'haf) ?
                  reg4 : reg5) ^~ $signed(reg7))) ?
              (~wire3[(2'h3):(2'h2)]) : $signed($unsigned({wire2}))))
            begin
              reg5 <= wire3[(1'h1):(1'h0)];
            end
          else
            begin
              reg5 <= {$unsigned((~|$signed(wire0)))};
            end
          reg6 <= wire2;
        end
      reg8 <= reg4;
      if ($signed(reg8))
        begin
          reg9 <= (wire0[(3'h5):(1'h1)] ?
              {$unsigned(((8'haf) ? wire0 : wire2))} : (-reg4[(3'h5):(1'h0)]));
          reg10 <= $unsigned($unsigned({(~|reg8)}));
        end
      else
        begin
          reg9 <= ((reg7[(2'h3):(1'h0)] | (~&reg8)) ?
              {$unsigned(wire3)} : reg7);
          reg10 <= reg6[(3'h4):(2'h2)];
          if (((&reg4) ? reg5[(1'h1):(1'h1)] : (^$unsigned($unsigned(wire1)))))
            begin
              reg11 <= wire3;
            end
          else
            begin
              reg11 <= wire3[(3'h7):(1'h1)];
              reg12 <= reg5[(1'h1):(1'h1)];
              reg13 <= ((reg7[(3'h7):(1'h1)] && {(wire2 ?
                      reg6 : wire1)}) ^~ (!(wire3 == (reg9 << reg4))));
            end
        end
    end
  assign wire14 = $unsigned((!(~(reg10 ? reg12 : reg6))));
  module15 #() modinst74 (wire73, clk, reg10, reg12, wire14, reg4);
  assign wire75 = (&$signed(($unsigned(wire73) < wire2[(3'h4):(1'h0)])));
  assign wire76 = $signed(((~&(reg12 >> reg6)) != $signed(wire0)));
  assign wire77 = {($unsigned((~^reg8)) + wire3[(3'h6):(3'h5)])};
  assign wire78 = $signed({($signed(wire73) > $unsigned(wire2))});
  always
    @(posedge clk) begin
      reg79 <= $unsigned($unsigned($signed($unsigned(reg13))));
    end
  assign wire80 = (reg5 << $signed((((8'ha3) || wire1) ?
                      (~|(8'hac)) : {(8'ha7)})));
  assign wire81 = (^(~|reg13[(2'h3):(1'h0)]));
  assign wire82 = (~^reg6[(2'h2):(2'h2)]);
  assign wire83 = ((|wire0[(1'h0):(1'h0)]) ^~ {{$signed(wire0)}});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15  (y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h69):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire19;
  input wire [(2'h2):(1'h0)] wire18;
  input wire signed [(4'hb):(1'h0)] wire17;
  input wire [(4'hb):(1'h0)] wire16;
  wire [(3'h7):(1'h0)] wire72;
  wire [(2'h2):(1'h0)] wire71;
  wire [(2'h3):(1'h0)] wire69;
  wire signed [(2'h3):(1'h0)] wire68;
  wire signed [(3'h4):(1'h0)] wire67;
  wire [(2'h3):(1'h0)] wire34;
  wire [(4'h9):(1'h0)] wire20;
  wire [(4'h9):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire37;
  wire [(3'h5):(1'h0)] wire41;
  wire [(4'ha):(1'h0)] wire65;
  reg [(4'hb):(1'h0)] reg21 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg38 = (1'h0);
  reg [(4'h9):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg40 = (1'h0);
  assign y = {wire72,
                 wire71,
                 wire69,
                 wire68,
                 wire67,
                 wire34,
                 wire20,
                 wire36,
                 wire37,
                 wire41,
                 wire65,
                 reg21,
                 reg38,
                 reg39,
                 reg40,
                 (1'h0)};
  assign wire20 = ({wire17} << $signed(wire19[(3'h7):(2'h3)]));
  always
    @(posedge clk) begin
      reg21 <= $signed($signed(({wire17} ?
          $signed(wire20) : (wire19 ? wire18 : wire16))));
    end
  module22 #() modinst35 (wire34, clk, wire20, wire16, wire17, reg21);
  assign wire36 = (&{((&wire20) ? (!wire17) : wire17)});
  assign wire37 = (wire19[(1'h1):(1'h1)] ?
                      $unsigned(wire36[(2'h3):(2'h3)]) : ($unsigned({wire17}) ?
                          {wire16[(1'h0):(1'h0)]} : $signed((reg21 ?
                              wire19 : wire17))));
  always
    @(posedge clk) begin
      reg38 <= ({wire37} ?
          ((wire36[(3'h7):(3'h6)] ?
              {wire20} : {wire20}) ^ reg21) : reg21[(4'h8):(3'h7)]);
      reg39 <= $unsigned((($unsigned(wire34) ? (^wire18) : (|(8'ha0))) ?
          reg21 : (^~(^~reg21))));
      reg40 <= $unsigned({((wire20 > wire19) ? reg39[(1'h0):(1'h0)] : wire17)});
    end
  assign wire41 = wire20;
  module42 #() modinst66 (wire65, clk, wire17, wire36, wire16, reg38);
  assign wire67 = $signed((-{$signed(wire16)}));
  assign wire68 = $signed((~|reg40));
  module42 #() modinst70 (wire69, clk, reg38, wire65, wire17, reg39);
  assign wire71 = $signed($signed(wire34));
  assign wire72 = wire34[(2'h3):(1'h1)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module42  (y, clk, wire46, wire45, wire44, wire43);
  output wire [(32'h79):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire46;
  input wire signed [(2'h3):(1'h0)] wire45;
  input wire [(4'hb):(1'h0)] wire44;
  input wire signed [(4'h9):(1'h0)] wire43;
  wire signed [(3'h5):(1'h0)] wire64;
  wire [(3'h4):(1'h0)] wire63;
  wire [(2'h3):(1'h0)] wire62;
  wire signed [(2'h2):(1'h0)] wire61;
  wire [(4'ha):(1'h0)] wire60;
  wire [(3'h5):(1'h0)] wire59;
  wire signed [(4'hb):(1'h0)] wire52;
  wire signed [(3'h5):(1'h0)] wire51;
  wire [(4'hb):(1'h0)] wire50;
  wire signed [(3'h5):(1'h0)] wire49;
  wire [(2'h3):(1'h0)] wire48;
  wire [(4'ha):(1'h0)] wire47;
  reg signed [(3'h7):(1'h0)] reg58 = (1'h0);
  reg [(4'hb):(1'h0)] reg57 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg56 = (1'h0);
  reg [(3'h4):(1'h0)] reg55 = (1'h0);
  reg [(4'h8):(1'h0)] reg54 = (1'h0);
  reg [(3'h5):(1'h0)] reg53 = (1'h0);
  assign y = {wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 (1'h0)};
  assign wire47 = $unsigned({((8'h9c) - ((8'had) ? wire46 : wire45))});
  assign wire48 = (wire43 ?
                      wire43[(2'h3):(1'h0)] : $signed(({wire45} + $signed(wire47))));
  assign wire49 = (wire45[(2'h2):(1'h0)] ?
                      ({(^wire47)} ? (8'ha3) : {wire46}) : $unsigned(wire43));
  assign wire50 = wire46;
  assign wire51 = $unsigned($unsigned((+{wire49})));
  assign wire52 = wire46[(2'h2):(2'h2)];
  always
    @(posedge clk) begin
      reg53 <= (~&$unsigned({(-wire51)}));
      if ($signed(reg53))
        begin
          if (($signed({wire45[(2'h3):(2'h3)]}) ?
              ($unsigned((wire49 + reg53)) < wire48[(2'h2):(1'h1)]) : wire47))
            begin
              reg54 <= (~&{(^~$unsigned(reg53))});
              reg55 <= wire46;
              reg56 <= $unsigned(({$signed(reg53)} ?
                  wire47 : $unsigned({wire51})));
            end
          else
            begin
              reg54 <= $unsigned((|({wire52} >= wire51[(2'h3):(1'h1)])));
            end
          if ($unsigned($signed(wire44[(3'h5):(3'h4)])))
            begin
              reg57 <= wire46;
              reg58 <= $unsigned((((~|wire49) ?
                  wire47[(2'h3):(2'h2)] : $unsigned((8'hac))) <= (wire45[(2'h3):(1'h1)] ?
                  (~|(8'h9e)) : $signed(wire51))));
            end
          else
            begin
              reg57 <= (8'ha8);
              reg58 <= (~^({(wire47 != (8'hae))} << reg58));
            end
        end
      else
        begin
          reg54 <= {{$unsigned(wire51)}};
        end
    end
  assign wire59 = reg57[(3'h7):(2'h2)];
  assign wire60 = wire49;
  assign wire61 = ((~(~^$unsigned(reg56))) - wire59[(2'h2):(2'h2)]);
  assign wire62 = (({$unsigned(reg55)} ? wire49 : (wire46 - (~|wire59))) ?
                      ((&$unsigned(wire43)) ?
                          wire52 : (wire61 & $signed(wire43))) : (~|({wire50} + $unsigned(wire47))));
  assign wire63 = wire43[(3'h4):(2'h3)];
  assign wire64 = (reg58[(3'h5):(3'h5)] >> reg54);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module22  (y, clk, wire26, wire25, wire24, wire23);
  output wire [(32'h37):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire26;
  input wire [(3'h4):(1'h0)] wire25;
  input wire signed [(4'h9):(1'h0)] wire24;
  input wire signed [(4'hb):(1'h0)] wire23;
  wire signed [(4'hb):(1'h0)] wire33;
  wire [(4'h8):(1'h0)] wire32;
  wire [(3'h6):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire30;
  wire signed [(4'h9):(1'h0)] wire29;
  wire [(4'h8):(1'h0)] wire28;
  wire signed [(2'h2):(1'h0)] wire27;
  assign y = {wire33, wire32, wire31, wire30, wire29, wire28, wire27, (1'h0)};
  assign wire27 = wire23;
  assign wire28 = wire27[(1'h1):(1'h0)];
  assign wire29 = wire24;
  assign wire30 = (wire24[(1'h1):(1'h1)] == (~^wire28));
  assign wire31 = $signed((8'ha4));
  assign wire32 = $unsigned((~($signed(wire28) ?
                      wire26[(3'h4):(2'h2)] : wire28[(3'h7):(3'h6)])));
  assign wire33 = $signed((wire24 ?
                      ((wire27 - (8'ha6)) ?
                          $unsigned((8'ha8)) : $signed(wire27)) : $signed({wire31})));
endmodule