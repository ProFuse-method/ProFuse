(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param49 = ({((|(8'hb0)) && {(8'h9f)})} > {{((8'hab) || (8'ha4))}}))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire0;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire3;
  wire signed [(4'h9):(1'h0)] wire48;
  wire signed [(4'hb):(1'h0)] wire17;
  wire [(3'h5):(1'h0)] wire19;
  wire signed [(4'hb):(1'h0)] wire21;
  wire [(2'h2):(1'h0)] wire46;
  reg [(3'h7):(1'h0)] reg20 = (1'h0);
  assign y = {wire48, wire17, wire19, wire21, wire46, reg20, (1'h0)};
  module4 #() modinst18 (.clk(clk), .wire6(wire2), .wire8(wire3), .wire7(wire1), .y(wire17), .wire5(wire0));
  assign wire19 = {(~|{((8'ha9) >> (8'haf))})};
  always
    @(posedge clk) begin
      reg20 <= ($signed((wire3[(3'h4):(3'h4)] + $signed(wire2))) || $unsigned($unsigned((wire19 ?
          wire19 : wire19))));
    end
  assign wire21 = wire19;
  module22 #() modinst47 (wire46, clk, wire19, reg20, wire17, wire2);
  assign wire48 = (!$signed(($signed((8'ha6)) - (wire21 && wire19))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module22
#(parameter param45 = (((~^((8'ha4) ? (8'ha9) : (8'ha0))) ? (^~((8'h9c) || (8'hac))) : {((8'ha7) ? (8'h9d) : (8'ha6))}) ? (|({(8'ha9)} < (8'h9c))) : ((((8'h9d) ? (8'h9d) : (8'haa)) - ((8'ha0) ? (8'h9d) : (8'ha8))) ~^ ((8'hac) ? ((8'h9e) ? (8'ha5) : (8'h9d)) : ((8'ha8) ? (8'ha9) : (8'had))))))
(y, clk, wire26, wire25, wire24, wire23);
  output wire [(32'h78):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire26;
  input wire signed [(3'h7):(1'h0)] wire25;
  input wire signed [(4'ha):(1'h0)] wire24;
  input wire signed [(4'hb):(1'h0)] wire23;
  wire signed [(2'h2):(1'h0)] wire44;
  wire [(2'h3):(1'h0)] wire41;
  wire signed [(4'h9):(1'h0)] wire40;
  wire [(3'h4):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire30;
  wire [(3'h6):(1'h0)] wire29;
  wire signed [(4'h8):(1'h0)] wire28;
  wire signed [(3'h7):(1'h0)] wire27;
  reg [(4'h9):(1'h0)] reg43 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg42 = (1'h0);
  reg [(3'h6):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg37 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg36 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg35 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg33 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg31 = (1'h0);
  assign y = {wire44,
                 wire41,
                 wire40,
                 wire39,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 reg43,
                 reg42,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 (1'h0)};
  assign wire27 = wire26[(1'h0):(1'h0)];
  assign wire28 = $signed({wire27[(1'h1):(1'h0)]});
  assign wire29 = (&((~&((8'ha1) < wire23)) >> wire27));
  assign wire30 = $unsigned($signed(wire23));
  always
    @(posedge clk) begin
      if (wire26[(1'h1):(1'h0)])
        begin
          reg31 <= $signed(wire27[(3'h4):(3'h4)]);
          if (wire26)
            begin
              reg32 <= ($unsigned((^~(reg31 ? wire28 : wire26))) ?
                  ((reg31 ? wire23[(4'h8):(3'h6)] : $signed(wire24)) ?
                      wire30 : $signed($signed(wire27))) : ((-wire27[(3'h7):(3'h5)]) ?
                      ($signed(wire29) >>> wire24) : wire26[(1'h0):(1'h0)]));
              reg33 <= reg31;
            end
          else
            begin
              reg32 <= $signed({(^wire26[(3'h4):(1'h0)])});
              reg33 <= {{$signed((wire29 ^~ wire23))}};
            end
        end
      else
        begin
          reg31 <= reg32;
          reg32 <= $signed($unsigned({{wire28}}));
          reg33 <= $signed(wire29);
        end
      reg34 <= {(|$signed(wire25[(2'h3):(1'h0)]))};
      if ($signed(($unsigned(reg33) ? (~&reg33) : (&(!wire24)))))
        begin
          if (wire28[(2'h2):(1'h0)])
            begin
              reg35 <= (reg31[(2'h3):(2'h2)] ?
                  $signed(($unsigned(wire25) ~^ wire24[(4'ha):(4'h8)])) : ($unsigned(reg33[(2'h2):(1'h0)]) >= (~$unsigned(wire29))));
              reg36 <= $unsigned(wire29);
            end
          else
            begin
              reg35 <= (((8'hac) ?
                      wire28[(3'h4):(2'h3)] : {reg32[(1'h1):(1'h0)]}) ?
                  $signed($unsigned((^wire25))) : reg36[(3'h5):(2'h3)]);
              reg36 <= {wire24[(3'h5):(1'h0)]};
            end
          reg37 <= ($signed($unsigned((~|wire30))) * ((~|reg32) >= wire29));
        end
      else
        begin
          if (reg37)
            begin
              reg35 <= (~^$unsigned(wire23));
              reg36 <= (wire28[(1'h0):(1'h0)] ?
                  $unsigned($signed($signed(reg37))) : reg32[(2'h2):(1'h1)]);
            end
          else
            begin
              reg35 <= $signed(wire30);
            end
          reg37 <= {$signed(wire29[(1'h0):(1'h0)])};
          reg38 <= (({(reg33 == wire29)} ?
              (&(reg33 ?
                  wire25 : reg32)) : $unsigned((wire25 - wire25))) << $unsigned((^$unsigned(reg31))));
        end
    end
  assign wire39 = ({(~$unsigned(reg38))} ? wire25 : reg32[(1'h1):(1'h1)]);
  assign wire40 = $unsigned($signed($signed({wire28})));
  assign wire41 = (^$signed({{wire40}}));
  always
    @(posedge clk) begin
      reg42 <= $signed((|{$unsigned(reg36)}));
      reg43 <= {(+(wire26[(1'h1):(1'h0)] > (wire40 ? wire39 : wire29)))};
    end
  assign wire44 = wire25;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param16 = (|(|{((8'hac) >> (8'ha1))})))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h21):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire7;
  input wire signed [(2'h3):(1'h0)] wire6;
  input wire [(4'h9):(1'h0)] wire5;
  wire [(3'h7):(1'h0)] wire15;
  wire [(3'h5):(1'h0)] wire14;
  wire [(2'h2):(1'h0)] wire13;
  wire signed [(2'h3):(1'h0)] wire12;
  wire [(4'h8):(1'h0)] wire11;
  wire signed [(3'h4):(1'h0)] wire10;
  wire signed [(2'h3):(1'h0)] wire9;
  assign y = {wire15, wire14, wire13, wire12, wire11, wire10, wire9, (1'h0)};
  assign wire9 = wire8;
  assign wire10 = $unsigned(($unsigned((wire8 ?
                      (8'ha8) : wire8)) | $unsigned((-wire9))));
  assign wire11 = (wire8[(2'h3):(1'h0)] >> $signed($unsigned((wire8 ?
                      wire10 : wire10))));
  assign wire12 = $unsigned(wire7[(3'h7):(3'h6)]);
  assign wire13 = wire10;
  assign wire14 = $unsigned((!((~^wire6) ? (^(8'h9c)) : $unsigned(wire12))));
  assign wire15 = (~$unsigned($signed($signed(wire10))));
endmodule