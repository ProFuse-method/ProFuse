(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param65 = ((^~(((8'ha9) >= (8'hab)) ? (8'ha5) : ((8'hac) | (8'ha8)))) ? (!(((8'ha7) < (8'hb0)) <= ((8'haf) | (8'ha5)))) : (((~^(8'ha2)) & (|(8'ha2))) - (8'h9c))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h31):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire63;
  wire signed [(4'ha):(1'h0)] wire62;
  wire signed [(3'h4):(1'h0)] wire61;
  wire [(3'h5):(1'h0)] wire60;
  wire [(4'hb):(1'h0)] wire59;
  wire [(4'ha):(1'h0)] wire57;
  wire signed [(2'h2):(1'h0)] wire14;
  assign y = {wire63, wire62, wire61, wire60, wire59, wire57, wire14, (1'h0)};
  module4 #() modinst15 (wire14, clk, wire2, wire0, wire1, wire3);
  module16 #() modinst58 (wire57, clk, wire1, wire2, wire0, wire3);
  assign wire59 = (~^(!$signed((^~(8'ha4)))));
  assign wire60 = {((8'h9e) ? (8'haa) : $signed((wire14 + wire59)))};
  assign wire61 = $unsigned((((wire3 ? wire2 : (8'hb0)) ?
                      $unsigned(wire1) : $unsigned(wire2)) - (-$unsigned((8'hae)))));
  assign wire62 = wire61;
  module21 #() modinst64 (wire63, clk, wire57, wire0, wire62, wire60);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16
#(parameter param56 = (8'ha4))
(y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h1e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire20;
  input wire signed [(4'ha):(1'h0)] wire19;
  input wire [(4'hb):(1'h0)] wire18;
  input wire [(3'h5):(1'h0)] wire17;
  wire signed [(3'h6):(1'h0)] wire55;
  wire [(3'h6):(1'h0)] wire53;
  wire signed [(4'h9):(1'h0)] wire33;
  reg [(4'h8):(1'h0)] reg35 = (1'h0);
  assign y = {wire55, wire53, wire33, reg35, (1'h0)};
  module21 #() modinst34 (.y(wire33), .clk(clk), .wire25(wire19), .wire22(wire18), .wire24(wire17), .wire23(wire20));
  always
    @(posedge clk) begin
      reg35 <= ((wire17[(3'h5):(3'h5)] > wire19) || (8'ha6));
    end
  module36 #() modinst54 (wire53, clk, wire20, wire18, wire19, wire33);
  assign wire55 = (wire19 ?
                      $signed(({wire53} ?
                          (wire33 < reg35) : (~|reg35))) : wire17);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param13 = (((((8'h9d) ? (8'ha1) : (8'hae)) > ((8'haf) ? (8'hab) : (8'h9d))) ? ((&(8'ha1)) ^ ((8'hb0) ? (8'hb0) : (8'h9e))) : ({(8'hab)} ? ((8'ha9) ? (8'ha6) : (8'ha2)) : ((8'h9d) <<< (8'ha2)))) && ((~^{(8'h9c)}) >> (~&((8'h9f) | (8'ha8))))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h18):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire8;
  input wire [(3'h5):(1'h0)] wire7;
  input wire signed [(3'h5):(1'h0)] wire6;
  input wire [(2'h3):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire12;
  wire [(2'h3):(1'h0)] wire11;
  wire signed [(4'ha):(1'h0)] wire10;
  wire [(3'h5):(1'h0)] wire9;
  assign y = {wire12, wire11, wire10, wire9, (1'h0)};
  assign wire9 = ((^~$unsigned({wire8})) > (~|$unsigned((!wire5))));
  assign wire10 = wire6;
  assign wire11 = wire10;
  assign wire12 = ($signed((!wire9)) <<< ($unsigned((wire9 && wire8)) != wire10[(4'h9):(2'h3)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module36
#(parameter param52 = ((^(((8'haa) || (8'ha0)) && ((8'ha2) >>> (8'ha1)))) ? ((((8'hac) ? (8'ha6) : (8'ha1)) <= {(8'h9f)}) ^ ((8'ha8) ? ((8'ha3) + (8'ha7)) : (~&(8'haf)))) : (({(8'hb0)} ? {(8'ha2)} : (8'ha2)) - (((8'h9f) ? (8'ha0) : (8'ha4)) ? ((8'ha5) ? (8'hab) : (8'h9c)) : ((8'ha7) - (8'h9f))))))
(y, clk, wire40, wire39, wire38, wire37);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire40;
  input wire [(4'hb):(1'h0)] wire39;
  input wire signed [(3'h4):(1'h0)] wire38;
  input wire signed [(3'h5):(1'h0)] wire37;
  wire [(2'h2):(1'h0)] wire51;
  wire signed [(3'h4):(1'h0)] wire43;
  wire [(4'h8):(1'h0)] wire42;
  wire [(3'h6):(1'h0)] wire41;
  reg [(2'h3):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg49 = (1'h0);
  reg [(4'hb):(1'h0)] reg48 = (1'h0);
  reg [(3'h7):(1'h0)] reg47 = (1'h0);
  reg [(4'hb):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg45 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg44 = (1'h0);
  assign y = {wire51,
                 wire43,
                 wire42,
                 wire41,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 (1'h0)};
  assign wire41 = $unsigned((wire39[(1'h0):(1'h0)] ?
                      (^~wire39) : (wire37 ? wire38 : wire37)));
  assign wire42 = wire40[(2'h3):(2'h2)];
  assign wire43 = $signed({(wire41[(2'h2):(1'h0)] ?
                          (wire41 ? wire40 : wire42) : ((8'h9d) ?
                              wire42 : wire39))});
  always
    @(posedge clk) begin
      reg44 <= $signed($signed(((wire38 || (8'ha3)) ?
          $signed(wire43) : ((8'ha5) <= wire43))));
      if ({(~wire43)})
        begin
          if (wire37)
            begin
              reg45 <= ($unsigned((wire37 ?
                      (wire42 ? wire41 : wire37) : (8'haf))) ?
                  wire41[(1'h0):(1'h0)] : (8'ha4));
              reg46 <= wire41[(3'h5):(1'h1)];
              reg47 <= wire42[(3'h5):(3'h4)];
            end
          else
            begin
              reg45 <= ($signed($signed((reg44 ? wire42 : wire43))) ?
                  $unsigned(($unsigned(wire43) ?
                      $unsigned(reg45) : reg47)) : ($signed($unsigned(wire38)) >= $signed({reg45})));
            end
          reg48 <= (wire39[(3'h7):(3'h7)] ?
              $signed(($unsigned(wire41) ?
                  wire40 : reg44[(3'h5):(2'h3)])) : ((wire41 ?
                      wire40[(1'h0):(1'h0)] : wire37[(2'h3):(2'h3)]) ?
                  (^wire38[(1'h0):(1'h0)]) : (!(wire38 ? (8'h9e) : reg46))));
          reg49 <= $signed((((~wire40) * $unsigned(wire40)) ?
              ($unsigned(wire39) ?
                  wire37[(1'h1):(1'h1)] : reg47[(3'h4):(3'h4)]) : ((reg47 || (8'hae)) || $signed(wire37))));
        end
      else
        begin
          if ((^$unsigned(wire39[(2'h3):(2'h2)])))
            begin
              reg45 <= reg46[(3'h6):(1'h0)];
              reg46 <= ($unsigned(((wire43 ?
                      wire43 : wire43) - wire43[(2'h3):(1'h0)])) ?
                  wire37[(2'h3):(2'h3)] : (({(8'ha5)} + (|wire38)) * {wire38[(3'h4):(2'h2)]}));
              reg47 <= ($unsigned(reg46) | $signed({(reg48 ?
                      wire43 : (8'ha2))}));
            end
          else
            begin
              reg45 <= $signed((reg44 <= reg48));
              reg46 <= (~&((~^(-reg47)) && {(reg44 & wire40)}));
            end
          reg48 <= $signed($signed($signed({reg49})));
        end
      reg50 <= (({reg48} ?
          (8'ha8) : $unsigned((wire40 ? reg44 : reg47))) ~^ (8'ha5));
    end
  assign wire51 = (&$signed({$signed((8'ha4))}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21  (y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire25;
  input wire [(2'h3):(1'h0)] wire24;
  input wire [(4'h9):(1'h0)] wire23;
  input wire signed [(3'h5):(1'h0)] wire22;
  wire [(4'h9):(1'h0)] wire32;
  wire signed [(3'h6):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire30;
  wire signed [(2'h2):(1'h0)] wire29;
  wire [(4'h8):(1'h0)] wire28;
  wire [(4'h8):(1'h0)] wire27;
  wire signed [(3'h4):(1'h0)] wire26;
  assign y = {wire32, wire31, wire30, wire29, wire28, wire27, wire26, (1'h0)};
  assign wire26 = $unsigned(wire23[(4'h9):(3'h5)]);
  assign wire27 = (8'h9e);
  assign wire28 = $unsigned(wire25);
  assign wire29 = $unsigned(wire22[(2'h2):(1'h1)]);
  assign wire30 = $unsigned((~^$unsigned(((8'hb0) << wire28))));
  assign wire31 = (~&wire27[(3'h4):(3'h4)]);
  assign wire32 = {$signed(wire23)};
endmodule