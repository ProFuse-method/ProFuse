(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param58 = ((8'h9f) >>> (((!(8'ha5)) & ((8'haf) ? (8'hb0) : (8'ha4))) ? ((8'ha9) ? ((8'hab) ? (8'hb0) : (8'hb0)) : ((8'ha2) != (8'hac))) : ((^(8'had)) | (&(8'ha1))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire56;
  wire signed [(4'hb):(1'h0)] wire54;
  wire [(4'hb):(1'h0)] wire7;
  wire [(4'h9):(1'h0)] wire6;
  wire [(4'h9):(1'h0)] wire5;
  wire [(3'h4):(1'h0)] wire4;
  assign y = {wire56, wire54, wire7, wire6, wire5, wire4, (1'h0)};
  assign wire4 = ($unsigned({wire3}) >>> (wire0 ? wire0 : wire3));
  assign wire5 = (($signed($unsigned(wire1)) <= $unsigned((~&(8'ha0)))) ?
                     (^{wire3}) : $unsigned($unsigned($signed(wire2))));
  assign wire6 = $unsigned(($signed(wire5[(1'h0):(1'h0)]) ^~ wire3[(2'h3):(2'h2)]));
  assign wire7 = ((wire1[(3'h4):(2'h2)] ^~ ((wire4 & wire2) ?
                     $unsigned((8'ha2)) : (^~wire0))) | (-((&wire6) ?
                     wire6 : $signed(wire6))));
  module8 #() modinst55 (wire54, clk, wire1, wire0, wire6, wire3);
  module8 #() modinst57 (wire56, clk, wire4, wire3, wire5, wire6);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire12;
  input wire [(4'h9):(1'h0)] wire11;
  input wire [(4'h9):(1'h0)] wire10;
  input wire signed [(4'h8):(1'h0)] wire9;
  wire [(2'h3):(1'h0)] wire53;
  wire signed [(4'h9):(1'h0)] wire52;
  wire [(4'ha):(1'h0)] wire50;
  wire signed [(2'h3):(1'h0)] wire31;
  wire signed [(4'hb):(1'h0)] wire19;
  wire [(4'hb):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire15;
  wire signed [(4'ha):(1'h0)] wire14;
  reg [(2'h3):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg13 = (1'h0);
  assign y = {wire53,
                 wire52,
                 wire50,
                 wire31,
                 wire19,
                 wire18,
                 wire15,
                 wire14,
                 reg17,
                 reg16,
                 reg13,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg13 <= wire10[(1'h1):(1'h0)];
    end
  assign wire14 = wire11;
  assign wire15 = $unsigned(wire10[(2'h2):(1'h1)]);
  always
    @(posedge clk) begin
      reg16 <= (^(wire14 || reg13[(2'h3):(1'h1)]));
      reg17 <= ((wire11[(3'h6):(3'h6)] && (-wire15[(1'h0):(1'h0)])) == (wire10[(2'h3):(2'h2)] ?
          wire9[(3'h6):(1'h0)] : ($unsigned(wire9) ^~ {wire9})));
    end
  assign wire18 = $signed($unsigned(reg16[(2'h2):(1'h0)]));
  assign wire19 = $signed(wire15);
  module20 #() modinst32 (wire31, clk, wire15, wire19, wire11, wire18);
  module33 #() modinst51 (wire50, clk, wire10, wire19, wire18, wire9);
  assign wire52 = (wire11 || (~^$signed((wire11 * (8'h9c)))));
  assign wire53 = (|(-reg16[(3'h6):(3'h6)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module33
#(parameter param49 = ({(-{(8'ha2)})} ? (&(((8'h9f) ? (8'h9d) : (8'ha6)) ? ((8'ha0) ? (8'ha0) : (8'ha1)) : {(8'ha6)})) : ((&((8'haf) <= (8'had))) | (~^((8'hac) != (8'ha5))))))
(y, clk, wire37, wire36, wire35, wire34);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire37;
  input wire [(2'h2):(1'h0)] wire36;
  input wire [(3'h6):(1'h0)] wire35;
  input wire [(4'h8):(1'h0)] wire34;
  wire [(2'h2):(1'h0)] wire48;
  wire [(2'h3):(1'h0)] wire47;
  wire [(2'h2):(1'h0)] wire46;
  wire signed [(3'h4):(1'h0)] wire45;
  wire [(4'ha):(1'h0)] wire39;
  wire [(2'h2):(1'h0)] wire38;
  reg signed [(3'h4):(1'h0)] reg44 = (1'h0);
  reg [(4'h8):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg42 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg41 = (1'h0);
  reg [(2'h2):(1'h0)] reg40 = (1'h0);
  assign y = {wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire39,
                 wire38,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 (1'h0)};
  assign wire38 = (wire35[(3'h4):(1'h1)] ?
                      wire36[(1'h0):(1'h0)] : $signed((^~{wire37})));
  assign wire39 = $signed($signed($unsigned(wire35)));
  always
    @(posedge clk) begin
      reg40 <= ((|((~wire35) ? wire34 : (8'h9c))) ?
          wire39[(4'ha):(3'h7)] : $unsigned(wire34[(2'h2):(1'h0)]));
      if ((~&$signed(((-(8'ha1)) ?
          wire37[(4'h8):(1'h0)] : $unsigned((8'ha5))))))
        begin
          reg41 <= (wire38 < ((8'h9f) >> $signed((wire39 ? reg40 : wire36))));
          reg42 <= ({($signed(wire36) ?
                  {wire36} : (|wire38))} * ({$unsigned(reg40)} ?
              (+(wire38 == wire35)) : {$signed(wire34)}));
          reg43 <= wire38;
        end
      else
        begin
          reg41 <= wire39[(3'h7):(3'h6)];
        end
      reg44 <= wire39[(4'h9):(3'h6)];
    end
  assign wire45 = $unsigned(($signed((reg43 < reg41)) ?
                      (wire37 ?
                          (reg40 ?
                              wire34 : wire38) : $signed(wire38)) : $unsigned($unsigned(reg42))));
  assign wire46 = {wire38[(1'h0):(1'h0)]};
  assign wire47 = reg40;
  assign wire48 = {(8'ha8)};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param30 = (((~((8'ha0) >>> (8'hae))) - (((8'hab) ~^ (8'hb0)) ? ((8'ha7) >= (8'had)) : ((8'haa) ? (8'ha2) : (8'h9d)))) ? ((((8'h9d) && (8'hab)) != ((8'ha7) ^~ (8'ha7))) ^~ (^((8'ha6) ? (8'ha8) : (8'ha3)))) : ((((8'had) & (8'h9c)) <= ((8'haf) ? (8'haa) : (8'had))) != (~|(-(8'hb0))))))
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h19):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire24;
  input wire signed [(4'hb):(1'h0)] wire23;
  input wire signed [(3'h5):(1'h0)] wire22;
  input wire [(4'hb):(1'h0)] wire21;
  wire [(4'h8):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire28;
  wire signed [(3'h6):(1'h0)] wire27;
  wire [(3'h5):(1'h0)] wire25;
  reg [(2'h3):(1'h0)] reg26 = (1'h0);
  assign y = {wire29, wire28, wire27, wire25, reg26, (1'h0)};
  assign wire25 = ({{(wire24 ~^ wire24)}} ^ {(8'hac)});
  always
    @(posedge clk) begin
      reg26 <= $signed($signed(($signed((8'ha7)) <<< $signed(wire22))));
    end
  assign wire27 = reg26;
  assign wire28 = $signed(((+wire23) ^ wire22));
  assign wire29 = wire21[(3'h4):(3'h4)];
endmodule