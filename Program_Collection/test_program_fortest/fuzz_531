(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire29;
  wire signed [(4'ha):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire19;
  wire signed [(2'h2):(1'h0)] wire9;
  wire [(4'ha):(1'h0)] wire8;
  wire signed [(4'h8):(1'h0)] wire7;
  wire signed [(3'h7):(1'h0)] wire6;
  wire signed [(4'h9):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire4;
  reg [(4'hb):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg26 = (1'h0);
  reg [(3'h7):(1'h0)] reg25 = (1'h0);
  reg [(2'h3):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg23 = (1'h0);
  reg [(4'h9):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg21 = (1'h0);
  assign y = {wire29,
                 wire28,
                 wire19,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 (1'h0)};
  assign wire4 = wire3[(2'h3):(1'h1)];
  assign wire5 = (wire1 ? $signed(((|wire3) | (8'h9d))) : $unsigned(wire1));
  assign wire6 = $signed(((&(wire1 < wire4)) << (^wire5[(1'h1):(1'h1)])));
  assign wire7 = wire5;
  assign wire8 = (wire4 >> ($unsigned((&wire2)) ?
                     ($unsigned(wire3) ?
                         wire2 : wire2[(3'h6):(1'h0)]) : wire6));
  assign wire9 = (&(~^$unsigned((&wire8))));
  module10 #() modinst20 (.wire13(wire4), .wire12(wire7), .y(wire19), .wire11(wire3), .clk(clk), .wire14(wire5));
  always
    @(posedge clk) begin
      reg21 <= (~|(8'h9e));
      if ($unsigned({{reg21}}))
        begin
          reg22 <= (^~(+($unsigned((8'hb0)) ? wire0 : (wire7 - (8'hb0)))));
          if ($unsigned({$unsigned(wire5)}))
            begin
              reg23 <= $signed($signed($unsigned((+(8'ha8)))));
              reg24 <= wire0;
              reg25 <= (wire3 ?
                  $signed((-$unsigned((8'hac)))) : $unsigned(($unsigned(wire8) ?
                      $signed((8'haf)) : (wire9 - wire4))));
            end
          else
            begin
              reg23 <= reg24[(1'h0):(1'h0)];
              reg24 <= wire8;
            end
          reg26 <= (8'hab);
        end
      else
        begin
          reg22 <= (8'hb0);
          reg23 <= (8'haf);
          if ($unsigned((reg25 ?
              (~(wire7 ? reg22 : reg21)) : $unsigned(reg25))))
            begin
              reg24 <= $signed(($signed((wire5 ? wire0 : (8'h9c))) ?
                  ((reg22 > reg24) ?
                      reg24[(1'h0):(1'h0)] : (+wire4)) : ((reg24 ?
                          (8'h9e) : reg26) ?
                      {reg26} : (reg25 ? wire5 : (8'h9c)))));
              reg25 <= reg26[(3'h4):(1'h1)];
              reg26 <= wire4[(4'h9):(3'h4)];
            end
          else
            begin
              reg24 <= (~$signed(((wire8 ? wire7 : reg21) ?
                  wire5[(4'h8):(2'h2)] : (^(8'ha5)))));
              reg25 <= ($unsigned((wire5 + {wire8})) ?
                  (((reg25 ?
                      reg25 : wire6) >>> (8'ha1)) <<< ((~wire5) & $signed((8'haa)))) : (($unsigned((8'ha6)) + (reg23 != wire19)) != ($signed(wire9) ?
                      (wire9 ? wire5 : wire2) : wire4)));
            end
        end
      reg27 <= reg23;
    end
  assign wire28 = $signed(wire19[(3'h7):(2'h2)]);
  assign wire29 = (((reg23 && $unsigned(wire1)) ?
                      $unsigned(wire0) : $signed($unsigned(reg24))) << wire19[(4'ha):(2'h2)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h1c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire14;
  input wire signed [(3'h6):(1'h0)] wire13;
  input wire [(4'h8):(1'h0)] wire12;
  input wire [(3'h5):(1'h0)] wire11;
  wire signed [(3'h4):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire17;
  wire signed [(3'h5):(1'h0)] wire16;
  wire signed [(4'h9):(1'h0)] wire15;
  assign y = {wire18, wire17, wire16, wire15, (1'h0)};
  assign wire15 = wire12;
  assign wire16 = wire12[(3'h5):(2'h2)];
  assign wire17 = $unsigned(wire13[(1'h0):(1'h0)]);
  assign wire18 = wire16;
endmodule