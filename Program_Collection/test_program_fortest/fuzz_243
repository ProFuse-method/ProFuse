(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire70;
  wire signed [(4'hb):(1'h0)] wire68;
  wire signed [(4'h9):(1'h0)] wire67;
  wire [(2'h3):(1'h0)] wire66;
  wire [(4'hb):(1'h0)] wire64;
  wire signed [(4'hb):(1'h0)] wire6;
  wire [(4'ha):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  assign y = {wire70,
                 wire68,
                 wire67,
                 wire66,
                 wire64,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = $unsigned({$unsigned(wire1)});
  assign wire5 = (~(~&(wire1 ? (!wire3) : $signed(wire3))));
  assign wire6 = wire4;
  module7 #() modinst65 (.clk(clk), .wire11(wire0), .y(wire64), .wire9(wire6), .wire10(wire1), .wire8(wire3));
  assign wire66 = ((((~^(8'hae)) ^~ (wire2 ? wire2 : wire4)) ?
                          ((wire64 ?
                              wire4 : wire2) || $signed(wire6)) : ($unsigned(wire6) | wire3)) ?
                      (~|$signed($unsigned(wire5))) : $signed($signed((+(8'ha8)))));
  assign wire67 = (((wire64[(4'hb):(4'h8)] == wire64) && (~|wire3[(3'h5):(3'h5)])) << (($signed(wire2) * wire4) ?
                      $unsigned(wire4) : wire64));
  module13 #() modinst69 (.wire16(wire5), .wire15(wire6), .y(wire68), .clk(clk), .wire14(wire4), .wire17(wire0));
  assign wire70 = (&($signed((&wire6)) >> wire66[(2'h2):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param63 = (-(+(~^((8'hae) ^~ (8'ha6))))))
(y, clk, wire8, wire9, wire10, wire11);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire8;
  input wire [(4'hb):(1'h0)] wire9;
  input wire [(4'ha):(1'h0)] wire10;
  input wire signed [(4'h8):(1'h0)] wire11;
  wire [(4'ha):(1'h0)] wire62;
  wire signed [(2'h3):(1'h0)] wire12;
  wire signed [(4'h9):(1'h0)] wire32;
  wire [(4'h9):(1'h0)] wire34;
  wire signed [(4'h8):(1'h0)] wire35;
  wire [(4'hb):(1'h0)] wire36;
  wire signed [(3'h5):(1'h0)] wire51;
  wire [(4'h9):(1'h0)] wire53;
  wire signed [(4'h8):(1'h0)] wire59;
  wire [(2'h2):(1'h0)] wire60;
  reg [(2'h3):(1'h0)] reg54 = (1'h0);
  reg [(4'h9):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg56 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg57 = (1'h0);
  reg [(2'h2):(1'h0)] reg58 = (1'h0);
  assign y = {wire62,
                 wire12,
                 wire32,
                 wire34,
                 wire35,
                 wire36,
                 wire51,
                 wire53,
                 wire59,
                 wire60,
                 reg54,
                 reg55,
                 reg56,
                 reg57,
                 reg58,
                 (1'h0)};
  assign wire12 = wire11;
  module13 #() modinst33 (.clk(clk), .wire15(wire8), .wire17(wire10), .y(wire32), .wire16(wire12), .wire14(wire9));
  assign wire34 = wire32[(1'h1):(1'h0)];
  assign wire35 = (!{wire32[(1'h1):(1'h1)]});
  assign wire36 = (!$unsigned($signed({(8'ha5)})));
  module37 #() modinst52 (.clk(clk), .wire41(wire36), .wire40(wire11), .wire38(wire10), .wire39(wire32), .y(wire51));
  assign wire53 = wire9[(3'h6):(3'h4)];
  always
    @(posedge clk) begin
      reg54 <= (($signed(((8'ha2) ? wire34 : (8'ha8))) ?
              wire53[(4'h9):(2'h3)] : $signed(wire35[(2'h2):(2'h2)])) ?
          wire8 : {wire35[(1'h1):(1'h1)]});
      if (wire10[(3'h7):(2'h3)])
        begin
          reg55 <= (wire34 ?
              wire32 : ((wire51[(3'h5):(1'h1)] | $unsigned(wire32)) ?
                  wire32[(4'h8):(1'h1)] : (&{reg54})));
          if ($signed(wire10[(4'h8):(2'h3)]))
            begin
              reg56 <= ((!(^(wire34 ?
                  wire51 : wire11))) == $unsigned((wire36[(4'h8):(1'h0)] < $unsigned(wire10))));
            end
          else
            begin
              reg56 <= $signed(wire12[(2'h3):(1'h0)]);
              reg57 <= {$unsigned(wire11[(3'h4):(1'h1)])};
              reg58 <= $signed($unsigned($signed((wire10 ?
                  (8'ha9) : (8'had)))));
            end
        end
      else
        begin
          reg55 <= reg54[(2'h3):(2'h3)];
          reg56 <= reg56[(2'h3):(1'h1)];
        end
    end
  assign wire59 = (wire8 - $unsigned(((reg56 ? wire8 : (8'ha2)) ?
                      wire36 : $unsigned(reg54))));
  module13 #() modinst61 (wire60, clk, reg57, wire34, wire9, wire36);
  assign wire62 = {wire10[(4'h9):(4'h8)]};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module37
#(parameter param50 = (({((8'haa) ? (8'h9d) : (8'ha0))} >>> ((~|(8'ha0)) ? (~^(8'ha0)) : ((8'hae) ^~ (8'ha9)))) <= ((~&{(8'ha2)}) ? (-((8'had) * (8'h9c))) : {(-(8'hab))})))
(y, clk, wire41, wire40, wire39, wire38);
  output wire [(32'h38):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire41;
  input wire [(4'h8):(1'h0)] wire40;
  input wire [(4'h9):(1'h0)] wire39;
  input wire [(4'ha):(1'h0)] wire38;
  wire [(4'h8):(1'h0)] wire49;
  wire signed [(2'h3):(1'h0)] wire48;
  wire [(2'h2):(1'h0)] wire47;
  wire signed [(4'h9):(1'h0)] wire45;
  wire [(3'h7):(1'h0)] wire44;
  wire signed [(3'h7):(1'h0)] wire43;
  wire signed [(4'h8):(1'h0)] wire42;
  reg signed [(4'hb):(1'h0)] reg46 = (1'h0);
  assign y = {wire49,
                 wire48,
                 wire47,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 reg46,
                 (1'h0)};
  assign wire42 = (~&($unsigned((wire39 ? wire38 : wire38)) ?
                      $unsigned((wire40 < wire40)) : wire41[(3'h4):(2'h3)]));
  assign wire43 = ({wire41[(4'h9):(3'h4)]} ?
                      ($unsigned({wire38}) ?
                          $unsigned((wire41 ? wire40 : wire39)) : (wire39 ?
                              (wire41 ?
                                  wire39 : wire38) : wire42)) : (~^{(wire40 + wire39)}));
  assign wire44 = wire42[(3'h5):(1'h1)];
  assign wire45 = $unsigned($signed(wire38[(4'h9):(4'h8)]));
  always
    @(posedge clk) begin
      reg46 <= (^~wire43[(2'h2):(1'h1)]);
    end
  assign wire47 = wire43;
  assign wire48 = wire44[(2'h3):(1'h1)];
  assign wire49 = $unsigned((wire42 < $signed($unsigned((8'ha8)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire17;
  input wire signed [(2'h3):(1'h0)] wire16;
  input wire signed [(4'ha):(1'h0)] wire15;
  input wire [(4'hb):(1'h0)] wire14;
  wire signed [(3'h5):(1'h0)] wire31;
  wire [(2'h3):(1'h0)] wire28;
  wire signed [(3'h5):(1'h0)] wire27;
  wire [(2'h2):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire24;
  wire [(3'h5):(1'h0)] wire23;
  wire [(3'h5):(1'h0)] wire22;
  wire signed [(2'h2):(1'h0)] wire21;
  wire [(3'h6):(1'h0)] wire18;
  reg signed [(4'h8):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg29 = (1'h0);
  reg [(4'h8):(1'h0)] reg20 = (1'h0);
  reg [(4'h9):(1'h0)] reg19 = (1'h0);
  assign y = {wire31,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire18,
                 reg30,
                 reg29,
                 reg20,
                 reg19,
                 (1'h0)};
  assign wire18 = (^($signed((+wire14)) & ((wire17 ?
                      wire16 : (8'ha8)) == wire16[(2'h3):(1'h1)])));
  always
    @(posedge clk) begin
      reg19 <= (wire15[(3'h5):(2'h2)] ?
          wire14 : $signed(($unsigned(wire17) ~^ (wire16 ? (8'haf) : wire17))));
      reg20 <= (8'ha6);
    end
  assign wire21 = wire15;
  assign wire22 = (wire18 - reg19[(3'h7):(2'h3)]);
  assign wire23 = wire21[(1'h0):(1'h0)];
  assign wire24 = $signed({wire23});
  assign wire25 = wire22;
  assign wire26 = $unsigned(wire25[(1'h0):(1'h0)]);
  assign wire27 = {wire26};
  assign wire28 = wire21[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      reg29 <= (|(((wire17 | (8'haa)) ?
          wire18[(3'h6):(3'h4)] : ((8'hac) ?
              wire21 : reg19)) != wire25[(2'h2):(1'h1)]));
      reg30 <= wire21;
    end
  assign wire31 = (8'ha4);
endmodule