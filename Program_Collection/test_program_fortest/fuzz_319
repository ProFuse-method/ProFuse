(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param64 = {((((8'hac) ~^ (8'ha0)) <<< (~^(8'hae))) || ((^~(8'ha9)) <<< {(8'hb0)}))})
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire0;
  input wire [(3'h4):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire3;
  wire signed [(3'h5):(1'h0)] wire4;
  wire [(3'h6):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire7;
  wire signed [(3'h7):(1'h0)] wire11;
  wire signed [(4'hb):(1'h0)] wire57;
  reg [(4'h9):(1'h0)] reg63 = (1'h0);
  reg [(3'h5):(1'h0)] reg62 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg61 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg59 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg8 = (1'h0);
  reg [(3'h4):(1'h0)] reg9 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg10 = (1'h0);
  assign y = {wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire11,
                 wire57,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 reg8,
                 reg9,
                 reg10,
                 (1'h0)};
  assign wire4 = $unsigned($signed(((^~(8'ha2)) ?
                     wire1[(2'h2):(1'h1)] : (^~(8'ha3)))));
  assign wire5 = (8'ha7);
  assign wire6 = (-$signed($signed(wire1)));
  assign wire7 = wire0;
  always
    @(posedge clk) begin
      reg8 <= $signed(wire0);
      reg9 <= wire7[(3'h6):(3'h6)];
      reg10 <= wire5[(2'h2):(2'h2)];
    end
  assign wire11 = (~($unsigned((wire3 ^~ wire2)) ?
                      ((reg9 ?
                          reg8 : wire2) <= (~&(8'ha7))) : $unsigned(((8'ha0) ?
                          wire7 : reg10))));
  module12 #() modinst58 (wire57, clk, wire7, reg8, wire3, wire2);
  always
    @(posedge clk) begin
      if (wire1)
        begin
          if ({$unsigned((^(wire1 ? wire3 : wire57)))})
            begin
              reg59 <= {((wire57 ?
                      (wire2 * wire2) : (reg8 ?
                          (8'hab) : wire0)) <= $unsigned($unsigned(wire7)))};
              reg60 <= $unsigned($unsigned((wire5[(3'h5):(3'h5)] != $unsigned((8'ha1)))));
              reg61 <= (~|wire6);
            end
          else
            begin
              reg59 <= $unsigned((((wire57 ?
                  wire7 : (8'hab)) << $signed(wire0)) | wire2));
              reg60 <= reg59[(3'h6):(3'h6)];
              reg61 <= {{$unsigned({(8'h9c)})}};
            end
        end
      else
        begin
          reg59 <= $signed((((wire1 >= wire3) ^ reg8[(1'h0):(1'h0)]) ?
              wire3[(3'h6):(1'h0)] : reg8));
          reg60 <= ($signed($signed(wire11)) <= wire0);
        end
      reg62 <= $unsigned(($signed((8'hae)) ?
          $signed({(8'haf)}) : $unsigned((reg9 * wire3))));
      reg63 <= (~^$signed(reg60[(4'hb):(1'h1)]));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param56 = (((((8'h9c) << (8'ha1)) | {(8'haf)}) && ((~&(8'ha8)) ? {(8'h9d)} : (^~(8'ha8)))) && (((~(8'hb0)) | ((8'hb0) ? (8'ha2) : (8'ha1))) ? ((8'ha1) <<< {(8'ha1)}) : (^~((8'hac) ? (8'ha1) : (8'ha8))))))
(y, clk, wire13, wire14, wire15, wire16);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire13;
  input wire [(3'h4):(1'h0)] wire14;
  input wire [(3'h7):(1'h0)] wire15;
  input wire signed [(2'h2):(1'h0)] wire16;
  wire signed [(3'h7):(1'h0)] wire55;
  wire [(4'h9):(1'h0)] wire54;
  wire [(2'h2):(1'h0)] wire21;
  wire signed [(4'h8):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire23;
  wire signed [(4'ha):(1'h0)] wire24;
  wire signed [(2'h2):(1'h0)] wire52;
  reg signed [(4'hb):(1'h0)] reg17 = (1'h0);
  reg [(4'h9):(1'h0)] reg18 = (1'h0);
  reg [(4'h9):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg20 = (1'h0);
  reg [(3'h7):(1'h0)] reg25 = (1'h0);
  reg [(3'h4):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg27 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg29 = (1'h0);
  assign y = {wire55,
                 wire54,
                 wire21,
                 wire22,
                 wire23,
                 wire24,
                 wire52,
                 reg17,
                 reg18,
                 reg19,
                 reg20,
                 reg25,
                 reg26,
                 reg27,
                 reg28,
                 reg29,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg17 <= wire15;
      if (($signed({(wire16 ? (8'hab) : (8'ha4))}) ?
          (~$signed((wire16 != wire15))) : ((^~wire13) << ($signed(wire14) ?
              (wire13 ^ reg17) : $signed(wire14)))))
        begin
          if ((^~(($unsigned(wire15) <<< $unsigned(wire13)) ?
              (-(wire14 && (8'hb0))) : $signed(reg17))))
            begin
              reg18 <= $signed((((8'h9d) ?
                  (&reg17) : (^~reg17)) <<< $signed($unsigned(wire15))));
            end
          else
            begin
              reg18 <= $unsigned((8'h9e));
              reg19 <= reg17;
            end
          reg20 <= $signed(({wire16} ?
              ($signed(reg18) ?
                  $unsigned((8'had)) : $signed(wire13)) : wire14[(1'h0):(1'h0)]));
        end
      else
        begin
          if ($signed((reg18[(3'h5):(1'h0)] ? wire13 : wire13[(1'h1):(1'h0)])))
            begin
              reg18 <= reg19[(3'h5):(1'h0)];
              reg19 <= reg19;
            end
          else
            begin
              reg18 <= $unsigned($signed($signed(wire16[(2'h2):(1'h0)])));
              reg19 <= {$unsigned((wire13[(1'h1):(1'h0)] ? reg17 : {reg19}))};
              reg20 <= $signed((8'h9d));
            end
        end
    end
  assign wire21 = ((($signed(wire16) < $unsigned(wire14)) ?
                          ((reg19 ? reg17 : wire13) ?
                              (|reg20) : reg19) : reg17) ?
                      reg20[(2'h2):(1'h0)] : ($signed($unsigned(reg18)) ?
                          wire13[(3'h4):(3'h4)] : {(reg19 ? reg19 : wire15)}));
  assign wire22 = ({$unsigned((wire14 > reg20))} + reg20[(1'h0):(1'h0)]);
  assign wire23 = wire13[(3'h4):(1'h0)];
  assign wire24 = {(((wire22 ? (8'h9f) : wire14) * ((8'ha2) ?
                          reg20 : wire21)) * ((wire22 | wire16) ?
                          wire13 : (wire15 > wire23)))};
  always
    @(posedge clk) begin
      reg25 <= $unsigned(((8'ha8) ? $unsigned((wire14 == wire13)) : reg17));
      reg26 <= (($unsigned((wire24 ? reg19 : reg17)) ?
              ((reg20 ? wire14 : reg25) ?
                  (wire16 ?
                      (8'ha0) : wire22) : $unsigned(wire22)) : $signed((~&wire13))) ?
          ({(^reg17)} << {(wire22 >>> (8'ha1))}) : $signed($unsigned($unsigned(reg17))));
    end
  always
    @(posedge clk) begin
      if ({wire23})
        begin
          reg27 <= {($unsigned((+wire21)) - $signed(reg18))};
          reg28 <= (|$unsigned(($unsigned(wire15) <<< (~&wire15))));
          reg29 <= {{$unsigned(wire13[(1'h1):(1'h1)])}};
        end
      else
        begin
          reg27 <= reg26;
          if ((~(wire23[(2'h3):(1'h0)] ?
              (wire21 ? $unsigned(reg18) : (wire16 - wire22)) : ((reg26 ?
                  reg19 : reg17) <= $unsigned((8'ha4))))))
            begin
              reg28 <= $signed(wire16[(2'h2):(2'h2)]);
            end
          else
            begin
              reg28 <= $unsigned($signed((&wire21)));
              reg29 <= ((^wire23) < reg29);
            end
        end
    end
  module30 #() modinst53 (wire52, clk, wire15, wire23, reg28, wire13);
  assign wire54 = {$unsigned((&$unsigned((8'ha2))))};
  assign wire55 = {($signed((~|wire22)) ?
                          (8'haa) : (+(wire14 ? reg17 : wire54)))};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module30  (y, clk, wire34, wire33, wire32, wire31);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire34;
  input wire signed [(3'h7):(1'h0)] wire33;
  input wire [(4'ha):(1'h0)] wire32;
  input wire signed [(4'h9):(1'h0)] wire31;
  wire signed [(2'h2):(1'h0)] wire49;
  wire [(4'ha):(1'h0)] wire48;
  wire [(3'h7):(1'h0)] wire47;
  wire [(2'h3):(1'h0)] wire42;
  wire signed [(3'h6):(1'h0)] wire41;
  wire [(4'h8):(1'h0)] wire38;
  wire signed [(3'h4):(1'h0)] wire37;
  reg [(3'h4):(1'h0)] reg51 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg50 = (1'h0);
  reg [(3'h6):(1'h0)] reg46 = (1'h0);
  reg [(3'h5):(1'h0)] reg45 = (1'h0);
  reg [(3'h7):(1'h0)] reg44 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg40 = (1'h0);
  reg [(3'h7):(1'h0)] reg39 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg36 = (1'h0);
  reg [(3'h7):(1'h0)] reg35 = (1'h0);
  assign y = {wire49,
                 wire48,
                 wire47,
                 wire42,
                 wire41,
                 wire38,
                 wire37,
                 reg51,
                 reg50,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg40,
                 reg39,
                 reg36,
                 reg35,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg35 <= (!{(+$unsigned(wire34))});
      reg36 <= wire32[(2'h2):(2'h2)];
    end
  assign wire37 = (^~wire31[(3'h4):(1'h1)]);
  assign wire38 = $unsigned($signed((+(!reg36))));
  always
    @(posedge clk) begin
      reg39 <= (wire37[(1'h0):(1'h0)] ?
          $signed((~&{wire33})) : $unsigned({$unsigned(wire32)}));
      reg40 <= (($signed((+wire32)) == ($signed(wire33) ?
              (wire34 | wire37) : {reg36})) ?
          reg39[(1'h0):(1'h0)] : wire32);
    end
  assign wire41 = (+(wire38[(3'h6):(3'h4)] | reg36[(1'h0):(1'h0)]));
  assign wire42 = wire32[(3'h7):(2'h3)];
  always
    @(posedge clk) begin
      reg43 <= $unsigned(wire37);
      if ((~^$signed({$signed(wire37)})))
        begin
          reg44 <= $unsigned((wire41[(2'h3):(1'h0)] ?
              $unsigned(wire31[(3'h7):(2'h3)]) : ((|reg43) >= wire34[(1'h0):(1'h0)])));
          if ({(($unsigned(reg39) - ((8'ha2) | reg44)) ?
                  $signed($signed(wire37)) : $signed(wire37[(1'h0):(1'h0)]))})
            begin
              reg45 <= $unsigned(((8'ha2) ?
                  ($unsigned(reg44) & (reg43 != reg35)) : $unsigned($unsigned(wire32))));
            end
          else
            begin
              reg45 <= ((($signed(wire41) ?
                  (~reg45) : reg36) >= reg43[(2'h3):(1'h0)]) - wire33);
            end
          reg46 <= {(reg36 ?
                  reg39[(3'h5):(1'h1)] : ((wire33 ? wire42 : wire38) ?
                      (&wire34) : {reg35}))};
        end
      else
        begin
          reg44 <= ($unsigned(wire32) != (reg45 ?
              ($unsigned(wire32) ?
                  reg36[(1'h0):(1'h0)] : (reg43 ?
                      reg36 : wire34)) : (reg43 - (~^wire37))));
        end
    end
  assign wire47 = reg45;
  assign wire48 = {wire32};
  assign wire49 = $signed(reg40);
  always
    @(posedge clk) begin
      reg50 <= reg35;
      reg51 <= $unsigned(wire31[(4'h9):(3'h5)]);
    end
endmodule