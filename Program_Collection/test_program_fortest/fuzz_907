(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h38b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire4;
  input wire signed [(4'hd):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire [(4'hc):(1'h0)] wire76;
  wire signed [(5'h10):(1'h0)] wire75;
  wire signed [(4'ha):(1'h0)] wire74;
  wire signed [(2'h2):(1'h0)] wire73;
  wire signed [(4'hb):(1'h0)] wire72;
  wire signed [(4'hc):(1'h0)] wire71;
  wire signed [(4'hf):(1'h0)] wire70;
  wire signed [(5'h12):(1'h0)] wire40;
  wire [(4'hc):(1'h0)] wire16;
  reg [(4'h8):(1'h0)] reg69 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg66 = (1'h0);
  reg [(4'he):(1'h0)] reg65 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg64 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg63 = (1'h0);
  reg [(5'h10):(1'h0)] reg61 = (1'h0);
  reg [(4'hd):(1'h0)] reg60 = (1'h0);
  reg [(5'h14):(1'h0)] reg59 = (1'h0);
  reg [(5'h10):(1'h0)] reg57 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg55 = (1'h0);
  reg [(5'h13):(1'h0)] reg54 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg53 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg50 = (1'h0);
  reg [(4'h8):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg45 = (1'h0);
  reg [(5'h12):(1'h0)] reg44 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg39 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg36 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg35 = (1'h0);
  reg [(5'h15):(1'h0)] reg31 = (1'h0);
  reg [(5'h15):(1'h0)] reg25 = (1'h0);
  reg [(3'h5):(1'h0)] reg23 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg22 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg20 = (1'h0);
  reg signed [(4'he):(1'h0)] reg17 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg15 = (1'h0);
  reg [(4'hd):(1'h0)] reg14 = (1'h0);
  reg [(5'h12):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg8 = (1'h0);
  reg [(5'h13):(1'h0)] forvar68 = (1'h0);
  reg [(3'h7):(1'h0)] reg67 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar62 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar58 = (1'h0);
  reg [(3'h4):(1'h0)] reg56 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar52 = (1'h0);
  reg [(4'hd):(1'h0)] forvar51 = (1'h0);
  reg [(5'h13):(1'h0)] reg49 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar46 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar43 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar42 = (1'h0);
  reg [(4'ha):(1'h0)] reg41 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar38 = (1'h0);
  reg [(5'h10):(1'h0)] forvar37 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg33 = (1'h0);
  reg [(5'h13):(1'h0)] forvar32 = (1'h0);
  reg [(3'h5):(1'h0)] reg30 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg29 = (1'h0);
  reg [(4'hc):(1'h0)] reg28 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar27 = (1'h0);
  reg [(4'ha):(1'h0)] forvar26 = (1'h0);
  reg [(2'h3):(1'h0)] reg24 = (1'h0);
  reg [(4'hc):(1'h0)] forvar21 = (1'h0);
  reg [(4'hf):(1'h0)] forvar19 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar18 = (1'h0);
  reg [(4'h9):(1'h0)] reg13 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar12 = (1'h0);
  reg [(5'h14):(1'h0)] reg10 = (1'h0);
  reg [(4'ha):(1'h0)] reg9 = (1'h0);
  reg [(3'h5):(1'h0)] reg7 = (1'h0);
  reg [(5'h12):(1'h0)] forvar6 = (1'h0);
  reg [(5'h12):(1'h0)] forvar5 = (1'h0);
  assign y = {wire76,
                 wire75,
                 wire74,
                 wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire40,
                 wire16,
                 reg69,
                 reg66,
                 reg65,
                 reg64,
                 reg63,
                 reg61,
                 reg60,
                 reg59,
                 reg57,
                 reg55,
                 reg54,
                 reg53,
                 reg50,
                 reg47,
                 reg45,
                 reg44,
                 reg39,
                 reg36,
                 reg35,
                 reg31,
                 reg25,
                 reg23,
                 reg22,
                 reg20,
                 reg17,
                 reg15,
                 reg14,
                 reg11,
                 reg8,
                 forvar68,
                 reg67,
                 forvar62,
                 forvar58,
                 reg56,
                 forvar52,
                 forvar51,
                 reg49,
                 reg48,
                 forvar46,
                 forvar43,
                 forvar42,
                 reg41,
                 forvar38,
                 forvar37,
                 reg34,
                 reg33,
                 forvar32,
                 reg30,
                 reg29,
                 reg28,
                 forvar27,
                 forvar26,
                 reg24,
                 forvar21,
                 forvar19,
                 forvar18,
                 reg13,
                 forvar12,
                 reg10,
                 reg9,
                 reg7,
                 forvar6,
                 forvar5,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar5 = (1'h0); (forvar5 < (1'h0)); forvar5 = (forvar5 + (1'h1)))
        begin
          for (forvar6 = (1'h0); (forvar6 < (2'h3)); forvar6 = (forvar6 + (1'h1)))
            begin
              reg7 = (wire4 ?
                  $unsigned((wire2 ?
                      (^~$signed(forvar5)) : $signed({(8'ha1)}))) : (|$unsigned($signed(forvar6))));
              reg8 <= wire3;
              reg9 = {{(($unsigned(forvar6) ?
                          wire0[(2'h3):(2'h3)] : (reg8 * wire4)) || forvar6[(5'h12):(4'he)])},
                  $unsigned(($unsigned(wire2[(3'h4):(1'h0)]) ?
                      wire0[(1'h1):(1'h0)] : $signed($signed(wire4))))};
              reg10 = reg8[(3'h4):(2'h3)];
              reg11 <= ({($signed($unsigned(reg7)) ?
                      {wire1[(4'h9):(3'h4)]} : ((~|reg10) ?
                          (~reg10) : $signed(reg8)))} << wire4[(2'h3):(1'h1)]);
            end
          for (forvar12 = (1'h0); (forvar12 < (2'h2)); forvar12 = (forvar12 + (1'h1)))
            begin
              reg13 = $unsigned((!wire3));
              reg14 <= $unsigned($signed($signed($unsigned(reg8[(1'h0):(1'h0)]))));
              reg15 <= ($signed($signed(wire0)) ?
                  reg13[(2'h2):(2'h2)] : ((~|((wire2 <<< (8'h9e)) & forvar12[(4'h9):(3'h6)])) ?
                      (~reg8) : (($unsigned(forvar5) ?
                          (reg11 ?
                              wire3 : wire1) : $signed(wire3)) * ($unsigned(reg13) != $signed((8'hb4))))));
            end
        end
    end
  assign wire16 = $signed((~&($signed((wire2 ^~ (8'ha5))) >>> reg15[(4'h8):(3'h4)])));
  always
    @(posedge clk) begin
      reg17 <= {(~wire4[(3'h4):(1'h1)])};
      for (forvar18 = (1'h0); (forvar18 < (1'h1)); forvar18 = (forvar18 + (1'h1)))
        begin
          for (forvar19 = (1'h0); (forvar19 < (2'h3)); forvar19 = (forvar19 + (1'h1)))
            begin
              reg20 <= (|$signed(($signed(wire3) ?
                  reg11 : wire4[(2'h3):(1'h1)])));
            end
          for (forvar21 = (1'h0); (forvar21 < (3'h4)); forvar21 = (forvar21 + (1'h1)))
            begin
              reg22 <= $signed((~^$signed({forvar19, (&reg8)})));
              reg23 <= (~^forvar21[(1'h1):(1'h0)]);
              reg24 = reg14[(4'ha):(3'h6)];
            end
          reg25 <= ($signed(reg14[(4'hd):(2'h2)]) || (wire2[(3'h5):(2'h3)] ?
              {{reg17}} : wire4[(2'h2):(1'h1)]));
        end
      for (forvar26 = (1'h0); (forvar26 < (2'h3)); forvar26 = (forvar26 + (1'h1)))
        begin
          for (forvar27 = (1'h0); (forvar27 < (3'h4)); forvar27 = (forvar27 + (1'h1)))
            begin
              reg28 = $signed((&forvar21));
              reg29 = wire3;
              reg30 = (~$signed($unsigned({reg23})));
              reg31 <= $unsigned(($unsigned(((reg17 ?
                  (8'hbe) : wire3) >>> ((7'h43) + wire0))) >= ((~|wire3[(4'h9):(1'h1)]) ?
                  $signed(forvar27) : $unsigned((8'h9e)))));
            end
          for (forvar32 = (1'h0); (forvar32 < (3'h4)); forvar32 = (forvar32 + (1'h1)))
            begin
              reg33 = ($signed(wire0) | $signed($signed((&(reg14 ?
                  (8'hb9) : reg28)))));
              reg34 = ($signed(forvar26) >> wire2[(3'h6):(2'h3)]);
              reg35 <= $signed($signed(forvar26[(1'h0):(1'h0)]));
              reg36 <= $unsigned(((reg15 ^ (forvar18 ?
                      $signed(reg17) : reg29)) ?
                  (^reg24[(1'h0):(1'h0)]) : {(~&$signed((8'ha2)))}));
            end
        end
      for (forvar37 = (1'h0); (forvar37 < (1'h0)); forvar37 = (forvar37 + (1'h1)))
        begin
          for (forvar38 = (1'h0); (forvar38 < (3'h4)); forvar38 = (forvar38 + (1'h1)))
            begin
              reg39 <= (forvar32 > $unsigned(wire0[(1'h0):(1'h0)]));
            end
        end
    end
  assign wire40 = reg35;
  always
    @(posedge clk) begin
      reg41 = reg25;
      for (forvar42 = (1'h0); (forvar42 < (2'h3)); forvar42 = (forvar42 + (1'h1)))
        begin
          for (forvar43 = (1'h0); (forvar43 < (3'h4)); forvar43 = (forvar43 + (1'h1)))
            begin
              reg44 <= {reg11};
              reg45 <= (wire1[(3'h6):(1'h1)] ?
                  {{((~^wire3) ? (wire0 + wire4) : $unsigned(reg23))}} : reg41);
            end
          for (forvar46 = (1'h0); (forvar46 < (1'h0)); forvar46 = (forvar46 + (1'h1)))
            begin
              reg47 <= wire1[(3'h7):(1'h1)];
              reg48 = (wire40[(4'hc):(3'h4)] ^~ ((reg44 ?
                  (~|reg44) : (8'ha2)) - ($unsigned(wire3[(4'ha):(3'h7)]) ?
                  $unsigned($signed(reg20)) : $signed((wire4 ?
                      reg17 : reg36)))));
              reg49 = $unsigned(reg47);
              reg50 <= {forvar42, $unsigned(wire0[(2'h3):(1'h0)])};
            end
        end
      for (forvar51 = (1'h0); (forvar51 < (2'h3)); forvar51 = (forvar51 + (1'h1)))
        begin
          for (forvar52 = (1'h0); (forvar52 < (2'h3)); forvar52 = (forvar52 + (1'h1)))
            begin
              reg53 <= $unsigned(((reg39[(3'h5):(3'h5)] ?
                      (8'h9c) : {(reg31 ? reg39 : forvar51),
                          reg47[(3'h4):(2'h2)]}) ?
                  (!$signed($signed(forvar43))) : $signed((-$unsigned((7'h44))))));
              reg54 <= $signed(($signed((^~(reg49 != (8'hb7)))) << (+wire3)));
              reg55 <= (wire0 ?
                  reg39[(4'ha):(3'h4)] : (($unsigned((8'hac)) ?
                          ((~|wire0) - reg8) : (~|(forvar51 ?
                              wire4 : wire40))) ?
                      (($signed(reg36) != (reg25 ?
                          reg44 : reg39)) - (~&(forvar52 ^ (8'ha7)))) : $unsigned((~|(reg14 < reg20)))));
              reg56 = $signed((^$unsigned(wire2)));
              reg57 <= (($unsigned(wire40) ?
                  (&forvar43) : $signed((7'h41))) <<< reg11[(4'hb):(1'h0)]);
            end
          for (forvar58 = (1'h0); (forvar58 < (2'h2)); forvar58 = (forvar58 + (1'h1)))
            begin
              reg59 <= (wire40[(3'h6):(1'h1)] & reg35[(1'h1):(1'h1)]);
              reg60 <= (~|$unsigned($signed(reg57)));
            end
          reg61 <= {$signed(wire4),
              {{reg45[(3'h4):(3'h4)], reg14},
                  {($signed(reg48) < $unsigned(reg17))}}};
          for (forvar62 = (1'h0); (forvar62 < (2'h3)); forvar62 = (forvar62 + (1'h1)))
            begin
              reg63 <= reg53[(1'h1):(1'h0)];
              reg64 <= (&($signed((8'ha9)) ? reg11[(3'h6):(1'h1)] : (8'ha5)));
              reg65 <= $unsigned(reg31[(5'h10):(1'h1)]);
              reg66 <= {((forvar62 ? forvar51 : $signed(reg14[(2'h3):(2'h2)])) ?
                      ((wire0[(2'h3):(1'h1)] >= $unsigned((8'ha5))) ?
                          {(reg14 ?
                                  wire4 : forvar46)} : reg50[(3'h6):(1'h0)]) : $signed($unsigned(reg22)))};
            end
        end
      reg67 = (~&(reg55[(1'h0):(1'h0)] ?
          $signed((8'ha2)) : $unsigned(($signed(reg31) ?
              $signed(wire1) : (wire4 - reg47)))));
      for (forvar68 = (1'h0); (forvar68 < (3'h4)); forvar68 = (forvar68 + (1'h1)))
        begin
          reg69 <= $unsigned(reg31);
        end
    end
  assign wire70 = reg54[(1'h0):(1'h0)];
  assign wire71 = $unsigned((($signed((wire3 ? reg15 : reg39)) ?
                      (8'ha0) : (~^(reg60 > reg63))) + wire0[(1'h1):(1'h1)]));
  assign wire72 = (-{reg57});
  assign wire73 = ((|reg64[(3'h4):(1'h0)]) >> (($signed((!reg61)) ?
                          $signed($signed((7'h40))) : ((reg17 <= wire4) > (reg60 & wire40))) ?
                      reg64[(4'hc):(4'hc)] : $signed($unsigned(reg14[(1'h0):(1'h0)]))));
  assign wire74 = ((^~(reg65[(4'hb):(4'h8)] ?
                          (~|$unsigned(reg45)) : $unsigned($signed(wire0)))) ?
                      (&reg60[(1'h0):(1'h0)]) : reg39[(3'h5):(3'h4)]);
  assign wire75 = $signed(($signed(((reg63 ?
                          reg63 : wire0) & (reg61 != wire3))) ?
                      {reg60} : $signed(wire4)));
  assign wire76 = $unsigned((wire70 != (+(~$signed(reg44)))));
endmodule