(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h76):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h10):(1'h0)] wire0;
  input wire [(5'h10):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire3;
  wire [(3'h7):(1'h0)] wire149;
  wire [(4'hb):(1'h0)] wire148;
  wire [(5'h13):(1'h0)] wire147;
  wire [(4'hc):(1'h0)] wire146;
  wire signed [(4'hf):(1'h0)] wire4;
  wire [(4'hf):(1'h0)] wire5;
  wire signed [(4'hd):(1'h0)] wire6;
  wire signed [(5'h11):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire144;
  assign y = {wire149,
                 wire148,
                 wire147,
                 wire146,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire144,
                 (1'h0)};
  assign wire4 = wire2[(1'h0):(1'h0)];
  assign wire5 = (|{$unsigned(((~^wire2) ?
                         (wire2 ? wire0 : (8'ha3)) : {wire4}))});
  assign wire6 = $unsigned((~|$signed(wire5[(4'hc):(4'hb)])));
  assign wire7 = wire1[(3'h6):(3'h5)];
  module8 #() modinst145 (.wire12(wire4), .wire10(wire2), .clk(clk), .y(wire144), .wire9(wire1), .wire11(wire0), .wire13(wire6));
  assign wire146 = $signed($unsigned($unsigned(((wire2 ? wire1 : wire2) ?
                       (wire0 == wire7) : wire1))));
  assign wire147 = wire2;
  assign wire148 = wire146[(3'h6):(1'h1)];
  assign wire149 = wire148[(4'hb):(2'h3)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param143 = (^(~{(+((8'hbd) ? (7'h44) : (8'haa))), (8'haf)})))
(y, clk, wire13, wire12, wire11, wire10, wire9);
  output wire [(32'h2cf):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hd):(1'h0)] wire13;
  input wire signed [(4'hf):(1'h0)] wire12;
  input wire [(5'h10):(1'h0)] wire11;
  input wire signed [(4'h9):(1'h0)] wire10;
  input wire signed [(5'h10):(1'h0)] wire9;
  wire signed [(4'hf):(1'h0)] wire142;
  wire [(4'ha):(1'h0)] wire141;
  wire [(4'hd):(1'h0)] wire139;
  wire [(5'h14):(1'h0)] wire66;
  wire [(5'h10):(1'h0)] wire65;
  wire signed [(3'h7):(1'h0)] wire64;
  wire signed [(4'h8):(1'h0)] wire63;
  wire signed [(3'h7):(1'h0)] wire62;
  wire [(3'h6):(1'h0)] wire61;
  wire [(5'h15):(1'h0)] wire60;
  wire [(3'h4):(1'h0)] wire59;
  wire signed [(4'ha):(1'h0)] wire58;
  wire [(3'h5):(1'h0)] wire56;
  reg signed [(2'h2):(1'h0)] reg115 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg114 = (1'h0);
  reg [(2'h2):(1'h0)] reg112 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg108 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg103 = (1'h0);
  reg [(3'h6):(1'h0)] reg100 = (1'h0);
  reg [(5'h11):(1'h0)] reg98 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg97 = (1'h0);
  reg [(5'h15):(1'h0)] reg95 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg92 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg91 = (1'h0);
  reg [(5'h14):(1'h0)] reg88 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg87 = (1'h0);
  reg [(3'h7):(1'h0)] reg85 = (1'h0);
  reg [(2'h2):(1'h0)] reg84 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg82 = (1'h0);
  reg [(3'h7):(1'h0)] reg80 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg79 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg77 = (1'h0);
  reg [(3'h7):(1'h0)] reg76 = (1'h0);
  reg [(5'h10):(1'h0)] reg74 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg73 = (1'h0);
  reg [(4'ha):(1'h0)] reg71 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg69 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg116 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg113 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg111 = (1'h0);
  reg [(4'hf):(1'h0)] forvar110 = (1'h0);
  reg [(3'h5):(1'h0)] reg109 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar107 = (1'h0);
  reg [(2'h3):(1'h0)] reg106 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar105 = (1'h0);
  reg [(2'h2):(1'h0)] reg104 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg102 = (1'h0);
  reg [(5'h12):(1'h0)] reg101 = (1'h0);
  reg [(3'h4):(1'h0)] forvar99 = (1'h0);
  reg [(5'h12):(1'h0)] reg96 = (1'h0);
  reg [(5'h15):(1'h0)] forvar94 = (1'h0);
  reg [(4'ha):(1'h0)] forvar93 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar90 = (1'h0);
  reg [(4'h8):(1'h0)] reg89 = (1'h0);
  reg [(4'hf):(1'h0)] forvar86 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg83 = (1'h0);
  reg [(3'h5):(1'h0)] forvar81 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg78 = (1'h0);
  reg [(3'h6):(1'h0)] forvar75 = (1'h0);
  reg signed [(4'he):(1'h0)] reg72 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg70 = (1'h0);
  reg [(4'hb):(1'h0)] forvar68 = (1'h0);
  reg [(4'he):(1'h0)] forvar67 = (1'h0);
  assign y = {wire142,
                 wire141,
                 wire139,
                 wire66,
                 wire65,
                 wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire56,
                 reg115,
                 reg114,
                 reg112,
                 reg108,
                 reg103,
                 reg100,
                 reg98,
                 reg97,
                 reg95,
                 reg92,
                 reg91,
                 reg88,
                 reg87,
                 reg85,
                 reg84,
                 reg82,
                 reg80,
                 reg79,
                 reg77,
                 reg76,
                 reg74,
                 reg73,
                 reg71,
                 reg69,
                 reg116,
                 reg113,
                 reg111,
                 forvar110,
                 reg109,
                 forvar107,
                 reg106,
                 forvar105,
                 reg104,
                 reg102,
                 reg101,
                 forvar99,
                 reg96,
                 forvar94,
                 forvar93,
                 forvar90,
                 reg89,
                 forvar86,
                 reg83,
                 forvar81,
                 reg78,
                 forvar75,
                 reg72,
                 reg70,
                 forvar68,
                 forvar67,
                 (1'h0)};
  module14 #() modinst57 (wire56, clk, wire12, wire13, wire10, wire9);
  assign wire58 = $unsigned($signed((~|wire13)));
  assign wire59 = wire10[(1'h0):(1'h0)];
  assign wire60 = $signed(wire13);
  assign wire61 = wire58[(4'ha):(3'h4)];
  assign wire62 = $unsigned($unsigned($unsigned($signed((wire11 && (8'ha2))))));
  assign wire63 = $unsigned(($signed((~|(wire10 ?
                      wire10 : wire56))) < ((wire61 & (wire12 ?
                          wire12 : wire59)) ?
                      {((8'hb2) - (8'ha9))} : $unsigned(((8'haf) != (7'h43))))));
  assign wire64 = $unsigned(((wire61[(2'h2):(1'h1)] ^~ wire58) ?
                      ((wire13 == (-wire9)) + {((8'had) ?
                              wire62 : wire58)}) : ($unsigned((^~wire58)) ?
                          (wire13 ?
                              wire61[(3'h6):(1'h1)] : (wire10 - (8'hb1))) : {{wire63,
                                  wire11},
                              (8'h9f)})));
  assign wire65 = $signed((wire60[(2'h3):(2'h2)] ?
                      $unsigned(((wire63 + wire64) & $signed(wire11))) : {$signed({wire11}),
                          $signed((~|wire56))}));
  assign wire66 = (~|(^wire61));
  always
    @(posedge clk) begin
      for (forvar67 = (1'h0); (forvar67 < (1'h1)); forvar67 = (forvar67 + (1'h1)))
        begin
          for (forvar68 = (1'h0); (forvar68 < (3'h4)); forvar68 = (forvar68 + (1'h1)))
            begin
              reg69 <= ((wire12[(1'h1):(1'h1)] ?
                  $unsigned(((wire64 == wire56) ?
                      wire10[(3'h4):(1'h0)] : {wire64,
                          wire62})) : (((wire10 + forvar68) ?
                          (~&wire10) : wire62[(2'h2):(1'h0)]) ?
                      (((8'h9d) ?
                          wire12 : wire58) >= (wire13 >= wire63)) : $signed((8'hba)))) == $unsigned(((wire63[(2'h2):(2'h2)] << (wire62 ?
                  wire12 : wire60)) <<< wire62[(3'h5):(1'h0)])));
              reg70 = wire63[(2'h2):(2'h2)];
              reg71 <= ($unsigned({wire58[(3'h6):(3'h5)], reg70}) ?
                  ({wire9[(3'h4):(3'h4)],
                      (!{wire58})} >>> $signed(($unsigned(wire13) ~^ $signed(wire65)))) : {($signed(forvar67[(4'h9):(3'h6)]) + wire62)});
              reg72 = wire62;
              reg73 <= ($signed($signed(((wire66 ?
                  reg70 : wire56) <<< wire12))) * $unsigned(((^$signed(wire61)) || (~^wire61))));
            end
          reg74 <= ($unsigned((wire10 <= wire58)) ?
              (((+forvar67[(2'h3):(1'h1)]) ^~ (+$unsigned(wire9))) + {$unsigned(reg70),
                  reg73[(3'h4):(2'h3)]}) : ({((forvar67 != (8'ha6)) * $signed(wire12)),
                      $signed((wire65 ? (8'ha1) : wire60))} ?
                  wire64[(3'h7):(1'h0)] : forvar67));
          for (forvar75 = (1'h0); (forvar75 < (1'h1)); forvar75 = (forvar75 + (1'h1)))
            begin
              reg76 <= $signed($unsigned(wire9));
              reg77 <= $unsigned(((((wire62 && wire13) >> (reg73 && forvar75)) ^~ (^~reg76)) << (+(&(wire65 ?
                  (8'ha4) : (8'hb4))))));
              reg78 = (8'hb5);
              reg79 <= ((wire61[(1'h1):(1'h0)] ?
                  $unsigned(($unsigned((8'hb1)) >>> $signed(reg72))) : ($unsigned($signed(wire62)) && reg72[(4'hb):(4'ha)])) ~^ ((reg70[(4'h8):(2'h3)] ?
                      {$signed(wire60)} : {(^~wire12), {forvar75}}) ?
                  ((|wire9) >= $signed(reg76)) : $signed(reg78[(2'h2):(2'h2)])));
            end
          reg80 <= reg78[(1'h0):(1'h0)];
        end
      for (forvar81 = (1'h0); (forvar81 < (2'h3)); forvar81 = (forvar81 + (1'h1)))
        begin
          if ((reg73[(3'h5):(2'h3)] + {$unsigned((^(wire56 ?
                  wire63 : wire58)))}))
            begin
              reg82 <= ({forvar67[(4'he):(4'hb)], forvar68[(3'h4):(3'h4)]} ?
                  (8'h9c) : wire10);
            end
          else
            begin
              reg82 <= $signed($signed((forvar75 <= (&(^~wire65)))));
              reg83 = ({$unsigned((^~((8'hb8) ? wire64 : reg74))),
                  ((~^$unsigned((8'ha7))) ?
                      (~$unsigned(wire61)) : (|$signed(wire59)))} | wire59);
              reg84 <= $signed(wire64);
              reg85 <= ($signed(reg83[(3'h5):(3'h5)]) < (~reg70[(5'h12):(4'ha)]));
            end
          for (forvar86 = (1'h0); (forvar86 < (3'h4)); forvar86 = (forvar86 + (1'h1)))
            begin
              reg87 <= wire64;
              reg88 <= reg84;
              reg89 = (+$unsigned((8'ha6)));
            end
          for (forvar90 = (1'h0); (forvar90 < (1'h1)); forvar90 = (forvar90 + (1'h1)))
            begin
              reg91 <= (~{((reg87[(1'h0):(1'h0)] ?
                          forvar67 : $unsigned(reg89)) ?
                      ($signed((8'h9c)) ?
                          {(8'hbf)} : (~|reg77)) : $unsigned(reg87))});
            end
          reg92 <= (reg91 || (|reg87));
        end
      for (forvar93 = (1'h0); (forvar93 < (1'h1)); forvar93 = (forvar93 + (1'h1)))
        begin
          for (forvar94 = (1'h0); (forvar94 < (1'h0)); forvar94 = (forvar94 + (1'h1)))
            begin
              reg95 <= $unsigned((($unsigned((~wire65)) + (^(reg69 ?
                      wire13 : wire11))) ?
                  $unsigned({(forvar81 ^ (8'ha3)),
                      wire11}) : $signed((wire63[(3'h7):(3'h6)] ?
                      (|(8'hba)) : $signed(wire10)))));
              reg96 = $signed((($unsigned(((8'hb5) ?
                  reg89 : reg69)) ^ reg71[(2'h3):(2'h2)]) || (forvar93[(3'h7):(2'h3)] ?
                  reg84 : {reg92})));
              reg97 <= forvar81[(1'h0):(1'h0)];
              reg98 <= (((^~reg73[(4'hc):(3'h7)]) ?
                      {reg92[(3'h6):(1'h0)]} : (!{(-wire10)})) ?
                  $unsigned(($signed((reg78 > wire13)) + (8'ha1))) : $unsigned($signed($signed($unsigned((8'hbf))))));
            end
          for (forvar99 = (1'h0); (forvar99 < (1'h1)); forvar99 = (forvar99 + (1'h1)))
            begin
              reg100 <= forvar86[(2'h3):(1'h0)];
              reg101 = ($signed(($unsigned($unsigned(forvar93)) != (wire60[(1'h1):(1'h1)] & (reg98 ?
                  forvar81 : reg95)))) <= (($unsigned(reg83) >= reg83) ?
                  $unsigned($signed($unsigned((8'ha4)))) : {((reg85 ~^ reg92) ?
                          $signed(forvar99) : ((8'h9c) || reg69)),
                      ((forvar93 >> forvar90) ?
                          (^reg85) : wire60[(2'h3):(1'h0)])}));
              reg102 = $signed($unsigned((~^$unsigned(reg89))));
              reg103 <= ($signed((wire12[(1'h1):(1'h1)] ?
                      wire9[(3'h7):(3'h6)] : wire12)) ?
                  (!reg78) : wire12[(3'h4):(3'h4)]);
              reg104 = reg97;
            end
        end
      for (forvar105 = (1'h0); (forvar105 < (1'h1)); forvar105 = (forvar105 + (1'h1)))
        begin
          reg106 = $signed(forvar93);
          for (forvar107 = (1'h0); (forvar107 < (1'h1)); forvar107 = (forvar107 + (1'h1)))
            begin
              reg108 <= forvar86[(4'h8):(3'h6)];
              reg109 = (forvar105[(4'h8):(1'h1)] ?
                  $unsigned((($unsigned((7'h42)) ?
                      wire61[(1'h1):(1'h0)] : (reg97 ?
                          wire62 : wire62)) == (!$unsigned((7'h42))))) : reg80[(3'h5):(3'h5)]);
            end
          for (forvar110 = (1'h0); (forvar110 < (1'h1)); forvar110 = (forvar110 + (1'h1)))
            begin
              reg111 = (~|forvar90[(4'he):(4'h8)]);
            end
          if ((forvar81 ? wire9[(5'h10):(4'ha)] : (!(!reg71))))
            begin
              reg112 <= $unsigned($unsigned($signed(((!reg88) != reg79[(1'h0):(1'h0)]))));
              reg113 = (-(^~($signed(reg85[(3'h7):(3'h4)]) & (reg92 ?
                  $signed((7'h40)) : wire56))));
              reg114 <= wire66[(3'h5):(2'h2)];
              reg115 <= (-({(8'ha7)} ?
                  ($signed({reg78}) <<< ($signed(reg92) ?
                      (^~reg112) : (|forvar105))) : reg113));
              reg116 = reg102;
            end
          else
            begin
              reg112 <= ({((((8'ha0) ? (7'h42) : wire13) > $unsigned((8'ha7))) ?
                      $signed($unsigned(reg97)) : wire12[(3'h7):(1'h0)])} & $unsigned((($unsigned((8'hb7)) ?
                      $signed(reg84) : (7'h44)) ?
                  ($signed(wire60) ?
                      ((7'h41) ?
                          wire64 : reg74) : $unsigned(reg97)) : reg116)));
              reg113 = reg97;
              reg114 <= {(^((reg95 >= $signed(forvar94)) << $unsigned({wire11})))};
            end
        end
    end
  module117 #() modinst140 (wire139, clk, wire59, reg98, wire65, reg88);
  assign wire141 = reg85;
  assign wire142 = reg84;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module117  (y, clk, wire121, wire120, wire119, wire118);
  output wire [(32'haa):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire121;
  input wire [(5'h11):(1'h0)] wire120;
  input wire signed [(4'hc):(1'h0)] wire119;
  input wire signed [(5'h14):(1'h0)] wire118;
  wire [(5'h11):(1'h0)] wire138;
  wire [(2'h2):(1'h0)] wire137;
  wire [(5'h13):(1'h0)] wire136;
  wire signed [(5'h13):(1'h0)] wire135;
  wire [(3'h7):(1'h0)] wire122;
  reg signed [(4'he):(1'h0)] reg133 = (1'h0);
  reg [(4'hd):(1'h0)] reg132 = (1'h0);
  reg [(4'h8):(1'h0)] reg127 = (1'h0);
  reg [(3'h4):(1'h0)] reg124 = (1'h0);
  reg [(3'h4):(1'h0)] reg134 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg131 = (1'h0);
  reg [(3'h6):(1'h0)] reg130 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg129 = (1'h0);
  reg [(4'hc):(1'h0)] forvar128 = (1'h0);
  reg [(3'h4):(1'h0)] reg126 = (1'h0);
  reg [(3'h4):(1'h0)] forvar125 = (1'h0);
  reg [(4'hd):(1'h0)] forvar123 = (1'h0);
  assign y = {wire138,
                 wire137,
                 wire136,
                 wire135,
                 wire122,
                 reg133,
                 reg132,
                 reg127,
                 reg124,
                 reg134,
                 reg131,
                 reg130,
                 reg129,
                 forvar128,
                 reg126,
                 forvar125,
                 forvar123,
                 (1'h0)};
  assign wire122 = ((8'hb2) < ($unsigned(wire121) ?
                       (wire119[(3'h7):(2'h2)] != wire118) : {((wire118 ?
                                   (7'h44) : wire118) ?
                               $unsigned(wire121) : (wire121 ?
                                   wire119 : wire120))}));
  always
    @(posedge clk) begin
      for (forvar123 = (1'h0); (forvar123 < (1'h0)); forvar123 = (forvar123 + (1'h1)))
        begin
          reg124 <= wire122;
          for (forvar125 = (1'h0); (forvar125 < (2'h2)); forvar125 = (forvar125 + (1'h1)))
            begin
              reg126 = ({$unsigned((wire122 >= (forvar125 ?
                      reg124 : forvar123))),
                  ($unsigned((wire122 ?
                      wire121 : forvar123)) ~^ wire119)} >= $signed((^~(~^(^forvar125)))));
              reg127 <= $signed(wire119);
            end
          for (forvar128 = (1'h0); (forvar128 < (3'h4)); forvar128 = (forvar128 + (1'h1)))
            begin
              reg129 = wire119;
              reg130 = wire120;
              reg131 = $unsigned((($unsigned(wire119) ?
                  wire121[(3'h4):(2'h2)] : {forvar123}) >>> reg130));
              reg132 <= (^~forvar123);
            end
          reg133 <= (^($unsigned(($unsigned((8'haa)) & reg127)) >> forvar123));
          reg134 = ($signed({reg126,
              ((forvar125 ?
                  forvar128 : (8'hbb)) && wire122)}) >= ({forvar123[(4'hd):(2'h3)]} ?
              $signed((~|(&reg131))) : $unsigned(((reg131 <<< wire120) & (reg133 ^~ (8'hb0))))));
        end
    end
  assign wire135 = (8'ha4);
  assign wire136 = wire118;
  assign wire137 = (7'h43);
  assign wire138 = $signed($unsigned(($unsigned(wire121) ?
                       wire120[(5'h11):(5'h11)] : (^(reg132 ?
                           wire135 : reg127)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h1a7):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hf):(1'h0)] wire18;
  input wire signed [(4'hd):(1'h0)] wire17;
  input wire [(2'h2):(1'h0)] wire16;
  input wire signed [(5'h10):(1'h0)] wire15;
  wire [(4'ha):(1'h0)] wire55;
  wire signed [(4'hd):(1'h0)] wire54;
  wire signed [(5'h10):(1'h0)] wire53;
  wire signed [(5'h11):(1'h0)] wire52;
  wire signed [(4'hf):(1'h0)] wire51;
  wire signed [(5'h11):(1'h0)] wire50;
  wire [(4'h8):(1'h0)] wire49;
  wire [(4'hd):(1'h0)] wire48;
  wire [(4'ha):(1'h0)] wire37;
  wire signed [(5'h15):(1'h0)] wire20;
  wire signed [(4'h9):(1'h0)] wire19;
  reg signed [(5'h11):(1'h0)] reg47 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg45 = (1'h0);
  reg [(2'h2):(1'h0)] reg43 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg42 = (1'h0);
  reg [(4'h8):(1'h0)] reg39 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg35 = (1'h0);
  reg [(5'h11):(1'h0)] reg27 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg22 = (1'h0);
  reg [(2'h3):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg44 = (1'h0);
  reg [(3'h7):(1'h0)] reg41 = (1'h0);
  reg [(4'he):(1'h0)] reg40 = (1'h0);
  reg [(5'h12):(1'h0)] forvar38 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg36 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar33 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg32 = (1'h0);
  reg [(5'h11):(1'h0)] reg31 = (1'h0);
  reg [(3'h5):(1'h0)] reg30 = (1'h0);
  reg [(2'h2):(1'h0)] forvar29 = (1'h0);
  reg [(5'h11):(1'h0)] forvar28 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg26 = (1'h0);
  reg [(4'hf):(1'h0)] forvar25 = (1'h0);
  reg [(4'ha):(1'h0)] forvar24 = (1'h0);
  assign y = {wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire37,
                 wire20,
                 wire19,
                 reg47,
                 reg45,
                 reg43,
                 reg42,
                 reg39,
                 reg35,
                 reg27,
                 reg23,
                 reg22,
                 reg21,
                 reg46,
                 reg44,
                 reg41,
                 reg40,
                 forvar38,
                 reg36,
                 reg34,
                 forvar33,
                 reg32,
                 reg31,
                 reg30,
                 forvar29,
                 forvar28,
                 reg26,
                 forvar25,
                 forvar24,
                 (1'h0)};
  assign wire19 = wire17[(1'h1):(1'h0)];
  assign wire20 = ($unsigned($unsigned(($signed(wire17) >= wire19))) ^ (8'hb7));
  always
    @(posedge clk) begin
      reg21 <= (wire18 ?
          (+$unsigned((!$signed(wire16)))) : (($unsigned((~&wire17)) + $unsigned(wire19[(2'h2):(1'h1)])) & wire20[(3'h6):(3'h5)]));
      reg22 <= $unsigned($unsigned(wire16));
      reg23 <= $unsigned(wire15[(4'hc):(3'h6)]);
      for (forvar24 = (1'h0); (forvar24 < (2'h2)); forvar24 = (forvar24 + (1'h1)))
        begin
          for (forvar25 = (1'h0); (forvar25 < (1'h0)); forvar25 = (forvar25 + (1'h1)))
            begin
              reg26 = (~&(wire16 ?
                  $unsigned(((forvar24 | forvar24) > (^~wire18))) : (8'ha2)));
              reg27 <= {forvar25, $unsigned(wire16[(2'h2):(1'h1)])};
            end
        end
      for (forvar28 = (1'h0); (forvar28 < (2'h3)); forvar28 = (forvar28 + (1'h1)))
        begin
          for (forvar29 = (1'h0); (forvar29 < (2'h3)); forvar29 = (forvar29 + (1'h1)))
            begin
              reg30 = (+($signed(forvar25) <<< ($signed((8'hbd)) < wire18)));
              reg31 = (8'hb0);
              reg32 = (reg31 ?
                  wire19[(3'h6):(3'h6)] : (wire18[(4'hc):(2'h2)] ?
                      reg27[(4'h9):(2'h3)] : ($unsigned(reg30[(2'h3):(2'h3)]) << (^(wire20 + (8'ha3))))));
            end
          for (forvar33 = (1'h0); (forvar33 < (2'h3)); forvar33 = (forvar33 + (1'h1)))
            begin
              reg34 = wire17;
              reg35 <= $unsigned((^~(wire20 ?
                  (reg23[(1'h0):(1'h0)] ?
                      $signed(reg34) : ((7'h42) ?
                          (8'hba) : forvar24)) : ((~&reg27) ?
                      reg22 : $unsigned(reg21)))));
            end
        end
    end
  always
    @(posedge clk) begin
      reg36 = reg21;
    end
  assign wire37 = $signed($unsigned($unsigned($unsigned(reg22[(4'h9):(1'h0)]))));
  always
    @(posedge clk) begin
      for (forvar38 = (1'h0); (forvar38 < (2'h2)); forvar38 = (forvar38 + (1'h1)))
        begin
          if ($unsigned((~^(((forvar38 >> reg27) >>> $unsigned(wire18)) == (&wire16[(1'h1):(1'h0)])))))
            begin
              reg39 <= (wire19 == (reg27[(4'hf):(2'h3)] ?
                  ((+$signed(wire19)) ?
                      $unsigned(wire19) : $signed({wire16,
                          (8'ha6)})) : (((~wire15) > reg21) <<< $signed($unsigned((8'hbc))))));
              reg40 = $signed($unsigned((~wire19)));
              reg41 = (+(-($unsigned(reg21) != $unsigned(reg35))));
              reg42 <= (wire19 ? (8'ha6) : reg22[(3'h5):(3'h5)]);
              reg43 <= ((($unsigned((wire20 ? wire16 : wire16)) ?
                      (reg21[(2'h2):(1'h0)] >>> (reg22 >> wire15)) : $unsigned($unsigned(wire15))) ?
                  $signed(reg23) : reg40[(4'hb):(4'hb)]) - (~&((-wire20[(5'h10):(4'hf)]) ?
                  $unsigned(forvar38[(5'h12):(3'h7)]) : ((!reg35) || {reg23}))));
            end
          else
            begin
              reg39 <= $unsigned(wire15[(4'hb):(2'h2)]);
              reg42 <= $signed($signed($unsigned((~^$signed(reg40)))));
              reg44 = wire16;
              reg45 <= reg22;
              reg46 = {reg39,
                  (reg45 ?
                      $unsigned(wire18) : ((~^$signed(wire17)) * ((reg41 || reg41) ?
                          reg43[(2'h2):(1'h0)] : reg40[(4'h8):(2'h3)])))};
            end
        end
      reg47 <= (wire18 >> $signed($signed($signed(reg21))));
    end
  assign wire48 = $unsigned(reg47[(2'h2):(1'h1)]);
  assign wire49 = (-(reg22 <= $signed(reg47[(2'h2):(2'h2)])));
  assign wire50 = ($unsigned((~$signed((+reg21)))) || $unsigned($unsigned((reg21[(2'h3):(1'h0)] ?
                      $signed(reg42) : (&(8'h9e))))));
  assign wire51 = wire20[(5'h11):(5'h10)];
  assign wire52 = {(((7'h44) ?
                          {wire37,
                              wire20} : wire18[(4'h9):(2'h2)]) - $signed(reg43[(1'h1):(1'h0)])),
                      ({((&reg27) ? (wire15 ? (8'hb2) : wire20) : reg22),
                              (^~$signed(reg21))} ?
                          $signed(((~&wire48) ? {wire50} : (8'ha9))) : reg27)};
  assign wire53 = {(wire19[(1'h1):(1'h1)] || reg45),
                      $unsigned($unsigned(reg45))};
  assign wire54 = $unsigned((^~(wire48 ^~ $signed($unsigned(wire49)))));
  assign wire55 = {(($unsigned($unsigned(wire53)) <<< wire37) == wire51),
                      (~^(wire50 - (^(^~wire17))))};
endmodule