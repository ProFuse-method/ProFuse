(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h64):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire0;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire3;
  wire [(4'hb):(1'h0)] wire63;
  wire [(3'h7):(1'h0)] wire61;
  wire signed [(4'h9):(1'h0)] wire65;
  wire [(4'ha):(1'h0)] wire69;
  wire signed [(3'h5):(1'h0)] wire70;
  wire signed [(4'ha):(1'h0)] wire71;
  wire [(4'h8):(1'h0)] wire72;
  reg [(4'ha):(1'h0)] reg4 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg66 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg67 = (1'h0);
  reg [(4'ha):(1'h0)] reg68 = (1'h0);
  assign y = {wire63,
                 wire61,
                 wire65,
                 wire69,
                 wire70,
                 wire71,
                 wire72,
                 reg4,
                 reg66,
                 reg67,
                 reg68,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= (~($unsigned((wire3 > (8'had))) ^ $unsigned((wire3 ?
          wire1 : (8'ha6)))));
    end
  module5 #() modinst62 (wire61, clk, wire3, reg4, wire2, wire0);
  module45 #() modinst64 (.wire46(wire2), .y(wire63), .clk(clk), .wire48(wire1), .wire49(reg4), .wire47(wire3));
  assign wire65 = {$unsigned(wire1)};
  always
    @(posedge clk) begin
      reg66 <= (~((^$signed((8'ha9))) ?
          $unsigned(wire65[(4'h9):(3'h4)]) : (reg4[(2'h3):(2'h3)] & wire0)));
    end
  always
    @(posedge clk) begin
      reg67 <= ((!{(wire61 & (8'ha8))}) ? reg4 : $unsigned(wire2));
      reg68 <= wire63[(2'h3):(1'h1)];
    end
  assign wire69 = ($unsigned({(8'ha4)}) ?
                      wire3[(1'h0):(1'h0)] : reg4[(3'h5):(1'h1)]);
  assign wire70 = ($signed($unsigned((~^wire61))) >> reg68);
  assign wire71 = ($signed(((&wire70) >> (^~reg67))) >>> wire65);
  module45 #() modinst73 (wire72, clk, reg4, wire63, wire65, wire70);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire6, wire7, wire8, wire9);
  output wire [(32'h7b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire6;
  input wire [(3'h5):(1'h0)] wire7;
  input wire signed [(3'h5):(1'h0)] wire8;
  input wire [(3'h7):(1'h0)] wire9;
  wire [(3'h6):(1'h0)] wire10;
  wire [(4'ha):(1'h0)] wire11;
  wire signed [(2'h3):(1'h0)] wire17;
  wire [(4'ha):(1'h0)] wire39;
  wire [(4'hb):(1'h0)] wire44;
  wire [(4'ha):(1'h0)] wire57;
  wire signed [(3'h6):(1'h0)] wire59;
  reg [(3'h7):(1'h0)] reg12 = (1'h0);
  reg [(3'h5):(1'h0)] reg13 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg14 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg15 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg16 = (1'h0);
  reg [(4'hb):(1'h0)] reg41 = (1'h0);
  reg [(4'h8):(1'h0)] reg42 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg43 = (1'h0);
  assign y = {wire10,
                 wire11,
                 wire17,
                 wire39,
                 wire44,
                 wire57,
                 wire59,
                 reg12,
                 reg13,
                 reg14,
                 reg15,
                 reg16,
                 reg41,
                 reg42,
                 reg43,
                 (1'h0)};
  assign wire10 = {($signed(wire9[(3'h6):(1'h1)]) << ((wire8 && (8'ha6)) ?
                          $unsigned(wire7) : (~|wire6)))};
  assign wire11 = $signed((wire7[(1'h1):(1'h0)] ?
                      (&(wire8 ?
                          wire7 : (8'ha9))) : (wire9[(3'h4):(1'h1)] > wire8[(3'h5):(1'h0)])));
  always
    @(posedge clk) begin
      reg12 <= $signed({$signed((|wire10))});
    end
  always
    @(posedge clk) begin
      reg13 <= wire7[(3'h5):(1'h1)];
      if ((reg13[(1'h0):(1'h0)] > wire8[(3'h5):(1'h1)]))
        begin
          reg14 <= (~|wire6);
          if (((~|((wire9 && reg14) ? wire9 : $unsigned(reg12))) ?
              $signed((+(8'hb0))) : wire8[(2'h2):(1'h0)]))
            begin
              reg15 <= ((((reg14 >>> reg13) ?
                          (wire8 ? reg13 : wire8) : wire10) ?
                      {(wire7 ? wire9 : wire10)} : reg13[(2'h3):(1'h0)]) ?
                  ({$signed(wire7)} ?
                      (+wire11[(2'h3):(2'h2)]) : wire8[(1'h1):(1'h1)]) : (^~(wire9 ?
                      (~|reg14) : reg12)));
            end
          else
            begin
              reg15 <= (reg12 != $signed(({reg13} <= wire9)));
              reg16 <= ($signed($unsigned($unsigned((8'h9e)))) ?
                  reg15 : ({(wire8 ? reg13 : wire11)} ?
                      $signed((reg12 ?
                          wire6 : wire11)) : $unsigned((~^wire10))));
            end
        end
      else
        begin
          reg14 <= wire9[(3'h4):(2'h2)];
        end
    end
  assign wire17 = $unsigned($unsigned((8'hb0)));
  module18 #() modinst40 (.wire20(wire6), .y(wire39), .wire21(wire11), .wire22(reg15), .wire19(reg13), .clk(clk));
  always
    @(posedge clk) begin
      reg41 <= $unsigned($unsigned(reg14[(1'h0):(1'h0)]));
      reg42 <= $unsigned((^~(8'haa)));
      reg43 <= ($signed((!wire39)) ?
          (+($signed(wire6) >>> wire8)) : $signed(wire10[(2'h2):(1'h1)]));
    end
  assign wire44 = $unsigned((|((reg43 ^~ wire6) < reg43[(1'h1):(1'h1)])));
  module45 #() modinst58 (.wire47(wire10), .y(wire57), .wire46(wire7), .wire49(wire44), .clk(clk), .wire48(wire6));
  module18 #() modinst60 (wire59, clk, wire44, wire57, reg43, wire8);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module45  (y, clk, wire49, wire48, wire47, wire46);
  output wire [(32'h29):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire49;
  input wire [(4'hb):(1'h0)] wire48;
  input wire [(3'h6):(1'h0)] wire47;
  input wire signed [(3'h5):(1'h0)] wire46;
  wire [(4'ha):(1'h0)] wire56;
  wire [(4'h8):(1'h0)] wire55;
  wire signed [(3'h7):(1'h0)] wire54;
  wire signed [(3'h5):(1'h0)] wire53;
  wire signed [(3'h5):(1'h0)] wire52;
  wire [(2'h3):(1'h0)] wire51;
  wire [(2'h2):(1'h0)] wire50;
  assign y = {wire56, wire55, wire54, wire53, wire52, wire51, wire50, (1'h0)};
  assign wire50 = $signed((~^wire47));
  assign wire51 = (wire49 ?
                      ({$unsigned(wire48)} ?
                          {(wire47 & wire49)} : wire47) : ((~^wire47[(3'h5):(3'h4)]) ?
                          ({(8'had)} ^ $unsigned((8'haa))) : ((wire50 ?
                              wire46 : wire46) ^ $signed(wire49))));
  assign wire52 = wire50;
  assign wire53 = $signed($signed(($signed(wire46) ?
                      (8'ha9) : (wire48 >>> (8'hb0)))));
  assign wire54 = $unsigned(($signed(wire47) < ((&(8'h9d)) ?
                      wire53[(2'h2):(1'h0)] : $unsigned(wire53))));
  assign wire55 = ($signed($unsigned((wire47 ?
                      wire47 : wire53))) + (|(wire50 >>> (8'h9e))));
  assign wire56 = (($signed(wire55) < wire51[(2'h3):(2'h3)]) | wire51);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18  (y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h63):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire22;
  input wire [(4'ha):(1'h0)] wire21;
  input wire [(4'hb):(1'h0)] wire20;
  input wire signed [(2'h3):(1'h0)] wire19;
  wire signed [(4'h9):(1'h0)] wire38;
  wire [(2'h2):(1'h0)] wire37;
  wire signed [(2'h2):(1'h0)] wire36;
  wire signed [(4'ha):(1'h0)] wire35;
  wire signed [(4'h9):(1'h0)] wire34;
  wire [(4'ha):(1'h0)] wire33;
  wire signed [(3'h7):(1'h0)] wire32;
  wire [(3'h6):(1'h0)] wire24;
  wire signed [(3'h5):(1'h0)] wire23;
  reg signed [(3'h7):(1'h0)] reg31 = (1'h0);
  reg [(3'h4):(1'h0)] reg30 = (1'h0);
  reg [(2'h3):(1'h0)] reg29 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg28 = (1'h0);
  reg [(3'h7):(1'h0)] reg27 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg25 = (1'h0);
  assign y = {wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire24,
                 wire23,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 (1'h0)};
  assign wire23 = ({wire21[(2'h3):(1'h1)]} - (((&wire22) == (wire20 ?
                      wire22 : wire22)) + wire21[(1'h1):(1'h1)]));
  assign wire24 = wire23;
  always
    @(posedge clk) begin
      if ($unsigned((~wire21)))
        begin
          reg25 <= ({((^(8'ha7)) ?
                      wire19[(2'h3):(2'h2)] : (wire23 << wire21))} ?
              (~^$unsigned(wire23)) : (8'ha9));
        end
      else
        begin
          if ((8'h9f))
            begin
              reg25 <= $unsigned((({(8'hb0)} || (-wire20)) - wire19[(1'h0):(1'h0)]));
              reg26 <= $unsigned($unsigned(((reg25 <= wire21) != wire24)));
              reg27 <= $unsigned(((~|(!wire19)) ?
                  ($unsigned(wire22) ?
                      (8'ha5) : (|reg25)) : $signed($unsigned(wire24))));
            end
          else
            begin
              reg25 <= wire20[(3'h5):(3'h4)];
              reg26 <= $signed($signed(((wire19 ?
                  reg26 : reg25) >>> (+reg25))));
            end
          reg28 <= (+(!(reg27 ? (~^wire23) : reg25)));
          reg29 <= (wire19[(1'h0):(1'h0)] ?
              ($unsigned($signed(wire19)) != reg26) : $unsigned($unsigned($unsigned(wire24))));
        end
      if ((^~($unsigned($unsigned((8'ha2))) >= ((wire19 ? wire23 : wire21) ?
          $unsigned(reg27) : {wire23}))))
        begin
          reg30 <= (~^$signed(wire20[(3'h5):(2'h3)]));
          reg31 <= (reg27 == (8'h9c));
        end
      else
        begin
          reg30 <= ($signed((8'ha0)) && $unsigned(reg31));
        end
    end
  assign wire32 = $signed($unsigned(reg28[(2'h2):(1'h0)]));
  assign wire33 = wire19[(1'h1):(1'h0)];
  assign wire34 = (!(8'h9d));
  assign wire35 = ((((reg27 ^ reg26) ?
                          {(8'h9d)} : (reg25 << wire19)) * wire19[(2'h2):(1'h0)]) ?
                      wire22 : reg31);
  assign wire36 = $signed($unsigned(((wire32 ?
                      wire22 : wire19) - $unsigned(reg26))));
  assign wire37 = wire24;
  assign wire38 = wire36;
endmodule