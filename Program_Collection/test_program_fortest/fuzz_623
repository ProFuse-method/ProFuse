(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param58 = {(+(~|((8'hac) ? (8'had) : (8'haa))))})
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire0;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire3;
  wire signed [(2'h2):(1'h0)] wire52;
  wire [(3'h4):(1'h0)] wire51;
  wire signed [(2'h3):(1'h0)] wire50;
  wire signed [(3'h7):(1'h0)] wire49;
  wire signed [(3'h6):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire4;
  wire signed [(4'ha):(1'h0)] wire5;
  wire [(2'h3):(1'h0)] wire7;
  wire signed [(4'ha):(1'h0)] wire46;
  reg [(3'h5):(1'h0)] reg57 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg56 = (1'h0);
  reg [(2'h3):(1'h0)] reg55 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg54 = (1'h0);
  reg [(4'h9):(1'h0)] reg53 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg6 = (1'h0);
  assign y = {wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire4,
                 wire5,
                 wire7,
                 wire46,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg6,
                 (1'h0)};
  assign wire4 = {((wire3 ? (wire0 - wire2) : (wire2 ^ wire3)) ?
                         $signed($signed(wire2)) : ((wire2 ? wire2 : wire3) ?
                             (wire2 | wire3) : ((8'ha1) <<< wire2)))};
  assign wire5 = ((!($signed(wire3) ? {wire3} : {(8'had)})) ?
                     {wire4} : ((~^wire3) ? $signed($unsigned(wire3)) : wire2));
  always
    @(posedge clk) begin
      reg6 <= (wire4 ?
          $unsigned((~^$signed(wire4))) : $signed($unsigned({wire2})));
    end
  assign wire7 = ((|((~^wire1) << (wire2 - reg6))) ?
                     {reg6} : ($signed($unsigned(wire1)) ?
                         {reg6} : (~&{wire2})));
  module8 #() modinst47 (.wire9(reg6), .wire11(wire4), .wire12(wire5), .wire10(wire2), .clk(clk), .y(wire46));
  assign wire48 = $signed(reg6);
  assign wire49 = (reg6[(2'h2):(1'h1)] ^ (|wire2));
  assign wire50 = wire4;
  assign wire51 = ({((wire50 ?
                          wire7 : wire48) == {wire50})} >>> {wire1[(1'h1):(1'h0)]});
  assign wire52 = (wire51[(3'h4):(1'h0)] ?
                      $unsigned(wire5[(3'h6):(3'h6)]) : ((8'haa) ?
                          (((8'haa) ^~ (8'haa)) | (wire48 || reg6)) : ((&(8'ha6)) == ((8'hb0) ?
                              wire5 : wire46))));
  always
    @(posedge clk) begin
      if ($unsigned($unsigned($signed((|wire4)))))
        begin
          if ($unsigned((((|(8'haf)) | ((8'h9d) > wire49)) ?
              ($signed(wire46) & wire46[(1'h1):(1'h0)]) : $unsigned(wire46))))
            begin
              reg53 <= (wire4[(4'hb):(1'h1)] ?
                  ((wire3 <<< $unsigned(wire7)) ?
                      ((wire51 ?
                          wire7 : wire49) && (wire3 + wire49)) : {wire51[(2'h2):(2'h2)]}) : wire3);
              reg54 <= ({(~&(~&wire2))} ?
                  (wire5[(1'h1):(1'h1)] ?
                      ($signed(wire48) ?
                          wire1[(1'h1):(1'h1)] : reg6[(1'h1):(1'h0)]) : $signed({(8'h9f)})) : wire2);
            end
          else
            begin
              reg53 <= $signed(wire50[(1'h0):(1'h0)]);
              reg54 <= wire5[(3'h4):(2'h3)];
              reg55 <= wire4;
            end
        end
      else
        begin
          reg53 <= (!((wire4 ? wire52[(2'h2):(1'h0)] : $unsigned(wire51)) ?
              ((&reg55) ? $unsigned((8'ha1)) : wire49) : (wire7 ?
                  (wire0 | wire46) : $unsigned(wire48))));
          reg54 <= wire50;
          reg55 <= $signed(((wire46 != {wire1}) ?
              (reg6[(4'ha):(4'h8)] ?
                  $unsigned(wire51) : $signed((8'haf))) : wire51));
        end
      reg56 <= wire2[(4'ha):(4'ha)];
      reg57 <= (-(~|(~&$signed(wire3))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire12;
  input wire [(3'h6):(1'h0)] wire11;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire [(4'ha):(1'h0)] wire9;
  wire [(2'h2):(1'h0)] wire44;
  wire signed [(2'h3):(1'h0)] wire20;
  wire [(3'h7):(1'h0)] wire19;
  wire signed [(4'ha):(1'h0)] wire14;
  wire signed [(2'h2):(1'h0)] wire13;
  reg signed [(2'h3):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg23 = (1'h0);
  reg [(4'ha):(1'h0)] reg22 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg18 = (1'h0);
  reg [(2'h2):(1'h0)] reg17 = (1'h0);
  reg [(4'ha):(1'h0)] reg16 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg15 = (1'h0);
  assign y = {wire44,
                 wire20,
                 wire19,
                 wire14,
                 wire13,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 (1'h0)};
  assign wire13 = (wire12[(2'h2):(1'h1)] ? wire12 : {$unsigned((~wire11))});
  assign wire14 = (wire13 > {wire13});
  always
    @(posedge clk) begin
      reg15 <= (|wire11);
      if (wire11)
        begin
          reg16 <= $unsigned({((|wire12) || $signed((8'hae)))});
          reg17 <= $unsigned(($signed((reg16 || reg15)) ?
              $unsigned((wire11 && wire9)) : wire9[(4'h9):(3'h5)]));
          reg18 <= wire10;
        end
      else
        begin
          reg16 <= (^(((&reg15) ?
              $unsigned((8'ha4)) : $unsigned(wire10)) | wire12));
          reg17 <= reg16;
          reg18 <= wire9;
        end
    end
  assign wire19 = $signed($signed((wire9[(3'h6):(1'h1)] != $signed(wire9))));
  assign wire20 = (($unsigned({reg17}) & {wire9[(3'h6):(1'h1)]}) ?
                      ((8'h9d) ?
                          (&(wire10 ?
                              wire12 : reg17)) : reg18[(1'h1):(1'h0)]) : (($signed(wire14) ?
                              {wire9} : (8'ha3)) ?
                          $signed($signed(wire9)) : (~^(wire13 ?
                              reg18 : wire19))));
  always
    @(posedge clk) begin
      reg21 <= (!($signed({wire13}) ? reg18 : wire11));
      if (((|(~&{wire10})) >> $signed((reg18[(2'h3):(1'h1)] ?
          $signed(wire13) : $unsigned(wire19)))))
        begin
          reg22 <= $unsigned(wire10);
          reg23 <= wire12;
          reg24 <= wire11[(1'h0):(1'h0)];
        end
      else
        begin
          reg22 <= {$signed($unsigned($signed((8'ha0))))};
        end
    end
  module25 #() modinst45 (wire44, clk, reg16, reg22, reg21, reg24);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25  (y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h64):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire29;
  input wire [(4'ha):(1'h0)] wire28;
  input wire [(4'h9):(1'h0)] wire27;
  input wire signed [(2'h3):(1'h0)] wire26;
  wire [(4'h8):(1'h0)] wire40;
  wire [(4'h8):(1'h0)] wire39;
  wire signed [(3'h6):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire37;
  wire signed [(4'h8):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire35;
  wire signed [(4'hb):(1'h0)] wire34;
  wire [(2'h2):(1'h0)] wire33;
  wire [(2'h2):(1'h0)] wire32;
  wire [(4'ha):(1'h0)] wire31;
  wire [(4'h8):(1'h0)] wire30;
  reg [(3'h6):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg42 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg41 = (1'h0);
  assign y = {wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 reg43,
                 reg42,
                 reg41,
                 (1'h0)};
  assign wire30 = $signed((^~wire29));
  assign wire31 = wire30[(3'h6):(1'h1)];
  assign wire32 = $unsigned(wire28[(2'h3):(1'h1)]);
  assign wire33 = wire31;
  assign wire34 = ($signed((~^(wire27 + wire33))) - wire28[(4'ha):(1'h1)]);
  assign wire35 = $signed(($signed($unsigned(wire33)) >= ($signed((8'haf)) == $unsigned(wire31))));
  assign wire36 = ($unsigned($unsigned((8'ha3))) ?
                      $signed(wire30[(2'h2):(1'h0)]) : $unsigned(wire26));
  assign wire37 = $signed((((wire35 >>> (8'ha1)) ?
                      (wire26 | wire29) : wire35[(3'h4):(1'h1)]) ^ (~|(wire31 ?
                      (8'ha2) : wire30))));
  assign wire38 = wire35;
  assign wire39 = (wire35[(2'h2):(1'h0)] ?
                      $signed(wire28[(2'h2):(1'h1)]) : (((-wire30) ?
                              $unsigned(wire27) : (wire26 >>> wire26)) ?
                          ({wire31} >= (^~wire30)) : (!wire37[(1'h0):(1'h0)])));
  assign wire40 = {$signed({((8'hac) ? wire34 : wire39)})};
  always
    @(posedge clk) begin
      reg41 <= $unsigned(wire32);
      reg42 <= (({(wire31 <<< wire31)} == {(wire32 ? wire30 : wire39)}) ?
          reg41[(1'h0):(1'h0)] : ($unsigned((wire36 ? wire37 : wire29)) ?
              (~&(wire26 << (8'h9d))) : $unsigned((wire39 ?
                  wire28 : (8'ha8)))));
      reg43 <= wire38[(3'h6):(1'h0)];
    end
endmodule