(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire67;
  wire signed [(4'hb):(1'h0)] wire66;
  wire signed [(4'h9):(1'h0)] wire64;
  wire [(4'h8):(1'h0)] wire63;
  wire [(4'h8):(1'h0)] wire62;
  wire [(2'h3):(1'h0)] wire60;
  wire [(3'h6):(1'h0)] wire59;
  wire signed [(4'h8):(1'h0)] wire58;
  wire [(3'h7):(1'h0)] wire56;
  wire [(3'h5):(1'h0)] wire7;
  wire [(4'h9):(1'h0)] wire5;
  wire [(3'h7):(1'h0)] wire4;
  reg [(4'h8):(1'h0)] reg6 = (1'h0);
  assign y = {wire67,
                 wire66,
                 wire64,
                 wire63,
                 wire62,
                 wire60,
                 wire59,
                 wire58,
                 wire56,
                 wire7,
                 wire5,
                 wire4,
                 reg6,
                 (1'h0)};
  assign wire4 = ((((8'ha4) ? (wire0 ? wire0 : wire0) : $unsigned(wire1)) ?
                     $signed($signed((8'haf))) : ({wire2} ?
                         (&wire1) : wire0[(1'h0):(1'h0)])) >> (wire1[(3'h4):(1'h1)] + (wire2[(1'h1):(1'h0)] ?
                     (wire3 <= wire2) : wire2)));
  assign wire5 = ({wire2} ?
                     ((wire2 ?
                             ((8'haa) ? wire4 : wire2) : (wire0 ?
                                 wire3 : (8'ha9))) ?
                         (wire3 ?
                             ((8'hb0) ~^ wire0) : (^wire0)) : (((8'hae) < wire0) ?
                             (wire2 ?
                                 wire1 : wire2) : (~^wire0))) : (wire0[(1'h1):(1'h1)] ?
                         {wire3} : ((wire3 ? wire1 : wire4) >= (~wire4))));
  always
    @(posedge clk) begin
      reg6 <= wire0[(2'h2):(2'h2)];
    end
  assign wire7 = ((wire3 ?
                     ({wire3} ?
                         (wire4 >= wire0) : wire0) : $signed(wire0[(1'h1):(1'h1)])) > $unsigned($unsigned((wire4 ?
                     wire0 : (8'h9f)))));
  module8 #() modinst57 (.clk(clk), .wire12(wire5), .wire9(wire1), .wire10(wire0), .wire11(wire2), .y(wire56));
  assign wire58 = (-(wire3[(2'h3):(1'h0)] ? wire1 : {$signed((8'hac))}));
  assign wire59 = ($unsigned($signed((wire5 ?
                      wire2 : wire1))) != ($signed((wire2 >> wire3)) << wire5));
  module8 #() modinst61 (.wire12(wire56), .clk(clk), .wire11(wire58), .y(wire60), .wire9(wire59), .wire10(wire1));
  assign wire62 = $unsigned(wire5);
  assign wire63 = $signed((wire4[(2'h2):(2'h2)] ?
                      ($unsigned(wire59) <<< $unsigned(wire7)) : {$unsigned(wire59)}));
  module38 #() modinst65 (wire64, clk, wire56, wire62, wire1, wire60);
  assign wire66 = wire7[(3'h5):(2'h3)];
  assign wire67 = wire7;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire9, wire10, wire11, wire12);
  output wire [(32'h54):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire10;
  input wire [(4'h8):(1'h0)] wire11;
  input wire signed [(3'h4):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire55;
  wire signed [(4'h8):(1'h0)] wire53;
  wire [(4'h9):(1'h0)] wire37;
  wire signed [(2'h3):(1'h0)] wire36;
  wire signed [(4'hb):(1'h0)] wire35;
  wire [(4'ha):(1'h0)] wire34;
  wire signed [(4'ha):(1'h0)] wire33;
  wire signed [(4'ha):(1'h0)] wire31;
  reg [(4'h8):(1'h0)] reg13 = (1'h0);
  reg [(4'ha):(1'h0)] reg14 = (1'h0);
  assign y = {wire55,
                 wire53,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire33,
                 wire31,
                 reg13,
                 reg14,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg13 <= $unsigned(wire12[(1'h0):(1'h0)]);
      reg14 <= (reg13[(3'h4):(1'h0)] >= $unsigned((~^wire12)));
    end
  module15 #() modinst32 (.wire19(reg14), .y(wire31), .clk(clk), .wire17(wire9), .wire18(wire11), .wire16(wire10));
  assign wire33 = $signed((~|(wire31[(4'ha):(3'h4)] ?
                      $signed(reg14) : wire12[(3'h4):(1'h0)])));
  assign wire34 = $unsigned((($signed(reg13) << $signed(wire9)) ?
                      ({reg13} ?
                          $signed((8'h9f)) : (wire11 ?
                              wire31 : wire12)) : $unsigned((^wire31))));
  assign wire35 = wire34;
  assign wire36 = ((~($unsigned(wire11) ^ {reg13})) ?
                      (~wire33) : $signed((^~(8'hab))));
  assign wire37 = ($signed($unsigned(wire36)) ?
                      wire10[(3'h6):(1'h0)] : ((wire11[(4'h8):(3'h4)] ?
                          (wire11 ? wire10 : wire12) : (+wire36)) * (((8'haa) ?
                              reg14 : wire31) ?
                          $unsigned((8'hb0)) : (wire34 ^ wire33))));
  module38 #() modinst54 (.wire41(wire31), .wire42(wire37), .wire40(reg14), .y(wire53), .wire39(reg13), .clk(clk));
  assign wire55 = (8'ha4);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module38  (y, clk, wire42, wire41, wire40, wire39);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire42;
  input wire signed [(4'h8):(1'h0)] wire41;
  input wire [(3'h6):(1'h0)] wire40;
  input wire [(2'h2):(1'h0)] wire39;
  wire [(4'h8):(1'h0)] wire52;
  wire [(4'hb):(1'h0)] wire51;
  wire [(3'h7):(1'h0)] wire50;
  wire signed [(3'h7):(1'h0)] wire49;
  wire signed [(4'h9):(1'h0)] wire48;
  wire signed [(3'h4):(1'h0)] wire47;
  wire [(4'ha):(1'h0)] wire46;
  wire signed [(3'h5):(1'h0)] wire45;
  wire [(4'h9):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire43;
  assign y = {wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 (1'h0)};
  assign wire43 = $unsigned(wire39[(1'h1):(1'h0)]);
  assign wire44 = ($unsigned(wire42) | (^(wire40[(3'h6):(3'h5)] ?
                      $unsigned(wire39) : $signed(wire41))));
  assign wire45 = $signed(({$signed((8'hac))} ?
                      $signed((wire44 < wire43)) : wire42));
  assign wire46 = (^wire43);
  assign wire47 = $signed($unsigned($signed($signed((8'haa)))));
  assign wire48 = ((&$unsigned(wire45[(3'h4):(2'h3)])) ^ $signed($signed((wire41 ?
                      wire46 : wire45))));
  assign wire49 = $unsigned($signed(($signed(wire40) ?
                      $unsigned(wire42) : wire39)));
  assign wire50 = wire43[(1'h1):(1'h1)];
  assign wire51 = (~|wire48);
  assign wire52 = wire39[(1'h0):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param30 = (((((8'h9f) ? (8'ha3) : (8'h9f)) ^~ ((8'ha9) ? (8'hab) : (8'ha0))) ? (((8'ha3) ? (8'ha0) : (8'ha2)) ^ ((8'ha3) ^~ (8'ha6))) : (((8'hae) != (8'haa)) > (+(8'haa)))) != (((8'ha1) ~^ (~|(8'hb0))) ? {{(8'hab)}} : ((-(8'h9d)) ? ((8'had) == (8'ha9)) : (~^(8'ha1))))))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h3f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire19;
  input wire signed [(3'h6):(1'h0)] wire18;
  input wire [(3'h6):(1'h0)] wire17;
  input wire [(4'h9):(1'h0)] wire16;
  wire signed [(4'hb):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire26;
  wire signed [(3'h7):(1'h0)] wire25;
  wire [(2'h3):(1'h0)] wire24;
  wire signed [(3'h6):(1'h0)] wire23;
  wire signed [(2'h2):(1'h0)] wire22;
  wire signed [(4'h8):(1'h0)] wire21;
  wire signed [(4'h9):(1'h0)] wire20;
  reg signed [(3'h5):(1'h0)] reg28 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg27 = (1'h0);
  assign y = {wire29,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 reg28,
                 reg27,
                 (1'h0)};
  assign wire20 = $signed(wire17[(3'h6):(1'h1)]);
  assign wire21 = (|wire17);
  assign wire22 = (((((8'ha2) != wire21) << $unsigned(wire18)) ?
                          ({wire20} ?
                              ((8'ha5) >= wire19) : ((8'ha7) || (8'ha0))) : ((wire17 ?
                              (8'ha0) : wire21) != $signed((8'hae)))) ?
                      $unsigned(((^~wire21) ^~ $signed(wire18))) : {(wire18[(3'h4):(2'h3)] ?
                              {wire21} : $unsigned((8'ha5)))});
  assign wire23 = wire19;
  assign wire24 = (wire17[(3'h4):(2'h2)] && wire16);
  assign wire25 = $unsigned(wire18);
  assign wire26 = ($unsigned((wire17 ? (~|wire18) : (wire16 <= wire16))) ?
                      wire16 : $unsigned(wire18[(3'h5):(1'h1)]));
  always
    @(posedge clk) begin
      reg27 <= wire17;
    end
  always
    @(posedge clk) begin
      reg28 <= {$signed(((8'ha4) ? (+wire16) : (wire24 ? wire18 : reg27)))};
    end
  assign wire29 = {$signed($unsigned(reg28[(2'h2):(1'h1)]))};
endmodule