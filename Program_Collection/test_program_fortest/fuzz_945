(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1ea):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'he):(1'h0)] wire3;
  input wire signed [(4'hc):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire signed [(3'h6):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire12;
  wire signed [(5'h13):(1'h0)] wire11;
  wire [(4'h9):(1'h0)] wire10;
  wire [(5'h13):(1'h0)] wire9;
  wire signed [(5'h11):(1'h0)] wire8;
  wire [(4'hf):(1'h0)] wire7;
  wire signed [(5'h10):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire4;
  reg [(4'ha):(1'h0)] reg43 = (1'h0);
  reg [(4'h9):(1'h0)] reg42 = (1'h0);
  reg [(5'h12):(1'h0)] reg39 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg36 = (1'h0);
  reg [(2'h3):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg33 = (1'h0);
  reg [(4'h8):(1'h0)] reg32 = (1'h0);
  reg [(4'hf):(1'h0)] reg31 = (1'h0);
  reg [(4'hf):(1'h0)] reg29 = (1'h0);
  reg [(4'he):(1'h0)] reg26 = (1'h0);
  reg [(5'h15):(1'h0)] reg23 = (1'h0);
  reg [(4'h8):(1'h0)] reg18 = (1'h0);
  reg [(4'ha):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg44 = (1'h0);
  reg [(2'h3):(1'h0)] forvar41 = (1'h0);
  reg [(5'h14):(1'h0)] reg40 = (1'h0);
  reg [(3'h7):(1'h0)] reg38 = (1'h0);
  reg [(3'h6):(1'h0)] forvar37 = (1'h0);
  reg [(4'h9):(1'h0)] forvar34 = (1'h0);
  reg [(5'h11):(1'h0)] reg30 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg28 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar27 = (1'h0);
  reg [(4'he):(1'h0)] reg25 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg24 = (1'h0);
  reg [(3'h7):(1'h0)] reg22 = (1'h0);
  reg [(5'h15):(1'h0)] forvar21 = (1'h0);
  reg [(4'he):(1'h0)] forvar20 = (1'h0);
  reg [(4'ha):(1'h0)] reg19 = (1'h0);
  reg [(4'h8):(1'h0)] forvar17 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar14 = (1'h0);
  reg [(4'he):(1'h0)] forvar13 = (1'h0);
  assign y = {wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg43,
                 reg42,
                 reg39,
                 reg36,
                 reg35,
                 reg33,
                 reg32,
                 reg31,
                 reg29,
                 reg26,
                 reg23,
                 reg18,
                 reg16,
                 reg15,
                 reg44,
                 forvar41,
                 reg40,
                 reg38,
                 forvar37,
                 forvar34,
                 reg30,
                 reg28,
                 forvar27,
                 reg25,
                 reg24,
                 reg22,
                 forvar21,
                 forvar20,
                 reg19,
                 forvar17,
                 forvar14,
                 forvar13,
                 (1'h0)};
  assign wire4 = ($unsigned((~(|(wire3 != (8'h9d))))) > $unsigned((8'hae)));
  assign wire5 = (($signed(((wire0 & wire4) ?
                     (wire2 ?
                         wire1 : (7'h43)) : (~^wire2))) & (wire4[(1'h0):(1'h0)] ?
                     $signed({wire1,
                         wire0}) : wire2[(3'h4):(2'h2)])) < ((((wire1 ?
                         wire3 : wire2) ?
                     (wire1 ?
                         (7'h42) : wire2) : (8'hb5)) >> $signed($signed(wire3))) & (8'ha9)));
  assign wire6 = (!$signed(wire4[(4'h8):(3'h5)]));
  assign wire7 = (~|$unsigned((wire5 - ($unsigned(wire4) ?
                     (~wire1) : (wire4 ? wire2 : wire3)))));
  assign wire8 = (!((~^$signed((!wire2))) ?
                     (~^(~&wire5[(2'h3):(1'h0)])) : (({wire3,
                             wire4} <= wire2[(3'h5):(2'h3)]) ?
                         wire6 : wire7[(1'h1):(1'h0)])));
  assign wire9 = wire6[(4'h9):(3'h4)];
  assign wire10 = (~^(((~(wire0 ?
                          wire0 : wire7)) << $signed($unsigned(wire3))) ?
                      (~&$signed($signed(wire0))) : {$unsigned((wire9 ?
                              wire1 : wire4))}));
  assign wire11 = wire6[(3'h4):(1'h0)];
  assign wire12 = ({(^(8'hbe)),
                      $unsigned($signed(wire0))} << $signed($signed($unsigned(wire4))));
  always
    @(posedge clk) begin
      for (forvar13 = (1'h0); (forvar13 < (2'h2)); forvar13 = (forvar13 + (1'h1)))
        begin
          for (forvar14 = (1'h0); (forvar14 < (2'h2)); forvar14 = (forvar14 + (1'h1)))
            begin
              reg15 <= ({wire6[(4'he):(4'hd)]} ?
                  ((-((~wire6) ?
                          $unsigned(forvar14) : (wire3 ? wire10 : wire0))) ?
                      wire4[(3'h7):(2'h3)] : (~^((wire8 <<< wire1) ~^ (~^wire9)))) : ($unsigned(forvar14[(2'h3):(1'h0)]) ?
                      wire11[(4'h8):(3'h7)] : (8'hb7)));
              reg16 <= $signed((+(~^$signed($signed(forvar13)))));
            end
        end
      for (forvar17 = (1'h0); (forvar17 < (2'h2)); forvar17 = (forvar17 + (1'h1)))
        begin
          reg18 <= wire2[(4'h9):(1'h0)];
          reg19 = forvar14;
        end
    end
  always
    @(posedge clk) begin
      for (forvar20 = (1'h0); (forvar20 < (2'h3)); forvar20 = (forvar20 + (1'h1)))
        begin
          for (forvar21 = (1'h0); (forvar21 < (2'h2)); forvar21 = (forvar21 + (1'h1)))
            begin
              reg22 = reg18;
              reg23 <= ((^~((^(wire12 ? reg18 : wire9)) ?
                  ($signed(forvar21) ?
                      wire1 : $unsigned(wire7)) : wire3[(4'h8):(1'h0)])) && $signed($signed(wire6[(2'h2):(1'h0)])));
              reg24 = wire3[(4'hb):(2'h3)];
              reg25 = wire8[(1'h1):(1'h1)];
            end
          reg26 <= wire7[(4'ha):(3'h5)];
          for (forvar27 = (1'h0); (forvar27 < (2'h2)); forvar27 = (forvar27 + (1'h1)))
            begin
              reg28 = ($unsigned((~($signed(reg25) & {wire3, (8'hae)}))) ?
                  wire12[(3'h6):(2'h3)] : (($signed((~^wire10)) >= $unsigned((|(8'hbd)))) << forvar20[(3'h5):(2'h3)]));
              reg29 <= (reg23 < $signed(reg28));
              reg30 = ((&$signed({forvar21})) ?
                  $unsigned(({(reg23 ? wire3 : reg16),
                      wire12[(2'h2):(2'h2)]} ^ wire3[(4'ha):(2'h2)])) : reg28);
            end
          if (wire3[(3'h6):(2'h3)])
            begin
              reg31 <= forvar20;
            end
          else
            begin
              reg31 <= ({{$unsigned((|reg23))}, wire4} ?
                  $unsigned(($unsigned(wire12[(1'h0):(1'h0)]) ?
                      $signed((~|wire8)) : forvar20[(3'h5):(1'h1)])) : $unsigned((~((reg15 >>> reg28) ?
                      (forvar20 ? wire8 : wire6) : (wire6 | wire4)))));
              reg32 <= (~^(wire10 ?
                  $unsigned($signed((|wire1))) : {$unsigned($unsigned(reg16))}));
              reg33 <= {($unsigned({(wire7 ^~ reg23)}) ?
                      reg25[(3'h6):(3'h4)] : (((wire5 || reg26) ?
                              (~^reg23) : reg26[(3'h5):(1'h1)]) ?
                          reg32 : wire2)),
                  reg32};
            end
        end
      for (forvar34 = (1'h0); (forvar34 < (3'h4)); forvar34 = (forvar34 + (1'h1)))
        begin
          reg35 <= ((~&$signed($signed($signed(reg29)))) ?
              wire6 : (((^(8'hbf)) ?
                  $unsigned(((8'h9d) == forvar34)) : (((8'hbe) ?
                      (8'had) : (8'ha2)) >= {wire3})) + $unsigned((wire7[(4'hf):(4'he)] ?
                  $signed(wire12) : (reg22 ~^ wire8)))));
          reg36 <= {$unsigned(reg26),
              ({(((8'hb9) >> wire1) ? (~(8'ha4)) : (wire1 - forvar21)),
                      (~&$signed(wire3))} ?
                  (8'hba) : (wire2 ^ ((reg23 <= reg24) ?
                      wire7 : (wire8 ? forvar27 : reg35))))};
          for (forvar37 = (1'h0); (forvar37 < (2'h3)); forvar37 = (forvar37 + (1'h1)))
            begin
              reg38 = ((({wire4[(2'h2):(2'h2)]} || (~&(~reg18))) - ((reg24 - (~|wire11)) ?
                      (|(&(8'hb3))) : wire1)) ?
                  (-wire6) : $signed((({reg36,
                      reg25} ^ reg28[(2'h3):(2'h2)]) != $unsigned($unsigned(wire6)))));
              reg39 <= {reg31[(1'h0):(1'h0)],
                  {(reg29[(3'h5):(1'h0)] ?
                          $signed((+reg24)) : reg28[(3'h4):(2'h3)]),
                      $unsigned((wire4[(3'h4):(2'h2)] << $unsigned(reg22)))}};
              reg40 = (~|$signed(reg16[(1'h0):(1'h0)]));
            end
        end
      for (forvar41 = (1'h0); (forvar41 < (3'h4)); forvar41 = (forvar41 + (1'h1)))
        begin
          reg42 <= $unsigned(wire5[(3'h7):(3'h5)]);
        end
      reg43 <= $unsigned((-(~&reg30[(5'h11):(4'he)])));
      reg44 = $signed((((~|(8'h9f)) ? (!(!wire3)) : wire0[(3'h6):(1'h1)]) ?
          (~&$unsigned(((7'h42) <<< wire11))) : ($unsigned({forvar21}) ?
              {$unsigned(reg25), wire3} : (~|((8'ha5) ? forvar27 : (8'hb9))))));
    end
endmodule