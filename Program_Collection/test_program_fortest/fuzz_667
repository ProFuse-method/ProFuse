(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param10 = (((((8'hab) & (8'hae)) && ((8'ha7) ? (8'h9c) : (8'ha7))) >>> ((~^(8'ha2)) ? ((8'ha2) ? (8'ha1) : (8'haf)) : ((8'ha2) + (8'haa)))) < ((|(^(8'ha3))) << {(^(8'ha8))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire [(4'h8):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire signed [(2'h2):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire9;
  wire [(3'h4):(1'h0)] wire8;
  wire signed [(3'h7):(1'h0)] wire7;
  wire [(2'h2):(1'h0)] wire6;
  wire [(3'h6):(1'h0)] wire5;
  reg signed [(4'h9):(1'h0)] reg4 = (1'h0);
  assign y = {wire9, wire8, wire7, wire6, wire5, reg4, (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= (wire1 - (+$signed($unsigned(wire0))));
    end
  assign wire5 = $unsigned((reg4 ?
                     $unsigned($signed(wire1)) : wire2[(3'h6):(3'h6)]));
  assign wire6 = ($unsigned($unsigned(((8'ha8) >> wire2))) || $signed(wire1));
  assign wire7 = (~(^wire2));
  assign wire8 = wire1[(2'h2):(1'h1)];
  assign wire9 = (wire2[(3'h7):(2'h2)] > (+(&reg4)));
endmodule