(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire7;
  wire [(3'h6):(1'h0)] wire6;
  wire signed [(3'h5):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  reg signed [(3'h6):(1'h0)] reg9 = (1'h0);
  reg [(3'h4):(1'h0)] reg8 = (1'h0);
  assign y = {wire7, wire6, wire5, wire4, reg9, reg8, (1'h0)};
  assign wire4 = ($signed($signed($signed((8'ha8)))) ?
                     (8'ha9) : ($unsigned((-wire2)) ?
                         ((wire1 ^~ wire3) >= (wire1 & wire0)) : {(wire0 ?
                                 wire2 : wire1)}));
  assign wire5 = wire3[(3'h7):(3'h7)];
  assign wire6 = wire0;
  assign wire7 = wire2[(2'h3):(1'h0)];
  always
    @(posedge clk) begin
      reg8 <= $unsigned((~|(~|(wire4 ? wire4 : wire7))));
      reg9 <= (({$unsigned(wire0)} + (wire3[(3'h4):(2'h3)] >= (-wire2))) ~^ wire6[(1'h0):(1'h0)]);
    end
endmodule