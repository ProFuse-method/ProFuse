(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire47;
  wire signed [(2'h2):(1'h0)] wire46;
  wire signed [(3'h6):(1'h0)] wire45;
  wire signed [(3'h7):(1'h0)] wire44;
  wire [(3'h6):(1'h0)] wire42;
  wire signed [(4'hb):(1'h0)] wire4;
  assign y = {wire47, wire46, wire45, wire44, wire42, wire4, (1'h0)};
  assign wire4 = (~^$unsigned(wire0));
  module5 #() modinst43 (.wire7(wire1), .wire6(wire0), .wire8(wire3), .y(wire42), .wire9(wire4), .clk(clk));
  assign wire44 = $unsigned(wire3[(3'h6):(3'h4)]);
  assign wire45 = (-wire0);
  assign wire46 = $unsigned($unsigned($signed($unsigned((8'hab)))));
  assign wire47 = ((^wire45[(3'h5):(1'h0)]) - ($signed((^~(8'h9c))) ?
                      wire45 : ($unsigned(wire46) ^~ (wire1 ?
                          wire3 : wire44))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire [(3'h7):(1'h0)] wire8;
  input wire [(4'hb):(1'h0)] wire7;
  input wire [(3'h5):(1'h0)] wire6;
  wire signed [(4'h9):(1'h0)] wire38;
  wire signed [(4'hb):(1'h0)] wire36;
  wire [(4'h9):(1'h0)] wire15;
  wire signed [(4'hb):(1'h0)] wire14;
  wire [(4'h9):(1'h0)] wire13;
  wire [(4'h9):(1'h0)] wire12;
  wire [(4'ha):(1'h0)] wire11;
  wire signed [(2'h3):(1'h0)] wire10;
  reg signed [(3'h5):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg39 = (1'h0);
  assign y = {wire38,
                 wire36,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 reg41,
                 reg40,
                 reg39,
                 (1'h0)};
  assign wire10 = (wire9[(4'h9):(1'h0)] ^~ (~^wire6[(1'h1):(1'h0)]));
  assign wire11 = ($unsigned($signed(((8'ha7) ? wire7 : wire7))) << (wire6 ?
                      ($signed((8'hac)) ?
                          (^wire9) : $unsigned(wire7)) : ((wire9 ~^ wire7) ?
                          wire8[(3'h6):(3'h5)] : (wire7 ? wire8 : wire6))));
  assign wire12 = ($unsigned(wire6) * $signed($unsigned($signed(wire11))));
  assign wire13 = (wire12[(3'h4):(2'h3)] * (~wire9[(2'h3):(1'h1)]));
  assign wire14 = (!$signed((8'h9e)));
  assign wire15 = (($signed({wire9}) ?
                          (~&$signed(wire11)) : $signed($unsigned((8'ha1)))) ?
                      ((~|(~|wire13)) + ($unsigned((8'ha5)) >= wire13[(1'h1):(1'h0)])) : wire10);
  module16 #() modinst37 (wire36, clk, wire13, wire6, wire14, wire9);
  assign wire38 = wire7;
  always
    @(posedge clk) begin
      reg39 <= wire10;
      reg40 <= $unsigned(wire11[(1'h0):(1'h0)]);
    end
  always
    @(posedge clk) begin
      reg41 <= (!wire38);
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h6f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire20;
  input wire [(3'h5):(1'h0)] wire19;
  input wire [(3'h6):(1'h0)] wire18;
  input wire [(4'ha):(1'h0)] wire17;
  wire signed [(3'h4):(1'h0)] wire35;
  wire [(2'h2):(1'h0)] wire34;
  wire [(4'h8):(1'h0)] wire33;
  wire [(4'hb):(1'h0)] wire32;
  wire [(4'hb):(1'h0)] wire31;
  wire [(3'h7):(1'h0)] wire30;
  wire signed [(4'h9):(1'h0)] wire29;
  wire signed [(4'ha):(1'h0)] wire28;
  wire signed [(2'h2):(1'h0)] wire27;
  wire [(4'h9):(1'h0)] wire26;
  wire signed [(4'h9):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire21;
  reg signed [(2'h3):(1'h0)] reg24 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg23 = (1'h0);
  reg [(4'h8):(1'h0)] reg22 = (1'h0);
  assign y = {wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire21,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire21 = ((($signed(wire17) ?
                      wire17[(1'h0):(1'h0)] : (wire17 ?
                          wire17 : wire20)) > wire17[(4'h9):(2'h2)]) ^~ wire17[(4'h8):(1'h0)]);
  always
    @(posedge clk) begin
      reg22 <= $unsigned($unsigned({(~wire21)}));
      reg23 <= $signed((($signed((8'had)) == (wire21 << (8'ha2))) << wire17[(3'h6):(1'h0)]));
      reg24 <= $signed($unsigned($signed((reg23 ? wire20 : wire20))));
    end
  assign wire25 = wire18[(3'h6):(1'h0)];
  assign wire26 = (((8'ha8) ?
                      $signed(wire21) : (wire25[(2'h3):(1'h1)] >> $signed(reg23))) >= (^wire18[(3'h6):(1'h1)]));
  assign wire27 = (~|($unsigned($unsigned(reg23)) << $signed((-(8'h9d)))));
  assign wire28 = wire19[(1'h0):(1'h0)];
  assign wire29 = wire26[(3'h6):(2'h3)];
  assign wire30 = ((-wire19[(2'h3):(2'h2)]) ?
                      $signed($signed(((8'haa) >= wire29))) : ($unsigned((&reg23)) ?
                          $signed((~wire25)) : wire26[(1'h1):(1'h1)]));
  assign wire31 = (-(wire27 ? {(^~wire29)} : wire29));
  assign wire32 = {reg22[(2'h2):(1'h0)]};
  assign wire33 = $unsigned((!$signed($unsigned(reg22))));
  assign wire34 = (wire27 - wire30);
  assign wire35 = wire26[(2'h2):(1'h0)];
endmodule