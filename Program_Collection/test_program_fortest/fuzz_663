(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param45 = (({((8'ha5) ? (8'h9c) : (8'ha7))} ? (!((8'haf) + (8'had))) : {((8'hae) != (8'hb0))}) ? (!(~&((8'hac) ? (8'ha9) : (8'ha1)))) : ((((8'ha3) >= (8'had)) * ((8'h9c) ? (8'ha1) : (8'ha3))) ? (&((8'ha5) ? (8'ha5) : (8'h9f))) : {((8'ha5) && (8'ha5))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire44;
  wire [(3'h6):(1'h0)] wire42;
  wire signed [(4'ha):(1'h0)] wire9;
  wire signed [(2'h2):(1'h0)] wire8;
  wire [(3'h5):(1'h0)] wire7;
  wire [(4'hb):(1'h0)] wire6;
  wire signed [(4'hb):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire4;
  assign y = {wire44, wire42, wire9, wire8, wire7, wire6, wire5, wire4, (1'h0)};
  assign wire4 = wire2;
  assign wire5 = wire4;
  assign wire6 = wire2[(1'h1):(1'h1)];
  assign wire7 = (wire3 ?
                     (-(wire4 == (wire4 != wire1))) : (wire1[(1'h0):(1'h0)] ?
                         $signed((wire3 ? wire5 : wire4)) : $unsigned(wire4)));
  assign wire8 = $signed(((wire5[(1'h0):(1'h0)] ? {wire5} : wire3) ?
                     ((wire0 ? wire4 : (8'ha8)) == (wire7 * wire6)) : ({wire1} ?
                         (wire2 ? wire5 : (8'ha0)) : (wire3 * wire6))));
  assign wire9 = $unsigned(wire3[(3'h7):(1'h0)]);
  module10 #() modinst43 (wire42, clk, wire1, wire5, wire3, wire0);
  assign wire44 = $signed(wire6);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire11, wire12, wire13, wire14);
  output wire [(32'h6e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire11;
  input wire signed [(4'hb):(1'h0)] wire12;
  input wire [(2'h3):(1'h0)] wire13;
  input wire [(4'h9):(1'h0)] wire14;
  wire [(3'h4):(1'h0)] wire41;
  wire [(3'h6):(1'h0)] wire40;
  wire [(2'h2):(1'h0)] wire39;
  wire signed [(2'h3):(1'h0)] wire20;
  wire [(3'h5):(1'h0)] wire21;
  wire [(4'h9):(1'h0)] wire22;
  wire [(2'h3):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire25;
  wire [(4'h8):(1'h0)] wire26;
  wire signed [(3'h6):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire37;
  reg signed [(3'h4):(1'h0)] reg15 = (1'h0);
  reg [(4'ha):(1'h0)] reg16 = (1'h0);
  reg [(3'h7):(1'h0)] reg17 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg19 = (1'h0);
  assign y = {wire41,
                 wire40,
                 wire39,
                 wire20,
                 wire21,
                 wire22,
                 wire23,
                 wire24,
                 wire25,
                 wire26,
                 wire27,
                 wire37,
                 reg15,
                 reg16,
                 reg17,
                 reg18,
                 reg19,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ((8'hb0))
        begin
          if ($signed((wire12 != wire14[(3'h6):(2'h3)])))
            begin
              reg15 <= ((wire13[(1'h1):(1'h0)] >> $signed($unsigned((8'ha8)))) ?
                  (-(wire11 >= wire11[(3'h7):(3'h5)])) : wire13[(1'h1):(1'h1)]);
              reg16 <= wire11[(1'h0):(1'h0)];
            end
          else
            begin
              reg15 <= {$unsigned(wire14[(3'h5):(3'h5)])};
              reg16 <= ({($signed(reg16) ~^ (+wire14))} ?
                  (+$signed((reg16 + reg15))) : reg16[(2'h3):(2'h3)]);
              reg17 <= wire14;
            end
          reg18 <= $signed(wire11);
        end
      else
        begin
          reg15 <= (&wire13[(1'h1):(1'h0)]);
          reg16 <= (+$unsigned((^~$unsigned(wire11))));
        end
      reg19 <= $signed($signed(((^(8'ha8)) ?
          ((8'ha4) ? reg18 : reg15) : (wire11 & reg18))));
    end
  assign wire20 = $unsigned($unsigned($unsigned($unsigned(wire12))));
  assign wire21 = ($signed({$signed(wire13)}) ^ (reg19[(1'h1):(1'h1)] > reg18));
  assign wire22 = $unsigned((8'ha8));
  assign wire23 = reg18;
  assign wire24 = wire22;
  assign wire25 = ($signed($signed((wire21 ? wire22 : wire11))) ?
                      {((8'ha4) >>> $signed(wire12))} : $unsigned(wire21));
  assign wire26 = $signed(($unsigned($signed(wire22)) ?
                      wire22 : $unsigned(reg17[(1'h0):(1'h0)])));
  assign wire27 = (-$unsigned(((wire21 ? wire20 : wire11) ?
                      $signed(wire12) : reg18[(3'h6):(3'h5)])));
  module28 #() modinst38 (wire37, clk, wire24, wire11, wire22, reg16);
  assign wire39 = (-$unsigned($unsigned(wire13[(2'h2):(1'h1)])));
  assign wire40 = wire13;
  assign wire41 = $unsigned({reg17});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module28  (y, clk, wire32, wire31, wire30, wire29);
  output wire [(32'h23):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire32;
  input wire signed [(4'h8):(1'h0)] wire31;
  input wire [(2'h3):(1'h0)] wire30;
  input wire [(4'ha):(1'h0)] wire29;
  wire signed [(4'hb):(1'h0)] wire36;
  wire [(3'h6):(1'h0)] wire35;
  wire [(3'h6):(1'h0)] wire34;
  wire signed [(4'hb):(1'h0)] wire33;
  assign y = {wire36, wire35, wire34, wire33, (1'h0)};
  assign wire33 = wire29[(4'ha):(4'ha)];
  assign wire34 = wire30;
  assign wire35 = (^(~^$unsigned($unsigned(wire31))));
  assign wire36 = wire31;
endmodule