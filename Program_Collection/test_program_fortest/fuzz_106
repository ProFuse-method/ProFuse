(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param52 = ((~&{{(8'had)}}) * (({(8'ha7)} > (8'ha8)) * (+((8'ha2) ? (8'h9e) : (8'h9e))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h66):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire0;
  input wire signed [(2'h3):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire3;
  wire [(2'h3):(1'h0)] wire50;
  wire [(2'h2):(1'h0)] wire49;
  wire signed [(4'h8):(1'h0)] wire7;
  wire [(3'h6):(1'h0)] wire8;
  wire signed [(4'ha):(1'h0)] wire9;
  wire [(4'hb):(1'h0)] wire10;
  wire signed [(3'h4):(1'h0)] wire11;
  wire [(4'h9):(1'h0)] wire12;
  wire signed [(4'h9):(1'h0)] wire13;
  wire [(4'ha):(1'h0)] wire47;
  reg signed [(2'h2):(1'h0)] reg51 = (1'h0);
  reg [(3'h4):(1'h0)] reg4 = (1'h0);
  reg [(3'h7):(1'h0)] reg5 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg6 = (1'h0);
  reg [(3'h5):(1'h0)] reg14 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire7,
                 wire8,
                 wire9,
                 wire10,
                 wire11,
                 wire12,
                 wire13,
                 wire47,
                 reg51,
                 reg4,
                 reg5,
                 reg6,
                 reg14,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= $signed((~wire3));
      reg5 <= (+(!wire2));
      reg6 <= {(($unsigned((8'hab)) ~^ (wire0 ? wire2 : reg5)) ?
              {(wire3 ? wire2 : wire3)} : (!(wire1 > reg4)))};
    end
  assign wire7 = (8'hac);
  assign wire8 = (($unsigned(reg5[(3'h4):(3'h4)]) ^~ (+wire3)) ?
                     $unsigned((wire2 ?
                         reg6 : $unsigned(reg4))) : wire7[(2'h2):(1'h1)]);
  assign wire9 = {{$signed((wire2 * wire1))}};
  assign wire10 = (~|($signed((reg6 >= reg6)) >> $unsigned(((8'haf) <= wire9))));
  assign wire11 = wire9;
  assign wire12 = ($unsigned({reg4}) ?
                      ($signed(reg5) == ((~|wire9) ^ (wire10 << wire9))) : ((~^(wire0 < (8'ha4))) + (^~(+(8'ha8)))));
  assign wire13 = wire1;
  always
    @(posedge clk) begin
      reg14 <= {($unsigned($signed(wire9)) || $signed($signed(wire8)))};
    end
  module15 #() modinst48 (wire47, clk, reg14, wire9, wire1, wire2);
  assign wire49 = reg5;
  assign wire50 = ((((reg4 ? wire1 : wire49) & wire9) && (!(wire0 ?
                          wire47 : wire1))) ?
                      $unsigned(wire3) : (|($signed(wire8) ^~ reg6[(4'ha):(3'h4)])));
  always
    @(posedge clk) begin
      reg51 <= ($unsigned(wire3[(3'h5):(2'h2)]) == (&$signed(wire0)));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param46 = (~({((8'ha8) - (8'ha7))} ? (8'ha4) : (((8'h9d) ? (8'hab) : (8'hae)) << ((8'h9c) && (8'ha1))))))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire19;
  input wire signed [(3'h6):(1'h0)] wire18;
  input wire [(2'h2):(1'h0)] wire17;
  input wire signed [(4'hb):(1'h0)] wire16;
  wire [(3'h7):(1'h0)] wire45;
  wire signed [(4'h8):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire43;
  wire signed [(2'h3):(1'h0)] wire42;
  wire [(3'h4):(1'h0)] wire41;
  wire signed [(4'ha):(1'h0)] wire40;
  wire [(3'h5):(1'h0)] wire39;
  wire [(4'h9):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire37;
  wire signed [(4'h9):(1'h0)] wire35;
  wire [(3'h6):(1'h0)] wire20;
  assign y = {wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire35,
                 wire20,
                 (1'h0)};
  assign wire20 = wire16[(1'h1):(1'h1)];
  module21 #() modinst36 (.wire23(wire16), .wire24(wire18), .wire22(wire19), .y(wire35), .wire25(wire20), .clk(clk));
  assign wire37 = ((($signed(wire35) ?
                      wire35 : $unsigned(wire17)) + (8'haf)) * $signed({(|wire18)}));
  assign wire38 = $unsigned(wire35[(4'h9):(2'h2)]);
  assign wire39 = (&$unsigned($signed(wire19[(1'h0):(1'h0)])));
  assign wire40 = wire39[(2'h2):(1'h1)];
  assign wire41 = ($unsigned(wire38) ?
                      (~&(~^$signed(wire37))) : wire40[(3'h6):(1'h0)]);
  assign wire42 = $signed((|wire35));
  assign wire43 = {wire40};
  assign wire44 = ((|(|wire35)) ? wire39[(1'h0):(1'h0)] : $unsigned((-wire42)));
  assign wire45 = (|(8'haf));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21
#(parameter param34 = ((((~(8'haf)) << ((8'ha3) ? (8'ha8) : (8'ha7))) > ((&(8'h9c)) ? (|(8'ha4)) : ((8'hab) ? (8'ha7) : (8'ha8)))) ? ({((8'ha6) <= (8'hac))} >> (((8'haa) & (8'ha4)) >>> ((8'ha3) - (8'ha7)))) : {(((8'ha8) << (8'hab)) ? ((8'hac) ^ (8'ha9)) : (~|(8'ha8)))}))
(y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h2b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire25;
  input wire signed [(3'h6):(1'h0)] wire24;
  input wire [(4'hb):(1'h0)] wire23;
  input wire [(2'h3):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire33;
  wire signed [(3'h4):(1'h0)] wire29;
  wire signed [(3'h5):(1'h0)] wire28;
  wire signed [(4'h8):(1'h0)] wire26;
  reg [(3'h7):(1'h0)] reg32 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg31 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg30 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg27 = (1'h0);
  assign y = {wire33,
                 wire29,
                 wire28,
                 wire26,
                 reg32,
                 reg31,
                 reg30,
                 reg27,
                 (1'h0)};
  assign wire26 = $unsigned((-wire22));
  always
    @(posedge clk) begin
      reg27 <= wire25[(2'h2):(1'h1)];
    end
  assign wire28 = $unsigned((($unsigned((8'hae)) <= $signed((8'ha6))) ?
                      wire24[(3'h4):(1'h0)] : ((8'ha0) ?
                          (wire25 || wire23) : (wire22 ? wire26 : reg27))));
  assign wire29 = wire24[(2'h2):(1'h0)];
  always
    @(posedge clk) begin
      reg30 <= (~&$unsigned((((8'ha3) ? (8'ha8) : wire26) >>> (wire24 ?
          wire29 : wire24))));
      reg31 <= $signed({wire28[(3'h4):(1'h0)]});
      reg32 <= $unsigned((|(-wire22)));
    end
  assign wire33 = ((&$unsigned((wire22 ~^ wire24))) ?
                      ((&(~|reg30)) << wire29[(1'h0):(1'h0)]) : {wire26});
endmodule