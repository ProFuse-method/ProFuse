(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3, wire4);
  output wire [(32'h25c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h10):(1'h0)] wire0;
  input wire signed [(5'h10):(1'h0)] wire1;
  input wire signed [(5'h10):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire [(4'hf):(1'h0)] wire4;
  wire signed [(3'h7):(1'h0)] wire258;
  wire signed [(3'h4):(1'h0)] wire257;
  wire [(5'h11):(1'h0)] wire256;
  wire signed [(5'h14):(1'h0)] wire254;
  wire signed [(4'hf):(1'h0)] wire40;
  wire signed [(4'ha):(1'h0)] wire141;
  reg [(2'h2):(1'h0)] reg266 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg265 = (1'h0);
  reg [(4'hc):(1'h0)] reg264 = (1'h0);
  reg [(3'h7):(1'h0)] reg263 = (1'h0);
  reg [(4'he):(1'h0)] reg260 = (1'h0);
  reg [(2'h2):(1'h0)] reg5 = (1'h0);
  reg [(3'h4):(1'h0)] reg6 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg7 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg9 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg10 = (1'h0);
  reg [(5'h13):(1'h0)] reg11 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg12 = (1'h0);
  reg [(5'h15):(1'h0)] reg13 = (1'h0);
  reg [(5'h15):(1'h0)] reg15 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg19 = (1'h0);
  reg [(5'h13):(1'h0)] reg20 = (1'h0);
  reg [(3'h6):(1'h0)] reg21 = (1'h0);
  reg signed [(4'he):(1'h0)] reg22 = (1'h0);
  reg [(4'h9):(1'h0)] reg29 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg30 = (1'h0);
  reg [(5'h15):(1'h0)] reg31 = (1'h0);
  reg signed [(4'he):(1'h0)] reg33 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg34 = (1'h0);
  reg [(5'h15):(1'h0)] reg35 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg37 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg262 = (1'h0);
  reg [(2'h3):(1'h0)] forvar261 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar259 = (1'h0);
  reg [(2'h3):(1'h0)] reg39 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg38 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg36 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar32 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar28 = (1'h0);
  reg [(4'he):(1'h0)] reg27 = (1'h0);
  reg [(4'hb):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg24 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar23 = (1'h0);
  reg [(3'h7):(1'h0)] forvar18 = (1'h0);
  reg [(4'hc):(1'h0)] reg17 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg14 = (1'h0);
  reg [(4'hf):(1'h0)] reg8 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar8 = (1'h0);
  assign y = {wire258,
                 wire257,
                 wire256,
                 wire254,
                 wire40,
                 wire141,
                 reg266,
                 reg265,
                 reg264,
                 reg263,
                 reg260,
                 reg5,
                 reg6,
                 reg7,
                 reg9,
                 reg10,
                 reg11,
                 reg12,
                 reg13,
                 reg15,
                 reg19,
                 reg20,
                 reg21,
                 reg22,
                 reg29,
                 reg30,
                 reg31,
                 reg33,
                 reg34,
                 reg35,
                 reg37,
                 reg262,
                 forvar261,
                 forvar259,
                 reg39,
                 reg38,
                 reg36,
                 forvar32,
                 forvar28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 forvar23,
                 forvar18,
                 reg17,
                 reg16,
                 reg14,
                 reg8,
                 forvar8,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg5 <= $signed((8'ha0));
      if (wire3[(3'h4):(2'h2)])
        begin
          reg6 <= $signed((wire0[(4'ha):(1'h1)] >>> wire3));
          reg7 <= wire4;
          for (forvar8 = (1'h0); (forvar8 < (1'h0)); forvar8 = (forvar8 + (1'h1)))
            begin
              reg9 <= $unsigned(wire2);
              reg10 <= wire4[(3'h4):(1'h0)];
              reg11 <= forvar8;
              reg12 <= (~&wire3[(3'h4):(1'h1)]);
              reg13 <= (&(reg6 >= (8'hb8)));
            end
        end
      else
        begin
          if (wire3[(4'h8):(4'h8)])
            begin
              reg8 = (reg9 < reg13);
              reg14 = reg9[(2'h2):(1'h1)];
              reg15 <= $signed($signed(({reg7[(2'h2):(1'h0)],
                      ((8'had) ? wire1 : reg6)} ?
                  {(reg11 ? wire3 : wire1), $unsigned(reg10)} : wire1)));
              reg16 = {$signed($unsigned(reg9)),
                  (wire3 ^~ (~|(~^$signed(forvar8))))};
              reg17 = (!($signed($unsigned((~&reg12))) ?
                  (wire3[(3'h4):(1'h1)] ^~ wire4[(3'h4):(2'h2)]) : (reg10 & ((reg16 ?
                          reg16 : reg13) ?
                      (wire2 >>> reg16) : $unsigned(reg8)))));
            end
          else
            begin
              reg6 <= reg9;
              reg8 = $signed($signed(reg16[(4'h9):(2'h2)]));
            end
          for (forvar18 = (1'h0); (forvar18 < (3'h4)); forvar18 = (forvar18 + (1'h1)))
            begin
              reg19 <= $signed($signed(((-reg11[(5'h12):(4'hb)]) - (wire1[(4'hb):(3'h6)] >= ((8'ha2) >> wire1)))));
              reg20 <= wire2[(4'hc):(4'hb)];
              reg21 <= ((^~reg8) ?
                  $unsigned(wire1) : (~|((-(wire4 << (8'hae))) ?
                      reg20 : $signed(reg9[(1'h1):(1'h1)]))));
              reg22 <= $signed(reg12);
            end
          for (forvar23 = (1'h0); (forvar23 < (1'h0)); forvar23 = (forvar23 + (1'h1)))
            begin
              reg24 = ($signed($signed(wire4)) ? reg7 : wire3);
              reg25 = {$signed($unsigned(($signed(reg14) << reg22[(4'hd):(4'hc)]))),
                  (^(reg7 + ((~^reg13) | wire4)))};
              reg26 = $signed($unsigned((wire2 != forvar23)));
              reg27 = $signed($unsigned($signed((reg17[(4'h8):(4'h8)] | $unsigned(forvar18)))));
            end
          for (forvar28 = (1'h0); (forvar28 < (1'h0)); forvar28 = (forvar28 + (1'h1)))
            begin
              reg29 <= ($unsigned({((reg17 ~^ forvar8) ?
                          $signed(reg5) : $signed(reg24)),
                      {(7'h44)}}) ?
                  (forvar8 ?
                      wire4 : reg10[(4'hc):(3'h7)]) : $signed(reg12[(1'h1):(1'h0)]));
              reg30 <= $signed($signed($signed((&$unsigned(reg12)))));
              reg31 <= reg5[(1'h0):(1'h0)];
            end
        end
      if ((!((wire2 ? reg9[(2'h3):(1'h0)] : $unsigned({forvar8, forvar23})) ?
          forvar23[(3'h7):(1'h1)] : reg25[(2'h3):(1'h0)])))
        begin
          for (forvar32 = (1'h0); (forvar32 < (2'h3)); forvar32 = (forvar32 + (1'h1)))
            begin
              reg33 <= $unsigned((-wire0));
              reg34 <= (+{$signed(forvar8[(3'h4):(2'h3)])});
              reg35 <= $unsigned(forvar23);
              reg36 = ((reg13[(3'h7):(3'h4)] >= (forvar18[(2'h3):(1'h1)] ?
                  wire1 : ((~reg17) >> (|(7'h44))))) - (reg35[(2'h2):(1'h0)] < (^~$signed($unsigned(reg15)))));
            end
        end
      else
        begin
          for (forvar32 = (1'h0); (forvar32 < (2'h2)); forvar32 = (forvar32 + (1'h1)))
            begin
              reg33 <= forvar32[(4'hc):(3'h7)];
              reg36 = $signed({$unsigned((forvar8 ?
                      reg6[(2'h3):(1'h1)] : (reg29 ? reg19 : (8'hb1))))});
              reg37 <= (8'hbe);
            end
        end
      reg38 = $unsigned(reg17);
      reg39 = (~&(reg37 < $unsigned({(!reg19), (7'h43)})));
    end
  assign wire40 = $signed(wire0[(4'hd):(3'h4)]);
  module41 #() modinst142 (wire141, clk, wire2, reg35, reg11, reg7, reg31);
  module143 #() modinst255 (wire254, clk, reg13, reg33, reg10, reg15, reg19);
  assign wire256 = {{$unsigned((wire1 ? reg13 : wire141[(4'h8):(4'h8)]))},
                       reg15[(5'h12):(5'h10)]};
  assign wire257 = (wire141 > ({$signed((&wire256)), reg33} < {($signed(reg19) ?
                           $unsigned(reg22) : (wire3 ? reg19 : reg19)),
                       ($signed(wire4) ?
                           (reg37 ? wire3 : wire256) : {wire4})}));
  assign wire258 = (8'ha6);
  always
    @(posedge clk) begin
      for (forvar259 = (1'h0); (forvar259 < (1'h0)); forvar259 = (forvar259 + (1'h1)))
        begin
          reg260 <= $unsigned($unsigned(reg7[(3'h4):(3'h4)]));
          for (forvar261 = (1'h0); (forvar261 < (1'h0)); forvar261 = (forvar261 + (1'h1)))
            begin
              reg262 = (^$unsigned(reg15));
              reg263 <= (8'ha4);
              reg264 <= $signed((reg31 ?
                  (reg19 ?
                      reg21 : {reg263,
                          wire258[(3'h7):(1'h0)]}) : wire0[(4'he):(4'he)]));
              reg265 <= $unsigned(reg12[(3'h4):(2'h3)]);
              reg266 <= $unsigned(((&((~^reg265) ? reg11 : (~reg10))) ?
                  forvar261[(2'h3):(1'h0)] : (8'had)));
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module143
#(parameter param252 = ((((!((8'hb7) ? (8'hae) : (8'hb1))) != {((8'h9f) * (8'hb3)), {(7'h40)}}) ^~ ((^~(+(8'h9c))) ? ((!(8'h9e)) ? ((8'hb0) ? (8'ha5) : (8'ha7)) : (+(8'ha4))) : (((8'hbd) ? (8'h9e) : (8'hb1)) != (8'hb5)))) & {{(|((8'h9c) ? (8'hb1) : (8'ha2))), (!((8'hac) ? (8'hb2) : (8'hb0)))}}), 
parameter param253 = {param252})
(y, clk, wire144, wire145, wire146, wire147, wire148);
  output wire [(32'h1cf):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hf):(1'h0)] wire144;
  input wire signed [(4'h9):(1'h0)] wire145;
  input wire [(4'hf):(1'h0)] wire146;
  input wire signed [(5'h15):(1'h0)] wire147;
  input wire signed [(5'h15):(1'h0)] wire148;
  wire signed [(5'h11):(1'h0)] wire251;
  wire [(4'hc):(1'h0)] wire250;
  wire signed [(4'hd):(1'h0)] wire249;
  wire [(4'h9):(1'h0)] wire248;
  wire signed [(4'hd):(1'h0)] wire247;
  wire [(4'ha):(1'h0)] wire246;
  wire [(4'hb):(1'h0)] wire219;
  wire [(5'h10):(1'h0)] wire218;
  wire signed [(3'h4):(1'h0)] wire216;
  wire signed [(4'hb):(1'h0)] wire149;
  wire signed [(4'hb):(1'h0)] wire150;
  wire [(4'ha):(1'h0)] wire151;
  wire [(4'hc):(1'h0)] wire163;
  wire signed [(3'h4):(1'h0)] wire214;
  reg [(3'h6):(1'h0)] reg245 = (1'h0);
  reg [(4'h8):(1'h0)] reg244 = (1'h0);
  reg [(4'h9):(1'h0)] reg242 = (1'h0);
  reg [(3'h5):(1'h0)] reg241 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg239 = (1'h0);
  reg [(3'h7):(1'h0)] reg237 = (1'h0);
  reg [(5'h12):(1'h0)] reg235 = (1'h0);
  reg [(4'hb):(1'h0)] reg232 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg231 = (1'h0);
  reg [(4'hd):(1'h0)] reg230 = (1'h0);
  reg [(3'h5):(1'h0)] reg229 = (1'h0);
  reg [(5'h13):(1'h0)] reg228 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg227 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg226 = (1'h0);
  reg [(4'h8):(1'h0)] reg224 = (1'h0);
  reg [(4'h8):(1'h0)] reg223 = (1'h0);
  reg [(5'h10):(1'h0)] reg221 = (1'h0);
  reg signed [(4'he):(1'h0)] reg217 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar243 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar240 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg238 = (1'h0);
  reg [(4'hc):(1'h0)] forvar236 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar234 = (1'h0);
  reg [(4'ha):(1'h0)] forvar233 = (1'h0);
  reg [(4'h8):(1'h0)] forvar225 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg222 = (1'h0);
  reg [(3'h6):(1'h0)] forvar220 = (1'h0);
  assign y = {wire251,
                 wire250,
                 wire249,
                 wire248,
                 wire247,
                 wire246,
                 wire219,
                 wire218,
                 wire216,
                 wire149,
                 wire150,
                 wire151,
                 wire163,
                 wire214,
                 reg245,
                 reg244,
                 reg242,
                 reg241,
                 reg239,
                 reg237,
                 reg235,
                 reg232,
                 reg231,
                 reg230,
                 reg229,
                 reg228,
                 reg227,
                 reg226,
                 reg224,
                 reg223,
                 reg221,
                 reg217,
                 forvar243,
                 forvar240,
                 reg238,
                 forvar236,
                 forvar234,
                 forvar233,
                 forvar225,
                 reg222,
                 forvar220,
                 (1'h0)};
  assign wire149 = (((wire144 | (-wire145)) + (~&(wire145 + $signed(wire148)))) <= $signed((+(!wire148))));
  assign wire150 = (~|wire146[(2'h2):(1'h1)]);
  assign wire151 = ($signed(wire147) & wire148);
  module152 #() modinst164 (.wire153(wire147), .clk(clk), .wire154(wire144), .wire156(wire148), .y(wire163), .wire155(wire146));
  module165 #() modinst215 (wire214, clk, wire147, wire146, wire144, wire163, wire149);
  assign wire216 = (((wire144[(4'hf):(4'hb)] ?
                           wire147[(3'h5):(1'h0)] : ((!wire151) <<< {wire151,
                               wire214})) ?
                       wire149 : ($unsigned((wire151 ?
                           wire151 : wire144)) <= (~^wire144))) ~^ {wire150,
                       wire145[(4'h9):(3'h7)]});
  always
    @(posedge clk) begin
      reg217 <= (~^$signed({{$signed(wire146), (wire150 >> wire147)}}));
    end
  assign wire218 = (wire149 + ((((wire214 ?
                           wire146 : reg217) + $unsigned(wire216)) < ((+wire150) ?
                           wire216[(2'h2):(2'h2)] : $signed(reg217))) ?
                       {((wire151 ^ (8'hb8)) && $unsigned(reg217)),
                           wire150} : (^~$unsigned($unsigned((8'h9e))))));
  assign wire219 = $signed($signed((reg217[(4'hd):(3'h6)] ?
                       $signed(wire145[(3'h6):(1'h1)]) : (~&{wire150,
                           wire147}))));
  always
    @(posedge clk) begin
      for (forvar220 = (1'h0); (forvar220 < (1'h0)); forvar220 = (forvar220 + (1'h1)))
        begin
          if ($unsigned(forvar220))
            begin
              reg221 <= (8'hbf);
              reg222 = (wire149 ?
                  ({$signed($unsigned(wire163))} ?
                      wire144[(2'h2):(1'h1)] : $signed($signed(wire218[(1'h0):(1'h0)]))) : $signed((wire218 ?
                      wire216 : ((~&wire145) == wire144))));
            end
          else
            begin
              reg222 = (&wire145);
              reg223 <= ($unsigned((wire218 <<< $signed((wire144 ?
                  (8'hb5) : (8'hae))))) > wire149[(1'h0):(1'h0)]);
              reg224 <= wire219;
            end
          for (forvar225 = (1'h0); (forvar225 < (1'h1)); forvar225 = (forvar225 + (1'h1)))
            begin
              reg226 <= ((($unsigned($signed((8'hb3))) ?
                  wire149 : ({wire144, wire148} ?
                      forvar225[(2'h2):(1'h1)] : wire150)) - $unsigned($signed((wire150 - reg221)))) >>> {(^$signed($signed(wire146))),
                  (($signed((8'ha2)) && wire163) * wire150[(3'h6):(3'h5)])});
              reg227 <= ((^(-wire219)) ? reg224[(4'h8):(2'h3)] : wire150);
              reg228 <= {wire147[(3'h5):(1'h0)]};
              reg229 <= wire218;
            end
        end
      reg230 <= $unsigned(((&$unsigned((reg227 >>> wire216))) * (^~wire148)));
      reg231 <= wire147[(4'ha):(2'h2)];
      reg232 <= ((~^wire151) * wire216);
      for (forvar233 = (1'h0); (forvar233 < (2'h3)); forvar233 = (forvar233 + (1'h1)))
        begin
          for (forvar234 = (1'h0); (forvar234 < (1'h0)); forvar234 = (forvar234 + (1'h1)))
            begin
              reg235 <= $unsigned((+(8'ha9)));
            end
          for (forvar236 = (1'h0); (forvar236 < (1'h1)); forvar236 = (forvar236 + (1'h1)))
            begin
              reg237 <= ($unsigned(((^$unsigned(reg222)) ?
                  ((&reg222) - ((8'hb9) > (8'ha3))) : $unsigned(wire144[(4'h8):(3'h6)]))) | reg232[(4'ha):(3'h5)]);
              reg238 = (wire218[(4'hd):(4'hb)] - $signed($signed((~|((7'h43) ^ (8'hb8))))));
              reg239 <= wire214[(3'h4):(1'h0)];
            end
          for (forvar240 = (1'h0); (forvar240 < (1'h0)); forvar240 = (forvar240 + (1'h1)))
            begin
              reg241 <= $unsigned($signed(wire151));
              reg242 <= $signed(({$signed(reg221), reg228[(4'ha):(3'h7)]} ?
                  wire148[(4'hc):(4'h8)] : $unsigned({(~^(8'hb1))})));
            end
          for (forvar243 = (1'h0); (forvar243 < (2'h2)); forvar243 = (forvar243 + (1'h1)))
            begin
              reg244 <= ($signed((|((wire145 << (8'had)) ?
                      (8'ha8) : $signed(wire144)))) ?
                  $unsigned($unsigned(({forvar240, wire163} ?
                      $signed((8'hb8)) : (^~reg237)))) : $unsigned(forvar236));
              reg245 <= wire149[(1'h0):(1'h0)];
            end
        end
    end
  assign wire246 = wire163;
  assign wire247 = wire214;
  assign wire248 = ((|{$unsigned((reg239 >> (8'hae)))}) ?
                       (~^((&(wire147 ?
                           reg242 : wire216)) << wire144[(2'h3):(1'h0)])) : $unsigned(reg223[(4'h8):(3'h7)]));
  assign wire249 = (((($signed(wire150) ?
                           $unsigned(reg217) : reg232) == $signed((reg244 >> reg232))) ~^ reg217[(2'h3):(2'h3)]) ?
                       $signed($unsigned(((^~reg224) != ((7'h40) ?
                           wire147 : (8'haa))))) : (reg239 | reg230[(2'h2):(1'h1)]));
  assign wire250 = wire246[(4'h8):(2'h2)];
  assign wire251 = $unsigned($unsigned((&(reg245[(1'h1):(1'h1)] ?
                       $unsigned(reg237) : $signed(reg242)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module41  (y, clk, wire42, wire43, wire44, wire45, wire46);
  output wire [(32'h2c2):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h10):(1'h0)] wire42;
  input wire [(5'h15):(1'h0)] wire43;
  input wire signed [(5'h12):(1'h0)] wire44;
  input wire [(5'h11):(1'h0)] wire45;
  input wire signed [(5'h15):(1'h0)] wire46;
  wire [(5'h11):(1'h0)] wire66;
  wire signed [(3'h5):(1'h0)] wire68;
  wire signed [(3'h6):(1'h0)] wire69;
  wire [(5'h11):(1'h0)] wire70;
  wire signed [(5'h13):(1'h0)] wire123;
  wire [(4'h8):(1'h0)] wire139;
  reg [(4'hf):(1'h0)] reg120 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg114 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg113 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg109 = (1'h0);
  reg [(2'h3):(1'h0)] reg108 = (1'h0);
  reg [(4'hf):(1'h0)] reg105 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg103 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg102 = (1'h0);
  reg [(2'h2):(1'h0)] reg95 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg94 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg93 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg91 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg87 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg86 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg79 = (1'h0);
  reg [(5'h14):(1'h0)] reg77 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg74 = (1'h0);
  reg [(4'h9):(1'h0)] reg73 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg122 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg121 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar119 = (1'h0);
  reg [(2'h3):(1'h0)] reg118 = (1'h0);
  reg [(4'hf):(1'h0)] reg117 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar116 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar115 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar112 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg111 = (1'h0);
  reg [(4'h9):(1'h0)] reg110 = (1'h0);
  reg [(5'h15):(1'h0)] reg107 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar106 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg104 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar101 = (1'h0);
  reg [(4'h8):(1'h0)] reg100 = (1'h0);
  reg [(4'he):(1'h0)] reg99 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg98 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg97 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar96 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg92 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar90 = (1'h0);
  reg [(5'h12):(1'h0)] forvar89 = (1'h0);
  reg [(5'h14):(1'h0)] reg88 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar85 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg84 = (1'h0);
  reg [(4'hc):(1'h0)] forvar83 = (1'h0);
  reg [(4'hb):(1'h0)] reg82 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar81 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar80 = (1'h0);
  reg [(3'h5):(1'h0)] reg78 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar76 = (1'h0);
  reg [(5'h11):(1'h0)] reg75 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar72 = (1'h0);
  reg [(4'h8):(1'h0)] forvar71 = (1'h0);
  assign y = {wire66,
                 wire68,
                 wire69,
                 wire70,
                 wire123,
                 wire139,
                 reg120,
                 reg114,
                 reg113,
                 reg109,
                 reg108,
                 reg105,
                 reg103,
                 reg102,
                 reg95,
                 reg94,
                 reg93,
                 reg91,
                 reg87,
                 reg86,
                 reg79,
                 reg77,
                 reg74,
                 reg73,
                 reg122,
                 reg121,
                 forvar119,
                 reg118,
                 reg117,
                 forvar116,
                 forvar115,
                 forvar112,
                 reg111,
                 reg110,
                 reg107,
                 forvar106,
                 reg104,
                 forvar101,
                 reg100,
                 reg99,
                 reg98,
                 reg97,
                 forvar96,
                 reg92,
                 forvar90,
                 forvar89,
                 reg88,
                 forvar85,
                 reg84,
                 forvar83,
                 reg82,
                 forvar81,
                 forvar80,
                 reg78,
                 forvar76,
                 reg75,
                 forvar72,
                 forvar71,
                 (1'h0)};
  module47 #() modinst67 (wire66, clk, wire45, wire43, wire44, wire46);
  assign wire68 = (!(wire66[(3'h6):(3'h6)] & (wire46[(5'h12):(4'hf)] && (~wire44[(1'h0):(1'h0)]))));
  assign wire69 = (($signed(wire43) ?
                      wire66[(4'ha):(2'h2)] : ((^~((8'hb9) ? wire43 : wire45)) ?
                          $unsigned($signed(wire68)) : $signed((^wire46)))) & wire44);
  assign wire70 = wire43[(5'h11):(3'h6)];
  always
    @(posedge clk) begin
      for (forvar71 = (1'h0); (forvar71 < (1'h0)); forvar71 = (forvar71 + (1'h1)))
        begin
          for (forvar72 = (1'h0); (forvar72 < (1'h1)); forvar72 = (forvar72 + (1'h1)))
            begin
              reg73 <= (^~{$unsigned(wire42[(3'h6):(3'h4)]),
                  ($signed(wire69) <<< wire42[(3'h5):(3'h5)])});
              reg74 <= wire46[(3'h6):(3'h6)];
              reg75 = reg74;
            end
          for (forvar76 = (1'h0); (forvar76 < (2'h2)); forvar76 = (forvar76 + (1'h1)))
            begin
              reg77 <= $signed($unsigned((((forvar71 ~^ wire69) ?
                  (wire69 << wire68) : reg74[(3'h4):(1'h1)]) == $signed((wire46 & wire45)))));
              reg78 = forvar72[(4'he):(2'h2)];
            end
          reg79 <= $unsigned($unsigned($signed($signed((-reg75)))));
        end
      for (forvar80 = (1'h0); (forvar80 < (2'h2)); forvar80 = (forvar80 + (1'h1)))
        begin
          for (forvar81 = (1'h0); (forvar81 < (1'h1)); forvar81 = (forvar81 + (1'h1)))
            begin
              reg82 = $unsigned(((reg77 && wire66) ?
                  (~&((reg74 ? wire66 : forvar76) ?
                      (^forvar80) : $signed((8'hb6)))) : ($signed($unsigned(reg75)) + forvar71)));
            end
          for (forvar83 = (1'h0); (forvar83 < (1'h1)); forvar83 = (forvar83 + (1'h1)))
            begin
              reg84 = $signed($unsigned({wire46}));
            end
          for (forvar85 = (1'h0); (forvar85 < (3'h4)); forvar85 = (forvar85 + (1'h1)))
            begin
              reg86 <= (($unsigned(($signed(forvar81) ?
                      forvar83[(4'h9):(1'h1)] : (wire45 ?
                          reg79 : wire70))) * (($unsigned(forvar80) ?
                          (~wire69) : $unsigned((8'hb7))) ?
                      (reg79[(3'h6):(1'h0)] - (!wire43)) : ($unsigned(wire66) ?
                          $signed(wire44) : {wire45, reg77}))) ?
                  (wire68 > $signed(wire66)) : $signed($signed((wire44 ?
                      $signed(reg75) : {wire70, wire45}))));
              reg87 <= (&$unsigned(forvar80));
              reg88 = ((($unsigned(reg87) << wire42[(4'h8):(3'h7)]) & (wire69[(1'h1):(1'h1)] ?
                  wire45 : forvar80)) >> (8'ha9));
            end
        end
      for (forvar89 = (1'h0); (forvar89 < (2'h2)); forvar89 = (forvar89 + (1'h1)))
        begin
          for (forvar90 = (1'h0); (forvar90 < (2'h3)); forvar90 = (forvar90 + (1'h1)))
            begin
              reg91 <= (forvar81 ?
                  ((^~forvar81) ?
                      $signed(((&forvar76) == (wire42 ?
                          wire46 : forvar90))) : ($unsigned(forvar81[(3'h7):(2'h3)]) ?
                          $signed((reg79 ?
                              forvar83 : forvar83)) : ((&forvar83) ^ (reg74 | reg74)))) : {reg88[(1'h0):(1'h0)],
                      {$unsigned(reg88[(2'h2):(1'h0)]), wire43}});
              reg92 = (~reg75[(4'h8):(3'h5)]);
              reg93 <= (wire43 != wire68);
              reg94 <= forvar72[(1'h1):(1'h0)];
              reg95 <= {wire68, $signed(wire69[(3'h4):(2'h3)])};
            end
          for (forvar96 = (1'h0); (forvar96 < (1'h1)); forvar96 = (forvar96 + (1'h1)))
            begin
              reg97 = forvar76;
              reg98 = wire66;
              reg99 = ($unsigned($unsigned({reg82[(4'hb):(2'h3)],
                      $signed(forvar96)})) ?
                  ((7'h43) ?
                      $signed(reg87[(2'h3):(1'h0)]) : ($signed(((8'hae) ?
                          reg93 : forvar80)) << ($unsigned(wire66) > $signed(forvar89)))) : $signed((~&(&((8'haa) ^~ forvar96)))));
              reg100 = ((({(^~wire68)} ?
                          $signed({forvar96}) : $signed(wire42[(3'h7):(3'h6)])) ?
                      forvar76 : ($unsigned($unsigned(wire43)) == reg86[(4'hf):(3'h7)])) ?
                  {(((forvar89 == wire68) - (reg73 ?
                          (8'hb2) : wire43)) + (((8'hbd) + reg93) ~^ (+wire43)))} : {$signed($signed((~|forvar81)))});
            end
          for (forvar101 = (1'h0); (forvar101 < (1'h1)); forvar101 = (forvar101 + (1'h1)))
            begin
              reg102 <= (!((8'hba) ^ reg99[(1'h0):(1'h0)]));
              reg103 <= $signed((~|reg77));
              reg104 = ((|(((wire69 + reg87) > $signed(forvar85)) ?
                      (&(!forvar80)) : reg100)) ?
                  reg94 : $unsigned((|($unsigned(forvar90) ?
                      forvar90 : $signed(reg97)))));
              reg105 <= reg88[(3'h6):(1'h0)];
            end
          for (forvar106 = (1'h0); (forvar106 < (3'h4)); forvar106 = (forvar106 + (1'h1)))
            begin
              reg107 = forvar101[(3'h4):(1'h1)];
              reg108 <= $signed($signed((8'h9f)));
              reg109 <= wire68;
              reg110 = (reg109 ? reg84 : (-$signed((^{reg73, forvar80}))));
              reg111 = ({reg102[(4'ha):(4'h9)]} || $unsigned((($signed(reg107) ?
                      reg87[(2'h3):(1'h0)] : $signed((7'h42))) ?
                  ((forvar83 ? reg105 : reg75) ?
                      (8'ha5) : $unsigned(wire43)) : (~^reg94))));
            end
          for (forvar112 = (1'h0); (forvar112 < (1'h1)); forvar112 = (forvar112 + (1'h1)))
            begin
              reg113 <= $unsigned({forvar106[(4'hc):(4'ha)]});
              reg114 <= (~wire70);
            end
        end
      for (forvar115 = (1'h0); (forvar115 < (3'h4)); forvar115 = (forvar115 + (1'h1)))
        begin
          for (forvar116 = (1'h0); (forvar116 < (1'h0)); forvar116 = (forvar116 + (1'h1)))
            begin
              reg117 = {$signed((wire44 || forvar72)),
                  $unsigned((($unsigned(reg78) ?
                          $unsigned(reg94) : wire44[(4'ha):(1'h1)]) ?
                      $signed({(8'hab)}) : ((reg95 ~^ wire46) ?
                          reg92[(5'h10):(5'h10)] : (reg99 > (7'h42)))))};
              reg118 = (forvar85 >> (~&reg104));
            end
          for (forvar119 = (1'h0); (forvar119 < (2'h3)); forvar119 = (forvar119 + (1'h1)))
            begin
              reg120 <= {reg107[(5'h13):(4'hf)]};
              reg121 = reg92[(5'h10):(4'hf)];
              reg122 = ((~&$signed((+(reg82 ? (7'h41) : reg111)))) ?
                  $unsigned($signed(($signed(wire45) ^ ((8'hb3) ?
                      reg100 : wire66)))) : ($signed(((^~(8'hac)) ?
                      {wire43} : reg108[(1'h1):(1'h0)])) && reg73[(3'h4):(1'h1)]));
            end
        end
    end
  assign wire123 = reg120[(2'h3):(1'h0)];
  module124 #() modinst140 (wire139, clk, reg113, reg74, wire42, wire46, wire66);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module124
#(parameter param138 = (|(|{(((8'hab) ? (8'ha8) : (8'ha3)) ^ {(7'h42), (8'ha0)})})))
(y, clk, wire129, wire128, wire127, wire126, wire125);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hd):(1'h0)] wire129;
  input wire signed [(4'hb):(1'h0)] wire128;
  input wire signed [(5'h10):(1'h0)] wire127;
  input wire [(4'h9):(1'h0)] wire126;
  input wire signed [(5'h11):(1'h0)] wire125;
  wire signed [(5'h10):(1'h0)] wire137;
  wire signed [(4'hc):(1'h0)] wire136;
  wire signed [(4'he):(1'h0)] wire134;
  wire signed [(5'h12):(1'h0)] wire133;
  wire signed [(4'hb):(1'h0)] wire132;
  wire signed [(3'h4):(1'h0)] wire131;
  wire signed [(2'h3):(1'h0)] wire130;
  reg [(4'hc):(1'h0)] reg135 = (1'h0);
  assign y = {wire137,
                 wire136,
                 wire134,
                 wire133,
                 wire132,
                 wire131,
                 wire130,
                 reg135,
                 (1'h0)};
  assign wire130 = wire128;
  assign wire131 = {(wire127 & $signed((wire125[(4'hc):(1'h1)] ?
                           {wire129, wire130} : (wire125 < wire127)))),
                       (^~$signed((&wire130)))};
  assign wire132 = (&wire129[(4'ha):(4'h8)]);
  assign wire133 = {$unsigned((8'h9d))};
  assign wire134 = wire127[(4'hc):(3'h4)];
  always
    @(posedge clk) begin
      reg135 <= {wire134};
    end
  assign wire136 = wire132[(1'h0):(1'h0)];
  assign wire137 = reg135[(3'h6):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module47
#(parameter param65 = (~^({((~|(8'h9d)) ? {(8'hb8), (7'h41)} : ((8'hab) && (8'ha8)))} ~^ (~^(~((7'h43) + (8'ha4)))))))
(y, clk, wire51, wire50, wire49, wire48);
  output wire [(32'h96):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h11):(1'h0)] wire51;
  input wire [(4'hb):(1'h0)] wire50;
  input wire [(5'h12):(1'h0)] wire49;
  input wire signed [(5'h15):(1'h0)] wire48;
  wire [(5'h11):(1'h0)] wire64;
  wire signed [(3'h7):(1'h0)] wire63;
  wire signed [(5'h14):(1'h0)] wire62;
  wire [(5'h12):(1'h0)] wire61;
  wire signed [(3'h5):(1'h0)] wire60;
  wire signed [(2'h3):(1'h0)] wire59;
  wire signed [(3'h4):(1'h0)] wire58;
  wire [(4'hb):(1'h0)] wire57;
  wire [(4'h8):(1'h0)] wire56;
  wire signed [(5'h11):(1'h0)] wire55;
  wire [(4'hd):(1'h0)] wire54;
  wire [(4'hd):(1'h0)] wire53;
  wire signed [(4'hd):(1'h0)] wire52;
  assign y = {wire64,
                 wire63,
                 wire62,
                 wire61,
                 wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 (1'h0)};
  assign wire52 = ($signed((-{wire48,
                      wire51[(5'h11):(4'h9)]})) >= (&$unsigned(wire50[(1'h0):(1'h0)])));
  assign wire53 = $unsigned((((|$signed(wire49)) & ($signed(wire51) ?
                      (wire49 ?
                          wire48 : wire48) : wire50)) & $unsigned(wire49[(4'he):(4'h8)])));
  assign wire54 = (!$unsigned(wire48));
  assign wire55 = $signed($unsigned(wire48));
  assign wire56 = wire52[(2'h3):(1'h1)];
  assign wire57 = {wire52[(4'h8):(3'h4)]};
  assign wire58 = $unsigned($unsigned((wire51[(1'h1):(1'h1)] ?
                      ((wire57 ? wire51 : wire55) ?
                          wire53[(4'hc):(1'h0)] : (wire48 << (8'ha4))) : wire48[(4'hd):(2'h3)])));
  assign wire59 = (wire58[(3'h4):(1'h0)] > $unsigned($signed(($signed(wire53) ?
                      $signed(wire51) : ((8'h9f) ? wire54 : wire57)))));
  assign wire60 = {$signed(($unsigned((-wire59)) ?
                          $signed(wire53[(3'h5):(1'h0)]) : ($signed(wire52) << $signed(wire48))))};
  assign wire61 = ($unsigned((-$unsigned((8'hb7)))) ?
                      ((^~wire49[(3'h4):(1'h0)]) >>> wire57) : $unsigned(wire59[(2'h3):(2'h2)]));
  assign wire62 = $unsigned((wire61[(5'h10):(5'h10)] ?
                      $unsigned($signed(((8'ha9) ?
                          wire52 : wire49))) : wire52));
  assign wire63 = (8'h9d);
  assign wire64 = ((~&($signed((wire63 ?
                          wire61 : wire48)) || $unsigned((wire52 | wire58)))) ?
                      (8'h9d) : wire52[(1'h1):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module165  (y, clk, wire170, wire169, wire168, wire167, wire166);
  output wire [(32'h223):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h10):(1'h0)] wire170;
  input wire [(4'hb):(1'h0)] wire169;
  input wire signed [(3'h4):(1'h0)] wire168;
  input wire signed [(4'hc):(1'h0)] wire167;
  input wire [(4'hb):(1'h0)] wire166;
  wire signed [(5'h10):(1'h0)] wire213;
  wire signed [(5'h13):(1'h0)] wire212;
  wire [(5'h10):(1'h0)] wire211;
  wire signed [(5'h14):(1'h0)] wire210;
  wire [(5'h12):(1'h0)] wire174;
  wire signed [(4'ha):(1'h0)] wire173;
  wire signed [(5'h12):(1'h0)] wire172;
  wire signed [(4'hb):(1'h0)] wire171;
  reg signed [(4'h8):(1'h0)] reg209 = (1'h0);
  reg [(2'h2):(1'h0)] reg208 = (1'h0);
  reg [(4'h9):(1'h0)] reg207 = (1'h0);
  reg [(2'h3):(1'h0)] reg206 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg203 = (1'h0);
  reg [(3'h5):(1'h0)] reg197 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg195 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg193 = (1'h0);
  reg [(4'hf):(1'h0)] reg192 = (1'h0);
  reg [(5'h15):(1'h0)] reg189 = (1'h0);
  reg [(3'h5):(1'h0)] reg188 = (1'h0);
  reg [(4'hd):(1'h0)] reg185 = (1'h0);
  reg [(5'h10):(1'h0)] reg184 = (1'h0);
  reg [(4'hc):(1'h0)] reg183 = (1'h0);
  reg [(3'h6):(1'h0)] reg177 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg205 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar204 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg202 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg201 = (1'h0);
  reg [(4'ha):(1'h0)] forvar200 = (1'h0);
  reg [(5'h12):(1'h0)] reg199 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar198 = (1'h0);
  reg [(5'h12):(1'h0)] reg196 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg194 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar191 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar190 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar187 = (1'h0);
  reg [(5'h13):(1'h0)] reg186 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg182 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar181 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg180 = (1'h0);
  reg [(2'h2):(1'h0)] reg179 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar178 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar176 = (1'h0);
  reg [(5'h15):(1'h0)] forvar175 = (1'h0);
  assign y = {wire213,
                 wire212,
                 wire211,
                 wire210,
                 wire174,
                 wire173,
                 wire172,
                 wire171,
                 reg209,
                 reg208,
                 reg207,
                 reg206,
                 reg203,
                 reg197,
                 reg195,
                 reg193,
                 reg192,
                 reg189,
                 reg188,
                 reg185,
                 reg184,
                 reg183,
                 reg177,
                 reg205,
                 forvar204,
                 reg202,
                 reg201,
                 forvar200,
                 reg199,
                 forvar198,
                 reg196,
                 reg194,
                 forvar191,
                 forvar190,
                 forvar187,
                 reg186,
                 reg182,
                 forvar181,
                 reg180,
                 reg179,
                 forvar178,
                 forvar176,
                 forvar175,
                 (1'h0)};
  assign wire171 = wire168;
  assign wire172 = $unsigned(wire171[(3'h5):(2'h2)]);
  assign wire173 = $unsigned($signed(((8'hb6) + $unsigned((wire172 <= wire166)))));
  assign wire174 = $unsigned(wire170[(3'h6):(3'h5)]);
  always
    @(posedge clk) begin
      for (forvar175 = (1'h0); (forvar175 < (1'h0)); forvar175 = (forvar175 + (1'h1)))
        begin
          for (forvar176 = (1'h0); (forvar176 < (3'h4)); forvar176 = (forvar176 + (1'h1)))
            begin
              reg177 <= {$unsigned($signed({wire172[(2'h2):(2'h2)],
                      $signed(wire172)})),
                  (wire168[(2'h3):(1'h1)] << $unsigned((+(~&wire168))))};
            end
          for (forvar178 = (1'h0); (forvar178 < (1'h0)); forvar178 = (forvar178 + (1'h1)))
            begin
              reg179 = ((-(!$unsigned($unsigned((8'h9e))))) >> $unsigned($unsigned($signed(wire171))));
            end
          reg180 = (wire172[(4'h8):(2'h2)] ?
              (&(((~^wire167) || {(8'hb6), (8'hbf)}) ?
                  ((wire169 ? wire172 : forvar176) ?
                      (wire166 ~^ wire174) : wire172) : (~^(wire166 ?
                      forvar176 : wire169)))) : wire166);
          for (forvar181 = (1'h0); (forvar181 < (1'h1)); forvar181 = (forvar181 + (1'h1)))
            begin
              reg182 = (~^wire167);
              reg183 <= {forvar175[(4'hf):(2'h3)], reg179[(1'h1):(1'h0)]};
              reg184 <= ((^~((wire166[(4'ha):(3'h4)] * (wire172 || wire173)) > reg182)) ?
                  wire166 : forvar175);
              reg185 <= reg183[(1'h1):(1'h1)];
              reg186 = reg180;
            end
          for (forvar187 = (1'h0); (forvar187 < (1'h1)); forvar187 = (forvar187 + (1'h1)))
            begin
              reg188 <= (reg185 ?
                  $signed(wire172[(3'h5):(1'h0)]) : ($unsigned((~&reg179)) <<< forvar178[(4'h8):(3'h4)]));
              reg189 <= reg188;
            end
        end
      for (forvar190 = (1'h0); (forvar190 < (3'h4)); forvar190 = (forvar190 + (1'h1)))
        begin
          for (forvar191 = (1'h0); (forvar191 < (3'h4)); forvar191 = (forvar191 + (1'h1)))
            begin
              reg192 <= wire170[(1'h0):(1'h0)];
              reg193 <= (reg179 >>> (($unsigned({wire174}) && reg188[(1'h0):(1'h0)]) ?
                  (reg188[(2'h2):(1'h1)] - (|(8'ha5))) : $signed($unsigned($signed(reg186)))));
            end
          if (((($signed((wire169 ?
                  reg189 : wire167)) ^~ (~$unsigned(forvar178))) >>> wire169[(2'h2):(1'h0)]) ?
              $unsigned($unsigned(({forvar191} & reg179))) : (wire173 ^~ (((reg186 ?
                  forvar176 : reg189) | $unsigned((8'ha8))) && $unsigned($unsigned(forvar178))))))
            begin
              reg194 = {(forvar187[(1'h1):(1'h1)] < reg185),
                  ($signed($unsigned({wire168, wire173})) ?
                      forvar181 : ($signed(reg186) ?
                          forvar178 : (reg182 != wire173[(3'h6):(1'h0)])))};
              reg195 <= (+(~|$signed((wire172 ^ (!wire166)))));
            end
          else
            begin
              reg194 = ($unsigned(($unsigned({wire168,
                      forvar176}) <= ((!(8'hb0)) & $signed(reg177)))) ?
                  (-{(+(reg185 & reg179))}) : (+(~|($signed(forvar176) ?
                      (~^wire169) : $unsigned(wire168)))));
              reg196 = wire171[(4'hb):(1'h1)];
            end
          reg197 <= $unsigned($unsigned((forvar187 >> (reg182 <<< forvar175))));
        end
      for (forvar198 = (1'h0); (forvar198 < (3'h4)); forvar198 = (forvar198 + (1'h1)))
        begin
          reg199 = {$signed(wire171)};
          for (forvar200 = (1'h0); (forvar200 < (1'h0)); forvar200 = (forvar200 + (1'h1)))
            begin
              reg201 = ((forvar181[(3'h5):(2'h3)] ^ $unsigned(reg180[(3'h6):(3'h5)])) && wire171[(2'h2):(1'h1)]);
              reg202 = $signed((8'haa));
              reg203 <= wire168;
            end
          for (forvar204 = (1'h0); (forvar204 < (3'h4)); forvar204 = (forvar204 + (1'h1)))
            begin
              reg205 = reg199[(3'h7):(3'h6)];
              reg206 <= {$signed(($signed((wire173 ?
                      reg205 : reg180)) && forvar187[(4'hb):(4'h8)])),
                  (!({reg199} ?
                      reg180[(4'ha):(4'h9)] : reg205[(1'h1):(1'h1)]))};
              reg207 <= reg206;
              reg208 <= forvar191[(1'h1):(1'h1)];
              reg209 <= ((^(({forvar176} << {reg186}) ^~ $signed((reg193 ?
                  reg194 : (7'h44))))) >>> forvar200);
            end
        end
    end
  assign wire210 = $signed(reg207[(2'h3):(2'h3)]);
  assign wire211 = $signed(wire166[(3'h6):(3'h4)]);
  assign wire212 = {$unsigned($signed(reg185)),
                       ((^~($unsigned((8'hba)) << {wire173,
                           (8'h9f)})) ~^ ((~|(^~reg185)) < reg206))};
  assign wire213 = reg189[(4'hd):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module152  (y, clk, wire156, wire155, wire154, wire153);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire156;
  input wire [(4'hc):(1'h0)] wire155;
  input wire [(4'hf):(1'h0)] wire154;
  input wire signed [(5'h15):(1'h0)] wire153;
  wire signed [(3'h7):(1'h0)] wire162;
  wire [(4'hf):(1'h0)] wire161;
  wire [(4'hf):(1'h0)] wire160;
  wire signed [(4'he):(1'h0)] wire159;
  wire signed [(5'h10):(1'h0)] wire158;
  wire signed [(3'h7):(1'h0)] wire157;
  assign y = {wire162, wire161, wire160, wire159, wire158, wire157, (1'h0)};
  assign wire157 = $signed({{wire153[(5'h15):(5'h10)]}});
  assign wire158 = wire156[(2'h3):(1'h1)];
  assign wire159 = ((~&(wire158[(4'h9):(2'h2)] ?
                           (+$signed(wire155)) : ((|wire158) ?
                               $unsigned(wire153) : (~^wire155)))) ?
                       $unsigned({wire155[(1'h1):(1'h0)]}) : wire153);
  assign wire160 = (&(+wire156[(3'h7):(2'h3)]));
  assign wire161 = (^~(8'ha3));
  assign wire162 = (wire157 ? $signed((8'h9f)) : (8'ha0));
endmodule