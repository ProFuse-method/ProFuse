(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h32):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire45;
  wire [(3'h7):(1'h0)] wire44;
  wire [(2'h2):(1'h0)] wire43;
  wire signed [(4'h9):(1'h0)] wire42;
  wire signed [(4'hb):(1'h0)] wire40;
  wire [(3'h6):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire4;
  assign y = {wire45, wire44, wire43, wire42, wire40, wire5, wire4, (1'h0)};
  assign wire4 = (~^wire1[(4'ha):(2'h3)]);
  assign wire5 = $signed(($unsigned($unsigned(wire0)) ?
                     (8'hab) : $unsigned((+wire4))));
  module6 #() modinst41 (.wire8(wire2), .y(wire40), .wire7(wire1), .wire10(wire0), .wire9(wire4), .clk(clk));
  assign wire42 = ((+wire5) ?
                      (($signed(wire1) != $unsigned((8'had))) & wire0[(4'h9):(3'h7)]) : {((wire4 + (8'ha4)) == (wire3 >= wire40))});
  assign wire43 = $unsigned(wire40);
  assign wire44 = wire5[(3'h4):(1'h1)];
  assign wire45 = (~({(wire42 ? wire44 : wire43)} | $signed($unsigned(wire3))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire10;
  input wire [(4'ha):(1'h0)] wire9;
  input wire signed [(4'h8):(1'h0)] wire8;
  input wire [(4'hb):(1'h0)] wire7;
  wire signed [(3'h7):(1'h0)] wire38;
  wire signed [(3'h5):(1'h0)] wire26;
  wire signed [(3'h5):(1'h0)] wire24;
  wire [(4'hb):(1'h0)] wire13;
  wire [(4'ha):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire11;
  assign y = {wire38, wire26, wire24, wire13, wire12, wire11, (1'h0)};
  assign wire11 = ((8'ha9) ?
                      (~((wire10 || (8'ha6)) ?
                          $unsigned(wire8) : (&wire9))) : ($signed((wire7 > wire9)) ?
                          wire8[(1'h1):(1'h0)] : $unsigned(wire8)));
  assign wire12 = $unsigned((~{wire9}));
  assign wire13 = $unsigned(wire9[(1'h1):(1'h0)]);
  module14 #() modinst25 (.y(wire24), .wire17(wire13), .wire16(wire12), .clk(clk), .wire15(wire10), .wire18(wire9));
  assign wire26 = $unsigned(({(wire24 ~^ wire11)} ?
                      wire9 : wire10[(2'h2):(1'h0)]));
  module27 #() modinst39 (.wire29(wire13), .clk(clk), .wire28(wire10), .y(wire38), .wire30(wire9), .wire31(wire12));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module27
#(parameter param37 = ({(+{(8'haa)})} ? (~&(((8'had) == (8'ha7)) ? (~(8'haf)) : {(8'ha5)})) : ((8'ha9) ? ((~(8'h9e)) ? ((8'ha7) ? (8'h9c) : (8'ha1)) : (!(8'ha4))) : (((8'ha7) * (8'ha1)) ? {(8'h9c)} : (!(8'h9d))))))
(y, clk, wire31, wire30, wire29, wire28);
  output wire [(32'h17):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire31;
  input wire signed [(4'ha):(1'h0)] wire30;
  input wire signed [(4'hb):(1'h0)] wire29;
  input wire [(2'h3):(1'h0)] wire28;
  wire [(3'h7):(1'h0)] wire34;
  wire signed [(4'h8):(1'h0)] wire33;
  wire signed [(2'h2):(1'h0)] wire32;
  reg signed [(2'h2):(1'h0)] reg36 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg35 = (1'h0);
  assign y = {wire34, wire33, wire32, reg36, reg35, (1'h0)};
  assign wire32 = $unsigned({(!wire30)});
  assign wire33 = $unsigned(wire32);
  assign wire34 = (wire28 ?
                      ($unsigned((+wire30)) ?
                          $signed((~&wire32)) : ({wire30} ?
                              (-(8'ha8)) : wire29)) : (8'ha5));
  always
    @(posedge clk) begin
      reg35 <= wire30[(4'ha):(1'h1)];
      reg36 <= (-{$signed($unsigned((8'ha9)))});
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14
#(parameter param23 = (((!(-(8'h9c))) ? ((8'ha4) + ((8'hac) ? (8'hae) : (8'ha5))) : ((~^(8'h9d)) > (|(8'haa)))) ? (&(((8'hae) >> (8'ha8)) ? ((8'ha7) ? (8'haa) : (8'h9c)) : (!(8'ha0)))) : ((8'ha3) ? (~^{(8'h9d)}) : ((~^(8'hab)) ^ (^~(8'h9d))))))
(y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h14):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire18;
  input wire signed [(3'h6):(1'h0)] wire17;
  input wire signed [(4'ha):(1'h0)] wire16;
  input wire [(4'hb):(1'h0)] wire15;
  wire signed [(3'h6):(1'h0)] wire22;
  wire [(3'h4):(1'h0)] wire21;
  wire signed [(2'h2):(1'h0)] wire20;
  wire signed [(3'h7):(1'h0)] wire19;
  assign y = {wire22, wire21, wire20, wire19, (1'h0)};
  assign wire19 = (!($unsigned((wire17 >>> wire16)) ?
                      (&(~wire15)) : ((~|wire16) ?
                          {wire17} : wire16[(3'h4):(1'h1)])));
  assign wire20 = (!(8'ha2));
  assign wire21 = ((~^$unsigned($signed(wire15))) - $unsigned($signed((wire16 | (8'ha0)))));
  assign wire22 = (~|wire17[(3'h5):(1'h1)]);
endmodule