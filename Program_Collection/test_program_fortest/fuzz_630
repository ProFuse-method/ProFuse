(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param11 = ((!((^~(8'h9e)) ? {(8'h9e)} : ((8'ha6) ? (8'h9d) : (8'hae)))) != {{(+(8'ha0))}}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire10;
  wire [(4'h8):(1'h0)] wire9;
  wire [(4'hb):(1'h0)] wire4;
  reg [(3'h7):(1'h0)] reg8 = (1'h0);
  reg [(4'hb):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg5 = (1'h0);
  assign y = {wire10, wire9, wire4, reg8, reg7, reg6, reg5, (1'h0)};
  assign wire4 = $unsigned(wire1[(1'h1):(1'h1)]);
  always
    @(posedge clk) begin
      reg5 <= wire3;
      reg6 <= {$unsigned((~wire3))};
      if ((^~$unsigned(((wire2 ? wire1 : reg5) - wire3[(2'h2):(2'h2)]))))
        begin
          reg7 <= {(8'ha1)};
          reg8 <= ($unsigned(((~&reg5) << ((8'h9d) ? (8'hab) : (8'hb0)))) ?
              (8'ha0) : $unsigned(($signed(reg6) && (wire4 | wire3))));
        end
      else
        begin
          reg7 <= reg6[(3'h6):(3'h6)];
          reg8 <= $signed(reg8[(3'h4):(1'h1)]);
        end
    end
  assign wire9 = $signed({$unsigned((reg5 >= (8'h9e)))});
  assign wire10 = wire2[(2'h3):(2'h2)];
endmodule