(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h43):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(3'h4):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire12;
  wire [(3'h5):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire10;
  wire [(4'hb):(1'h0)] wire9;
  wire signed [(2'h3):(1'h0)] wire8;
  wire signed [(3'h5):(1'h0)] wire4;
  reg signed [(2'h3):(1'h0)] reg7 = (1'h0);
  reg [(4'hb):(1'h0)] reg6 = (1'h0);
  reg [(3'h6):(1'h0)] reg5 = (1'h0);
  assign y = {wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire4,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = wire0[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      reg5 <= (-$signed((~wire1)));
      reg6 <= $signed((-$signed(wire2)));
      reg7 <= {{($signed(wire3) >= (+wire4))}};
    end
  assign wire8 = $signed(reg7);
  assign wire9 = $signed(reg7[(1'h1):(1'h1)]);
  assign wire10 = (8'ha1);
  assign wire11 = $unsigned(wire2[(3'h4):(2'h3)]);
  assign wire12 = $signed(wire1[(2'h3):(2'h3)]);
endmodule