(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire4;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire signed [(5'h12):(1'h0)] wire2;
  input wire signed [(4'hf):(1'h0)] wire1;
  input wire [(4'hc):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire51;
  wire signed [(4'h8):(1'h0)] wire50;
  wire signed [(5'h14):(1'h0)] wire49;
  wire [(5'h11):(1'h0)] wire47;
  wire signed [(5'h15):(1'h0)] wire5;
  assign y = {wire51, wire50, wire49, wire47, wire5, (1'h0)};
  assign wire5 = wire3[(3'h4):(3'h4)];
  module6 #() modinst48 (wire47, clk, wire1, wire3, wire2, wire0);
  assign wire49 = wire4[(1'h0):(1'h0)];
  assign wire50 = wire1[(4'h9):(3'h5)];
  assign wire51 = wire2;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param45 = {((({(8'hb1), (8'hb9)} ? ((7'h42) ? (8'hba) : (8'hb1)) : (~&(8'hb0))) ? (^~{(8'had), (7'h40)}) : ({(8'hb1)} <<< ((8'ha1) ? (8'ha0) : (8'hb1)))) ? {{((8'hb7) ^ (8'ha4)), ((8'ha0) ? (8'haa) : (8'hb7))}, ((~(7'h44)) ? ((7'h43) < (7'h41)) : ((8'ha2) || (8'h9c)))} : {{((8'ha2) - (8'hb5))}, ((8'hb7) >= ((8'hbf) >>> (8'ha9)))})}, 
parameter param46 = param45)
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h18e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hf):(1'h0)] wire10;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire [(4'hd):(1'h0)] wire8;
  input wire signed [(4'hc):(1'h0)] wire7;
  wire [(5'h11):(1'h0)] wire44;
  wire signed [(5'h11):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire12;
  wire [(5'h13):(1'h0)] wire11;
  reg signed [(4'hf):(1'h0)] reg43 = (1'h0);
  reg [(4'he):(1'h0)] reg42 = (1'h0);
  reg [(4'ha):(1'h0)] reg40 = (1'h0);
  reg [(5'h11):(1'h0)] reg38 = (1'h0);
  reg [(2'h2):(1'h0)] reg37 = (1'h0);
  reg [(4'he):(1'h0)] reg36 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg33 = (1'h0);
  reg [(3'h7):(1'h0)] reg30 = (1'h0);
  reg [(4'h8):(1'h0)] reg26 = (1'h0);
  reg [(3'h4):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg21 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg17 = (1'h0);
  reg [(4'h8):(1'h0)] reg16 = (1'h0);
  reg [(2'h2):(1'h0)] forvar41 = (1'h0);
  reg [(4'hc):(1'h0)] reg39 = (1'h0);
  reg [(4'hc):(1'h0)] forvar35 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg34 = (1'h0);
  reg [(4'ha):(1'h0)] reg32 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg31 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar29 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar28 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg24 = (1'h0);
  reg [(4'hd):(1'h0)] forvar23 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar22 = (1'h0);
  reg [(4'h8):(1'h0)] forvar20 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg19 = (1'h0);
  reg [(3'h7):(1'h0)] reg18 = (1'h0);
  reg [(3'h7):(1'h0)] forvar15 = (1'h0);
  reg [(5'h10):(1'h0)] forvar14 = (1'h0);
  assign y = {wire44,
                 wire13,
                 wire12,
                 wire11,
                 reg43,
                 reg42,
                 reg40,
                 reg38,
                 reg37,
                 reg36,
                 reg33,
                 reg30,
                 reg26,
                 reg25,
                 reg21,
                 reg17,
                 reg16,
                 forvar41,
                 reg39,
                 forvar35,
                 reg34,
                 reg32,
                 reg31,
                 forvar29,
                 forvar28,
                 reg27,
                 reg24,
                 forvar23,
                 forvar22,
                 forvar20,
                 reg19,
                 reg18,
                 forvar15,
                 forvar14,
                 (1'h0)};
  assign wire11 = ($signed($unsigned(wire8)) ?
                      $unsigned($signed(((wire8 - (8'had)) ?
                          wire7 : wire8[(4'ha):(4'h9)]))) : (wire8 <<< {$signed($unsigned(wire8)),
                          ((wire10 ? (8'hb3) : (8'hba)) ?
                              (wire7 ? wire9 : wire9) : (7'h42))}));
  assign wire12 = (~|wire7[(2'h3):(1'h1)]);
  assign wire13 = (wire9 ~^ (wire10 >= ($signed(wire10[(4'h8):(3'h4)]) == ({wire10,
                      wire12} >> (^~wire9)))));
  always
    @(posedge clk) begin
      for (forvar14 = (1'h0); (forvar14 < (1'h1)); forvar14 = (forvar14 + (1'h1)))
        begin
          for (forvar15 = (1'h0); (forvar15 < (3'h4)); forvar15 = (forvar15 + (1'h1)))
            begin
              reg16 <= $signed(forvar15);
              reg17 <= (!forvar14[(1'h0):(1'h0)]);
              reg18 = wire9[(4'ha):(3'h6)];
              reg19 = wire9;
            end
        end
      for (forvar20 = (1'h0); (forvar20 < (1'h1)); forvar20 = (forvar20 + (1'h1)))
        begin
          reg21 <= ((-$signed(($signed(forvar14) ?
              wire10[(4'hf):(3'h7)] : ((8'ha1) ?
                  reg17 : wire13)))) <= $signed({(^wire10[(4'hd):(3'h4)]),
              reg18}));
        end
      for (forvar22 = (1'h0); (forvar22 < (2'h3)); forvar22 = (forvar22 + (1'h1)))
        begin
          for (forvar23 = (1'h0); (forvar23 < (2'h2)); forvar23 = (forvar23 + (1'h1)))
            begin
              reg24 = (($unsigned(reg19[(3'h6):(2'h3)]) * $signed((~^$unsigned(wire11)))) != wire13[(4'h9):(2'h3)]);
              reg25 <= $signed(reg16[(1'h1):(1'h0)]);
              reg26 <= $signed(wire13[(4'h9):(2'h2)]);
              reg27 = ($signed(wire9[(2'h3):(2'h2)]) ?
                  forvar20 : ((~^$unsigned(forvar15[(1'h1):(1'h0)])) <<< $signed(reg24)));
            end
        end
      for (forvar28 = (1'h0); (forvar28 < (3'h4)); forvar28 = (forvar28 + (1'h1)))
        begin
          for (forvar29 = (1'h0); (forvar29 < (3'h4)); forvar29 = (forvar29 + (1'h1)))
            begin
              reg30 <= (~(~&$signed(reg25)));
              reg31 = $unsigned($unsigned($signed($signed(forvar28))));
              reg32 = reg25;
              reg33 <= {$signed(wire10[(4'hb):(1'h1)]),
                  $signed($signed($signed($unsigned(forvar29))))};
              reg34 = (reg24 ? $unsigned({(^$signed(wire11))}) : (8'ha1));
            end
          for (forvar35 = (1'h0); (forvar35 < (2'h3)); forvar35 = (forvar35 + (1'h1)))
            begin
              reg36 <= reg34;
              reg37 <= $signed($signed((wire11 ?
                  $signed($unsigned(wire11)) : $signed({reg27}))));
              reg38 <= reg37;
              reg39 = ({((forvar23[(4'ha):(1'h1)] - $signed((8'hbc))) ^~ ((8'ha5) >> reg34))} ?
                  {(({reg30, wire10} ? (+wire7) : reg21[(2'h2):(1'h1)]) ?
                          reg38[(3'h7):(3'h4)] : ((reg32 ? forvar28 : reg25) ?
                              reg37 : {forvar29,
                                  (8'hb7)}))} : $signed($signed(reg33[(3'h4):(1'h1)])));
              reg40 <= forvar35[(4'hc):(3'h6)];
            end
          for (forvar41 = (1'h0); (forvar41 < (2'h3)); forvar41 = (forvar41 + (1'h1)))
            begin
              reg42 <= $unsigned(reg34[(5'h12):(4'h9)]);
            end
          reg43 <= $signed((8'h9c));
        end
    end
  assign wire44 = {reg30, $signed((({(7'h41)} > $unsigned(reg38)) & (~reg43)))};
endmodule