(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1fd):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'hc):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire signed [(5'h10):(1'h0)] wire0;
  wire [(5'h14):(1'h0)] wire21;
  wire signed [(4'hf):(1'h0)] wire20;
  wire [(4'hd):(1'h0)] wire11;
  wire [(4'hc):(1'h0)] wire10;
  wire [(2'h2):(1'h0)] wire9;
  wire signed [(4'ha):(1'h0)] wire8;
  wire signed [(3'h6):(1'h0)] wire7;
  wire signed [(4'he):(1'h0)] wire6;
  wire signed [(5'h13):(1'h0)] wire5;
  wire signed [(5'h14):(1'h0)] wire4;
  reg [(4'hc):(1'h0)] reg43 = (1'h0);
  reg [(5'h13):(1'h0)] reg42 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg38 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg33 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg32 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg [(3'h5):(1'h0)] reg26 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg17 = (1'h0);
  reg [(5'h11):(1'h0)] reg16 = (1'h0);
  reg [(5'h13):(1'h0)] reg15 = (1'h0);
  reg [(4'hd):(1'h0)] reg14 = (1'h0);
  reg [(4'h9):(1'h0)] reg44 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar41 = (1'h0);
  reg [(5'h10):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg39 = (1'h0);
  reg [(5'h12):(1'h0)] forvar37 = (1'h0);
  reg [(4'h9):(1'h0)] reg36 = (1'h0);
  reg [(4'h8):(1'h0)] forvar31 = (1'h0);
  reg signed [(4'he):(1'h0)] reg29 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg28 = (1'h0);
  reg [(5'h11):(1'h0)] reg27 = (1'h0);
  reg [(3'h7):(1'h0)] forvar25 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg24 = (1'h0);
  reg [(3'h7):(1'h0)] forvar23 = (1'h0);
  reg [(3'h7):(1'h0)] reg22 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg19 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg18 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar13 = (1'h0);
  reg [(4'h9):(1'h0)] forvar12 = (1'h0);
  assign y = {wire21,
                 wire20,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg43,
                 reg42,
                 reg38,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg30,
                 reg26,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg44,
                 forvar41,
                 reg40,
                 reg39,
                 forvar37,
                 reg36,
                 forvar31,
                 reg29,
                 reg28,
                 reg27,
                 forvar25,
                 reg24,
                 forvar23,
                 reg22,
                 reg19,
                 reg18,
                 forvar13,
                 forvar12,
                 (1'h0)};
  assign wire4 = (wire1 >> $unsigned($unsigned($signed({wire0}))));
  assign wire5 = $signed($signed((wire2 >> $unsigned({wire4, wire4}))));
  assign wire6 = (wire1[(1'h1):(1'h1)] <= $signed((8'hb4)));
  assign wire7 = wire2;
  assign wire8 = $unsigned($signed({{(wire6 >= wire1)}}));
  assign wire9 = (wire4[(5'h14):(2'h2)] ?
                     (~^$signed($unsigned(wire1))) : wire5);
  assign wire10 = wire3[(3'h4):(2'h3)];
  assign wire11 = (~$signed($signed((~$signed(wire0)))));
  always
    @(posedge clk) begin
      for (forvar12 = (1'h0); (forvar12 < (1'h0)); forvar12 = (forvar12 + (1'h1)))
        begin
          for (forvar13 = (1'h0); (forvar13 < (1'h0)); forvar13 = (forvar13 + (1'h1)))
            begin
              reg14 <= wire3;
              reg15 <= forvar13;
              reg16 <= $signed(wire10);
              reg17 <= reg15;
              reg18 = $signed((8'hbe));
            end
        end
      reg19 = {wire1};
    end
  assign wire20 = reg14;
  assign wire21 = (reg14 + {$signed($signed((~|wire5))),
                      ($signed((|wire5)) ?
                          reg14[(2'h2):(2'h2)] : ($signed(wire7) + {wire6,
                              wire0}))});
  always
    @(posedge clk) begin
      reg22 = (^(wire8[(3'h5):(2'h2)] ?
          $signed(wire7[(3'h5):(3'h4)]) : wire10[(1'h1):(1'h1)]));
      for (forvar23 = (1'h0); (forvar23 < (3'h4)); forvar23 = (forvar23 + (1'h1)))
        begin
          reg24 = {($signed((reg22[(3'h4):(2'h3)] ?
                      $unsigned(wire4) : $unsigned(wire8))) ?
                  (|(!{wire21})) : ($signed((~&(8'ha8))) ?
                      $signed(wire0[(2'h3):(2'h2)]) : $unsigned(((8'h9f) ?
                          (8'had) : wire4))))};
          for (forvar25 = (1'h0); (forvar25 < (2'h3)); forvar25 = (forvar25 + (1'h1)))
            begin
              reg26 <= wire4;
              reg27 = $signed($signed((~^((wire0 ? wire8 : reg26) ?
                  wire4[(4'hc):(4'ha)] : (|wire8)))));
              reg28 = ((~reg17[(3'h4):(1'h1)]) - $signed($unsigned(reg17)));
              reg29 = (-wire21);
              reg30 <= (!wire5);
            end
          for (forvar31 = (1'h0); (forvar31 < (2'h2)); forvar31 = (forvar31 + (1'h1)))
            begin
              reg32 <= $unsigned((&(({wire1, (8'ha7)} ?
                      $unsigned(wire6) : $signed(wire6)) ?
                  $signed($signed(wire3)) : (~(wire6 ? reg15 : wire0)))));
              reg33 <= wire2;
              reg34 <= $unsigned($signed($signed(($unsigned(wire20) ?
                  (wire6 > reg28) : {reg24, reg15}))));
              reg35 <= ({wire21,
                  $signed(forvar25)} << ($signed($signed($unsigned(forvar23))) >> (~|reg22)));
              reg36 = (~^(forvar25[(3'h7):(3'h7)] ?
                  wire4 : $signed((^$signed(wire4)))));
            end
          for (forvar37 = (1'h0); (forvar37 < (3'h4)); forvar37 = (forvar37 + (1'h1)))
            begin
              reg38 <= $unsigned((wire11[(4'h8):(3'h5)] ?
                  reg36[(2'h3):(2'h3)] : reg26[(2'h2):(1'h0)]));
              reg39 = $signed({{$signed((wire5 ? (8'hb7) : reg32))}});
              reg40 = (&$signed(reg33));
            end
          for (forvar41 = (1'h0); (forvar41 < (2'h2)); forvar41 = (forvar41 + (1'h1)))
            begin
              reg42 <= (~^$signed($unsigned(reg17[(2'h2):(1'h0)])));
              reg43 <= $signed({$unsigned(($unsigned(forvar31) ?
                      reg17 : {(8'ha7), (8'h9d)}))});
              reg44 = reg40;
            end
        end
    end
endmodule