(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param23 = {({((8'hab) ? (8'hae) : (8'ha6))} ? (+(!(8'ha7))) : (&((8'ha5) >= (8'ha0))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h74):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire22;
  wire [(2'h2):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire13;
  wire signed [(4'h9):(1'h0)] wire12;
  wire signed [(2'h3):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire10;
  wire [(4'h9):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire7;
  wire signed [(3'h6):(1'h0)] wire4;
  reg [(2'h2):(1'h0)] reg20 = (1'h0);
  reg [(3'h5):(1'h0)] reg19 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg17 = (1'h0);
  reg [(3'h5):(1'h0)] reg16 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg15 = (1'h0);
  reg [(4'h8):(1'h0)] reg14 = (1'h0);
  reg [(3'h5):(1'h0)] reg8 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg6 = (1'h0);
  reg [(3'h7):(1'h0)] reg5 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire7,
                 wire4,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg8,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = ({(&(wire0 ?
                         wire1 : wire0))} >> $signed(({wire2} != $signed(wire3))));
  always
    @(posedge clk) begin
      reg5 <= ($unsigned(((~&wire1) >>> $signed(wire0))) + wire0[(4'h9):(2'h2)]);
      reg6 <= $unsigned($unsigned($signed((|wire2))));
    end
  assign wire7 = ($unsigned(reg5[(2'h3):(2'h3)]) ?
                     wire0 : (((wire1 ^ wire4) - $unsigned(reg5)) <= (~(~(8'ha5)))));
  always
    @(posedge clk) begin
      reg8 <= wire7;
    end
  assign wire9 = $signed((($signed(wire7) ^ $unsigned(wire3)) ?
                     ((wire1 > wire4) ?
                         $unsigned(reg8) : $unsigned(wire2)) : wire0[(1'h1):(1'h1)]));
  assign wire10 = $signed($signed(((+wire7) && (wire0 | (8'had)))));
  assign wire11 = ((wire0 != wire3[(1'h0):(1'h0)]) || {wire4[(3'h6):(1'h0)]});
  assign wire12 = $unsigned((~$signed($unsigned(wire11))));
  assign wire13 = wire7[(3'h4):(2'h2)];
  always
    @(posedge clk) begin
      reg14 <= (wire7[(2'h3):(2'h3)] ?
          ($signed((~reg8)) ? (8'had) : reg5) : (wire12 == reg6));
      reg15 <= $unsigned((^(~(wire4 | (8'haa)))));
      reg16 <= {{$unsigned({wire7})}};
    end
  always
    @(posedge clk) begin
      if (($unsigned(($unsigned((8'hae)) <= $unsigned((8'hac)))) | reg15[(1'h1):(1'h0)]))
        begin
          reg17 <= $unsigned(reg16);
          if ((wire9 ? wire0 : (~reg6[(1'h1):(1'h1)])))
            begin
              reg18 <= $signed(({$signed(wire9)} & ((wire3 & wire0) && {wire1})));
            end
          else
            begin
              reg18 <= $unsigned($signed(reg6[(2'h2):(1'h1)]));
            end
        end
      else
        begin
          if ((|((reg15 <<< {wire3}) - (^~reg16))))
            begin
              reg17 <= wire1[(1'h0):(1'h0)];
              reg18 <= (-(8'h9f));
            end
          else
            begin
              reg17 <= wire1[(1'h0):(1'h0)];
            end
        end
      reg19 <= wire7;
      reg20 <= ((8'ha9) ?
          wire9[(3'h7):(3'h5)] : $unsigned(((reg16 ?
              (8'ha9) : wire12) == {(8'ha6)})));
    end
  assign wire21 = $signed(wire2[(1'h1):(1'h1)]);
  assign wire22 = $unsigned(wire10[(3'h7):(1'h0)]);
endmodule