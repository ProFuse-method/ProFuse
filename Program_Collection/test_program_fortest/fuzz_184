(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire49;
  wire [(3'h4):(1'h0)] wire42;
  wire signed [(3'h5):(1'h0)] wire41;
  wire signed [(3'h5):(1'h0)] wire39;
  wire [(2'h3):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire4;
  reg signed [(2'h2):(1'h0)] reg48 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg47 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg46 = (1'h0);
  reg [(2'h3):(1'h0)] reg45 = (1'h0);
  reg [(4'ha):(1'h0)] reg44 = (1'h0);
  reg [(3'h4):(1'h0)] reg43 = (1'h0);
  assign y = {wire49,
                 wire42,
                 wire41,
                 wire39,
                 wire5,
                 wire4,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 (1'h0)};
  assign wire4 = wire3[(3'h5):(1'h1)];
  assign wire5 = {($unsigned(wire3[(3'h7):(1'h0)]) ?
                         wire3[(1'h0):(1'h0)] : wire4[(1'h1):(1'h0)])};
  module6 #() modinst40 (wire39, clk, wire4, wire1, wire5, wire3);
  assign wire41 = $signed($signed({wire3}));
  assign wire42 = $unsigned(wire41);
  always
    @(posedge clk) begin
      reg43 <= (&((wire0[(4'h8):(1'h1)] || $unsigned(wire2)) ?
          $signed($unsigned(wire3)) : (~&{(8'h9e)})));
    end
  always
    @(posedge clk) begin
      if ((wire42[(1'h0):(1'h0)] ?
          (($unsigned(wire2) ?
              reg43 : wire0[(3'h6):(2'h2)]) - $unsigned(((8'ha3) ?
              wire42 : (8'ha3)))) : {(^~wire1)}))
        begin
          if ($unsigned($signed((reg43[(2'h2):(1'h1)] >= wire4))))
            begin
              reg44 <= $signed(((~|$unsigned(wire2)) ?
                  (~$signed(wire5)) : wire39[(2'h2):(1'h0)]));
              reg45 <= $signed(wire3[(2'h2):(1'h1)]);
            end
          else
            begin
              reg44 <= (~&wire1[(4'h8):(4'h8)]);
              reg45 <= (((&{wire39}) ?
                      ((wire4 ? (8'haa) : wire5) ?
                          wire2[(2'h2):(2'h2)] : (wire3 ?
                              (8'ha0) : wire2)) : wire39) ?
                  (($signed((8'hac)) == (^~reg43)) ?
                      wire39 : (~&$unsigned(wire4))) : reg43[(2'h2):(2'h2)]);
              reg46 <= $unsigned(((^~$signed(wire5)) && (~&{wire39})));
            end
          reg47 <= wire0[(3'h4):(2'h3)];
        end
      else
        begin
          reg44 <= wire3[(1'h0):(1'h0)];
        end
      reg48 <= (~(reg44 ?
          ((~&wire1) ? $signed(reg47) : (~|wire5)) : ($signed(reg47) ?
              (reg44 & reg46) : {wire4})));
    end
  assign wire49 = (($unsigned((&reg48)) && $signed($signed(reg47))) == (($signed(wire42) ^ (~^wire39)) ?
                      ((reg45 ? wire1 : reg47) ?
                          wire39[(2'h3):(1'h0)] : $unsigned(reg43)) : wire42[(3'h4):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire7, wire8, wire9, wire10);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire7;
  input wire signed [(4'h9):(1'h0)] wire8;
  input wire signed [(2'h3):(1'h0)] wire9;
  input wire [(3'h6):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire38;
  wire [(2'h3):(1'h0)] wire37;
  wire signed [(4'ha):(1'h0)] wire36;
  wire signed [(3'h4):(1'h0)] wire35;
  wire [(4'h9):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire13;
  wire [(4'h9):(1'h0)] wire15;
  wire signed [(4'h9):(1'h0)] wire16;
  wire [(4'hb):(1'h0)] wire33;
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  reg [(4'h8):(1'h0)] reg14 = (1'h0);
  assign y = {wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire12,
                 wire13,
                 wire15,
                 wire16,
                 wire33,
                 reg11,
                 reg14,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg11 <= $signed({$unsigned((wire9 ? wire10 : wire7))});
    end
  assign wire12 = (-$unsigned(wire8[(4'h8):(3'h4)]));
  assign wire13 = (|{wire10});
  always
    @(posedge clk) begin
      reg14 <= {{$unsigned((reg11 ? (8'ha7) : (8'ha5)))}};
    end
  assign wire15 = ((^~(wire8[(2'h3):(1'h0)] ? reg14 : {wire10})) <<< reg14);
  assign wire16 = (8'hab);
  module17 #() modinst34 (.y(wire33), .wire19(wire13), .wire20(wire9), .wire18(wire15), .clk(clk), .wire21(reg14));
  assign wire35 = wire15;
  assign wire36 = $signed({$unsigned((wire16 << wire7))});
  assign wire37 = wire12;
  assign wire38 = $signed((8'ha2));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17  (y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire21;
  input wire signed [(2'h3):(1'h0)] wire20;
  input wire signed [(4'h8):(1'h0)] wire19;
  input wire signed [(2'h3):(1'h0)] wire18;
  wire signed [(4'ha):(1'h0)] wire30;
  wire signed [(2'h3):(1'h0)] wire29;
  wire [(3'h4):(1'h0)] wire26;
  wire signed [(3'h6):(1'h0)] wire25;
  wire [(2'h3):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire22;
  reg signed [(2'h2):(1'h0)] reg32 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg31 = (1'h0);
  reg [(4'ha):(1'h0)] reg28 = (1'h0);
  reg [(3'h4):(1'h0)] reg27 = (1'h0);
  reg [(4'hb):(1'h0)] reg23 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire26,
                 wire25,
                 wire24,
                 wire22,
                 reg32,
                 reg31,
                 reg28,
                 reg27,
                 reg23,
                 (1'h0)};
  assign wire22 = ($unsigned($signed($unsigned(wire19))) ?
                      (~(^~(wire18 + wire20))) : (({wire20} - $unsigned(wire18)) && ({wire20} >>> (wire21 | wire20))));
  always
    @(posedge clk) begin
      reg23 <= {(-wire18)};
    end
  assign wire24 = $signed({wire21[(3'h6):(3'h4)]});
  assign wire25 = reg23[(3'h7):(1'h0)];
  assign wire26 = wire18[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      reg27 <= (wire25 > $unsigned((8'ha8)));
      reg28 <= (~$signed($unsigned(wire21)));
    end
  assign wire29 = $unsigned(wire24[(1'h0):(1'h0)]);
  assign wire30 = reg23;
  always
    @(posedge clk) begin
      reg31 <= $signed($signed(wire25));
      reg32 <= {$unsigned((wire19[(4'h8):(1'h1)] ?
              wire24 : ((8'ha2) <= wire25)))};
    end
endmodule