(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param16 = ((({(8'ha5)} >= ((8'ha6) ? (8'h9c) : (8'ha8))) ? {((8'hab) < (8'hae))} : ({(8'ha9)} ? (|(8'ha6)) : {(8'ha2)})) ? ((((8'hb0) ? (8'ha1) : (8'hab)) + ((8'hab) + (8'ha3))) <= (~^{(8'hab)})) : ({{(8'ha2)}} >> ((+(8'ha9)) <<< (~^(8'h9c))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire15;
  wire [(4'h8):(1'h0)] wire14;
  wire signed [(4'ha):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire12;
  wire [(4'ha):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  reg [(4'h9):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg9 = (1'h0);
  reg [(4'ha):(1'h0)] reg8 = (1'h0);
  reg [(3'h4):(1'h0)] reg7 = (1'h0);
  reg [(3'h5):(1'h0)] reg6 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg5 = (1'h0);
  assign y = {wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire4,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = ({$unsigned($unsigned(wire0))} >> $signed($signed((wire2 ?
                     wire2 : (8'ha1)))));
  always
    @(posedge clk) begin
      if ((!(~|wire4[(3'h6):(1'h1)])))
        begin
          reg5 <= $unsigned((((+wire4) ? wire3 : $signed((8'ha1))) ?
              (~|wire3[(1'h1):(1'h1)]) : $signed({wire1})));
          reg6 <= wire1[(1'h1):(1'h0)];
          if ((|((|(wire3 >>> wire2)) ? $unsigned($signed(reg5)) : (|reg6))))
            begin
              reg7 <= (~&wire2[(2'h2):(1'h0)]);
            end
          else
            begin
              reg7 <= $unsigned($unsigned($unsigned((wire2 ? reg7 : wire3))));
              reg8 <= (~|$unsigned($unsigned((^wire3))));
              reg9 <= ($unsigned(($signed(wire4) ^ $unsigned(wire0))) ?
                  (reg7 ?
                      {$unsigned(wire2)} : ($unsigned(reg8) ?
                          $unsigned(wire4) : reg7[(2'h2):(1'h1)])) : $signed((^~$signed(wire4))));
            end
        end
      else
        begin
          reg5 <= (~$unsigned($unsigned($unsigned(wire2))));
          reg6 <= $unsigned(reg6[(2'h2):(2'h2)]);
          if ({{wire4[(4'ha):(1'h0)]}})
            begin
              reg7 <= $unsigned(wire0[(3'h6):(1'h0)]);
              reg8 <= wire0;
            end
          else
            begin
              reg7 <= (~|($unsigned($unsigned((8'ha0))) > wire0[(1'h1):(1'h1)]));
              reg8 <= (8'h9e);
              reg9 <= reg9[(1'h0):(1'h0)];
            end
        end
      reg10 <= wire1;
    end
  always
    @(posedge clk) begin
      if (({$signed($signed(wire2))} ~^ $unsigned(reg10)))
        begin
          reg11 <= $signed({($signed(wire1) || reg6)});
        end
      else
        begin
          reg11 <= $unsigned(wire0[(2'h3):(1'h1)]);
        end
    end
  assign wire12 = wire0;
  assign wire13 = wire0;
  assign wire14 = reg11;
  assign wire15 = (reg8[(4'ha):(2'h2)] < (~^((wire13 || wire2) ?
                      $signed(reg7) : ((8'ha8) ? reg8 : reg11))));
endmodule