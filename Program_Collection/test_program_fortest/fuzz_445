(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param92 = (^~{{(+(8'ha9))}}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire91;
  wire [(3'h6):(1'h0)] wire90;
  wire signed [(4'h8):(1'h0)] wire89;
  wire [(3'h7):(1'h0)] wire86;
  wire signed [(3'h6):(1'h0)] wire84;
  wire signed [(4'ha):(1'h0)] wire23;
  wire signed [(4'h8):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire5;
  wire signed [(3'h5):(1'h0)] wire4;
  reg signed [(3'h7):(1'h0)] reg88 = (1'h0);
  assign y = {wire91,
                 wire90,
                 wire89,
                 wire86,
                 wire84,
                 wire23,
                 wire6,
                 wire5,
                 wire4,
                 reg88,
                 (1'h0)};
  assign wire4 = wire2;
  assign wire5 = $signed(($unsigned($unsigned(wire4)) ?
                     $unsigned($signed(wire1)) : ($signed(wire2) | wire4)));
  assign wire6 = (~&wire0);
  module7 #() modinst24 (.clk(clk), .wire9(wire0), .y(wire23), .wire11(wire6), .wire8(wire3), .wire10(wire1));
  module25 #() modinst85 (wire84, clk, wire3, wire5, wire6, wire23);
  module25 #() modinst87 (.clk(clk), .wire29(wire84), .wire26(wire2), .wire27(wire3), .y(wire86), .wire28(wire23));
  always
    @(posedge clk) begin
      reg88 <= (wire3[(3'h7):(3'h5)] ? $signed(wire86[(1'h0):(1'h0)]) : wire0);
    end
  assign wire89 = (($signed((^~wire86)) & $unsigned((wire3 ^ (8'h9e)))) ?
                      (((wire23 ? wire84 : wire23) ?
                              (reg88 ^~ wire86) : (wire86 >>> wire1)) ?
                          (wire2 >= {wire1}) : ($signed(wire3) < wire1[(2'h2):(1'h1)])) : (~^(~^$signed(reg88))));
  assign wire90 = (~$signed(($signed(wire5) ? wire3 : wire5[(4'h8):(3'h6)])));
  assign wire91 = $unsigned((wire0[(3'h5):(3'h4)] ? reg88 : wire84));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25  (y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire29;
  input wire signed [(4'ha):(1'h0)] wire28;
  input wire [(3'h5):(1'h0)] wire27;
  input wire [(3'h6):(1'h0)] wire26;
  wire signed [(3'h7):(1'h0)] wire82;
  wire [(3'h6):(1'h0)] wire72;
  wire [(4'h8):(1'h0)] wire71;
  wire signed [(4'ha):(1'h0)] wire70;
  wire [(4'ha):(1'h0)] wire69;
  wire signed [(3'h5):(1'h0)] wire68;
  wire signed [(3'h4):(1'h0)] wire67;
  wire signed [(3'h6):(1'h0)] wire66;
  wire [(4'h9):(1'h0)] wire65;
  wire [(3'h7):(1'h0)] wire64;
  wire [(2'h2):(1'h0)] wire62;
  wire signed [(2'h3):(1'h0)] wire30;
  assign y = {wire82,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire64,
                 wire62,
                 wire30,
                 (1'h0)};
  assign wire30 = $signed(($unsigned((8'ha7)) - $unsigned({wire28})));
  module31 #() modinst63 (.wire32(wire29), .wire34(wire28), .wire33(wire27), .wire35(wire26), .clk(clk), .y(wire62));
  assign wire64 = $signed(((wire30[(1'h1):(1'h0)] >= (wire28 ?
                      wire62 : wire29)) != (~^{wire27})));
  assign wire65 = $signed({($signed((8'ha7)) ?
                          (wire62 ? wire28 : (8'h9f)) : wire27)});
  assign wire66 = wire28;
  assign wire67 = (wire26 > $unsigned($signed($signed(wire66))));
  assign wire68 = {(~&($unsigned((8'ha2)) << (+wire62)))};
  assign wire69 = wire68[(1'h1):(1'h1)];
  assign wire70 = (!$signed(((wire28 || wire26) ?
                      $signed(wire69) : (wire64 ? wire30 : wire29))));
  assign wire71 = (wire30[(1'h1):(1'h1)] || (~&{wire27}));
  assign wire72 = (!$unsigned((((8'hab) > wire71) || $signed(wire71))));
  module73 #() modinst83 (wire82, clk, wire69, wire65, wire68, wire64);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7  (y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h5b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire11;
  input wire signed [(4'hb):(1'h0)] wire10;
  input wire [(3'h7):(1'h0)] wire9;
  input wire [(3'h7):(1'h0)] wire8;
  wire signed [(3'h4):(1'h0)] wire22;
  wire signed [(3'h6):(1'h0)] wire21;
  wire signed [(3'h7):(1'h0)] wire20;
  wire [(4'h9):(1'h0)] wire19;
  wire signed [(4'ha):(1'h0)] wire18;
  wire [(4'h9):(1'h0)] wire17;
  wire signed [(4'h9):(1'h0)] wire16;
  wire [(4'hb):(1'h0)] wire15;
  wire signed [(4'h8):(1'h0)] wire14;
  wire signed [(3'h6):(1'h0)] wire13;
  reg [(4'hb):(1'h0)] reg12 = (1'h0);
  assign y = {wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 reg12,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg12 <= (((wire9[(3'h4):(2'h2)] ^~ $unsigned((8'h9c))) ?
          ((~^wire10) ? wire9 : (8'ha1)) : ((wire8 ?
              (8'hab) : wire10) && (wire11 ?
              wire10 : wire11))) && (+($unsigned(wire9) ?
          (+wire9) : (wire11 ? wire11 : wire9))));
    end
  assign wire13 = $signed(wire8);
  assign wire14 = wire10;
  assign wire15 = (wire8 ?
                      ((8'ha0) + (wire13 * {wire9})) : $signed(($signed(reg12) && {wire9})));
  assign wire16 = wire14[(2'h3):(1'h1)];
  assign wire17 = (^(wire10[(3'h5):(1'h0)] ? wire9 : reg12[(4'h9):(2'h3)]));
  assign wire18 = wire11;
  assign wire19 = (($signed(wire10[(3'h5):(1'h1)]) || ({wire11} || $unsigned(wire10))) << ((8'hac) != (^{(8'haa)})));
  assign wire20 = wire11[(1'h1):(1'h0)];
  assign wire21 = wire18[(4'ha):(2'h3)];
  assign wire22 = ((-{(wire17 >= wire19)}) ?
                      wire8[(3'h5):(2'h2)] : (~|((|wire8) != ((8'h9d) || wire13))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module73  (y, clk, wire77, wire76, wire75, wire74);
  output wire [(32'h1d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire77;
  input wire signed [(4'h9):(1'h0)] wire76;
  input wire signed [(2'h3):(1'h0)] wire75;
  input wire [(3'h5):(1'h0)] wire74;
  wire [(2'h3):(1'h0)] wire81;
  wire [(4'ha):(1'h0)] wire80;
  wire [(3'h5):(1'h0)] wire79;
  wire signed [(4'ha):(1'h0)] wire78;
  assign y = {wire81, wire80, wire79, wire78, (1'h0)};
  assign wire78 = (^$signed($signed((wire74 || wire75))));
  assign wire79 = (~(|wire75));
  assign wire80 = (((wire74[(3'h4):(1'h0)] ? (~&(8'ha9)) : $unsigned((8'h9f))) ?
                      $unsigned((8'haf)) : (wire76[(3'h7):(2'h2)] ?
                          (-wire78) : wire75[(2'h2):(1'h1)])) + wire76[(1'h1):(1'h0)]);
  assign wire81 = ($signed(($signed((8'had)) < wire77[(1'h1):(1'h0)])) << wire74);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module31
#(parameter param61 = (|((~&(~(8'h9d))) - (-((8'ha8) * (8'ha0))))))
(y, clk, wire35, wire34, wire33, wire32);
  output wire [(32'h9c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire35;
  input wire signed [(4'ha):(1'h0)] wire34;
  input wire [(2'h3):(1'h0)] wire33;
  input wire [(3'h6):(1'h0)] wire32;
  wire signed [(4'hb):(1'h0)] wire60;
  wire signed [(3'h5):(1'h0)] wire59;
  wire signed [(2'h3):(1'h0)] wire58;
  wire [(3'h4):(1'h0)] wire54;
  wire signed [(3'h6):(1'h0)] wire53;
  wire [(4'h9):(1'h0)] wire46;
  wire [(4'h8):(1'h0)] wire45;
  wire signed [(4'h9):(1'h0)] wire44;
  wire [(4'h9):(1'h0)] wire43;
  wire [(4'ha):(1'h0)] wire42;
  reg [(4'hb):(1'h0)] reg57 = (1'h0);
  reg [(4'h8):(1'h0)] reg56 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg55 = (1'h0);
  reg [(4'hb):(1'h0)] reg52 = (1'h0);
  reg [(2'h3):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg50 = (1'h0);
  reg [(3'h7):(1'h0)] reg49 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg48 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg47 = (1'h0);
  reg [(3'h7):(1'h0)] reg41 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg40 = (1'h0);
  reg [(2'h2):(1'h0)] reg39 = (1'h0);
  reg [(3'h7):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg37 = (1'h0);
  reg [(2'h2):(1'h0)] reg36 = (1'h0);
  assign y = {wire60,
                 wire59,
                 wire58,
                 wire54,
                 wire53,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 reg57,
                 reg56,
                 reg55,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (($unsigned(wire35[(2'h2):(2'h2)]) ?
          {$signed(wire34[(4'ha):(4'h8)])} : (~^((wire35 == wire33) ?
              (wire35 ? wire35 : wire33) : (wire34 ? wire33 : wire33)))))
        begin
          reg36 <= wire32;
          reg37 <= $unsigned((~^$signed((~wire34))));
          if ((reg37[(2'h3):(2'h3)] == (((wire34 ?
                  reg37 : (8'h9d)) >= wire34[(1'h0):(1'h0)]) ?
              ((&reg37) ?
                  wire33[(1'h1):(1'h1)] : $unsigned(wire32)) : wire33[(2'h2):(1'h1)])))
            begin
              reg38 <= $signed(($unsigned($unsigned(reg37)) ?
                  $signed($signed(reg37)) : (wire34[(3'h5):(3'h4)] ?
                      (~&wire34) : (~wire33))));
            end
          else
            begin
              reg38 <= reg36[(1'h0):(1'h0)];
              reg39 <= wire32[(1'h0):(1'h0)];
            end
        end
      else
        begin
          reg36 <= (8'ha5);
        end
      reg40 <= {((~&(8'haf)) != (wire32[(3'h6):(3'h6)] ?
              reg36[(1'h1):(1'h0)] : wire33))};
      reg41 <= reg38;
    end
  assign wire42 = ($unsigned({(wire33 <<< wire32)}) ? wire34 : $signed(wire32));
  assign wire43 = (~&wire34);
  assign wire44 = $signed((wire43[(1'h1):(1'h1)] != (&wire43)));
  assign wire45 = $unsigned($unsigned($unsigned(reg38[(3'h7):(3'h7)])));
  assign wire46 = ($unsigned({reg41}) && reg38);
  always
    @(posedge clk) begin
      if ((((((8'ha0) | wire45) ?
          $unsigned(wire35) : reg41) <= wire33[(1'h0):(1'h0)]) && {$signed(reg38[(1'h0):(1'h0)])}))
        begin
          reg47 <= ($signed((reg38 ? $signed(wire32) : {reg36})) == wire45);
        end
      else
        begin
          reg47 <= reg36;
          if ((8'ha3))
            begin
              reg48 <= $unsigned(wire35);
              reg49 <= reg38[(3'h6):(1'h1)];
              reg50 <= (~$unsigned(($signed(wire45) ?
                  reg49[(3'h7):(2'h2)] : {reg40})));
            end
          else
            begin
              reg48 <= (!(8'h9e));
              reg49 <= reg48;
            end
        end
      reg51 <= {((~|reg50[(1'h1):(1'h0)]) != reg37)};
      reg52 <= {(8'ha0)};
    end
  assign wire53 = ($unsigned(((reg47 ^ wire32) ?
                          $unsigned(reg49) : (~|wire42))) ?
                      reg41 : (^~$signed((reg50 ? reg36 : reg50))));
  assign wire54 = wire45;
  always
    @(posedge clk) begin
      reg55 <= reg36[(1'h1):(1'h1)];
      reg56 <= (^(reg38[(3'h5):(1'h1)] ?
          $unsigned((wire46 ~^ reg36)) : (~&$signed(reg51))));
      reg57 <= reg52;
    end
  assign wire58 = ((&reg37[(1'h1):(1'h1)]) >> wire54);
  assign wire59 = {((8'ha7) ? (~wire46[(1'h0):(1'h0)]) : reg48[(2'h3):(2'h2)])};
  assign wire60 = ((~wire42[(1'h1):(1'h1)]) ?
                      (wire54 && wire45[(3'h5):(2'h3)]) : $unsigned((8'had)));
endmodule