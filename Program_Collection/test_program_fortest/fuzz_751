(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param52 = (((((8'hae) ? (8'ha3) : (8'ha6)) ? (8'hb0) : ((8'ha1) ? (8'had) : (8'h9c))) - ((8'ha6) ^ (^~(8'hae)))) ? {(^((8'ha7) > (8'ha7)))} : (({(8'hae)} | ((8'haa) || (8'haf))) ^ (((8'ha8) * (8'h9e)) ? (~(8'ha3)) : ((8'hb0) != (8'haa))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(3'h4):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire50;
  wire signed [(4'h9):(1'h0)] wire49;
  wire [(3'h4):(1'h0)] wire48;
  wire [(4'ha):(1'h0)] wire47;
  wire signed [(2'h3):(1'h0)] wire46;
  wire [(4'ha):(1'h0)] wire45;
  wire signed [(4'hb):(1'h0)] wire44;
  wire signed [(3'h4):(1'h0)] wire42;
  wire signed [(3'h6):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire42,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = wire2;
  assign wire5 = (^~wire4[(4'ha):(3'h5)]);
  assign wire6 = $signed(wire4[(4'h8):(1'h1)]);
  module7 #() modinst43 (.clk(clk), .wire9(wire3), .y(wire42), .wire11(wire2), .wire8(wire5), .wire10(wire0));
  assign wire44 = $signed($unsigned((8'ha6)));
  assign wire45 = wire1[(2'h3):(1'h1)];
  assign wire46 = {$signed({(&wire1)})};
  assign wire47 = ($signed((8'hae)) ?
                      wire0[(3'h6):(1'h1)] : $signed(((wire2 <= wire4) ?
                          (~|wire5) : $signed((8'haa)))));
  assign wire48 = ($signed((^~$unsigned(wire6))) >> wire4[(2'h2):(1'h1)]);
  assign wire49 = (~&wire0[(1'h1):(1'h1)]);
  module18 #() modinst51 (.wire20(wire5), .y(wire50), .clk(clk), .wire22(wire47), .wire19(wire0), .wire21(wire44));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param41 = {(({(8'ha5)} ? ((8'had) ? (8'ha2) : (8'hae)) : ((8'haa) ? (8'had) : (8'h9d))) << {(-(8'hb0))})})
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h3c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire11;
  input wire [(3'h5):(1'h0)] wire10;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire [(4'hb):(1'h0)] wire8;
  wire [(3'h7):(1'h0)] wire40;
  wire [(3'h7):(1'h0)] wire38;
  wire [(4'h9):(1'h0)] wire14;
  wire [(3'h5):(1'h0)] wire13;
  wire [(4'h8):(1'h0)] wire12;
  reg signed [(4'h8):(1'h0)] reg17 = (1'h0);
  reg [(4'h9):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg15 = (1'h0);
  assign y = {wire40,
                 wire38,
                 wire14,
                 wire13,
                 wire12,
                 reg17,
                 reg16,
                 reg15,
                 (1'h0)};
  assign wire12 = $signed($unsigned(({wire11} ^~ wire9[(1'h0):(1'h0)])));
  assign wire13 = wire8;
  assign wire14 = (-(wire8[(2'h3):(1'h0)] << ((~&wire13) ?
                      $unsigned(wire12) : wire11)));
  always
    @(posedge clk) begin
      reg15 <= ($unsigned((^(~&wire11))) ?
          wire8[(1'h0):(1'h0)] : {(wire8 ?
                  (wire9 ? (8'ha2) : wire12) : {(8'h9e)})});
      if ($unsigned((~&(+$signed(wire14)))))
        begin
          reg16 <= wire9;
        end
      else
        begin
          reg16 <= {(|(~^wire13))};
          reg17 <= (&wire9[(4'hb):(4'ha)]);
        end
    end
  module18 #() modinst39 (.wire22(wire13), .wire19(wire11), .wire20(wire12), .y(wire38), .clk(clk), .wire21(wire8));
  assign wire40 = (^wire12);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18  (y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h66):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire22;
  input wire signed [(4'hb):(1'h0)] wire21;
  input wire [(4'h8):(1'h0)] wire20;
  input wire [(4'h8):(1'h0)] wire19;
  wire signed [(3'h7):(1'h0)] wire37;
  wire [(4'hb):(1'h0)] wire36;
  wire [(3'h7):(1'h0)] wire30;
  wire [(2'h3):(1'h0)] wire29;
  wire [(4'ha):(1'h0)] wire23;
  reg [(3'h6):(1'h0)] reg35 = (1'h0);
  reg [(4'ha):(1'h0)] reg34 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg33 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg32 = (1'h0);
  reg [(2'h3):(1'h0)] reg31 = (1'h0);
  reg [(4'h9):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg27 = (1'h0);
  reg [(2'h2):(1'h0)] reg26 = (1'h0);
  reg [(4'ha):(1'h0)] reg25 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg24 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire30,
                 wire29,
                 wire23,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 (1'h0)};
  assign wire23 = ($unsigned(((&wire21) ? (-(8'ha9)) : $signed(wire19))) ?
                      ((8'ha5) ?
                          wire21[(1'h0):(1'h0)] : wire19) : wire20[(1'h1):(1'h0)]);
  always
    @(posedge clk) begin
      if ((8'hac))
        begin
          if ($signed(wire20[(2'h2):(2'h2)]))
            begin
              reg24 <= ($unsigned($signed($unsigned((8'h9c)))) * $unsigned(wire22[(2'h3):(2'h2)]));
              reg25 <= ($signed(wire22[(2'h2):(1'h0)]) < (|wire22[(3'h5):(1'h1)]));
            end
          else
            begin
              reg24 <= reg24[(1'h0):(1'h0)];
              reg25 <= ((((reg24 ? wire19 : wire20) ?
                      $unsigned(reg25) : $unsigned((8'had))) ?
                  {(|wire22)} : $signed($unsigned(wire22))) >> wire20[(3'h6):(3'h5)]);
            end
          reg26 <= (8'ha4);
        end
      else
        begin
          reg24 <= ($signed((~^$unsigned(reg25))) ?
              $signed(((reg24 ? wire20 : reg24) ?
                  (wire22 + (8'hac)) : (+wire21))) : ({(^wire21)} ?
                  ((wire19 <<< wire20) <<< wire22) : (wire23 ?
                      $unsigned((8'ha4)) : (reg26 && wire19))));
          reg25 <= {(-($signed(wire19) ?
                  wire20[(1'h0):(1'h0)] : $unsigned(reg25)))};
        end
      reg27 <= $signed($unsigned(($signed(wire19) <= $unsigned(wire22))));
    end
  always
    @(posedge clk) begin
      reg28 <= $unsigned(({(reg25 ? wire23 : reg24)} ^ wire22));
    end
  assign wire29 = $signed((^~$unsigned($signed(reg24))));
  assign wire30 = wire19[(4'h8):(3'h7)];
  always
    @(posedge clk) begin
      reg31 <= wire22;
      if ({(($unsigned(reg24) ? $signed((8'ha8)) : wire21) ?
              reg27[(3'h4):(1'h0)] : $unsigned(reg25))})
        begin
          reg32 <= ({(reg27 >>> $unsigned((8'haa)))} ?
              ((^reg24[(3'h4):(2'h2)]) > $signed({wire21})) : $signed(((8'h9f) <= wire23)));
        end
      else
        begin
          reg32 <= $unsigned($signed((+$unsigned((8'ha8)))));
        end
    end
  always
    @(posedge clk) begin
      reg33 <= ((8'ha2) > (^(reg32[(3'h7):(3'h4)] <<< (~^wire20))));
      reg34 <= wire21;
      reg35 <= reg24[(3'h5):(3'h5)];
    end
  assign wire36 = $signed({(!(reg34 != reg31))});
  assign wire37 = ($signed($signed((reg27 ? reg31 : (8'ha0)))) ?
                      (^reg34) : wire29);
endmodule