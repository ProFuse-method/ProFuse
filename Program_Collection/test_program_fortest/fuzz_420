(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(3'h5):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire7;
  wire signed [(2'h3):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg6 = (1'h0);
  assign y = {wire7, wire5, wire4, reg6, (1'h0)};
  assign wire4 = ((|wire1[(3'h4):(2'h3)]) > {wire0[(3'h7):(3'h5)]});
  assign wire5 = (~|(&({wire2} ? $unsigned(wire1) : wire2[(3'h4):(1'h0)])));
  always
    @(posedge clk) begin
      reg6 <= (~(^~$signed((wire4 ? wire2 : wire2))));
    end
  assign wire7 = (^~$signed($signed(wire3)));
endmodule