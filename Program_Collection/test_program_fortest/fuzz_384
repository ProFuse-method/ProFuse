(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param53 = (^(({(8'haf)} != (~&(8'ha6))) <<< (8'h9d))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire signed [(3'h7):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire52;
  wire signed [(3'h5):(1'h0)] wire51;
  wire signed [(4'ha):(1'h0)] wire50;
  wire [(4'hb):(1'h0)] wire49;
  wire signed [(4'hb):(1'h0)] wire48;
  wire signed [(2'h3):(1'h0)] wire46;
  wire signed [(4'h9):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire4;
  assign y = {wire52,
                 wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire46,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = (wire1[(4'h8):(3'h7)] ?
                     {$signed((-wire1))} : $signed((&(wire0 ? wire1 : wire2))));
  assign wire5 = (wire4 > $unsigned(wire2[(1'h1):(1'h1)]));
  module6 #() modinst47 (.wire10(wire2), .wire9(wire0), .wire7(wire5), .clk(clk), .wire8(wire1), .y(wire46));
  assign wire48 = wire0;
  assign wire49 = wire46[(1'h0):(1'h0)];
  assign wire50 = (wire46 | wire2);
  assign wire51 = $signed(wire3);
  assign wire52 = $unsigned((({(8'ha3)} ?
                      $unsigned((8'hac)) : wire2) != ((wire5 ? wire51 : wire3) ?
                      (wire1 * wire46) : (wire49 ? (8'hab) : wire51))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param45 = ((8'ha1) > (-(^{(8'ha3)}))))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h42):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire10;
  input wire signed [(3'h7):(1'h0)] wire9;
  input wire signed [(3'h7):(1'h0)] wire8;
  input wire [(3'h7):(1'h0)] wire7;
  wire [(4'ha):(1'h0)] wire43;
  wire signed [(4'h9):(1'h0)] wire41;
  wire signed [(4'hb):(1'h0)] wire40;
  wire signed [(3'h7):(1'h0)] wire39;
  wire [(4'ha):(1'h0)] wire37;
  wire [(3'h4):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire12;
  wire signed [(2'h3):(1'h0)] wire11;
  assign y = {wire43,
                 wire41,
                 wire40,
                 wire39,
                 wire37,
                 wire23,
                 wire12,
                 wire11,
                 (1'h0)};
  assign wire11 = ((^~(wire10 ^ (wire10 && wire7))) ?
                      $signed($signed($signed((8'haa)))) : ((wire10 ?
                              wire10 : (wire8 ? wire9 : wire9)) ?
                          ((|wire10) + wire9[(3'h5):(1'h1)]) : wire8[(3'h4):(2'h2)]));
  assign wire12 = $unsigned(wire7);
  module13 #() modinst24 (wire23, clk, wire8, wire7, wire12, wire10);
  module25 #() modinst38 (wire37, clk, wire8, wire10, wire9, wire23);
  assign wire39 = (((wire23 * wire9) ^ wire9[(1'h0):(1'h0)]) ?
                      ((wire10[(3'h7):(1'h0)] - wire11[(2'h2):(1'h1)]) ?
                          wire23[(2'h3):(1'h0)] : wire37) : {wire9[(1'h1):(1'h1)]});
  assign wire40 = (+$signed((!$signed(wire12))));
  module25 #() modinst42 (.wire29(wire39), .clk(clk), .wire26(wire8), .wire27(wire11), .y(wire41), .wire28(wire7));
  module13 #() modinst44 (.y(wire43), .wire17(wire40), .wire16(wire11), .wire14(wire37), .wire15(wire12), .clk(clk));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module25
#(parameter param36 = (((((8'h9f) ~^ (8'hac)) ? ((8'ha2) ? (8'hb0) : (8'haf)) : ((8'ha0) ? (8'ha5) : (8'h9c))) ? (^(&(8'haf))) : ({(8'hb0)} <<< ((8'ha2) ~^ (8'ha2)))) ? ((~((8'haa) ? (8'ha0) : (8'ha4))) + (((8'h9f) != (8'hae)) >> (~(8'hac)))) : ((&{(8'h9e)}) ? (^((8'hb0) ? (8'had) : (8'haf))) : ((&(8'h9e)) >>> ((8'ha7) << (8'ha0))))))
(y, clk, wire29, wire28, wire27, wire26);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire29;
  input wire signed [(2'h3):(1'h0)] wire28;
  input wire signed [(2'h3):(1'h0)] wire27;
  input wire [(2'h3):(1'h0)] wire26;
  wire [(2'h3):(1'h0)] wire32;
  wire [(3'h6):(1'h0)] wire31;
  wire signed [(4'h9):(1'h0)] wire30;
  reg [(3'h4):(1'h0)] reg35 = (1'h0);
  reg [(4'hb):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg33 = (1'h0);
  assign y = {wire32, wire31, wire30, reg35, reg34, reg33, (1'h0)};
  assign wire30 = $signed((8'haf));
  assign wire31 = wire26;
  assign wire32 = $unsigned((^wire30[(3'h5):(3'h4)]));
  always
    @(posedge clk) begin
      reg33 <= (^wire32);
      reg34 <= wire31[(2'h2):(2'h2)];
      reg35 <= (wire32 >= (wire28 <<< (wire26[(1'h0):(1'h0)] & $signed((8'hae)))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h21):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire17;
  input wire [(2'h3):(1'h0)] wire16;
  input wire [(3'h4):(1'h0)] wire15;
  input wire signed [(2'h2):(1'h0)] wire14;
  wire signed [(3'h6):(1'h0)] wire22;
  wire [(4'hb):(1'h0)] wire21;
  wire [(3'h7):(1'h0)] wire20;
  wire [(3'h4):(1'h0)] wire19;
  wire signed [(3'h4):(1'h0)] wire18;
  assign y = {wire22, wire21, wire20, wire19, wire18, (1'h0)};
  assign wire18 = $signed({{((8'hac) ^~ (8'ha4))}});
  assign wire19 = wire15;
  assign wire20 = (~|wire17[(1'h1):(1'h0)]);
  assign wire21 = (((8'ha4) ?
                      wire15[(3'h4):(2'h3)] : $signed((~&wire15))) != {$unsigned($signed(wire15))});
  assign wire22 = {((+(wire16 ?
                          wire21 : wire19)) <= $unsigned($unsigned(wire17)))};
endmodule