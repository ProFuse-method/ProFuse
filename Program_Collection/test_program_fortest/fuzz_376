(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param33 = (((-(~|(8'hb0))) ? (((8'ha0) ^ (8'haf)) ? ((8'ha8) != (8'h9f)) : {(8'haa)}) : {(8'ha7)}) >>> (~&(((8'hab) ? (8'ha0) : (8'ha9)) ? (~&(8'ha9)) : (+(8'ha0))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire32;
  wire [(4'hb):(1'h0)] wire31;
  wire signed [(3'h7):(1'h0)] wire30;
  wire signed [(4'ha):(1'h0)] wire28;
  wire [(3'h4):(1'h0)] wire10;
  wire [(2'h3):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire8;
  wire signed [(4'h8):(1'h0)] wire7;
  wire [(4'ha):(1'h0)] wire6;
  wire [(3'h7):(1'h0)] wire5;
  wire signed [(3'h4):(1'h0)] wire4;
  assign y = {wire32,
                 wire31,
                 wire30,
                 wire28,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 (1'h0)};
  assign wire4 = ((wire3[(3'h6):(1'h0)] >>> $signed((|(8'had)))) != wire2[(1'h1):(1'h0)]);
  assign wire5 = $unsigned(wire1[(1'h1):(1'h1)]);
  assign wire6 = (&wire0);
  assign wire7 = wire1;
  assign wire8 = wire1;
  assign wire9 = $signed((8'hae));
  assign wire10 = $unsigned((~$unsigned(wire2)));
  module11 #() modinst29 (wire28, clk, wire8, wire0, wire3, wire1);
  assign wire30 = $unsigned($unsigned(($unsigned(wire1) ?
                      (wire7 != wire2) : $signed(wire4))));
  assign wire31 = (wire2[(1'h1):(1'h1)] <= {(!$unsigned(wire6))});
  assign wire32 = wire8;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h5a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire15;
  input wire signed [(3'h7):(1'h0)] wire14;
  input wire signed [(3'h6):(1'h0)] wire13;
  input wire signed [(4'h8):(1'h0)] wire12;
  wire [(4'h9):(1'h0)] wire27;
  wire [(3'h7):(1'h0)] wire26;
  wire signed [(4'h8):(1'h0)] wire22;
  wire signed [(4'h8):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire20;
  wire [(3'h4):(1'h0)] wire19;
  wire signed [(3'h6):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire17;
  wire signed [(4'h9):(1'h0)] wire16;
  reg [(3'h7):(1'h0)] reg25 = (1'h0);
  reg [(4'ha):(1'h0)] reg24 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg23 = (1'h0);
  assign y = {wire27,
                 wire26,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 reg25,
                 reg24,
                 reg23,
                 (1'h0)};
  assign wire16 = wire13[(3'h4):(2'h2)];
  assign wire17 = (8'haa);
  assign wire18 = $unsigned($signed($signed((!wire16))));
  assign wire19 = (wire15[(1'h0):(1'h0)] ? wire18 : wire14[(2'h3):(1'h0)]);
  assign wire20 = $signed($signed((wire18[(2'h2):(1'h0)] && {(8'ha2)})));
  assign wire21 = wire20[(4'ha):(3'h6)];
  assign wire22 = {wire19[(2'h3):(2'h3)]};
  always
    @(posedge clk) begin
      reg23 <= ((~^$signed((wire13 <<< wire15))) >> (wire13 ?
          ($unsigned(wire16) && (~|wire18)) : (8'ha4)));
      reg24 <= (~&reg23);
      reg25 <= ((8'ha7) ?
          ($unsigned({reg24}) >>> ({wire22} ?
              wire19 : (wire18 ? wire17 : (8'haa)))) : $unsigned(((8'ha7) ?
              wire19 : (wire14 ? (8'haa) : (8'ha5)))));
    end
  assign wire26 = reg23;
  assign wire27 = wire15[(1'h1):(1'h0)];
endmodule