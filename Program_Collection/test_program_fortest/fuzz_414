(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(4'ha):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire61;
  wire [(4'h8):(1'h0)] wire54;
  reg signed [(2'h2):(1'h0)] reg69 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg68 = (1'h0);
  reg [(4'hb):(1'h0)] reg67 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg66 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg65 = (1'h0);
  reg [(3'h7):(1'h0)] reg64 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg63 = (1'h0);
  reg [(4'h9):(1'h0)] reg62 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg60 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg59 = (1'h0);
  reg [(2'h2):(1'h0)] reg58 = (1'h0);
  reg [(4'h8):(1'h0)] reg57 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg56 = (1'h0);
  assign y = {wire61,
                 wire54,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 reg64,
                 reg63,
                 reg62,
                 reg60,
                 reg59,
                 reg58,
                 reg57,
                 reg56,
                 (1'h0)};
  module4 #() modinst55 (wire54, clk, wire3, wire0, wire1, wire2);
  always
    @(posedge clk) begin
      reg56 <= wire0[(1'h1):(1'h1)];
      if ((|wire2[(4'h9):(1'h0)]))
        begin
          reg57 <= $signed($unsigned($unsigned((wire3 ? wire1 : (8'hae)))));
        end
      else
        begin
          if ((~|(wire2 ? $signed((~wire0)) : reg57[(3'h5):(2'h2)])))
            begin
              reg57 <= $signed($signed(($unsigned(wire0) ?
                  wire1 : $unsigned(wire2))));
            end
          else
            begin
              reg57 <= {(($unsigned(wire54) * (wire54 ? wire0 : wire0)) ?
                      wire0 : {(reg56 ? reg56 : wire3)})};
            end
          if ($signed(wire1[(4'ha):(3'h7)]))
            begin
              reg58 <= (wire2[(1'h1):(1'h0)] ^ (~reg56));
            end
          else
            begin
              reg58 <= (-wire54);
              reg59 <= {$signed($signed(wire2))};
            end
        end
      reg60 <= ((&$unsigned(reg57[(1'h1):(1'h0)])) >> {reg59});
    end
  assign wire61 = ($signed($signed(wire54[(1'h0):(1'h0)])) ?
                      wire54[(2'h2):(1'h0)] : (($signed(wire2) ^ (reg58 ?
                          (8'ha9) : (8'ha1))) >>> (!(~wire2))));
  always
    @(posedge clk) begin
      if (($unsigned(wire54) != {($signed(reg59) ^ {reg60})}))
        begin
          reg62 <= ((wire61 ?
              $unsigned($unsigned(reg57)) : (|(reg59 ?
                  wire54 : wire0))) * (&($signed(wire3) ? {wire3} : wire0)));
        end
      else
        begin
          reg62 <= ((wire3 ?
                  $unsigned($signed(wire0)) : (|reg59[(3'h5):(2'h2)])) ?
              reg57[(2'h2):(1'h1)] : ({wire54} - (reg57[(2'h2):(1'h0)] ^ (!wire54))));
          reg63 <= {(~^reg59[(3'h4):(2'h3)])};
        end
      if ((!wire1))
        begin
          reg64 <= ((((wire1 ?
                  (8'hb0) : (8'had)) * wire61[(1'h1):(1'h0)]) & reg60[(3'h4):(3'h4)]) ?
              reg57 : ((reg60[(3'h4):(2'h2)] && (reg56 + wire61)) ?
                  ($unsigned(wire2) ?
                      $signed((8'ha0)) : $unsigned(wire61)) : wire3[(1'h0):(1'h0)]));
          reg65 <= {$signed(({reg60} + reg63))};
          if ($unsigned($unsigned(($signed(reg63) ~^ $signed(wire54)))))
            begin
              reg66 <= (~reg60);
              reg67 <= ((+(~|(~&reg57))) <= reg57[(4'h8):(3'h6)]);
              reg68 <= (($signed(reg59[(2'h2):(1'h1)]) ^~ reg67[(4'h8):(2'h3)]) <<< (((wire2 ^~ reg65) >= reg59[(3'h4):(2'h3)]) > ($unsigned(reg67) << $unsigned(reg57))));
            end
          else
            begin
              reg66 <= wire61[(1'h0):(1'h0)];
            end
        end
      else
        begin
          reg64 <= $unsigned(wire54[(3'h6):(1'h1)]);
          reg65 <= reg57[(2'h3):(1'h1)];
        end
      reg69 <= reg64[(1'h0):(1'h0)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param53 = ((((~(8'h9c)) - (|(8'ha2))) ? (8'haa) : ((|(8'ha5)) ? ((8'h9e) & (8'ha9)) : ((8'ha7) ? (8'ha6) : (8'ha7)))) ~^ {({(8'hb0)} ? ((8'h9d) ~^ (8'haf)) : ((8'haa) == (8'hb0)))}))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h4a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire8;
  input wire [(4'ha):(1'h0)] wire7;
  input wire signed [(4'ha):(1'h0)] wire6;
  input wire signed [(4'ha):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire52;
  wire signed [(4'hb):(1'h0)] wire50;
  wire [(4'ha):(1'h0)] wire29;
  wire [(4'hb):(1'h0)] wire13;
  wire signed [(4'ha):(1'h0)] wire12;
  wire signed [(4'h8):(1'h0)] wire11;
  wire [(4'hb):(1'h0)] wire10;
  wire signed [(2'h2):(1'h0)] wire9;
  assign y = {wire52,
                 wire50,
                 wire29,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 (1'h0)};
  assign wire9 = (^(+((^~(8'ha8)) || (wire6 ? wire5 : wire6))));
  assign wire10 = wire6[(1'h1):(1'h0)];
  assign wire11 = (((wire7 ?
                      (wire5 ? wire9 : wire5) : (wire10 ?
                          wire7 : wire10)) ~^ (wire9[(1'h0):(1'h0)] ^ ((8'h9c) * wire6))) + wire7[(1'h1):(1'h1)]);
  assign wire12 = (-$signed((+$signed(wire7))));
  assign wire13 = $signed($signed(wire9[(2'h2):(1'h0)]));
  module14 #() modinst30 (.wire18(wire13), .wire16(wire6), .y(wire29), .wire17(wire10), .wire15(wire5), .clk(clk));
  module31 #() modinst51 (.wire33(wire7), .wire34(wire12), .wire35(wire29), .clk(clk), .wire32(wire13), .y(wire50));
  assign wire52 = wire8;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module31
#(parameter param49 = ((~|(~&{(8'hab)})) >>> {(((8'ha7) >> (8'haa)) == ((8'h9f) * (8'hae)))}))
(y, clk, wire35, wire34, wire33, wire32);
  output wire [(32'h58):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire35;
  input wire signed [(4'ha):(1'h0)] wire34;
  input wire [(4'ha):(1'h0)] wire33;
  input wire signed [(2'h3):(1'h0)] wire32;
  wire signed [(4'h9):(1'h0)] wire48;
  wire [(2'h3):(1'h0)] wire47;
  wire signed [(3'h7):(1'h0)] wire46;
  wire [(4'hb):(1'h0)] wire45;
  wire [(4'hb):(1'h0)] wire44;
  wire signed [(3'h5):(1'h0)] wire43;
  wire [(3'h5):(1'h0)] wire42;
  wire [(3'h4):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire37;
  wire signed [(3'h6):(1'h0)] wire36;
  reg [(4'hb):(1'h0)] reg41 = (1'h0);
  reg [(3'h5):(1'h0)] reg40 = (1'h0);
  reg [(2'h3):(1'h0)] reg39 = (1'h0);
  assign y = {wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire38,
                 wire37,
                 wire36,
                 reg41,
                 reg40,
                 reg39,
                 (1'h0)};
  assign wire36 = wire34[(4'h8):(3'h5)];
  assign wire37 = wire34[(3'h4):(2'h2)];
  assign wire38 = {{wire36[(3'h4):(1'h0)]}};
  always
    @(posedge clk) begin
      reg39 <= ($signed($signed((+wire35))) ^ ($signed($signed(wire32)) ?
          ($unsigned(wire38) <= wire38) : $unsigned((wire36 && (8'h9e)))));
    end
  always
    @(posedge clk) begin
      reg40 <= (8'h9c);
      reg41 <= (($unsigned(((8'h9d) >>> wire35)) <= wire34) ?
          (~|wire37[(3'h5):(2'h2)]) : ((+wire33) && ((wire35 ?
              reg39 : reg40) == {reg40})));
    end
  assign wire42 = reg39[(2'h3):(2'h3)];
  assign wire43 = ($unsigned({wire38[(3'h4):(1'h0)]}) ?
                      ((&$unsigned(wire37)) << wire36[(1'h0):(1'h0)]) : (reg39[(2'h3):(2'h3)] != ((|wire32) ?
                          wire35[(3'h6):(3'h6)] : (reg40 ? (8'ha6) : wire32))));
  assign wire44 = $unsigned(reg41[(4'h9):(2'h3)]);
  assign wire45 = (!$unsigned($unsigned((reg40 < (8'ha3)))));
  assign wire46 = (~$signed(($signed((8'ha9)) ?
                      $signed(reg40) : $unsigned((8'haa)))));
  assign wire47 = wire32;
  assign wire48 = $signed(wire32);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire18;
  input wire [(4'hb):(1'h0)] wire17;
  input wire [(3'h6):(1'h0)] wire16;
  input wire signed [(4'ha):(1'h0)] wire15;
  wire signed [(3'h7):(1'h0)] wire28;
  wire [(4'h8):(1'h0)] wire27;
  wire signed [(4'hb):(1'h0)] wire26;
  wire [(3'h4):(1'h0)] wire21;
  wire [(3'h6):(1'h0)] wire20;
  wire signed [(3'h5):(1'h0)] wire19;
  reg [(3'h5):(1'h0)] reg25 = (1'h0);
  reg [(3'h5):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg22 = (1'h0);
  assign y = {wire28,
                 wire27,
                 wire26,
                 wire21,
                 wire20,
                 wire19,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire19 = $unsigned(((-wire17[(4'ha):(4'ha)]) ?
                      (wire15 ?
                          wire18 : ((8'h9d) * wire15)) : (~^wire17[(1'h1):(1'h1)])));
  assign wire20 = wire16[(1'h1):(1'h0)];
  assign wire21 = (+(~|$signed($unsigned(wire17))));
  always
    @(posedge clk) begin
      if (((wire16 >> wire19[(2'h2):(2'h2)]) == (({wire20} ?
          wire19 : (-wire17)) << $signed((wire18 << wire15)))))
        begin
          if (((-(wire18 ^ wire19[(2'h2):(2'h2)])) ?
              $unsigned(wire20) : wire18))
            begin
              reg22 <= {($unsigned($unsigned(wire16)) * wire20)};
            end
          else
            begin
              reg22 <= $signed(wire15);
              reg23 <= (^~{(~^$unsigned(wire20))});
            end
          if (wire18)
            begin
              reg24 <= (({(&wire18)} || (~|(wire19 <= wire19))) ^~ {((!wire21) == (wire16 ?
                      wire18 : reg22))});
            end
          else
            begin
              reg24 <= (!$signed((-$signed(wire19))));
              reg25 <= $unsigned(wire20[(2'h2):(2'h2)]);
            end
        end
      else
        begin
          reg22 <= {($signed((&(8'ha8))) <<< $signed(wire16[(3'h5):(2'h3)]))};
        end
    end
  assign wire26 = (($unsigned($unsigned(wire17)) ^ $unsigned($unsigned(reg22))) ?
                      ($signed((~reg22)) | $signed(((8'hac) ~^ reg22))) : ((^~(wire20 ?
                          wire21 : reg23)) ~^ wire16[(2'h3):(2'h2)]));
  assign wire27 = {$signed(((wire19 ^ reg22) <= wire18[(1'h1):(1'h1)]))};
  assign wire28 = $signed((reg25[(2'h2):(2'h2)] ?
                      reg22[(1'h1):(1'h0)] : (^~$unsigned(wire27))));
endmodule