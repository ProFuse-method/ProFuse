(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire59;
  wire signed [(4'h8):(1'h0)] wire55;
  wire [(2'h2):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire4;
  reg [(3'h4):(1'h0)] reg58 = (1'h0);
  reg [(3'h6):(1'h0)] reg57 = (1'h0);
  assign y = {wire59, wire55, wire5, wire4, reg58, reg57, (1'h0)};
  assign wire4 = ((~^wire1) ?
                     $unsigned(wire0) : $signed(($signed((8'haf)) & (wire2 & wire0))));
  assign wire5 = (&((^~$signed(wire4)) ? (-(!wire1)) : $unsigned(wire2)));
  module6 #() modinst56 (.wire7(wire4), .wire10(wire3), .clk(clk), .wire9(wire1), .wire8(wire0), .y(wire55));
  always
    @(posedge clk) begin
      reg57 <= $signed(wire55[(2'h2):(2'h2)]);
      reg58 <= ((((wire4 ? wire55 : wire4) - reg57) ?
              (wire4[(2'h2):(1'h0)] ?
                  $unsigned(wire3) : (wire4 ? wire4 : wire3)) : (wire0 ?
                  $signed(wire4) : $signed(wire0))) ?
          {wire2[(2'h3):(2'h3)]} : wire2);
    end
  assign wire59 = $unsigned(((!((8'h9c) ?
                      wire2 : wire4)) >>> (wire2[(1'h1):(1'h0)] != wire3[(3'h4):(2'h3)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire10;
  input wire signed [(4'h9):(1'h0)] wire9;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire [(3'h6):(1'h0)] wire7;
  wire signed [(4'h9):(1'h0)] wire53;
  wire signed [(3'h4):(1'h0)] wire52;
  wire signed [(2'h2):(1'h0)] wire48;
  wire [(4'h8):(1'h0)] wire46;
  wire [(4'ha):(1'h0)] wire24;
  wire signed [(4'h9):(1'h0)] wire11;
  reg [(3'h7):(1'h0)] reg54 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg51 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg50 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg49 = (1'h0);
  assign y = {wire53,
                 wire52,
                 wire48,
                 wire46,
                 wire24,
                 wire11,
                 reg54,
                 reg51,
                 reg50,
                 reg49,
                 (1'h0)};
  assign wire11 = (($unsigned($unsigned(wire8)) ? wire9 : wire7) ?
                      ($signed(wire10) >> wire10) : $signed($signed(((8'ha4) - wire9))));
  module12 #() modinst25 (.clk(clk), .wire15(wire7), .y(wire24), .wire14(wire11), .wire13(wire8), .wire16(wire10));
  module26 #() modinst47 (.wire27(wire9), .y(wire46), .clk(clk), .wire29(wire10), .wire28(wire8), .wire30(wire11));
  assign wire48 = $signed((wire11 ? wire8 : (wire8 & $signed(wire11))));
  always
    @(posedge clk) begin
      reg49 <= $signed((8'h9d));
      reg50 <= wire11;
      reg51 <= $unsigned((&wire10));
    end
  assign wire52 = (8'ha6);
  assign wire53 = $unsigned($signed(((+reg49) <= (^wire11))));
  always
    @(posedge clk) begin
      reg54 <= reg49[(4'h8):(3'h4)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module26
#(parameter param45 = {({(~&(8'h9c))} >>> (8'h9c))})
(y, clk, wire30, wire29, wire28, wire27);
  output wire [(32'h65):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire30;
  input wire signed [(3'h6):(1'h0)] wire29;
  input wire [(4'hb):(1'h0)] wire28;
  input wire signed [(4'h9):(1'h0)] wire27;
  wire [(4'h8):(1'h0)] wire44;
  wire [(4'hb):(1'h0)] wire43;
  wire signed [(4'hb):(1'h0)] wire42;
  wire signed [(4'h8):(1'h0)] wire38;
  wire [(2'h3):(1'h0)] wire37;
  wire [(4'hb):(1'h0)] wire35;
  wire [(4'h8):(1'h0)] wire34;
  wire [(2'h2):(1'h0)] wire33;
  wire signed [(3'h6):(1'h0)] wire32;
  wire signed [(3'h6):(1'h0)] wire31;
  reg signed [(2'h2):(1'h0)] reg41 = (1'h0);
  reg [(4'ha):(1'h0)] reg40 = (1'h0);
  reg [(4'h9):(1'h0)] reg39 = (1'h0);
  reg [(3'h5):(1'h0)] reg36 = (1'h0);
  assign y = {wire44,
                 wire43,
                 wire42,
                 wire38,
                 wire37,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 reg41,
                 reg40,
                 reg39,
                 reg36,
                 (1'h0)};
  assign wire31 = (((~^(~wire28)) ?
                          ((wire28 ?
                              wire30 : wire27) != $signed(wire28)) : wire27) ?
                      (^wire27[(4'h8):(3'h5)]) : $signed($signed({wire30})));
  assign wire32 = $unsigned(wire29);
  assign wire33 = $signed((($signed(wire32) && (~^(8'h9d))) ^ wire27[(1'h1):(1'h1)]));
  assign wire34 = wire28[(4'h8):(4'h8)];
  assign wire35 = $unsigned(((|(wire29 & wire31)) ?
                      (~&$signed(wire34)) : (&(~wire32))));
  always
    @(posedge clk) begin
      reg36 <= $signed((wire29[(1'h0):(1'h0)] >>> ((wire35 < wire33) ?
          (^~wire35) : wire28[(3'h4):(2'h3)])));
    end
  assign wire37 = ($signed(((wire28 ?
                          wire33 : wire30) & wire35[(1'h0):(1'h0)])) ?
                      wire27[(3'h6):(1'h1)] : $signed(wire33[(1'h1):(1'h1)]));
  assign wire38 = wire27;
  always
    @(posedge clk) begin
      reg39 <= $signed(((wire30 ?
          $unsigned(wire38) : (wire35 ? wire31 : (8'ha0))) * $signed(wire38)));
      reg40 <= $signed(({$signed(wire31)} ? $signed(reg36) : wire32));
      reg41 <= ((~^((wire32 ? wire37 : wire33) ? (~^wire27) : wire31)) ?
          wire30 : wire27);
    end
  assign wire42 = (8'h9c);
  assign wire43 = $unsigned((|$unsigned((8'ha3))));
  assign wire44 = $signed(wire30);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param23 = (((~|(~|(8'had))) ? (((8'haf) <<< (8'h9d)) * (|(8'ha6))) : (~^(~|(8'haf)))) - (((~|(8'ha9)) ? (-(8'ha2)) : (-(8'hae))) ? (8'ha5) : (~&((8'hae) ^~ (8'h9d))))))
(y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire16;
  input wire [(2'h2):(1'h0)] wire15;
  input wire [(3'h7):(1'h0)] wire14;
  input wire [(4'h9):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire22;
  wire [(3'h7):(1'h0)] wire21;
  wire [(4'hb):(1'h0)] wire20;
  wire signed [(3'h4):(1'h0)] wire19;
  wire [(4'h9):(1'h0)] wire18;
  wire signed [(3'h5):(1'h0)] wire17;
  assign y = {wire22, wire21, wire20, wire19, wire18, wire17, (1'h0)};
  assign wire17 = wire15;
  assign wire18 = {$signed(((~^wire14) ? (-(8'had)) : wire16))};
  assign wire19 = (!wire17[(3'h5):(2'h3)]);
  assign wire20 = ((((~&wire15) ? (^wire14) : wire13) >> ((^~wire14) ?
                          (~^wire15) : (wire17 ? wire13 : wire13))) ?
                      (~^(-(~|wire15))) : ($signed($unsigned((8'hae))) ?
                          wire13 : $signed((!(8'ha0)))));
  assign wire21 = ((($signed((8'ha3)) ? $unsigned(wire17) : $unsigned(wire16)) ?
                      (~^$signed(wire17)) : wire16[(1'h1):(1'h1)]) >>> {$unsigned($signed(wire19))});
  assign wire22 = wire17;
endmodule