(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h2f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire46;
  wire signed [(3'h6):(1'h0)] wire9;
  wire signed [(3'h6):(1'h0)] wire8;
  wire signed [(4'h8):(1'h0)] wire7;
  wire [(4'ha):(1'h0)] wire6;
  wire signed [(2'h3):(1'h0)] wire5;
  wire signed [(4'hb):(1'h0)] wire4;
  assign y = {wire46, wire9, wire8, wire7, wire6, wire5, wire4, (1'h0)};
  assign wire4 = wire0[(4'ha):(4'h8)];
  assign wire5 = (wire3[(3'h7):(3'h4)] << (8'h9c));
  assign wire6 = (~^wire2);
  assign wire7 = {(({wire6} * (!wire3)) ?
                         (wire4[(2'h2):(1'h0)] ?
                             $signed(wire1) : (wire1 | wire0)) : ($signed(wire0) ?
                             wire4 : (^wire5)))};
  assign wire8 = wire0;
  assign wire9 = $signed($signed($unsigned($signed(wire4))));
  module10 #() modinst47 (.wire13(wire7), .clk(clk), .wire11(wire9), .wire12(wire0), .y(wire46), .wire14(wire3));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param45 = (^(~^(|(~^(8'haf))))))
(y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h3c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire14;
  input wire [(3'h4):(1'h0)] wire13;
  input wire signed [(2'h3):(1'h0)] wire12;
  input wire [(3'h6):(1'h0)] wire11;
  wire signed [(4'hb):(1'h0)] wire44;
  wire [(4'h8):(1'h0)] wire42;
  wire signed [(4'h9):(1'h0)] wire20;
  wire signed [(4'ha):(1'h0)] wire19;
  wire [(3'h5):(1'h0)] wire18;
  wire signed [(2'h2):(1'h0)] wire17;
  wire [(4'hb):(1'h0)] wire16;
  wire signed [(2'h3):(1'h0)] wire15;
  assign y = {wire44,
                 wire42,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 (1'h0)};
  assign wire15 = wire11[(3'h4):(2'h3)];
  assign wire16 = $unsigned((^~({wire13} ?
                      $unsigned((8'ha8)) : $unsigned(wire14))));
  assign wire17 = (($unsigned((wire13 <<< wire13)) != (wire15 ^ $signed(wire12))) ?
                      wire15[(1'h1):(1'h0)] : wire11);
  assign wire18 = $unsigned((~^(!(~(8'ha8)))));
  assign wire19 = $signed(wire14);
  assign wire20 = wire12;
  module21 #() modinst43 (.wire24(wire16), .wire22(wire18), .clk(clk), .wire23(wire14), .wire25(wire20), .y(wire42));
  assign wire44 = $unsigned(wire17[(2'h2):(1'h0)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21
#(parameter param41 = (+(8'h9e)))
(y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h59):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire25;
  input wire [(4'hb):(1'h0)] wire24;
  input wire signed [(2'h3):(1'h0)] wire23;
  input wire signed [(3'h4):(1'h0)] wire22;
  wire signed [(4'h9):(1'h0)] wire40;
  wire [(4'h9):(1'h0)] wire39;
  wire [(3'h5):(1'h0)] wire38;
  wire signed [(2'h2):(1'h0)] wire37;
  wire signed [(2'h2):(1'h0)] wire36;
  wire signed [(2'h3):(1'h0)] wire35;
  wire [(3'h7):(1'h0)] wire34;
  reg [(2'h3):(1'h0)] reg33 = (1'h0);
  reg [(3'h6):(1'h0)] reg32 = (1'h0);
  reg [(2'h2):(1'h0)] reg31 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg30 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg28 = (1'h0);
  reg [(4'ha):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg26 = (1'h0);
  assign y = {wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg26 <= $unsigned($unsigned((+wire23[(1'h0):(1'h0)])));
      reg27 <= wire22;
    end
  always
    @(posedge clk) begin
      reg28 <= $signed({(reg27[(1'h0):(1'h0)] << reg27[(3'h4):(2'h2)])});
    end
  always
    @(posedge clk) begin
      if (wire24)
        begin
          reg29 <= $signed(wire25);
          reg30 <= $signed($unsigned(((~&(8'ha7)) <= $unsigned(wire24))));
          if (((wire24[(2'h3):(2'h3)] << $unsigned((wire22 ?
              wire23 : wire22))) | ($unsigned(reg26) <<< wire24[(3'h7):(3'h6)])))
            begin
              reg31 <= reg27;
            end
          else
            begin
              reg31 <= {$unsigned((^$unsigned(reg27)))};
              reg32 <= ((~^reg28[(3'h4):(1'h0)]) ?
                  reg29[(1'h0):(1'h0)] : $signed(wire22));
              reg33 <= ((!wire25[(2'h3):(2'h2)]) != reg31);
            end
        end
      else
        begin
          reg29 <= (reg31[(1'h0):(1'h0)] ?
              (wire22 ?
                  ((~|reg32) ?
                      wire22 : $signed(wire24)) : wire23[(1'h0):(1'h0)]) : (8'h9d));
        end
    end
  assign wire34 = wire23;
  assign wire35 = wire24[(3'h4):(3'h4)];
  assign wire36 = reg27;
  assign wire37 = (&$signed(wire25[(4'h9):(3'h7)]));
  assign wire38 = {((~&wire23[(2'h3):(2'h3)]) | wire34)};
  assign wire39 = ((($unsigned(wire38) > {(8'haf)}) < (~|{reg26})) > $unsigned($signed((wire24 << (8'ha8)))));
  assign wire40 = ($unsigned(($signed(wire35) ?
                          (reg31 && reg27) : (reg27 && wire24))) ?
                      $unsigned(wire37[(2'h2):(1'h1)]) : $unsigned(wire39[(4'h8):(3'h5)]));
endmodule