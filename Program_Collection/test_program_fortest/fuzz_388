(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param77 = (~|(&(((8'ha8) ? (8'haf) : (8'haf)) * ((8'ha3) && (8'hab))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h4e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire0;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(3'h6):(1'h0)] wire3;
  wire signed [(4'h8):(1'h0)] wire4;
  wire [(4'hb):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire10;
  wire [(4'h9):(1'h0)] wire12;
  wire [(4'ha):(1'h0)] wire75;
  reg [(2'h3):(1'h0)] reg6 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg7 = (1'h0);
  reg [(2'h2):(1'h0)] reg8 = (1'h0);
  reg [(4'ha):(1'h0)] reg11 = (1'h0);
  assign y = {wire4,
                 wire5,
                 wire9,
                 wire10,
                 wire12,
                 wire75,
                 reg6,
                 reg7,
                 reg8,
                 reg11,
                 (1'h0)};
  assign wire4 = wire2;
  assign wire5 = ($unsigned(({wire1} ^ $unsigned(wire0))) * (~|wire4));
  always
    @(posedge clk) begin
      reg6 <= ({(wire5 ? wire0[(3'h6):(2'h2)] : {wire4})} != wire4);
      reg7 <= ((!((wire3 <= wire2) - wire4)) && ($unsigned($unsigned(wire2)) ?
          ((-wire5) ?
              $unsigned(wire1) : reg6[(2'h3):(1'h1)]) : {wire3[(2'h3):(2'h3)]}));
      reg8 <= {$signed($signed((wire1 ? reg6 : (8'ha7))))};
    end
  assign wire9 = $signed((-$unsigned(wire1)));
  assign wire10 = (reg7[(1'h1):(1'h1)] == ($unsigned(((8'ha1) ? reg7 : reg7)) ?
                      wire0 : reg7));
  always
    @(posedge clk) begin
      reg11 <= {($signed({wire2}) ? $signed($signed(wire1)) : {(~|wire1)})};
    end
  assign wire12 = (~&wire5[(3'h4):(3'h4)]);
  module13 #() modinst76 (.wire17(wire5), .clk(clk), .wire15(reg7), .y(wire75), .wire14(wire4), .wire16(wire3));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param74 = (((|((8'h9f) & (8'h9f))) + ({(8'had)} > ((8'hab) << (8'ha1)))) ? (|(^((8'ha9) + (8'ha8)))) : ((((8'had) ? (8'ha2) : (8'ha8)) ? (8'ha6) : ((8'haf) >> (8'ha5))) ? (((8'ha3) | (8'h9f)) ? (~&(8'h9c)) : (^(8'ha5))) : (~|(^~(8'h9e))))))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h51):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire17;
  input wire signed [(3'h6):(1'h0)] wire16;
  input wire signed [(4'ha):(1'h0)] wire15;
  input wire [(4'h8):(1'h0)] wire14;
  wire [(4'h8):(1'h0)] wire73;
  wire [(3'h7):(1'h0)] wire71;
  wire [(2'h2):(1'h0)] wire50;
  wire signed [(4'hb):(1'h0)] wire49;
  wire [(4'ha):(1'h0)] wire48;
  wire signed [(3'h4):(1'h0)] wire47;
  wire signed [(4'ha):(1'h0)] wire46;
  wire [(4'hb):(1'h0)] wire45;
  wire signed [(3'h7):(1'h0)] wire44;
  wire [(4'ha):(1'h0)] wire42;
  assign y = {wire73,
                 wire71,
                 wire50,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire42,
                 (1'h0)};
  module18 #() modinst43 (.wire21(wire14), .wire22(wire16), .y(wire42), .wire20(wire15), .clk(clk), .wire19(wire17));
  assign wire44 = (~&wire42);
  assign wire45 = $signed(wire16);
  assign wire46 = $unsigned($unsigned(((!(8'h9f)) != (wire17 ~^ (8'hb0)))));
  assign wire47 = wire15[(1'h0):(1'h0)];
  assign wire48 = ((8'ha1) ^ wire16[(1'h1):(1'h1)]);
  assign wire49 = wire14;
  assign wire50 = (wire48[(2'h3):(1'h0)] ?
                      wire17 : (wire14[(3'h4):(1'h1)] ?
                          $unsigned({wire44}) : $unsigned($unsigned(wire42))));
  module51 #() modinst72 (wire71, clk, wire45, wire46, wire15, wire17);
  assign wire73 = (wire15 ~^ (wire15[(4'ha):(2'h2)] ^~ {$signed((8'had))}));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module51
#(parameter param70 = ({(&{(8'ha5)})} && ((((8'hab) ? (8'ha1) : (8'ha6)) ? {(8'ha9)} : ((8'h9e) ? (8'ha1) : (8'ha6))) ? (((8'ha2) >>> (8'hac)) ? ((8'h9c) ? (8'ha3) : (8'hb0)) : ((8'ha5) ^ (8'hb0))) : {((8'ha8) ? (8'hb0) : (8'ha4))})))
(y, clk, wire55, wire54, wire53, wire52);
  output wire [(32'h64):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire55;
  input wire [(4'ha):(1'h0)] wire54;
  input wire signed [(4'h9):(1'h0)] wire53;
  input wire [(4'hb):(1'h0)] wire52;
  wire [(4'hb):(1'h0)] wire64;
  wire signed [(3'h7):(1'h0)] wire63;
  wire [(3'h6):(1'h0)] wire62;
  wire signed [(4'ha):(1'h0)] wire59;
  wire signed [(4'h9):(1'h0)] wire58;
  wire signed [(3'h4):(1'h0)] wire57;
  wire [(3'h7):(1'h0)] wire56;
  reg [(3'h7):(1'h0)] reg69 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg68 = (1'h0);
  reg [(3'h4):(1'h0)] reg67 = (1'h0);
  reg [(3'h7):(1'h0)] reg66 = (1'h0);
  reg [(3'h4):(1'h0)] reg65 = (1'h0);
  reg [(4'h8):(1'h0)] reg61 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg60 = (1'h0);
  assign y = {wire64,
                 wire63,
                 wire62,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 reg65,
                 reg61,
                 reg60,
                 (1'h0)};
  assign wire56 = ((|(wire53 ?
                      $signed(wire54) : wire52)) <= {$unsigned(wire54)});
  assign wire57 = $unsigned(wire56[(2'h3):(1'h0)]);
  assign wire58 = (wire54[(3'h4):(1'h0)] >= $signed((wire55[(1'h0):(1'h0)] ?
                      wire57 : wire57)));
  assign wire59 = (!(^~(wire54 || (wire56 >> wire57))));
  always
    @(posedge clk) begin
      reg60 <= wire57;
      reg61 <= $signed($signed($unsigned((wire55 ^~ wire57))));
    end
  assign wire62 = ((~^$unsigned($signed((8'ha5)))) ?
                      ((|reg60[(3'h6):(1'h0)]) ?
                          $unsigned($signed(wire58)) : wire53[(2'h2):(1'h0)]) : wire58[(4'h8):(2'h2)]);
  assign wire63 = $unsigned(((((8'had) + wire59) & (wire62 & (8'hac))) >= reg60));
  assign wire64 = ($unsigned((wire63[(3'h4):(1'h0)] ? {wire62} : {wire59})) ?
                      (&(wire54[(3'h6):(3'h4)] == $unsigned(wire56))) : wire59[(4'h9):(3'h7)]);
  always
    @(posedge clk) begin
      if ((+reg61[(3'h6):(3'h5)]))
        begin
          reg65 <= (|$unsigned($signed((reg60 ? reg60 : wire54))));
          reg66 <= (wire52 * wire52[(3'h6):(3'h5)]);
        end
      else
        begin
          reg65 <= reg65;
          reg66 <= {wire52};
        end
      if (wire55)
        begin
          reg67 <= $unsigned(reg61[(4'h8):(3'h6)]);
          reg68 <= {$signed($signed($unsigned((8'hae))))};
        end
      else
        begin
          reg67 <= $unsigned(wire58);
          if (((reg67[(3'h4):(1'h1)] ?
                  $unsigned($signed(wire54)) : $unsigned({wire62})) ?
              (reg68 ?
                  ($unsigned((8'h9d)) ?
                      (~&wire63) : wire57) : $signed((wire52 < wire57))) : {wire56[(1'h1):(1'h0)]}))
            begin
              reg68 <= ($unsigned(reg60) ?
                  $unsigned($unsigned((reg66 >= wire54))) : ($unsigned($unsigned(reg68)) ?
                      $signed((reg65 ?
                          reg68 : wire57)) : wire59[(1'h0):(1'h0)]));
            end
          else
            begin
              reg68 <= $unsigned(({{reg67}} && reg67));
            end
          reg69 <= wire64;
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18
#(parameter param41 = {(((~&(8'ha2)) && (^(8'ha2))) ? {((8'ha2) && (8'had))} : ({(8'h9d)} ? (+(8'hae)) : ((8'hae) ? (8'haa) : (8'ha0))))})
(y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h6c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire22;
  input wire signed [(3'h4):(1'h0)] wire21;
  input wire [(4'ha):(1'h0)] wire20;
  input wire [(2'h2):(1'h0)] wire19;
  wire [(3'h4):(1'h0)] wire40;
  wire signed [(4'hb):(1'h0)] wire39;
  wire signed [(4'ha):(1'h0)] wire38;
  wire [(3'h5):(1'h0)] wire37;
  wire [(2'h2):(1'h0)] wire36;
  wire signed [(3'h5):(1'h0)] wire33;
  wire signed [(3'h7):(1'h0)] wire26;
  wire signed [(3'h4):(1'h0)] wire25;
  wire [(2'h3):(1'h0)] wire24;
  reg signed [(3'h7):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg34 = (1'h0);
  reg [(4'ha):(1'h0)] reg32 = (1'h0);
  reg [(2'h2):(1'h0)] reg31 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg30 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg29 = (1'h0);
  reg [(2'h2):(1'h0)] reg28 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg27 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg23 = (1'h0);
  assign y = {wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire33,
                 wire26,
                 wire25,
                 wire24,
                 reg35,
                 reg34,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 reg23,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg23 <= (~&wire22[(3'h4):(1'h0)]);
    end
  assign wire24 = $signed(wire22[(3'h4):(1'h0)]);
  assign wire25 = ((&((wire21 == wire19) <= wire20)) == (+({(8'ha6)} ?
                      $signed(wire20) : wire22)));
  assign wire26 = (!(!wire20));
  always
    @(posedge clk) begin
      if (wire24[(2'h3):(1'h1)])
        begin
          reg27 <= wire25;
          reg28 <= wire25[(1'h1):(1'h0)];
        end
      else
        begin
          reg27 <= {(((wire26 <<< wire20) ?
                      reg28[(1'h1):(1'h0)] : reg27[(1'h1):(1'h0)]) ?
                  wire25[(1'h1):(1'h0)] : $signed((|wire20)))};
          if ((~|wire20))
            begin
              reg28 <= $signed({wire20});
              reg29 <= {wire21[(1'h0):(1'h0)]};
              reg30 <= $signed(wire19);
            end
          else
            begin
              reg28 <= {reg30[(1'h0):(1'h0)]};
              reg29 <= (-(((-wire21) ? $signed((8'ha8)) : $unsigned(reg27)) ?
                  wire22[(2'h3):(2'h3)] : $unsigned(wire25[(1'h0):(1'h0)])));
            end
          reg31 <= (^~(($signed(wire21) ? wire20 : wire25[(1'h0):(1'h0)]) ?
              $signed((reg30 < reg23)) : {(~wire24)}));
        end
      reg32 <= (&((!reg27) ?
          $unsigned($unsigned((8'hb0))) : (&(wire25 ? (8'haa) : (8'ha8)))));
    end
  assign wire33 = (~((8'haa) == reg23));
  always
    @(posedge clk) begin
      reg34 <= (8'had);
      reg35 <= wire26;
    end
  assign wire36 = (8'h9c);
  assign wire37 = {$signed((reg29 != (wire21 ^~ wire24)))};
  assign wire38 = ((^wire24) ^~ (~&$signed(reg28)));
  assign wire39 = $signed((!reg31[(1'h0):(1'h0)]));
  assign wire40 = $unsigned(($unsigned($unsigned(wire24)) ?
                      (&((8'hab) ? (8'h9f) : reg28)) : reg29));
endmodule