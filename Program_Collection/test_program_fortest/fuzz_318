(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(4'hb):(1'h0)] wire54;
  wire [(4'hb):(1'h0)] wire53;
  wire signed [(4'ha):(1'h0)] wire51;
  wire [(4'hb):(1'h0)] wire49;
  wire signed [(3'h6):(1'h0)] wire48;
  wire [(4'hb):(1'h0)] wire47;
  wire signed [(4'hb):(1'h0)] wire46;
  wire [(4'ha):(1'h0)] wire44;
  assign y = {wire54,
                 wire53,
                 wire51,
                 wire49,
                 wire48,
                 wire47,
                 wire46,
                 wire44,
                 (1'h0)};
  module4 #() modinst45 (.y(wire44), .wire8(wire0), .wire6(wire1), .wire5(wire3), .clk(clk), .wire7(wire2));
  assign wire46 = wire3;
  assign wire47 = wire2;
  assign wire48 = (wire44 >= $unsigned((+$unsigned(wire2))));
  module4 #() modinst50 (wire49, clk, wire46, wire1, wire44, wire3);
  module4 #() modinst52 (wire51, clk, wire47, wire46, wire1, wire3);
  assign wire53 = (wire44[(4'h8):(1'h1)] <= $signed(($signed(wire2) <= (~^wire47))));
  module9 #() modinst55 (wire54, clk, wire0, wire46, wire51, wire53);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param43 = ({(^(|(8'haa)))} ? ({((8'h9f) - (8'ha1))} <= (+((8'hb0) ? (8'hac) : (8'ha3)))) : ((&((8'hab) && (8'haa))) ? (-(&(8'haf))) : (|{(8'h9d)}))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire8;
  input wire [(4'hb):(1'h0)] wire7;
  input wire [(4'ha):(1'h0)] wire6;
  input wire signed [(4'h8):(1'h0)] wire5;
  wire signed [(2'h2):(1'h0)] wire42;
  wire [(4'h9):(1'h0)] wire39;
  wire signed [(4'hb):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire37;
  wire [(3'h4):(1'h0)] wire35;
  reg [(3'h5):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  assign y = {wire42, wire39, wire38, wire37, wire35, reg41, reg40, (1'h0)};
  module9 #() modinst36 (.wire10(wire8), .wire13(wire7), .y(wire35), .wire12(wire5), .clk(clk), .wire11(wire6));
  assign wire37 = $unsigned((~|(+(wire5 ? wire7 : wire5))));
  assign wire38 = {$unsigned(((wire8 ? wire7 : wire7) ?
                          (wire5 ? (8'haf) : (8'ha8)) : $unsigned(wire37)))};
  assign wire39 = {$unsigned(wire37[(3'h7):(3'h5)])};
  always
    @(posedge clk) begin
      reg40 <= (wire8[(3'h7):(1'h0)] & $unsigned(wire6[(1'h0):(1'h0)]));
      reg41 <= ((+wire39) << wire37);
    end
  assign wire42 = $signed(wire35);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param34 = (~^((((8'ha8) == (8'ha9)) <= (~(8'haa))) ? ((&(8'ha7)) ? ((8'hab) ? (8'h9d) : (8'hac)) : (~|(8'ha0))) : ({(8'hab)} && {(8'ha7)}))))
(y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h79):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire13;
  input wire signed [(4'h8):(1'h0)] wire12;
  input wire signed [(4'ha):(1'h0)] wire11;
  input wire signed [(4'hb):(1'h0)] wire10;
  wire signed [(3'h4):(1'h0)] wire33;
  wire signed [(3'h6):(1'h0)] wire32;
  wire [(3'h4):(1'h0)] wire31;
  wire signed [(3'h5):(1'h0)] wire30;
  wire signed [(3'h7):(1'h0)] wire29;
  wire [(2'h3):(1'h0)] wire28;
  wire signed [(2'h3):(1'h0)] wire27;
  wire signed [(4'h9):(1'h0)] wire26;
  wire signed [(4'h8):(1'h0)] wire25;
  wire signed [(3'h5):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire14;
  reg [(3'h5):(1'h0)] reg23 = (1'h0);
  reg [(4'ha):(1'h0)] reg22 = (1'h0);
  reg [(3'h6):(1'h0)] reg21 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg20 = (1'h0);
  reg [(2'h3):(1'h0)] reg19 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg17 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg16 = (1'h0);
  reg [(3'h7):(1'h0)] reg15 = (1'h0);
  assign y = {wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire14,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 (1'h0)};
  assign wire14 = $signed((~^((wire10 ? wire12 : wire12) >>> wire13)));
  always
    @(posedge clk) begin
      reg15 <= wire11;
      reg16 <= ((^~$signed(wire13[(3'h5):(3'h5)])) >>> {({reg15} | wire13[(3'h4):(1'h1)])});
      reg17 <= wire10[(3'h6):(2'h3)];
    end
  always
    @(posedge clk) begin
      if ((+$signed(wire14)))
        begin
          reg18 <= reg17[(2'h3):(1'h0)];
          reg19 <= {wire13[(2'h3):(2'h3)]};
        end
      else
        begin
          if ((^~wire10[(1'h1):(1'h0)]))
            begin
              reg18 <= $signed({$signed((~&reg19))});
            end
          else
            begin
              reg18 <= reg15[(3'h6):(3'h4)];
              reg19 <= ((((~|wire12) ~^ $signed(wire12)) ?
                  $unsigned(((8'haa) ?
                      wire12 : reg17)) : $unsigned((8'ha6))) <<< ($signed($unsigned((8'hae))) ?
                  $unsigned((wire13 ?
                      reg16 : (8'ha7))) : (((8'ha0) <<< wire13) > $unsigned(reg15))));
              reg20 <= $signed(((^(reg15 < reg16)) ^~ $signed($signed(wire13))));
            end
          reg21 <= reg16;
          reg22 <= ($unsigned(((wire14 ? wire10 : reg21) ^ wire13)) ^~ (8'h9f));
        end
      reg23 <= (+((^(+(8'ha5))) ?
          ((reg20 ? reg16 : reg15) ?
              $unsigned(reg17) : (+reg15)) : (~$unsigned(reg21))));
    end
  assign wire24 = (&(|wire12));
  assign wire25 = (^(!reg19));
  assign wire26 = $signed((reg17[(3'h5):(3'h4)] | $signed((&wire11))));
  assign wire27 = $unsigned(($signed((reg20 ? reg18 : reg17)) ?
                      wire13[(1'h1):(1'h1)] : {$signed(reg19)}));
  assign wire28 = (^~$signed($signed(reg16[(2'h2):(1'h1)])));
  assign wire29 = $unsigned((((reg18 >>> wire25) ?
                          (wire12 ? reg17 : reg22) : (reg19 ?
                              (8'hac) : wire14)) ?
                      ($signed(wire28) <<< $signed((8'hac))) : ((&(8'h9e)) ?
                          $unsigned(reg16) : (reg17 * wire10))));
  assign wire30 = ((~|$signed(wire13[(3'h4):(3'h4)])) ?
                      ($signed(reg20[(1'h0):(1'h0)]) - ($unsigned(wire26) ?
                          $unsigned(wire28) : (reg16 ?
                              (8'h9e) : wire10))) : $unsigned($signed({reg20})));
  assign wire31 = (wire13[(4'h9):(1'h1)] && $unsigned(reg16));
  assign wire32 = reg16;
  assign wire33 = (~$signed($signed((reg22 > reg16))));
endmodule