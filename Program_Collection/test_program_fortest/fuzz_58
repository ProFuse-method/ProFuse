(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param44 = ((8'had) - ({((8'h9e) ? (8'haa) : (8'h9d))} ? (((8'ha5) ? (8'ha4) : (8'ha1)) ? {(8'haf)} : (~(8'hab))) : (((8'ha7) > (8'ha9)) & (8'h9e)))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(3'h6):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire41;
  wire [(4'hb):(1'h0)] wire40;
  wire signed [(4'ha):(1'h0)] wire39;
  wire [(4'hb):(1'h0)] wire38;
  wire signed [(4'h9):(1'h0)] wire36;
  wire [(3'h7):(1'h0)] wire6;
  wire signed [(3'h5):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire4;
  reg signed [(4'ha):(1'h0)] reg43 = (1'h0);
  assign y = {wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire36,
                 wire6,
                 wire5,
                 wire4,
                 reg43,
                 (1'h0)};
  assign wire4 = $unsigned(wire0);
  assign wire5 = $unsigned(wire4);
  assign wire6 = (8'hab);
  module7 #() modinst37 (wire36, clk, wire1, wire2, wire3, wire4);
  assign wire38 = wire1;
  assign wire39 = ($unsigned(($unsigned(wire3) & $unsigned(wire4))) < $unsigned(wire2[(1'h0):(1'h0)]));
  assign wire40 = ({wire2} * $signed($unsigned((wire5 ? wire38 : wire36))));
  module7 #() modinst42 (.wire9(wire3), .wire8(wire4), .clk(clk), .y(wire41), .wire10(wire0), .wire11(wire39));
  always
    @(posedge clk) begin
      reg43 <= (wire4 << (~^(|$unsigned(wire39))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param35 = ({((~&(8'hae)) ^ ((8'ha5) ? (8'hb0) : (8'hae)))} ? (~&({(8'ha3)} ? (!(8'hae)) : ((8'haa) * (8'ha9)))) : ((~^((8'ha0) ~^ (8'ha1))) ? (~((8'haa) ? (8'hae) : (8'hb0))) : (((8'ha3) ? (8'h9f) : (8'hac)) <= (~&(8'ha9))))))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire11;
  input wire signed [(2'h3):(1'h0)] wire10;
  input wire signed [(4'h9):(1'h0)] wire9;
  input wire signed [(4'h9):(1'h0)] wire8;
  wire [(3'h4):(1'h0)] wire34;
  wire signed [(4'h9):(1'h0)] wire33;
  wire signed [(4'h9):(1'h0)] wire31;
  wire [(4'hb):(1'h0)] wire12;
  assign y = {wire34, wire33, wire31, wire12, (1'h0)};
  assign wire12 = wire9[(1'h0):(1'h0)];
  module13 #() modinst32 (wire31, clk, wire10, wire12, wire9, wire8);
  assign wire33 = wire10[(2'h2):(1'h1)];
  assign wire34 = $signed($signed(wire10[(2'h3):(2'h3)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13  (y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire17;
  input wire signed [(3'h6):(1'h0)] wire16;
  input wire [(4'h9):(1'h0)] wire15;
  input wire signed [(2'h3):(1'h0)] wire14;
  wire signed [(4'hb):(1'h0)] wire30;
  wire signed [(2'h3):(1'h0)] wire29;
  wire signed [(3'h4):(1'h0)] wire26;
  wire [(4'h9):(1'h0)] wire25;
  wire [(3'h6):(1'h0)] wire21;
  wire signed [(4'hb):(1'h0)] wire20;
  wire [(2'h2):(1'h0)] wire19;
  wire signed [(2'h3):(1'h0)] wire18;
  reg signed [(3'h6):(1'h0)] reg28 = (1'h0);
  reg [(2'h3):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg24 = (1'h0);
  reg [(3'h5):(1'h0)] reg23 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg22 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire26,
                 wire25,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 reg28,
                 reg27,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire18 = (&(~|(((8'ha9) ? wire16 : wire17) ?
                      {wire17} : (wire16 ? wire17 : wire16))));
  assign wire19 = wire17;
  assign wire20 = (wire18 ?
                      $signed((&$unsigned(wire14))) : $unsigned((wire14 ?
                          wire15[(2'h3):(1'h1)] : {(8'h9d)})));
  assign wire21 = (^~wire18[(1'h1):(1'h0)]);
  always
    @(posedge clk) begin
      reg22 <= {{wire19}};
      reg23 <= $unsigned($unsigned(wire19[(2'h2):(1'h0)]));
      reg24 <= (~^$signed((wire19[(2'h2):(1'h0)] ?
          (wire20 >> wire21) : (wire14 >= wire21))));
    end
  assign wire25 = (((^~reg24[(2'h2):(1'h0)]) & ((wire16 ?
                      reg23 : wire17) <= (wire15 || wire17))) || wire20[(3'h7):(3'h7)]);
  assign wire26 = {$signed($unsigned((wire19 ? wire19 : wire16)))};
  always
    @(posedge clk) begin
      reg27 <= ($signed(((wire19 >> wire18) + $signed(wire14))) ?
          (wire19 <<< $unsigned(reg23[(2'h3):(1'h0)])) : wire20[(2'h3):(2'h2)]);
      reg28 <= (~^(({wire26} ? $unsigned(wire14) : wire25) >= {(~&reg24)}));
    end
  assign wire29 = $signed($signed({$unsigned(reg23)}));
  assign wire30 = ($unsigned((((8'ha5) ? (8'hac) : wire20) << {wire17})) ?
                      $unsigned((8'ha5)) : wire26[(3'h4):(1'h0)]);
endmodule