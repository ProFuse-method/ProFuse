(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param95 = ({((8'haf) ? ((8'ha4) ? (8'ha4) : (8'hab)) : ((8'ha8) | (8'ha4)))} ? {(((8'ha8) ? (8'ha5) : (8'ha4)) == (|(8'haf)))} : (^((!(8'ha6)) ? {(8'hae)} : {(8'ha2)}))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h5c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire0;
  input wire [(4'h8):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire3;
  wire [(4'hb):(1'h0)] wire94;
  wire signed [(4'h9):(1'h0)] wire93;
  wire signed [(2'h3):(1'h0)] wire92;
  wire [(3'h6):(1'h0)] wire91;
  wire signed [(2'h3):(1'h0)] wire90;
  wire [(3'h7):(1'h0)] wire89;
  wire [(4'ha):(1'h0)] wire4;
  wire [(4'ha):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire16;
  wire signed [(2'h3):(1'h0)] wire18;
  wire [(4'ha):(1'h0)] wire87;
  reg [(4'h8):(1'h0)] reg19 = (1'h0);
  assign y = {wire94,
                 wire93,
                 wire92,
                 wire91,
                 wire90,
                 wire89,
                 wire4,
                 wire5,
                 wire16,
                 wire18,
                 wire87,
                 reg19,
                 (1'h0)};
  assign wire4 = (wire2[(3'h4):(3'h4)] * (wire2 ?
                     wire1[(2'h3):(1'h1)] : $unsigned($unsigned(wire0))));
  assign wire5 = ($unsigned($unsigned({wire2})) ?
                     {{$unsigned(wire4)}} : wire0[(3'h5):(2'h3)]);
  module6 #() modinst17 (wire16, clk, wire5, wire2, wire1, wire3);
  assign wire18 = (&(~^((wire1 ^~ wire5) ?
                      $signed((8'ha3)) : (wire5 || (8'ha0)))));
  always
    @(posedge clk) begin
      reg19 <= $signed((~^{$signed(wire0)}));
    end
  module20 #() modinst88 (wire87, clk, reg19, wire2, wire5, wire16);
  assign wire89 = $signed((~&($unsigned(wire87) || $unsigned(wire4))));
  assign wire90 = (wire4 ?
                      wire3 : ({$unsigned(wire3)} ?
                          (-(wire16 && wire0)) : {{wire3}}));
  assign wire91 = (8'haf);
  assign wire92 = wire89;
  assign wire93 = $signed(((~$signed(wire16)) ? wire89 : $signed(wire0)));
  assign wire94 = (~^wire91[(1'h1):(1'h1)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param86 = (~|((((8'haf) + (8'ha0)) * (~^(8'haf))) ? (((8'h9d) ? (8'hac) : (8'ha2)) ? ((8'ha9) >> (8'had)) : ((8'hb0) - (8'ha1))) : (8'ha2))))
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h76):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire24;
  input wire signed [(3'h7):(1'h0)] wire23;
  input wire signed [(3'h5):(1'h0)] wire22;
  input wire [(3'h5):(1'h0)] wire21;
  wire signed [(4'hb):(1'h0)] wire85;
  wire signed [(2'h2):(1'h0)] wire84;
  wire [(2'h3):(1'h0)] wire83;
  wire signed [(3'h4):(1'h0)] wire82;
  wire [(4'h8):(1'h0)] wire81;
  wire signed [(3'h4):(1'h0)] wire80;
  wire signed [(2'h2):(1'h0)] wire78;
  wire [(2'h2):(1'h0)] wire58;
  wire [(3'h7):(1'h0)] wire57;
  wire signed [(3'h5):(1'h0)] wire47;
  wire signed [(4'ha):(1'h0)] wire25;
  reg [(3'h7):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg55 = (1'h0);
  reg [(4'h9):(1'h0)] reg54 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg53 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg52 = (1'h0);
  reg [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(4'h8):(1'h0)] reg50 = (1'h0);
  reg [(4'h8):(1'h0)] reg49 = (1'h0);
  assign y = {wire85,
                 wire84,
                 wire83,
                 wire82,
                 wire81,
                 wire80,
                 wire78,
                 wire58,
                 wire57,
                 wire47,
                 wire25,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 (1'h0)};
  assign wire25 = wire24;
  module26 #() modinst48 (.wire30(wire24), .wire27(wire22), .wire29(wire21), .wire28(wire25), .y(wire47), .clk(clk));
  always
    @(posedge clk) begin
      reg49 <= wire24[(2'h2):(1'h1)];
      if (wire22[(2'h3):(2'h3)])
        begin
          reg50 <= $signed(($signed((&wire24)) ?
              $signed($signed((8'hb0))) : $unsigned(wire47)));
          if ({((wire23[(2'h2):(1'h1)] ? wire25 : {reg50}) ? wire22 : wire21)})
            begin
              reg51 <= wire47;
            end
          else
            begin
              reg51 <= $unsigned(({$signed(reg50)} ?
                  ((wire47 >> reg49) != reg49[(1'h0):(1'h0)]) : reg51));
              reg52 <= wire22;
            end
          if ((reg49 ?
              (wire22[(1'h1):(1'h0)] ?
                  (^~(wire47 ?
                      wire22 : reg50)) : $signed($unsigned((8'had)))) : $unsigned(wire25[(3'h5):(2'h2)])))
            begin
              reg53 <= $unsigned($unsigned($unsigned(reg50)));
              reg54 <= {wire22};
              reg55 <= ((8'hab) >>> (reg53[(1'h1):(1'h0)] < wire24[(2'h2):(1'h0)]));
            end
          else
            begin
              reg53 <= $unsigned((~&wire25[(1'h0):(1'h0)]));
              reg54 <= $signed(wire21);
              reg55 <= {$unsigned(reg50[(2'h2):(1'h0)])};
            end
        end
      else
        begin
          reg50 <= reg55;
        end
      reg56 <= ((~^wire21[(3'h5):(2'h2)]) ? reg51 : {wire24});
    end
  assign wire57 = $unsigned(reg52[(1'h0):(1'h0)]);
  assign wire58 = $unsigned($unsigned(reg52));
  module59 #() modinst79 (.wire62(wire24), .clk(clk), .wire60(wire25), .y(wire78), .wire63(reg51), .wire61(reg56));
  assign wire80 = reg49;
  assign wire81 = reg51[(4'hb):(4'hb)];
  assign wire82 = ((~&{wire22[(2'h2):(1'h1)]}) ?
                      $unsigned(reg56[(3'h5):(1'h0)]) : {(!$signed(wire81))});
  assign wire83 = reg53[(1'h1):(1'h0)];
  assign wire84 = (wire24[(3'h4):(3'h4)] ?
                      wire82[(2'h2):(1'h1)] : $unsigned(reg52));
  assign wire85 = ({$signed(wire57[(3'h4):(1'h1)])} <<< wire57[(3'h7):(2'h2)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param15 = ({({(8'hab)} ? (-(8'ha0)) : ((8'hae) ? (8'ha3) : (8'h9e)))} ? (~^({(8'ha9)} ? {(8'h9f)} : (~&(8'hab)))) : {((-(8'had)) & (|(8'h9e)))}))
(y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h16):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire [(4'ha):(1'h0)] wire9;
  input wire [(4'h8):(1'h0)] wire8;
  input wire signed [(3'h6):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire14;
  wire signed [(2'h3):(1'h0)] wire13;
  wire signed [(3'h5):(1'h0)] wire12;
  wire [(3'h5):(1'h0)] wire11;
  assign y = {wire14, wire13, wire12, wire11, (1'h0)};
  assign wire11 = (~|wire10[(4'h9):(4'h8)]);
  assign wire12 = {{(&wire10[(3'h5):(3'h4)])}};
  assign wire13 = ($unsigned($unsigned($signed(wire11))) ?
                      $signed(($unsigned((8'haf)) ?
                          wire8[(4'h8):(3'h4)] : (wire7 ?
                              wire12 : (8'h9c)))) : (({wire7} - {wire10}) <= $signed(wire8[(3'h7):(2'h2)])));
  assign wire14 = wire11[(2'h2):(1'h1)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module59
#(parameter param77 = (&(-((!(8'ha5)) || ((8'ha3) << (8'hae))))))
(y, clk, wire63, wire62, wire61, wire60);
  output wire [(32'h48):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire63;
  input wire [(2'h3):(1'h0)] wire62;
  input wire signed [(3'h7):(1'h0)] wire61;
  input wire [(4'h9):(1'h0)] wire60;
  wire signed [(4'h9):(1'h0)] wire76;
  wire signed [(4'h9):(1'h0)] wire73;
  wire [(2'h3):(1'h0)] wire65;
  wire signed [(2'h2):(1'h0)] wire64;
  reg signed [(3'h6):(1'h0)] reg75 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg74 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg72 = (1'h0);
  reg [(4'ha):(1'h0)] reg71 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg70 = (1'h0);
  reg [(2'h3):(1'h0)] reg69 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg68 = (1'h0);
  reg [(2'h3):(1'h0)] reg67 = (1'h0);
  reg [(3'h7):(1'h0)] reg66 = (1'h0);
  assign y = {wire76,
                 wire73,
                 wire65,
                 wire64,
                 reg75,
                 reg74,
                 reg72,
                 reg71,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 reg66,
                 (1'h0)};
  assign wire64 = {(~&$signed((wire60 ? wire61 : wire63)))};
  assign wire65 = ((^~($signed(wire60) <= wire64[(2'h2):(1'h0)])) * wire63[(1'h1):(1'h0)]);
  always
    @(posedge clk) begin
      reg66 <= $unsigned(({(|wire62)} ?
          wire62[(2'h3):(2'h3)] : (~$unsigned(wire65))));
      reg67 <= $signed((&$unsigned(reg66)));
      reg68 <= (^~(((!wire65) ? (8'h9f) : (!wire65)) || $signed(wire61)));
    end
  always
    @(posedge clk) begin
      reg69 <= wire65[(1'h1):(1'h1)];
      reg70 <= reg66[(1'h0):(1'h0)];
      if ($unsigned(reg66[(3'h4):(1'h0)]))
        begin
          reg71 <= (wire64 ? $unsigned((-reg66)) : {(~|$signed(reg69))});
          reg72 <= {$signed($unsigned($signed(wire61)))};
        end
      else
        begin
          reg71 <= (reg68 ?
              $signed(($unsigned((8'ha9)) ?
                  ((8'h9c) < (8'ha5)) : {reg69})) : (reg71 ?
                  ((~wire64) * wire61[(2'h2):(1'h0)]) : ({wire63} ?
                      $unsigned(reg69) : wire65)));
          reg72 <= $unsigned($signed(wire62[(2'h2):(2'h2)]));
        end
    end
  assign wire73 = (+reg68[(3'h5):(2'h3)]);
  always
    @(posedge clk) begin
      reg74 <= (&reg66[(3'h6):(3'h6)]);
      reg75 <= (8'hae);
    end
  assign wire76 = $signed($unsigned((~&(wire64 ^~ (8'hac)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module26  (y, clk, wire30, wire29, wire28, wire27);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire30;
  input wire signed [(2'h2):(1'h0)] wire29;
  input wire [(4'ha):(1'h0)] wire28;
  input wire [(2'h2):(1'h0)] wire27;
  wire signed [(4'h8):(1'h0)] wire46;
  wire signed [(3'h6):(1'h0)] wire38;
  wire [(4'ha):(1'h0)] wire37;
  wire [(4'ha):(1'h0)] wire36;
  reg signed [(4'h9):(1'h0)] reg45 = (1'h0);
  reg [(2'h3):(1'h0)] reg44 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg43 = (1'h0);
  reg [(2'h3):(1'h0)] reg42 = (1'h0);
  reg [(3'h7):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg39 = (1'h0);
  reg [(3'h7):(1'h0)] reg35 = (1'h0);
  reg [(3'h6):(1'h0)] reg34 = (1'h0);
  reg [(2'h2):(1'h0)] reg33 = (1'h0);
  reg [(4'ha):(1'h0)] reg32 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg31 = (1'h0);
  assign y = {wire46,
                 wire38,
                 wire37,
                 wire36,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg31 <= (|(8'ha4));
      reg32 <= (~|(!{reg31}));
      if ((^~$signed(reg31[(1'h0):(1'h0)])))
        begin
          if (((~|(^((8'ha5) ? (8'haa) : wire28))) ?
              {((wire28 ?
                      wire30 : wire27) >>> wire28[(4'h8):(1'h0)])} : ($unsigned(wire30) ^ ((wire30 ?
                  (8'ha2) : reg32) & (8'hae)))))
            begin
              reg33 <= wire29;
              reg34 <= ((~^(reg33[(2'h2):(1'h0)] ?
                  (reg32 | reg31) : ((8'ha4) ? wire30 : wire30))) >>> reg32);
              reg35 <= $signed(($unsigned(reg33) ^~ (wire29[(2'h2):(1'h1)] ?
                  reg34[(2'h2):(1'h1)] : $unsigned(reg34))));
            end
          else
            begin
              reg33 <= ($unsigned((!(-reg33))) ?
                  $unsigned(wire30) : $unsigned($unsigned({reg32})));
            end
        end
      else
        begin
          if ($signed({$unsigned((reg35 - reg35))}))
            begin
              reg33 <= $signed((~reg32[(4'h8):(3'h7)]));
              reg34 <= wire29[(1'h0):(1'h0)];
            end
          else
            begin
              reg33 <= (+$signed((+(~^wire29))));
              reg34 <= ($unsigned($unsigned((!reg33))) ?
                  {reg35} : $signed($signed((wire28 && wire27))));
              reg35 <= $unsigned((8'h9c));
            end
        end
    end
  assign wire36 = reg31;
  assign wire37 = $unsigned((reg31[(2'h3):(1'h0)] ?
                      (reg31[(2'h3):(1'h1)] ?
                          (-wire29) : (reg35 ?
                              reg32 : reg35)) : wire29[(1'h1):(1'h0)]));
  assign wire38 = $unsigned(((^$signed(wire30)) && {$unsigned(wire29)}));
  always
    @(posedge clk) begin
      if (wire29[(1'h1):(1'h1)])
        begin
          reg39 <= ({(wire30[(3'h5):(3'h5)] + (|reg34))} ?
              $unsigned(($signed(wire36) ?
                  (8'h9c) : $signed(wire36))) : $signed(((wire37 ?
                      (8'ha7) : reg31) ?
                  ((8'ha0) ? reg34 : wire29) : (^reg35))));
          reg40 <= (wire28[(4'h8):(3'h7)] ?
              (wire27[(2'h2):(1'h1)] << {(reg34 ~^ wire30)}) : ((~&(~^(8'haf))) ?
                  ((reg31 ? (8'hb0) : wire38) && {reg35}) : ((wire28 ?
                      reg35 : wire36) || (wire38 ? wire28 : wire29))));
        end
      else
        begin
          if ($unsigned(((((8'ha7) ? reg35 : reg33) != reg31) ?
              ({reg32} << reg33) : wire30)))
            begin
              reg39 <= reg32[(4'ha):(4'h9)];
            end
          else
            begin
              reg39 <= (((reg34 != $unsigned(wire30)) ?
                      $signed(wire37[(4'h9):(4'h8)]) : reg34) ?
                  $signed(wire29) : $unsigned($signed((~&wire30))));
            end
          reg40 <= {wire37};
          if ($signed($signed((-reg32))))
            begin
              reg41 <= {((wire27[(1'h1):(1'h0)] | $unsigned(reg34)) ?
                      ($signed(reg39) ?
                          wire28[(3'h4):(1'h0)] : reg39[(1'h1):(1'h0)]) : {(^~reg31)})};
              reg42 <= reg31[(2'h2):(1'h0)];
              reg43 <= $signed(reg41);
            end
          else
            begin
              reg41 <= {$unsigned((+((8'ha4) ? wire30 : (8'ha3))))};
              reg42 <= $unsigned($signed($unsigned(wire36)));
              reg43 <= $unsigned(reg43);
            end
        end
      reg44 <= reg31;
      reg45 <= (reg31[(2'h3):(2'h2)] ?
          (wire37 ?
              (((8'hae) ? reg39 : wire37) || (reg41 ?
                  (8'h9d) : (8'ha8))) : ({reg33} ?
                  (reg42 ? wire38 : wire30) : (reg40 ?
                      reg35 : wire36))) : $unsigned(wire30));
    end
  assign wire46 = (^$unsigned(((wire28 < reg42) ? reg39 : reg43)));
endmodule