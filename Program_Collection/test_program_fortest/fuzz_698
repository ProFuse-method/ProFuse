(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h86):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(3'h4):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire1;
  input wire [(2'h2):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire68;
  wire [(3'h4):(1'h0)] wire67;
  wire signed [(2'h2):(1'h0)] wire66;
  wire [(2'h3):(1'h0)] wire65;
  wire signed [(3'h7):(1'h0)] wire59;
  wire [(4'h9):(1'h0)] wire58;
  wire signed [(4'h8):(1'h0)] wire57;
  wire signed [(3'h5):(1'h0)] wire51;
  wire [(2'h2):(1'h0)] wire49;
  wire [(4'h9):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire4;
  reg [(3'h6):(1'h0)] reg64 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg63 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg62 = (1'h0);
  reg [(3'h6):(1'h0)] reg61 = (1'h0);
  reg [(3'h4):(1'h0)] reg60 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg56 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg55 = (1'h0);
  reg [(4'ha):(1'h0)] reg54 = (1'h0);
  reg [(4'ha):(1'h0)] reg53 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg52 = (1'h0);
  assign y = {wire68,
                 wire67,
                 wire66,
                 wire65,
                 wire59,
                 wire58,
                 wire57,
                 wire51,
                 wire49,
                 wire5,
                 wire4,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 (1'h0)};
  assign wire4 = ($unsigned((8'ha0)) ?
                     $unsigned((8'ha4)) : $signed($signed(wire3[(1'h1):(1'h0)])));
  assign wire5 = wire2[(1'h0):(1'h0)];
  module6 #() modinst50 (.wire9(wire4), .wire7(wire5), .y(wire49), .clk(clk), .wire8(wire3), .wire10(wire1));
  assign wire51 = $unsigned($unsigned(wire4[(3'h4):(1'h1)]));
  always
    @(posedge clk) begin
      reg52 <= ((~^wire51[(3'h4):(3'h4)]) | ($unsigned($unsigned(wire5)) * $unsigned((-wire3))));
      if ($signed(wire49[(1'h1):(1'h0)]))
        begin
          reg53 <= wire0;
          if ((!wire3[(4'hb):(2'h3)]))
            begin
              reg54 <= wire4[(3'h5):(1'h1)];
              reg55 <= $unsigned(((!(wire1 ? wire2 : (8'hb0))) ?
                  ((~&reg53) ?
                      (wire3 ? (8'h9c) : wire4) : (wire5 ?
                          (8'ha7) : wire49)) : {wire4}));
              reg56 <= ((reg55[(1'h1):(1'h1)] - $signed(wire49)) & $signed($unsigned($unsigned((8'ha1)))));
            end
          else
            begin
              reg54 <= ({{{reg54}}} == (reg55[(2'h2):(1'h0)] ?
                  wire1 : (^(+wire0))));
            end
        end
      else
        begin
          reg53 <= ($unsigned(reg53[(4'ha):(1'h0)]) ?
              ($signed((~&(8'h9e))) ?
                  ((wire4 ? reg54 : wire49) ?
                      reg52[(1'h1):(1'h0)] : wire4[(3'h6):(3'h6)]) : (-(wire49 << wire3))) : $signed($unsigned(wire51)));
          reg54 <= wire2[(1'h1):(1'h0)];
        end
    end
  assign wire57 = (({(~&wire3)} | wire0) ^~ reg54[(3'h7):(3'h4)]);
  assign wire58 = $unsigned($signed((~|(wire0 != wire51))));
  assign wire59 = $unsigned($unsigned($signed(wire57[(3'h4):(3'h4)])));
  always
    @(posedge clk) begin
      reg60 <= $unsigned((+((reg56 ~^ wire49) ?
          $unsigned(reg56) : ((8'h9f) ? wire58 : wire4))));
      if ((&wire2))
        begin
          if ($unsigned(($signed(wire59) ^ $unsigned((-(8'h9f))))))
            begin
              reg61 <= reg54;
            end
          else
            begin
              reg61 <= (((wire1 ? $unsigned(reg55) : {wire51}) ?
                      {reg56} : {wire5[(3'h5):(2'h3)]}) ?
                  ((|(8'ha0)) ? reg55 : wire2) : $signed(wire2));
            end
        end
      else
        begin
          reg61 <= $signed(reg56);
          if ($signed(wire3))
            begin
              reg62 <= (reg55 ~^ (8'ha9));
              reg63 <= ((8'ha1) ^ $signed({((8'ha2) & wire3)}));
              reg64 <= $unsigned($unsigned((8'h9d)));
            end
          else
            begin
              reg62 <= {$signed($unsigned((reg53 ? reg60 : wire3)))};
              reg63 <= reg61;
            end
        end
    end
  assign wire65 = $signed($unsigned($signed((reg55 ? reg52 : wire3))));
  assign wire66 = wire0[(1'h0):(1'h0)];
  assign wire67 = $signed($signed(($signed(reg56) ? reg60 : $signed(reg52))));
  assign wire68 = $signed($signed(((reg55 ?
                      reg54 : wire51) - (reg54 > reg62))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6
#(parameter param48 = ((|((|(8'h9e)) - ((8'haf) ? (8'ha2) : (8'ha0)))) ? (^~(^{(8'hac)})) : {{(8'had)}}))
(y, clk, wire7, wire8, wire9, wire10);
  output wire [(32'h86):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire7;
  input wire [(4'hb):(1'h0)] wire8;
  input wire signed [(4'h8):(1'h0)] wire9;
  input wire signed [(2'h2):(1'h0)] wire10;
  wire [(4'h9):(1'h0)] wire21;
  wire signed [(3'h7):(1'h0)] wire41;
  reg signed [(3'h5):(1'h0)] reg47 = (1'h0);
  reg [(4'h8):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg45 = (1'h0);
  reg [(4'h9):(1'h0)] reg44 = (1'h0);
  reg [(4'h8):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg11 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg12 = (1'h0);
  reg [(3'h7):(1'h0)] reg13 = (1'h0);
  reg [(4'hb):(1'h0)] reg14 = (1'h0);
  reg [(4'ha):(1'h0)] reg15 = (1'h0);
  reg [(4'hb):(1'h0)] reg16 = (1'h0);
  reg [(4'h8):(1'h0)] reg17 = (1'h0);
  reg [(2'h2):(1'h0)] reg18 = (1'h0);
  reg [(4'ha):(1'h0)] reg19 = (1'h0);
  reg [(4'hb):(1'h0)] reg20 = (1'h0);
  assign y = {wire21,
                 wire41,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 reg11,
                 reg12,
                 reg13,
                 reg14,
                 reg15,
                 reg16,
                 reg17,
                 reg18,
                 reg19,
                 reg20,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire10[(1'h0):(1'h0)])
        begin
          reg11 <= (wire7 ?
              (~&(wire8[(4'h8):(3'h5)] ?
                  wire7[(1'h1):(1'h1)] : (wire8 || wire10))) : (((wire8 >= wire9) < (+wire7)) << ($signed(wire7) - $signed(wire9))));
          reg12 <= (({(8'hab)} > {(^wire7)}) >>> $signed((~&(wire7 - wire10))));
          if ($unsigned(reg12))
            begin
              reg13 <= (^($unsigned(reg11) >= (wire10 ?
                  $unsigned(reg11) : ((8'ha5) ? wire7 : wire10))));
              reg14 <= wire9[(1'h1):(1'h1)];
              reg15 <= $unsigned(wire7[(1'h0):(1'h0)]);
            end
          else
            begin
              reg13 <= (wire8 ?
                  (-(reg12 << (reg11 != (8'h9f)))) : $unsigned(wire9[(3'h7):(1'h0)]));
              reg14 <= reg11;
              reg15 <= wire10;
            end
        end
      else
        begin
          reg11 <= $signed({$unsigned((reg11 || wire10))});
          reg12 <= (wire8 && $unsigned({{(8'ha4)}}));
        end
      if ({($unsigned((wire9 ? reg12 : (8'hab))) && $signed($signed(reg15)))})
        begin
          reg16 <= (+($signed((8'h9e)) >> {(wire10 ? (8'hae) : wire10)}));
          if (((wire9 ?
                  (reg12 ? {reg16} : (wire7 < reg13)) : reg15[(2'h2):(2'h2)]) ?
              reg14 : wire7[(2'h2):(1'h0)]))
            begin
              reg17 <= $signed($unsigned($signed((reg11 ? reg12 : reg16))));
            end
          else
            begin
              reg17 <= (~^reg13);
              reg18 <= reg14;
              reg19 <= ($unsigned(reg14) ?
                  wire9[(3'h7):(3'h5)] : reg12[(2'h2):(2'h2)]);
            end
        end
      else
        begin
          reg16 <= $signed(((wire8[(3'h5):(2'h3)] | $unsigned(wire7)) ?
              (-{wire10}) : reg13));
          if ((reg16[(2'h3):(2'h2)] == {((wire8 & (8'ha4)) ?
                  wire7[(3'h4):(2'h2)] : wire10[(1'h0):(1'h0)])}))
            begin
              reg17 <= (($signed(wire9) ?
                      $signed($unsigned(reg19)) : $unsigned((wire10 ?
                          reg14 : reg15))) ?
                  {wire10[(2'h2):(2'h2)]} : (~((|reg12) ?
                      $unsigned(reg17) : (+reg19))));
              reg18 <= {($signed((reg11 ^ reg17)) < $signed((~reg18)))};
              reg19 <= {$unsigned(reg16)};
            end
          else
            begin
              reg17 <= reg12[(3'h5):(1'h1)];
            end
          reg20 <= reg12[(3'h4):(1'h1)];
        end
    end
  assign wire21 = ($signed((&((8'h9e) ? reg20 : wire8))) || (({reg13} ?
                          $signed(reg11) : (~&reg11)) ?
                      (wire10[(1'h0):(1'h0)] > {reg19}) : (reg16 <<< {wire8})));
  module22 #() modinst42 (.wire23(reg20), .wire26(reg17), .wire25(wire7), .y(wire41), .clk(clk), .wire24(reg15));
  always
    @(posedge clk) begin
      reg43 <= reg20[(4'h9):(2'h3)];
      if ((!$signed(reg13)))
        begin
          reg44 <= (^$unsigned($signed(((8'had) ? (8'h9e) : wire10))));
          if ($unsigned(wire8))
            begin
              reg45 <= (-reg14);
              reg46 <= wire7;
              reg47 <= (wire7 ?
                  reg46 : $signed((reg43 ? reg15 : (reg18 & (8'ha2)))));
            end
          else
            begin
              reg45 <= (|(~&(|(reg45 ? wire21 : (8'h9e)))));
            end
        end
      else
        begin
          reg44 <= ((+((~reg14) >>> reg16[(4'ha):(3'h7)])) >> reg18);
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module22
#(parameter param40 = (((~^(~&(8'hb0))) ? {((8'hae) || (8'h9e))} : (+((8'h9d) || (8'haa)))) ? {(8'hb0)} : (^~((+(8'hae)) * ((8'ha2) ? (8'h9c) : (8'ha7))))))
(y, clk, wire26, wire25, wire24, wire23);
  output wire [(32'h53):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire26;
  input wire signed [(3'h5):(1'h0)] wire25;
  input wire signed [(4'ha):(1'h0)] wire24;
  input wire [(3'h5):(1'h0)] wire23;
  wire signed [(2'h2):(1'h0)] wire39;
  wire [(2'h3):(1'h0)] wire38;
  wire [(3'h5):(1'h0)] wire37;
  wire signed [(2'h2):(1'h0)] wire36;
  wire signed [(4'h9):(1'h0)] wire35;
  wire [(3'h6):(1'h0)] wire34;
  wire [(4'h8):(1'h0)] wire31;
  reg signed [(4'ha):(1'h0)] reg33 = (1'h0);
  reg [(3'h4):(1'h0)] reg32 = (1'h0);
  reg [(2'h2):(1'h0)] reg30 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg29 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg28 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg27 = (1'h0);
  assign y = {wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire31,
                 reg33,
                 reg32,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (((wire25[(1'h0):(1'h0)] * $unsigned((wire24 ? wire25 : wire23))) ?
          {(^$signed(wire26))} : (($signed(wire25) ?
                  wire23 : (wire25 && (8'ha1))) ?
              wire24[(2'h3):(1'h0)] : wire26)))
        begin
          if ($unsigned(((((8'h9f) ?
              wire23 : wire23) >> wire25[(2'h3):(1'h0)]) && ((wire24 ?
                  wire23 : wire24) ?
              {wire26} : wire26[(2'h3):(2'h2)]))))
            begin
              reg27 <= wire25;
            end
          else
            begin
              reg27 <= wire24;
            end
          reg28 <= (((wire26[(3'h5):(3'h4)] <= reg27[(1'h1):(1'h0)]) & {reg27}) <<< ({(reg27 ?
                      wire26 : wire26)} ?
              (((8'ha6) ? wire23 : wire26) || wire23) : (((8'ha7) ?
                  wire24 : wire23) - $unsigned(wire25))));
        end
      else
        begin
          reg27 <= $unsigned(({$unsigned(wire23)} | (8'hac)));
        end
      reg29 <= $signed(wire25[(3'h4):(2'h2)]);
      reg30 <= $unsigned(($unsigned(wire24[(1'h0):(1'h0)]) <<< ((wire23 ?
              wire23 : reg27) ?
          $unsigned(wire23) : $signed(reg27))));
    end
  assign wire31 = (+((reg28[(4'hb):(3'h4)] ^ $unsigned(wire26)) ?
                      $unsigned(wire24[(2'h3):(1'h1)]) : reg28));
  always
    @(posedge clk) begin
      reg32 <= {$signed((~^(&wire26)))};
      reg33 <= (-$unsigned(reg30));
    end
  assign wire34 = $signed({(&reg33)});
  assign wire35 = wire24;
  assign wire36 = (($unsigned(wire35[(3'h4):(1'h1)]) ?
                          reg33 : (^~(reg29 ? reg32 : wire31))) ?
                      (((&reg29) == $signed(reg30)) > (~&$signed(wire25))) : wire35);
  assign wire37 = (&($signed((wire34 ?
                      wire23 : wire23)) | reg33[(2'h3):(2'h3)]));
  assign wire38 = $signed(((~^(reg27 ?
                      reg29 : (8'haf))) && wire31[(3'h4):(1'h1)]));
  assign wire39 = (+(wire24 > wire35));
endmodule