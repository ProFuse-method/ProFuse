(* use_dsp48="no" *) (* use_dsp="no" *) module top #(parameter param46 = (8'h9d)) (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(3'h5):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire45;
  wire signed [(2'h3):(1'h0)] wire44;
  wire [(4'h9):(1'h0)] wire43;
  wire [(3'h5):(1'h0)] wire42;
  wire [(4'ha):(1'h0)] wire41;
  wire [(2'h2):(1'h0)] wire40;
  wire [(4'ha):(1'h0)] wire39;
  wire [(2'h3):(1'h0)] wire37;
  wire [(4'h9):(1'h0)] wire36;
  wire [(3'h5):(1'h0)] wire35;
  wire [(4'h8):(1'h0)] wire33;
  assign y = {wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire37,
                 wire36,
                 wire35,
                 wire33,
                 (1'h0)};
  module4 #() modinst34 (wire33, clk, wire0, wire3, wire1, wire2);
  assign wire35 = wire2;
  assign wire36 = $signed($signed(wire1[(2'h2):(1'h0)]));
  module12 #() modinst38 (.clk(clk), .y(wire37), .wire14(wire36), .wire13(wire0), .wire16(wire2), .wire15(wire3));
  assign wire39 = ({{$signed(wire36)}} != (+$unsigned((wire1 && wire36))));
  assign wire40 = wire0;
  assign wire41 = (~^wire1);
  assign wire42 = wire0[(3'h7):(3'h6)];
  assign wire43 = $signed((~&$signed(wire36)));
  assign wire44 = wire1;
  assign wire45 = wire35[(1'h0):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h19):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire8;
  input wire signed [(3'h4):(1'h0)] wire7;
  input wire signed [(3'h7):(1'h0)] wire6;
  input wire signed [(3'h5):(1'h0)] wire5;
  wire [(4'h8):(1'h0)] wire31;
  wire [(3'h5):(1'h0)] wire11;
  wire signed [(2'h2):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire9;
  assign y = {wire31, wire11, wire10, wire9, (1'h0)};
  assign wire9 = (~$unsigned((wire5 ? $unsigned(wire5) : $signed(wire5))));
  assign wire10 = ($unsigned($signed({wire6})) ^ ($unsigned(wire5[(1'h0):(1'h0)]) * wire8[(2'h2):(1'h1)]));
  assign wire11 = (~wire5[(2'h2):(2'h2)]);
  module12 #() modinst32 (.wire16(wire6), .wire15(wire7), .wire13(wire5), .wire14(wire9), .clk(clk), .y(wire31));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'h60):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire15;
  input wire signed [(4'h9):(1'h0)] wire14;
  input wire [(3'h5):(1'h0)] wire13;
  wire [(4'ha):(1'h0)] wire30;
  wire [(4'hb):(1'h0)] wire29;
  wire signed [(2'h3):(1'h0)] wire28;
  wire [(3'h4):(1'h0)] wire27;
  wire signed [(2'h3):(1'h0)] wire21;
  wire [(4'hb):(1'h0)] wire20;
  wire [(4'ha):(1'h0)] wire19;
  wire [(2'h2):(1'h0)] wire18;
  wire signed [(4'ha):(1'h0)] wire17;
  reg signed [(4'h8):(1'h0)] reg26 = (1'h0);
  reg [(3'h6):(1'h0)] reg25 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg24 = (1'h0);
  reg [(4'h9):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg22 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire17 = wire16;
  assign wire18 = wire14;
  assign wire19 = ({$signed(((8'had) < wire17))} ?
                      (+(8'h9e)) : ($signed(wire16[(1'h1):(1'h0)]) - (wire14 ?
                          (wire18 - wire15) : $signed(wire17))));
  assign wire20 = {wire14};
  assign wire21 = ((wire20 ? (|wire19[(4'h9):(3'h5)]) : wire13) ?
                      wire18 : $signed($signed((wire19 + wire13))));
  always
    @(posedge clk) begin
      reg22 <= ((-{(wire17 ? wire15 : wire14)}) ?
          $signed(($signed(wire16) ^ wire13[(3'h4):(1'h0)])) : (~&wire14));
      reg23 <= wire21[(2'h3):(2'h3)];
      reg24 <= wire21[(2'h3):(1'h1)];
    end
  always
    @(posedge clk) begin
      reg25 <= (&$signed((8'h9d)));
      reg26 <= (|(((wire16 ^ reg22) ? wire18 : $signed((8'ha8))) ?
          {reg23[(1'h0):(1'h0)]} : $unsigned((wire16 ? (8'hb0) : (8'h9f)))));
    end
  assign wire27 = (8'ha1);
  assign wire28 = (+(reg23 == ((wire14 ^ reg26) ? {reg24} : wire21)));
  assign wire29 = reg22[(2'h2):(2'h2)];
  assign wire30 = reg26[(2'h2):(2'h2)];
endmodule