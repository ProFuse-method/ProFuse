(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h2a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire0;
  input wire signed [(4'ha):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire2;
  input wire [(4'hb):(1'h0)] wire3;
  wire [(2'h3):(1'h0)] wire4;
  wire [(2'h3):(1'h0)] wire5;
  wire [(3'h4):(1'h0)] wire6;
  wire signed [(2'h2):(1'h0)] wire89;
  reg [(4'ha):(1'h0)] reg92 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg91 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg7 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg8 = (1'h0);
  assign y = {wire4, wire5, wire6, wire89, reg92, reg91, reg7, reg8, (1'h0)};
  assign wire4 = wire3[(3'h4):(1'h0)];
  assign wire5 = wire2[(1'h0):(1'h0)];
  assign wire6 = ((((~|wire0) ?
                         $signed((8'ha7)) : (wire1 ?
                             (8'ha2) : wire0)) != $unsigned((wire5 < wire4))) ?
                     {$signed($signed(wire1))} : (!wire1));
  always
    @(posedge clk) begin
      reg7 <= wire5[(2'h3):(2'h3)];
      reg8 <= (($signed(((8'ha5) ? (8'hab) : wire1)) ?
          $unsigned((wire0 ?
              reg7 : wire1)) : $unsigned(wire0[(2'h3):(2'h2)])) <<< $unsigned(((^wire1) ^ (~^wire2))));
    end
  module9 #() modinst90 (wire89, clk, wire3, wire5, wire1, reg8);
  always
    @(posedge clk) begin
      reg91 <= wire2[(1'h1):(1'h0)];
      reg92 <= (|(wire89[(1'h0):(1'h0)] || (((8'h9f) ?
          wire6 : wire6) & $unsigned((8'hab)))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param88 = (^~((((8'h9e) ? (8'hb0) : (8'haa)) + (^~(8'hab))) ? {{(8'haa)}} : ((!(8'ha4)) ^ (~(8'ha9))))))
(y, clk, wire10, wire11, wire12, wire13);
  output wire [(32'hcf):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire10;
  input wire signed [(2'h3):(1'h0)] wire11;
  input wire signed [(3'h7):(1'h0)] wire12;
  input wire [(4'hb):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire21;
  wire signed [(3'h7):(1'h0)] wire22;
  wire signed [(4'h9):(1'h0)] wire23;
  wire signed [(3'h7):(1'h0)] wire54;
  wire [(4'h8):(1'h0)] wire56;
  wire signed [(4'ha):(1'h0)] wire68;
  wire [(3'h6):(1'h0)] wire81;
  wire signed [(4'ha):(1'h0)] wire83;
  wire [(3'h6):(1'h0)] wire84;
  wire signed [(2'h3):(1'h0)] wire85;
  wire signed [(3'h6):(1'h0)] wire86;
  reg signed [(2'h2):(1'h0)] reg14 = (1'h0);
  reg [(3'h5):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg16 = (1'h0);
  reg [(4'ha):(1'h0)] reg17 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg18 = (1'h0);
  reg [(3'h6):(1'h0)] reg19 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg57 = (1'h0);
  reg [(3'h6):(1'h0)] reg58 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg59 = (1'h0);
  reg [(3'h7):(1'h0)] reg60 = (1'h0);
  reg [(4'ha):(1'h0)] reg61 = (1'h0);
  reg [(4'ha):(1'h0)] reg62 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg63 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg64 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg65 = (1'h0);
  reg [(3'h4):(1'h0)] reg66 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg67 = (1'h0);
  assign y = {wire21,
                 wire22,
                 wire23,
                 wire54,
                 wire56,
                 wire68,
                 wire81,
                 wire83,
                 wire84,
                 wire85,
                 wire86,
                 reg14,
                 reg15,
                 reg16,
                 reg17,
                 reg18,
                 reg19,
                 reg20,
                 reg57,
                 reg58,
                 reg59,
                 reg60,
                 reg61,
                 reg62,
                 reg63,
                 reg64,
                 reg65,
                 reg66,
                 reg67,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire11)
        begin
          if (($unsigned(((wire10 != wire13) ?
                  wire12[(2'h3):(2'h3)] : $unsigned(wire12))) ?
              $unsigned(((~|wire10) ?
                  $signed(wire13) : wire13)) : $unsigned($signed({wire11}))))
            begin
              reg14 <= (~$signed({wire10[(2'h2):(1'h0)]}));
              reg15 <= (wire11 ? $unsigned($unsigned(wire13)) : wire12);
            end
          else
            begin
              reg14 <= $unsigned(($unsigned((&(8'ha1))) ?
                  ((wire10 ^ wire13) > reg15) : (wire12 ? wire12 : {wire11})));
            end
          reg16 <= reg15;
        end
      else
        begin
          reg14 <= $unsigned(((-$unsigned(wire13)) ~^ $signed($unsigned((8'ha1)))));
          if ($unsigned((reg16 ? $signed({(8'ha8)}) : reg15[(2'h2):(1'h1)])))
            begin
              reg15 <= $signed(($signed(reg14) > $signed(reg16[(4'h8):(2'h3)])));
              reg16 <= wire12[(3'h4):(1'h1)];
              reg17 <= ($unsigned(((8'hae) ?
                  $signed((8'ha5)) : $signed(reg14))) && {wire11});
            end
          else
            begin
              reg15 <= (^(8'ha0));
            end
          reg18 <= $signed(($unsigned($signed(wire11)) ?
              (^reg15) : $signed(reg14)));
        end
      reg19 <= (reg16[(3'h7):(3'h4)] ^ reg14);
      reg20 <= (($unsigned($signed((8'ha1))) ?
              $unsigned($unsigned((8'h9d))) : ((wire11 ?
                  wire11 : reg14) * reg16[(2'h2):(2'h2)])) ?
          $signed((8'haf)) : $unsigned((~&((8'hb0) ? reg15 : reg15))));
    end
  assign wire21 = $unsigned((((reg20 ? reg18 : wire13) != $signed(reg20)) ?
                      (wire10[(3'h4):(3'h4)] ?
                          reg18 : {reg20}) : (^~(wire11 << reg17))));
  assign wire22 = $unsigned((^~(~|$unsigned(wire11))));
  assign wire23 = wire21[(1'h0):(1'h0)];
  module24 #() modinst55 (.wire27(wire10), .clk(clk), .y(wire54), .wire25(wire23), .wire26(reg15), .wire28(reg20));
  assign wire56 = ($signed(reg17) ?
                      ($unsigned(wire54[(2'h3):(2'h2)]) << (8'haa)) : reg14);
  always
    @(posedge clk) begin
      if ($unsigned((reg18 == $unsigned($signed(reg14)))))
        begin
          reg57 <= ((-$unsigned(wire22)) != reg15);
          reg58 <= ($signed($unsigned(wire12)) | ({(reg14 ?
                  reg57 : wire12)} && $unsigned($signed(wire13))));
        end
      else
        begin
          if ((reg18[(3'h6):(3'h5)] == (reg15[(1'h0):(1'h0)] <= $signed($signed(wire56)))))
            begin
              reg57 <= ($signed({(~^wire13)}) ?
                  $signed(($unsigned((8'ha3)) == $unsigned(wire10))) : ((~^$unsigned((8'ha8))) > ((reg20 ?
                      (8'ha7) : reg19) - reg14)));
            end
          else
            begin
              reg57 <= (wire21[(3'h6):(2'h3)] & (~{(|wire21)}));
              reg58 <= (!((|(~reg17)) & reg15[(1'h0):(1'h0)]));
              reg59 <= ($unsigned((^~$unsigned(wire13))) <= $unsigned(({wire13} ?
                  (reg16 - reg57) : (reg57 ? reg16 : (8'ha0)))));
            end
          reg60 <= $unsigned($signed($signed((reg18 ? reg15 : reg18))));
          if ({(reg60[(3'h7):(1'h0)] >= $signed($unsigned(reg15)))})
            begin
              reg61 <= $signed(((^~wire21) | wire54[(1'h1):(1'h0)]));
              reg62 <= $unsigned(((wire10 ?
                  wire11 : (+reg20)) <<< $signed((-reg59))));
            end
          else
            begin
              reg61 <= {(wire11[(2'h3):(1'h1)] ?
                      {(reg58 ? wire56 : reg62)} : wire54[(3'h7):(2'h3)])};
              reg62 <= reg62;
              reg63 <= ((^(8'h9f)) > reg15);
            end
        end
      reg64 <= wire10[(1'h1):(1'h0)];
      if (($unsigned($signed($unsigned(wire56))) > ((^((8'hac) ?
          (8'hb0) : (8'hb0))) | {wire56})))
        begin
          reg65 <= $unsigned($signed(reg14[(1'h0):(1'h0)]));
          reg66 <= reg64;
          reg67 <= (~|wire12[(1'h1):(1'h0)]);
        end
      else
        begin
          reg65 <= wire13[(2'h2):(1'h0)];
          reg66 <= (8'hac);
        end
    end
  assign wire68 = reg18;
  module69 #() modinst82 (wire81, clk, wire56, wire12, reg66, reg61);
  assign wire83 = wire10[(3'h7):(3'h5)];
  assign wire84 = (^~$unsigned($unsigned(reg65[(2'h2):(1'h1)])));
  assign wire85 = $signed(({(wire21 ? wire84 : reg60)} != wire22));
  module24 #() modinst87 (wire86, clk, reg20, reg63, wire10, reg61);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module69  (y, clk, wire73, wire72, wire71, wire70);
  output wire [(32'h27):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire73;
  input wire [(3'h7):(1'h0)] wire72;
  input wire [(3'h4):(1'h0)] wire71;
  input wire signed [(4'ha):(1'h0)] wire70;
  wire signed [(2'h3):(1'h0)] wire80;
  wire [(3'h4):(1'h0)] wire79;
  wire [(2'h3):(1'h0)] wire78;
  wire [(3'h4):(1'h0)] wire77;
  wire signed [(3'h5):(1'h0)] wire76;
  wire [(4'h9):(1'h0)] wire75;
  wire signed [(4'ha):(1'h0)] wire74;
  assign y = {wire80, wire79, wire78, wire77, wire76, wire75, wire74, (1'h0)};
  assign wire74 = $signed((~&{{(8'ha5)}}));
  assign wire75 = {$signed($signed($signed(wire72)))};
  assign wire76 = wire74[(3'h7):(1'h1)];
  assign wire77 = ((((wire72 & wire71) ^~ $signed(wire74)) == (-(wire71 ?
                      wire72 : wire76))) - wire73);
  assign wire78 = ({wire74} > $signed((^(wire73 ? (8'had) : (8'haa)))));
  assign wire79 = $signed(wire72[(3'h5):(2'h2)]);
  assign wire80 = (($unsigned($signed((8'haa))) >= ($signed((8'ha2)) ?
                      $unsigned(wire73) : $unsigned(wire71))) < wire79);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module24
#(parameter param53 = {(((^(8'haf)) ? (^(8'ha0)) : ((8'ha7) ? (8'had) : (8'ha7))) ? (8'ha5) : {((8'h9e) ? (8'ha4) : (8'ha5))})})
(y, clk, wire28, wire27, wire26, wire25);
  output wire [(32'hb6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire28;
  input wire signed [(4'hb):(1'h0)] wire27;
  input wire signed [(3'h5):(1'h0)] wire26;
  input wire signed [(4'h8):(1'h0)] wire25;
  wire signed [(3'h5):(1'h0)] wire52;
  wire signed [(4'ha):(1'h0)] wire44;
  wire signed [(3'h4):(1'h0)] wire43;
  wire [(3'h4):(1'h0)] wire41;
  wire [(4'h9):(1'h0)] wire30;
  wire [(4'hb):(1'h0)] wire29;
  reg [(3'h4):(1'h0)] reg51 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg50 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg49 = (1'h0);
  reg [(4'h8):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg46 = (1'h0);
  reg [(4'ha):(1'h0)] reg45 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg42 = (1'h0);
  reg [(3'h7):(1'h0)] reg40 = (1'h0);
  reg [(4'hb):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg38 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg37 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg36 = (1'h0);
  reg [(3'h6):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg34 = (1'h0);
  reg [(3'h7):(1'h0)] reg33 = (1'h0);
  reg [(4'hb):(1'h0)] reg32 = (1'h0);
  reg [(4'hb):(1'h0)] reg31 = (1'h0);
  assign y = {wire52,
                 wire44,
                 wire43,
                 wire41,
                 wire30,
                 wire29,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg42,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 (1'h0)};
  assign wire29 = {wire26[(3'h4):(1'h1)]};
  assign wire30 = wire29;
  always
    @(posedge clk) begin
      if (wire26)
        begin
          reg31 <= $signed((($signed(wire25) ? $signed((8'had)) : {wire27}) ?
              wire26[(2'h3):(2'h3)] : ((wire30 ? wire27 : (8'ha9)) ?
                  (wire26 ? wire29 : wire26) : wire28)));
          reg32 <= {(!wire29)};
          reg33 <= ((((^~(8'hac)) != reg31) && (+(^~wire30))) >>> ($signed((wire25 < wire27)) ?
              ((^~wire26) ?
                  (wire25 ?
                      wire25 : wire30) : (wire26 <<< wire29)) : $signed((reg32 != wire30))));
        end
      else
        begin
          reg31 <= ((+(&(reg33 >> wire28))) ? (8'haf) : wire27[(3'h6):(2'h3)]);
        end
      if (((wire30 && wire26[(2'h3):(2'h3)]) > wire25[(4'h8):(1'h0)]))
        begin
          reg34 <= $unsigned((^$unsigned(wire25[(1'h1):(1'h0)])));
        end
      else
        begin
          if (reg31)
            begin
              reg34 <= $unsigned((|$signed((^wire26))));
              reg35 <= (wire25[(1'h1):(1'h1)] ?
                  ((((8'hab) ~^ wire26) ? wire28 : $signed(wire25)) ?
                      reg31 : ($signed(wire29) * reg31[(4'h8):(2'h2)])) : (^~((wire30 ^~ wire30) ?
                      (~reg31) : reg32[(4'hb):(1'h0)])));
              reg36 <= reg35;
            end
          else
            begin
              reg34 <= (~|reg33);
              reg35 <= ((((&reg36) ? wire27[(3'h7):(3'h7)] : (reg33 != reg35)) ?
                  {(wire28 ? (8'haa) : reg35)} : reg32) || ((^(^~wire25)) ?
                  wire25[(4'h8):(3'h7)] : wire28));
            end
          reg37 <= (reg31 >= reg31[(1'h0):(1'h0)]);
          if ((!$unsigned(wire30)))
            begin
              reg38 <= {reg32};
              reg39 <= reg37;
            end
          else
            begin
              reg38 <= ((reg36 ?
                  $signed(wire28) : wire25[(1'h0):(1'h0)]) >>> reg39);
            end
        end
      reg40 <= (wire26 * ({reg35} ? (8'h9e) : $signed((wire26 == wire29))));
    end
  assign wire41 = (($signed($unsigned(wire28)) + reg40) ~^ $unsigned($signed((reg35 ?
                      reg40 : wire25))));
  always
    @(posedge clk) begin
      reg42 <= {wire28};
    end
  assign wire43 = $signed((wire28[(1'h1):(1'h1)] ^~ ((!reg33) ?
                      (reg32 >>> reg36) : $unsigned(reg42))));
  assign wire44 = (reg33 == $unsigned($unsigned($unsigned(reg35))));
  always
    @(posedge clk) begin
      reg45 <= ((wire43[(2'h2):(2'h2)] - ((reg40 ?
          reg40 : wire25) < reg34[(2'h2):(1'h0)])) << wire29);
      reg46 <= ({reg31} + reg34);
      reg47 <= (($unsigned(((8'ha8) | wire26)) << ($signed(wire30) ?
          wire44 : (^(8'h9d)))) & wire44[(1'h1):(1'h1)]);
    end
  always
    @(posedge clk) begin
      reg48 <= ((!(~&reg46)) & reg37);
      reg49 <= {{$unsigned((8'hab))}};
    end
  always
    @(posedge clk) begin
      reg50 <= ($unsigned($signed((reg31 ? reg48 : reg38))) ?
          $unsigned($unsigned({reg47})) : reg32[(4'h8):(2'h2)]);
      reg51 <= $signed((~|$signed(reg32[(4'hb):(4'ha)])));
    end
  assign wire52 = ((~&((reg40 <<< wire43) ?
                      (~&wire44) : reg48)) | (^$unsigned({reg39})));
endmodule