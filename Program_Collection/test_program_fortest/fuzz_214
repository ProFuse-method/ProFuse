(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h50):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire0;
  input wire [(3'h5):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire3;
  wire [(4'hb):(1'h0)] wire52;
  wire [(3'h6):(1'h0)] wire51;
  wire signed [(3'h5):(1'h0)] wire49;
  wire [(4'ha):(1'h0)] wire4;
  wire [(4'h8):(1'h0)] wire5;
  wire signed [(3'h7):(1'h0)] wire6;
  wire signed [(4'ha):(1'h0)] wire43;
  wire [(3'h5):(1'h0)] wire47;
  reg signed [(3'h7):(1'h0)] reg45 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg46 = (1'h0);
  assign y = {wire52,
                 wire51,
                 wire49,
                 wire4,
                 wire5,
                 wire6,
                 wire43,
                 wire47,
                 reg45,
                 reg46,
                 (1'h0)};
  assign wire4 = wire0[(4'h8):(3'h4)];
  assign wire5 = $unsigned(($unsigned(wire2[(2'h2):(1'h1)]) ? wire3 : wire2));
  assign wire6 = (($signed($unsigned(wire2)) == $unsigned($signed(wire4))) ?
                     (((wire3 ?
                         wire3 : wire1) < ((8'h9f) == wire1)) >= wire3[(2'h2):(1'h0)]) : ($signed((8'h9f)) ?
                         wire3 : {(wire5 && wire0)}));
  module7 #() modinst44 (wire43, clk, wire5, wire1, wire6, wire3);
  always
    @(posedge clk) begin
      reg45 <= $signed($unsigned($signed((wire2 ? wire0 : wire2))));
      reg46 <= $unsigned($signed(((8'haf) ? wire1 : $unsigned(wire3))));
    end
  module7 #() modinst48 (.wire11(wire43), .wire10(wire5), .wire8(wire6), .clk(clk), .y(wire47), .wire9(reg45));
  module20 #() modinst50 (wire49, clk, wire6, wire1, wire4, wire2);
  assign wire51 = wire49[(1'h1):(1'h0)];
  assign wire52 = {reg45};
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param42 = (-({(~&(8'ha4))} | (^(8'had)))))
(y, clk, wire11, wire10, wire9, wire8);
  output wire [(32'h74):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire11;
  input wire [(3'h5):(1'h0)] wire10;
  input wire signed [(3'h7):(1'h0)] wire9;
  input wire signed [(3'h5):(1'h0)] wire8;
  wire signed [(4'h8):(1'h0)] wire41;
  wire [(4'h9):(1'h0)] wire38;
  wire signed [(4'h8):(1'h0)] wire33;
  wire [(3'h4):(1'h0)] wire19;
  wire signed [(3'h5):(1'h0)] wire18;
  wire signed [(4'h8):(1'h0)] wire17;
  wire signed [(4'ha):(1'h0)] wire16;
  wire signed [(2'h2):(1'h0)] wire15;
  wire signed [(4'ha):(1'h0)] wire14;
  wire [(2'h3):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire12;
  reg signed [(2'h3):(1'h0)] reg40 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg39 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg37 = (1'h0);
  reg [(3'h4):(1'h0)] reg36 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg35 = (1'h0);
  assign y = {wire41,
                 wire38,
                 wire33,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 reg40,
                 reg39,
                 reg37,
                 reg36,
                 reg35,
                 (1'h0)};
  assign wire12 = wire9;
  assign wire13 = wire8[(2'h3):(2'h2)];
  assign wire14 = wire13;
  assign wire15 = $signed((((wire14 ? wire8 : wire14) ?
                      (wire8 ?
                          (8'ha4) : wire13) : $unsigned((8'h9d))) >= (|$signed(wire10))));
  assign wire16 = $signed($signed(((^~(8'h9f)) ?
                      (wire13 ? wire9 : wire12) : {(8'hb0)})));
  assign wire17 = ((&($unsigned(wire12) ? (wire10 >> wire11) : wire14)) ?
                      $unsigned(((~|(8'h9f)) + {wire13})) : $unsigned($unsigned($signed(wire12))));
  assign wire18 = $unsigned((&(wire11[(1'h1):(1'h1)] <<< (|wire8))));
  assign wire19 = (!wire9);
  module20 #() modinst34 (wire33, clk, wire8, wire15, wire14, wire16);
  always
    @(posedge clk) begin
      reg35 <= $unsigned(wire9);
      if ((({(wire8 >= wire15)} <<< wire10[(2'h2):(1'h0)]) << {($unsigned(wire13) ?
              wire8[(1'h0):(1'h0)] : {reg35})}))
        begin
          reg36 <= ({({wire13} ?
                  (wire8 ? wire17 : wire13) : (wire9 ?
                      wire14 : (8'had)))} ^~ ($signed(wire16) ?
              $unsigned((wire14 ? wire18 : reg35)) : (wire33 << (-wire12))));
          reg37 <= (($unsigned($unsigned(wire12)) && wire17) ^~ (!$unsigned({wire11})));
        end
      else
        begin
          reg36 <= (wire19[(2'h2):(1'h0)] < $unsigned(((wire8 ?
                  (8'h9f) : wire18) ?
              $unsigned(reg37) : wire18[(1'h1):(1'h0)])));
        end
    end
  assign wire38 = $signed((~&((&wire13) ? wire15[(1'h1):(1'h0)] : wire10)));
  always
    @(posedge clk) begin
      if ((wire10 ? wire12 : wire10))
        begin
          reg39 <= ($unsigned(reg37[(4'h9):(2'h3)]) ?
              reg36 : $signed(((8'hac) <<< (+wire13))));
        end
      else
        begin
          reg39 <= $signed((8'ha9));
          reg40 <= (~(-$signed((wire33 ^ wire11))));
        end
    end
  assign wire41 = $signed((((wire18 ? (8'h9c) : reg36) ? wire17 : (^~wire38)) ?
                      (wire8 ? (-wire12) : $signed(wire8)) : ((~|wire14) ?
                          reg40[(2'h2):(1'h0)] : (8'ha2))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module20
#(parameter param32 = ((^({(8'haf)} ? (!(8'had)) : ((8'h9f) ^~ (8'ha4)))) & {(((8'ha9) < (8'ha2)) ? {(8'h9e)} : {(8'ha8)})}))
(y, clk, wire24, wire23, wire22, wire21);
  output wire [(32'h24):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire24;
  input wire signed [(2'h2):(1'h0)] wire23;
  input wire signed [(4'ha):(1'h0)] wire22;
  input wire [(4'h8):(1'h0)] wire21;
  wire signed [(3'h7):(1'h0)] wire31;
  wire [(3'h6):(1'h0)] wire30;
  wire [(3'h5):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire27;
  wire signed [(3'h7):(1'h0)] wire26;
  wire signed [(3'h5):(1'h0)] wire25;
  reg [(2'h3):(1'h0)] reg28 = (1'h0);
  assign y = {wire31, wire30, wire29, wire27, wire26, wire25, reg28, (1'h0)};
  assign wire25 = (^$unsigned(wire21[(1'h1):(1'h1)]));
  assign wire26 = (8'ha4);
  assign wire27 = (~&wire26[(3'h7):(2'h3)]);
  always
    @(posedge clk) begin
      reg28 <= {{wire24}};
    end
  assign wire29 = $unsigned(({$unsigned(wire23)} ~^ $signed((8'h9e))));
  assign wire30 = wire22;
  assign wire31 = $signed(($unsigned({wire24}) + $signed((+wire22))));
endmodule