(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'hf1):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire signed [(5'h11):(1'h0)] wire2;
  input wire signed [(4'hd):(1'h0)] wire1;
  input wire [(4'hf):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire38;
  wire [(4'h8):(1'h0)] wire37;
  wire signed [(2'h3):(1'h0)] wire36;
  wire [(3'h7):(1'h0)] wire34;
  wire [(4'hd):(1'h0)] wire20;
  wire [(4'ha):(1'h0)] wire19;
  wire [(3'h4):(1'h0)] wire18;
  wire [(4'h8):(1'h0)] wire16;
  reg [(2'h2):(1'h0)] reg54 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg51 = (1'h0);
  reg [(4'h9):(1'h0)] reg48 = (1'h0);
  reg signed [(4'he):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg45 = (1'h0);
  reg [(4'h8):(1'h0)] reg44 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg40 = (1'h0);
  reg [(4'hb):(1'h0)] forvar53 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg52 = (1'h0);
  reg [(4'h9):(1'h0)] reg50 = (1'h0);
  reg [(5'h15):(1'h0)] reg49 = (1'h0);
  reg [(4'h9):(1'h0)] forvar47 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar43 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg42 = (1'h0);
  reg [(4'h9):(1'h0)] forvar41 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg39 = (1'h0);
  assign y = {wire38,
                 wire37,
                 wire36,
                 wire34,
                 wire20,
                 wire19,
                 wire18,
                 wire16,
                 reg54,
                 reg51,
                 reg48,
                 reg46,
                 reg45,
                 reg44,
                 reg40,
                 forvar53,
                 reg52,
                 reg50,
                 reg49,
                 forvar47,
                 forvar43,
                 reg42,
                 forvar41,
                 reg39,
                 (1'h0)};
  module4 #() modinst17 (wire16, clk, wire0, wire3, wire2, wire1);
  assign wire18 = wire1;
  assign wire19 = $signed((8'hac));
  assign wire20 = $signed($unsigned((~&{wire0[(1'h0):(1'h0)]})));
  module21 #() modinst35 (wire34, clk, wire20, wire2, wire0, wire19);
  assign wire36 = wire3[(3'h6):(1'h0)];
  assign wire37 = (((^(|wire20[(1'h0):(1'h0)])) ?
                      $signed(wire3) : wire20[(4'h9):(3'h5)]) ~^ $signed($unsigned($unsigned($signed(wire34)))));
  assign wire38 = wire37[(2'h2):(1'h0)];
  always
    @(posedge clk) begin
      reg39 = $unsigned(($signed((8'hbc)) & wire18));
      reg40 <= $unsigned($signed($unsigned($signed((wire3 << (8'h9f))))));
      for (forvar41 = (1'h0); (forvar41 < (2'h2)); forvar41 = (forvar41 + (1'h1)))
        begin
          reg42 = wire20[(3'h7):(1'h1)];
          for (forvar43 = (1'h0); (forvar43 < (3'h4)); forvar43 = (forvar43 + (1'h1)))
            begin
              reg44 <= ($signed({$signed((reg39 ^ wire36)),
                  $signed($unsigned(wire34))}) || ((wire36 <= $signed($unsigned(wire36))) <= ($unsigned((wire3 ?
                  wire1 : wire36)) >= wire36[(2'h3):(2'h2)])));
              reg45 <= $signed($unsigned(wire0[(3'h7):(1'h0)]));
            end
          reg46 <= ($unsigned(reg40) & wire18[(2'h3):(1'h0)]);
          for (forvar47 = (1'h0); (forvar47 < (2'h3)); forvar47 = (forvar47 + (1'h1)))
            begin
              reg48 <= {$unsigned(($unsigned($signed(wire0)) ?
                      $signed($unsigned(wire34)) : ($unsigned(reg40) ?
                          wire1 : wire3)))};
              reg49 = (wire38[(2'h3):(2'h3)] <<< (8'hac));
              reg50 = ($unsigned(reg40[(3'h7):(3'h6)]) ?
                  $unsigned(reg49[(2'h3):(2'h3)]) : $unsigned(($unsigned(wire18[(3'h4):(1'h1)]) ?
                      $unsigned((forvar47 == wire34)) : $signed((!reg40)))));
              reg51 <= wire34;
              reg52 = (~&$unsigned($signed($unsigned(reg44))));
            end
          for (forvar53 = (1'h0); (forvar53 < (1'h1)); forvar53 = (forvar53 + (1'h1)))
            begin
              reg54 <= (8'hba);
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21  (y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h78):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire25;
  input wire [(4'h8):(1'h0)] wire24;
  input wire [(4'hf):(1'h0)] wire23;
  input wire signed [(2'h2):(1'h0)] wire22;
  wire signed [(5'h15):(1'h0)] wire33;
  wire signed [(4'hf):(1'h0)] wire32;
  wire [(4'h8):(1'h0)] wire31;
  wire signed [(4'hd):(1'h0)] wire30;
  wire [(5'h13):(1'h0)] wire29;
  wire [(5'h10):(1'h0)] wire28;
  wire signed [(4'h8):(1'h0)] wire27;
  wire [(5'h13):(1'h0)] wire26;
  assign y = {wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 (1'h0)};
  assign wire26 = wire22;
  assign wire27 = (+$unsigned($signed({$signed((7'h43)), $signed(wire23)})));
  assign wire28 = wire23;
  assign wire29 = $signed($signed(wire26));
  assign wire30 = (wire23 ^~ $signed(wire27));
  assign wire31 = ((~^wire25) ?
                      (wire23 - ((|(wire25 ? wire28 : wire30)) ?
                          ($signed(wire29) ?
                              $signed(wire27) : $signed(wire26)) : wire28[(4'he):(4'hd)])) : (wire27 >>> wire29[(1'h1):(1'h1)]));
  assign wire32 = ((+(&$unsigned((wire22 ? wire27 : wire31)))) ?
                      wire23[(3'h4):(1'h0)] : $signed(wire22));
  assign wire33 = ((~^wire29[(3'h7):(2'h3)]) >= $signed(wire31));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param14 = (((((!(8'hbd)) * (~&(8'hae))) ? ((+(8'hb1)) ? ((8'hb8) == (8'hb3)) : ((8'haa) ? (8'ha2) : (8'ha4))) : ({(7'h43), (8'ha4)} ? (-(8'hbd)) : (+(8'ha8)))) ? (+(((8'hb7) == (8'ha2)) <= ((7'h42) + (8'hbf)))) : (((-(8'hbf)) >= ((8'h9e) && (8'had))) ? {(8'hb8), (|(8'h9d))} : (((8'had) < (8'ha9)) & ((8'h9f) ? (7'h44) : (8'had))))) ? (!(+(((8'hb0) ? (7'h42) : (7'h40)) ? {(8'ha6)} : {(8'ha5)}))) : ((({(7'h43)} + ((8'had) ? (7'h42) : (8'ha3))) ? (((7'h42) ? (8'h9e) : (8'h9e)) | (8'h9c)) : (((8'hb4) == (8'hab)) ? ((8'haf) != (8'hb1)) : ((8'hbd) ^ (8'had)))) & (|(-((7'h42) << (8'hbb)))))), 
parameter param15 = {param14})
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h47):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire7;
  input wire [(5'h11):(1'h0)] wire6;
  input wire [(4'hd):(1'h0)] wire5;
  wire signed [(4'hf):(1'h0)] wire13;
  wire [(5'h11):(1'h0)] wire12;
  wire signed [(3'h4):(1'h0)] wire11;
  wire [(5'h14):(1'h0)] wire10;
  wire signed [(4'he):(1'h0)] wire9;
  assign y = {wire13, wire12, wire11, wire10, wire9, (1'h0)};
  assign wire9 = wire7;
  assign wire10 = $unsigned(($signed(((^~wire5) ?
                          (wire8 ^ wire8) : (wire8 >> wire5))) ?
                      wire6 : (8'h9e)));
  assign wire11 = $unsigned(({((wire6 ? wire7 : wire5) ?
                          $unsigned((8'ha3)) : $signed(wire7))} & wire10));
  assign wire12 = ({(wire5[(4'hd):(3'h4)] >>> $signed(wire9))} || {(wire5[(2'h2):(1'h1)] ?
                          {$unsigned((8'hbe)),
                              $signed(wire10)} : $signed(wire10))});
  assign wire13 = ({$signed(((wire9 ? wire12 : wire10) ?
                              {wire5} : (wire11 <<< (7'h44)))),
                          wire9[(2'h3):(2'h2)]} ?
                      $unsigned($unsigned($signed($signed(wire12)))) : wire5);
endmodule