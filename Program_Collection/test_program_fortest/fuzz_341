(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h26):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(3'h5):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire0;
  wire signed [(4'ha):(1'h0)] wire48;
  wire [(3'h6):(1'h0)] wire46;
  wire [(4'hb):(1'h0)] wire5;
  wire [(4'ha):(1'h0)] wire4;
  assign y = {wire48, wire46, wire5, wire4, (1'h0)};
  assign wire4 = {(~^{(~|wire2)})};
  assign wire5 = {$signed((~&(+wire4)))};
  module6 #() modinst47 (.wire8(wire3), .wire9(wire4), .wire7(wire2), .clk(clk), .y(wire46), .wire10(wire0));
  assign wire48 = $signed($unsigned(wire0[(1'h0):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module6  (y, clk, wire10, wire9, wire8, wire7);
  output wire [(32'h81):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire10;
  input wire signed [(3'h5):(1'h0)] wire9;
  input wire signed [(4'hb):(1'h0)] wire8;
  input wire signed [(4'h9):(1'h0)] wire7;
  wire signed [(4'h8):(1'h0)] wire45;
  wire signed [(4'h8):(1'h0)] wire44;
  wire signed [(3'h4):(1'h0)] wire43;
  wire [(3'h6):(1'h0)] wire38;
  wire [(4'h8):(1'h0)] wire30;
  wire [(3'h4):(1'h0)] wire28;
  wire signed [(3'h5):(1'h0)] wire13;
  wire [(4'ha):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire11;
  reg signed [(2'h2):(1'h0)] reg42 = (1'h0);
  reg [(2'h3):(1'h0)] reg41 = (1'h0);
  reg [(2'h2):(1'h0)] reg40 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg39 = (1'h0);
  reg [(3'h6):(1'h0)] reg37 = (1'h0);
  reg [(4'h9):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg35 = (1'h0);
  reg [(4'ha):(1'h0)] reg34 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg33 = (1'h0);
  reg [(4'h9):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg31 = (1'h0);
  assign y = {wire45,
                 wire44,
                 wire43,
                 wire38,
                 wire30,
                 wire28,
                 wire13,
                 wire12,
                 wire11,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 (1'h0)};
  assign wire11 = wire10[(2'h2):(1'h0)];
  assign wire12 = ($unsigned(($signed(wire9) ?
                          (wire10 ? wire10 : wire9) : wire10)) ?
                      {(-$unsigned(wire11))} : (!$signed($signed(wire7))));
  assign wire13 = wire9[(2'h3):(2'h2)];
  module14 #() modinst29 (wire28, clk, wire8, wire7, wire9, wire11);
  assign wire30 = wire28;
  always
    @(posedge clk) begin
      if ($unsigned(({(~^wire30)} >> $unsigned($unsigned((8'ha8))))))
        begin
          reg31 <= ((((wire13 >>> (8'had)) ?
              $signed(wire12) : (8'ha5)) <= (~|(~^wire28))) - ((wire13 ?
                  wire30 : $unsigned(wire10)) ?
              $signed(wire8) : wire7));
          if ($signed((((wire7 ? wire7 : wire13) ?
              $signed(wire10) : (wire11 == (8'h9e))) < wire30)))
            begin
              reg32 <= (~^$signed(($signed(wire28) ?
                  {wire13} : (wire30 ? wire7 : wire11))));
              reg33 <= (8'ha1);
              reg34 <= (~|((8'ha5) <<< wire9[(2'h3):(2'h2)]));
            end
          else
            begin
              reg32 <= $signed($signed($signed({reg33})));
              reg33 <= $signed($signed((8'ha2)));
            end
        end
      else
        begin
          if (wire11)
            begin
              reg31 <= ({$signed($unsigned(reg34))} < wire7);
              reg32 <= reg34[(2'h2):(1'h1)];
            end
          else
            begin
              reg31 <= ((wire30[(3'h6):(3'h4)] << (~|(reg33 ?
                      reg32 : wire13))) ?
                  $unsigned(reg34[(4'ha):(1'h0)]) : $unsigned(((wire28 >> wire11) ?
                      {wire11} : $signed((8'ha4)))));
              reg32 <= $signed($signed($unsigned((wire11 ? wire28 : (8'h9f)))));
            end
        end
      reg35 <= reg31[(2'h2):(1'h0)];
      if (reg33)
        begin
          reg36 <= $signed($unsigned((reg32 ? wire28 : reg35)));
        end
      else
        begin
          reg36 <= $unsigned($unsigned(wire8[(2'h3):(1'h1)]));
          reg37 <= ((((^~reg34) ?
              wire10[(3'h5):(3'h5)] : $unsigned((8'ha0))) * $unsigned({reg31})) ^~ wire30);
        end
    end
  assign wire38 = (^~wire7[(3'h5):(1'h0)]);
  always
    @(posedge clk) begin
      if ({(reg35[(1'h0):(1'h0)] ?
              $signed(reg36) : ($signed(reg32) + reg37[(3'h6):(3'h6)]))})
        begin
          reg39 <= wire10;
          reg40 <= ($signed(($unsigned(reg37) ? (&wire8) : (&(8'hab)))) ?
              ((8'h9c) <<< $unsigned((reg32 >>> (8'ha6)))) : (~^(((8'hae) & reg35) <<< (!reg32))));
          reg41 <= (~^({(8'h9c)} - (wire38[(2'h2):(1'h1)] ?
              $signed((8'ha5)) : (wire38 ? wire8 : reg39))));
        end
      else
        begin
          if (reg31[(2'h3):(2'h2)])
            begin
              reg39 <= wire7[(2'h2):(2'h2)];
              reg40 <= $unsigned({($signed(reg33) ?
                      wire8[(3'h7):(1'h1)] : (wire11 && reg39))});
            end
          else
            begin
              reg39 <= $unsigned((-({reg32} == $unsigned(wire9))));
            end
        end
      reg42 <= (((((8'ha8) ? wire38 : wire11) ^~ reg41) ?
              (+$signed(reg36)) : (!{reg37})) ?
          (wire13 ? reg33 : (~^{wire12})) : (+wire8));
    end
  assign wire43 = (^wire11[(3'h7):(1'h0)]);
  assign wire44 = (~|(|{reg42}));
  assign wire45 = (8'ha5);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire18;
  input wire [(4'h9):(1'h0)] wire17;
  input wire signed [(3'h5):(1'h0)] wire16;
  input wire signed [(3'h4):(1'h0)] wire15;
  wire signed [(4'ha):(1'h0)] wire27;
  wire signed [(2'h3):(1'h0)] wire26;
  wire [(3'h6):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  wire [(4'ha):(1'h0)] wire22;
  wire signed [(4'h8):(1'h0)] wire21;
  wire signed [(4'h9):(1'h0)] wire20;
  wire signed [(3'h5):(1'h0)] wire19;
  assign y = {wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 (1'h0)};
  assign wire19 = $signed((-$unsigned((wire15 ? wire15 : wire15))));
  assign wire20 = (wire17 <= ((+(8'ha7)) ?
                      wire15[(1'h0):(1'h0)] : (wire19 << wire15)));
  assign wire21 = wire17[(3'h7):(1'h1)];
  assign wire22 = {$unsigned(wire15[(2'h2):(1'h0)])};
  assign wire23 = (($signed($signed((8'ha3))) <= wire20[(3'h7):(3'h6)]) ?
                      wire18 : (~|((~&(8'haf)) ?
                          (8'had) : (wire21 ? (8'h9d) : wire21))));
  assign wire24 = (~&wire15[(1'h0):(1'h0)]);
  assign wire25 = $unsigned($signed($signed($signed(wire21))));
  assign wire26 = {wire16};
  assign wire27 = $signed(wire21[(1'h0):(1'h0)]);
endmodule