(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param33 = {(|(((8'hae) ? (8'hae) : (8'ha4)) ? (!(8'hab)) : ((8'h9f) ? (8'haa) : (8'haa))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(3'h4):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire signed [(4'h9):(1'h0)] wire0;
  wire [(3'h7):(1'h0)] wire32;
  wire [(4'h9):(1'h0)] wire31;
  wire signed [(4'h8):(1'h0)] wire30;
  wire signed [(3'h6):(1'h0)] wire18;
  wire [(3'h7):(1'h0)] wire4;
  reg signed [(3'h6):(1'h0)] reg29 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg28 = (1'h0);
  reg [(4'hb):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg26 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg25 = (1'h0);
  reg [(4'hb):(1'h0)] reg24 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg22 = (1'h0);
  reg [(3'h5):(1'h0)] reg21 = (1'h0);
  reg [(2'h3):(1'h0)] reg20 = (1'h0);
  assign y = {wire32,
                 wire31,
                 wire30,
                 wire18,
                 wire4,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 (1'h0)};
  assign wire4 = (~|(|(^$unsigned(wire1))));
  module5 #() modinst19 (wire18, clk, wire4, wire1, wire2, wire3);
  always
    @(posedge clk) begin
      reg20 <= $signed($signed(wire1[(2'h3):(1'h1)]));
      reg21 <= wire2;
      reg22 <= {(wire0 * (+((8'h9c) ? wire18 : wire2)))};
    end
  always
    @(posedge clk) begin
      reg23 <= $signed({($signed(wire3) ?
              reg22[(3'h4):(2'h3)] : (reg21 ? wire3 : (8'h9f)))});
      if ((({(wire2 == wire0)} ?
          $signed(((8'ha5) != reg21)) : wire4) | $unsigned($signed(reg20[(1'h0):(1'h0)]))))
        begin
          reg24 <= (^$unsigned($signed((reg20 <<< reg21))));
          reg25 <= reg23[(1'h0):(1'h0)];
        end
      else
        begin
          reg24 <= (+reg25);
          reg25 <= (~^(((wire3 || wire2) ?
                  (reg21 > reg24) : ((8'ha1) ? (8'haf) : wire1)) ?
              $signed($unsigned(wire4)) : $signed((wire0 ^ wire4))));
        end
      if (wire18)
        begin
          if (reg23[(1'h1):(1'h1)])
            begin
              reg26 <= (~|$signed(((wire3 >> reg24) != ((8'ha5) >= reg21))));
              reg27 <= (8'hab);
              reg28 <= (($unsigned(((8'hab) ? (8'haf) : wire18)) ?
                  $signed(((8'ha8) ?
                      (8'h9c) : wire2)) : ($signed(reg26) & wire0)) ~^ $unsigned(($signed(reg26) ?
                  {reg21} : wire18[(1'h0):(1'h0)])));
            end
          else
            begin
              reg26 <= {(!$signed((^reg27)))};
              reg27 <= ((wire18[(3'h6):(1'h0)] ?
                  $signed(reg24) : reg26[(1'h1):(1'h0)]) != reg23[(1'h1):(1'h1)]);
              reg28 <= $signed((^reg28));
            end
          reg29 <= reg28[(2'h3):(2'h3)];
        end
      else
        begin
          reg26 <= $unsigned((+$unsigned((^wire2))));
        end
    end
  assign wire30 = $signed((~wire1[(3'h4):(3'h4)]));
  assign wire31 = ((~|$unsigned((!wire3))) <= $unsigned(reg20));
  assign wire32 = $signed($signed(reg20));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5  (y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h35):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire8;
  input wire [(2'h2):(1'h0)] wire7;
  input wire [(3'h5):(1'h0)] wire6;
  wire [(2'h2):(1'h0)] wire17;
  wire [(4'ha):(1'h0)] wire16;
  wire signed [(3'h6):(1'h0)] wire15;
  wire [(3'h7):(1'h0)] wire14;
  wire [(3'h7):(1'h0)] wire13;
  wire [(4'hb):(1'h0)] wire12;
  wire [(2'h3):(1'h0)] wire11;
  wire signed [(3'h6):(1'h0)] wire10;
  assign y = {wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 (1'h0)};
  assign wire10 = ($signed(wire7) ?
                      wire6[(1'h1):(1'h1)] : {$signed($signed(wire7))});
  assign wire11 = (wire8 << $signed((|(~^wire10))));
  assign wire12 = {wire6[(2'h3):(2'h2)]};
  assign wire13 = $signed({$signed($unsigned((8'ha3)))});
  assign wire14 = $signed((-wire12));
  assign wire15 = (8'ha4);
  assign wire16 = wire15;
  assign wire17 = wire15[(3'h5):(1'h0)];
endmodule