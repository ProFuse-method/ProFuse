(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param70 = ({{(~^(8'hab))}} >= {(8'hab)}))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire0;
  input wire [(3'h5):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire2;
  input wire [(3'h4):(1'h0)] wire3;
  wire [(3'h5):(1'h0)] wire69;
  wire [(3'h6):(1'h0)] wire68;
  wire [(4'hb):(1'h0)] wire4;
  wire signed [(3'h6):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire6;
  wire [(3'h6):(1'h0)] wire60;
  wire [(4'h9):(1'h0)] wire65;
  wire signed [(2'h3):(1'h0)] wire66;
  reg [(4'hb):(1'h0)] reg62 = (1'h0);
  reg [(3'h7):(1'h0)] reg63 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg64 = (1'h0);
  assign y = {wire69,
                 wire68,
                 wire4,
                 wire5,
                 wire6,
                 wire60,
                 wire65,
                 wire66,
                 reg62,
                 reg63,
                 reg64,
                 (1'h0)};
  assign wire4 = wire3[(1'h1):(1'h0)];
  assign wire5 = $unsigned(wire1);
  assign wire6 = wire0[(4'h9):(3'h7)];
  module7 #() modinst61 (.clk(clk), .wire11(wire1), .wire10(wire4), .wire8(wire2), .y(wire60), .wire9(wire6));
  always
    @(posedge clk) begin
      if (($unsigned(($unsigned(wire60) ?
          wire60[(3'h5):(1'h1)] : (8'ha1))) || $unsigned({(wire4 ?
              wire5 : (8'haf))})))
        begin
          reg62 <= (^~{({wire6} ? $unsigned(wire1) : wire1)});
        end
      else
        begin
          reg62 <= (~^(((~&wire1) <= (wire6 ? wire5 : wire6)) ?
              $signed(wire5) : $signed(wire4[(3'h5):(2'h2)])));
          reg63 <= ((((~^wire4) ? wire0 : (wire4 ? wire1 : (8'ha4))) ?
                  wire4[(3'h5):(3'h4)] : (^(~|wire0))) ?
              {(wire6 ? (-wire3) : (~|wire4))} : reg62[(4'hb):(4'h9)]);
        end
      reg64 <= $unsigned($unsigned($signed({reg62})));
    end
  assign wire65 = wire3[(1'h0):(1'h0)];
  module34 #() modinst67 (wire66, clk, reg63, wire3, wire65, wire1);
  assign wire68 = ((reg63[(3'h5):(1'h0)] <= (8'h9d)) - (wire0 ~^ (-$unsigned(wire6))));
  assign wire69 = (~((+{(8'h9d)}) ?
                      $unsigned((wire5 + wire5)) : (wire65 ?
                          (wire66 >> (8'hae)) : {wire4})));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module7
#(parameter param59 = (8'ha7))
(y, clk, wire8, wire9, wire10, wire11);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire8;
  input wire [(4'hb):(1'h0)] wire9;
  input wire [(4'hb):(1'h0)] wire10;
  input wire signed [(3'h5):(1'h0)] wire11;
  wire signed [(2'h3):(1'h0)] wire58;
  wire [(2'h3):(1'h0)] wire57;
  wire signed [(3'h7):(1'h0)] wire56;
  wire [(3'h6):(1'h0)] wire55;
  wire [(4'hb):(1'h0)] wire54;
  wire signed [(2'h3):(1'h0)] wire53;
  wire [(2'h3):(1'h0)] wire52;
  wire signed [(4'h9):(1'h0)] wire12;
  wire [(3'h6):(1'h0)] wire24;
  wire [(4'h9):(1'h0)] wire26;
  wire signed [(3'h5):(1'h0)] wire50;
  reg [(3'h6):(1'h0)] reg27 = (1'h0);
  reg [(2'h2):(1'h0)] reg28 = (1'h0);
  reg [(4'h8):(1'h0)] reg29 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg32 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg33 = (1'h0);
  assign y = {wire58,
                 wire57,
                 wire56,
                 wire55,
                 wire54,
                 wire53,
                 wire52,
                 wire12,
                 wire24,
                 wire26,
                 wire50,
                 reg27,
                 reg28,
                 reg29,
                 reg30,
                 reg31,
                 reg32,
                 reg33,
                 (1'h0)};
  assign wire12 = $signed(wire10);
  module13 #() modinst25 (wire24, clk, wire8, wire10, wire12, wire11);
  assign wire26 = $signed($signed(wire12[(2'h2):(1'h0)]));
  always
    @(posedge clk) begin
      reg27 <= ($unsigned(({wire11} ?
              $unsigned(wire11) : wire10[(2'h3):(1'h0)])) ?
          $signed({(wire26 | wire24)}) : (^((wire26 ? wire10 : wire26) ?
              $signed(wire9) : {(8'had)})));
      if ($signed(wire9[(4'ha):(1'h1)]))
        begin
          reg28 <= (~&wire8[(1'h0):(1'h0)]);
          reg29 <= {($signed(reg27) ?
                  ($unsigned(wire8) | (|wire26)) : (reg28[(2'h2):(2'h2)] & wire26[(3'h7):(2'h3)]))};
        end
      else
        begin
          reg28 <= (wire12[(3'h5):(3'h4)] ?
              $signed($signed($unsigned(reg27))) : $unsigned($unsigned(wire10[(2'h2):(2'h2)])));
          reg29 <= $unsigned($unsigned(((reg27 ^ reg28) ^ ((8'haf) ?
              (8'h9d) : wire9))));
          if (reg28)
            begin
              reg30 <= (~$signed(((wire10 << wire11) << wire10[(1'h0):(1'h0)])));
              reg31 <= ({((wire9 | wire26) - wire24[(1'h0):(1'h0)])} + ({(wire8 ?
                          wire11 : wire10)} ?
                  (!$unsigned(reg29)) : ($unsigned(reg29) || (wire12 ?
                      wire11 : (8'h9e)))));
              reg32 <= {wire9[(3'h4):(1'h1)]};
            end
          else
            begin
              reg30 <= ({(&{(8'h9c)})} ?
                  wire9 : ($unsigned(wire12[(3'h5):(3'h4)]) > $signed((wire24 >>> wire26))));
            end
        end
      reg33 <= $unsigned(({wire26} != ({reg28} ?
          $signed(wire24) : (^~(8'h9d)))));
    end
  module34 #() modinst51 (.wire35(reg31), .wire36(reg27), .wire37(wire24), .clk(clk), .y(wire50), .wire38(reg33));
  assign wire52 = (~|wire24);
  assign wire53 = {(-((reg27 ? (8'hab) : reg30) ?
                          $unsigned(reg27) : (-(8'ha8))))};
  assign wire54 = wire26;
  assign wire55 = ((~$unsigned(wire54)) ? {wire52} : (~wire9));
  assign wire56 = ((!wire12) & {{$signed((8'hae))}});
  assign wire57 = ((wire56 + $unsigned((wire9 ? wire54 : (8'ha3)))) ?
                      $signed({{wire26}}) : (($signed(wire54) ?
                          $signed(wire12) : $signed(reg31)) ^ wire8));
  assign wire58 = (~|$unsigned((wire50[(1'h1):(1'h0)] ?
                      (reg33 ? wire10 : wire11) : wire11[(1'h0):(1'h0)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module34
#(parameter param49 = ((((~^(8'ha0)) ? ((8'ha3) - (8'ha6)) : {(8'hae)}) ? (&(^~(8'h9e))) : (((8'ha0) ? (8'ha7) : (8'ha2)) > ((8'ha7) ? (8'ha0) : (8'hac)))) > (({(8'ha7)} & ((8'had) ^~ (8'h9e))) ? ((&(8'hab)) & ((8'ha5) >>> (8'ha9))) : ((8'ha4) ? (|(8'haf)) : (!(8'hab))))))
(y, clk, wire38, wire37, wire36, wire35);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire38;
  input wire signed [(2'h3):(1'h0)] wire37;
  input wire signed [(3'h6):(1'h0)] wire36;
  input wire signed [(2'h2):(1'h0)] wire35;
  wire signed [(4'h8):(1'h0)] wire48;
  wire signed [(3'h4):(1'h0)] wire47;
  wire [(4'h8):(1'h0)] wire46;
  wire [(4'h8):(1'h0)] wire45;
  wire [(4'hb):(1'h0)] wire44;
  wire signed [(3'h6):(1'h0)] wire43;
  wire signed [(4'h9):(1'h0)] wire42;
  wire signed [(3'h6):(1'h0)] wire41;
  wire [(3'h4):(1'h0)] wire40;
  wire signed [(2'h3):(1'h0)] wire39;
  assign y = {wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 (1'h0)};
  assign wire39 = (wire38[(3'h7):(3'h6)] ?
                      wire38[(2'h3):(1'h0)] : wire37[(1'h0):(1'h0)]);
  assign wire40 = $unsigned((wire39 ?
                      $unsigned($signed(wire35)) : $unsigned($signed(wire37))));
  assign wire41 = {wire35};
  assign wire42 = (wire36[(1'h1):(1'h0)] & wire39[(2'h3):(1'h1)]);
  assign wire43 = {wire41[(1'h0):(1'h0)]};
  assign wire44 = wire36;
  assign wire45 = $unsigned((((wire42 > wire39) ? $unsigned(wire43) : wire39) ?
                      wire41 : (!wire35[(2'h2):(2'h2)])));
  assign wire46 = ($unsigned({wire42}) < wire42);
  assign wire47 = (wire42 && $signed((+$unsigned(wire43))));
  assign wire48 = wire40[(1'h0):(1'h0)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module13
#(parameter param23 = (((&((8'hab) ? (8'had) : (8'ha3))) ? (&((8'h9d) == (8'hac))) : ((^(8'ha3)) ^ (^(8'hb0)))) >= {(~&(-(8'hb0)))}))
(y, clk, wire17, wire16, wire15, wire14);
  output wire [(32'h2b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h5):(1'h0)] wire17;
  input wire signed [(2'h2):(1'h0)] wire16;
  input wire [(4'h9):(1'h0)] wire15;
  input wire signed [(3'h5):(1'h0)] wire14;
  wire signed [(4'h9):(1'h0)] wire22;
  wire [(4'h9):(1'h0)] wire20;
  wire signed [(4'h9):(1'h0)] wire19;
  wire [(4'ha):(1'h0)] wire18;
  reg signed [(3'h5):(1'h0)] reg21 = (1'h0);
  assign y = {wire22, wire20, wire19, wire18, reg21, (1'h0)};
  assign wire18 = (wire16 != (wire15[(3'h7):(2'h3)] ?
                      $signed(wire16[(1'h1):(1'h1)]) : ((wire17 && wire14) ?
                          wire16 : $unsigned(wire16))));
  assign wire19 = wire15;
  assign wire20 = $unsigned(($unsigned((wire17 ? wire15 : wire14)) ?
                      ({(8'had)} ?
                          (&wire18) : $unsigned((8'h9c))) : $signed($signed((8'h9d)))));
  always
    @(posedge clk) begin
      reg21 <= ((((+(8'ha8)) || wire14) + wire19) != $unsigned(wire18[(2'h2):(1'h1)]));
    end
  assign wire22 = wire15;
endmodule