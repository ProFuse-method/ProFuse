(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param89 = (((8'ha4) && (^~((8'ha8) <<< (8'ha9)))) & ((&(^~(8'hb0))) ? (-((8'hae) >= (8'h9c))) : (^((8'h9f) != (8'h9e))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h67):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire88;
  wire [(4'hb):(1'h0)] wire87;
  wire [(4'h8):(1'h0)] wire85;
  wire [(3'h7):(1'h0)] wire84;
  wire [(4'hb):(1'h0)] wire82;
  wire [(4'hb):(1'h0)] wire81;
  wire [(3'h6):(1'h0)] wire80;
  wire signed [(4'ha):(1'h0)] wire79;
  wire [(3'h5):(1'h0)] wire76;
  wire signed [(4'h8):(1'h0)] wire74;
  reg [(4'ha):(1'h0)] reg78 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg77 = (1'h0);
  assign y = {wire88,
                 wire87,
                 wire85,
                 wire84,
                 wire82,
                 wire81,
                 wire80,
                 wire79,
                 wire76,
                 wire74,
                 reg78,
                 reg77,
                 (1'h0)};
  module4 #() modinst75 (wire74, clk, wire2, wire1, wire3, wire0);
  assign wire76 = $unsigned((^~(~((8'ha3) <<< (8'ha0)))));
  always
    @(posedge clk) begin
      reg77 <= ((~|wire76[(1'h0):(1'h0)]) >= wire2);
      reg78 <= (~^$unsigned((wire3 ?
          $unsigned(wire76) : wire0[(1'h0):(1'h0)])));
    end
  assign wire79 = wire0;
  assign wire80 = ({$unsigned(wire2)} > $signed($unsigned((reg77 ?
                      wire1 : wire3))));
  assign wire81 = ((((wire3 ~^ wire79) < wire80) ?
                          $unsigned((8'ha8)) : (8'hae)) ?
                      wire0[(1'h1):(1'h0)] : $signed(wire2[(3'h4):(3'h4)]));
  module59 #() modinst83 (.y(wire82), .wire61(reg77), .wire63(reg78), .clk(clk), .wire60(wire80), .wire62(wire2));
  assign wire84 = (8'ha4);
  module59 #() modinst86 (.y(wire85), .clk(clk), .wire61(wire2), .wire60(wire74), .wire63(wire79), .wire62(wire81));
  assign wire87 = wire2;
  assign wire88 = (8'h9d);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4  (y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h86):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire8;
  input wire signed [(4'ha):(1'h0)] wire7;
  input wire signed [(4'h8):(1'h0)] wire6;
  input wire [(3'h4):(1'h0)] wire5;
  wire signed [(4'ha):(1'h0)] wire72;
  wire [(3'h4):(1'h0)] wire58;
  wire signed [(4'h9):(1'h0)] wire56;
  wire signed [(2'h3):(1'h0)] wire22;
  wire [(3'h4):(1'h0)] wire21;
  wire [(4'ha):(1'h0)] wire20;
  wire signed [(4'ha):(1'h0)] wire19;
  wire [(4'h9):(1'h0)] wire18;
  wire [(3'h6):(1'h0)] wire17;
  reg signed [(4'h9):(1'h0)] reg16 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg15 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg14 = (1'h0);
  reg [(4'hb):(1'h0)] reg13 = (1'h0);
  reg [(2'h2):(1'h0)] reg12 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg11 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg10 = (1'h0);
  reg [(4'h8):(1'h0)] reg9 = (1'h0);
  assign y = {wire72,
                 wire58,
                 wire56,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($unsigned(($unsigned($signed(wire7)) & (^~$signed(wire6)))))
        begin
          reg9 <= (~^$unsigned(($unsigned(wire5) ? wire5 : (^wire5))));
        end
      else
        begin
          reg9 <= $unsigned($signed((wire7[(3'h7):(1'h1)] << (wire7 ?
              reg9 : wire7))));
          if ((-((wire6 ? (wire7 ? reg9 : (8'h9f)) : wire6[(3'h7):(3'h6)]) ?
              wire8 : (|$signed(wire7)))))
            begin
              reg10 <= (($unsigned({wire7}) <<< wire8) ?
                  (wire8[(2'h2):(1'h1)] ?
                      ((-wire7) ?
                          (8'hae) : {wire6}) : ($signed(wire7) && (^~wire7))) : $unsigned($unsigned(reg9)));
              reg11 <= $signed($signed((-(wire5 ? wire8 : wire6))));
              reg12 <= (|(($signed(wire5) ? $signed(reg9) : reg11) ?
                  reg9[(3'h6):(1'h0)] : ($signed(reg9) || (8'hab))));
            end
          else
            begin
              reg10 <= {(~^((wire6 <= (8'hab)) == $unsigned(reg10)))};
              reg11 <= $unsigned($signed($unsigned($signed(reg9))));
              reg12 <= reg11[(1'h0):(1'h0)];
            end
          if ((~((&(reg10 ? reg11 : wire5)) + $unsigned(wire8))))
            begin
              reg13 <= wire7;
            end
          else
            begin
              reg13 <= wire7[(3'h4):(2'h3)];
              reg14 <= (+$signed({(wire5 << reg11)}));
              reg15 <= $unsigned($unsigned((~&{wire8})));
            end
        end
      reg16 <= {$signed({(&wire5)})};
    end
  assign wire17 = (reg12[(1'h0):(1'h0)] ? reg14 : $unsigned((-{wire5})));
  assign wire18 = (~^{$unsigned($signed(wire8))});
  assign wire19 = reg16;
  assign wire20 = ((reg9[(4'h8):(1'h0)] ?
                      ((wire7 & reg14) << $signed(reg10)) : {(!reg16)}) << wire6);
  assign wire21 = (wire20 + (&reg11));
  assign wire22 = wire17;
  module23 #() modinst57 (.wire24(wire8), .wire26(reg14), .clk(clk), .y(wire56), .wire27(wire18), .wire25(reg15));
  assign wire58 = wire18;
  module59 #() modinst73 (wire72, clk, reg11, reg13, wire56, wire21);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module59  (y, clk, wire63, wire62, wire61, wire60);
  output wire [(32'h39):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire63;
  input wire [(4'hb):(1'h0)] wire62;
  input wire [(4'h9):(1'h0)] wire61;
  input wire signed [(2'h2):(1'h0)] wire60;
  wire [(4'h8):(1'h0)] wire66;
  wire [(2'h2):(1'h0)] wire65;
  wire signed [(4'h9):(1'h0)] wire64;
  reg [(4'h8):(1'h0)] reg71 = (1'h0);
  reg [(4'h8):(1'h0)] reg70 = (1'h0);
  reg [(3'h5):(1'h0)] reg69 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg68 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg67 = (1'h0);
  assign y = {wire66,
                 wire65,
                 wire64,
                 reg71,
                 reg70,
                 reg69,
                 reg68,
                 reg67,
                 (1'h0)};
  assign wire64 = wire63[(1'h1):(1'h0)];
  assign wire65 = $signed({((~|wire61) ?
                          wire62[(4'h9):(1'h0)] : wire62[(3'h6):(2'h2)])});
  assign wire66 = $unsigned($unsigned(($signed(wire64) ?
                      (wire62 + wire61) : $signed(wire64))));
  always
    @(posedge clk) begin
      reg67 <= $signed(((&((8'ha8) && wire62)) <<< (-wire62)));
      if (wire62)
        begin
          reg68 <= $unsigned(($unsigned($unsigned(wire62)) ?
              ((~&wire65) ^~ (~|wire60)) : {(~wire66)}));
          reg69 <= $signed(((8'had) ~^ {(^~(8'ha4))}));
        end
      else
        begin
          if (((|wire66) & (wire65[(2'h2):(2'h2)] >>> (^$signed(wire60)))))
            begin
              reg68 <= reg69[(2'h2):(2'h2)];
              reg69 <= wire63;
            end
          else
            begin
              reg68 <= reg69[(3'h4):(3'h4)];
              reg69 <= wire63[(1'h1):(1'h0)];
            end
          reg70 <= (^$signed(wire62[(4'h9):(2'h2)]));
          reg71 <= $unsigned((($signed(wire66) ?
                  wire62[(4'h9):(1'h1)] : (reg68 ? wire66 : reg67)) ?
              (^~(wire65 * wire60)) : $signed((~&wire61))));
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23
#(parameter param55 = ({((^(8'ha8)) >>> ((8'ha7) ? (8'ha3) : (8'hac)))} <= ((+(~|(8'ha9))) ? (+((8'h9c) ? (8'haa) : (8'hae))) : ((8'ha4) < ((8'ha4) ? (8'ha5) : (8'ha1))))))
(y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'hbe):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire27;
  input wire [(4'h8):(1'h0)] wire26;
  input wire [(4'ha):(1'h0)] wire25;
  input wire [(3'h7):(1'h0)] wire24;
  wire [(3'h5):(1'h0)] wire54;
  wire signed [(2'h3):(1'h0)] wire43;
  wire [(3'h5):(1'h0)] wire42;
  wire signed [(4'h8):(1'h0)] wire33;
  wire signed [(4'hb):(1'h0)] wire32;
  reg signed [(3'h6):(1'h0)] reg53 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg52 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg51 = (1'h0);
  reg [(4'hb):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg49 = (1'h0);
  reg [(3'h5):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg47 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg46 = (1'h0);
  reg [(4'ha):(1'h0)] reg45 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg44 = (1'h0);
  reg [(3'h6):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg39 = (1'h0);
  reg [(2'h2):(1'h0)] reg38 = (1'h0);
  reg [(3'h5):(1'h0)] reg37 = (1'h0);
  reg [(4'hb):(1'h0)] reg36 = (1'h0);
  reg [(4'hb):(1'h0)] reg35 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg34 = (1'h0);
  reg [(4'hb):(1'h0)] reg31 = (1'h0);
  reg [(3'h4):(1'h0)] reg30 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg29 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg28 = (1'h0);
  assign y = {wire54,
                 wire43,
                 wire42,
                 wire33,
                 wire32,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg31,
                 reg30,
                 reg29,
                 reg28,
                 (1'h0)};
  always
    @(posedge clk) begin
      if ($signed($signed(((wire26 ? wire25 : wire24) - {wire27}))))
        begin
          reg28 <= wire24[(3'h5):(2'h3)];
        end
      else
        begin
          reg28 <= ($unsigned($signed((wire27 ^ wire25))) ^ (((8'ha4) - wire24[(2'h3):(1'h1)]) - {wire27[(4'h8):(2'h3)]}));
          reg29 <= ($signed($signed($unsigned(reg28))) ?
              (wire24[(3'h4):(1'h1)] == wire24[(1'h0):(1'h0)]) : (reg28 ?
                  wire24 : $signed(wire27[(2'h3):(2'h3)])));
        end
      if (reg28[(4'h8):(3'h6)])
        begin
          reg30 <= $unsigned($signed(wire24));
          reg31 <= (wire27[(3'h4):(2'h3)] >> $unsigned(((wire26 || reg29) >> wire24[(3'h5):(3'h5)])));
        end
      else
        begin
          reg30 <= reg31[(1'h0):(1'h0)];
        end
    end
  assign wire32 = (8'had);
  assign wire33 = wire27;
  always
    @(posedge clk) begin
      reg34 <= (~&(~&(^(~|(8'ha0)))));
      reg35 <= (reg29[(4'h8):(1'h0)] ^ (((~(8'hab)) ?
          wire25[(1'h1):(1'h0)] : (reg29 ? wire26 : (8'hb0))) ~^ (8'haa)));
      reg36 <= ((&(!reg31)) << {$unsigned((^(8'ha3)))});
    end
  always
    @(posedge clk) begin
      reg37 <= ((|{wire24[(3'h6):(3'h4)]}) && reg28[(1'h1):(1'h1)]);
      reg38 <= (&((-(wire24 ?
          (8'h9c) : wire33)) >= (((8'ha5) & reg34) - reg28[(2'h2):(1'h1)])));
    end
  always
    @(posedge clk) begin
      if ((~^reg36[(1'h0):(1'h0)]))
        begin
          if ($unsigned($signed((!wire25[(3'h5):(3'h4)]))))
            begin
              reg39 <= (({(wire26 ? wire25 : reg36)} ? (!(+reg35)) : {reg28}) ?
                  (reg28[(4'ha):(1'h1)] ?
                      wire24 : (reg29 ?
                          $signed(wire25) : (reg34 - wire26))) : reg34[(1'h1):(1'h0)]);
              reg40 <= (((&(reg30 && reg35)) ?
                  (8'h9e) : ((-wire27) * reg37)) == {$unsigned(wire32)});
            end
          else
            begin
              reg39 <= reg36[(4'h9):(4'h9)];
            end
        end
      else
        begin
          reg39 <= (^~(^reg34));
          reg40 <= $signed(reg31[(4'h9):(2'h2)]);
        end
    end
  always
    @(posedge clk) begin
      reg41 <= $unsigned(($unsigned(((8'ha7) == (8'haa))) ? reg39 : reg39));
    end
  assign wire42 = (~|{reg36[(3'h7):(1'h0)]});
  assign wire43 = (reg41[(3'h5):(1'h0)] + (((reg37 - wire33) * (wire27 ?
                      wire33 : wire24)) > ((wire33 ? wire42 : (8'ha7)) ?
                      $unsigned(reg35) : $signed(reg34))));
  always
    @(posedge clk) begin
      reg44 <= reg31[(3'h6):(3'h6)];
      if ($unsigned(({reg29} ? (^~(|wire27)) : reg34)))
        begin
          reg45 <= wire32[(4'h8):(3'h5)];
          reg46 <= ($signed($unsigned($signed(reg28))) + {(~reg34)});
          if (reg31[(4'hb):(4'h9)])
            begin
              reg47 <= wire27;
              reg48 <= (+(-$unsigned($signed(reg46))));
            end
          else
            begin
              reg47 <= $unsigned((reg47[(1'h0):(1'h0)] ? {reg45} : {wire42}));
            end
        end
      else
        begin
          reg45 <= reg48[(2'h2):(1'h0)];
          if ({(~&reg38[(1'h1):(1'h1)])})
            begin
              reg46 <= (reg40[(2'h3):(2'h3)] ?
                  reg31[(1'h0):(1'h0)] : (!(((8'ha5) ?
                      (8'hac) : (8'haa)) ~^ wire33[(3'h7):(2'h2)])));
              reg47 <= $signed((wire24[(1'h1):(1'h0)] ? (!reg44) : reg39));
            end
          else
            begin
              reg46 <= (reg36[(1'h0):(1'h0)] - reg37);
            end
        end
      if ({(-{(reg30 ? wire33 : reg37)})})
        begin
          reg49 <= {$signed((8'ha2))};
          reg50 <= (reg35[(3'h4):(1'h0)] ?
              reg41[(1'h1):(1'h0)] : reg31[(4'h9):(3'h5)]);
          reg51 <= {reg39};
        end
      else
        begin
          reg49 <= {(reg31[(1'h0):(1'h0)] ? reg46[(2'h2):(1'h0)] : reg31)};
          reg50 <= {$unsigned(({reg29} ? (8'haf) : (+wire27)))};
          if (reg37[(3'h4):(1'h0)])
            begin
              reg51 <= (~^reg31[(4'h8):(2'h3)]);
            end
          else
            begin
              reg51 <= {(reg46[(1'h1):(1'h0)] ?
                      ($signed(reg37) != (reg44 ? (8'h9d) : reg29)) : (reg46 ?
                          wire27 : (wire43 ? (8'ha4) : reg37)))};
              reg52 <= reg48[(2'h3):(2'h3)];
              reg53 <= (~reg36[(4'h8):(2'h2)]);
            end
        end
    end
  assign wire54 = (reg30 & ((wire27[(3'h4):(2'h3)] << $signed((8'hab))) >>> $unsigned({reg30})));
endmodule