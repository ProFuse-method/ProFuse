(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(3'h7):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(2'h3):(1'h0)] wire40;
  wire signed [(3'h5):(1'h0)] wire38;
  wire [(3'h7):(1'h0)] wire7;
  wire [(3'h7):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire4;
  assign y = {wire40, wire38, wire7, wire6, wire5, wire4, (1'h0)};
  assign wire4 = (|(+wire2[(1'h0):(1'h0)]));
  assign wire5 = wire2[(2'h3):(2'h3)];
  assign wire6 = wire5;
  assign wire7 = ((+wire4[(2'h3):(2'h3)]) ?
                     {$unsigned((wire0 ?
                             wire1 : wire6))} : $signed(wire5[(2'h3):(2'h2)]));
  module8 #() modinst39 (.wire9(wire1), .clk(clk), .wire12(wire2), .wire11(wire6), .y(wire38), .wire10(wire4));
  module18 #() modinst41 (.wire22(wire5), .wire21(wire7), .wire19(wire6), .wire20(wire1), .clk(clk), .y(wire40));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h46):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire12;
  input wire [(2'h2):(1'h0)] wire11;
  input wire signed [(3'h5):(1'h0)] wire10;
  input wire signed [(3'h7):(1'h0)] wire9;
  wire signed [(4'hb):(1'h0)] wire35;
  wire [(4'hb):(1'h0)] wire33;
  wire signed [(4'h9):(1'h0)] wire17;
  wire signed [(4'h9):(1'h0)] wire16;
  wire [(3'h7):(1'h0)] wire15;
  wire signed [(2'h3):(1'h0)] wire14;
  wire [(4'hb):(1'h0)] wire13;
  reg [(3'h4):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg36 = (1'h0);
  assign y = {wire35,
                 wire33,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 wire13,
                 reg37,
                 reg36,
                 (1'h0)};
  assign wire13 = wire10;
  assign wire14 = ({(^(^wire10))} ?
                      ($unsigned($signed(wire12)) ?
                          (wire9 ?
                              $signed(wire10) : wire12[(1'h1):(1'h0)]) : wire10) : $unsigned($unsigned(wire12)));
  assign wire15 = $unsigned({(^~(wire14 >= (8'ha8)))});
  assign wire16 = {(|$unsigned((wire15 ? wire13 : wire15)))};
  assign wire17 = wire16[(3'h6):(2'h3)];
  module18 #() modinst34 (wire33, clk, wire12, wire17, wire9, wire10);
  assign wire35 = {(~&$signed($unsigned(wire15)))};
  always
    @(posedge clk) begin
      reg36 <= wire13[(3'h4):(1'h1)];
      reg37 <= wire35[(3'h5):(3'h4)];
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18
#(parameter param32 = {({((8'hb0) ? (8'ha4) : (8'h9c))} ? (((8'ha3) ^ (8'hb0)) ? ((8'ha7) >= (8'ha5)) : ((8'h9d) ? (8'hab) : (8'hae))) : (~&((8'h9d) ? (8'ha4) : (8'hac))))})
(y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h39):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire22;
  input wire signed [(3'h7):(1'h0)] wire21;
  input wire signed [(3'h7):(1'h0)] wire20;
  input wire [(2'h2):(1'h0)] wire19;
  wire [(2'h3):(1'h0)] wire30;
  wire [(4'h8):(1'h0)] wire29;
  wire signed [(2'h2):(1'h0)] wire28;
  wire [(3'h5):(1'h0)] wire27;
  wire [(2'h2):(1'h0)] wire26;
  wire signed [(4'ha):(1'h0)] wire25;
  wire signed [(4'h8):(1'h0)] wire24;
  wire signed [(4'h8):(1'h0)] wire23;
  reg signed [(4'ha):(1'h0)] reg31 = (1'h0);
  assign y = {wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 reg31,
                 (1'h0)};
  assign wire23 = $signed({$signed(wire21)});
  assign wire24 = wire19;
  assign wire25 = (((wire24 | wire24) ^~ wire24[(3'h4):(2'h2)]) != wire21[(2'h3):(1'h1)]);
  assign wire26 = wire25;
  assign wire27 = ((~{(wire19 - wire19)}) ?
                      {wire23[(2'h3):(2'h2)]} : {{$signed(wire26)}});
  assign wire28 = (($signed((|(8'h9d))) | (wire25[(4'ha):(1'h0)] ?
                          $unsigned(wire25) : wire22[(3'h5):(2'h3)])) ?
                      (~&$unsigned(wire25)) : $unsigned((&wire22)));
  assign wire29 = ($signed(wire19[(1'h1):(1'h1)]) < $unsigned($signed(wire25[(3'h6):(2'h3)])));
  assign wire30 = (|wire24[(1'h0):(1'h0)]);
  always
    @(posedge clk) begin
      reg31 <= (((wire27 ? wire26 : $unsigned(wire23)) ?
              $unsigned($signed(wire29)) : wire26) ?
          wire20[(3'h5):(1'h1)] : (wire22 < ($signed(wire22) ?
              (wire19 ? wire28 : (8'ha8)) : $signed(wire27))));
    end
endmodule