(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param76 = (~(|(((8'hae) >= (8'ha4)) ? ((8'h9f) ? (8'hab) : (8'ha1)) : ((8'h9e) ? (8'ha7) : (8'h9d))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'hb9):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire [(2'h3):(1'h0)] wire1;
  input wire [(4'h9):(1'h0)] wire0;
  wire signed [(2'h2):(1'h0)] wire61;
  wire signed [(4'hb):(1'h0)] wire60;
  wire [(4'ha):(1'h0)] wire59;
  wire signed [(3'h7):(1'h0)] wire57;
  wire signed [(4'ha):(1'h0)] wire55;
  wire [(4'ha):(1'h0)] wire11;
  wire signed [(4'h9):(1'h0)] wire10;
  wire [(2'h2):(1'h0)] wire63;
  wire [(3'h6):(1'h0)] wire66;
  wire [(3'h6):(1'h0)] wire67;
  reg signed [(3'h6):(1'h0)] reg75 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg74 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg73 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg72 = (1'h0);
  reg [(3'h6):(1'h0)] reg71 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg70 = (1'h0);
  reg [(3'h6):(1'h0)] reg69 = (1'h0);
  reg [(4'h8):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg8 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg7 = (1'h0);
  reg [(4'ha):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg5 = (1'h0);
  reg [(3'h4):(1'h0)] reg4 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg64 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg65 = (1'h0);
  assign y = {wire61,
                 wire60,
                 wire59,
                 wire57,
                 wire55,
                 wire11,
                 wire10,
                 wire63,
                 wire66,
                 wire67,
                 reg75,
                 reg74,
                 reg73,
                 reg72,
                 reg71,
                 reg70,
                 reg69,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 reg4,
                 reg64,
                 reg65,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (($signed((-$signed(wire2))) ? wire1 : $unsigned($signed(wire2))))
        begin
          reg4 <= wire2[(1'h1):(1'h1)];
        end
      else
        begin
          reg4 <= (reg4 ? reg4[(1'h1):(1'h1)] : wire2[(1'h0):(1'h0)]);
          if ((wire2[(1'h1):(1'h0)] ? (+(~|wire2[(2'h2):(1'h0)])) : wire0))
            begin
              reg5 <= wire1[(1'h1):(1'h0)];
              reg6 <= ((((wire0 ? wire0 : wire2) ? (&wire3) : reg5) ?
                      $signed($unsigned(wire0)) : $unsigned($unsigned(wire2))) ?
                  (^~$unsigned(wire1[(1'h0):(1'h0)])) : ({(~|reg4)} ?
                      $signed(wire2[(2'h2):(1'h0)]) : (!reg4)));
              reg7 <= (~|($signed(wire2) ?
                  wire3[(3'h4):(1'h0)] : $unsigned((reg4 ? (8'ha5) : wire2))));
            end
          else
            begin
              reg5 <= (!({$unsigned((8'had))} ?
                  {(8'haa)} : ((reg4 << reg5) >>> reg5)));
            end
        end
      reg8 <= wire0[(3'h7):(2'h3)];
      reg9 <= $signed({$signed((~^wire0))});
    end
  assign wire10 = $unsigned(wire0);
  assign wire11 = ($signed($unsigned({wire2})) ?
                      ($signed($unsigned(reg6)) == wire10) : {reg9[(4'h8):(1'h0)]});
  module12 #() modinst56 (wire55, clk, reg5, wire2, reg7, wire10);
  module12 #() modinst58 (wire57, clk, reg9, wire11, reg6, wire3);
  assign wire59 = $signed(($unsigned((~&(8'hab))) ? reg7 : {$signed(wire55)}));
  assign wire60 = $signed((&$unsigned((~wire3))));
  module17 #() modinst62 (.wire21(wire3), .wire19(wire59), .clk(clk), .y(wire61), .wire18(wire55), .wire20(reg7));
  assign wire63 = $signed($signed($unsigned(reg9)));
  always
    @(posedge clk) begin
      reg64 <= $signed(((!$signed(wire1)) ?
          ($signed(reg7) >= (wire60 ? reg6 : reg4)) : {(wire1 ?
                  (8'hac) : reg7)}));
      reg65 <= $unsigned($signed(wire59));
    end
  assign wire66 = (&$signed($unsigned((8'h9d))));
  module12 #() modinst68 (.clk(clk), .wire14(wire2), .y(wire67), .wire15(wire55), .wire16(wire60), .wire13(reg5));
  always
    @(posedge clk) begin
      if ((~^{reg65}))
        begin
          if (wire55[(4'h8):(3'h7)])
            begin
              reg69 <= wire57[(3'h4):(1'h0)];
            end
          else
            begin
              reg69 <= $signed((((8'h9c) >> (wire2 ?
                  reg64 : wire0)) + {(wire57 * (8'ha0))}));
              reg70 <= $unsigned($signed((~(~|(8'hab)))));
              reg71 <= reg9[(2'h2):(1'h0)];
            end
          if (reg8[(3'h4):(2'h3)])
            begin
              reg72 <= $signed(((|$signed(reg4)) << $unsigned($unsigned(reg7))));
            end
          else
            begin
              reg72 <= $unsigned((8'hae));
              reg73 <= (reg9[(1'h0):(1'h0)] >= (reg64[(2'h2):(1'h0)] ?
                  $signed((reg9 > wire59)) : {(reg64 ? wire60 : (8'ha5))}));
              reg74 <= $unsigned(wire66[(3'h6):(2'h2)]);
            end
          reg75 <= (~|{(((8'h9c) >> reg72) != (reg73 < reg69))});
        end
      else
        begin
          if ($signed($unsigned($signed((+reg71)))))
            begin
              reg69 <= ($signed($signed(((8'ha9) ? wire1 : reg5))) ?
                  (!$unsigned($unsigned(wire63))) : (((wire0 ?
                          wire10 : reg64) + $signed(reg6)) ?
                      (reg70[(3'h5):(2'h3)] < {reg8}) : {$signed((8'hae))}));
            end
          else
            begin
              reg69 <= ($signed($signed((|reg70))) ?
                  $unsigned((((8'h9f) ?
                      reg5 : reg73) >>> $signed(wire10))) : $unsigned($unsigned((~&wire66))));
              reg70 <= (($signed({reg6}) & {{reg69}}) >>> $unsigned(wire10[(1'h1):(1'h1)]));
              reg71 <= reg9;
            end
          reg72 <= reg72[(3'h4):(2'h2)];
          reg73 <= (8'h9d);
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12  (y, clk, wire16, wire15, wire14, wire13);
  output wire [(32'had):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire16;
  input wire [(4'ha):(1'h0)] wire15;
  input wire [(4'ha):(1'h0)] wire14;
  input wire signed [(4'h9):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire54;
  wire [(3'h4):(1'h0)] wire53;
  wire [(3'h4):(1'h0)] wire52;
  wire signed [(3'h6):(1'h0)] wire43;
  wire [(4'h8):(1'h0)] wire38;
  wire [(3'h4):(1'h0)] wire33;
  wire signed [(3'h7):(1'h0)] wire32;
  wire [(3'h4):(1'h0)] wire31;
  wire [(2'h3):(1'h0)] wire29;
  reg [(4'ha):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg50 = (1'h0);
  reg [(4'h8):(1'h0)] reg49 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg48 = (1'h0);
  reg [(3'h5):(1'h0)] reg47 = (1'h0);
  reg [(3'h4):(1'h0)] reg46 = (1'h0);
  reg [(4'ha):(1'h0)] reg45 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg44 = (1'h0);
  reg [(3'h5):(1'h0)] reg42 = (1'h0);
  reg [(4'hb):(1'h0)] reg41 = (1'h0);
  reg [(4'h9):(1'h0)] reg40 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg39 = (1'h0);
  reg [(4'h9):(1'h0)] reg37 = (1'h0);
  reg [(4'ha):(1'h0)] reg36 = (1'h0);
  reg [(3'h7):(1'h0)] reg35 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg34 = (1'h0);
  assign y = {wire54,
                 wire53,
                 wire52,
                 wire43,
                 wire38,
                 wire33,
                 wire32,
                 wire31,
                 wire29,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 (1'h0)};
  module17 #() modinst30 (wire29, clk, wire16, wire15, wire14, wire13);
  assign wire31 = $signed(((+wire13[(1'h0):(1'h0)]) ?
                      (8'ha0) : (wire15[(4'h8):(3'h5)] ?
                          $unsigned((8'hae)) : (8'ha6))));
  assign wire32 = ({(((8'ha6) && (8'haf)) ?
                          {wire29} : wire13)} * $unsigned((~^(|wire13))));
  assign wire33 = (wire32 >> (wire32[(3'h4):(2'h2)] * $signed(wire13[(4'h9):(1'h0)])));
  always
    @(posedge clk) begin
      if ({(^{$signed(wire33)})})
        begin
          reg34 <= wire16[(3'h6):(1'h0)];
        end
      else
        begin
          if ((({$signed((8'h9e))} ? wire15 : (|(!(8'haf)))) ?
              {wire15[(4'h8):(3'h6)]} : (($unsigned(wire32) ?
                      wire13[(4'h8):(2'h2)] : (reg34 != reg34)) ?
                  (~wire14) : $signed($signed(wire16)))))
            begin
              reg34 <= $signed((((~&wire32) > {wire31}) + $unsigned((8'haf))));
              reg35 <= wire14[(3'h4):(3'h4)];
              reg36 <= wire31;
            end
          else
            begin
              reg34 <= (^~wire13[(4'h8):(1'h0)]);
              reg35 <= (wire33[(2'h2):(2'h2)] <= $unsigned($unsigned(wire16[(3'h5):(1'h0)])));
            end
          reg37 <= (~|$unsigned(($unsigned(wire13) ?
              wire15 : $signed(wire15))));
        end
    end
  assign wire38 = $signed((((wire29 < reg37) ?
                          $unsigned(wire15) : reg37[(3'h6):(2'h3)]) ?
                      reg37 : reg34[(1'h1):(1'h0)]));
  always
    @(posedge clk) begin
      reg39 <= reg37[(1'h0):(1'h0)];
      if (({((wire32 ? (8'h9f) : reg35) ? (8'hb0) : (~&wire14))} & ((wire38 ?
              reg36 : $signed(wire38)) ?
          (wire31[(2'h3):(1'h1)] >= (wire13 ?
              wire32 : wire13)) : wire31[(2'h3):(1'h1)])))
        begin
          reg40 <= (~$unsigned($signed((8'ha7))));
          reg41 <= $unsigned($unsigned($unsigned($signed((8'ha6)))));
          reg42 <= $signed($unsigned({(^~wire16)}));
        end
      else
        begin
          if (reg39)
            begin
              reg40 <= {reg39};
            end
          else
            begin
              reg40 <= $unsigned(wire38);
            end
        end
    end
  assign wire43 = wire33[(2'h2):(2'h2)];
  always
    @(posedge clk) begin
      reg44 <= (~|{(|(wire16 ~^ reg42))});
      reg45 <= (reg36 ?
          $unsigned($signed($signed(reg39))) : wire14[(4'h9):(3'h5)]);
      reg46 <= $signed((&$signed(wire43)));
    end
  always
    @(posedge clk) begin
      if ((wire32 ? reg34 : reg44[(3'h5):(2'h3)]))
        begin
          if ($unsigned(reg34))
            begin
              reg47 <= reg45[(3'h4):(1'h1)];
              reg48 <= $signed(wire14[(2'h3):(1'h1)]);
            end
          else
            begin
              reg47 <= ((({(8'h9c)} ?
                      (8'hab) : (wire43 ?
                          reg47 : (8'h9c))) <= wire32[(2'h2):(2'h2)]) ?
                  $unsigned($signed((reg48 >= reg42))) : ({$signed(wire13)} ?
                      $unsigned((wire13 + wire43)) : $unsigned((wire13 ?
                          reg40 : (8'had)))));
              reg48 <= $signed((($signed(wire13) ?
                      reg36[(3'h5):(1'h0)] : $signed(wire29)) ?
                  ((~&(8'ha0)) ?
                      wire32[(3'h7):(1'h0)] : wire31[(3'h4):(1'h1)]) : {((8'h9e) ?
                          (8'hab) : wire31)}));
            end
        end
      else
        begin
          reg47 <= ((&$unsigned(((8'hb0) ?
              wire15 : (8'hb0)))) <<< $signed($unsigned((reg35 | reg39))));
          reg48 <= (((8'ha9) ? wire38 : reg42[(1'h0):(1'h0)]) ?
              ($signed((^~wire29)) ?
                  (|reg41[(4'hb):(4'h8)]) : $signed((reg46 <<< wire38))) : reg34);
          reg49 <= ((^($unsigned(wire29) >> wire16)) ^ $signed((~^(wire14 <= reg46))));
        end
      reg50 <= (^~wire32);
      reg51 <= ((-(~|$unsigned(reg42))) != ($unsigned(reg44) ?
          ($signed(reg47) < $unsigned((8'hac))) : ((~|reg36) - (wire16 ?
              wire33 : (8'hae)))));
    end
  assign wire52 = wire15[(4'h9):(3'h4)];
  assign wire53 = $unsigned(wire52);
  assign wire54 = reg34[(4'ha):(4'h8)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17  (y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h2e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire21;
  input wire signed [(4'h9):(1'h0)] wire20;
  input wire signed [(4'ha):(1'h0)] wire19;
  input wire [(3'h4):(1'h0)] wire18;
  wire [(3'h5):(1'h0)] wire28;
  wire [(2'h3):(1'h0)] wire27;
  wire signed [(3'h4):(1'h0)] wire26;
  wire [(4'hb):(1'h0)] wire25;
  wire signed [(4'ha):(1'h0)] wire24;
  wire signed [(4'h9):(1'h0)] wire23;
  wire [(2'h3):(1'h0)] wire22;
  assign y = {wire28, wire27, wire26, wire25, wire24, wire23, wire22, (1'h0)};
  assign wire22 = wire20[(4'h8):(3'h5)];
  assign wire23 = ((($unsigned(wire20) ?
                      (wire19 ?
                          wire19 : wire18) : $unsigned((8'ha5))) & wire18) - $unsigned(wire22));
  assign wire24 = wire22[(2'h3):(1'h0)];
  assign wire25 = (wire18[(2'h2):(1'h1)] ?
                      (wire22[(1'h1):(1'h1)] ?
                          ({wire23} == $unsigned(wire18)) : ((8'ha4) == wire19[(3'h5):(1'h1)])) : ($unsigned((8'h9d)) ?
                          wire22 : $unsigned($signed((8'ha3)))));
  assign wire26 = ((8'haf) ?
                      (wire18[(1'h0):(1'h0)] >= wire19) : $signed($unsigned($signed(wire21))));
  assign wire27 = {(({wire21} ? ((8'ha1) >> wire24) : $signed(wire25)) ?
                          $unsigned($signed(wire26)) : (!$signed(wire24)))};
  assign wire28 = wire19;
endmodule