(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h82):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(2'h3):(1'h0)] wire2;
  input wire [(3'h4):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire52;
  wire [(2'h3):(1'h0)] wire14;
  wire signed [(4'h8):(1'h0)] wire13;
  wire signed [(4'h8):(1'h0)] wire12;
  wire [(4'ha):(1'h0)] wire11;
  wire signed [(4'ha):(1'h0)] wire10;
  wire [(3'h7):(1'h0)] wire9;
  wire signed [(3'h7):(1'h0)] wire8;
  wire signed [(4'h8):(1'h0)] wire7;
  wire [(3'h4):(1'h0)] wire6;
  wire signed [(4'h9):(1'h0)] wire4;
  reg [(4'hb):(1'h0)] reg59 = (1'h0);
  reg [(4'ha):(1'h0)] reg58 = (1'h0);
  reg [(3'h5):(1'h0)] reg57 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg56 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg55 = (1'h0);
  reg [(4'hb):(1'h0)] reg54 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg5 = (1'h0);
  assign y = {wire52,
                 wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire4,
                 reg59,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 reg5,
                 (1'h0)};
  assign wire4 = ($unsigned(({wire2} >= $unsigned(wire3))) ?
                     $signed((8'h9f)) : {(^(&(8'ha3)))});
  always
    @(posedge clk) begin
      reg5 <= {wire4};
    end
  assign wire6 = ($signed((|wire3[(2'h2):(2'h2)])) >= (wire4[(2'h3):(2'h2)] == wire1[(2'h2):(1'h0)]));
  assign wire7 = ((~(wire2[(1'h1):(1'h0)] >> (wire4 ? wire6 : wire3))) ?
                     (8'ha2) : wire3[(3'h4):(3'h4)]);
  assign wire8 = $unsigned($unsigned(wire2[(1'h0):(1'h0)]));
  assign wire9 = wire1;
  assign wire10 = wire6;
  assign wire11 = $signed(wire3[(4'ha):(4'h9)]);
  assign wire12 = (~^{$unsigned((wire1 - wire8))});
  assign wire13 = wire8[(1'h1):(1'h0)];
  assign wire14 = $signed((((wire13 ~^ wire7) ^~ $unsigned(wire13)) ?
                      wire8[(1'h0):(1'h0)] : wire3[(2'h3):(2'h3)]));
  module15 #() modinst53 (.wire16(wire13), .clk(clk), .wire19(wire1), .y(wire52), .wire17(wire4), .wire18(wire3));
  always
    @(posedge clk) begin
      if ($signed((((wire6 ? wire14 : wire7) ?
              (wire10 > wire4) : (wire52 ? wire7 : wire8)) ?
          $signed(wire8[(1'h0):(1'h0)]) : wire3)))
        begin
          reg54 <= (+wire14[(2'h2):(1'h1)]);
          reg55 <= reg5;
        end
      else
        begin
          reg54 <= ((~&wire3) ?
              (8'ha2) : (!((reg5 + wire13) == $signed(wire11))));
        end
      if ((!(&wire11)))
        begin
          reg56 <= ($unsigned(((wire10 > wire4) ? (~^wire2) : wire10)) ?
              (wire13 ?
                  $signed((~wire7)) : $signed($signed(wire12))) : (wire7[(2'h3):(2'h2)] >>> wire14[(1'h0):(1'h0)]));
          reg57 <= $unsigned((wire14[(1'h1):(1'h0)] ?
              ($unsigned((8'ha1)) ?
                  ((8'hb0) && (8'hac)) : {wire1}) : $unsigned($unsigned(wire1))));
          reg58 <= (8'ha0);
        end
      else
        begin
          reg56 <= $unsigned(wire10);
          if ($unsigned((($unsigned(wire7) ?
              wire1[(2'h2):(1'h0)] : $signed(wire7)) == (~^$unsigned(wire0)))))
            begin
              reg57 <= {(&(wire52 ? $signed(wire4) : (~&reg5)))};
              reg58 <= (~{$signed((8'haf))});
            end
          else
            begin
              reg57 <= reg5;
            end
        end
      reg59 <= $unsigned((+$signed((reg56 >> (8'h9d)))));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module15
#(parameter param51 = (((((8'ha3) == (8'ha5)) >> (-(8'h9d))) < ({(8'ha2)} ? (^(8'hb0)) : {(8'ha8)})) ? (&(((8'ha7) - (8'ha8)) ^ ((8'ha4) ? (8'ha8) : (8'ha7)))) : (8'h9f)))
(y, clk, wire19, wire18, wire17, wire16);
  output wire [(32'h62):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire19;
  input wire signed [(4'h9):(1'h0)] wire18;
  input wire signed [(4'h9):(1'h0)] wire17;
  input wire [(4'h8):(1'h0)] wire16;
  wire signed [(3'h4):(1'h0)] wire50;
  wire signed [(2'h2):(1'h0)] wire49;
  wire signed [(4'h8):(1'h0)] wire48;
  wire [(3'h7):(1'h0)] wire42;
  wire signed [(3'h4):(1'h0)] wire41;
  wire [(3'h4):(1'h0)] wire40;
  wire [(3'h4):(1'h0)] wire39;
  wire signed [(2'h2):(1'h0)] wire38;
  wire [(4'ha):(1'h0)] wire37;
  wire signed [(3'h5):(1'h0)] wire36;
  wire [(2'h3):(1'h0)] wire34;
  wire signed [(4'hb):(1'h0)] wire20;
  reg [(4'hb):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg46 = (1'h0);
  reg [(3'h4):(1'h0)] reg45 = (1'h0);
  reg [(4'ha):(1'h0)] reg44 = (1'h0);
  reg [(2'h2):(1'h0)] reg43 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire36,
                 wire34,
                 wire20,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 reg43,
                 (1'h0)};
  assign wire20 = $signed(($signed(wire16[(1'h1):(1'h1)]) ?
                      $signed((wire18 ?
                          wire19 : wire17)) : ($unsigned(wire17) >> $unsigned(wire17))));
  module21 #() modinst35 (wire34, clk, wire17, wire19, wire18, wire20);
  assign wire36 = (&(wire18[(3'h6):(3'h5)] ~^ wire20));
  assign wire37 = $unsigned(wire17[(3'h6):(2'h3)]);
  assign wire38 = ($signed(((&wire17) ?
                          $unsigned(wire20) : wire37[(3'h4):(3'h4)])) ?
                      (((wire34 <<< wire37) <<< wire37[(4'h8):(3'h4)]) ?
                          wire18 : wire18) : (~&{(wire20 <<< wire20)}));
  assign wire39 = $signed({wire18});
  assign wire40 = $unsigned((((wire36 ?
                          wire38 : wire19) >>> wire19[(3'h4):(1'h1)]) ?
                      ($signed(wire20) ?
                          (wire37 - wire37) : (wire19 & wire17)) : $unsigned($signed(wire39))));
  assign wire41 = ((-(~&(+wire18))) ?
                      $signed(wire38) : ((~^(wire34 ? wire40 : wire18)) ?
                          (wire34 > (^wire18)) : $signed($unsigned((8'hae)))));
  assign wire42 = wire40;
  always
    @(posedge clk) begin
      reg43 <= $signed(wire34);
      if (((8'ha7) ^ wire38))
        begin
          reg44 <= {(((wire40 ~^ wire34) * $signed(wire18)) + wire36)};
        end
      else
        begin
          if (wire20[(1'h1):(1'h1)])
            begin
              reg44 <= ((wire42[(3'h7):(1'h1)] ?
                  (8'ha5) : ($unsigned(wire36) || wire20[(4'hb):(3'h7)])) & wire18[(1'h1):(1'h0)]);
            end
          else
            begin
              reg44 <= wire40;
              reg45 <= ((^wire39[(1'h0):(1'h0)]) ?
                  $signed(((wire19 ?
                      wire17 : wire37) <<< $unsigned(wire19))) : ($unsigned(wire36) ?
                      wire42[(3'h4):(3'h4)] : wire37));
              reg46 <= ($unsigned($signed($signed((8'ha7)))) ?
                  ($signed(wire39) - {$unsigned(reg45)}) : $unsigned((((8'hae) ?
                      wire16 : wire19) < (wire36 >>> wire37))));
            end
          reg47 <= $unsigned((reg43[(2'h2):(2'h2)] ? (8'ha5) : wire37));
        end
    end
  assign wire48 = wire18;
  assign wire49 = wire42[(3'h5):(3'h5)];
  assign wire50 = wire49;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module21
#(parameter param33 = (^(({(8'ha6)} - (~^(8'had))) ? ((&(8'hab)) ? ((8'hab) ? (8'hb0) : (8'ha2)) : (^~(8'h9d))) : (&((8'ha2) < (8'ha8))))))
(y, clk, wire25, wire24, wire23, wire22);
  output wire [(32'h30):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire25;
  input wire [(3'h4):(1'h0)] wire24;
  input wire signed [(2'h2):(1'h0)] wire23;
  input wire signed [(3'h6):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire32;
  wire [(3'h7):(1'h0)] wire31;
  wire [(3'h4):(1'h0)] wire30;
  wire signed [(3'h7):(1'h0)] wire29;
  wire [(4'hb):(1'h0)] wire28;
  wire signed [(4'h8):(1'h0)] wire27;
  wire [(2'h3):(1'h0)] wire26;
  assign y = {wire32, wire31, wire30, wire29, wire28, wire27, wire26, (1'h0)};
  assign wire26 = wire22[(2'h3):(1'h0)];
  assign wire27 = (wire26 < wire24);
  assign wire28 = {$unsigned($unsigned((wire24 ^ wire24)))};
  assign wire29 = wire23[(1'h0):(1'h0)];
  assign wire30 = $unsigned((($signed(wire25) ?
                          ((8'haf) ^~ wire28) : $signed(wire26)) ?
                      ((+wire22) * (~|wire23)) : (wire24 ?
                          $signed(wire22) : $unsigned(wire23))));
  assign wire31 = wire25;
  assign wire32 = $signed((~|$signed(wire23[(1'h1):(1'h1)])));
endmodule