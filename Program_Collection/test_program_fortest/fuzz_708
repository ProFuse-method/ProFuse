(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h70):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire59;
  wire signed [(3'h6):(1'h0)] wire52;
  wire signed [(4'h8):(1'h0)] wire51;
  wire [(4'ha):(1'h0)] wire50;
  wire signed [(3'h5):(1'h0)] wire48;
  wire [(4'ha):(1'h0)] wire46;
  wire [(3'h7):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire6;
  wire signed [(2'h2):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire4;
  reg signed [(3'h6):(1'h0)] reg60 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg58 = (1'h0);
  reg [(4'h8):(1'h0)] reg57 = (1'h0);
  reg [(3'h4):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg54 = (1'h0);
  assign y = {wire59,
                 wire52,
                 wire51,
                 wire50,
                 wire48,
                 wire46,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg60,
                 reg58,
                 reg57,
                 reg56,
                 reg55,
                 reg54,
                 (1'h0)};
  assign wire4 = $unsigned(wire3[(1'h1):(1'h1)]);
  assign wire5 = ($signed((~((8'haf) ?
                     wire4 : wire3))) ^ $unsigned(($unsigned(wire3) ?
                     (wire1 ? wire2 : (8'hae)) : (wire2 ^~ wire0))));
  assign wire6 = wire2[(3'h4):(3'h4)];
  assign wire7 = wire5;
  module8 #() modinst47 (.wire11(wire3), .clk(clk), .wire10(wire1), .y(wire46), .wire9(wire4), .wire12(wire0));
  module16 #() modinst49 (.clk(clk), .wire19(wire2), .wire20(wire7), .y(wire48), .wire17(wire0), .wire18(wire6));
  assign wire50 = wire3[(3'h6):(1'h1)];
  assign wire51 = (~^wire48[(1'h1):(1'h0)]);
  module8 #() modinst53 (wire52, clk, wire0, wire51, wire2, wire6);
  always
    @(posedge clk) begin
      if ((wire46 ? (^wire52) : {{wire5}}))
        begin
          if ((~^((&wire0[(4'h9):(2'h3)]) ?
              wire48 : $signed(wire51[(3'h4):(2'h3)]))))
            begin
              reg54 <= wire3[(3'h7):(1'h0)];
              reg55 <= (~|wire0[(2'h2):(1'h0)]);
            end
          else
            begin
              reg54 <= reg55;
              reg55 <= ((|$signed({reg55})) ?
                  (({wire46} ? (wire1 <<< wire51) : $signed(wire1)) ?
                      (~|(wire46 ^~ wire52)) : $unsigned(reg54)) : (-((wire51 ?
                      wire4 : wire52) | (wire50 || (8'hab)))));
              reg56 <= $signed((8'ha5));
            end
          reg57 <= wire7;
          reg58 <= {{$unsigned(reg57[(2'h3):(2'h2)])}};
        end
      else
        begin
          reg54 <= ((&$unsigned(wire3[(3'h4):(2'h2)])) >= (~^$unsigned($unsigned((8'hac)))));
          reg55 <= ((((8'ha9) ? $signed(wire50) : wire50[(2'h3):(1'h0)]) ?
              (((8'hab) ?
                  (8'had) : (8'ha1)) <= wire0) : wire5[(1'h0):(1'h0)]) - ($signed((wire50 != wire2)) << ((wire7 ?
                  wire3 : wire46) ?
              (reg56 ? wire46 : wire52) : wire6)));
        end
    end
  assign wire59 = ($signed({(reg55 ?
                          reg58 : wire46)}) * $signed(($unsigned(wire0) >= {wire48})));
  always
    @(posedge clk) begin
      reg60 <= wire2;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire12, wire11, wire10, wire9);
  output wire [(32'h41):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire12;
  input wire [(4'h8):(1'h0)] wire11;
  input wire [(4'ha):(1'h0)] wire10;
  input wire signed [(4'h8):(1'h0)] wire9;
  wire signed [(4'hb):(1'h0)] wire45;
  wire [(3'h4):(1'h0)] wire44;
  wire signed [(3'h7):(1'h0)] wire43;
  wire [(4'hb):(1'h0)] wire42;
  wire [(2'h3):(1'h0)] wire40;
  wire signed [(4'h8):(1'h0)] wire15;
  wire [(4'h9):(1'h0)] wire14;
  wire [(4'hb):(1'h0)] wire13;
  assign y = {wire45,
                 wire44,
                 wire43,
                 wire42,
                 wire40,
                 wire15,
                 wire14,
                 wire13,
                 (1'h0)};
  assign wire13 = ($signed(((wire9 ? wire11 : wire11) ?
                          $signed(wire9) : wire11)) ?
                      ((~&wire9) >> (wire9 != (wire11 ?
                          (8'haa) : wire10))) : (((wire11 ?
                          wire11 : wire12) > ((8'h9d) ?
                          wire12 : (8'hae))) << (wire10[(4'h8):(1'h0)] == (wire12 != wire10))));
  assign wire14 = wire9;
  assign wire15 = ($signed((!wire13[(3'h4):(2'h2)])) ?
                      (((wire9 ? (8'had) : wire10) < wire9[(2'h3):(2'h3)]) ?
                          {wire12} : ($unsigned(wire10) ?
                              $signed(wire12) : wire14)) : $signed({(^~wire13)}));
  module16 #() modinst41 (.wire18(wire9), .wire19(wire10), .wire20(wire11), .wire17(wire14), .clk(clk), .y(wire40));
  assign wire42 = ((~^($unsigned((8'haa)) ^ $unsigned(wire12))) >= wire11[(3'h5):(1'h0)]);
  assign wire43 = (($unsigned((wire15 ~^ wire9)) >>> ($signed(wire40) ?
                      (wire42 << wire14) : $unsigned(wire14))) < $unsigned(wire9));
  assign wire44 = (!($unsigned((~wire13)) ?
                      (|{wire11}) : {wire9[(3'h4):(2'h2)]}));
  assign wire45 = (-wire15[(3'h4):(2'h3)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module16  (y, clk, wire20, wire19, wire18, wire17);
  output wire [(32'h71):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire20;
  input wire signed [(4'ha):(1'h0)] wire19;
  input wire signed [(2'h2):(1'h0)] wire18;
  input wire [(4'h9):(1'h0)] wire17;
  wire signed [(2'h2):(1'h0)] wire38;
  wire [(4'hb):(1'h0)] wire32;
  wire signed [(2'h2):(1'h0)] wire31;
  wire signed [(2'h2):(1'h0)] wire30;
  wire signed [(3'h5):(1'h0)] wire29;
  wire [(4'h9):(1'h0)] wire28;
  wire [(4'h9):(1'h0)] wire21;
  reg signed [(3'h7):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg37 = (1'h0);
  reg [(3'h5):(1'h0)] reg36 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg35 = (1'h0);
  reg [(4'h8):(1'h0)] reg34 = (1'h0);
  reg [(3'h4):(1'h0)] reg33 = (1'h0);
  reg [(3'h4):(1'h0)] reg27 = (1'h0);
  reg [(4'ha):(1'h0)] reg26 = (1'h0);
  reg [(2'h2):(1'h0)] reg25 = (1'h0);
  reg [(2'h3):(1'h0)] reg24 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg23 = (1'h0);
  reg [(3'h6):(1'h0)] reg22 = (1'h0);
  assign y = {wire38,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 wire21,
                 reg39,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg23,
                 reg22,
                 (1'h0)};
  assign wire21 = (~|((wire19 ?
                      (wire17 ?
                          wire19 : wire17) : (~&wire19)) >>> $signed({(8'ha4)})));
  always
    @(posedge clk) begin
      if ($signed(({$signed(wire19)} & $signed((wire18 & wire17)))))
        begin
          reg22 <= (wire17 >>> (wire19 ~^ $signed(wire20[(3'h4):(2'h3)])));
        end
      else
        begin
          reg22 <= $signed({(-$signed(wire20))});
          reg23 <= (&$signed(((!wire17) + wire17[(3'h4):(1'h0)])));
          if (wire21)
            begin
              reg24 <= $signed($unsigned((&wire17[(4'h8):(1'h0)])));
              reg25 <= (^~(wire18[(2'h2):(1'h0)] ?
                  $unsigned({(8'h9e)}) : (((8'ha7) ?
                      (8'ha1) : reg24) == wire18)));
            end
          else
            begin
              reg24 <= reg24;
            end
        end
      reg26 <= wire20[(1'h0):(1'h0)];
      reg27 <= ($unsigned($unsigned(wire17)) ? {wire18} : wire20);
    end
  assign wire28 = $signed(wire20[(3'h5):(1'h1)]);
  assign wire29 = (+(8'haf));
  assign wire30 = wire20[(3'h5):(3'h5)];
  assign wire31 = wire21[(4'h9):(2'h2)];
  assign wire32 = $signed(wire28);
  always
    @(posedge clk) begin
      reg33 <= $signed(($signed($unsigned(wire32)) - $unsigned($unsigned(reg23))));
      if (wire18[(1'h0):(1'h0)])
        begin
          if ({$signed({$signed(wire20)})})
            begin
              reg34 <= reg22;
              reg35 <= reg27;
            end
          else
            begin
              reg34 <= ((+$signed((reg25 ? (8'ha4) : reg25))) | ((&(wire32 ?
                  (8'ha1) : (8'h9c))) | (((8'ha1) ?
                  wire31 : (8'ha6)) || $signed(reg22))));
            end
          reg36 <= (&((&(reg35 && reg26)) - $signed((wire30 ?
              wire20 : wire30))));
        end
      else
        begin
          reg34 <= {reg22[(2'h3):(2'h3)]};
        end
      reg37 <= (&(-reg35));
    end
  assign wire38 = wire17;
  always
    @(posedge clk) begin
      reg39 <= $signed($signed({$signed(wire20)}));
    end
endmodule