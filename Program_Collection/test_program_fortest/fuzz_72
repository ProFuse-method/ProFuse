(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param58 = ((-(((8'ha3) <<< (8'had)) ? {(8'hb0)} : (!(8'haa)))) < ((|((8'ha8) ? (8'haf) : (8'hae))) ? (8'h9d) : (+((8'ha2) > (8'had))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h52):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire3;
  input wire [(3'h5):(1'h0)] wire2;
  input wire [(4'ha):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire signed [(4'h9):(1'h0)] wire57;
  wire signed [(4'h9):(1'h0)] wire51;
  wire signed [(2'h2):(1'h0)] wire8;
  reg [(4'hb):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg54 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg53 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg7 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg6 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg5 = (1'h0);
  reg [(2'h3):(1'h0)] reg4 = (1'h0);
  assign y = {wire57,
                 wire51,
                 wire8,
                 reg56,
                 reg55,
                 reg54,
                 reg53,
                 reg7,
                 reg6,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= ({((~wire3) ?
              $signed((8'ha7)) : $unsigned(wire1))} + $signed(((wire0 * wire0) ?
          (~&(8'ha1)) : $unsigned(wire1))));
      if ((!reg4[(2'h3):(2'h3)]))
        begin
          reg5 <= ($unsigned(wire0) + wire3);
        end
      else
        begin
          reg5 <= (wire1[(2'h3):(1'h1)] ^~ (wire3[(4'hb):(2'h3)] << $signed(wire1[(2'h3):(1'h1)])));
          reg6 <= $signed($signed(($signed((8'ha2)) ?
              (wire1 ? wire0 : wire1) : (wire1 < wire2))));
          reg7 <= $signed((8'hab));
        end
    end
  assign wire8 = (^~$unsigned(((reg6 ? reg7 : (8'haf)) ? (|reg5) : (8'ha0))));
  module9 #() modinst52 (wire51, clk, reg5, wire1, wire2, reg4);
  always
    @(posedge clk) begin
      if ((reg4 < ((wire8[(2'h2):(2'h2)] ? (reg7 ? reg6 : wire1) : (~&reg6)) ?
          ({wire2} ?
              (wire3 ? (8'hac) : reg4) : $signed(reg7)) : reg5[(2'h3):(1'h0)])))
        begin
          reg53 <= (-{$unsigned(wire3[(4'h9):(3'h5)])});
          reg54 <= $unsigned({$unsigned(reg6[(3'h6):(3'h4)])});
          reg55 <= reg4;
        end
      else
        begin
          if ($signed({($signed(reg55) && (^(8'haa)))}))
            begin
              reg53 <= $signed(({{reg4}} ?
                  reg55[(1'h0):(1'h0)] : reg6[(2'h3):(1'h0)]));
              reg54 <= (((+(~wire51)) * ($signed(reg7) | (reg4 > wire2))) > ((reg54[(1'h0):(1'h0)] <= (&(8'ha5))) ~^ $signed((~wire3))));
              reg55 <= wire51;
            end
          else
            begin
              reg53 <= ((&(+(reg6 ?
                  wire0 : wire51))) < (-$unsigned($unsigned(reg55))));
              reg54 <= wire1[(4'h9):(3'h6)];
              reg55 <= reg7[(3'h7):(1'h1)];
            end
        end
      reg56 <= (&$signed($signed($unsigned(reg5))));
    end
  assign wire57 = (&$signed(((wire8 ? reg7 : reg55) < (~wire2))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param50 = (((8'h9f) ? ((^~(8'ha8)) < (8'hb0)) : {((8'h9e) != (8'ha8))}) > {(~&((8'hae) | (8'ha5)))}))
(y, clk, wire10, wire11, wire12, wire13);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire10;
  input wire [(4'ha):(1'h0)] wire11;
  input wire signed [(2'h2):(1'h0)] wire12;
  input wire signed [(2'h3):(1'h0)] wire13;
  wire [(3'h4):(1'h0)] wire15;
  wire [(3'h5):(1'h0)] wire16;
  wire [(3'h7):(1'h0)] wire17;
  wire [(4'h8):(1'h0)] wire18;
  wire [(2'h3):(1'h0)] wire19;
  wire signed [(3'h6):(1'h0)] wire20;
  wire [(2'h2):(1'h0)] wire21;
  wire signed [(4'hb):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire48;
  reg signed [(4'h8):(1'h0)] reg14 = (1'h0);
  assign y = {wire15,
                 wire16,
                 wire17,
                 wire18,
                 wire19,
                 wire20,
                 wire21,
                 wire22,
                 wire48,
                 reg14,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg14 <= $unsigned(wire13);
    end
  assign wire15 = $signed((($signed(wire13) ?
                      $unsigned(wire12) : reg14[(2'h3):(2'h3)]) | (^reg14[(1'h0):(1'h0)])));
  assign wire16 = ((wire10 ?
                          (wire10[(4'h9):(3'h5)] ?
                              $unsigned(wire12) : reg14) : ($signed(wire11) >= wire13)) ?
                      $unsigned(($signed(wire15) & wire15)) : reg14);
  assign wire17 = $signed((wire15[(1'h1):(1'h0)] ?
                      (&$signed(wire16)) : $signed(((8'ha1) ?
                          wire11 : wire11))));
  assign wire18 = reg14[(2'h2):(2'h2)];
  assign wire19 = wire12;
  assign wire20 = (!wire18[(1'h1):(1'h1)]);
  assign wire21 = (reg14[(3'h4):(1'h1)] * (wire15[(1'h1):(1'h0)] ?
                      ($signed(wire11) - reg14) : ($unsigned(wire18) ^ (wire18 << (8'hae)))));
  assign wire22 = wire18[(2'h2):(2'h2)];
  module23 #() modinst49 (wire48, clk, wire18, reg14, wire13, wire20);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module23
#(parameter param47 = ((^~((~^(8'ha6)) - ((8'ha8) ? (8'hb0) : (8'ha1)))) ? (~&(~^((8'ha3) << (8'ha1)))) : (&({(8'ha7)} ? {(8'h9d)} : ((8'haf) | (8'h9f))))))
(y, clk, wire27, wire26, wire25, wire24);
  output wire [(32'h7f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire27;
  input wire signed [(4'h8):(1'h0)] wire26;
  input wire signed [(2'h3):(1'h0)] wire25;
  input wire signed [(3'h6):(1'h0)] wire24;
  wire signed [(2'h3):(1'h0)] wire46;
  wire [(4'hb):(1'h0)] wire35;
  wire signed [(3'h6):(1'h0)] wire34;
  wire signed [(2'h2):(1'h0)] wire33;
  wire signed [(4'h9):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire31;
  wire [(4'ha):(1'h0)] wire30;
  wire signed [(3'h5):(1'h0)] wire29;
  wire signed [(4'h9):(1'h0)] wire28;
  reg signed [(3'h4):(1'h0)] reg45 = (1'h0);
  reg [(3'h6):(1'h0)] reg44 = (1'h0);
  reg [(3'h7):(1'h0)] reg43 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg42 = (1'h0);
  reg [(4'ha):(1'h0)] reg41 = (1'h0);
  reg [(3'h6):(1'h0)] reg40 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg38 = (1'h0);
  reg [(3'h5):(1'h0)] reg37 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg36 = (1'h0);
  assign y = {wire46,
                 wire35,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 wire28,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 (1'h0)};
  assign wire28 = ((~^wire24) ?
                      (((8'ha7) ? $signed(wire25) : wire24[(1'h0):(1'h0)]) ?
                          wire27[(3'h6):(2'h3)] : wire25[(2'h2):(1'h1)]) : $signed($signed((~&wire25))));
  assign wire29 = ((!wire28) <<< (wire24[(3'h4):(3'h4)] || wire27));
  assign wire30 = $unsigned({{(wire25 + wire25)}});
  assign wire31 = wire30[(3'h5):(2'h3)];
  assign wire32 = wire29[(2'h2):(1'h0)];
  assign wire33 = wire30[(2'h3):(2'h3)];
  assign wire34 = (($signed((wire24 >> wire29)) ^~ $signed($signed((8'ha7)))) | $signed((~&wire29)));
  assign wire35 = (&(~|(|wire28)));
  always
    @(posedge clk) begin
      if ((~^(8'ha2)))
        begin
          if (($unsigned(($signed(wire27) <= $signed(wire31))) ^ $signed((~(!wire25)))))
            begin
              reg36 <= $unsigned((~|wire33[(2'h2):(1'h0)]));
              reg37 <= wire33;
              reg38 <= wire24;
            end
          else
            begin
              reg36 <= (|wire24);
            end
          reg39 <= $signed((!reg38));
          reg40 <= ($signed($signed($unsigned(wire27))) ?
              (&wire35) : {$signed({wire34})});
        end
      else
        begin
          reg36 <= $unsigned($signed(wire26[(2'h2):(1'h1)]));
          reg37 <= (wire34 - $unsigned((~^wire28)));
          reg38 <= {((^$unsigned(wire25)) || ((8'ha2) ?
                  ((8'ha2) + reg39) : reg37))};
        end
      reg41 <= (^{($unsigned(wire35) || (reg39 <= reg38))});
      if ((reg36[(1'h0):(1'h0)] ~^ reg38[(3'h6):(3'h5)]))
        begin
          reg42 <= (({$unsigned(wire28)} >> ($unsigned(wire28) ?
              $signed(wire29) : wire30[(3'h6):(2'h2)])) != ($signed((wire29 ?
                  wire29 : wire29)) ?
              wire24 : $signed($signed(wire35))));
          reg43 <= wire34[(2'h2):(1'h1)];
          if ({(($unsigned(wire26) & reg37) >= (wire33[(1'h0):(1'h0)] || (~|(8'ha4))))})
            begin
              reg44 <= (!(reg40 ?
                  $signed($signed(reg37)) : (|$unsigned(wire32))));
              reg45 <= reg41[(3'h4):(2'h2)];
            end
          else
            begin
              reg44 <= (((wire31[(3'h7):(3'h6)] ?
                          $signed((8'hab)) : $signed(reg43)) ?
                      (reg36 - (wire31 - (8'ha8))) : (reg41[(4'h9):(4'h8)] ?
                          $signed((8'ha6)) : (reg44 ? (8'ha4) : wire26))) ?
                  (~|$signed((wire33 >= reg37))) : $signed(($unsigned(reg41) ?
                      wire34 : reg44[(2'h3):(2'h3)])));
            end
        end
      else
        begin
          reg42 <= (wire30 ?
              reg45[(2'h2):(1'h0)] : (|((wire25 > (8'hab)) ?
                  wire28 : reg45[(2'h2):(1'h0)])));
          reg43 <= reg42[(1'h1):(1'h1)];
        end
    end
  assign wire46 = wire30;
endmodule