(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h5f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(2'h2):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire51;
  wire [(2'h3):(1'h0)] wire50;
  wire [(4'h9):(1'h0)] wire49;
  wire [(4'h8):(1'h0)] wire48;
  wire signed [(4'h8):(1'h0)] wire46;
  wire [(3'h6):(1'h0)] wire23;
  wire [(3'h6):(1'h0)] wire22;
  wire signed [(3'h7):(1'h0)] wire20;
  wire signed [(2'h3):(1'h0)] wire5;
  wire signed [(4'h9):(1'h0)] wire4;
  reg signed [(3'h4):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg7 = (1'h0);
  reg [(4'h9):(1'h0)] reg6 = (1'h0);
  assign y = {wire51,
                 wire50,
                 wire49,
                 wire48,
                 wire46,
                 wire23,
                 wire22,
                 wire20,
                 wire5,
                 wire4,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = {(|(&{wire2}))};
  assign wire5 = wire1[(3'h5):(2'h3)];
  always
    @(posedge clk) begin
      if ($unsigned((&((wire0 ? wire2 : wire2) <= (wire2 ? wire2 : wire4)))))
        begin
          reg6 <= {(~wire0)};
          reg7 <= (8'hab);
          reg8 <= $signed(wire4);
        end
      else
        begin
          reg6 <= ((&{wire1}) ? reg6[(4'h9):(2'h2)] : reg8[(1'h1):(1'h1)]);
          reg7 <= reg8;
          if ($signed(reg8))
            begin
              reg8 <= {$signed((!$unsigned(wire1)))};
              reg9 <= $signed(reg8[(1'h1):(1'h1)]);
            end
          else
            begin
              reg8 <= $signed(wire3);
              reg9 <= (wire5[(1'h0):(1'h0)] ~^ {wire3});
              reg10 <= $unsigned($unsigned(({wire4} ?
                  $signed((8'had)) : $signed(wire1))));
            end
        end
    end
  module11 #() modinst21 (.y(wire20), .wire12(reg8), .wire14(wire3), .wire13(reg7), .wire15(wire4), .clk(clk));
  assign wire22 = $signed((~|reg7[(2'h2):(1'h0)]));
  assign wire23 = (+wire22);
  module24 #() modinst47 (.wire25(wire3), .wire26(wire1), .clk(clk), .y(wire46), .wire28(wire20), .wire27(wire2));
  assign wire48 = (+$unsigned({(reg6 ? wire22 : reg9)}));
  assign wire49 = $signed((!$unsigned((reg8 ? (8'hae) : reg8))));
  assign wire50 = $unsigned(((~(wire20 != wire20)) ?
                      (wire2 ?
                          (reg7 ?
                              reg8 : wire22) : wire4) : (wire46 * $unsigned(reg6))));
  assign wire51 = (reg8 || (8'haa));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module24  (y, clk, wire28, wire27, wire26, wire25);
  output wire [(32'h6c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire28;
  input wire [(4'ha):(1'h0)] wire27;
  input wire [(3'h4):(1'h0)] wire26;
  input wire signed [(4'hb):(1'h0)] wire25;
  wire signed [(3'h4):(1'h0)] wire45;
  wire signed [(4'ha):(1'h0)] wire44;
  wire signed [(3'h4):(1'h0)] wire43;
  wire [(2'h3):(1'h0)] wire41;
  wire [(4'h8):(1'h0)] wire30;
  wire [(3'h5):(1'h0)] wire29;
  reg signed [(2'h3):(1'h0)] reg42 = (1'h0);
  reg [(4'h8):(1'h0)] reg40 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg39 = (1'h0);
  reg [(3'h5):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg37 = (1'h0);
  reg [(4'h8):(1'h0)] reg36 = (1'h0);
  reg [(4'h8):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg34 = (1'h0);
  reg [(3'h7):(1'h0)] reg33 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg31 = (1'h0);
  assign y = {wire45,
                 wire44,
                 wire43,
                 wire41,
                 wire30,
                 wire29,
                 reg42,
                 reg40,
                 reg39,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 (1'h0)};
  assign wire29 = ((((wire28 < wire27) != wire28) ?
                          $unsigned({wire26}) : $unsigned(wire27[(3'h5):(2'h2)])) ?
                      (!wire25[(1'h0):(1'h0)]) : (wire27[(1'h0):(1'h0)] ?
                          wire27[(2'h2):(1'h1)] : ($signed(wire25) ?
                              $signed(wire25) : (8'h9c))));
  assign wire30 = wire27[(2'h2):(2'h2)];
  always
    @(posedge clk) begin
      reg31 <= {wire27};
    end
  always
    @(posedge clk) begin
      reg32 <= $signed((^~(((8'h9e) ?
          wire25 : wire25) ~^ wire29[(1'h1):(1'h1)])));
      reg33 <= wire29[(1'h1):(1'h1)];
    end
  always
    @(posedge clk) begin
      reg34 <= reg31;
      reg35 <= reg34[(2'h3):(2'h3)];
      if (($unsigned((8'ha7)) ?
          (8'ha7) : (wire28 ? ((~|reg35) + (~^reg31)) : wire29)))
        begin
          reg36 <= $signed({wire26[(2'h2):(1'h1)]});
          reg37 <= $unsigned(($unsigned((^wire26)) ?
              $unsigned((-wire25)) : (~$unsigned(reg33))));
          if (reg36[(3'h5):(1'h0)])
            begin
              reg38 <= (8'ha1);
              reg39 <= ((~&$signed((&reg38))) <= $signed($signed(reg34[(1'h0):(1'h0)])));
              reg40 <= (&reg37);
            end
          else
            begin
              reg38 <= reg38;
              reg39 <= reg36;
            end
        end
      else
        begin
          reg36 <= ({reg40[(3'h4):(1'h1)]} ?
              (~&{reg35[(3'h6):(3'h5)]}) : {(wire26[(1'h0):(1'h0)] ?
                      reg40[(2'h2):(1'h1)] : (wire25 & reg40))});
          reg37 <= reg32;
          reg38 <= wire25[(4'hb):(4'hb)];
        end
    end
  assign wire41 = (~^(8'haf));
  always
    @(posedge clk) begin
      reg42 <= $signed(wire28);
    end
  assign wire43 = (|wire28);
  assign wire44 = ((!$unsigned($unsigned(reg33))) ?
                      wire25[(4'h9):(3'h4)] : $signed($signed(reg37)));
  assign wire45 = $unsigned(((reg37 ?
                          ((8'ha0) ? wire41 : wire30) : $unsigned(wire41)) ?
                      (reg31 ?
                          $signed((8'hb0)) : wire28[(1'h0):(1'h0)]) : (8'haf)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11  (y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h1f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire15;
  input wire [(4'h9):(1'h0)] wire14;
  input wire signed [(3'h4):(1'h0)] wire13;
  input wire [(3'h5):(1'h0)] wire12;
  wire signed [(4'hb):(1'h0)] wire19;
  wire [(3'h4):(1'h0)] wire18;
  wire [(3'h7):(1'h0)] wire17;
  wire signed [(4'h8):(1'h0)] wire16;
  assign y = {wire19, wire18, wire17, wire16, (1'h0)};
  assign wire16 = ((|$unsigned(wire13)) != (({wire12} == (+wire13)) >> $signed($signed(wire13))));
  assign wire17 = wire12[(3'h5):(3'h5)];
  assign wire18 = (&($unsigned((wire13 ? wire17 : wire15)) ?
                      (wire16[(3'h7):(3'h6)] ?
                          $signed((8'hab)) : wire14) : (wire12[(1'h0):(1'h0)] ?
                          (wire12 != (8'hb0)) : $unsigned(wire16))));
  assign wire19 = ($signed((!(wire15 ?
                      wire13 : wire13))) ~^ ($signed(wire14[(3'h7):(2'h3)]) ?
                      ((~^wire12) ?
                          (wire14 ?
                              wire16 : wire12) : (wire18 == wire18)) : $signed((wire15 > wire16))));
endmodule