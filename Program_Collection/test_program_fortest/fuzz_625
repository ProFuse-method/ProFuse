(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire signed [(3'h5):(1'h0)] wire48;
  wire signed [(2'h2):(1'h0)] wire47;
  wire [(4'h9):(1'h0)] wire46;
  wire signed [(2'h2):(1'h0)] wire45;
  wire [(4'h8):(1'h0)] wire43;
  wire [(4'ha):(1'h0)] wire41;
  wire [(4'h9):(1'h0)] wire17;
  wire [(2'h3):(1'h0)] wire16;
  wire signed [(4'h9):(1'h0)] wire14;
  assign y = {wire48,
                 wire47,
                 wire46,
                 wire45,
                 wire43,
                 wire41,
                 wire17,
                 wire16,
                 wire14,
                 (1'h0)};
  module4 #() modinst15 (wire14, clk, wire0, wire1, wire3, wire2);
  assign wire16 = $signed((^~$unsigned((|wire3))));
  assign wire17 = (|wire1[(1'h1):(1'h0)]);
  module18 #() modinst42 (.wire22(wire2), .y(wire41), .clk(clk), .wire19(wire1), .wire20(wire3), .wire21(wire17));
  module18 #() modinst44 (wire43, clk, wire1, wire2, wire14, wire41);
  assign wire45 = {$signed($unsigned(((8'h9e) ^~ (8'ha1))))};
  assign wire46 = wire41;
  assign wire47 = wire2;
  assign wire48 = wire14[(4'h8):(3'h5)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18
#(parameter param40 = (((((8'hae) * (8'ha1)) ^ (|(8'h9d))) << (8'ha1)) >> (~|{((8'haa) ~^ (8'ha2))})))
(y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h6c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire22;
  input wire [(3'h5):(1'h0)] wire21;
  input wire signed [(3'h6):(1'h0)] wire20;
  input wire [(4'ha):(1'h0)] wire19;
  wire [(3'h5):(1'h0)] wire39;
  wire signed [(3'h5):(1'h0)] wire37;
  wire [(3'h4):(1'h0)] wire36;
  wire [(4'ha):(1'h0)] wire30;
  wire [(3'h7):(1'h0)] wire29;
  wire [(4'h8):(1'h0)] wire28;
  wire [(2'h2):(1'h0)] wire25;
  wire [(3'h4):(1'h0)] wire24;
  wire signed [(4'ha):(1'h0)] wire23;
  reg signed [(4'hb):(1'h0)] reg38 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg34 = (1'h0);
  reg [(3'h6):(1'h0)] reg33 = (1'h0);
  reg [(3'h6):(1'h0)] reg32 = (1'h0);
  reg [(4'ha):(1'h0)] reg31 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg27 = (1'h0);
  reg [(3'h4):(1'h0)] reg26 = (1'h0);
  assign y = {wire39,
                 wire37,
                 wire36,
                 wire30,
                 wire29,
                 wire28,
                 wire25,
                 wire24,
                 wire23,
                 reg38,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg27,
                 reg26,
                 (1'h0)};
  assign wire23 = wire19[(4'h8):(3'h7)];
  assign wire24 = wire23[(4'h9):(2'h2)];
  assign wire25 = $signed((8'ha3));
  always
    @(posedge clk) begin
      reg26 <= (-(+$signed({wire24})));
      reg27 <= $signed(wire19);
    end
  assign wire28 = wire19;
  assign wire29 = wire22;
  assign wire30 = $signed({($signed(wire19) > $signed(wire28))});
  always
    @(posedge clk) begin
      reg31 <= reg26[(2'h3):(1'h1)];
      if ($unsigned((8'haf)))
        begin
          reg32 <= (~&(8'ha0));
          reg33 <= ((wire28 ?
              (reg32[(2'h3):(2'h2)] <= $unsigned(wire20)) : ((|wire30) ^~ (+(8'ha2)))) ^ (wire25[(2'h2):(1'h1)] ?
              ({wire29} * (reg26 ? wire29 : wire28)) : (-(&reg26))));
          reg34 <= (reg32[(2'h2):(1'h0)] ?
              $signed(((wire22 && wire19) ?
                  reg26[(1'h1):(1'h1)] : $signed(wire23))) : ($unsigned({reg31}) >= wire22[(3'h5):(2'h3)]));
        end
      else
        begin
          if (((&$unsigned($signed((8'hab)))) & {$unsigned(reg33)}))
            begin
              reg32 <= ({reg33} == (|$unsigned((~wire21))));
              reg33 <= $signed((+wire22[(1'h0):(1'h0)]));
            end
          else
            begin
              reg32 <= ($signed(wire22[(2'h2):(2'h2)]) + {(reg27 ~^ (wire30 >>> wire28))});
              reg33 <= ($unsigned(wire25) ?
                  ((wire24[(2'h2):(1'h0)] >= (&wire21)) ?
                      $unsigned((8'ha2)) : $unsigned((~|wire30))) : (8'haf));
            end
          reg34 <= (((!(8'hae)) ? reg33[(1'h0):(1'h0)] : (!{reg26})) ?
              ((wire20[(1'h1):(1'h1)] < wire28) > {$signed(wire19)}) : $signed($unsigned((^wire25))));
        end
      reg35 <= wire28;
    end
  assign wire36 = wire25[(2'h2):(2'h2)];
  assign wire37 = $unsigned($signed($unsigned((-wire28))));
  always
    @(posedge clk) begin
      reg38 <= (^$signed(wire28[(3'h4):(2'h3)]));
    end
  assign wire39 = (wire19[(1'h0):(1'h0)] ? $unsigned(reg31) : (^~reg33));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param13 = {((^~((8'hae) ? (8'hab) : (8'haf))) <<< (((8'h9d) & (8'ha2)) >= ((8'h9d) << (8'hac))))})
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h12):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire8;
  input wire [(2'h3):(1'h0)] wire7;
  input wire [(3'h4):(1'h0)] wire6;
  input wire [(3'h6):(1'h0)] wire5;
  wire signed [(2'h2):(1'h0)] wire12;
  wire [(3'h7):(1'h0)] wire11;
  wire [(3'h6):(1'h0)] wire10;
  reg [(2'h2):(1'h0)] reg9 = (1'h0);
  assign y = {wire12, wire11, wire10, reg9, (1'h0)};
  always
    @(posedge clk) begin
      reg9 <= (wire5 ^ {(wire7[(2'h2):(1'h0)] | $signed(wire6))});
    end
  assign wire10 = (~|$signed($unsigned(((8'h9f) ? (8'ha7) : wire5))));
  assign wire11 = $signed((8'ha3));
  assign wire12 = {($signed($signed(wire8)) - {$unsigned(wire11)})};
endmodule