(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param8 = (((~(^~(8'ha5))) ^ (|((8'haa) >= (8'hb0)))) ? (|(!(~^(8'ha8)))) : ((((8'ha4) ? (8'hb0) : (8'hab)) <<< ((8'ha3) ? (8'ha5) : (8'hac))) ? (((8'haa) ? (8'hac) : (8'ha2)) && {(8'ha6)}) : ({(8'ha7)} ? (|(8'ha0)) : ((8'haa) <<< (8'ha1))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h11):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire [(4'h8):(1'h0)] wire0;
  wire [(3'h7):(1'h0)] wire7;
  wire [(2'h2):(1'h0)] wire6;
  wire signed [(3'h5):(1'h0)] wire4;
  reg signed [(2'h2):(1'h0)] reg5 = (1'h0);
  assign y = {wire7, wire6, wire4, reg5, (1'h0)};
  assign wire4 = ($unsigned($unsigned((^wire2))) ?
                     $signed(((wire1 ? wire1 : wire1) ?
                         (wire0 ? wire2 : wire3) : (wire3 ?
                             wire0 : (8'hab)))) : wire0);
  always
    @(posedge clk) begin
      reg5 <= (~(({(8'ha3)} < wire1[(2'h2):(1'h0)]) ?
          (wire0 || $unsigned(wire0)) : wire3[(1'h1):(1'h0)]));
    end
  assign wire6 = wire1[(1'h1):(1'h0)];
  assign wire7 = $unsigned(wire0);
endmodule