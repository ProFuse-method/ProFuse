(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param94 = ((^~(-(^~(8'ha9)))) == (+{((8'ha6) ? (8'ha2) : (8'ha3))})))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h22):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire [(2'h2):(1'h0)] wire93;
  wire [(3'h6):(1'h0)] wire92;
  wire signed [(3'h6):(1'h0)] wire90;
  wire signed [(3'h5):(1'h0)] wire88;
  wire signed [(3'h7):(1'h0)] wire16;
  wire [(3'h4):(1'h0)] wire14;
  reg [(2'h3):(1'h0)] reg91 = (1'h0);
  assign y = {wire93, wire92, wire90, wire88, wire16, wire14, reg91, (1'h0)};
  module4 #() modinst15 (.wire6(wire2), .y(wire14), .clk(clk), .wire5(wire3), .wire8(wire1), .wire7(wire0));
  assign wire16 = ($unsigned((|$signed(wire2))) << (wire3[(2'h3):(1'h1)] ?
                      ((wire1 ? wire2 : wire3) ?
                          wire2 : $unsigned(wire2)) : wire1));
  module17 #() modinst89 (.clk(clk), .wire20(wire0), .wire21(wire16), .y(wire88), .wire19(wire3), .wire18(wire2));
  assign wire90 = (~&wire3);
  always
    @(posedge clk) begin
      reg91 <= (wire1 ?
          $unsigned((wire2[(1'h0):(1'h0)] | $signed(wire90))) : wire1);
    end
  assign wire92 = ($unsigned(({wire14} ~^ {wire88})) || reg91);
  assign wire93 = wire3;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module17  (y, clk, wire21, wire20, wire19, wire18);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire21;
  input wire [(4'h8):(1'h0)] wire20;
  input wire signed [(4'hb):(1'h0)] wire19;
  input wire signed [(4'h9):(1'h0)] wire18;
  wire [(3'h6):(1'h0)] wire86;
  wire signed [(4'hb):(1'h0)] wire85;
  wire signed [(4'ha):(1'h0)] wire84;
  wire signed [(3'h6):(1'h0)] wire83;
  wire [(2'h3):(1'h0)] wire81;
  wire [(4'hb):(1'h0)] wire62;
  wire signed [(4'hb):(1'h0)] wire23;
  wire signed [(4'ha):(1'h0)] wire22;
  assign y = {wire86,
                 wire85,
                 wire84,
                 wire83,
                 wire81,
                 wire62,
                 wire23,
                 wire22,
                 (1'h0)};
  assign wire22 = $unsigned(wire20);
  assign wire23 = $signed((8'h9c));
  module24 #() modinst63 (.y(wire62), .wire28(wire23), .wire25(wire20), .clk(clk), .wire26(wire18), .wire27(wire22));
  module64 #() modinst82 (.wire66(wire22), .y(wire81), .wire68(wire19), .wire65(wire18), .wire67(wire62), .clk(clk));
  assign wire83 = $unsigned(({wire20[(3'h5):(3'h4)]} ?
                      ($signed(wire20) <= $signed(wire21)) : ($unsigned(wire22) >= $unsigned((8'had)))));
  assign wire84 = wire23;
  assign wire85 = {((^(8'ha9)) ? (~^(~wire84)) : {$signed(wire22)})};
  module24 #() modinst87 (wire86, clk, wire85, wire84, wire21, wire22);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param13 = (8'ha2))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'he):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire8;
  input wire [(2'h2):(1'h0)] wire7;
  input wire signed [(2'h3):(1'h0)] wire6;
  input wire signed [(2'h2):(1'h0)] wire5;
  wire signed [(3'h4):(1'h0)] wire12;
  wire [(2'h3):(1'h0)] wire11;
  wire [(2'h2):(1'h0)] wire10;
  wire signed [(3'h4):(1'h0)] wire9;
  assign y = {wire12, wire11, wire10, wire9, (1'h0)};
  assign wire9 = $signed((wire5[(1'h0):(1'h0)] ?
                     ((^(8'h9c)) ?
                         (~&wire7) : (wire8 ?
                             wire8 : wire7)) : wire7[(2'h2):(1'h1)]));
  assign wire10 = (wire8 ? $unsigned(wire7[(1'h1):(1'h0)]) : wire8);
  assign wire11 = (^~{$unsigned((wire7 || wire5))});
  assign wire12 = $unsigned((($signed(wire10) ? wire5 : (~^wire7)) ?
                      (~$unsigned(wire11)) : wire10[(1'h0):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module64
#(parameter param80 = (((&((8'h9d) == (8'hac))) ? (8'ha7) : (((8'ha0) <<< (8'had)) ? ((8'h9c) ? (8'ha6) : (8'ha1)) : ((8'ha4) ? (8'haf) : (8'ha0)))) ? {(((8'had) <<< (8'h9d)) <<< {(8'haa)})} : ((8'ha1) ? ({(8'ha7)} | ((8'ha2) ? (8'hac) : (8'ha6))) : (((8'haf) ? (8'h9f) : (8'ha4)) ? (~(8'ha4)) : (8'hb0)))))
(y, clk, wire68, wire67, wire66, wire65);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire68;
  input wire signed [(4'hb):(1'h0)] wire67;
  input wire signed [(4'h8):(1'h0)] wire66;
  input wire signed [(3'h4):(1'h0)] wire65;
  wire [(2'h2):(1'h0)] wire79;
  wire signed [(3'h4):(1'h0)] wire78;
  wire signed [(2'h2):(1'h0)] wire77;
  wire signed [(3'h7):(1'h0)] wire76;
  wire [(3'h5):(1'h0)] wire75;
  wire [(3'h5):(1'h0)] wire74;
  wire [(4'ha):(1'h0)] wire73;
  wire signed [(3'h7):(1'h0)] wire72;
  wire signed [(4'h8):(1'h0)] wire71;
  wire signed [(4'h8):(1'h0)] wire70;
  wire signed [(4'h9):(1'h0)] wire69;
  assign y = {wire79,
                 wire78,
                 wire77,
                 wire76,
                 wire75,
                 wire74,
                 wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire69,
                 (1'h0)};
  assign wire69 = wire66;
  assign wire70 = (8'hae);
  assign wire71 = wire65[(2'h3):(1'h1)];
  assign wire72 = ($unsigned(wire66[(3'h4):(3'h4)]) <<< $signed(wire71[(2'h3):(1'h1)]));
  assign wire73 = ((!{$signed(wire65)}) & ($signed(wire69[(4'h9):(2'h3)]) ?
                      (!(wire66 & wire66)) : (wire65 ?
                          (&wire70) : $signed(wire70))));
  assign wire74 = $signed($unsigned(wire66));
  assign wire75 = ($signed(((wire67 ? wire70 : wire66) > (wire74 ?
                      wire65 : wire69))) != (((wire68 ? wire65 : wire67) ?
                      (~|wire70) : $signed(wire66)) && ((+wire67) ?
                      wire72 : {wire73})));
  assign wire76 = wire70[(3'h5):(2'h2)];
  assign wire77 = ((wire66 || ((~^wire65) >= wire74[(3'h4):(3'h4)])) ?
                      $signed(((wire68 ? wire75 : wire69) ?
                          ((8'haa) >> (8'ha2)) : ((8'ha1) ?
                              wire71 : (8'hab)))) : $unsigned(wire69));
  assign wire78 = (~|($unsigned($unsigned(wire68)) ?
                      (!(wire71 ? wire72 : wire72)) : $signed(wire73)));
  assign wire79 = (wire71 || wire74[(3'h4):(2'h2)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module24
#(parameter param61 = ((|(((8'ha7) ? (8'h9c) : (8'ha3)) > ((8'hac) ? (8'hac) : (8'ha8)))) && (((^(8'ha2)) ^ (^(8'ha7))) ? (((8'hac) ? (8'hae) : (8'ha2)) ? ((8'had) || (8'h9f)) : {(8'h9c)}) : (((8'hb0) < (8'hb0)) - ((8'ha4) >= (8'ha3))))))
(y, clk, wire28, wire27, wire26, wire25);
  output wire [(32'hc4):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire28;
  input wire signed [(4'ha):(1'h0)] wire27;
  input wire [(3'h4):(1'h0)] wire26;
  input wire [(2'h2):(1'h0)] wire25;
  wire [(2'h3):(1'h0)] wire60;
  wire [(3'h5):(1'h0)] wire59;
  wire signed [(3'h5):(1'h0)] wire58;
  wire [(3'h4):(1'h0)] wire57;
  wire [(2'h2):(1'h0)] wire56;
  wire [(3'h6):(1'h0)] wire45;
  wire [(2'h3):(1'h0)] wire44;
  wire [(3'h7):(1'h0)] wire38;
  reg signed [(4'hb):(1'h0)] reg55 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg54 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg53 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg52 = (1'h0);
  reg [(4'ha):(1'h0)] reg51 = (1'h0);
  reg [(3'h4):(1'h0)] reg50 = (1'h0);
  reg [(4'h9):(1'h0)] reg49 = (1'h0);
  reg [(3'h7):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg47 = (1'h0);
  reg [(2'h2):(1'h0)] reg46 = (1'h0);
  reg [(4'h9):(1'h0)] reg43 = (1'h0);
  reg [(4'h8):(1'h0)] reg42 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg40 = (1'h0);
  reg [(2'h3):(1'h0)] reg39 = (1'h0);
  reg [(2'h3):(1'h0)] reg37 = (1'h0);
  reg [(3'h7):(1'h0)] reg36 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg35 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg34 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg33 = (1'h0);
  reg [(3'h7):(1'h0)] reg32 = (1'h0);
  reg [(3'h5):(1'h0)] reg31 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg30 = (1'h0);
  reg [(4'ha):(1'h0)] reg29 = (1'h0);
  assign y = {wire60,
                 wire59,
                 wire58,
                 wire57,
                 wire56,
                 wire45,
                 wire44,
                 wire38,
                 reg55,
                 reg54,
                 reg53,
                 reg52,
                 reg51,
                 reg50,
                 reg49,
                 reg48,
                 reg47,
                 reg46,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg39,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg29 <= wire25[(1'h1):(1'h1)];
      if ($unsigned(((reg29[(2'h2):(1'h0)] ^~ $unsigned(wire26)) | ((wire28 <<< (8'ha8)) ^ wire28))))
        begin
          if ($unsigned(wire26[(2'h2):(1'h0)]))
            begin
              reg30 <= $unsigned({((!reg29) ? $unsigned(wire28) : {reg29})});
              reg31 <= (((~|reg29[(4'ha):(3'h5)]) > (8'ha1)) ?
                  wire25 : $signed(($unsigned(wire27) ?
                      (reg29 ? wire26 : wire26) : (reg30 ? (8'ha3) : reg30))));
            end
          else
            begin
              reg30 <= ($unsigned((~&reg30)) <= (~|((wire26 + wire27) || (reg29 ?
                  wire25 : reg30))));
              reg31 <= $unsigned($unsigned((~(wire25 ^ reg30))));
              reg32 <= $unsigned(({((8'ha4) ? wire27 : reg30)} ?
                  $unsigned(wire25[(1'h1):(1'h1)]) : (reg29[(1'h1):(1'h0)] - (!reg29))));
            end
          if ({(-$signed((-reg30)))})
            begin
              reg33 <= (((wire25[(1'h0):(1'h0)] ? (wire27 ^~ wire28) : reg32) ?
                      (&$signed(wire26)) : reg30) ?
                  ($unsigned(((8'hae) ? reg31 : wire26)) ?
                      wire28[(3'h7):(1'h1)] : (reg29[(1'h1):(1'h0)] ?
                          $unsigned(reg31) : $unsigned(reg29))) : reg31[(1'h1):(1'h1)]);
              reg34 <= reg29;
            end
          else
            begin
              reg33 <= reg34[(3'h7):(2'h3)];
              reg34 <= reg29[(1'h1):(1'h1)];
            end
          if ((~$signed(reg32[(3'h7):(1'h0)])))
            begin
              reg35 <= ((reg32 ?
                  {(wire26 ^ wire28)} : (-(reg31 & (8'ha9)))) - reg33);
              reg36 <= ({(reg34 > $unsigned(reg35))} ?
                  reg32[(3'h6):(3'h6)] : reg34);
            end
          else
            begin
              reg35 <= reg33[(1'h1):(1'h1)];
            end
        end
      else
        begin
          if ($unsigned((reg31 + (((8'h9d) ? reg33 : (8'h9e)) >>> wire27))))
            begin
              reg30 <= wire26;
              reg31 <= reg32[(3'h5):(2'h3)];
            end
          else
            begin
              reg30 <= wire26[(1'h1):(1'h0)];
              reg31 <= $unsigned(reg30[(4'h8):(3'h6)]);
              reg32 <= reg32[(3'h4):(1'h0)];
            end
          reg33 <= ($signed((reg32[(3'h6):(2'h2)] > (wire25 ^ (8'haf)))) | {($unsigned((8'ha0)) ?
                  $unsigned(wire28) : $unsigned(reg30))});
          reg34 <= $unsigned({(~&(reg30 ~^ reg31))});
        end
      reg37 <= ((((&reg32) < reg32[(3'h4):(2'h3)]) ?
          $unsigned((reg36 << wire26)) : {reg36[(1'h0):(1'h0)]}) + reg33);
    end
  assign wire38 = ((!(-(-reg35))) * reg33);
  always
    @(posedge clk) begin
      reg39 <= $signed($unsigned({$unsigned(wire25)}));
      if (wire28)
        begin
          reg40 <= (~(+((&wire26) ?
              reg30[(3'h5):(3'h5)] : wire26[(2'h2):(2'h2)])));
        end
      else
        begin
          reg40 <= wire28;
          if ({{wire27}})
            begin
              reg41 <= reg39;
              reg42 <= ((^~{reg41}) ?
                  ((|{reg29}) < (reg34 || (reg32 <<< reg40))) : $unsigned(reg34));
            end
          else
            begin
              reg41 <= $unsigned((~&(reg41 | {(8'h9c)})));
            end
        end
      reg43 <= ($signed($unsigned(((8'h9d) != reg34))) ?
          (&((reg37 <<< reg32) >= $unsigned(reg30))) : $unsigned((-(wire26 << reg29))));
    end
  assign wire44 = {$unsigned((reg30 & {wire26}))};
  assign wire45 = (((~&(reg39 < reg32)) & $signed((8'ha5))) == $unsigned(($unsigned(wire26) ?
                      {reg33} : $unsigned(reg43))));
  always
    @(posedge clk) begin
      reg46 <= ((!reg40) != {$signed((8'hac))});
      if (reg33[(1'h1):(1'h1)])
        begin
          if (($unsigned(((wire28 || reg42) ? $signed(reg29) : {reg42})) ?
              {wire28} : ($unsigned($unsigned(reg39)) < $signed((wire25 ?
                  (8'ha1) : wire28)))))
            begin
              reg47 <= ((reg39 <= ($unsigned(reg37) >> reg41[(3'h4):(3'h4)])) ?
                  {reg43} : {{wire44[(2'h2):(1'h0)]}});
              reg48 <= $unsigned($signed(wire27));
            end
          else
            begin
              reg47 <= $signed($signed(reg36));
            end
          reg49 <= $unsigned({reg40[(1'h1):(1'h0)]});
          if ((~($unsigned($unsigned(reg39)) ? $signed(reg37) : reg46)))
            begin
              reg50 <= reg46;
              reg51 <= reg33;
              reg52 <= (reg35[(2'h2):(2'h2)] ^ ((^(wire27 ? reg49 : reg34)) ?
                  (+$signed(reg41)) : reg37));
            end
          else
            begin
              reg50 <= (($signed(reg30[(3'h4):(1'h0)]) ?
                  ($signed(wire25) ?
                      $unsigned(reg49) : (reg48 ?
                          reg47 : (8'ha5))) : (-reg29[(3'h5):(2'h3)])) >> $signed(((reg47 ?
                  wire28 : reg33) == $unsigned(reg30))));
              reg51 <= (-((reg49[(3'h6):(1'h0)] ?
                      $signed(reg46) : $signed(reg32)) ?
                  $signed({wire38}) : reg43[(1'h0):(1'h0)]));
            end
        end
      else
        begin
          reg47 <= (|($unsigned($signed(wire25)) ?
              ((&reg31) || reg31) : $unsigned(reg40)));
          reg48 <= ((~|(wire26 || $unsigned(reg52))) <<< (~&reg33));
        end
      reg53 <= (^($signed($unsigned(reg49)) ?
          {reg40[(1'h0):(1'h0)]} : $signed((wire27 || wire44))));
    end
  always
    @(posedge clk) begin
      reg54 <= (~^(reg29 ? $signed((reg50 == reg51)) : (^~(^wire27))));
      reg55 <= ((~{(^reg35)}) << {(~|wire25)});
    end
  assign wire56 = (8'h9d);
  assign wire57 = (&(~$signed((~&wire25))));
  assign wire58 = reg48[(3'h6):(1'h1)];
  assign wire59 = $signed($unsigned((~(^reg37))));
  assign wire60 = reg34;
endmodule