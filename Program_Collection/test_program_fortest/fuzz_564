(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire signed [(4'hb):(1'h0)] wire2;
  input wire [(2'h2):(1'h0)] wire1;
  input wire signed [(4'h8):(1'h0)] wire0;
  wire [(4'hb):(1'h0)] wire21;
  wire [(3'h4):(1'h0)] wire18;
  wire signed [(3'h7):(1'h0)] wire17;
  wire signed [(2'h3):(1'h0)] wire16;
  wire [(4'h8):(1'h0)] wire15;
  wire [(3'h4):(1'h0)] wire6;
  wire signed [(4'h9):(1'h0)] wire5;
  wire [(3'h5):(1'h0)] wire4;
  reg [(3'h6):(1'h0)] reg20 = (1'h0);
  reg [(2'h2):(1'h0)] reg19 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg14 = (1'h0);
  reg [(3'h4):(1'h0)] reg13 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg12 = (1'h0);
  reg [(3'h7):(1'h0)] reg11 = (1'h0);
  reg [(4'h8):(1'h0)] reg10 = (1'h0);
  reg [(3'h4):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg8 = (1'h0);
  reg [(4'h8):(1'h0)] reg7 = (1'h0);
  assign y = {wire21,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire6,
                 wire5,
                 wire4,
                 reg20,
                 reg19,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 (1'h0)};
  assign wire4 = (|($unsigned(wire3[(3'h6):(2'h2)]) && ($signed(wire1) ?
                     {wire0} : (wire1 ? wire0 : (8'haf)))));
  assign wire5 = wire2;
  assign wire6 = {wire4};
  always
    @(posedge clk) begin
      reg7 <= wire6;
      if ((~&(-wire3[(2'h3):(1'h0)])))
        begin
          if ((-{(^wire6[(2'h3):(1'h1)])}))
            begin
              reg8 <= {$signed((^(wire4 & wire3)))};
            end
          else
            begin
              reg8 <= ({$signed(wire0[(1'h1):(1'h0)])} != (-wire4[(3'h5):(2'h3)]));
              reg9 <= wire1;
            end
          reg10 <= $signed($signed($unsigned($unsigned(reg8))));
          if (((wire0[(3'h7):(2'h3)] ?
                  ($signed(wire2) ?
                      reg8[(1'h1):(1'h1)] : wire1[(1'h0):(1'h0)]) : $signed(((8'ha2) ?
                      wire3 : (8'ha1)))) ?
              reg7 : ($unsigned($signed(reg8)) ? $unsigned((&wire1)) : wire0)))
            begin
              reg11 <= wire1;
              reg12 <= wire5;
              reg13 <= $unsigned($unsigned(((~|reg9) ?
                  $signed(wire3) : {wire5})));
            end
          else
            begin
              reg11 <= $unsigned($signed(((wire1 ? wire1 : reg9) ?
                  reg11 : reg12)));
              reg12 <= reg7;
            end
        end
      else
        begin
          reg8 <= $unsigned((!wire2));
          reg9 <= (^~(8'hae));
        end
      reg14 <= (wire0 ^~ (~&$signed((^~(8'had)))));
    end
  assign wire15 = reg7;
  assign wire16 = ((8'h9c) == $unsigned($unsigned((~wire3))));
  assign wire17 = $signed(({{wire0}} >>> $signed($signed(wire2))));
  assign wire18 = $unsigned({reg9});
  always
    @(posedge clk) begin
      reg19 <= wire17;
      reg20 <= wire17[(1'h0):(1'h0)];
    end
  assign wire21 = $unsigned((~&wire1[(2'h2):(1'h0)]));
endmodule