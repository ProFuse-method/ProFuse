(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h4d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire signed [(4'hb):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(3'h4):(1'h0)] wire43;
  wire signed [(3'h6):(1'h0)] wire42;
  wire signed [(3'h7):(1'h0)] wire40;
  wire [(4'ha):(1'h0)] wire39;
  wire signed [(4'hb):(1'h0)] wire38;
  wire [(4'h9):(1'h0)] wire37;
  wire [(4'ha):(1'h0)] wire35;
  wire signed [(2'h2):(1'h0)] wire34;
  wire [(4'h8):(1'h0)] wire32;
  wire [(4'h9):(1'h0)] wire4;
  assign y = {wire43,
                 wire42,
                 wire40,
                 wire39,
                 wire38,
                 wire37,
                 wire35,
                 wire34,
                 wire32,
                 wire4,
                 (1'h0)};
  assign wire4 = (&(~^((wire1 << wire3) ? {wire0} : $signed(wire3))));
  module5 #() modinst33 (wire32, clk, wire0, wire3, wire1, wire2);
  assign wire34 = {(!wire32)};
  module10 #() modinst36 (.wire13(wire3), .clk(clk), .wire14(wire32), .wire12(wire1), .y(wire35), .wire11(wire2));
  assign wire37 = (^$signed($signed((8'ha2))));
  assign wire38 = (wire3 ?
                      $unsigned($signed((wire37 != wire37))) : (~&(-$signed((8'h9e)))));
  assign wire39 = wire4;
  module5 #() modinst41 (.wire9(wire2), .wire8(wire37), .wire6(wire39), .wire7(wire38), .clk(clk), .y(wire40));
  assign wire42 = ((!wire37) ? wire35 : $signed({wire39}));
  assign wire43 = $signed((^wire42));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param31 = (((((8'hae) <= (8'ha0)) & ((8'ha4) > (8'hac))) ? (^~((8'ha0) != (8'haa))) : (((8'ha8) ? (8'haa) : (8'ha3)) * ((8'h9e) <= (8'ha3)))) ? (^~{((8'h9e) ~^ (8'h9c))}) : (({(8'ha1)} ? ((8'ha8) ? (8'h9c) : (8'ha4)) : (^(8'ha7))) > (8'had))))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h33):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire [(4'h8):(1'h0)] wire8;
  input wire [(4'h9):(1'h0)] wire7;
  input wire [(4'ha):(1'h0)] wire6;
  wire [(4'hb):(1'h0)] wire30;
  wire [(3'h6):(1'h0)] wire29;
  wire [(2'h3):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire27;
  wire signed [(4'h8):(1'h0)] wire26;
  wire [(4'hb):(1'h0)] wire24;
  assign y = {wire30, wire29, wire28, wire27, wire26, wire24, (1'h0)};
  module10 #() modinst25 (.wire12(wire9), .clk(clk), .wire11(wire6), .wire13(wire8), .y(wire24), .wire14(wire7));
  assign wire26 = (wire7 ? (8'haa) : $signed(wire24));
  assign wire27 = $signed($signed(wire9));
  assign wire28 = {wire24[(4'h9):(2'h2)]};
  assign wire29 = ($signed($signed((^wire27))) >= (({wire6} ~^ (^wire7)) ~^ $signed($unsigned(wire28))));
  assign wire30 = (8'ha5);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10  (y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'h3e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire14;
  input wire [(2'h3):(1'h0)] wire13;
  input wire signed [(4'hb):(1'h0)] wire12;
  input wire [(4'ha):(1'h0)] wire11;
  wire [(4'ha):(1'h0)] wire23;
  wire [(3'h7):(1'h0)] wire21;
  wire signed [(3'h5):(1'h0)] wire20;
  wire [(3'h6):(1'h0)] wire19;
  wire signed [(3'h6):(1'h0)] wire18;
  wire signed [(2'h3):(1'h0)] wire17;
  wire [(4'hb):(1'h0)] wire16;
  wire [(3'h4):(1'h0)] wire15;
  reg [(4'h9):(1'h0)] reg22 = (1'h0);
  assign y = {wire23,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 reg22,
                 (1'h0)};
  assign wire15 = wire13;
  assign wire16 = $unsigned(wire15);
  assign wire17 = wire13;
  assign wire18 = wire16[(2'h3):(2'h3)];
  assign wire19 = wire18[(3'h5):(2'h3)];
  assign wire20 = ((+(~$unsigned(wire14))) ?
                      $signed($signed($unsigned(wire18))) : ($unsigned((~&wire13)) && $signed($signed(wire19))));
  assign wire21 = $signed($unsigned($unsigned(wire18)));
  always
    @(posedge clk) begin
      reg22 <= ($signed((wire20[(2'h2):(2'h2)] ?
          wire18 : $unsigned(wire17))) > $unsigned($signed(wire17[(2'h3):(1'h0)])));
    end
  assign wire23 = (+((wire15 ?
                      $unsigned(wire13) : (wire12 + reg22)) >> $signed({(8'hac)})));
endmodule