(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param15 = (((|{(8'ha9)}) ? {{(8'h9f)}} : (|((8'ha6) ? (8'ha6) : (8'h9f)))) ? (^~(!(~&(8'ha0)))) : ({(~(8'h9e))} ? {(^(8'ha3))} : (~((8'haf) ? (8'haa) : (8'haa))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h45):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire [(3'h7):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire1;
  input wire [(2'h3):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire14;
  wire [(4'h9):(1'h0)] wire13;
  wire signed [(3'h5):(1'h0)] wire4;
  reg signed [(2'h3):(1'h0)] reg12 = (1'h0);
  reg [(3'h6):(1'h0)] reg11 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg10 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg9 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg8 = (1'h0);
  reg [(4'h9):(1'h0)] reg7 = (1'h0);
  reg [(3'h4):(1'h0)] reg6 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg5 = (1'h0);
  assign y = {wire14,
                 wire13,
                 wire4,
                 reg12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = {(wire2 ?
                         wire2[(3'h5):(3'h4)] : (wire0[(1'h1):(1'h0)] ?
                             wire2[(3'h4):(2'h2)] : wire3))};
  always
    @(posedge clk) begin
      reg5 <= (&{(wire0 ? wire2[(3'h7):(2'h2)] : wire0[(1'h1):(1'h1)])});
      if ($unsigned(wire1[(2'h2):(2'h2)]))
        begin
          if ((wire0[(1'h1):(1'h1)] ?
              $signed(((wire1 ? wire1 : wire0) ?
                  {wire0} : (wire4 >= wire0))) : (((wire1 ? wire4 : wire1) ?
                      $unsigned(wire2) : {(8'ha2)}) ?
                  $unsigned($signed(wire0)) : wire3[(2'h3):(2'h3)])))
            begin
              reg6 <= $unsigned((8'ha8));
              reg7 <= (!(^reg6));
              reg8 <= $signed(($signed(reg6[(2'h2):(1'h1)]) ?
                  $signed($signed(wire4)) : ($signed(wire2) ?
                      wire3[(2'h2):(1'h0)] : reg6)));
            end
          else
            begin
              reg6 <= $signed({{(^~wire2)}});
              reg7 <= wire4[(3'h5):(3'h5)];
              reg8 <= $signed($unsigned(reg7));
            end
          if (reg8[(2'h2):(2'h2)])
            begin
              reg9 <= (({(&reg8)} ?
                      wire0 : ($signed(wire2) != wire0[(2'h2):(2'h2)])) ?
                  ((wire1 ? (reg6 == reg5) : (reg6 || wire0)) ?
                      wire2[(2'h3):(2'h3)] : reg8) : wire0);
              reg10 <= $unsigned($unsigned({wire2}));
              reg11 <= $unsigned((&(~$unsigned(wire3))));
            end
          else
            begin
              reg9 <= reg6[(2'h3):(2'h2)];
              reg10 <= (-($signed($signed(wire3)) ?
                  ((^reg7) != $unsigned(wire1)) : wire3[(3'h4):(2'h2)]));
            end
        end
      else
        begin
          reg6 <= (+(&reg11));
          reg7 <= $unsigned($unsigned($unsigned(wire4)));
        end
      reg12 <= ((8'ha0) ?
          $signed((~|((8'had) ? (8'ha8) : reg11))) : reg6[(1'h0):(1'h0)]);
    end
  assign wire13 = ($unsigned((&(+reg10))) ? reg9 : $signed($signed({wire3})));
  assign wire14 = wire13;
endmodule