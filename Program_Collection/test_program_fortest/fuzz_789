(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h75):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire0;
  input wire signed [(4'h8):(1'h0)] wire1;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire signed [(2'h3):(1'h0)] wire3;
  wire signed [(3'h7):(1'h0)] wire48;
  wire [(4'h9):(1'h0)] wire4;
  wire signed [(4'h9):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire6;
  wire [(2'h3):(1'h0)] wire7;
  wire signed [(4'h9):(1'h0)] wire8;
  wire signed [(2'h3):(1'h0)] wire9;
  wire signed [(4'ha):(1'h0)] wire10;
  wire signed [(3'h4):(1'h0)] wire15;
  wire [(3'h6):(1'h0)] wire16;
  wire [(4'ha):(1'h0)] wire17;
  wire signed [(4'h8):(1'h0)] wire46;
  reg signed [(4'h9):(1'h0)] reg11 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg13 = (1'h0);
  reg [(4'h8):(1'h0)] reg14 = (1'h0);
  assign y = {wire48,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire8,
                 wire9,
                 wire10,
                 wire15,
                 wire16,
                 wire17,
                 wire46,
                 reg11,
                 reg12,
                 reg13,
                 reg14,
                 (1'h0)};
  assign wire4 = (~|((((8'ha5) ^ wire0) >> wire3[(1'h1):(1'h0)]) ?
                     wire0[(2'h2):(2'h2)] : ({wire3} >= (wire0 < wire3))));
  assign wire5 = $signed((wire1[(1'h1):(1'h1)] ?
                     $signed(wire4) : ((wire4 ? (8'h9d) : (8'hab)) ?
                         ((8'h9e) != wire2) : $signed((8'ha2)))));
  assign wire6 = ($signed((~(8'had))) + wire2[(2'h3):(2'h2)]);
  assign wire7 = ({wire6} ?
                     $signed($unsigned(wire2)) : (((wire4 > wire5) ~^ (wire2 - wire0)) ?
                         wire1 : wire6));
  assign wire8 = {({$signed(wire5)} < (^{wire0}))};
  assign wire9 = wire2[(1'h0):(1'h0)];
  assign wire10 = (wire6 <<< (^~((wire1 ? wire8 : wire5) ?
                      (wire2 ? wire8 : wire0) : (wire3 >>> wire5))));
  always
    @(posedge clk) begin
      if ((wire8 ? wire10 : wire7))
        begin
          reg11 <= ($signed((8'haf)) << wire10[(3'h4):(1'h0)]);
          if ($signed(wire8[(1'h1):(1'h0)]))
            begin
              reg12 <= $signed($signed(((^wire9) & (^(8'ha3)))));
            end
          else
            begin
              reg12 <= (~(~reg12[(4'h8):(3'h7)]));
              reg13 <= (^~((wire10 >= (~|(8'h9c))) | wire0[(2'h2):(2'h2)]));
            end
          reg14 <= $signed($unsigned({wire0[(1'h1):(1'h1)]}));
        end
      else
        begin
          reg11 <= $unsigned(reg13);
        end
    end
  assign wire15 = $signed((((~|(8'hab)) != wire2) ?
                      ((+wire0) ~^ ((8'haf) ?
                          wire10 : wire3)) : (~$unsigned((8'h9c)))));
  assign wire16 = reg13;
  assign wire17 = (8'ha8);
  module18 #() modinst47 (.wire21(wire8), .y(wire46), .wire20(wire2), .wire19(reg13), .clk(clk), .wire22(wire16));
  assign wire48 = ($signed(({reg14} == (wire0 == wire2))) ?
                      (~&($unsigned(wire9) ^~ $signed(wire7))) : $unsigned(wire16[(3'h4):(3'h4)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module18
#(parameter param45 = ({(((8'ha9) - (8'haa)) ? (~|(8'haa)) : (^~(8'ha1)))} - (((~^(8'hac)) ? ((8'h9e) ? (8'haa) : (8'ha4)) : (~|(8'h9f))) ? (~&(!(8'h9f))) : {((8'ha4) ? (8'hab) : (8'ha7))})))
(y, clk, wire22, wire21, wire20, wire19);
  output wire [(32'h32):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire22;
  input wire [(2'h2):(1'h0)] wire21;
  input wire [(4'ha):(1'h0)] wire20;
  input wire signed [(3'h4):(1'h0)] wire19;
  wire [(2'h2):(1'h0)] wire44;
  wire [(3'h7):(1'h0)] wire43;
  wire [(3'h4):(1'h0)] wire42;
  wire signed [(3'h5):(1'h0)] wire41;
  wire [(4'ha):(1'h0)] wire40;
  wire [(3'h6):(1'h0)] wire39;
  wire signed [(3'h7):(1'h0)] wire37;
  wire [(4'h8):(1'h0)] wire23;
  assign y = {wire44,
                 wire43,
                 wire42,
                 wire41,
                 wire40,
                 wire39,
                 wire37,
                 wire23,
                 (1'h0)};
  assign wire23 = ((8'had) ? wire22 : $signed($signed({wire20})));
  module24 #() modinst38 (.wire28(wire20), .y(wire37), .wire26(wire22), .clk(clk), .wire27(wire21), .wire25(wire19));
  assign wire39 = (!(wire20 ?
                      $unsigned(wire37) : ((wire22 ?
                          wire22 : wire20) + (-wire23))));
  assign wire40 = wire22[(2'h3):(2'h2)];
  assign wire41 = $unsigned(($unsigned(((8'h9c) >= wire21)) ?
                      wire19[(3'h4):(1'h1)] : (|(wire21 ? wire37 : wire19))));
  assign wire42 = $signed(({$unsigned((8'h9d))} || $unsigned(wire23[(4'h8):(1'h0)])));
  assign wire43 = ({wire42} ? wire40 : $signed(wire21[(1'h1):(1'h0)]));
  assign wire44 = (|($signed($signed((8'hac))) ?
                      ((wire37 >= wire39) ?
                          wire23[(1'h1):(1'h1)] : wire37) : (wire20 >> wire37)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module24
#(parameter param36 = (&(~|(&((8'h9c) ? (8'ha7) : (8'ha6))))))
(y, clk, wire28, wire27, wire26, wire25);
  output wire [(32'h28):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire28;
  input wire [(2'h2):(1'h0)] wire27;
  input wire [(2'h3):(1'h0)] wire26;
  input wire signed [(3'h4):(1'h0)] wire25;
  wire [(2'h3):(1'h0)] wire34;
  wire [(4'hb):(1'h0)] wire33;
  wire signed [(3'h5):(1'h0)] wire32;
  wire signed [(2'h3):(1'h0)] wire31;
  wire signed [(3'h4):(1'h0)] wire30;
  reg [(4'hb):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg29 = (1'h0);
  assign y = {wire34, wire33, wire32, wire31, wire30, reg35, reg29, (1'h0)};
  always
    @(posedge clk) begin
      reg29 <= (wire27[(1'h0):(1'h0)] ~^ $signed((+(+wire28))));
    end
  assign wire30 = wire26[(1'h1):(1'h0)];
  assign wire31 = (&wire26);
  assign wire32 = (8'ha1);
  assign wire33 = $signed(({$unsigned(wire25)} ?
                      ((wire27 != (8'h9f)) ~^ {wire32}) : ($unsigned(wire25) >>> $signed(wire31))));
  assign wire34 = $unsigned(wire26[(2'h2):(2'h2)]);
  always
    @(posedge clk) begin
      reg35 <= (~$signed(wire26[(2'h2):(2'h2)]));
    end
endmodule