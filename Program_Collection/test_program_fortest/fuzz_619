(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire [(4'h8):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire [(4'h9):(1'h0)] wire69;
  wire signed [(4'h9):(1'h0)] wire65;
  wire signed [(4'h9):(1'h0)] wire56;
  wire signed [(4'ha):(1'h0)] wire55;
  wire [(4'hb):(1'h0)] wire54;
  wire [(2'h3):(1'h0)] wire52;
  wire signed [(4'hb):(1'h0)] wire4;
  wire signed [(4'h9):(1'h0)] wire67;
  reg [(4'hb):(1'h0)] reg64 = (1'h0);
  reg [(3'h4):(1'h0)] reg63 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg62 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg61 = (1'h0);
  reg [(3'h4):(1'h0)] reg60 = (1'h0);
  reg [(3'h5):(1'h0)] reg59 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg58 = (1'h0);
  assign y = {wire69,
                 wire65,
                 wire56,
                 wire55,
                 wire54,
                 wire52,
                 wire4,
                 wire67,
                 reg64,
                 reg63,
                 reg62,
                 reg61,
                 reg60,
                 reg59,
                 reg58,
                 (1'h0)};
  assign wire4 = {((|(-wire2)) ? wire3 : wire3[(1'h1):(1'h1)])};
  module5 #() modinst53 (.y(wire52), .wire9(wire0), .wire8(wire2), .wire7(wire4), .wire6(wire3), .clk(clk));
  assign wire54 = (wire2 && $unsigned(($signed(wire0) | $signed(wire52))));
  assign wire55 = wire52[(1'h1):(1'h1)];
  module11 #() modinst57 (.clk(clk), .y(wire56), .wire13(wire0), .wire12(wire4), .wire14(wire54), .wire15(wire55));
  always
    @(posedge clk) begin
      reg58 <= $unsigned($unsigned($signed(wire1[(3'h4):(3'h4)])));
      if ({$signed(wire4)})
        begin
          if ({wire56})
            begin
              reg59 <= wire56;
              reg60 <= wire2[(2'h3):(2'h2)];
              reg61 <= $signed($signed((~^(wire0 == reg60))));
            end
          else
            begin
              reg59 <= (8'ha3);
            end
          reg62 <= wire56[(3'h4):(3'h4)];
          reg63 <= wire0;
        end
      else
        begin
          reg59 <= wire1[(3'h7):(3'h6)];
        end
      reg64 <= (wire56 ? wire1 : $signed(((^reg58) <= {reg63})));
    end
  module11 #() modinst66 (wire65, clk, wire4, wire54, wire2, reg64);
  module5 #() modinst68 (.clk(clk), .wire6(reg58), .wire7(wire65), .y(wire67), .wire8(wire56), .wire9(wire54));
  assign wire69 = (~|{((^~reg60) ?
                          (wire54 ? wire0 : wire55) : (reg63 >= wire65))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param51 = {(-(((8'haf) ? (8'ha2) : (8'ha3)) >>> ((8'ha9) ? (8'ha8) : (8'ha6))))})
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h4f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hb):(1'h0)] wire9;
  input wire [(4'h9):(1'h0)] wire8;
  input wire [(3'h7):(1'h0)] wire7;
  input wire signed [(4'ha):(1'h0)] wire6;
  wire signed [(3'h4):(1'h0)] wire50;
  wire signed [(2'h3):(1'h0)] wire49;
  wire [(4'h9):(1'h0)] wire48;
  wire signed [(3'h6):(1'h0)] wire43;
  wire [(4'ha):(1'h0)] wire42;
  wire [(4'h8):(1'h0)] wire40;
  wire signed [(3'h6):(1'h0)] wire10;
  reg [(4'h9):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg46 = (1'h0);
  reg [(4'hb):(1'h0)] reg45 = (1'h0);
  reg [(3'h6):(1'h0)] reg44 = (1'h0);
  assign y = {wire50,
                 wire49,
                 wire48,
                 wire43,
                 wire42,
                 wire40,
                 wire10,
                 reg47,
                 reg46,
                 reg45,
                 reg44,
                 (1'h0)};
  assign wire10 = (-$signed((^~wire8)));
  module11 #() modinst41 (wire40, clk, wire8, wire6, wire10, wire9);
  assign wire42 = wire8;
  assign wire43 = wire6;
  always
    @(posedge clk) begin
      reg44 <= (~(+((wire7 <= wire7) >> $signed(wire10))));
    end
  always
    @(posedge clk) begin
      reg45 <= $unsigned((wire40 ?
          ((|wire9) ? $unsigned(wire40) : $signed(wire8)) : (^(wire43 ?
              (8'ha2) : (8'hac)))));
      reg46 <= (~wire6);
      reg47 <= ((-((~|wire10) != $signed(reg44))) ?
          wire43[(3'h5):(2'h2)] : (wire43 ? wire40[(1'h0):(1'h0)] : (8'h9f)));
    end
  assign wire48 = $signed(wire40);
  assign wire49 = $signed($unsigned(($unsigned(wire40) > $unsigned(wire10))));
  assign wire50 = (^~(wire49 | reg47));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module11
#(parameter param39 = (({((8'hae) && (8'hac))} > ((|(8'hae)) ? (^(8'ha0)) : ((8'ha1) ? (8'ha0) : (8'ha2)))) ? ((!((8'hb0) <<< (8'ha0))) >> (((8'had) & (8'ha5)) - ((8'ha1) ? (8'ha2) : (8'ha5)))) : {(~|((8'ha8) && (8'ha4)))}))
(y, clk, wire15, wire14, wire13, wire12);
  output wire [(32'h9b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire15;
  input wire [(4'ha):(1'h0)] wire14;
  input wire [(3'h6):(1'h0)] wire13;
  input wire signed [(4'hb):(1'h0)] wire12;
  wire signed [(4'h9):(1'h0)] wire38;
  wire [(2'h3):(1'h0)] wire29;
  wire signed [(3'h4):(1'h0)] wire28;
  wire signed [(4'hb):(1'h0)] wire27;
  wire [(4'ha):(1'h0)] wire26;
  wire [(4'h8):(1'h0)] wire25;
  wire [(4'hb):(1'h0)] wire22;
  wire signed [(4'h9):(1'h0)] wire20;
  wire [(4'ha):(1'h0)] wire16;
  reg signed [(3'h4):(1'h0)] reg37 = (1'h0);
  reg [(3'h4):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg35 = (1'h0);
  reg [(4'h8):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg33 = (1'h0);
  reg [(3'h4):(1'h0)] reg32 = (1'h0);
  reg [(4'h9):(1'h0)] reg31 = (1'h0);
  reg [(4'hb):(1'h0)] reg30 = (1'h0);
  reg [(3'h5):(1'h0)] reg24 = (1'h0);
  reg [(2'h2):(1'h0)] reg23 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg21 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg19 = (1'h0);
  reg [(4'h9):(1'h0)] reg18 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg17 = (1'h0);
  assign y = {wire38,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire22,
                 wire20,
                 wire16,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg24,
                 reg23,
                 reg21,
                 reg19,
                 reg18,
                 reg17,
                 (1'h0)};
  assign wire16 = ({wire12[(3'h4):(1'h1)]} != {((wire14 ?
                          wire13 : wire14) ~^ (wire13 * wire12))});
  always
    @(posedge clk) begin
      reg17 <= ({wire16[(3'h5):(2'h3)]} ?
          (+$signed((wire16 ?
              wire13 : wire15))) : $unsigned($signed($signed((8'h9e)))));
      reg18 <= (^~(~^((~^wire14) ? {(8'h9c)} : ((8'ha5) >>> wire16))));
      reg19 <= $signed($signed(((|wire16) ? (+(8'haf)) : (^wire14))));
    end
  assign wire20 = {wire13};
  always
    @(posedge clk) begin
      reg21 <= wire12[(3'h5):(3'h4)];
    end
  assign wire22 = reg18[(2'h2):(2'h2)];
  always
    @(posedge clk) begin
      reg23 <= reg17;
      reg24 <= $unsigned((8'haf));
    end
  assign wire25 = ($unsigned(((~wire13) ^ ((8'had) >> (8'h9c)))) ?
                      (($signed(reg17) ? wire13[(2'h2):(2'h2)] : {wire20}) ?
                          ((~wire13) ?
                              wire12 : wire13[(3'h5):(2'h3)]) : reg21) : ($unsigned((|reg18)) ?
                          wire14[(4'h9):(4'h8)] : ($signed(reg24) ?
                              (reg24 ^ reg24) : (8'ha0))));
  assign wire26 = reg17;
  assign wire27 = (wire16 ?
                      $signed((wire26 || (wire13 ? (8'ha6) : wire20))) : reg19);
  assign wire28 = (wire12 ?
                      $signed(((^~reg21) ~^ (wire22 ?
                          wire15 : wire26))) : (wire16[(3'h7):(1'h1)] ?
                          (((8'ha7) ^~ wire26) && (wire26 ?
                              wire16 : reg18)) : ($unsigned(wire25) ?
                              {wire16} : $unsigned(wire14))));
  assign wire29 = {$signed($signed((-reg21)))};
  always
    @(posedge clk) begin
      if (((~|((~wire22) ?
          (wire20 ? wire16 : reg19) : (wire20 ?
              wire12 : reg24))) || $signed($signed(reg18))))
        begin
          reg30 <= wire27;
        end
      else
        begin
          reg30 <= $unsigned((wire25[(3'h5):(3'h4)] + wire20[(1'h1):(1'h0)]));
          if (reg18)
            begin
              reg31 <= wire28[(1'h1):(1'h1)];
              reg32 <= $signed(((((8'ha7) | reg21) ~^ $unsigned(reg31)) ?
                  (-reg24[(3'h5):(3'h4)]) : wire16[(3'h4):(1'h0)]));
            end
          else
            begin
              reg31 <= $signed((($signed(wire29) > (^~(8'had))) ?
                  (^$signed(wire15)) : $signed((wire16 < wire14))));
            end
          if (reg18[(4'h8):(1'h0)])
            begin
              reg33 <= $unsigned(reg32[(1'h1):(1'h0)]);
            end
          else
            begin
              reg33 <= (^~{{$unsigned(wire13)}});
              reg34 <= {$signed($signed((reg17 ? wire25 : wire14)))};
              reg35 <= wire20;
            end
        end
      reg36 <= {{wire14}};
      reg37 <= (8'hac);
    end
  assign wire38 = ($signed(reg36[(1'h1):(1'h0)]) & ($unsigned((reg23 ?
                          reg34 : wire28)) ?
                      $signed(((8'hac) ? wire27 : reg17)) : $signed(((8'ha7) ?
                          wire29 : wire29))));
endmodule