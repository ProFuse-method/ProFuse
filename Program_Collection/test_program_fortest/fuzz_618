(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h9b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire signed [(2'h2):(1'h0)] wire1;
  input wire signed [(2'h2):(1'h0)] wire0;
  wire signed [(3'h6):(1'h0)] wire23;
  wire [(4'hb):(1'h0)] wire22;
  wire signed [(4'hb):(1'h0)] wire21;
  wire [(4'h9):(1'h0)] wire20;
  wire [(4'hb):(1'h0)] wire19;
  wire [(3'h6):(1'h0)] wire18;
  wire [(4'h8):(1'h0)] wire17;
  wire [(2'h2):(1'h0)] wire16;
  wire signed [(4'h9):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire4;
  reg signed [(4'hb):(1'h0)] reg15 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg14 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg13 = (1'h0);
  reg [(4'ha):(1'h0)] reg12 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg11 = (1'h0);
  reg [(4'h8):(1'h0)] reg9 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg8 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg7 = (1'h0);
  reg [(4'hb):(1'h0)] reg6 = (1'h0);
  reg [(2'h3):(1'h0)] reg5 = (1'h0);
  assign y = {wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire10,
                 wire4,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg5,
                 (1'h0)};
  assign wire4 = $unsigned((~|$signed((!wire0))));
  always
    @(posedge clk) begin
      if (wire1)
        begin
          reg5 <= (wire2[(3'h6):(2'h2)] ~^ wire1[(1'h0):(1'h0)]);
          reg6 <= $unsigned((&(((8'h9d) ? wire4 : (8'h9d)) < $unsigned(reg5))));
          if ($unsigned(($unsigned((wire2 >= wire2)) < reg6)))
            begin
              reg7 <= $signed((|(|(wire3 ? wire1 : reg6))));
              reg8 <= (^(~((wire4 ? wire3 : (8'hb0)) ?
                  wire1[(1'h1):(1'h0)] : (wire4 >> wire3))));
              reg9 <= {wire2[(1'h1):(1'h1)]};
            end
          else
            begin
              reg7 <= {($signed($unsigned(wire3)) << ($signed(reg7) ?
                      (wire1 >>> reg7) : ((8'ha8) <<< wire4)))};
            end
        end
      else
        begin
          reg5 <= {reg9[(1'h1):(1'h0)]};
          reg6 <= ($unsigned((-wire4[(3'h4):(1'h1)])) < $signed((8'hac)));
          reg7 <= reg8;
        end
    end
  assign wire10 = (8'ha3);
  always
    @(posedge clk) begin
      reg11 <= $unsigned((((&wire3) ?
          wire0[(2'h2):(1'h0)] : ((8'ha8) << wire10)) ^ $unsigned($unsigned(reg5))));
    end
  always
    @(posedge clk) begin
      if (wire10[(2'h3):(1'h1)])
        begin
          reg12 <= {(~|(reg5 + (^~reg5)))};
          reg13 <= ($unsigned($unsigned((reg5 >>> wire10))) + {$signed($unsigned(wire1))});
          reg14 <= reg9;
        end
      else
        begin
          if (reg11[(3'h7):(1'h1)])
            begin
              reg12 <= $unsigned(((reg8[(2'h2):(1'h1)] != wire2) ?
                  (reg13[(1'h0):(1'h0)] ?
                      $signed(reg9) : $unsigned(reg11)) : $signed((+(8'hb0)))));
              reg13 <= ($unsigned((-(~reg12))) & {$signed((reg13 ^~ wire2))});
              reg14 <= ($signed(wire3[(1'h1):(1'h1)]) | ({reg12} - (+{wire10})));
            end
          else
            begin
              reg12 <= wire3;
              reg13 <= $unsigned($signed({((8'h9f) ? reg11 : wire1)}));
            end
          reg15 <= reg11;
        end
    end
  assign wire16 = ((((|(8'hac)) ?
                      reg13[(2'h3):(2'h3)] : {reg5}) & $signed($signed(reg13))) <<< ($unsigned($signed(reg11)) ?
                      (+$signed(wire1)) : (+((8'h9f) >>> (8'ha8)))));
  assign wire17 = (($signed((~&reg8)) ?
                      reg6 : (reg5 ?
                          wire1 : $unsigned(reg5))) || {$unsigned(wire2)});
  assign wire18 = ((reg5[(2'h2):(1'h0)] ?
                      $unsigned((!wire2)) : (reg9[(3'h4):(3'h4)] > (wire3 ?
                          reg8 : reg9))) * (($unsigned(wire2) ?
                      (wire17 >= (8'ha6)) : (reg15 & wire1)) && $signed($signed(reg5))));
  assign wire19 = $unsigned(wire3);
  assign wire20 = ($signed((reg15[(2'h2):(1'h1)] ?
                          (reg15 ? wire18 : reg11) : (8'hab))) ?
                      (($signed(reg7) * (reg14 && wire17)) ?
                          $unsigned((wire1 ?
                              reg5 : wire0)) : $signed((&wire1))) : $unsigned($unsigned((reg13 ?
                          reg7 : (8'ha3)))));
  assign wire21 = reg15[(2'h2):(2'h2)];
  assign wire22 = wire4[(4'h8):(2'h3)];
  assign wire23 = ({{(reg5 || reg8)}} & (~reg5[(2'h2):(1'h1)]));
endmodule