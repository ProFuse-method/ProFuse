(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param24 = ((8'hb0) ? (^~{((8'ha6) <<< (8'ha3))}) : {(~|(~&(8'hb0)))}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h6a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire2;
  input wire signed [(4'h9):(1'h0)] wire1;
  input wire [(2'h2):(1'h0)] wire0;
  wire [(2'h3):(1'h0)] wire14;
  wire signed [(2'h2):(1'h0)] wire13;
  wire [(4'h8):(1'h0)] wire12;
  wire [(3'h5):(1'h0)] wire11;
  wire signed [(4'h8):(1'h0)] wire10;
  wire [(2'h3):(1'h0)] wire9;
  wire [(3'h6):(1'h0)] wire8;
  wire [(3'h5):(1'h0)] wire7;
  wire signed [(2'h3):(1'h0)] wire6;
  reg signed [(2'h2):(1'h0)] reg23 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg22 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg21 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg20 = (1'h0);
  reg [(4'ha):(1'h0)] reg19 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg17 = (1'h0);
  reg [(3'h6):(1'h0)] reg16 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg15 = (1'h0);
  reg [(3'h5):(1'h0)] reg5 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg4 = (1'h0);
  assign y = {wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg5,
                 reg4,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg4 <= wire3[(3'h5):(2'h2)];
      reg5 <= $unsigned(wire0);
    end
  assign wire6 = $unsigned(reg4);
  assign wire7 = reg4;
  assign wire8 = ((+wire6) ?
                     {($signed(wire1) ?
                             $unsigned(wire7) : wire0[(1'h0):(1'h0)])} : {$signed((reg5 < wire7))});
  assign wire9 = wire2[(1'h1):(1'h1)];
  assign wire10 = $unsigned($signed(reg5[(2'h2):(1'h1)]));
  assign wire11 = wire0[(2'h2):(1'h0)];
  assign wire12 = (&$signed({$signed(wire10)}));
  assign wire13 = (^~$signed($unsigned({(8'had)})));
  assign wire14 = ((wire8[(2'h2):(2'h2)] * ({wire13} > (wire8 ^ wire7))) ?
                      (-(~&(wire3 < wire0))) : $signed(((wire12 | wire3) ?
                          (^~(8'ha4)) : (8'ha3))));
  always
    @(posedge clk) begin
      if ($signed(($unsigned({wire8}) ? $unsigned(wire11) : wire1)))
        begin
          reg15 <= $unsigned(wire2);
          reg16 <= wire7;
          reg17 <= $unsigned(($unsigned($unsigned(wire8)) || ({reg5} >= (^~wire12))));
        end
      else
        begin
          reg15 <= $unsigned(wire11[(3'h5):(2'h2)]);
          if (reg4)
            begin
              reg16 <= (~|(^~wire2[(1'h1):(1'h1)]));
            end
          else
            begin
              reg16 <= $signed($unsigned({((8'ha8) == wire11)}));
            end
        end
      if (((wire7[(2'h3):(2'h2)] || wire14) >> wire10[(1'h1):(1'h0)]))
        begin
          if ((wire14[(2'h2):(2'h2)] ?
              wire9[(1'h1):(1'h0)] : {(((8'h9f) ? wire9 : wire11) ?
                      {reg4} : $unsigned((8'ha3)))}))
            begin
              reg18 <= reg16;
            end
          else
            begin
              reg18 <= (&$signed(((~|reg15) * (wire8 & (8'ha4)))));
            end
          reg19 <= ($signed($unsigned(wire0[(1'h1):(1'h0)])) ?
              $unsigned($unsigned($signed(wire3))) : reg18);
        end
      else
        begin
          if ((~|($unsigned($signed(wire2)) ?
              (reg4[(3'h4):(2'h3)] < $signed(reg19)) : $signed($signed(wire12)))))
            begin
              reg18 <= (~&($signed((wire1 ?
                  wire13 : (8'ha0))) - $signed(reg4[(3'h4):(2'h2)])));
              reg19 <= reg17;
            end
          else
            begin
              reg18 <= wire8[(3'h6):(1'h0)];
              reg19 <= $unsigned(reg15[(3'h5):(3'h5)]);
            end
          reg20 <= (-wire9[(2'h3):(1'h1)]);
        end
      if (wire10)
        begin
          reg21 <= {$signed($signed($signed((8'ha0))))};
          reg22 <= ((wire1[(4'h8):(3'h5)] ?
                  (((8'ha1) >> wire2) & $signed(reg15)) : $unsigned(((8'ha7) == reg19))) ?
              (~&wire2[(2'h2):(1'h1)]) : wire6);
        end
      else
        begin
          reg21 <= {(~&wire9[(2'h2):(1'h0)])};
          reg22 <= (~^reg19[(4'ha):(3'h5)]);
          reg23 <= (&(&$unsigned((wire3 ? reg19 : reg17))));
        end
    end
endmodule