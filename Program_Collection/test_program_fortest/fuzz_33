(* use_dsp48="no" *) (* use_dsp="no" *) module top #(parameter param22 = (8'ha0)) (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire21;
  wire signed [(4'h8):(1'h0)] wire20;
  wire signed [(4'hb):(1'h0)] wire19;
  wire [(3'h5):(1'h0)] wire18;
  wire signed [(3'h7):(1'h0)] wire13;
  wire signed [(4'h9):(1'h0)] wire12;
  wire signed [(3'h7):(1'h0)] wire11;
  wire signed [(4'h9):(1'h0)] wire5;
  wire [(3'h6):(1'h0)] wire4;
  reg signed [(3'h6):(1'h0)] reg17 = (1'h0);
  reg [(3'h5):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg15 = (1'h0);
  reg [(3'h4):(1'h0)] reg14 = (1'h0);
  reg [(3'h7):(1'h0)] reg10 = (1'h0);
  reg [(3'h7):(1'h0)] reg9 = (1'h0);
  reg [(2'h2):(1'h0)] reg8 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg6 = (1'h0);
  assign y = {wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire13,
                 wire12,
                 wire11,
                 wire5,
                 wire4,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 (1'h0)};
  assign wire4 = $unsigned(wire2);
  assign wire5 = (8'ha0);
  always
    @(posedge clk) begin
      if ((-(8'h9e)))
        begin
          reg6 <= $unsigned((wire0[(1'h1):(1'h1)] << (+(wire0 ?
              wire1 : wire3))));
          reg7 <= (~|(wire5[(3'h4):(1'h1)] ?
              $signed((^reg6)) : (wire3 ? wire3[(4'h9):(1'h1)] : {(8'h9d)})));
          reg8 <= ({$signed($unsigned(wire5))} ?
              (wire0 ?
                  wire3[(1'h1):(1'h0)] : reg7[(3'h5):(3'h4)]) : (wire0[(3'h6):(1'h0)] ?
                  ($signed(wire0) ?
                      wire2[(3'h4):(1'h0)] : {wire3}) : $unsigned(wire2[(3'h6):(3'h6)])));
        end
      else
        begin
          reg6 <= $signed((-((wire0 & reg6) ? {wire5} : (8'ha7))));
        end
      reg9 <= $unsigned((8'h9d));
    end
  always
    @(posedge clk) begin
      reg10 <= reg7;
    end
  assign wire11 = $unsigned($unsigned($signed((wire2 ? wire3 : reg10))));
  assign wire12 = (((|$signed(wire11)) ?
                          (wire4 ?
                              (reg8 + wire1) : (wire11 < reg7)) : $signed((reg7 ?
                              wire3 : wire4))) ?
                      (~^(~(-wire0))) : $signed({$signed(wire2)}));
  assign wire13 = $signed($unsigned((~|(wire5 ? reg7 : reg7))));
  always
    @(posedge clk) begin
      reg14 <= (wire0[(1'h1):(1'h0)] ? (^$unsigned($unsigned(reg6))) : wire3);
      if ({(($unsigned(reg14) ? (8'had) : (+(8'hb0))) << reg10)})
        begin
          reg15 <= ($unsigned(($signed((8'h9c)) ?
              wire2[(1'h0):(1'h0)] : (~wire3))) < (8'ha0));
          reg16 <= $unsigned($signed(((reg14 ?
              wire3 : reg9) ^ $unsigned(wire13))));
        end
      else
        begin
          reg15 <= $unsigned(wire1[(1'h1):(1'h0)]);
          reg16 <= reg8[(1'h1):(1'h1)];
        end
      reg17 <= $unsigned(wire13);
    end
  assign wire18 = ((wire3 || reg9) ^ ((~|(~|wire3)) * $unsigned((~&reg10))));
  assign wire19 = {wire0};
  assign wire20 = (wire4[(1'h0):(1'h0)] ?
                      reg10 : $signed(($unsigned(wire0) ?
                          wire2 : $unsigned((8'ha3)))));
  assign wire21 = $unsigned((|$unsigned((wire2 ? reg15 : wire0))));
endmodule