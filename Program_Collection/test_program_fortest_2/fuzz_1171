(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param71 = ((((8'h9d) ~^ {((8'ha2) ? (7'h44) : (8'hb1)), ((8'hb8) ? (8'ha7) : (8'ha2))}) | ((~|(-(8'h9f))) | (((8'hae) ? (8'hbc) : (8'ha9)) ^ ((8'hb2) << (8'hb5))))) ? (({((8'h9e) >> (8'hb8)), (^(8'hae))} ? {((8'h9f) << (8'ha3)), (|(8'h9f))} : (~(|(7'h44)))) ? {((8'hb5) & (~^(8'hae))), (~^((7'h44) ? (8'h9c) : (8'hbd)))} : ({((8'haf) ? (8'ha7) : (8'ha6)), (8'haa)} ? (&((8'ha0) ? (8'hbc) : (8'haf))) : (~|{(8'ha7), (8'ha5)}))) : ({({(8'ha1), (8'hb5)} ? ((8'hb8) ? (8'ha4) : (8'hbb)) : (!(8'hb3)))} ? ((((8'ha1) <<< (7'h43)) ? {(8'hb5), (8'ha0)} : ((8'hbf) >>> (8'hb1))) ^~ (-{(8'hb2)})) : ({(~(8'ha0)), (&(8'ha9))} ? (+(|(7'h44))) : (((7'h40) ? (8'hb6) : (8'ha2)) ? {(8'hb1)} : ((8'hb4) && (8'hae)))))))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h8a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h10):(1'h0)] wire0;
  input wire [(5'h12):(1'h0)] wire1;
  input wire [(5'h15):(1'h0)] wire2;
  input wire signed [(3'h7):(1'h0)] wire3;
  wire [(4'h8):(1'h0)] wire70;
  wire [(3'h7):(1'h0)] wire69;
  wire [(5'h14):(1'h0)] wire68;
  wire [(4'he):(1'h0)] wire67;
  wire signed [(3'h5):(1'h0)] wire66;
  wire signed [(5'h13):(1'h0)] wire4;
  wire [(4'he):(1'h0)] wire5;
  wire signed [(5'h12):(1'h0)] wire6;
  wire [(5'h15):(1'h0)] wire7;
  wire signed [(4'hb):(1'h0)] wire64;
  assign y = {wire70,
                 wire69,
                 wire68,
                 wire67,
                 wire66,
                 wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire64,
                 (1'h0)};
  assign wire4 = $signed({(($unsigned(wire2) - {wire1}) ?
                         $signed(wire0[(1'h0):(1'h0)]) : $unsigned((~(7'h43))))});
  assign wire5 = $unsigned(((^((^wire1) ? $unsigned(wire1) : (8'hbb))) ?
                     {(8'h9d), $unsigned(wire0[(4'ha):(3'h6)])} : wire0));
  assign wire6 = {($unsigned(wire3[(2'h3):(1'h0)]) > {$signed(wire0[(2'h2):(2'h2)])})};
  assign wire7 = $signed((-(($signed(wire6) >= wire4[(5'h13):(5'h10)]) >>> ($signed((8'hb4)) >> (wire2 < wire6)))));
  module8 #() modinst65 (.wire10(wire0), .wire9(wire5), .clk(clk), .wire12(wire7), .wire13(wire2), .y(wire64), .wire11(wire1));
  assign wire66 = $signed((^wire2[(4'h8):(1'h0)]));
  assign wire67 = {wire64};
  assign wire68 = (~|(!(~|wire66)));
  assign wire69 = ({wire7[(4'he):(4'hd)]} ?
                      wire3[(1'h0):(1'h0)] : $unsigned(wire2));
  assign wire70 = wire6[(4'hd):(4'hd)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8
#(parameter param63 = ((((~&((8'hb4) * (8'haf))) ? (((8'hb4) ? (8'hb5) : (8'hbf)) ? {(7'h40)} : (~(8'hb1))) : (((8'h9c) ? (8'h9d) : (8'hb8)) ? ((7'h41) <<< (7'h44)) : ((7'h41) >= (8'hb4)))) ? (8'ha1) : (8'hb4)) ^ ((&(8'hb8)) || ((((8'hbd) ? (8'hb2) : (8'ha4)) ? {(7'h40)} : (~|(8'ha6))) ? (((8'hbf) ? (8'ha7) : (8'hb0)) ? (~|(8'ha4)) : ((8'hbc) ? (8'ha6) : (8'hb0))) : (((8'hac) | (8'ha3)) | {(8'hb1), (8'ha5)})))))
(y, clk, wire13, wire12, wire11, wire10, wire9);
  output wire [(32'h14a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h15):(1'h0)] wire13;
  input wire signed [(5'h15):(1'h0)] wire12;
  input wire [(4'he):(1'h0)] wire11;
  input wire [(5'h10):(1'h0)] wire10;
  input wire signed [(3'h7):(1'h0)] wire9;
  wire signed [(3'h4):(1'h0)] wire62;
  wire [(5'h14):(1'h0)] wire59;
  wire [(5'h10):(1'h0)] wire58;
  wire [(4'hb):(1'h0)] wire57;
  wire signed [(4'h8):(1'h0)] wire55;
  wire [(4'he):(1'h0)] wire27;
  wire [(5'h14):(1'h0)] wire26;
  wire [(3'h5):(1'h0)] wire24;
  reg signed [(4'hf):(1'h0)] reg29 = (1'h0);
  reg signed [(4'he):(1'h0)] reg30 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg34 = (1'h0);
  reg [(5'h15):(1'h0)] reg36 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg37 = (1'h0);
  reg [(5'h14):(1'h0)] reg40 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg61 = (1'h0);
  reg [(5'h11):(1'h0)] forvar60 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar39 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg38 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg35 = (1'h0);
  reg [(3'h7):(1'h0)] reg33 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg32 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg31 = (1'h0);
  reg [(5'h10):(1'h0)] forvar28 = (1'h0);
  assign y = {wire62,
                 wire59,
                 wire58,
                 wire57,
                 wire55,
                 wire27,
                 wire26,
                 wire24,
                 reg29,
                 reg30,
                 reg34,
                 reg36,
                 reg37,
                 reg40,
                 reg41,
                 reg61,
                 forvar60,
                 forvar39,
                 reg38,
                 reg35,
                 reg33,
                 reg32,
                 reg31,
                 forvar28,
                 (1'h0)};
  module14 #() modinst25 (wire24, clk, wire12, wire10, wire13, wire11);
  assign wire26 = wire24;
  assign wire27 = ({$unsigned(wire11), wire12[(5'h15):(5'h11)]} ?
                      $unsigned($unsigned((|(!(7'h44))))) : ($signed($unsigned({wire11})) - (wire26 && $signed($signed(wire26)))));
  always
    @(posedge clk) begin
      for (forvar28 = (1'h0); (forvar28 < (1'h1)); forvar28 = (forvar28 + (1'h1)))
        begin
          reg29 <= forvar28;
          if ((^~wire12[(5'h12):(5'h10)]))
            begin
              reg30 <= $signed((wire26 ?
                  wire13[(5'h15):(4'hb)] : $unsigned((8'hab))));
              reg31 = wire12[(4'ha):(4'ha)];
              reg32 = $unsigned($unsigned($signed(wire24[(1'h1):(1'h0)])));
              reg33 = forvar28;
              reg34 <= (!{$unsigned(forvar28[(4'hb):(4'hb)]),
                  $signed(((!wire26) ~^ (7'h43)))});
            end
          else
            begin
              reg31 = (~((wire13[(1'h1):(1'h1)] ?
                      reg33[(2'h3):(2'h3)] : ({wire11,
                          reg31} < $unsigned(reg33))) ?
                  ((wire11 ?
                      {wire9} : ((8'ha9) < reg32)) >= (|$signed(wire13))) : $unsigned((^reg30[(4'he):(4'he)]))));
              reg34 <= (!wire13[(5'h11):(4'hb)]);
              reg35 = $unsigned((reg29[(4'hf):(1'h0)] ?
                  (((reg31 >> wire24) * (-wire27)) << (~^$signed(reg29))) : (wire10 + ((wire24 >> (8'ha6)) ^~ (reg33 ?
                      wire10 : reg29)))));
              reg36 <= $signed(wire9);
              reg37 <= reg30[(4'ha):(3'h4)];
            end
          reg38 = $unsigned((wire13[(4'hb):(3'h5)] > wire10[(4'hc):(3'h4)]));
          for (forvar39 = (1'h0); (forvar39 < (2'h3)); forvar39 = (forvar39 + (1'h1)))
            begin
              reg40 <= ($unsigned(reg35) ?
                  (reg31[(5'h12):(2'h3)] ^~ {reg37[(2'h3):(2'h3)]}) : $unsigned((reg32 ?
                      wire11 : $signed({wire26, wire11}))));
            end
        end
      reg41 <= ($signed($signed(wire24)) ?
          (~^{$unsigned($unsigned(reg33)),
              $unsigned(reg38)}) : $signed((-wire10)));
    end
  module42 #() modinst56 (.wire44(wire26), .wire43(wire27), .wire45(reg40), .wire46(reg30), .y(wire55), .clk(clk), .wire47(reg34));
  assign wire57 = $signed({{$signed(wire12), $signed({(8'h9e), reg29})}});
  assign wire58 = $signed({(~|(wire55[(2'h3):(2'h3)] ?
                          reg29[(4'ha):(4'h9)] : (reg41 & wire24)))});
  assign wire59 = wire55[(2'h3):(2'h3)];
  always
    @(posedge clk) begin
      for (forvar60 = (1'h0); (forvar60 < (2'h3)); forvar60 = (forvar60 + (1'h1)))
        begin
          reg61 = (8'h9c);
        end
    end
  assign wire62 = ((^wire58) ~^ {wire13, $unsigned($unsigned(wire26))});
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module42
#(parameter param54 = (^~({(~|((8'ha7) ? (8'hac) : (8'hb9))), (((8'hba) > (8'hbf)) || ((8'had) ? (8'ha9) : (8'hbe)))} < ((((8'hbb) * (8'ha1)) ? (^(8'hbf)) : ((8'hac) ? (8'h9c) : (8'hb8))) < {{(8'ha5)}}))))
(y, clk, wire47, wire46, wire45, wire44, wire43);
  output wire [(32'h4c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h3):(1'h0)] wire47;
  input wire [(4'hd):(1'h0)] wire46;
  input wire signed [(5'h14):(1'h0)] wire45;
  input wire signed [(5'h14):(1'h0)] wire44;
  input wire [(4'he):(1'h0)] wire43;
  wire [(5'h14):(1'h0)] wire53;
  wire signed [(4'ha):(1'h0)] wire52;
  wire [(4'hb):(1'h0)] wire51;
  wire [(5'h10):(1'h0)] wire50;
  wire [(3'h5):(1'h0)] wire49;
  wire signed [(4'hd):(1'h0)] wire48;
  assign y = {wire53, wire52, wire51, wire50, wire49, wire48, (1'h0)};
  assign wire48 = ((wire44 ?
                          (wire43[(4'hd):(4'h8)] ?
                              (|(~|wire44)) : $unsigned((wire44 >>> wire44))) : {(wire46 ?
                                  $signed(wire47) : (wire45 ?
                                      wire46 : wire46))}) ?
                      (+wire44) : ($unsigned(((^~wire45) ?
                          (~^wire46) : {wire45,
                              wire43})) ^~ wire47[(2'h3):(1'h0)]));
  assign wire49 = (~&{$signed(wire48)});
  assign wire50 = (^(wire44[(4'he):(4'hc)] > ($unsigned((wire43 ?
                      wire47 : wire43)) < ((wire44 >>> wire48) >= (wire44 && wire45)))));
  assign wire51 = {$signed({(^~(~&wire44))}), wire43[(4'ha):(3'h5)]};
  assign wire52 = $signed(wire46[(3'h4):(2'h3)]);
  assign wire53 = $signed($unsigned(wire50[(3'h7):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module14  (y, clk, wire18, wire17, wire16, wire15);
  output wire [(32'h3a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h6):(1'h0)] wire18;
  input wire signed [(4'h8):(1'h0)] wire17;
  input wire signed [(5'h15):(1'h0)] wire16;
  input wire signed [(4'hc):(1'h0)] wire15;
  wire [(4'he):(1'h0)] wire23;
  wire signed [(4'ha):(1'h0)] wire22;
  wire signed [(5'h10):(1'h0)] wire21;
  wire signed [(4'he):(1'h0)] wire20;
  wire signed [(2'h3):(1'h0)] wire19;
  assign y = {wire23, wire22, wire21, wire20, wire19, (1'h0)};
  assign wire19 = wire18[(2'h2):(1'h1)];
  assign wire20 = ($unsigned(($unsigned((wire16 <<< wire16)) ?
                      {{wire16}} : (^$signed(wire18)))) - wire18[(3'h6):(3'h4)]);
  assign wire21 = (^~$unsigned($signed(((wire17 ? wire16 : wire15) ?
                      (-wire15) : (~&wire15)))));
  assign wire22 = ($unsigned($signed(wire21)) || $unsigned((wire15 < $signed(wire20[(4'ha):(1'h1)]))));
  assign wire23 = (^$unsigned({wire16[(4'hb):(3'h7)],
                      (((8'ha0) ? wire15 : (8'hb1)) ^~ (wire18 < wire22))}));
endmodule