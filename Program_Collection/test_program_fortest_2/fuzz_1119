(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param216 = (~(^(({(8'hbb)} < ((8'hb8) || (8'ha9))) ? (~^((8'hab) >>> (8'ha7))) : ((8'ha8) ? (8'ha7) : {(8'ha4)})))))
(y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h371):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h15):(1'h0)] wire4;
  input wire [(2'h3):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire [(5'h13):(1'h0)] wire1;
  input wire [(5'h14):(1'h0)] wire0;
  wire [(5'h12):(1'h0)] wire214;
  wire signed [(2'h2):(1'h0)] wire213;
  wire signed [(5'h15):(1'h0)] wire212;
  wire [(3'h6):(1'h0)] wire211;
  wire [(4'hc):(1'h0)] wire210;
  wire signed [(3'h7):(1'h0)] wire209;
  wire [(5'h12):(1'h0)] wire207;
  wire [(4'ha):(1'h0)] wire33;
  wire [(5'h10):(1'h0)] wire32;
  wire [(4'hb):(1'h0)] wire31;
  wire [(4'hc):(1'h0)] wire6;
  wire signed [(2'h2):(1'h0)] wire5;
  reg signed [(4'ha):(1'h0)] reg74 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg73 = (1'h0);
  reg [(4'hd):(1'h0)] reg70 = (1'h0);
  reg [(3'h4):(1'h0)] reg68 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg67 = (1'h0);
  reg [(2'h2):(1'h0)] reg64 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg63 = (1'h0);
  reg [(5'h11):(1'h0)] reg62 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg56 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg54 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg51 = (1'h0);
  reg [(5'h14):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg49 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg43 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg42 = (1'h0);
  reg [(2'h3):(1'h0)] reg41 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg40 = (1'h0);
  reg [(5'h13):(1'h0)] reg35 = (1'h0);
  reg [(4'hb):(1'h0)] reg34 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg28 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg27 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg26 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg25 = (1'h0);
  reg [(2'h2):(1'h0)] reg24 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg22 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg21 = (1'h0);
  reg [(4'h9):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg16 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg11 = (1'h0);
  reg [(4'h9):(1'h0)] reg215 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg72 = (1'h0);
  reg signed [(4'he):(1'h0)] reg71 = (1'h0);
  reg [(4'h9):(1'h0)] forvar69 = (1'h0);
  reg [(4'hd):(1'h0)] forvar66 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg65 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar61 = (1'h0);
  reg [(4'h9):(1'h0)] reg60 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg59 = (1'h0);
  reg [(4'he):(1'h0)] reg58 = (1'h0);
  reg [(4'ha):(1'h0)] forvar57 = (1'h0);
  reg [(5'h14):(1'h0)] forvar53 = (1'h0);
  reg [(5'h11):(1'h0)] forvar52 = (1'h0);
  reg [(5'h15):(1'h0)] reg48 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar47 = (1'h0);
  reg [(3'h6):(1'h0)] reg45 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar44 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg39 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar38 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar37 = (1'h0);
  reg [(4'hf):(1'h0)] reg36 = (1'h0);
  reg [(5'h13):(1'h0)] reg30 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar29 = (1'h0);
  reg [(4'hf):(1'h0)] forvar23 = (1'h0);
  reg [(2'h3):(1'h0)] forvar19 = (1'h0);
  reg [(4'hf):(1'h0)] forvar18 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg17 = (1'h0);
  reg [(4'hc):(1'h0)] reg15 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg14 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar13 = (1'h0);
  reg [(4'hb):(1'h0)] reg12 = (1'h0);
  reg [(3'h6):(1'h0)] reg10 = (1'h0);
  reg [(3'h4):(1'h0)] forvar9 = (1'h0);
  reg [(5'h11):(1'h0)] forvar8 = (1'h0);
  reg [(4'hf):(1'h0)] reg7 = (1'h0);
  assign y = {wire214,
                 wire213,
                 wire212,
                 wire211,
                 wire210,
                 wire209,
                 wire207,
                 wire33,
                 wire32,
                 wire31,
                 wire6,
                 wire5,
                 reg74,
                 reg73,
                 reg70,
                 reg68,
                 reg67,
                 reg64,
                 reg63,
                 reg62,
                 reg56,
                 reg55,
                 reg54,
                 reg51,
                 reg50,
                 reg49,
                 reg46,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg35,
                 reg34,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg24,
                 reg22,
                 reg21,
                 reg20,
                 reg16,
                 reg11,
                 reg215,
                 reg72,
                 reg71,
                 forvar69,
                 forvar66,
                 reg65,
                 forvar61,
                 reg60,
                 reg59,
                 reg58,
                 forvar57,
                 forvar53,
                 forvar52,
                 reg48,
                 forvar47,
                 reg45,
                 forvar44,
                 reg39,
                 forvar38,
                 forvar37,
                 reg36,
                 reg30,
                 forvar29,
                 forvar23,
                 forvar19,
                 forvar18,
                 reg17,
                 reg15,
                 reg14,
                 forvar13,
                 reg12,
                 reg10,
                 forvar9,
                 forvar8,
                 reg7,
                 (1'h0)};
  assign wire5 = ($unsigned((((~^wire3) ?
                         $unsigned(wire2) : ((8'hbb) < wire0)) ?
                     $signed((wire0 < wire2)) : (wire2 >= (wire0 ?
                         wire0 : wire4)))) != ((({wire4} & (wire4 == wire1)) ?
                     wire0 : (~$unsigned((8'hb5)))) >>> (&($signed(wire2) ?
                     ((7'h42) ? wire3 : (8'hb9)) : wire2[(3'h4):(2'h2)]))));
  assign wire6 = {$signed((wire2 | $signed(((8'ha2) ~^ wire2)))), (^wire4)};
  always
    @(posedge clk) begin
      reg7 = $unsigned((^wire4[(4'hd):(1'h0)]));
      for (forvar8 = (1'h0); (forvar8 < (3'h4)); forvar8 = (forvar8 + (1'h1)))
        begin
          for (forvar9 = (1'h0); (forvar9 < (2'h3)); forvar9 = (forvar9 + (1'h1)))
            begin
              reg10 = ((+((wire1 ?
                      $signed(forvar9) : $signed(forvar9)) * ((|reg7) ?
                      forvar9[(1'h0):(1'h0)] : (wire2 < (8'hb3))))) ?
                  wire2[(2'h3):(2'h3)] : ((((wire0 ? wire1 : wire3) >>> (wire4 ?
                          (7'h44) : forvar8)) > $signed($signed(wire4))) ?
                      forvar9 : $signed(($signed(wire1) - wire5[(2'h2):(2'h2)]))));
              reg11 <= wire4;
              reg12 = (wire1 | $signed($signed(($unsigned(forvar9) ?
                  reg7 : reg10))));
            end
          for (forvar13 = (1'h0); (forvar13 < (2'h2)); forvar13 = (forvar13 + (1'h1)))
            begin
              reg14 = $signed((&wire6));
              reg15 = ((((~|(wire4 && wire3)) | $unsigned($unsigned(reg7))) || (~^wire5)) ?
                  wire2 : (~(~forvar9)));
              reg16 <= ((+(~{$signed(wire3)})) ?
                  (^~{$unsigned((^(8'hbf)))}) : $signed($signed((!reg7))));
            end
        end
      reg17 = (($signed(wire5) ?
              (($signed(forvar9) ? $signed((8'ha6)) : (wire5 - wire5)) ?
                  reg15[(4'hc):(3'h4)] : (forvar13 | ((8'hb0) || wire0))) : (~$unsigned($unsigned(forvar9)))) ?
          ((($signed(wire1) && (^wire6)) || reg11) > (reg11 - {reg16[(1'h1):(1'h1)]})) : ({reg11[(2'h2):(2'h2)],
                  wire3} ?
              $signed($unsigned($unsigned(reg14))) : $signed(reg7[(3'h5):(1'h0)])));
      for (forvar18 = (1'h0); (forvar18 < (1'h1)); forvar18 = (forvar18 + (1'h1)))
        begin
          for (forvar19 = (1'h0); (forvar19 < (1'h0)); forvar19 = (forvar19 + (1'h1)))
            begin
              reg20 <= $signed((~&reg10));
              reg21 <= (reg14 | (($unsigned({reg7}) ^~ ((7'h43) ?
                      forvar8[(4'hc):(4'hc)] : (~&(8'ha9)))) ?
                  $signed({wire4[(5'h13):(4'he)]}) : reg10));
              reg22 <= $signed(forvar8);
            end
          for (forvar23 = (1'h0); (forvar23 < (2'h3)); forvar23 = (forvar23 + (1'h1)))
            begin
              reg24 <= reg7[(3'h6):(3'h6)];
              reg25 <= reg22;
              reg26 <= (reg25[(4'ha):(3'h5)] ?
                  wire3[(1'h1):(1'h0)] : (&(~$signed(reg25[(2'h2):(2'h2)]))));
            end
          reg27 <= wire4;
          reg28 <= ((wire6[(3'h5):(1'h1)] ?
              reg11 : ($unsigned(reg16[(2'h2):(1'h0)]) ?
                  (8'ha0) : ((+forvar23) ?
                      reg17 : $unsigned((8'hbc))))) >>> forvar23);
        end
      for (forvar29 = (1'h0); (forvar29 < (1'h1)); forvar29 = (forvar29 + (1'h1)))
        begin
          reg30 = reg26[(1'h0):(1'h0)];
        end
    end
  assign wire31 = reg21;
  assign wire32 = (|$signed((-((wire31 == wire1) ?
                      (+reg27) : $signed(reg27)))));
  assign wire33 = (+(~^($signed($signed(wire2)) ?
                      ($unsigned(reg22) ?
                          (~wire5) : (wire6 >> reg24)) : reg20[(2'h3):(1'h1)])));
  always
    @(posedge clk) begin
      reg34 <= wire32;
      reg35 <= ($unsigned(($unsigned({wire1}) != wire5[(1'h0):(1'h0)])) - reg34[(2'h2):(2'h2)]);
      reg36 = ({$signed(($unsigned(reg35) ? wire33 : (|reg26)))} ^ ((((wire31 ?
              wire32 : wire6) && (|(8'haf))) ?
          {(-reg21), wire3} : ((reg34 ? wire3 : reg34) ?
              (reg21 ?
                  wire0 : (8'hb9)) : $unsigned(reg16))) >> $unsigned((^reg21))));
      for (forvar37 = (1'h0); (forvar37 < (3'h4)); forvar37 = (forvar37 + (1'h1)))
        begin
          for (forvar38 = (1'h0); (forvar38 < (2'h2)); forvar38 = (forvar38 + (1'h1)))
            begin
              reg39 = ($unsigned(reg11[(4'h9):(3'h6)]) & {($unsigned(reg11[(3'h7):(3'h7)]) ?
                      wire6[(2'h2):(2'h2)] : wire2),
                  reg27});
              reg40 <= $unsigned(wire4);
              reg41 <= $unsigned(wire2[(3'h6):(3'h6)]);
              reg42 <= (((~|{(wire0 & reg20)}) ?
                  wire6 : (~^($unsigned(reg22) * $signed(reg41)))) || {reg21});
            end
          reg43 <= ((wire33 > $unsigned($unsigned($signed((8'haf))))) ?
              $unsigned(reg36) : $unsigned($signed(reg26[(1'h1):(1'h1)])));
          for (forvar44 = (1'h0); (forvar44 < (2'h3)); forvar44 = (forvar44 + (1'h1)))
            begin
              reg45 = wire4;
            end
          reg46 <= $signed(reg35);
          for (forvar47 = (1'h0); (forvar47 < (2'h2)); forvar47 = (forvar47 + (1'h1)))
            begin
              reg48 = (wire32[(2'h2):(1'h1)] >> forvar47[(2'h2):(2'h2)]);
              reg49 <= (reg11 - ((7'h40) ?
                  reg45 : $unsigned($unsigned($signed(reg16)))));
              reg50 <= forvar37[(4'h8):(1'h1)];
              reg51 <= $signed($signed((-($signed(wire3) ?
                  $unsigned(reg21) : (+reg20)))));
            end
        end
      for (forvar52 = (1'h0); (forvar52 < (3'h4)); forvar52 = (forvar52 + (1'h1)))
        begin
          for (forvar53 = (1'h0); (forvar53 < (1'h1)); forvar53 = (forvar53 + (1'h1)))
            begin
              reg54 <= $signed(wire6[(4'h9):(3'h5)]);
              reg55 <= {reg28[(1'h0):(1'h0)]};
              reg56 <= $unsigned((^(|(forvar38 ?
                  $unsigned(forvar37) : reg11))));
            end
          for (forvar57 = (1'h0); (forvar57 < (2'h3)); forvar57 = (forvar57 + (1'h1)))
            begin
              reg58 = (8'ha7);
              reg59 = (($signed($unsigned(reg20)) ?
                  (7'h40) : $signed(($signed(reg21) + reg26))) == {{wire33[(2'h3):(1'h1)]}});
            end
          reg60 = $signed(reg25);
          for (forvar61 = (1'h0); (forvar61 < (1'h0)); forvar61 = (forvar61 + (1'h1)))
            begin
              reg62 <= $unsigned(($unsigned((&$signed(forvar52))) ?
                  (wire0 ?
                      ($signed((8'ha1)) ?
                          (forvar44 ?
                              (8'hb5) : reg48) : $signed(wire33)) : reg48[(3'h6):(3'h4)]) : (($unsigned(wire2) > {reg16}) ?
                      $signed(reg48[(3'h4):(3'h4)]) : ($signed(reg58) ?
                          {wire31, reg16} : (forvar47 ? reg60 : wire5)))));
              reg63 <= (reg36 + $signed(forvar37[(4'he):(2'h2)]));
            end
          reg64 <= $unsigned((+(reg51 ? forvar53 : reg42)));
        end
    end
  always
    @(posedge clk) begin
      reg65 = (((8'hb3) ?
          (((reg21 - reg21) ? (reg46 - reg46) : reg55) ?
              reg51 : wire31) : reg20[(3'h4):(3'h4)]) << ((reg46 | $signed((reg50 ?
          reg35 : wire6))) * reg27[(2'h2):(1'h0)]));
      for (forvar66 = (1'h0); (forvar66 < (1'h1)); forvar66 = (forvar66 + (1'h1)))
        begin
          reg67 <= $signed((reg22[(1'h1):(1'h0)] * $unsigned((!$unsigned(wire0)))));
          reg68 <= reg67[(3'h4):(3'h4)];
          for (forvar69 = (1'h0); (forvar69 < (2'h3)); forvar69 = (forvar69 + (1'h1)))
            begin
              reg70 <= ((~(($unsigned(reg40) < reg63) - wire1[(4'hb):(4'ha)])) ?
                  wire31[(3'h6):(3'h6)] : (~&($unsigned(reg49[(2'h2):(2'h2)]) ?
                      reg34 : reg67[(1'h1):(1'h1)])));
              reg71 = ($signed($unsigned((8'hae))) || reg51[(4'h8):(3'h6)]);
              reg72 = ($signed($unsigned($unsigned(reg35))) & reg25);
              reg73 <= reg50[(3'h7):(2'h3)];
              reg74 <= ($unsigned(reg22[(3'h7):(1'h1)]) <= $signed(({reg26,
                      (^~(7'h42))} ?
                  (&$signed(forvar69)) : $unsigned({reg54}))));
            end
        end
    end
  module75 #() modinst208 (.y(wire207), .wire76(reg35), .wire78(reg22), .clk(clk), .wire79(wire32), .wire77(wire2));
  assign wire209 = $signed({(+(^~(&wire207)))});
  assign wire210 = ((^~wire207) | $signed($signed(((wire209 ? wire209 : reg26) ?
                       $unsigned(reg24) : (reg27 ^~ reg43)))));
  assign wire211 = (reg68[(2'h2):(1'h1)] == wire1[(4'hf):(3'h5)]);
  assign wire212 = wire31[(4'hb):(1'h1)];
  assign wire213 = $unsigned($signed((-((reg67 ? reg43 : reg21) ?
                       (reg64 & reg70) : (reg74 && reg11)))));
  assign wire214 = {(wire212[(4'hf):(1'h0)] != reg70)};
  always
    @(posedge clk) begin
      reg215 = reg56;
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module75
#(parameter param206 = (+(8'ha1)))
(y, clk, wire79, wire78, wire77, wire76);
  output wire [(32'h55):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h10):(1'h0)] wire79;
  input wire signed [(4'hd):(1'h0)] wire78;
  input wire signed [(3'h4):(1'h0)] wire77;
  input wire [(4'hd):(1'h0)] wire76;
  wire [(4'hd):(1'h0)] wire156;
  wire signed [(3'h4):(1'h0)] wire84;
  wire signed [(5'h15):(1'h0)] wire83;
  wire signed [(4'hb):(1'h0)] wire82;
  wire [(5'h11):(1'h0)] wire81;
  wire signed [(4'hf):(1'h0)] wire80;
  wire [(2'h3):(1'h0)] wire204;
  assign y = {wire156, wire84, wire83, wire82, wire81, wire80, wire204, (1'h0)};
  assign wire80 = wire76;
  assign wire81 = (&wire80[(1'h0):(1'h0)]);
  assign wire82 = $signed(wire78);
  assign wire83 = ((((^~(~|(8'h9f))) ?
                              $signed((wire79 + wire81)) : {{wire76},
                                  (wire80 ~^ wire82)}) ?
                          ({(|wire82)} ?
                              $signed((wire79 < wire82)) : {{wire79}}) : $signed((~^$signed(wire77)))) ?
                      ($unsigned(wire77[(3'h4):(3'h4)]) ?
                          $signed((~$unsigned(wire77))) : $unsigned(wire82[(2'h2):(1'h0)])) : ($unsigned(($unsigned(wire81) & wire76[(2'h3):(1'h1)])) ?
                          {($unsigned(wire82) - {(7'h43)}),
                              (((7'h41) >> wire82) ?
                                  {wire77} : (wire76 == wire78))} : wire78));
  assign wire84 = (&(($signed({(7'h41), wire83}) && ((~|(8'haf)) ?
                      (wire79 ?
                          wire76 : wire82) : {wire76})) && wire79[(3'h7):(3'h6)]));
  module85 #() modinst157 (wire156, clk, wire76, wire78, wire84, wire83, wire79);
  module158 #() modinst205 (.wire163(wire79), .wire161(wire82), .wire162(wire84), .clk(clk), .wire159(wire83), .y(wire204), .wire160(wire76));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module158
#(parameter param202 = ((((((8'h9f) ~^ (8'hb6)) ? ((8'hb0) ? (8'h9d) : (8'hbb)) : (8'ha5)) | ((~^(7'h41)) ^~ {(8'hae), (8'ha8)})) ? (((~^(8'haa)) == (~^(8'hb5))) ? (^{(8'ha1)}) : {((8'ha7) ? (8'ha0) : (8'hbe)), {(8'hae), (8'ha3)}}) : (~^(((8'had) != (8'hba)) ~^ ((8'hb5) ? (8'ha1) : (8'hb7))))) ? (((((8'ha1) ? (8'haa) : (8'ha7)) ? ((7'h41) ? (8'ha4) : (8'hb2)) : ((8'hb2) >> (8'hb2))) && ((&(8'hb2)) ? (~|(8'h9f)) : ((8'hb9) ? (8'haf) : (8'ha3)))) >= (7'h40)) : (((((8'hb0) ? (8'ha0) : (8'haf)) ? (~|(8'hbc)) : ((8'ha5) | (8'haf))) ? (+((8'hab) <<< (8'h9c))) : ((~(8'ha3)) != ((8'hb5) - (8'hb2)))) | {(~|(~(8'hbc)))})), 
parameter param203 = (param202 && {{(+(param202 ? param202 : param202)), (param202 ? (~&(8'hac)) : ((8'ha0) || param202))}, ((~^(param202 ^~ param202)) ^~ ((param202 ? param202 : param202) | {param202}))}))
(y, clk, wire163, wire162, wire161, wire160, wire159);
  output wire [(32'h19f):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h5):(1'h0)] wire163;
  input wire signed [(2'h3):(1'h0)] wire162;
  input wire [(4'hb):(1'h0)] wire161;
  input wire [(4'hb):(1'h0)] wire160;
  input wire [(4'h8):(1'h0)] wire159;
  wire signed [(5'h12):(1'h0)] wire201;
  wire [(2'h2):(1'h0)] wire200;
  wire [(5'h13):(1'h0)] wire199;
  wire [(3'h6):(1'h0)] wire198;
  wire signed [(2'h3):(1'h0)] wire197;
  wire [(3'h5):(1'h0)] wire195;
  wire signed [(5'h11):(1'h0)] wire194;
  wire [(4'h9):(1'h0)] wire193;
  wire [(3'h4):(1'h0)] wire192;
  wire signed [(5'h12):(1'h0)] wire191;
  wire [(4'ha):(1'h0)] wire190;
  wire signed [(5'h14):(1'h0)] wire189;
  wire [(3'h4):(1'h0)] wire188;
  wire signed [(3'h7):(1'h0)] wire187;
  wire [(5'h14):(1'h0)] wire186;
  wire signed [(4'hd):(1'h0)] wire168;
  wire [(4'ha):(1'h0)] wire167;
  wire [(2'h2):(1'h0)] wire166;
  wire signed [(5'h10):(1'h0)] wire165;
  wire signed [(4'ha):(1'h0)] wire164;
  reg [(5'h13):(1'h0)] reg196 = (1'h0);
  reg signed [(4'he):(1'h0)] reg184 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg181 = (1'h0);
  reg [(2'h2):(1'h0)] reg180 = (1'h0);
  reg [(4'h9):(1'h0)] reg179 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg178 = (1'h0);
  reg [(3'h6):(1'h0)] reg176 = (1'h0);
  reg [(3'h5):(1'h0)] reg173 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg172 = (1'h0);
  reg [(4'h8):(1'h0)] reg185 = (1'h0);
  reg [(4'ha):(1'h0)] reg183 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar182 = (1'h0);
  reg [(4'h9):(1'h0)] forvar177 = (1'h0);
  reg [(4'hf):(1'h0)] reg175 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg174 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg171 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar170 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar169 = (1'h0);
  assign y = {wire201,
                 wire200,
                 wire199,
                 wire198,
                 wire197,
                 wire195,
                 wire194,
                 wire193,
                 wire192,
                 wire191,
                 wire190,
                 wire189,
                 wire188,
                 wire187,
                 wire186,
                 wire168,
                 wire167,
                 wire166,
                 wire165,
                 wire164,
                 reg196,
                 reg184,
                 reg181,
                 reg180,
                 reg179,
                 reg178,
                 reg176,
                 reg173,
                 reg172,
                 reg185,
                 reg183,
                 forvar182,
                 forvar177,
                 reg175,
                 reg174,
                 reg171,
                 forvar170,
                 forvar169,
                 (1'h0)};
  assign wire164 = $unsigned((wire163 ?
                       (($unsigned(wire159) ?
                           wire162[(1'h1):(1'h1)] : $unsigned(wire159)) ~^ wire160[(1'h0):(1'h0)]) : $unsigned((-(|(8'hb6))))));
  assign wire165 = (((wire159 ?
                       {$signed((7'h43)),
                           (wire159 ?
                               wire163 : wire159)} : $unsigned($unsigned(wire160))) > ($signed($signed(wire164)) ?
                       $unsigned($unsigned(wire164)) : ((~&(8'hb7)) ?
                           $signed(wire163) : wire160[(1'h1):(1'h0)]))) ^ wire160);
  assign wire166 = wire161;
  assign wire167 = $unsigned(wire162[(2'h3):(2'h2)]);
  assign wire168 = (wire167 ?
                       (~(wire161 ?
                           (+wire160[(4'h9):(4'h8)]) : (~^$signed(wire159)))) : (wire165[(4'hc):(4'hc)] >>> wire163));
  always
    @(posedge clk) begin
      for (forvar169 = (1'h0); (forvar169 < (2'h2)); forvar169 = (forvar169 + (1'h1)))
        begin
          for (forvar170 = (1'h0); (forvar170 < (2'h2)); forvar170 = (forvar170 + (1'h1)))
            begin
              reg171 = $unsigned({(^~forvar169)});
              reg172 <= (~^wire159[(4'h8):(2'h2)]);
              reg173 <= $signed(((~$signed(((7'h43) ? forvar170 : (8'haf)))) ?
                  {((8'h9e) ?
                          $unsigned(wire168) : $unsigned(forvar169))} : (((wire166 != wire163) ?
                      $unsigned(wire160) : (wire161 ?
                          wire164 : wire167)) ^~ wire159)));
              reg174 = $signed(wire164);
            end
          if (reg171)
            begin
              reg175 = reg174[(4'hd):(4'h9)];
              reg176 <= ($signed({(wire165 & $unsigned(wire167))}) ^ {wire160});
            end
          else
            begin
              reg175 = wire166[(2'h2):(1'h1)];
            end
          for (forvar177 = (1'h0); (forvar177 < (2'h3)); forvar177 = (forvar177 + (1'h1)))
            begin
              reg178 <= (8'hac);
              reg179 <= (reg178[(4'hd):(4'hb)] ?
                  ($signed((^wire164[(3'h4):(3'h4)])) != reg175[(2'h3):(2'h3)]) : (~^forvar170[(4'h9):(3'h6)]));
              reg180 <= ($unsigned($signed((reg172 - (reg173 ?
                  wire168 : wire167)))) && wire162);
              reg181 <= (forvar177 >= $signed($signed($unsigned(forvar177))));
            end
          for (forvar182 = (1'h0); (forvar182 < (2'h3)); forvar182 = (forvar182 + (1'h1)))
            begin
              reg183 = reg181;
              reg184 <= wire159;
              reg185 = forvar170;
            end
        end
    end
  assign wire186 = wire165[(4'hf):(3'h4)];
  assign wire187 = wire163;
  assign wire188 = (!wire187[(3'h6):(3'h5)]);
  assign wire189 = wire168;
  assign wire190 = $signed(wire164[(3'h7):(3'h6)]);
  assign wire191 = wire159[(3'h4):(3'h4)];
  assign wire192 = (8'hbf);
  assign wire193 = $unsigned((~|{{(reg181 ? wire189 : reg178),
                           $unsigned((7'h40))},
                       wire191[(5'h12):(4'hc)]}));
  assign wire194 = $unsigned({({wire165[(4'hd):(3'h4)]} ?
                           (wire188 ?
                               $unsigned((8'ha8)) : reg176) : {(^(8'hb3))}),
                       (~^(wire165 ?
                           $unsigned(reg173) : (wire167 == reg180)))});
  assign wire195 = wire188;
  always
    @(posedge clk) begin
      reg196 <= ($signed($signed(wire165[(3'h4):(3'h4)])) ?
          (reg179 ?
              ($signed((wire191 ?
                  wire187 : wire165)) || wire195) : $unsigned(({wire187} ?
                  {reg179} : $signed(wire187)))) : (~&reg180));
    end
  assign wire197 = reg180;
  assign wire198 = reg173[(3'h5):(2'h3)];
  assign wire199 = {((~&reg180[(2'h2):(1'h0)]) ?
                           wire191 : (!wire167[(3'h5):(1'h1)])),
                       $unsigned($unsigned(($signed(wire197) == wire194)))};
  assign wire200 = ({(($unsigned(wire190) ?
                               (~^wire160) : (wire162 * reg172)) - (|{reg179}))} ?
                       (wire192[(2'h3):(2'h2)] ?
                           ($unsigned($signed(wire197)) <<< (wire190 < (wire160 ?
                               (7'h42) : wire186))) : {$unsigned(wire165[(4'ha):(2'h2)]),
                               reg184}) : ((|(&{reg176, reg184})) ?
                           ($unsigned($unsigned(reg179)) <= {wire198,
                               $unsigned(reg181)}) : wire188[(3'h4):(1'h0)]));
  assign wire201 = (8'hb9);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module85
#(parameter param155 = (+({({(8'hb8)} == ((8'hbc) ? (7'h44) : (8'h9c))), (!{(8'hb3)})} | (~{(-(8'hae))}))))
(y, clk, wire90, wire89, wire88, wire87, wire86);
  output wire [(32'h2c0):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'hd):(1'h0)] wire90;
  input wire signed [(4'hd):(1'h0)] wire89;
  input wire signed [(3'h4):(1'h0)] wire88;
  input wire [(4'hf):(1'h0)] wire87;
  input wire [(4'he):(1'h0)] wire86;
  wire [(2'h3):(1'h0)] wire154;
  wire signed [(4'hb):(1'h0)] wire153;
  wire [(4'hc):(1'h0)] wire152;
  wire signed [(2'h3):(1'h0)] wire151;
  wire [(4'he):(1'h0)] wire133;
  wire signed [(5'h13):(1'h0)] wire132;
  wire [(4'hc):(1'h0)] wire131;
  wire signed [(2'h3):(1'h0)] wire130;
  wire [(4'h8):(1'h0)] wire129;
  wire [(4'hf):(1'h0)] wire128;
  wire signed [(2'h2):(1'h0)] wire127;
  wire signed [(4'hb):(1'h0)] wire126;
  wire signed [(4'he):(1'h0)] wire125;
  wire [(4'hc):(1'h0)] wire124;
  wire [(2'h2):(1'h0)] wire92;
  wire [(2'h2):(1'h0)] wire91;
  reg [(4'he):(1'h0)] reg150 = (1'h0);
  reg signed [(4'he):(1'h0)] reg146 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg141 = (1'h0);
  reg [(5'h14):(1'h0)] reg136 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg135 = (1'h0);
  reg [(4'hd):(1'h0)] reg123 = (1'h0);
  reg [(5'h10):(1'h0)] reg121 = (1'h0);
  reg [(3'h4):(1'h0)] reg120 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg119 = (1'h0);
  reg [(4'h8):(1'h0)] reg118 = (1'h0);
  reg [(5'h14):(1'h0)] reg115 = (1'h0);
  reg [(4'hc):(1'h0)] reg114 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg112 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg111 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg107 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg104 = (1'h0);
  reg [(4'hf):(1'h0)] reg103 = (1'h0);
  reg [(3'h6):(1'h0)] reg102 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg101 = (1'h0);
  reg [(5'h13):(1'h0)] reg100 = (1'h0);
  reg [(5'h12):(1'h0)] reg98 = (1'h0);
  reg [(4'ha):(1'h0)] reg96 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg95 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg93 = (1'h0);
  reg [(4'hd):(1'h0)] forvar149 = (1'h0);
  reg signed [(4'he):(1'h0)] reg148 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg147 = (1'h0);
  reg [(4'h9):(1'h0)] reg145 = (1'h0);
  reg [(5'h12):(1'h0)] reg144 = (1'h0);
  reg [(2'h2):(1'h0)] forvar143 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg142 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg140 = (1'h0);
  reg [(3'h5):(1'h0)] reg139 = (1'h0);
  reg [(3'h5):(1'h0)] forvar138 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg137 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar134 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg122 = (1'h0);
  reg [(3'h6):(1'h0)] forvar117 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg116 = (1'h0);
  reg [(3'h4):(1'h0)] forvar113 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar110 = (1'h0);
  reg signed [(4'he):(1'h0)] reg109 = (1'h0);
  reg [(2'h3):(1'h0)] reg108 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg106 = (1'h0);
  reg [(3'h6):(1'h0)] forvar105 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg99 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar97 = (1'h0);
  reg [(4'h8):(1'h0)] forvar94 = (1'h0);
  assign y = {wire154,
                 wire153,
                 wire152,
                 wire151,
                 wire133,
                 wire132,
                 wire131,
                 wire130,
                 wire129,
                 wire128,
                 wire127,
                 wire126,
                 wire125,
                 wire124,
                 wire92,
                 wire91,
                 reg150,
                 reg146,
                 reg141,
                 reg136,
                 reg135,
                 reg123,
                 reg121,
                 reg120,
                 reg119,
                 reg118,
                 reg115,
                 reg114,
                 reg112,
                 reg111,
                 reg107,
                 reg104,
                 reg103,
                 reg102,
                 reg101,
                 reg100,
                 reg98,
                 reg96,
                 reg95,
                 reg93,
                 forvar149,
                 reg148,
                 reg147,
                 reg145,
                 reg144,
                 forvar143,
                 reg142,
                 reg140,
                 reg139,
                 forvar138,
                 reg137,
                 forvar134,
                 reg122,
                 forvar117,
                 reg116,
                 forvar113,
                 forvar110,
                 reg109,
                 reg108,
                 reg106,
                 forvar105,
                 reg99,
                 forvar97,
                 forvar94,
                 (1'h0)};
  assign wire91 = $unsigned((($signed((wire89 ? (8'had) : wire87)) ?
                          {(-wire89),
                              $unsigned(wire87)} : $signed((-(8'ha9)))) ?
                      $unsigned($unsigned(((8'h9c) > wire86))) : ($unsigned((wire88 ?
                          (7'h42) : wire89)) <= {wire88[(1'h0):(1'h0)],
                          $signed(wire86)})));
  assign wire92 = (wire90[(4'hd):(4'hc)] | (wire90 ?
                      wire87[(4'hf):(4'hc)] : wire89[(3'h6):(1'h0)]));
  always
    @(posedge clk) begin
      reg93 <= wire90;
      for (forvar94 = (1'h0); (forvar94 < (2'h3)); forvar94 = (forvar94 + (1'h1)))
        begin
          if ($unsigned((~^wire92)))
            begin
              reg95 <= $unsigned({wire92,
                  $signed((wire92 >= {wire86, wire86}))});
              reg96 <= (reg93[(1'h1):(1'h1)] > wire89);
            end
          else
            begin
              reg95 <= wire87;
              reg96 <= ({$signed(forvar94)} ?
                  $unsigned($unsigned(wire87[(2'h3):(1'h1)])) : (~(wire89 ?
                      (8'ha6) : ({(8'hb8)} ^ (reg95 ? reg96 : forvar94)))));
            end
          for (forvar97 = (1'h0); (forvar97 < (2'h3)); forvar97 = (forvar97 + (1'h1)))
            begin
              reg98 <= {(^forvar97[(2'h3):(2'h2)])};
              reg99 = ((&wire87[(3'h4):(1'h0)]) ?
                  $unsigned($signed($signed(wire89))) : ($signed($signed((wire87 ?
                      wire91 : forvar97))) + {$signed(wire90[(4'hd):(1'h0)]),
                      {$unsigned(forvar94)}}));
              reg100 <= (wire89[(3'h4):(3'h4)] ?
                  (+$unsigned({wire89, forvar97})) : {wire86});
            end
          if (wire86[(1'h1):(1'h0)])
            begin
              reg101 <= $unsigned(((({wire92,
                      wire89} >= reg93) <= ((wire87 | reg99) ?
                      ((8'haa) ? reg98 : wire90) : (7'h42))) ?
                  wire90 : reg100));
              reg102 <= (7'h40);
              reg103 <= (^reg96);
            end
          else
            begin
              reg101 <= (reg93 ~^ $unsigned((($signed(reg100) ?
                      reg99 : (wire92 == (8'hb2))) ?
                  reg93[(3'h4):(3'h4)] : ($unsigned(wire88) | $unsigned((8'hab))))));
            end
        end
      reg104 <= (reg96[(1'h1):(1'h1)] ?
          reg98[(3'h4):(2'h3)] : (wire90 & ($unsigned((wire87 ?
                  forvar94 : reg98)) ?
              (((8'ha8) | (8'hb4)) ?
                  wire91[(1'h0):(1'h0)] : $signed(wire89)) : wire88[(2'h3):(1'h1)])));
      for (forvar105 = (1'h0); (forvar105 < (2'h3)); forvar105 = (forvar105 + (1'h1)))
        begin
          if (($signed(wire89) ?
              ((|$signed($signed(reg98))) ?
                  $signed(wire89) : $unsigned((~wire86))) : reg98))
            begin
              reg106 = forvar105;
              reg107 <= $signed(((reg96[(3'h4):(1'h0)] < {(forvar97 - reg93)}) ?
                  (|$unsigned((wire89 || forvar94))) : $signed(({forvar97} * reg104[(1'h0):(1'h0)]))));
              reg108 = {reg95,
                  $unsigned(($unsigned($signed(wire89)) ?
                      $signed($signed(forvar97)) : (~^(reg104 ?
                          wire92 : (8'hb0)))))};
              reg109 = (8'ha3);
            end
          else
            begin
              reg107 <= wire91;
              reg108 = $signed($unsigned($signed($signed($signed(reg109)))));
            end
          for (forvar110 = (1'h0); (forvar110 < (1'h0)); forvar110 = (forvar110 + (1'h1)))
            begin
              reg111 <= wire92[(1'h1):(1'h0)];
              reg112 <= $signed(((~(^(~|(8'ha0)))) ?
                  ($signed((reg95 ? reg99 : reg106)) > ((~^(8'ha7)) ?
                      $unsigned((8'hbb)) : reg109)) : (&{$signed(wire90),
                      (~^reg101)})));
            end
          for (forvar113 = (1'h0); (forvar113 < (2'h2)); forvar113 = (forvar113 + (1'h1)))
            begin
              reg114 <= reg106;
              reg115 <= (^$unsigned($unsigned(forvar105[(3'h6):(3'h4)])));
              reg116 = $unsigned($signed(((~|(wire91 >>> wire89)) ?
                  $signed(forvar94) : (reg106[(1'h1):(1'h0)] << (&reg95)))));
            end
          for (forvar117 = (1'h0); (forvar117 < (1'h0)); forvar117 = (forvar117 + (1'h1)))
            begin
              reg118 <= $signed(reg102);
            end
          if (forvar110)
            begin
              reg119 <= ({(-($unsigned((8'hac)) ?
                      (reg109 <= reg95) : (wire86 ^~ wire89)))} < $signed((reg102 ?
                  (~^(!reg111)) : reg115)));
              reg120 <= (-forvar117);
              reg121 <= (8'hb0);
              reg122 = $signed({$unsigned($unsigned($unsigned(reg101))),
                  $unsigned((^$unsigned((8'hb9))))});
              reg123 <= reg103;
            end
          else
            begin
              reg119 <= wire91;
            end
        end
    end
  assign wire124 = reg115[(5'h11):(4'hb)];
  assign wire125 = (^(!(!reg119)));
  assign wire126 = {{wire91}, (^reg103[(1'h1):(1'h1)])};
  assign wire127 = reg118[(1'h1):(1'h1)];
  assign wire128 = (8'hbc);
  assign wire129 = ($signed(($unsigned($signed(wire90)) && wire124)) ?
                       (~|(wire125 != {(reg93 >= reg96)})) : ({((~|wire91) ?
                               (reg114 - reg98) : reg119[(5'h13):(4'h8)]),
                           $unsigned(((8'h9f) ?
                               reg102 : reg120))} == (-(&(reg120 ?
                           reg118 : reg96)))));
  assign wire130 = ($unsigned((^~(~|(~&wire129)))) != {(~(((8'ha8) * reg100) && $signed(wire92)))});
  assign wire131 = wire92[(2'h2):(1'h0)];
  assign wire132 = ($signed(wire125[(1'h1):(1'h1)]) ?
                       (wire88[(2'h2):(1'h1)] <<< (~^reg114[(4'h9):(2'h3)])) : wire86);
  assign wire133 = (-reg111);
  always
    @(posedge clk) begin
      if ($signed((wire128[(1'h0):(1'h0)] * (^$unsigned($signed(wire133))))))
        begin
          for (forvar134 = (1'h0); (forvar134 < (2'h2)); forvar134 = (forvar134 + (1'h1)))
            begin
              reg135 <= $signed($signed((|reg104)));
              reg136 <= (+$signed($signed(($signed(reg100) != (reg98 ?
                  (8'h9e) : reg101)))));
            end
        end
      else
        begin
          for (forvar134 = (1'h0); (forvar134 < (1'h0)); forvar134 = (forvar134 + (1'h1)))
            begin
              reg137 = wire130;
            end
          for (forvar138 = (1'h0); (forvar138 < (3'h4)); forvar138 = (forvar138 + (1'h1)))
            begin
              reg139 = $unsigned((((+wire130) ?
                      ($unsigned((8'had)) | $signed(reg120)) : $signed(reg112)) ?
                  reg135[(4'hb):(4'hb)] : wire89[(4'h9):(1'h0)]));
              reg140 = (!((forvar134[(4'h9):(4'h8)] ?
                  $unsigned((wire131 != wire132)) : ((wire87 - reg101) ?
                      $signed(reg102) : (reg102 ? reg98 : (8'hb5)))) * reg98));
              reg141 <= ((wire92[(2'h2):(1'h1)] ?
                  {$signed((8'hba)),
                      {(-reg120)}} : $unsigned(forvar134)) <= (({wire91} || (^~$unsigned(reg115))) ?
                  (((-wire131) >= $signed(forvar134)) ?
                      $unsigned(wire132[(5'h11):(1'h0)]) : wire87[(4'hf):(2'h3)]) : reg103[(3'h7):(2'h2)]));
            end
          reg142 = (((8'hba) >= (reg137[(4'h8):(4'h8)] == reg140)) == $signed($unsigned($unsigned((wire89 ?
              (8'haf) : reg93)))));
          for (forvar143 = (1'h0); (forvar143 < (3'h4)); forvar143 = (forvar143 + (1'h1)))
            begin
              reg144 = reg142;
              reg145 = $unsigned(wire89);
              reg146 <= wire129;
              reg147 = reg123[(2'h2):(1'h0)];
              reg148 = reg137[(4'ha):(3'h5)];
            end
          for (forvar149 = (1'h0); (forvar149 < (2'h2)); forvar149 = (forvar149 + (1'h1)))
            begin
              reg150 <= wire125[(1'h1):(1'h0)];
            end
        end
    end
  assign wire151 = wire132[(2'h3):(2'h2)];
  assign wire152 = $signed((reg150[(4'h8):(1'h1)] ?
                       ((&(reg146 > reg114)) <<< (~|$signed(reg102))) : (((reg104 >>> reg135) ?
                               $unsigned(reg141) : (reg102 >> reg111)) ?
                           reg123[(1'h0):(1'h0)] : reg115)));
  assign wire153 = reg104;
  assign wire154 = wire129;
endmodule