(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param46 = (8'ha3), 
parameter param47 = param46)
(y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h1be):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire4;
  input wire [(5'h14):(1'h0)] wire3;
  input wire [(4'hf):(1'h0)] wire2;
  input wire [(4'hd):(1'h0)] wire1;
  input wire signed [(4'hf):(1'h0)] wire0;
  wire [(5'h12):(1'h0)] wire45;
  wire signed [(4'hf):(1'h0)] wire8;
  wire signed [(2'h2):(1'h0)] wire7;
  wire [(5'h11):(1'h0)] wire6;
  wire signed [(4'h8):(1'h0)] wire5;
  reg signed [(4'hd):(1'h0)] reg44 = (1'h0);
  reg [(2'h2):(1'h0)] reg43 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg38 = (1'h0);
  reg [(3'h5):(1'h0)] reg37 = (1'h0);
  reg [(3'h6):(1'h0)] reg35 = (1'h0);
  reg [(4'ha):(1'h0)] reg34 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg33 = (1'h0);
  reg [(5'h13):(1'h0)] reg32 = (1'h0);
  reg [(5'h12):(1'h0)] reg30 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg28 = (1'h0);
  reg [(4'h9):(1'h0)] reg27 = (1'h0);
  reg [(3'h7):(1'h0)] reg26 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg25 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg20 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg18 = (1'h0);
  reg [(5'h15):(1'h0)] reg17 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg10 = (1'h0);
  reg [(4'hb):(1'h0)] reg42 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar40 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg39 = (1'h0);
  reg [(2'h3):(1'h0)] forvar36 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar31 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar29 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg24 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar23 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar22 = (1'h0);
  reg [(4'he):(1'h0)] reg21 = (1'h0);
  reg [(2'h3):(1'h0)] reg19 = (1'h0);
  reg [(2'h2):(1'h0)] reg16 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar15 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg14 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar13 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg12 = (1'h0);
  reg [(5'h10):(1'h0)] forvar11 = (1'h0);
  reg [(2'h3):(1'h0)] forvar9 = (1'h0);
  assign y = {wire45,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 reg44,
                 reg43,
                 reg38,
                 reg37,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg30,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg20,
                 reg18,
                 reg17,
                 reg10,
                 reg42,
                 reg41,
                 forvar40,
                 reg39,
                 forvar36,
                 forvar31,
                 forvar29,
                 reg24,
                 forvar23,
                 forvar22,
                 reg21,
                 reg19,
                 reg16,
                 forvar15,
                 reg14,
                 forvar13,
                 reg12,
                 forvar11,
                 forvar9,
                 (1'h0)};
  assign wire5 = $signed(wire0[(3'h7):(3'h7)]);
  assign wire6 = $unsigned({$signed(((^wire4) ~^ wire2))});
  assign wire7 = ($unsigned((^~wire1[(2'h2):(1'h0)])) ?
                     wire0[(3'h5):(2'h3)] : ($unsigned({(~^(8'hb4)),
                         $signed(wire2)}) ^~ wire3));
  assign wire8 = $signed(((wire0 ~^ (^~(^~wire7))) && $signed((&$signed(wire0)))));
  always
    @(posedge clk) begin
      for (forvar9 = (1'h0); (forvar9 < (2'h2)); forvar9 = (forvar9 + (1'h1)))
        begin
          reg10 <= (!(8'had));
        end
      for (forvar11 = (1'h0); (forvar11 < (3'h4)); forvar11 = (forvar11 + (1'h1)))
        begin
          reg12 = ($signed(wire8[(4'hf):(1'h1)]) ?
              $signed((^~$signed($signed(wire7)))) : $unsigned($signed(($signed(wire2) > (~|(8'hb9))))));
          for (forvar13 = (1'h0); (forvar13 < (2'h2)); forvar13 = (forvar13 + (1'h1)))
            begin
              reg14 = ($unsigned($unsigned((|(forvar13 ?
                  forvar13 : wire3)))) >> {wire3[(5'h11):(4'hd)],
                  ({(wire2 << wire4)} && wire5[(3'h7):(3'h6)])});
            end
          for (forvar15 = (1'h0); (forvar15 < (2'h2)); forvar15 = (forvar15 + (1'h1)))
            begin
              reg16 = (($unsigned((forvar15[(3'h6):(2'h3)] & $signed((8'hb8)))) ^~ $unsigned((^~$signed(wire0)))) < $unsigned((wire8[(3'h7):(2'h2)] > ($unsigned(wire3) ?
                  reg14[(3'h6):(3'h6)] : wire7[(1'h0):(1'h0)]))));
              reg17 <= $signed(((~&reg16[(1'h1):(1'h0)]) ?
                  (|$signed((wire3 ?
                      (8'h9e) : (8'hb5)))) : ((wire3[(4'h9):(4'h9)] ?
                      (~&wire7) : wire8[(4'hf):(3'h5)]) | wire3[(5'h13):(5'h12)])));
              reg18 <= $signed(wire4[(2'h3):(1'h0)]);
              reg19 = $unsigned($signed((((reg10 >>> reg17) + reg16[(1'h0):(1'h0)]) & reg16)));
              reg20 <= (~((($signed((8'ha5)) >= wire0) ?
                      (^$unsigned(forvar15)) : ($signed(wire8) ?
                          (wire2 == wire7) : {(8'hb0), wire5})) ?
                  $signed({$unsigned(reg16), (&reg19)}) : ((+(forvar9 ?
                      wire7 : reg14)) <<< reg19[(2'h3):(1'h0)])));
            end
        end
      reg21 = {$signed((8'ha1))};
      for (forvar22 = (1'h0); (forvar22 < (2'h2)); forvar22 = (forvar22 + (1'h1)))
        begin
          for (forvar23 = (1'h0); (forvar23 < (2'h2)); forvar23 = (forvar23 + (1'h1)))
            begin
              reg24 = {($unsigned((~&$unsigned(wire6))) ?
                      wire8 : $unsigned({(forvar9 ? (8'hb7) : forvar9),
                          {reg17}}))};
              reg25 <= {$unsigned(reg21)};
              reg26 <= $unsigned(((reg21 ?
                  (((8'hb6) ? reg12 : forvar9) & reg18) : {forvar22,
                      $unsigned(reg21)}) >> ((&(^reg20)) >= $signed(reg18[(2'h2):(2'h2)]))));
              reg27 <= ((reg16 >> $unsigned(($signed(reg21) & wire7))) - (-(~|$unsigned($signed(reg18)))));
              reg28 <= ((({reg21} && (8'hb5)) & ((forvar11 < (reg12 ?
                      forvar22 : reg24)) ?
                  ((~|reg25) ^~ (~|reg27)) : $unsigned({reg25,
                      (8'hbf)}))) <= wire4[(1'h1):(1'h1)]);
            end
          for (forvar29 = (1'h0); (forvar29 < (3'h4)); forvar29 = (forvar29 + (1'h1)))
            begin
              reg30 <= ($signed((reg26 ~^ reg10)) <= reg17);
            end
          for (forvar31 = (1'h0); (forvar31 < (3'h4)); forvar31 = (forvar31 + (1'h1)))
            begin
              reg32 <= ((reg19[(1'h1):(1'h0)] < (^~reg25)) - (reg20[(4'hf):(3'h4)] ?
                  reg19 : forvar13[(1'h0):(1'h0)]));
              reg33 <= (forvar15[(4'hb):(2'h3)] ?
                  $unsigned($signed(reg28[(3'h5):(2'h3)])) : reg25[(3'h5):(3'h5)]);
              reg34 <= (|$unsigned(reg18[(1'h0):(1'h0)]));
              reg35 <= reg21[(1'h1):(1'h0)];
            end
          for (forvar36 = (1'h0); (forvar36 < (2'h2)); forvar36 = (forvar36 + (1'h1)))
            begin
              reg37 <= {reg33};
              reg38 <= reg18;
              reg39 = {{forvar22, (-$signed($signed(reg34)))},
                  $unsigned((reg27 ^~ (reg17 == (8'hb3))))};
            end
          for (forvar40 = (1'h0); (forvar40 < (3'h4)); forvar40 = (forvar40 + (1'h1)))
            begin
              reg41 = $unsigned(reg39[(4'h8):(3'h7)]);
              reg42 = (|{(((~&forvar23) >>> reg38) << $unsigned(forvar22[(4'h9):(3'h6)]))});
              reg43 <= (+((!((|wire7) || reg14[(3'h5):(1'h0)])) ^~ ($unsigned((wire8 + reg14)) ?
                  reg26 : $unsigned((~&wire3)))));
              reg44 <= {(({$signed(reg33), (~^reg25)} ?
                      $signed(reg35) : {(reg10 ? reg21 : (8'had))}) == reg24)};
            end
        end
    end
  assign wire45 = (wire3[(1'h1):(1'h0)] | $unsigned((reg30 ?
                      (!(^reg10)) : ({(8'ha6), reg10} && $unsigned(reg10)))));
endmodule