(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h13c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h11):(1'h0)] wire4;
  input wire [(5'h14):(1'h0)] wire3;
  input wire signed [(4'ha):(1'h0)] wire2;
  input wire [(4'h9):(1'h0)] wire1;
  input wire [(5'h11):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire26;
  wire signed [(3'h6):(1'h0)] wire25;
  wire [(5'h14):(1'h0)] wire5;
  reg signed [(3'h7):(1'h0)] reg24 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg23 = (1'h0);
  reg [(4'hf):(1'h0)] reg9 = (1'h0);
  reg [(3'h5):(1'h0)] reg21 = (1'h0);
  reg [(5'h11):(1'h0)] reg20 = (1'h0);
  reg signed [(4'he):(1'h0)] reg19 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg18 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg17 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg16 = (1'h0);
  reg [(4'hf):(1'h0)] reg15 = (1'h0);
  reg [(3'h5):(1'h0)] reg13 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg12 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg11 = (1'h0);
  reg [(4'h8):(1'h0)] reg10 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg8 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg7 = (1'h0);
  reg [(4'hb):(1'h0)] reg22 = (1'h0);
  reg [(5'h11):(1'h0)] forvar13 = (1'h0);
  reg [(5'h12):(1'h0)] forvar7 = (1'h0);
  reg [(5'h13):(1'h0)] reg14 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar9 = (1'h0);
  reg signed [(4'he):(1'h0)] reg6 = (1'h0);
  assign y = {wire26,
                 wire25,
                 wire5,
                 reg24,
                 reg23,
                 reg9,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg13,
                 reg12,
                 reg11,
                 reg10,
                 reg8,
                 reg7,
                 reg22,
                 forvar13,
                 forvar7,
                 reg14,
                 forvar9,
                 reg6,
                 (1'h0)};
  assign wire5 = (-"zUBYX1Z445ELTw4Shse");
  always
    @(posedge clk) begin
      reg6 = $signed({"6An75yZPabUSY2"});
      if (wire0[(3'h6):(3'h5)])
        begin
          reg7 <= wire4[(3'h7):(2'h3)];
          reg8 <= (wire1[(1'h1):(1'h1)] + $unsigned(("LN" ?
              ((^~wire3) ^~ wire0) : wire5[(4'h9):(2'h3)])));
          for (forvar9 = (1'h0); (forvar9 < (2'h3)); forvar9 = (forvar9 + (1'h1)))
            begin
              reg10 <= (wire1[(3'h6):(1'h0)] < "M");
            end
          if ("KnZJGX0xi")
            begin
              reg11 <= {$signed(({(~&wire3), $unsigned(wire5)} ?
                      $signed("AeG1DQL4yuLi7IJ") : (!"m")))};
              reg12 <= $signed((wire2[(1'h0):(1'h0)] ?
                  ((~|"z7uyYb") * (8'hbd)) : (!(&(-wire5)))));
              reg13 <= $signed($unsigned(wire2));
              reg14 = reg8;
              reg15 <= (("KuOcFH6lGFYI8C" >> $signed($signed((wire2 ?
                  forvar9 : wire0)))) <<< ($signed(((8'hba) ?
                      (reg14 ? reg8 : wire2) : $unsigned((8'haf)))) ?
                  "Y1h8GLKfDpG0LM9nV" : "PK4Ysm"));
            end
          else
            begin
              reg11 <= ($signed((($signed(wire5) ?
                      (wire5 ? reg10 : wire4) : $signed(wire1)) ?
                  $signed(((8'ha2) ?
                      reg10 : reg13)) : $signed((~^wire5)))) > (8'ha9));
              reg12 <= (|reg13);
              reg13 <= {"E74a78FCfKQX", "Sx6yF7nnJVqY1bNnt0"};
              reg15 <= $signed((^forvar9[(1'h0):(1'h0)]));
              reg16 <= ($unsigned($unsigned(("xa4M6cQBiFgQnz" ?
                      $unsigned(wire0) : reg12[(4'h8):(1'h0)]))) ?
                  reg15[(4'hc):(3'h5)] : {"FXX2BU72HLO1aJBeL", "GUvAGT"});
            end
          if (reg11[(4'hc):(4'hc)])
            begin
              reg17 <= $unsigned("AmFFuw8GSRuRWV");
              reg18 <= (~(wire2[(1'h1):(1'h0)] ?
                  (reg14 <<< "XH7uw0XOeQY") : reg13));
              reg19 <= reg7;
              reg20 <= (($unsigned($unsigned("")) | ((reg18 ?
                  (reg19 << wire3) : $unsigned((8'ha7))) <<< "F2SqXy0")) | (("YGfO12" >>> reg11) >= $signed((7'h42))));
              reg21 <= {(-("Uku" ?
                      {reg12} : ($signed(reg18) <= reg6[(4'hd):(2'h3)])))};
            end
          else
            begin
              reg17 <= $signed({$signed((reg7 < (+reg6)))});
            end
        end
      else
        begin
          for (forvar7 = (1'h0); (forvar7 < (3'h4)); forvar7 = (forvar7 + (1'h1)))
            begin
              reg8 <= {reg14, reg12[(3'h5):(2'h2)]};
              reg9 <= reg14[(5'h12):(4'hb)];
              reg10 <= ((reg8 ^ (((reg6 * reg18) == $unsigned(forvar7)) ?
                      wire4 : ((^~wire3) ? reg6[(3'h4):(3'h4)] : wire3))) ?
                  $signed($signed(reg20)) : ((-(~^(reg7 ^ wire3))) ^ (((reg6 >> reg18) ?
                          (forvar9 != reg21) : reg11[(1'h0):(1'h0)]) ?
                      ((reg18 ? forvar7 : reg7) >>> $unsigned(reg21)) : ({reg15,
                          reg9} ^~ {reg18}))));
            end
          if ({reg9[(4'he):(4'h9)], {reg15, (8'hbe)}})
            begin
              reg11 <= (wire3 ?
                  $unsigned(wire4) : $unsigned(reg6[(4'hd):(4'h9)]));
            end
          else
            begin
              reg11 <= ($unsigned(reg11) ?
                  $unsigned({$unsigned(reg8[(4'h8):(3'h7)])}) : {("CJM7" ?
                          $unsigned((reg10 ? (8'hb3) : forvar9)) : forvar9)});
            end
          reg12 <= (+$unsigned(($unsigned("HE0i2OQ") > (+$signed(reg7)))));
          for (forvar13 = (1'h0); (forvar13 < (1'h0)); forvar13 = (forvar13 + (1'h1)))
            begin
              reg15 <= ($unsigned(("Wxh" ?
                  $signed((reg19 & reg20)) : "pqK0Z")) && "0shtve998CArMgdJy5YA");
              reg22 = wire0;
              reg23 <= ($signed($unsigned(((~forvar7) != (wire5 ?
                  reg17 : forvar7)))) == (^"G9I74AAoR"));
              reg24 <= reg21;
            end
        end
    end
  assign wire25 = $signed($unsigned((~^((wire2 ? reg21 : reg15) ?
                      (wire3 | reg9) : reg12[(3'h5):(3'h5)]))));
  assign wire26 = (("bxfCr95QUXEec9c" ?
                      reg13 : "0kSI5xWuITHLW5aPL1") + "f12uPFEK96h7Wu");
endmodule