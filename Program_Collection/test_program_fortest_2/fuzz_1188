(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param308 = {((8'hbc) ? ((((7'h43) ? (8'hb4) : (8'hae)) ? (~(8'haa)) : (8'hbe)) >>> (((8'ha6) >= (8'hae)) >> ((8'hb2) ? (8'ha7) : (8'h9e)))) : (+(+(&(8'h9e)))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'he8):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h14):(1'h0)] wire3;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(5'h13):(1'h0)] wire1;
  input wire signed [(5'h13):(1'h0)] wire0;
  wire [(4'ha):(1'h0)] wire307;
  wire [(5'h14):(1'h0)] wire306;
  wire [(4'hb):(1'h0)] wire305;
  wire [(4'hc):(1'h0)] wire304;
  wire [(4'h8):(1'h0)] wire303;
  wire [(4'hc):(1'h0)] wire302;
  wire signed [(4'hd):(1'h0)] wire301;
  wire [(5'h10):(1'h0)] wire297;
  wire [(3'h6):(1'h0)] wire296;
  wire [(3'h5):(1'h0)] wire295;
  wire signed [(5'h13):(1'h0)] wire294;
  wire signed [(4'hf):(1'h0)] wire248;
  wire [(4'hc):(1'h0)] wire115;
  wire signed [(5'h11):(1'h0)] wire113;
  wire [(5'h13):(1'h0)] wire250;
  wire signed [(4'hf):(1'h0)] wire292;
  wire signed [(3'h5):(1'h0)] wire299;
  reg signed [(3'h7):(1'h0)] reg252 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar251 = (1'h0);
  assign y = {wire307,
                 wire306,
                 wire305,
                 wire304,
                 wire303,
                 wire302,
                 wire301,
                 wire297,
                 wire296,
                 wire295,
                 wire294,
                 wire248,
                 wire115,
                 wire113,
                 wire250,
                 wire292,
                 wire299,
                 reg252,
                 forvar251,
                 (1'h0)};
  module4 #() modinst114 (wire113, clk, wire3, wire0, wire2, wire1);
  assign wire115 = wire3[(2'h3):(2'h3)];
  module116 #() modinst249 (wire248, clk, wire113, wire2, wire3, wire0, wire1);
  assign wire250 = wire1[(3'h4):(1'h1)];
  always
    @(posedge clk) begin
      for (forvar251 = (1'h0); (forvar251 < (1'h0)); forvar251 = (forvar251 + (1'h1)))
        begin
          reg252 = (wire0[(1'h0):(1'h0)] ?
              wire3[(4'ha):(1'h1)] : $signed((+((-wire1) & (wire3 << forvar251)))));
        end
    end
  module253 #() modinst293 (.wire254(wire1), .wire258(wire248), .wire255(wire0), .wire256(wire113), .y(wire292), .wire257(wire3), .clk(clk));
  assign wire294 = $unsigned(wire248[(2'h3):(1'h1)]);
  assign wire295 = wire0;
  assign wire296 = ($unsigned({($unsigned(wire250) ?
                           wire3[(1'h1):(1'h0)] : $unsigned(wire250)),
                       {(^~wire250),
                           (wire248 == wire295)}}) || $signed(wire115));
  module176 #() modinst298 (wire297, clk, wire296, wire248, wire115, wire3, wire294);
  module176 #() modinst300 (wire299, clk, wire295, wire3, wire294, wire0, wire250);
  assign wire301 = {$signed((wire3[(4'hd):(4'h9)] & wire294[(4'hc):(2'h3)])),
                       ((wire2 ?
                               $unsigned($unsigned(wire292)) : $signed(wire250[(4'hc):(2'h2)])) ?
                           wire248[(3'h6):(1'h1)] : ($signed((wire115 ?
                               wire113 : wire299)) >= $unsigned($unsigned(wire250))))};
  assign wire302 = $unsigned(($unsigned((~$signed(wire248))) ?
                       (wire301 ?
                           $unsigned($unsigned(wire296)) : ((~wire0) ?
                               (wire292 ?
                                   wire248 : (8'hb8)) : (wire295 <= (8'ha8)))) : (wire294[(3'h4):(1'h0)] & (-wire296))));
  assign wire303 = {((((wire250 ? wire294 : wire2) || $signed(wire292)) ?
                           wire294[(3'h7):(2'h2)] : (+wire0)) - {(-$unsigned(wire297))})};
  assign wire304 = ($unsigned(wire303) - {$unsigned(($unsigned(wire1) ?
                           wire250 : $signed(wire295))),
                       (!(&(^wire0)))});
  assign wire305 = {$unsigned($unsigned(((~&wire302) ?
                           (wire113 ? wire295 : wire295) : $signed(wire2))))};
  assign wire306 = $signed((^wire1));
  assign wire307 = (8'hb4);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module253  (y, clk, wire258, wire257, wire256, wire255, wire254);
  output wire [(32'h18a):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h7):(1'h0)] wire258;
  input wire [(4'hd):(1'h0)] wire257;
  input wire signed [(3'h7):(1'h0)] wire256;
  input wire [(3'h6):(1'h0)] wire255;
  input wire [(3'h5):(1'h0)] wire254;
  wire signed [(4'h9):(1'h0)] wire291;
  wire [(5'h10):(1'h0)] wire290;
  wire signed [(3'h4):(1'h0)] wire289;
  wire signed [(5'h15):(1'h0)] wire270;
  wire [(5'h12):(1'h0)] wire269;
  wire [(4'ha):(1'h0)] wire259;
  reg signed [(3'h4):(1'h0)] reg284 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg281 = (1'h0);
  reg [(3'h7):(1'h0)] reg280 = (1'h0);
  reg [(5'h11):(1'h0)] reg275 = (1'h0);
  reg [(3'h7):(1'h0)] reg272 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg268 = (1'h0);
  reg signed [(4'he):(1'h0)] reg267 = (1'h0);
  reg [(2'h3):(1'h0)] reg265 = (1'h0);
  reg [(3'h4):(1'h0)] reg260 = (1'h0);
  reg [(4'hd):(1'h0)] reg288 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg287 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg286 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg285 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg283 = (1'h0);
  reg [(3'h6):(1'h0)] forvar282 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg279 = (1'h0);
  reg [(4'hf):(1'h0)] reg278 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar277 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg276 = (1'h0);
  reg [(4'hd):(1'h0)] reg274 = (1'h0);
  reg [(5'h14):(1'h0)] forvar273 = (1'h0);
  reg [(5'h12):(1'h0)] forvar271 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg266 = (1'h0);
  reg [(3'h5):(1'h0)] forvar264 = (1'h0);
  reg [(4'h9):(1'h0)] forvar263 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg262 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg261 = (1'h0);
  assign y = {wire291,
                 wire290,
                 wire289,
                 wire270,
                 wire269,
                 wire259,
                 reg284,
                 reg281,
                 reg280,
                 reg275,
                 reg272,
                 reg268,
                 reg267,
                 reg265,
                 reg260,
                 reg288,
                 reg287,
                 reg286,
                 reg285,
                 reg283,
                 forvar282,
                 reg279,
                 reg278,
                 forvar277,
                 reg276,
                 reg274,
                 forvar273,
                 forvar271,
                 reg266,
                 forvar264,
                 forvar263,
                 reg262,
                 reg261,
                 (1'h0)};
  assign wire259 = ($unsigned((~&{wire254[(3'h4):(2'h2)],
                           $unsigned(wire256)})) ?
                       wire255 : $signed(wire255[(3'h5):(1'h1)]));
  always
    @(posedge clk) begin
      reg260 <= ($signed({(8'ha7)}) ?
          wire259[(3'h7):(3'h5)] : ($signed($signed(wire257)) ?
              wire255 : $signed((wire259[(3'h7):(3'h6)] ?
                  $signed((8'ha4)) : (wire255 ? wire257 : wire258)))));
      reg261 = wire258;
      reg262 = wire258[(1'h1):(1'h1)];
      for (forvar263 = (1'h0); (forvar263 < (3'h4)); forvar263 = (forvar263 + (1'h1)))
        begin
          for (forvar264 = (1'h0); (forvar264 < (2'h2)); forvar264 = (forvar264 + (1'h1)))
            begin
              reg265 <= $unsigned((forvar263[(1'h0):(1'h0)] | forvar263));
              reg266 = $unsigned((-($signed(wire256) < wire259[(4'ha):(1'h1)])));
              reg267 <= $signed((forvar264[(2'h2):(2'h2)] ?
                  (wire257[(4'hb):(3'h5)] ?
                      (8'hbe) : {(8'hb6)}) : $unsigned({$signed(forvar263),
                      $signed(reg262)})));
              reg268 <= ($signed((~&(8'had))) ?
                  reg262[(5'h11):(4'h8)] : (+{$signed((wire259 - forvar264))}));
            end
        end
    end
  assign wire269 = $unsigned(wire257);
  assign wire270 = (~&$unsigned((~^((wire257 == wire269) >>> $unsigned(reg260)))));
  always
    @(posedge clk) begin
      for (forvar271 = (1'h0); (forvar271 < (3'h4)); forvar271 = (forvar271 + (1'h1)))
        begin
          reg272 <= wire254[(3'h5):(2'h3)];
          for (forvar273 = (1'h0); (forvar273 < (3'h4)); forvar273 = (forvar273 + (1'h1)))
            begin
              reg274 = ((8'had) ?
                  (forvar271[(3'h6):(3'h5)] ?
                      {$signed((reg260 ? wire258 : forvar273)),
                          (-(reg267 != (8'h9f)))} : (wire269[(3'h6):(3'h4)] < wire255[(2'h2):(1'h0)])) : ($signed((wire255 & (-wire259))) ?
                      (((wire270 >= wire270) <= (reg267 && reg272)) ?
                          $unsigned($signed(wire256)) : wire270[(2'h3):(2'h2)]) : ((-(!wire269)) <= reg272[(2'h2):(2'h2)])));
              reg275 <= {{$unsigned({reg267[(4'hb):(4'ha)]})}};
              reg276 = wire255;
            end
          for (forvar277 = (1'h0); (forvar277 < (1'h1)); forvar277 = (forvar277 + (1'h1)))
            begin
              reg278 = (reg267[(4'hd):(3'h5)] ?
                  (~|$unsigned(($signed((8'hbc)) != (wire258 <= wire256)))) : (^~wire259[(3'h7):(3'h7)]));
              reg279 = ((|$unsigned((+$unsigned(wire254)))) - reg272[(3'h7):(2'h3)]);
              reg280 <= (~|((($unsigned(forvar273) >>> ((8'hae) ?
                      wire258 : reg260)) & (~$signed(reg265))) ?
                  ({(wire257 + reg265),
                      (wire255 ?
                          forvar277 : forvar271)} | ((8'haf) && reg267[(4'hd):(4'hc)])) : (7'h43)));
              reg281 <= ((8'haf) ? {reg278} : wire258[(3'h7):(1'h0)]);
            end
          for (forvar282 = (1'h0); (forvar282 < (3'h4)); forvar282 = (forvar282 + (1'h1)))
            begin
              reg283 = (8'hbd);
              reg284 <= wire257;
              reg285 = $unsigned(((reg265[(2'h3):(2'h3)] >>> $signed(wire269[(4'ha):(3'h7)])) && reg265));
              reg286 = $signed($signed({($signed(wire270) ?
                      $signed(reg284) : {(7'h44), reg285})}));
            end
        end
      reg287 = forvar277[(1'h1):(1'h0)];
      reg288 = ((((^~((7'h43) != reg268)) - $signed($unsigned(reg285))) <<< ((-{reg272,
          wire254}) >> reg265[(1'h0):(1'h0)])) <= forvar273);
    end
  assign wire289 = (($signed({(~reg284), $signed(reg284)}) ?
                       wire256[(3'h7):(3'h4)] : $unsigned((8'hb2))) ^ wire254[(3'h4):(1'h0)]);
  assign wire290 = {reg265};
  assign wire291 = $unsigned($signed((|(reg280[(2'h2):(2'h2)] ?
                       $unsigned(reg281) : (reg281 ? wire289 : wire289)))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module116
#(parameter param247 = (((^~{(&(8'h9e)), ((8'ha1) ? (8'haa) : (8'hba))}) | ((^((7'h42) << (8'hb6))) ? (-(-(8'hab))) : ((~&(7'h44)) + {(8'hae), (8'hae)}))) ? (8'hbd) : (((~^((8'ha4) < (8'hbe))) ? ((~(8'ha0)) ? ((8'ha7) && (8'ha0)) : ((8'hb5) ^ (8'hb5))) : ((^~(8'hb4)) < {(8'h9d)})) ? (((^~(8'ha8)) ? (~(8'hbd)) : ((8'ha1) && (8'hb9))) ? ((^(8'haa)) ? ((8'had) ^~ (8'hb3)) : {(7'h42)}) : (^{(8'hb1)})) : (7'h42))))
(y, clk, wire117, wire118, wire119, wire120, wire121);
  output wire [(32'h28e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h11):(1'h0)] wire117;
  input wire [(4'hb):(1'h0)] wire118;
  input wire signed [(5'h13):(1'h0)] wire119;
  input wire [(5'h13):(1'h0)] wire120;
  input wire [(5'h13):(1'h0)] wire121;
  wire [(4'ha):(1'h0)] wire122;
  wire [(4'hd):(1'h0)] wire123;
  wire signed [(5'h11):(1'h0)] wire148;
  wire signed [(3'h6):(1'h0)] wire149;
  wire [(5'h14):(1'h0)] wire175;
  wire signed [(4'h9):(1'h0)] wire245;
  reg signed [(5'h10):(1'h0)] reg171 = (1'h0);
  reg [(5'h12):(1'h0)] reg170 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg166 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg165 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg162 = (1'h0);
  reg [(4'hd):(1'h0)] reg161 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg160 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg159 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg157 = (1'h0);
  reg [(5'h10):(1'h0)] reg156 = (1'h0);
  reg [(5'h14):(1'h0)] reg155 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg153 = (1'h0);
  reg [(2'h3):(1'h0)] reg150 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg147 = (1'h0);
  reg [(3'h7):(1'h0)] reg144 = (1'h0);
  reg [(4'ha):(1'h0)] reg142 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg137 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg136 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg133 = (1'h0);
  reg [(4'hc):(1'h0)] reg128 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg126 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg174 = (1'h0);
  reg [(4'hd):(1'h0)] reg173 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar172 = (1'h0);
  reg [(3'h4):(1'h0)] reg169 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg168 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar167 = (1'h0);
  reg [(3'h6):(1'h0)] forvar164 = (1'h0);
  reg [(3'h6):(1'h0)] forvar163 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar158 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg154 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar152 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar151 = (1'h0);
  reg [(5'h14):(1'h0)] reg146 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg145 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar143 = (1'h0);
  reg [(3'h6):(1'h0)] reg141 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg140 = (1'h0);
  reg [(4'he):(1'h0)] forvar139 = (1'h0);
  reg [(3'h5):(1'h0)] forvar138 = (1'h0);
  reg [(2'h2):(1'h0)] forvar135 = (1'h0);
  reg [(3'h7):(1'h0)] reg134 = (1'h0);
  reg [(4'hb):(1'h0)] reg132 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar131 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar130 = (1'h0);
  reg [(3'h6):(1'h0)] reg129 = (1'h0);
  reg [(5'h10):(1'h0)] reg127 = (1'h0);
  reg [(5'h15):(1'h0)] forvar125 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar124 = (1'h0);
  assign y = {wire122,
                 wire123,
                 wire148,
                 wire149,
                 wire175,
                 wire245,
                 reg171,
                 reg170,
                 reg166,
                 reg165,
                 reg162,
                 reg161,
                 reg160,
                 reg159,
                 reg157,
                 reg156,
                 reg155,
                 reg153,
                 reg150,
                 reg147,
                 reg144,
                 reg142,
                 reg137,
                 reg136,
                 reg133,
                 reg128,
                 reg126,
                 reg174,
                 reg173,
                 forvar172,
                 reg169,
                 reg168,
                 forvar167,
                 forvar164,
                 forvar163,
                 forvar158,
                 reg154,
                 forvar152,
                 forvar151,
                 reg146,
                 reg145,
                 forvar143,
                 reg141,
                 reg140,
                 forvar139,
                 forvar138,
                 forvar135,
                 reg134,
                 reg132,
                 forvar131,
                 forvar130,
                 reg129,
                 reg127,
                 forvar125,
                 forvar124,
                 (1'h0)};
  assign wire122 = ((8'hb3) ?
                       ((&wire117[(5'h11):(3'h7)]) <= wire120[(2'h3):(2'h2)]) : (~{(!$unsigned((8'ha3))),
                           wire118}));
  assign wire123 = ($unsigned((8'had)) > $signed(({(!wire119)} ?
                       (|(wire122 ?
                           wire118 : wire119)) : $unsigned($unsigned(wire118)))));
  always
    @(posedge clk) begin
      for (forvar124 = (1'h0); (forvar124 < (3'h4)); forvar124 = (forvar124 + (1'h1)))
        begin
          for (forvar125 = (1'h0); (forvar125 < (1'h1)); forvar125 = (forvar125 + (1'h1)))
            begin
              reg126 <= (wire118 << (8'ha0));
              reg127 = {$signed($signed(wire122)),
                  ($signed($unsigned((forvar124 ? (8'hab) : wire122))) ?
                      wire123 : (~|(^~$unsigned(wire123))))};
            end
        end
      reg128 <= ({$unsigned((^reg127[(1'h0):(1'h0)])), wire118} ?
          $signed((^$signed(forvar125))) : wire123[(4'ha):(1'h0)]);
      reg129 = (wire121[(4'h8):(3'h6)] ~^ wire117);
      for (forvar130 = (1'h0); (forvar130 < (2'h3)); forvar130 = (forvar130 + (1'h1)))
        begin
          for (forvar131 = (1'h0); (forvar131 < (2'h3)); forvar131 = (forvar131 + (1'h1)))
            begin
              reg132 = $unsigned(wire119);
              reg133 <= ($unsigned({$signed($signed(wire117))}) ?
                  (~|forvar130) : {((reg128[(3'h6):(3'h5)] ?
                          $signed(reg126) : (-forvar131)) > (((8'hba) ?
                              wire120 : reg127) ?
                          {wire119, reg126} : forvar131)),
                      wire122[(4'ha):(2'h2)]});
              reg134 = $signed($unsigned(reg127));
            end
          for (forvar135 = (1'h0); (forvar135 < (2'h3)); forvar135 = (forvar135 + (1'h1)))
            begin
              reg136 <= (|($unsigned(reg129[(3'h4):(2'h2)]) ?
                  {$signed((~^reg134))} : ($unsigned(wire117) + {reg133,
                      wire119})));
            end
          reg137 <= $unsigned((forvar130[(3'h6):(2'h3)] ?
              ((forvar130[(4'hc):(1'h0)] ? reg134 : (8'ha3)) ?
                  ((reg129 ? forvar135 : wire119) ?
                      forvar124[(3'h5):(3'h5)] : $unsigned(forvar135)) : (~&(reg136 ?
                      reg136 : reg127))) : (reg134 < ($unsigned(reg129) ~^ $unsigned((8'h9e))))));
        end
      for (forvar138 = (1'h0); (forvar138 < (2'h2)); forvar138 = (forvar138 + (1'h1)))
        begin
          for (forvar139 = (1'h0); (forvar139 < (3'h4)); forvar139 = (forvar139 + (1'h1)))
            begin
              reg140 = wire117[(2'h2):(1'h1)];
              reg141 = (8'hbe);
              reg142 <= reg140;
            end
          for (forvar143 = (1'h0); (forvar143 < (2'h2)); forvar143 = (forvar143 + (1'h1)))
            begin
              reg144 <= ($signed({((reg136 >> (8'ha3)) && {forvar139, (8'had)}),
                  (~$unsigned(reg137))}) <<< {reg136,
                  forvar130[(4'ha):(3'h5)]});
              reg145 = reg134;
              reg146 = $unsigned({reg140[(1'h1):(1'h1)]});
            end
          reg147 <= $unsigned(((($signed(forvar131) >= $signed(reg134)) ?
                  reg141[(2'h2):(2'h2)] : $signed(forvar130)) ?
              forvar130 : $unsigned(reg127[(4'hb):(4'h8)])));
        end
    end
  assign wire148 = (!((~^$signed((reg142 && reg147))) ?
                       (~$signed($signed(reg147))) : wire123[(2'h3):(2'h2)]));
  assign wire149 = (|reg144);
  always
    @(posedge clk) begin
      reg150 <= ($signed(wire117) ?
          ($unsigned($signed((^~wire119))) & $unsigned(wire119)) : $unsigned((($signed(reg128) ~^ (wire117 ?
              (8'h9c) : reg137)) >> wire121)));
      for (forvar151 = (1'h0); (forvar151 < (2'h2)); forvar151 = (forvar151 + (1'h1)))
        begin
          for (forvar152 = (1'h0); (forvar152 < (3'h4)); forvar152 = (forvar152 + (1'h1)))
            begin
              reg153 <= wire149;
              reg154 = ((8'hb8) * ((wire118 < ($unsigned(reg126) <= wire148)) ?
                  ((~^reg144) <<< {reg142[(3'h5):(3'h4)]}) : $unsigned((7'h40))));
              reg155 <= reg126;
              reg156 <= (8'hb8);
              reg157 <= reg155;
            end
          for (forvar158 = (1'h0); (forvar158 < (1'h1)); forvar158 = (forvar158 + (1'h1)))
            begin
              reg159 <= (reg133[(4'h8):(1'h1)] - {(~^((wire123 | reg144) ?
                      (-reg156) : $unsigned(wire119)))});
              reg160 <= (!(($unsigned((reg150 >> reg147)) ?
                      (|$signed(wire148)) : ((reg128 ?
                          (8'ha8) : reg142) && (forvar151 ?
                          wire148 : reg155))) ?
                  (reg144 + reg133[(4'hd):(4'h8)]) : (^(wire120 ?
                      forvar158[(2'h2):(1'h1)] : $signed(forvar151)))));
              reg161 <= reg157;
              reg162 <= forvar158[(4'hb):(3'h6)];
            end
        end
      for (forvar163 = (1'h0); (forvar163 < (2'h2)); forvar163 = (forvar163 + (1'h1)))
        begin
          for (forvar164 = (1'h0); (forvar164 < (1'h1)); forvar164 = (forvar164 + (1'h1)))
            begin
              reg165 <= reg136[(2'h3):(2'h2)];
            end
          reg166 <= $unsigned($unsigned($unsigned($unsigned($signed(wire118)))));
          for (forvar167 = (1'h0); (forvar167 < (1'h0)); forvar167 = (forvar167 + (1'h1)))
            begin
              reg168 = $signed(reg144);
              reg169 = (-reg128[(4'ha):(3'h7)]);
              reg170 <= reg160;
            end
          reg171 <= reg157[(3'h7):(3'h7)];
        end
      for (forvar172 = (1'h0); (forvar172 < (2'h2)); forvar172 = (forvar172 + (1'h1)))
        begin
          reg173 = {reg161[(4'hb):(2'h2)]};
        end
      reg174 = reg166[(2'h2):(1'h1)];
    end
  assign wire175 = (wire122 >>> $unsigned($unsigned($signed($signed(reg142)))));
  module176 #() modinst246 (.wire178(wire123), .wire180(reg162), .clk(clk), .wire177(wire119), .wire181(wire117), .wire179(reg161), .y(wire245));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param112 = ((~^((((8'ha0) ? (8'hb6) : (8'had)) ? (~|(8'ha7)) : ((8'hb3) <= (8'h9f))) ? (8'ha0) : ({(8'hb8), (7'h43)} ? (+(8'hbc)) : {(7'h44), (8'hb0)}))) | ((~&(((8'hbb) >> (8'hb3)) ? {(8'h9f)} : ((8'haa) ? (7'h42) : (8'h9c)))) != (^{(~(8'h9c))}))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'h3da):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h14):(1'h0)] wire8;
  input wire signed [(3'h7):(1'h0)] wire7;
  input wire signed [(4'ha):(1'h0)] wire6;
  input wire signed [(4'hd):(1'h0)] wire5;
  wire signed [(2'h3):(1'h0)] wire88;
  wire [(4'he):(1'h0)] wire87;
  wire signed [(4'ha):(1'h0)] wire86;
  wire [(4'hf):(1'h0)] wire85;
  wire signed [(5'h15):(1'h0)] wire84;
  wire [(3'h6):(1'h0)] wire75;
  wire [(4'hf):(1'h0)] wire74;
  wire signed [(5'h14):(1'h0)] wire73;
  wire [(5'h13):(1'h0)] wire36;
  wire [(4'hb):(1'h0)] wire35;
  wire signed [(2'h3):(1'h0)] wire34;
  wire signed [(2'h3):(1'h0)] wire32;
  wire [(5'h12):(1'h0)] wire9;
  reg signed [(4'hd):(1'h0)] reg111 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg110 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg109 = (1'h0);
  reg [(2'h2):(1'h0)] reg97 = (1'h0);
  reg [(2'h3):(1'h0)] reg101 = (1'h0);
  reg [(4'hb):(1'h0)] reg99 = (1'h0);
  reg [(5'h11):(1'h0)] reg96 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg91 = (1'h0);
  reg [(4'hb):(1'h0)] reg89 = (1'h0);
  reg [(3'h7):(1'h0)] reg83 = (1'h0);
  reg [(4'hb):(1'h0)] reg82 = (1'h0);
  reg [(5'h13):(1'h0)] reg81 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg79 = (1'h0);
  reg [(5'h14):(1'h0)] reg78 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg77 = (1'h0);
  reg [(5'h10):(1'h0)] reg72 = (1'h0);
  reg [(3'h6):(1'h0)] reg71 = (1'h0);
  reg [(3'h4):(1'h0)] reg70 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg69 = (1'h0);
  reg [(4'ha):(1'h0)] reg67 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg62 = (1'h0);
  reg [(5'h15):(1'h0)] reg60 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg59 = (1'h0);
  reg [(4'hf):(1'h0)] reg56 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg55 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg52 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg49 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg46 = (1'h0);
  reg [(4'hf):(1'h0)] reg44 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg43 = (1'h0);
  reg [(4'hd):(1'h0)] reg42 = (1'h0);
  reg [(5'h15):(1'h0)] reg40 = (1'h0);
  reg [(4'hc):(1'h0)] reg108 = (1'h0);
  reg [(5'h13):(1'h0)] reg107 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar106 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg105 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar104 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar98 = (1'h0);
  reg [(4'hc):(1'h0)] reg103 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg102 = (1'h0);
  reg [(5'h15):(1'h0)] reg100 = (1'h0);
  reg signed [(4'he):(1'h0)] reg98 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar97 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg95 = (1'h0);
  reg [(5'h10):(1'h0)] reg94 = (1'h0);
  reg signed [(4'he):(1'h0)] reg93 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar92 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar90 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg80 = (1'h0);
  reg [(3'h4):(1'h0)] forvar76 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg68 = (1'h0);
  reg [(2'h2):(1'h0)] forvar66 = (1'h0);
  reg [(3'h7):(1'h0)] reg65 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg64 = (1'h0);
  reg [(4'h9):(1'h0)] reg63 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar61 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg58 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar57 = (1'h0);
  reg [(2'h2):(1'h0)] reg54 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar53 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar51 = (1'h0);
  reg [(5'h11):(1'h0)] reg50 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg47 = (1'h0);
  reg [(5'h10):(1'h0)] forvar45 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg41 = (1'h0);
  reg [(2'h3):(1'h0)] forvar39 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar38 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg37 = (1'h0);
  assign y = {wire88,
                 wire87,
                 wire86,
                 wire85,
                 wire84,
                 wire75,
                 wire74,
                 wire73,
                 wire36,
                 wire35,
                 wire34,
                 wire32,
                 wire9,
                 reg111,
                 reg110,
                 reg109,
                 reg97,
                 reg101,
                 reg99,
                 reg96,
                 reg91,
                 reg89,
                 reg83,
                 reg82,
                 reg81,
                 reg79,
                 reg78,
                 reg77,
                 reg72,
                 reg71,
                 reg70,
                 reg69,
                 reg67,
                 reg62,
                 reg60,
                 reg59,
                 reg56,
                 reg55,
                 reg52,
                 reg49,
                 reg48,
                 reg46,
                 reg44,
                 reg43,
                 reg42,
                 reg40,
                 reg108,
                 reg107,
                 forvar106,
                 reg105,
                 forvar104,
                 forvar98,
                 reg103,
                 reg102,
                 reg100,
                 reg98,
                 forvar97,
                 reg95,
                 reg94,
                 reg93,
                 forvar92,
                 forvar90,
                 reg80,
                 forvar76,
                 reg68,
                 forvar66,
                 reg65,
                 reg64,
                 reg63,
                 forvar61,
                 reg58,
                 forvar57,
                 reg54,
                 forvar53,
                 forvar51,
                 reg50,
                 reg47,
                 forvar45,
                 reg41,
                 forvar39,
                 forvar38,
                 reg37,
                 (1'h0)};
  assign wire9 = ({(($signed((8'ha9)) ?
                         (~wire8) : (~^wire6)) >> ($unsigned(wire8) ?
                         (wire7 ? wire6 : wire5) : $unsigned(wire7))),
                     $unsigned((((8'hab) < wire6) << (wire8 ?
                         wire8 : wire8)))} >> $unsigned($signed(wire8[(3'h7):(3'h5)])));
  module10 #() modinst33 (wire32, clk, wire7, wire9, wire6, wire8);
  assign wire34 = ((^wire7[(2'h2):(1'h0)]) | wire32);
  assign wire35 = ((7'h43) ? $signed((-({wire5} & (&wire6)))) : wire6);
  assign wire36 = ((wire32 * $unsigned(({wire9} ?
                      $unsigned(wire7) : $unsigned(wire8)))) | wire9);
  always
    @(posedge clk) begin
      reg37 = ((wire34 || $unsigned($signed(wire36))) && $unsigned(wire34[(2'h2):(1'h0)]));
      for (forvar38 = (1'h0); (forvar38 < (1'h0)); forvar38 = (forvar38 + (1'h1)))
        begin
          for (forvar39 = (1'h0); (forvar39 < (2'h2)); forvar39 = (forvar39 + (1'h1)))
            begin
              reg40 <= (8'h9f);
              reg41 = (reg40[(4'h8):(3'h7)] ?
                  ($signed((!$signed(wire36))) ?
                      (~&$signed((wire32 * (7'h42)))) : $unsigned(wire5[(1'h1):(1'h1)])) : ($signed($signed(((8'h9c) >> wire6))) ?
                      (^((wire8 ?
                          wire32 : forvar39) ^~ (wire36 ^ reg37))) : $unsigned(($signed(reg40) > (+forvar39)))));
              reg42 <= $signed(wire9[(5'h12):(3'h5)]);
              reg43 <= {{($signed($signed(wire5)) ^ $unsigned((~&wire32)))},
                  forvar38[(3'h4):(1'h1)]};
              reg44 <= {reg37,
                  (($signed(wire8) ?
                          (wire35 ?
                              $signed(reg42) : reg43[(5'h11):(2'h3)]) : {$unsigned(wire34)}) ?
                      $signed(reg40) : reg40)};
            end
          for (forvar45 = (1'h0); (forvar45 < (1'h0)); forvar45 = (forvar45 + (1'h1)))
            begin
              reg46 <= $signed(((((forvar38 & (7'h40)) >>> {wire35}) ^ (~(~^(8'hac)))) <<< (({(8'ha8),
                      reg44} ?
                  $signed(wire35) : $unsigned(wire7)) * wire7)));
              reg47 = (~^{$unsigned((reg40 >>> (wire5 ~^ wire6)))});
              reg48 <= (8'hb1);
              reg49 <= reg42[(3'h7):(3'h7)];
              reg50 = wire6;
            end
          for (forvar51 = (1'h0); (forvar51 < (1'h0)); forvar51 = (forvar51 + (1'h1)))
            begin
              reg52 <= $unsigned($unsigned($signed((|(wire34 >> forvar51)))));
            end
          for (forvar53 = (1'h0); (forvar53 < (2'h2)); forvar53 = (forvar53 + (1'h1)))
            begin
              reg54 = $signed($signed((((|reg43) ?
                      (wire7 & reg43) : ((8'hb8) ? (7'h40) : reg43)) ?
                  (8'ha2) : $signed(reg37))));
              reg55 <= $signed($signed((8'hb1)));
              reg56 <= (((8'h9d) ?
                      {(forvar39 ?
                              $signed((8'hae)) : reg50[(5'h10):(1'h1)])} : (reg48[(5'h13):(1'h0)] ?
                          ((~reg50) ?
                              (reg50 ?
                                  (8'ha1) : wire36) : $unsigned(reg40)) : $unsigned((~reg41)))) ?
                  (^~($unsigned($unsigned(forvar39)) >>> $signed($signed(reg55)))) : $signed(wire8));
            end
        end
      for (forvar57 = (1'h0); (forvar57 < (3'h4)); forvar57 = (forvar57 + (1'h1)))
        begin
          if (($unsigned(($unsigned((reg50 ?
              (8'ha5) : reg41)) ^~ $signed($signed(reg56)))) ^~ ($signed(forvar57[(1'h1):(1'h0)]) ?
              ({$signed(forvar57),
                  $unsigned(wire5)} * $unsigned({wire32})) : reg48[(4'ha):(3'h4)])))
            begin
              reg58 = (wire34[(2'h2):(1'h1)] ?
                  forvar45[(4'hc):(1'h1)] : reg50[(3'h5):(3'h5)]);
              reg59 <= {((reg56 ^ $unsigned($unsigned(reg46))) <<< $signed(((wire32 >= forvar45) ?
                      (8'hb9) : forvar53[(3'h4):(2'h2)]))),
                  reg52};
              reg60 <= (~forvar39);
            end
          else
            begin
              reg58 = $signed(reg52[(4'hf):(4'h9)]);
            end
          for (forvar61 = (1'h0); (forvar61 < (2'h3)); forvar61 = (forvar61 + (1'h1)))
            begin
              reg62 <= $unsigned(((|{((8'ha2) ? reg42 : reg58)}) ?
                  {((|wire5) >> wire32)} : (wire35 < reg43[(4'hc):(3'h5)])));
              reg63 = reg55[(3'h7):(2'h3)];
              reg64 = $unsigned((^~reg63[(4'h9):(3'h7)]));
              reg65 = $unsigned($signed($unsigned($signed((reg40 ?
                  forvar61 : reg63)))));
            end
          for (forvar66 = (1'h0); (forvar66 < (1'h1)); forvar66 = (forvar66 + (1'h1)))
            begin
              reg67 <= ({$signed(forvar51[(3'h5):(3'h5)])} == ((-$signed((reg50 ?
                      reg42 : wire6))) ?
                  reg60[(1'h1):(1'h0)] : forvar45));
              reg68 = ((~^$signed(forvar53)) || $signed(reg46));
              reg69 <= (({$unsigned(reg50), (8'h9e)} ?
                  (-(forvar39 <= wire8)) : $unsigned({(reg40 <= reg46),
                      ((8'ha0) ?
                          forvar66 : reg65)})) <= $signed($signed($unsigned((-reg41)))));
              reg70 <= (^~forvar53);
              reg71 <= wire32[(2'h3):(1'h0)];
            end
          reg72 <= $unsigned((!($unsigned((reg69 <<< (8'hb2))) & {reg44})));
        end
    end
  assign wire73 = (|wire8);
  assign wire74 = $unsigned(reg43);
  assign wire75 = wire7;
  always
    @(posedge clk) begin
      for (forvar76 = (1'h0); (forvar76 < (1'h1)); forvar76 = (forvar76 + (1'h1)))
        begin
          if ($unsigned(reg70[(1'h0):(1'h0)]))
            begin
              reg77 <= $unsigned((!(~|$unsigned(reg71))));
              reg78 <= {reg70, (^($unsigned((8'hbb)) - {$signed(wire75)}))};
              reg79 <= $signed((8'hb9));
            end
          else
            begin
              reg77 <= {wire6};
              reg80 = wire35[(3'h5):(3'h4)];
            end
        end
      reg81 <= {($unsigned($unsigned(reg77[(4'h9):(4'h8)])) != reg70)};
      reg82 <= $signed($signed((~|forvar76)));
      reg83 <= reg81[(3'h7):(3'h7)];
    end
  assign wire84 = (wire34 != $signed((!($unsigned(wire74) & (!wire9)))));
  assign wire85 = $unsigned((&$unsigned({$signed(reg62)})));
  assign wire86 = (~$signed($unsigned($signed(reg55[(2'h3):(2'h3)]))));
  assign wire87 = $signed($signed(reg44));
  assign wire88 = ((wire32 ?
                      ((!{reg49, reg55}) ?
                          $unsigned((reg77 ?
                              reg40 : wire73)) : wire8) : $signed(wire85)) < $signed(wire75));
  always
    @(posedge clk) begin
      reg89 <= $signed({reg62[(4'hf):(4'ha)]});
      for (forvar90 = (1'h0); (forvar90 < (1'h1)); forvar90 = (forvar90 + (1'h1)))
        begin
          if (wire34[(1'h0):(1'h0)])
            begin
              reg91 <= ((|{(^~((7'h41) == wire88)),
                      ($unsigned(wire75) ? reg72 : $signed((8'ha2)))}) ?
                  $unsigned(($signed($unsigned(wire74)) * ((~^(8'ha5)) >>> {wire9}))) : $unsigned(($signed((7'h43)) ?
                      $signed((reg89 ?
                          wire85 : (8'hb5))) : $signed($signed((8'hb1))))));
            end
          else
            begin
              reg91 <= {wire5[(4'hb):(3'h6)],
                  $signed($signed((!$unsigned((8'hb7)))))};
            end
        end
      if ($signed((^~$signed($unsigned($unsigned(reg78))))))
        begin
          for (forvar92 = (1'h0); (forvar92 < (2'h3)); forvar92 = (forvar92 + (1'h1)))
            begin
              reg93 = ($unsigned({wire74[(3'h4):(1'h0)],
                  reg67[(3'h6):(1'h0)]}) > (reg70 > (-$unsigned($unsigned(wire73)))));
              reg94 = wire7[(1'h1):(1'h1)];
              reg95 = $unsigned({$signed((reg43 == $signed(wire8))),
                  (reg77[(4'hb):(2'h2)] >>> (~^$signed((8'haa))))});
              reg96 <= reg78;
            end
          for (forvar97 = (1'h0); (forvar97 < (2'h2)); forvar97 = (forvar97 + (1'h1)))
            begin
              reg98 = (^{$signed((reg81[(5'h13):(5'h10)] | $unsigned(wire87)))});
              reg99 <= (!reg67);
              reg100 = $unsigned($signed($signed($unsigned((reg55 ^~ reg98)))));
              reg101 <= $unsigned((^$signed(reg77)));
            end
          reg102 = ($signed({wire85}) ?
              (($signed(wire32[(2'h2):(1'h1)]) >>> ((reg79 ? (8'hb2) : wire5) ?
                      $signed(reg83) : reg77[(4'h8):(3'h4)])) ?
                  (!(wire75 ^~ (reg69 <<< reg44))) : ((~&reg71[(2'h3):(2'h2)]) ?
                      $signed(reg67) : wire6[(2'h3):(2'h2)])) : (wire36[(3'h6):(1'h1)] ?
                  (forvar97 ?
                      $unsigned((reg98 == reg70)) : ((&reg100) == reg79[(2'h3):(1'h0)])) : {((wire8 ?
                              (8'ha5) : reg91) ?
                          reg83 : (reg42 ? reg77 : reg44)),
                      (|(wire9 ? forvar90 : forvar97))}));
          reg103 = wire88[(1'h1):(1'h1)];
        end
      else
        begin
          for (forvar92 = (1'h0); (forvar92 < (2'h3)); forvar92 = (forvar92 + (1'h1)))
            begin
              reg96 <= wire36[(3'h7):(1'h0)];
            end
          reg97 <= $unsigned(reg44[(2'h2):(2'h2)]);
          for (forvar98 = (1'h0); (forvar98 < (2'h2)); forvar98 = (forvar98 + (1'h1)))
            begin
              reg99 <= $signed(((reg60[(4'hb):(3'h5)] <= $unsigned((8'h9e))) ^~ $unsigned(reg72[(4'he):(4'h9)])));
            end
        end
      for (forvar104 = (1'h0); (forvar104 < (3'h4)); forvar104 = (forvar104 + (1'h1)))
        begin
          reg105 = {({reg52[(4'hd):(2'h3)],
                  $unsigned((forvar97 ?
                      reg72 : reg46))} > (forvar90[(3'h6):(1'h0)] ?
                  {$unsigned(reg59),
                      wire32} : $unsigned(reg59[(1'h0):(1'h0)])))};
          for (forvar106 = (1'h0); (forvar106 < (1'h0)); forvar106 = (forvar106 + (1'h1)))
            begin
              reg107 = reg69[(2'h3):(1'h0)];
            end
          reg108 = (reg101[(1'h1):(1'h1)] && (wire75 ?
              $signed($signed((~reg48))) : ($signed(((8'hb9) ?
                      wire84 : forvar90)) ?
                  $signed((-reg98)) : reg98[(1'h1):(1'h0)])));
          reg109 <= reg78[(4'h9):(3'h7)];
          reg110 <= $signed((-reg82[(4'hb):(1'h1)]));
        end
      reg111 <= $unsigned((-((!reg72[(3'h5):(3'h5)]) ?
          (-(forvar106 ? reg97 : wire36)) : reg94[(4'ha):(3'h6)])));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module10
#(parameter param31 = {(!(^~(^(~(8'hbb)))))})
(y, clk, wire14, wire13, wire12, wire11);
  output wire [(32'ha7):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire14;
  input wire [(4'h8):(1'h0)] wire13;
  input wire signed [(2'h3):(1'h0)] wire12;
  input wire signed [(4'hf):(1'h0)] wire11;
  wire [(4'he):(1'h0)] wire28;
  wire [(2'h3):(1'h0)] wire27;
  wire [(4'hf):(1'h0)] wire26;
  wire [(5'h15):(1'h0)] wire25;
  wire signed [(4'ha):(1'h0)] wire24;
  wire [(3'h5):(1'h0)] wire23;
  wire signed [(3'h6):(1'h0)] wire22;
  wire [(4'h8):(1'h0)] wire21;
  wire signed [(4'hb):(1'h0)] wire20;
  wire [(4'hf):(1'h0)] wire19;
  wire [(5'h13):(1'h0)] wire18;
  wire [(5'h10):(1'h0)] wire17;
  wire signed [(3'h6):(1'h0)] wire16;
  wire [(4'hc):(1'h0)] wire15;
  reg signed [(2'h3):(1'h0)] reg30 = (1'h0);
  reg [(2'h2):(1'h0)] forvar29 = (1'h0);
  assign y = {wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 reg30,
                 forvar29,
                 (1'h0)};
  assign wire15 = ($signed($signed(((~&(8'hbe)) ?
                          wire13[(1'h0):(1'h0)] : wire14))) ?
                      wire11 : wire11[(4'h8):(3'h5)]);
  assign wire16 = wire13[(3'h5):(2'h3)];
  assign wire17 = $unsigned(((wire15 <= $unsigned(((8'hb7) ?
                          wire15 : wire14))) ?
                      ($unsigned($unsigned(wire11)) >>> wire12[(1'h0):(1'h0)]) : $signed(wire15)));
  assign wire18 = $signed({wire11, (~&wire17)});
  assign wire19 = {(8'hae),
                      (({{(8'haa)}} || ((~wire18) <= (wire12 >> wire14))) ?
                          wire14[(2'h2):(1'h1)] : wire17[(3'h5):(2'h2)])};
  assign wire20 = $signed((((~wire14) ?
                      wire14 : ((wire18 ? wire17 : (8'hb6)) ?
                          wire18[(5'h12):(2'h3)] : (^(8'hbe)))) ~^ $unsigned($unsigned((~^wire16)))));
  assign wire21 = $unsigned(({$unsigned($unsigned((8'hac))),
                      {$unsigned(wire14)}} < $unsigned($unsigned(wire12[(1'h0):(1'h0)]))));
  assign wire22 = $unsigned($unsigned($unsigned(wire12[(2'h3):(2'h3)])));
  assign wire23 = (({wire12[(1'h0):(1'h0)],
                          wire16[(3'h6):(3'h6)]} * ((!wire15[(1'h0):(1'h0)]) ?
                          wire20[(3'h5):(2'h2)] : $signed((wire17 <= wire21)))) ?
                      wire16 : (-((~|wire22) < {wire11[(3'h6):(2'h2)],
                          (wire15 ? wire19 : wire16)})));
  assign wire24 = $signed(wire22);
  assign wire25 = $signed($unsigned(($unsigned((wire12 ? wire20 : wire23)) ?
                      ($signed(wire15) & (&wire23)) : $unsigned($unsigned(wire13)))));
  assign wire26 = wire15;
  assign wire27 = $signed(((&(wire18 ?
                      (wire17 & wire11) : wire20)) < $unsigned((|$unsigned(wire21)))));
  assign wire28 = wire13[(2'h2):(1'h0)];
  always
    @(posedge clk) begin
      for (forvar29 = (1'h0); (forvar29 < (1'h1)); forvar29 = (forvar29 + (1'h1)))
        begin
          reg30 <= ((($unsigned((wire26 && wire22)) ?
              $unsigned(wire25) : $signed($unsigned((8'ha7)))) <<< wire24) - (($unsigned((wire22 ?
                      wire17 : (8'hb0))) ?
                  ((|wire15) | $unsigned(wire14)) : wire18[(4'hb):(2'h2)]) ?
              $signed((wire18 ?
                  $signed((8'hb2)) : $unsigned(wire13))) : {$signed((8'hae))}));
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module176  (y, clk, wire181, wire180, wire179, wire178, wire177);
  output wire [(32'h2cd):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire181;
  input wire [(4'hd):(1'h0)] wire180;
  input wire [(3'h5):(1'h0)] wire179;
  input wire [(2'h2):(1'h0)] wire178;
  input wire [(5'h13):(1'h0)] wire177;
  wire [(4'hf):(1'h0)] wire238;
  wire signed [(5'h12):(1'h0)] wire187;
  wire signed [(2'h2):(1'h0)] wire186;
  wire signed [(2'h2):(1'h0)] wire185;
  reg [(2'h2):(1'h0)] reg244 = (1'h0);
  reg [(2'h3):(1'h0)] reg237 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg236 = (1'h0);
  reg [(5'h15):(1'h0)] reg234 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg231 = (1'h0);
  reg [(3'h5):(1'h0)] reg228 = (1'h0);
  reg signed [(4'he):(1'h0)] reg227 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg225 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg222 = (1'h0);
  reg [(4'ha):(1'h0)] reg220 = (1'h0);
  reg [(5'h15):(1'h0)] reg217 = (1'h0);
  reg signed [(4'he):(1'h0)] reg215 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg214 = (1'h0);
  reg [(5'h12):(1'h0)] reg213 = (1'h0);
  reg [(4'h8):(1'h0)] reg212 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg198 = (1'h0);
  reg [(4'hc):(1'h0)] reg195 = (1'h0);
  reg [(4'hf):(1'h0)] reg194 = (1'h0);
  reg [(5'h15):(1'h0)] reg191 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar243 = (1'h0);
  reg signed [(4'he):(1'h0)] reg242 = (1'h0);
  reg [(3'h6):(1'h0)] reg241 = (1'h0);
  reg [(3'h4):(1'h0)] forvar240 = (1'h0);
  reg [(4'hd):(1'h0)] forvar239 = (1'h0);
  reg [(2'h3):(1'h0)] forvar235 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar233 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg232 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar230 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg229 = (1'h0);
  reg [(3'h5):(1'h0)] reg226 = (1'h0);
  reg [(3'h6):(1'h0)] forvar224 = (1'h0);
  reg [(4'ha):(1'h0)] reg223 = (1'h0);
  reg [(5'h11):(1'h0)] reg221 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar219 = (1'h0);
  reg [(4'h8):(1'h0)] forvar218 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar216 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg211 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar210 = (1'h0);
  reg [(5'h14):(1'h0)] forvar209 = (1'h0);
  reg [(2'h2):(1'h0)] reg208 = (1'h0);
  reg [(4'hc):(1'h0)] reg207 = (1'h0);
  reg [(4'he):(1'h0)] reg206 = (1'h0);
  reg [(4'ha):(1'h0)] forvar205 = (1'h0);
  reg [(5'h10):(1'h0)] reg204 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg203 = (1'h0);
  reg [(2'h2):(1'h0)] reg202 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg201 = (1'h0);
  reg [(4'hb):(1'h0)] forvar200 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg199 = (1'h0);
  reg [(4'hb):(1'h0)] reg197 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar196 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg196 = (1'h0);
  reg [(4'h8):(1'h0)] reg193 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg192 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar190 = (1'h0);
  reg [(3'h7):(1'h0)] forvar189 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg188 = (1'h0);
  reg [(4'hc):(1'h0)] reg184 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar183 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar182 = (1'h0);
  assign y = {wire238,
                 wire187,
                 wire186,
                 wire185,
                 reg244,
                 reg237,
                 reg236,
                 reg234,
                 reg231,
                 reg228,
                 reg227,
                 reg225,
                 reg222,
                 reg220,
                 reg217,
                 reg215,
                 reg214,
                 reg213,
                 reg212,
                 reg198,
                 reg195,
                 reg194,
                 reg191,
                 forvar243,
                 reg242,
                 reg241,
                 forvar240,
                 forvar239,
                 forvar235,
                 forvar233,
                 reg232,
                 forvar230,
                 reg229,
                 reg226,
                 forvar224,
                 reg223,
                 reg221,
                 forvar219,
                 forvar218,
                 forvar216,
                 reg211,
                 forvar210,
                 forvar209,
                 reg208,
                 reg207,
                 reg206,
                 forvar205,
                 reg204,
                 reg203,
                 reg202,
                 reg201,
                 forvar200,
                 reg199,
                 reg197,
                 forvar196,
                 reg196,
                 reg193,
                 reg192,
                 forvar190,
                 forvar189,
                 reg188,
                 reg184,
                 forvar183,
                 forvar182,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar182 = (1'h0); (forvar182 < (2'h2)); forvar182 = (forvar182 + (1'h1)))
        begin
          for (forvar183 = (1'h0); (forvar183 < (1'h0)); forvar183 = (forvar183 + (1'h1)))
            begin
              reg184 = $unsigned((forvar183 ? forvar183 : wire178));
            end
        end
    end
  assign wire185 = wire177;
  assign wire186 = (^(wire185 >= $signed(wire177[(2'h3):(2'h2)])));
  assign wire187 = wire180[(3'h6):(1'h1)];
  always
    @(posedge clk) begin
      reg188 = (~^wire180);
      for (forvar189 = (1'h0); (forvar189 < (1'h0)); forvar189 = (forvar189 + (1'h1)))
        begin
          for (forvar190 = (1'h0); (forvar190 < (2'h3)); forvar190 = (forvar190 + (1'h1)))
            begin
              reg191 <= (wire177[(5'h13):(3'h6)] - (+(^$signed(wire178[(1'h1):(1'h1)]))));
              reg192 = (~^$signed(((!wire179[(2'h3):(2'h3)]) - (wire185[(1'h1):(1'h0)] ?
                  ((8'hbc) >>> wire178) : $unsigned(wire181)))));
              reg193 = wire181[(1'h1):(1'h1)];
              reg194 <= $unsigned({(8'hbc), $unsigned(wire177)});
              reg195 <= $signed({{$signed($signed((8'hb6))),
                      $signed((~&(8'h9e)))}});
            end
        end
      if ($unsigned(forvar190[(1'h0):(1'h0)]))
        begin
          reg196 = (&(^~($signed($signed((8'h9d))) ?
              (+(wire180 ? wire187 : wire180)) : (-(reg191 ?
                  reg188 : reg192)))));
        end
      else
        begin
          for (forvar196 = (1'h0); (forvar196 < (3'h4)); forvar196 = (forvar196 + (1'h1)))
            begin
              reg197 = ((+reg193[(2'h2):(1'h1)]) ^~ forvar189);
              reg198 <= $signed(wire185);
              reg199 = reg195;
            end
          for (forvar200 = (1'h0); (forvar200 < (3'h4)); forvar200 = (forvar200 + (1'h1)))
            begin
              reg201 = ($signed(wire187[(2'h3):(2'h2)]) ^ reg194[(3'h6):(1'h0)]);
              reg202 = ((!$unsigned($signed((reg188 + (8'ha3))))) & $unsigned($unsigned((reg198[(2'h2):(1'h0)] * $unsigned(reg201)))));
              reg203 = (^$signed((~^{$unsigned(wire187)})));
            end
          reg204 = reg196;
          for (forvar205 = (1'h0); (forvar205 < (1'h1)); forvar205 = (forvar205 + (1'h1)))
            begin
              reg206 = (~{forvar205[(3'h6):(3'h5)], $unsigned((^(-wire177)))});
              reg207 = (~|reg195);
            end
          reg208 = (($unsigned(reg198[(2'h2):(1'h0)]) <<< ($unsigned(reg195) ^~ $unsigned($unsigned(wire181)))) ?
              $signed($signed((!(reg193 >>> reg206)))) : reg198);
        end
      for (forvar209 = (1'h0); (forvar209 < (2'h2)); forvar209 = (forvar209 + (1'h1)))
        begin
          for (forvar210 = (1'h0); (forvar210 < (1'h1)); forvar210 = (forvar210 + (1'h1)))
            begin
              reg211 = reg203[(2'h2):(1'h0)];
              reg212 <= $signed(({$signed($signed(reg202))} ?
                  (wire178 ?
                      (~|{(8'ha5), forvar209}) : {(reg207 ? forvar189 : reg192),
                          {reg198}}) : (-reg208)));
              reg213 <= $signed((-$signed(forvar205[(4'h8):(1'h0)])));
              reg214 <= $unsigned(reg202[(1'h1):(1'h0)]);
              reg215 <= (~^({reg197} - {((forvar190 < reg198) ?
                      forvar200[(1'h0):(1'h0)] : (!reg191))}));
            end
          for (forvar216 = (1'h0); (forvar216 < (1'h1)); forvar216 = (forvar216 + (1'h1)))
            begin
              reg217 <= ($unsigned($signed((+reg198[(1'h1):(1'h1)]))) ?
                  $unsigned($signed(((reg195 ?
                      (8'hb4) : reg202) > $unsigned((8'had))))) : forvar209[(4'hb):(4'hb)]);
            end
        end
      for (forvar218 = (1'h0); (forvar218 < (1'h0)); forvar218 = (forvar218 + (1'h1)))
        begin
          for (forvar219 = (1'h0); (forvar219 < (3'h4)); forvar219 = (forvar219 + (1'h1)))
            begin
              reg220 <= (($unsigned(reg203[(3'h4):(3'h4)]) + (~|reg198)) ?
                  (~^(&$signed((+reg214)))) : reg203[(1'h1):(1'h1)]);
              reg221 = (^~{$signed((+(reg220 | reg206)))});
              reg222 <= $signed(($unsigned((!reg195)) ?
                  (forvar205 - wire179) : (~^$unsigned($unsigned(forvar189)))));
              reg223 = (~|($signed($unsigned((-wire178))) ?
                  wire180 : $unsigned(forvar205)));
            end
          for (forvar224 = (1'h0); (forvar224 < (1'h1)); forvar224 = (forvar224 + (1'h1)))
            begin
              reg225 <= reg207;
              reg226 = wire180;
              reg227 <= ((+(8'hb8)) ?
                  ((reg197[(4'ha):(2'h2)] ?
                          $signed({forvar196}) : (wire185[(2'h2):(2'h2)] <= reg201)) ?
                      {(8'hb5),
                          $signed((&(8'hb1)))} : {$unsigned($unsigned(forvar216))}) : (~|forvar190));
              reg228 <= (&$unsigned(($unsigned((8'hba)) ?
                  ((-(8'h9f)) && $signed(reg221)) : reg225[(3'h4):(2'h3)])));
              reg229 = $signed((^~reg208));
            end
          for (forvar230 = (1'h0); (forvar230 < (2'h3)); forvar230 = (forvar230 + (1'h1)))
            begin
              reg231 <= (~(reg195 >> ($signed(forvar209[(2'h3):(1'h1)]) <<< reg212)));
              reg232 = ({(|reg228[(2'h2):(1'h0)]),
                  $signed((~|(reg228 ? reg203 : wire178)))} + ({forvar190} ?
                  ({{reg217}} ?
                      forvar216[(1'h1):(1'h1)] : $signed({reg198})) : (~^(&(reg192 ?
                      reg204 : reg204)))));
            end
          for (forvar233 = (1'h0); (forvar233 < (1'h1)); forvar233 = (forvar233 + (1'h1)))
            begin
              reg234 <= (reg232[(1'h0):(1'h0)] ? {forvar189} : reg226);
            end
          for (forvar235 = (1'h0); (forvar235 < (3'h4)); forvar235 = (forvar235 + (1'h1)))
            begin
              reg236 <= ((reg193 < ((~&$signed(forvar230)) ?
                  reg223[(1'h0):(1'h0)] : ((reg232 ? wire187 : forvar230) ?
                      ((8'ha4) ? forvar230 : reg217) : {forvar233,
                          (8'h9d)}))) * $unsigned(wire187));
              reg237 <= {reg221[(5'h11):(4'hb)],
                  $unsigned((reg211[(3'h4):(2'h2)] ?
                      forvar216[(4'he):(2'h3)] : $signed({(7'h40), reg195})))};
            end
        end
    end
  assign wire238 = $unsigned((reg191 ?
                       $unsigned(reg191) : (+(+$signed((7'h44))))));
  always
    @(posedge clk) begin
      for (forvar239 = (1'h0); (forvar239 < (3'h4)); forvar239 = (forvar239 + (1'h1)))
        begin
          for (forvar240 = (1'h0); (forvar240 < (2'h3)); forvar240 = (forvar240 + (1'h1)))
            begin
              reg241 = (!$unsigned(((8'ha7) ?
                  $signed(wire177[(4'hf):(4'ha)]) : (+(+reg214)))));
              reg242 = wire186;
            end
          for (forvar243 = (1'h0); (forvar243 < (3'h4)); forvar243 = (forvar243 + (1'h1)))
            begin
              reg244 <= $unsigned({(((&(7'h41)) ?
                          (reg215 ? (8'hb7) : wire187) : (forvar243 ?
                              reg220 : forvar239)) ?
                      wire238 : (wire178 ?
                          reg191[(5'h13):(1'h1)] : (reg237 ?
                              wire178 : reg213)))});
            end
        end
    end
endmodule