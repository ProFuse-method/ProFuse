(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param30 = (8'hb8))
(y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h13d):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire4;
  input wire signed [(3'h7):(1'h0)] wire3;
  input wire signed [(4'he):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire [(4'hd):(1'h0)] wire0;
  wire [(3'h6):(1'h0)] wire29;
  wire [(5'h11):(1'h0)] wire6;
  wire signed [(5'h14):(1'h0)] wire5;
  reg [(3'h5):(1'h0)] reg28 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg27 = (1'h0);
  reg [(3'h6):(1'h0)] reg25 = (1'h0);
  reg [(4'ha):(1'h0)] reg23 = (1'h0);
  reg [(5'h14):(1'h0)] reg22 = (1'h0);
  reg [(4'hf):(1'h0)] reg20 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg18 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg17 = (1'h0);
  reg [(5'h10):(1'h0)] reg16 = (1'h0);
  reg [(5'h15):(1'h0)] reg15 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg14 = (1'h0);
  reg [(5'h14):(1'h0)] reg13 = (1'h0);
  reg [(5'h12):(1'h0)] reg12 = (1'h0);
  reg [(4'he):(1'h0)] reg10 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg9 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg8 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar26 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg24 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg19 = (1'h0);
  reg [(5'h11):(1'h0)] reg11 = (1'h0);
  assign y = {wire29,
                 wire6,
                 wire5,
                 reg28,
                 reg27,
                 reg25,
                 reg23,
                 reg22,
                 reg20,
                 reg18,
                 reg17,
                 reg16,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 forvar26,
                 reg24,
                 reg21,
                 reg19,
                 reg11,
                 (1'h0)};
  assign wire5 = (wire0[(1'h0):(1'h0)] || (+$signed($signed(wire1))));
  assign wire6 = wire3;
  always
    @(posedge clk) begin
      if (wire2)
        begin
          reg7 <= (wire3 - $unsigned((((^~wire3) ?
              wire5 : (wire4 == (8'ha7))) ^ {((7'h42) > wire4)})));
          if ($unsigned($signed($signed("Ml6ZXsGXCD5BwTt"))))
            begin
              reg8 <= wire4[(1'h0):(1'h0)];
              reg9 <= $signed($unsigned("eWItUxkxJR"));
              reg10 <= (&"onSMeVbavXp6Cunt");
            end
          else
            begin
              reg8 <= $signed(wire4[(2'h2):(1'h0)]);
            end
        end
      else
        begin
          if ({(8'haa),
              (("ZyBStvF8tgNSyaDJU" ?
                  $unsigned((wire2 ^~ (8'haf))) : reg9[(3'h4):(2'h3)]) * (wire4[(3'h5):(3'h5)] ?
                  ($signed(wire5) ?
                      (8'h9d) : (wire3 ?
                          wire1 : wire5)) : ($signed(wire0) >> $signed(reg8))))})
            begin
              reg7 <= $signed(((reg7 <= $signed((reg7 ?
                  wire2 : reg8))) && (~^$unsigned((wire6 ? wire5 : (8'hb2))))));
            end
          else
            begin
              reg11 = $unsigned($unsigned(reg7));
            end
        end
      if ((~&$signed(reg9)))
        begin
          reg12 <= (reg8[(2'h2):(1'h0)] == ($signed(wire5) << (&(8'hb6))));
          reg13 <= ((~|($unsigned(reg7) ?
                  (&$unsigned(wire2)) : ($unsigned(wire4) > $signed(wire0)))) ?
              (~&wire1) : ((+wire2) + (8'hba)));
          reg14 <= ({((wire6[(4'hb):(3'h5)] >>> $signed(wire6)) | ($signed(reg13) ^ $signed(wire6)))} ?
              $signed(wire6) : $signed({"wys5bWx2Eb5",
                  $unsigned((wire4 >= (8'ha2)))}));
          if ({((^~((wire6 ? (8'hb0) : wire6) << reg13[(2'h3):(1'h0)])) ?
                  (reg13 ?
                      ("hZ" ?
                          reg12 : reg7[(4'hd):(4'ha)]) : (~|reg11[(3'h5):(3'h5)])) : ({reg10} >> $unsigned((!wire1))))})
            begin
              reg15 <= reg11[(3'h7):(1'h1)];
              reg16 <= reg13[(4'hd):(4'hd)];
              reg17 <= (8'ha7);
            end
          else
            begin
              reg15 <= (($signed($unsigned(reg14[(4'he):(1'h0)])) ?
                      wire1[(1'h0):(1'h0)] : ($signed(reg13[(4'hd):(2'h2)]) >>> (reg15[(5'h13):(2'h2)] < $signed((8'ha4))))) ?
                  "WF9EyNN43PdLRonG" : reg17[(4'h8):(4'h8)]);
              reg16 <= reg9;
            end
          reg18 <= reg17[(3'h6):(2'h3)];
        end
      else
        begin
          if ({reg9[(4'hc):(3'h5)], reg11[(4'hc):(4'hc)]})
            begin
              reg19 = "LfoXaFeR4cZthM";
              reg20 <= (^"Y");
            end
          else
            begin
              reg12 <= $unsigned(({"13ifnLsoW31F", "y2cwfE"} ?
                  ($unsigned((8'haf)) >= wire3) : (8'hbe)));
              reg13 <= "5NmCAXV58nS4c";
              reg19 = wire1[(2'h3):(1'h0)];
              reg20 <= (~$unsigned((($signed(wire3) > (reg15 ?
                  wire4 : reg7)) | (|(wire0 ? reg11 : reg7)))));
            end
          reg21 = $unsigned((&reg18[(3'h5):(1'h1)]));
          if ((|"rDQ8hNkBXpdKAAJfUDO"))
            begin
              reg22 <= {$unsigned($signed({reg9}))};
              reg23 <= "R4MBwXMs1Jios1vN31O";
              reg24 = (8'hb6);
              reg25 <= {reg23[(3'h6):(2'h2)],
                  {$unsigned((((8'ha3) ? reg10 : reg20) ?
                          wire4 : $signed(reg23))),
                      $unsigned((|"J2kBR6ogymvuD1"))}};
            end
          else
            begin
              reg22 <= (("uJGv8PsGlc5YYKExSL12" == reg15[(3'h5):(1'h0)]) ?
                  reg21 : "ZwD12dhZkW5MvuRN4");
              reg23 <= "3lWQhXI5Aro2Sivmbkiq";
            end
          for (forvar26 = (1'h0); (forvar26 < (3'h4)); forvar26 = (forvar26 + (1'h1)))
            begin
              reg27 <= ((!reg19) ?
                  (~&forvar26[(2'h3):(2'h3)]) : ((~^$unsigned(wire5[(1'h0):(1'h0)])) + "ZrYkHbFuKIsvz94Fo"));
              reg28 <= $unsigned($signed(reg25));
            end
        end
    end
  assign wire29 = {$unsigned({$unsigned((reg22 ? (8'hbb) : reg10))}),
                      reg8[(2'h2):(2'h2)]};
endmodule