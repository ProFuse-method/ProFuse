(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param40 = (~^((!({(8'hac), (8'h9f)} ? ((8'h9e) >> (8'h9c)) : (+(8'hbe)))) + ((((8'h9c) > (8'h9c)) == (!(8'hbf))) ? (((7'h43) ? (8'ha3) : (8'ha9)) > ((8'hab) ? (8'hb5) : (8'h9c))) : (((8'ha4) < (8'haa)) <= ((8'ha2) - (8'hb7)))))), 
parameter param41 = {((({param40, param40} <= (param40 && param40)) == param40) | (((param40 & param40) ^~ (|(8'ha4))) ? ({param40} && (param40 & param40)) : (^~param40)))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1c0):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire3;
  input wire signed [(5'h11):(1'h0)] wire2;
  input wire signed [(5'h13):(1'h0)] wire1;
  input wire signed [(5'h11):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire7;
  wire signed [(3'h4):(1'h0)] wire6;
  wire signed [(3'h7):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire4;
  reg signed [(5'h14):(1'h0)] reg38 = (1'h0);
  reg [(5'h13):(1'h0)] reg37 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg36 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg35 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg34 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg33 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg32 = (1'h0);
  reg [(4'he):(1'h0)] reg31 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg29 = (1'h0);
  reg [(4'hd):(1'h0)] reg28 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg27 = (1'h0);
  reg [(3'h7):(1'h0)] reg26 = (1'h0);
  reg [(5'h12):(1'h0)] reg25 = (1'h0);
  reg [(3'h6):(1'h0)] reg23 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg22 = (1'h0);
  reg [(4'ha):(1'h0)] reg21 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg20 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg17 = (1'h0);
  reg [(5'h13):(1'h0)] reg16 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg14 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg13 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg12 = (1'h0);
  reg [(4'h8):(1'h0)] reg11 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg8 = (1'h0);
  reg [(4'hd):(1'h0)] reg39 = (1'h0);
  reg [(4'h8):(1'h0)] forvar30 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg24 = (1'h0);
  reg signed [(4'he):(1'h0)] reg19 = (1'h0);
  reg [(4'hf):(1'h0)] forvar18 = (1'h0);
  reg [(3'h7):(1'h0)] reg15 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar10 = (1'h0);
  reg [(5'h12):(1'h0)] forvar9 = (1'h0);
  assign y = {wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg38,
                 reg37,
                 reg36,
                 reg35,
                 reg34,
                 reg33,
                 reg32,
                 reg31,
                 reg29,
                 reg28,
                 reg27,
                 reg26,
                 reg25,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg17,
                 reg16,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg8,
                 reg39,
                 forvar30,
                 reg30,
                 reg24,
                 reg19,
                 forvar18,
                 reg15,
                 forvar10,
                 forvar9,
                 (1'h0)};
  assign wire4 = $unsigned(wire2[(2'h2):(1'h0)]);
  assign wire5 = ({$signed(wire4),
                     ($signed((wire1 ?
                         wire4 : wire4)) | "GUrhz5oXxp")} >= $unsigned($signed($signed($signed(wire3)))));
  assign wire6 = wire2;
  assign wire7 = {(^({(~^wire0), $signed(wire0)} ?
                         wire3 : wire1[(4'h9):(2'h3)]))};
  always
    @(posedge clk) begin
      reg8 <= $signed(((wire2 ~^ "2lXXQoLfvB5gsWH") ?
          $signed($unsigned($signed(wire4))) : wire2));
      for (forvar9 = (1'h0); (forvar9 < (1'h1)); forvar9 = (forvar9 + (1'h1)))
        begin
          for (forvar10 = (1'h0); (forvar10 < (1'h0)); forvar10 = (forvar10 + (1'h1)))
            begin
              reg11 <= ("a6PMt0KSV" < (wire0[(2'h2):(1'h0)] ?
                  (wire5[(1'h1):(1'h1)] > wire5) : wire2));
              reg12 <= $signed(wire0[(3'h4):(1'h0)]);
              reg13 <= $signed($unsigned(wire0));
            end
          reg14 <= ((forvar10 < ("E199frTkMSSC" < $signed(wire5[(1'h1):(1'h0)]))) ?
              "QJsDzlP54fw90" : $unsigned((~^$unsigned(wire5))));
          reg15 = (!$unsigned(reg14));
          reg16 <= ("pcYxmrv5tqkHlZ4dNl4" ?
              $signed("Dd1gv") : ((~^(wire3 >= (wire3 ? wire7 : reg12))) ?
                  $unsigned((8'hbb)) : "s8dWd3dwkhbG"));
          reg17 <= wire5[(3'h4):(1'h1)];
        end
      for (forvar18 = (1'h0); (forvar18 < (3'h4)); forvar18 = (forvar18 + (1'h1)))
        begin
          reg19 = ({"pYd69wLhXOmH", $unsigned(wire0)} ?
              wire0 : ("IvQKP7BC2WKLdEJc9" ?
                  ((reg15 > $unsigned(reg13)) ?
                      ((reg16 != reg17) <<< $signed(reg8)) : ("87fqhe" <<< $signed(forvar9))) : ((~|wire4[(2'h2):(1'h0)]) ?
                      "E" : ({wire4, (8'h9d)} * "nKda9pwl"))));
          if ("UaZdYDvw3rPLPwv2")
            begin
              reg20 <= (8'ha3);
            end
          else
            begin
              reg20 <= (8'hbb);
              reg21 <= "HyYYdEDHh6LtpEXNMkQ";
              reg22 <= (!$signed({"f0JG3w07gwlvNdgQUG", "Oul"}));
            end
          if ("cerptyQR0FEbqgLWMx")
            begin
              reg23 <= (((!wire7) ?
                  reg20 : ($unsigned(wire3) ?
                      forvar18 : ($unsigned((8'hac)) ~^ (wire7 ?
                          wire6 : wire3)))) >> (8'ha6));
              reg24 = {("58w1rP8aV" ? "" : $signed(reg22[(4'h9):(3'h4)])),
                  {"eHKZ"}};
            end
          else
            begin
              reg23 <= (reg8[(3'h7):(2'h2)] ? reg19 : $unsigned(reg14));
              reg25 <= ((($signed(reg8) <= "CNs6ioeDqDxckR") - reg20) || ((!reg21) < (^$unsigned(forvar18))));
              reg26 <= (wire6[(3'h4):(2'h3)] || "rxyJbTIZ");
              reg27 <= ("mMwWS1tcdQtJZma1" || ("hVQqPN" ?
                  wire0 : ($unsigned(reg25[(5'h10):(4'hb)]) >>> ((wire1 >> wire6) && reg26))));
              reg28 <= $unsigned("Pgh26uEXZa3bwS");
            end
        end
    end
  always
    @(posedge clk) begin
      reg29 <= reg22;
      if (reg25[(2'h3):(1'h0)])
        begin
          reg30 = (reg13 ? "oXB" : (8'had));
          reg31 <= "F2Y662BTDr5Xs3";
          reg32 <= "U";
          if (reg8[(4'hf):(4'hd)])
            begin
              reg33 <= ((~&$signed(reg16)) < ("q3diBC" + $unsigned(reg21[(4'h8):(1'h0)])));
              reg34 <= reg29;
              reg35 <= wire2[(5'h10):(4'h8)];
              reg36 <= (!$unsigned(reg23[(2'h2):(1'h1)]));
            end
          else
            begin
              reg33 <= reg36;
            end
        end
      else
        begin
          for (forvar30 = (1'h0); (forvar30 < (2'h2)); forvar30 = (forvar30 + (1'h1)))
            begin
              reg31 <= (!$unsigned((reg13 + {"x1o"})));
              reg32 <= (("OVf5OyuxWdG58E1eW" ?
                      $unsigned(wire3[(3'h4):(1'h1)]) : $signed("Y2VNhXdTcz")) ?
                  ("mCYM" >= reg28[(2'h3):(1'h0)]) : {$unsigned($signed((~&(7'h42)))),
                      reg29[(2'h3):(2'h2)]});
            end
          if (wire2)
            begin
              reg33 <= $signed($signed((((reg21 ~^ reg14) ^~ reg34) ?
                  "r2LlAEA4p" : (~(~&reg29)))));
              reg34 <= reg22;
              reg35 <= (~reg25);
              reg36 <= wire1[(4'hb):(3'h6)];
            end
          else
            begin
              reg33 <= (reg13 < reg11[(2'h3):(2'h3)]);
              reg34 <= (8'haf);
            end
          reg37 <= ({$signed($unsigned(reg20)),
              $signed(reg32)} >>> {"UPt9GgWfUE", "sdsqLCfngGgYR"});
        end
      reg38 <= $signed(wire5);
      reg39 = "kZcdaMh8R6IwJG";
    end
endmodule