(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param26 = ((((!((7'h41) == (7'h42))) ? (~&((8'hb5) <<< (7'h40))) : ({(8'hb0), (8'ha4)} >> {(7'h42)})) >>> {{((8'ha8) & (8'hba))}}) == ((!(((8'hac) << (8'h9e)) < ((7'h40) ? (8'ha4) : (8'had)))) < ((~{(8'hbd), (8'hb2)}) ? (((8'hac) < (8'h9f)) < ((8'haf) ? (8'hbb) : (8'hb3))) : ((~|(7'h44)) ? (-(7'h44)) : ((8'hb1) ? (8'hb2) : (8'hb0)))))), 
parameter param27 = (param26 ? ((^(-(param26 > (8'ha4)))) ? (^~param26) : param26) : param26))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h108):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire3;
  input wire [(5'h13):(1'h0)] wire2;
  input wire signed [(4'hd):(1'h0)] wire1;
  input wire signed [(4'hf):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire25;
  wire [(4'h8):(1'h0)] wire15;
  wire [(5'h14):(1'h0)] wire5;
  wire [(4'hb):(1'h0)] wire4;
  reg signed [(4'h9):(1'h0)] reg24 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg23 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg22 = (1'h0);
  reg [(4'hc):(1'h0)] reg20 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg17 = (1'h0);
  reg [(5'h15):(1'h0)] reg14 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg13 = (1'h0);
  reg [(2'h2):(1'h0)] reg12 = (1'h0);
  reg [(5'h13):(1'h0)] reg10 = (1'h0);
  reg [(4'he):(1'h0)] reg9 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg8 = (1'h0);
  reg [(5'h14):(1'h0)] reg7 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg6 = (1'h0);
  reg [(3'h6):(1'h0)] reg21 = (1'h0);
  reg [(4'hd):(1'h0)] reg16 = (1'h0);
  reg [(3'h5):(1'h0)] reg11 = (1'h0);
  assign y = {wire25,
                 wire15,
                 wire5,
                 wire4,
                 reg24,
                 reg23,
                 reg22,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg14,
                 reg13,
                 reg12,
                 reg10,
                 reg9,
                 reg8,
                 reg7,
                 reg6,
                 reg21,
                 reg16,
                 reg11,
                 (1'h0)};
  assign wire4 = ($unsigned((!$unsigned(wire3[(3'h7):(2'h3)]))) ^ {$unsigned("TueUx37z5ZZZgaJ")});
  assign wire5 = {(8'ha6)};
  always
    @(posedge clk) begin
      reg6 <= (8'ha0);
      reg7 <= wire1[(2'h2):(2'h2)];
      if (wire1)
        begin
          reg8 <= reg6;
        end
      else
        begin
          reg8 <= (($signed(((wire3 ? (8'h9f) : reg6) ?
                  $signed(wire4) : $signed(wire2))) < wire2) ?
              $unsigned($unsigned({(~^reg8),
                  (~wire4)})) : wire0[(4'hd):(2'h2)]);
          reg9 <= $unsigned(("P2P5hwQKz" ?
              ((^wire4[(1'h1):(1'h0)]) ?
                  (~&(wire5 ?
                      reg6 : reg8)) : (8'hb4)) : $unsigned((~|(~&wire1)))));
          reg10 <= wire3[(3'h4):(2'h3)];
          reg11 = $signed($unsigned(wire3));
        end
      reg12 <= "IR7DmSppI";
    end
  always
    @(posedge clk) begin
      reg13 <= $unsigned(($signed(((^~wire3) ?
              "OX62VW28VML235IckN" : (reg9 <= wire1))) ?
          (~"qyALWGlIGEKrNlArbhE") : reg8[(3'h4):(1'h1)]));
      reg14 <= wire0;
    end
  assign wire15 = $signed(wire2);
  always
    @(posedge clk) begin
      if ("qfVOTD")
        begin
          reg16 = wire2;
        end
      else
        begin
          if ({wire2, {"4EBldllzXZlr"}})
            begin
              reg17 <= "QUK2JtG";
              reg18 <= {(|"okJOxoEI5Kzg7J0nQ4"), reg6};
            end
          else
            begin
              reg17 <= (8'ha0);
              reg18 <= reg16;
              reg19 <= ((($unsigned((reg10 << reg6)) != ((reg12 ?
                              reg14 : reg8) ?
                          "ypcnPkmt9l6m8w" : $unsigned(wire3))) ?
                      reg7 : $unsigned((8'haf))) ?
                  $signed($signed(((|(7'h41)) ~^ (reg14 <= wire2)))) : "WHBhE");
            end
          if ((^(("9hxWEK" ?
              {(+wire5), $signed(reg12)} : {reg18,
                  $unsigned(reg12)}) + $signed(($unsigned(wire4) ?
              ((8'ha1) ? wire3 : reg8) : wire0)))))
            begin
              reg20 <= {$unsigned($unsigned(reg14[(5'h11):(4'hb)]))};
              reg21 = reg17;
              reg22 <= (|"a");
            end
          else
            begin
              reg20 <= $unsigned({((~&"XMGHb8pMAsNAtonpFX") >>> (&wire15[(1'h1):(1'h1)]))});
            end
          reg23 <= "VdS9VV";
        end
      reg24 <= (("H5" ? "00o" : (8'ha2)) | {reg9[(4'h8):(2'h2)],
          (+$unsigned((reg17 ~^ reg9)))});
    end
  assign wire25 = "9f90SAxeyqWxLYNFBNBM";
endmodule