(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param61 = (^~((8'ha0) & (({(8'hb5)} < (~|(8'h9d))) ? (8'hb8) : {((8'hba) ? (8'haf) : (8'hb7)), (^~(7'h42))}))))
(y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h26c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hd):(1'h0)] wire4;
  input wire signed [(4'ha):(1'h0)] wire3;
  input wire [(3'h5):(1'h0)] wire2;
  input wire [(5'h15):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire0;
  wire signed [(5'h13):(1'h0)] wire60;
  wire [(4'ha):(1'h0)] wire59;
  wire signed [(4'h9):(1'h0)] wire58;
  wire signed [(5'h11):(1'h0)] wire30;
  wire [(4'hc):(1'h0)] wire13;
  reg [(4'hc):(1'h0)] reg55 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg50 = (1'h0);
  reg [(4'hc):(1'h0)] reg41 = (1'h0);
  reg [(4'hd):(1'h0)] reg40 = (1'h0);
  reg [(5'h15):(1'h0)] reg37 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg35 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg34 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg25 = (1'h0);
  reg [(5'h15):(1'h0)] reg23 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg19 = (1'h0);
  reg [(4'ha):(1'h0)] reg14 = (1'h0);
  reg [(4'ha):(1'h0)] reg11 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg7 = (1'h0);
  reg [(4'he):(1'h0)] reg57 = (1'h0);
  reg [(4'hc):(1'h0)] reg56 = (1'h0);
  reg [(3'h4):(1'h0)] forvar54 = (1'h0);
  reg [(3'h5):(1'h0)] reg53 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg52 = (1'h0);
  reg [(4'h9):(1'h0)] forvar51 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg49 = (1'h0);
  reg [(4'hb):(1'h0)] forvar48 = (1'h0);
  reg [(4'h8):(1'h0)] reg47 = (1'h0);
  reg [(3'h4):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar45 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar44 = (1'h0);
  reg [(5'h10):(1'h0)] reg43 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar42 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar39 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar38 = (1'h0);
  reg [(4'h8):(1'h0)] reg36 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar31 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg33 = (1'h0);
  reg [(4'hc):(1'h0)] reg31 = (1'h0);
  reg [(3'h4):(1'h0)] reg29 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar26 = (1'h0);
  reg [(4'h8):(1'h0)] reg24 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg22 = (1'h0);
  reg [(3'h7):(1'h0)] reg21 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg20 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar18 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar17 = (1'h0);
  reg [(4'ha):(1'h0)] reg16 = (1'h0);
  reg [(2'h2):(1'h0)] reg15 = (1'h0);
  reg [(5'h12):(1'h0)] reg12 = (1'h0);
  reg [(3'h5):(1'h0)] forvar10 = (1'h0);
  reg [(3'h6):(1'h0)] forvar9 = (1'h0);
  reg [(3'h5):(1'h0)] reg8 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar6 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar5 = (1'h0);
  assign y = {wire60,
                 wire59,
                 wire58,
                 wire30,
                 wire13,
                 reg55,
                 reg50,
                 reg41,
                 reg40,
                 reg37,
                 reg35,
                 reg34,
                 reg32,
                 reg25,
                 reg23,
                 reg19,
                 reg14,
                 reg11,
                 reg7,
                 reg57,
                 reg56,
                 forvar54,
                 reg53,
                 reg52,
                 forvar51,
                 reg49,
                 forvar48,
                 reg47,
                 reg46,
                 forvar45,
                 forvar44,
                 reg43,
                 forvar42,
                 forvar39,
                 forvar38,
                 reg36,
                 forvar31,
                 reg33,
                 reg31,
                 reg29,
                 reg28,
                 reg27,
                 forvar26,
                 reg24,
                 reg22,
                 reg21,
                 reg20,
                 forvar18,
                 forvar17,
                 reg16,
                 reg15,
                 reg12,
                 forvar10,
                 forvar9,
                 reg8,
                 forvar6,
                 forvar5,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar5 = (1'h0); (forvar5 < (2'h3)); forvar5 = (forvar5 + (1'h1)))
        begin
          for (forvar6 = (1'h0); (forvar6 < (2'h3)); forvar6 = (forvar6 + (1'h1)))
            begin
              reg7 <= wire0;
            end
        end
      reg8 = $signed($unsigned($signed($unsigned({reg7}))));
      for (forvar9 = (1'h0); (forvar9 < (1'h0)); forvar9 = (forvar9 + (1'h1)))
        begin
          for (forvar10 = (1'h0); (forvar10 < (1'h1)); forvar10 = (forvar10 + (1'h1)))
            begin
              reg11 <= (^{$signed({$unsigned(wire1), $signed((8'hb9))})});
            end
        end
      reg12 = (^$unsigned(reg8[(1'h0):(1'h0)]));
    end
  assign wire13 = (^($signed({(reg11 ? wire3 : wire3)}) ?
                      $unsigned(wire3) : (~|($signed((8'hbb)) - (&wire4)))));
  always
    @(posedge clk) begin
      reg14 <= ($unsigned((^(wire2[(2'h3):(1'h1)] ?
              wire2 : (wire2 ? (7'h41) : wire2)))) ?
          (wire3 ?
              ($signed(reg7) ?
                  wire4[(3'h5):(1'h1)] : $signed((-wire3))) : (~(^wire0))) : $signed(wire13));
      reg15 = (wire0[(1'h0):(1'h0)] & wire13);
      reg16 = $signed((^~(reg7[(3'h7):(2'h3)] ?
          $unsigned($unsigned((8'hab))) : $unsigned((&(8'h9d))))));
      for (forvar17 = (1'h0); (forvar17 < (3'h4)); forvar17 = (forvar17 + (1'h1)))
        begin
          for (forvar18 = (1'h0); (forvar18 < (3'h4)); forvar18 = (forvar18 + (1'h1)))
            begin
              reg19 <= wire3;
              reg20 = wire2;
              reg21 = reg19[(1'h0):(1'h0)];
              reg22 = forvar18;
            end
          reg23 <= (reg16[(2'h2):(1'h1)] >= reg16);
          reg24 = reg7[(4'h9):(1'h0)];
          reg25 <= $signed(((+{reg19}) ^~ (($unsigned((8'hb2)) != (forvar17 ?
                  reg20 : wire0)) ?
              {reg24} : reg23[(3'h6):(1'h1)])));
          for (forvar26 = (1'h0); (forvar26 < (3'h4)); forvar26 = (forvar26 + (1'h1)))
            begin
              reg27 = $signed(wire0[(2'h2):(1'h0)]);
              reg28 = {$unsigned(($unsigned(forvar18) ?
                      $signed($signed(reg21)) : (&$unsigned((7'h41)))))};
            end
        end
      reg29 = $signed(((|wire1[(1'h1):(1'h0)]) ? reg21[(1'h0):(1'h0)] : reg22));
    end
  assign wire30 = (reg7[(1'h1):(1'h0)] < ($unsigned(reg19) ?
                      (wire13[(1'h0):(1'h0)] ^ reg25[(3'h5):(3'h5)]) : $signed(($unsigned((8'hb0)) < (wire2 | reg23)))));
  always
    @(posedge clk) begin
      if (($unsigned($unsigned($unsigned(wire30))) ?
          (!$signed(wire1[(1'h1):(1'h0)])) : ((!(-$signed(reg7))) > $signed($signed($signed((8'ha3)))))))
        begin
          if ($signed((~&$signed((&{(8'hbe)})))))
            begin
              reg31 = {$signed((($unsigned(wire13) - (wire30 ^~ wire3)) != wire13)),
                  reg23[(5'h11):(2'h2)]};
              reg32 <= (((wire1[(3'h5):(3'h5)] != $unsigned($signed(wire2))) ?
                  (+{reg19}) : wire0) && (wire4[(3'h5):(3'h5)] ?
                  ((((8'ha1) ? wire2 : (8'ha4)) ?
                          $signed(reg19) : (wire0 ? (8'ha0) : wire30)) ?
                      $signed($signed(wire3)) : $signed($signed(wire30))) : (|reg31)));
              reg33 = $unsigned($unsigned((+wire2[(3'h4):(3'h4)])));
              reg34 <= (!wire13[(4'hb):(3'h7)]);
              reg35 <= (wire4[(4'h9):(2'h2)] + (-reg33[(4'ha):(3'h5)]));
            end
          else
            begin
              reg31 = (~(-(+{$unsigned((7'h41))})));
              reg32 <= $signed($unsigned({wire4[(3'h5):(3'h5)]}));
              reg33 = ($unsigned($unsigned(((reg11 ? reg25 : reg25) ?
                      $unsigned((8'hbc)) : (reg19 && reg7)))) ?
                  (reg32 * ((reg11 ? $unsigned(wire1) : reg7) ?
                      $unsigned((reg23 ^~ reg32)) : (((8'haa) & (8'ha4)) ?
                          $unsigned(wire30) : wire2))) : {$signed(wire2),
                      {reg23}});
            end
        end
      else
        begin
          for (forvar31 = (1'h0); (forvar31 < (1'h1)); forvar31 = (forvar31 + (1'h1)))
            begin
              reg32 <= $signed($signed(reg31[(3'h7):(3'h7)]));
              reg34 <= (wire4 ?
                  (^reg7) : (reg34 ?
                      ({(wire3 ? reg14 : reg11), (8'ha5)} == (^(reg23 ?
                          reg7 : forvar31))) : (((wire4 > wire4) & (reg14 ?
                              wire4 : (8'h9e))) ?
                          (~&wire30[(4'hf):(4'hd)]) : $signed(((8'h9c) ?
                              forvar31 : reg33)))));
            end
          reg36 = ($unsigned($signed((8'ha6))) && (8'hbc));
        end
      reg37 <= {(reg34[(3'h7):(2'h3)] ?
              {(^$signed(wire30))} : reg35[(2'h2):(2'h2)]),
          (~(((wire3 ^~ reg19) & wire3[(1'h0):(1'h0)]) ?
              (+(^wire2)) : ((8'ha3) || reg33[(3'h7):(1'h0)])))};
      for (forvar38 = (1'h0); (forvar38 < (2'h2)); forvar38 = (forvar38 + (1'h1)))
        begin
          for (forvar39 = (1'h0); (forvar39 < (2'h2)); forvar39 = (forvar39 + (1'h1)))
            begin
              reg40 <= $unsigned((((reg14 ^ (reg23 >> forvar39)) ^ forvar31[(3'h6):(3'h6)]) ^ (((reg37 && reg34) ?
                  wire1[(3'h5):(3'h5)] : $signed(reg33)) + reg11[(4'ha):(1'h0)])));
              reg41 <= $signed(($signed(wire4[(4'ha):(4'h9)]) ?
                  reg25 : ({(~|wire1)} > reg34)));
            end
          for (forvar42 = (1'h0); (forvar42 < (2'h2)); forvar42 = (forvar42 + (1'h1)))
            begin
              reg43 = (-$signed({(reg41 ? $unsigned(wire13) : (|wire30))}));
            end
        end
      for (forvar44 = (1'h0); (forvar44 < (2'h2)); forvar44 = (forvar44 + (1'h1)))
        begin
          for (forvar45 = (1'h0); (forvar45 < (1'h1)); forvar45 = (forvar45 + (1'h1)))
            begin
              reg46 = ((((7'h44) ?
                  (|(reg25 || reg14)) : $signed(reg32[(3'h4):(3'h4)])) ^~ $signed((((8'ha2) ?
                      reg32 : reg36) ?
                  ((8'hb0) ?
                      wire0 : wire30) : $signed((8'h9d))))) ^~ wire2[(1'h1):(1'h1)]);
              reg47 = (~|reg31[(4'h8):(1'h0)]);
            end
          for (forvar48 = (1'h0); (forvar48 < (1'h1)); forvar48 = (forvar48 + (1'h1)))
            begin
              reg49 = {(~&forvar42)};
              reg50 <= (~$unsigned($signed(($signed(wire13) == (~&(7'h41))))));
            end
          for (forvar51 = (1'h0); (forvar51 < (1'h0)); forvar51 = (forvar51 + (1'h1)))
            begin
              reg52 = forvar31[(4'h9):(3'h6)];
            end
          reg53 = (reg34 == (!wire1[(4'ha):(4'h8)]));
          for (forvar54 = (1'h0); (forvar54 < (2'h3)); forvar54 = (forvar54 + (1'h1)))
            begin
              reg55 <= $unsigned($signed($signed($unsigned(reg11[(4'h8):(1'h0)]))));
              reg56 = $unsigned(reg41[(3'h6):(1'h1)]);
              reg57 = (~&reg50[(3'h6):(3'h4)]);
            end
        end
    end
  assign wire58 = (~^$signed($unsigned($signed((wire30 - (8'h9e))))));
  assign wire59 = (((~|($unsigned(reg25) | (wire1 ? reg25 : reg7))) ?
                          $unsigned((((8'ha3) * wire13) ?
                              (wire30 - reg14) : wire1)) : $signed($signed($signed(reg35)))) ?
                      reg34 : (~$unsigned((reg35 == (~reg55)))));
  assign wire60 = ((wire2[(2'h3):(2'h3)] ?
                      $signed($unsigned((~&reg37))) : (((reg34 >= reg19) < (-wire58)) ?
                          (&reg37) : ({wire2,
                              reg41} >> (reg19 * reg7)))) <= (^~$unsigned($signed($signed(wire13)))));
endmodule