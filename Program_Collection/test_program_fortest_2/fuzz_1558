(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'hd2):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire signed [(5'h13):(1'h0)] wire2;
  input wire signed [(5'h14):(1'h0)] wire1;
  input wire signed [(5'h10):(1'h0)] wire0;
  wire [(5'h15):(1'h0)] wire21;
  wire signed [(4'hd):(1'h0)] wire20;
  wire [(4'ha):(1'h0)] wire19;
  wire [(2'h2):(1'h0)] wire18;
  wire [(5'h13):(1'h0)] wire17;
  wire signed [(4'hf):(1'h0)] wire16;
  wire [(3'h5):(1'h0)] wire15;
  wire signed [(5'h14):(1'h0)] wire14;
  reg signed [(3'h4):(1'h0)] reg13 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg12 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg10 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg8 = (1'h0);
  reg [(2'h3):(1'h0)] reg7 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg6 = (1'h0);
  reg [(2'h3):(1'h0)] reg11 = (1'h0);
  reg [(5'h12):(1'h0)] reg9 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg5 = (1'h0);
  reg [(5'h12):(1'h0)] forvar4 = (1'h0);
  assign y = {wire21,
                 wire20,
                 wire19,
                 wire18,
                 wire17,
                 wire16,
                 wire15,
                 wire14,
                 reg13,
                 reg12,
                 reg10,
                 reg8,
                 reg7,
                 reg6,
                 reg11,
                 reg9,
                 reg5,
                 forvar4,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire1)
        begin
          for (forvar4 = (1'h0); (forvar4 < (2'h3)); forvar4 = (forvar4 + (1'h1)))
            begin
              reg5 = forvar4;
              reg6 <= ((!$signed($unsigned((reg5 ? reg5 : wire3)))) ?
                  (wire3 ?
                      "kCGUAfp60" : ((~^"MJr4y") - {"VdKV1b"})) : (~&$unsigned({(forvar4 ?
                          forvar4 : wire2),
                      (wire2 < (8'hb9))})));
            end
          reg7 <= reg5[(4'hd):(1'h0)];
          reg8 <= {$unsigned(forvar4)};
        end
      else
        begin
          for (forvar4 = (1'h0); (forvar4 < (1'h0)); forvar4 = (forvar4 + (1'h1)))
            begin
              reg6 <= $signed(({(^~{reg8, reg8}),
                  reg8[(1'h1):(1'h1)]} != (~|reg6)));
              reg7 <= wire3;
              reg8 <= $unsigned(reg8);
              reg9 = ($unsigned({reg8}) ?
                  $unsigned($signed(wire3)) : (forvar4 ?
                      ("I3sYH16QF6" == $signed({reg7,
                          reg7})) : $unsigned((wire2[(4'ha):(3'h5)] != reg8[(1'h0):(1'h0)]))));
              reg10 <= $signed(reg8[(2'h3):(1'h1)]);
            end
          reg11 = $unsigned(reg6);
          reg12 <= "BMs87";
        end
      reg13 <= "Il3E8SMuDLl39dNRk3AJ";
    end
  assign wire14 = wire3[(1'h1):(1'h1)];
  assign wire15 = reg12[(3'h4):(1'h0)];
  assign wire16 = ($signed($unsigned(wire1)) ?
                      $unsigned(((~|(&wire2)) <= $signed({wire2}))) : $unsigned(wire3[(1'h1):(1'h0)]));
  assign wire17 = $unsigned(reg8);
  assign wire18 = "iaPnIRaw";
  assign wire19 = wire15[(3'h4):(1'h1)];
  assign wire20 = (~((("UZBAzk" ?
                      reg7[(2'h2):(1'h1)] : ((8'hbd) - wire1)) >> $signed((reg10 << wire19))) | (wire2 << (|reg12))));
  assign wire21 = wire2;
endmodule