(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param216 = (8'ha1), 
parameter param217 = ((^({(param216 & param216)} ? ((|(8'ha8)) ^~ (param216 ? (8'hb4) : param216)) : ((8'ha4) <<< (param216 ? param216 : (8'hb5))))) ? (~&(((^~param216) ? param216 : param216) >>> ({param216, (8'hb3)} > {(8'haf)}))) : {{(~&param216), (param216 ? (param216 == param216) : param216)}}))
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'hdb):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h13):(1'h0)] wire0;
  input wire [(5'h12):(1'h0)] wire1;
  input wire [(2'h2):(1'h0)] wire2;
  input wire [(5'h15):(1'h0)] wire3;
  wire signed [(5'h13):(1'h0)] wire212;
  wire [(2'h2):(1'h0)] wire211;
  wire signed [(4'he):(1'h0)] wire210;
  wire signed [(2'h3):(1'h0)] wire209;
  wire signed [(4'h8):(1'h0)] wire208;
  wire [(4'hf):(1'h0)] wire207;
  wire [(5'h12):(1'h0)] wire4;
  wire signed [(5'h12):(1'h0)] wire5;
  wire [(5'h14):(1'h0)] wire6;
  wire [(5'h12):(1'h0)] wire9;
  wire [(2'h2):(1'h0)] wire10;
  wire signed [(4'h9):(1'h0)] wire11;
  wire signed [(4'ha):(1'h0)] wire205;
  reg [(4'hd):(1'h0)] reg215 = (1'h0);
  reg [(3'h6):(1'h0)] reg214 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar213 = (1'h0);
  reg [(4'h8):(1'h0)] reg8 = (1'h0);
  reg [(5'h11):(1'h0)] forvar7 = (1'h0);
  assign y = {wire212,
                 wire211,
                 wire210,
                 wire209,
                 wire208,
                 wire207,
                 wire4,
                 wire5,
                 wire6,
                 wire9,
                 wire10,
                 wire11,
                 wire205,
                 reg215,
                 reg214,
                 forvar213,
                 reg8,
                 forvar7,
                 (1'h0)};
  assign wire4 = ((^((7'h42) == wire0)) || ({wire1,
                     wire0} * $signed((wire2[(1'h1):(1'h0)] < wire2))));
  assign wire5 = ($signed($unsigned($signed($signed(wire4)))) ?
                     wire3[(4'ha):(1'h1)] : ((~{wire2[(1'h1):(1'h0)],
                         $signed(wire3)}) == wire4));
  assign wire6 = (^~($signed((-wire2[(1'h0):(1'h0)])) > (wire0 ?
                     {$unsigned(wire4)} : wire3)));
  always
    @(posedge clk) begin
      for (forvar7 = (1'h0); (forvar7 < (1'h0)); forvar7 = (forvar7 + (1'h1)))
        begin
          reg8 = ((^wire1) & wire3[(1'h1):(1'h0)]);
        end
    end
  assign wire9 = wire4[(3'h6):(3'h4)];
  assign wire10 = $unsigned({wire2[(1'h0):(1'h0)],
                      ($signed((wire4 - (8'h9c))) ?
                          ($unsigned(wire1) ?
                              $unsigned(wire6) : {wire4,
                                  wire3}) : $signed($unsigned(wire5)))});
  assign wire11 = wire3[(5'h12):(3'h4)];
  module12 #() modinst206 (wire205, clk, wire9, wire0, wire6, wire1, wire3);
  assign wire207 = $signed($signed(wire205));
  assign wire208 = wire9;
  assign wire209 = $signed((8'hb6));
  assign wire210 = wire209[(1'h0):(1'h0)];
  assign wire211 = ($signed(wire5) != wire0[(3'h5):(3'h5)]);
  assign wire212 = {(((wire6[(4'hb):(3'h4)] ?
                                   $unsigned((8'hb2)) : (wire3 ?
                                       (8'h9c) : wire6)) ?
                               $unsigned((wire210 ?
                                   wire207 : wire3)) : ((!(8'ha7)) & $unsigned(wire207))) ?
                           (((^~wire11) ?
                                   {wire11, wire211} : $unsigned((8'h9f))) ?
                               wire10 : {$unsigned(wire211),
                                   $signed(wire4)}) : $unsigned($signed((~|wire2)))),
                       {{wire5, $signed($unsigned(wire210))}}};
  always
    @(posedge clk) begin
      for (forvar213 = (1'h0); (forvar213 < (1'h1)); forvar213 = (forvar213 + (1'h1)))
        begin
          reg214 <= $signed($unsigned($signed($unsigned((wire208 + wire207)))));
        end
      reg215 <= (^(!{wire5, (wire211 ? $signed((8'hb9)) : $unsigned(wire2))}));
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module12
#(parameter param203 = (^~(~^{(!{(8'ha8)}), (((8'ha0) ? (8'hb0) : (8'hac)) ? ((8'hb8) == (8'hb3)) : {(8'hb3), (8'hb5)})})), 
parameter param204 = ((^{{((8'h9e) ? param203 : param203)}, ((param203 ? param203 : param203) ^ {(8'ha9), param203})}) ~^ (~|((|(7'h40)) & ((param203 ~^ (8'hbb)) ? (+param203) : (param203 << param203))))))
(y, clk, wire13, wire14, wire15, wire16, wire17);
  output wire [(32'h3b6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire13;
  input wire [(5'h13):(1'h0)] wire14;
  input wire signed [(5'h14):(1'h0)] wire15;
  input wire signed [(2'h2):(1'h0)] wire16;
  input wire signed [(5'h15):(1'h0)] wire17;
  wire [(4'he):(1'h0)] wire202;
  wire [(4'h9):(1'h0)] wire201;
  wire signed [(5'h14):(1'h0)] wire200;
  wire [(4'he):(1'h0)] wire199;
  wire [(4'h8):(1'h0)] wire198;
  wire [(3'h5):(1'h0)] wire197;
  wire [(2'h3):(1'h0)] wire196;
  wire [(4'he):(1'h0)] wire195;
  wire signed [(2'h3):(1'h0)] wire194;
  wire [(5'h10):(1'h0)] wire193;
  wire [(5'h15):(1'h0)] wire18;
  wire [(4'he):(1'h0)] wire19;
  wire signed [(4'h9):(1'h0)] wire20;
  wire [(4'hb):(1'h0)] wire21;
  wire signed [(4'hd):(1'h0)] wire22;
  wire [(5'h15):(1'h0)] wire23;
  wire [(2'h2):(1'h0)] wire75;
  wire signed [(4'h8):(1'h0)] wire77;
  wire [(4'he):(1'h0)] wire78;
  wire [(4'ha):(1'h0)] wire191;
  reg signed [(4'h9):(1'h0)] reg83 = (1'h0);
  reg [(4'hd):(1'h0)] reg85 = (1'h0);
  reg [(4'hd):(1'h0)] reg86 = (1'h0);
  reg [(3'h5):(1'h0)] reg87 = (1'h0);
  reg [(4'hd):(1'h0)] reg89 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg91 = (1'h0);
  reg [(4'h9):(1'h0)] reg94 = (1'h0);
  reg [(4'hf):(1'h0)] reg96 = (1'h0);
  reg [(4'hb):(1'h0)] reg97 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg100 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg101 = (1'h0);
  reg [(4'h8):(1'h0)] reg95 = (1'h0);
  reg [(3'h4):(1'h0)] reg105 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg114 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg115 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg116 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg119 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg120 = (1'h0);
  reg [(5'h15):(1'h0)] reg121 = (1'h0);
  reg [(5'h14):(1'h0)] reg122 = (1'h0);
  reg [(5'h13):(1'h0)] reg124 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg125 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg127 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg128 = (1'h0);
  reg [(4'h8):(1'h0)] reg129 = (1'h0);
  reg [(4'hb):(1'h0)] reg130 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg132 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg133 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg134 = (1'h0);
  reg [(2'h2):(1'h0)] reg118 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar131 = (1'h0);
  reg [(5'h11):(1'h0)] forvar126 = (1'h0);
  reg [(4'h8):(1'h0)] forvar123 = (1'h0);
  reg [(4'hf):(1'h0)] forvar118 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg117 = (1'h0);
  reg [(5'h11):(1'h0)] forvar113 = (1'h0);
  reg [(4'he):(1'h0)] reg112 = (1'h0);
  reg [(5'h11):(1'h0)] reg111 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg110 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg109 = (1'h0);
  reg [(5'h11):(1'h0)] forvar108 = (1'h0);
  reg [(5'h14):(1'h0)] forvar107 = (1'h0);
  reg [(4'ha):(1'h0)] reg106 = (1'h0);
  reg [(4'h8):(1'h0)] reg104 = (1'h0);
  reg [(4'h8):(1'h0)] reg103 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar102 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar96 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg93 = (1'h0);
  reg [(3'h5):(1'h0)] reg99 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg98 = (1'h0);
  reg [(2'h2):(1'h0)] forvar95 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar93 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg92 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg90 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg88 = (1'h0);
  reg [(4'he):(1'h0)] forvar84 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg82 = (1'h0);
  reg [(5'h11):(1'h0)] reg81 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar80 = (1'h0);
  reg [(4'he):(1'h0)] forvar79 = (1'h0);
  assign y = {wire202,
                 wire201,
                 wire200,
                 wire199,
                 wire198,
                 wire197,
                 wire196,
                 wire195,
                 wire194,
                 wire193,
                 wire18,
                 wire19,
                 wire20,
                 wire21,
                 wire22,
                 wire23,
                 wire75,
                 wire77,
                 wire78,
                 wire191,
                 reg83,
                 reg85,
                 reg86,
                 reg87,
                 reg89,
                 reg91,
                 reg94,
                 reg96,
                 reg97,
                 reg100,
                 reg101,
                 reg95,
                 reg105,
                 reg114,
                 reg115,
                 reg116,
                 reg119,
                 reg120,
                 reg121,
                 reg122,
                 reg124,
                 reg125,
                 reg127,
                 reg128,
                 reg129,
                 reg130,
                 reg132,
                 reg133,
                 reg134,
                 reg118,
                 forvar131,
                 forvar126,
                 forvar123,
                 forvar118,
                 reg117,
                 forvar113,
                 reg112,
                 reg111,
                 reg110,
                 reg109,
                 forvar108,
                 forvar107,
                 reg106,
                 reg104,
                 reg103,
                 forvar102,
                 forvar96,
                 reg93,
                 reg99,
                 reg98,
                 forvar95,
                 forvar93,
                 reg92,
                 reg90,
                 reg88,
                 forvar84,
                 reg82,
                 reg81,
                 forvar80,
                 forvar79,
                 (1'h0)};
  assign wire18 = $unsigned($unsigned(wire15));
  assign wire19 = $signed(wire15[(1'h1):(1'h0)]);
  assign wire20 = $unsigned(wire13);
  assign wire21 = {($unsigned(wire14) ?
                          wire15[(5'h13):(5'h11)] : (~|wire18[(2'h3):(1'h1)])),
                      wire17};
  assign wire22 = (~$unsigned($unsigned($signed((-wire16)))));
  assign wire23 = (((({wire18, (8'hbb)} + (wire15 >> wire18)) ?
                      ({wire18,
                          wire17} <<< wire22[(1'h1):(1'h0)]) : wire15) <<< ($unsigned((8'ha0)) ?
                      ((-(8'ha6)) ?
                          $unsigned(wire22) : (|wire14)) : ($signed(wire20) ?
                          {wire16} : (~^wire21)))) * (+wire13));
  module24 #() modinst76 (wire75, clk, wire14, wire20, wire22, wire18);
  assign wire77 = ($signed((~^(8'hba))) + $unsigned((wire21[(4'ha):(1'h1)] ?
                      ((+wire22) | (wire22 ?
                          wire19 : wire20)) : (wire75[(2'h2):(2'h2)] ?
                          (wire75 ? wire18 : (8'ha3)) : {wire18, wire20}))));
  assign wire78 = wire14;
  always
    @(posedge clk) begin
      for (forvar79 = (1'h0); (forvar79 < (1'h1)); forvar79 = (forvar79 + (1'h1)))
        begin
          for (forvar80 = (1'h0); (forvar80 < (2'h3)); forvar80 = (forvar80 + (1'h1)))
            begin
              reg81 = $unsigned((^wire14[(4'he):(3'h4)]));
              reg82 = $signed(wire16);
            end
          reg83 <= {wire77[(3'h4):(1'h0)]};
          for (forvar84 = (1'h0); (forvar84 < (2'h2)); forvar84 = (forvar84 + (1'h1)))
            begin
              reg85 <= (wire23[(4'hb):(3'h6)] == wire14[(3'h6):(3'h6)]);
              reg86 <= (wire22 ?
                  ((~&(wire22[(4'hb):(1'h1)] ?
                          {reg83} : ((8'hbb) ? wire15 : (8'hb9)))) ?
                      ({(wire17 ? wire18 : wire75), (reg85 ? wire23 : wire17)} ?
                          (wire23 - {(8'hac)}) : $signed($signed(wire15))) : $signed(wire75)) : $unsigned(((~|(wire17 ?
                      wire21 : wire78)) && $unsigned(((8'ha8) ?
                      (8'hbb) : wire16)))));
            end
          reg87 <= ({(~^{(~^(8'hbf))}),
              $unsigned($signed(wire75[(1'h1):(1'h1)]))} ^ (((-(wire16 ?
                  wire75 : (8'ha5))) <<< (8'hbf)) ?
              ((wire18[(4'hf):(4'h9)] ^~ (~^wire21)) ?
                  wire22 : (reg83[(2'h3):(1'h1)] ?
                      (-wire16) : (8'hb9))) : wire18[(5'h14):(5'h14)]));
          reg88 = wire17;
        end
      if ((reg86[(4'hd):(4'hd)] ? $unsigned((8'haa)) : (!reg81[(4'hf):(4'h8)])))
        begin
          if ($unsigned(forvar84[(4'hc):(1'h1)]))
            begin
              reg89 <= $signed($unsigned(wire22));
            end
          else
            begin
              reg90 = {($unsigned($signed((reg85 ? wire14 : reg86))) ?
                      $signed(reg89[(4'ha):(4'h8)]) : ($unsigned((!wire77)) ?
                          $signed({wire18, reg85}) : forvar80))};
              reg91 <= $signed((~|wire20));
              reg92 = $unsigned(forvar80);
            end
          for (forvar93 = (1'h0); (forvar93 < (1'h0)); forvar93 = (forvar93 + (1'h1)))
            begin
              reg94 <= {(wire77 ?
                      $signed($signed(reg86[(4'hb):(4'hb)])) : $signed(reg90))};
            end
          for (forvar95 = (1'h0); (forvar95 < (1'h1)); forvar95 = (forvar95 + (1'h1)))
            begin
              reg96 <= $signed(forvar80);
              reg97 <= $signed($unsigned($unsigned((~$signed(wire21)))));
              reg98 = $signed((($unsigned(reg91) <= (|((8'hb1) ?
                  reg85 : wire19))) != reg85));
              reg99 = $signed(reg87);
            end
          reg100 <= (($signed((~&$unsigned(reg87))) ?
                  reg87[(1'h1):(1'h0)] : wire78) ?
              {$signed((forvar79 | (forvar84 ? wire19 : forvar80))),
                  (((wire14 < reg88) ~^ (forvar95 + (8'hb1))) ?
                      ((&reg83) ?
                          (~^reg92) : reg88) : $unsigned($signed(reg94)))} : $unsigned({(|reg99[(3'h4):(1'h1)]),
                  reg88[(5'h10):(1'h1)]}));
          reg101 <= $signed($signed((~|{$signed(reg99),
              wire77[(1'h1):(1'h0)]})));
        end
      else
        begin
          if (((reg98 <= (((reg89 + wire13) && (forvar84 | wire21)) ?
                  {(!reg96), wire17} : wire23[(1'h0):(1'h0)])) ?
              wire19 : reg82[(4'hc):(1'h1)]))
            begin
              reg89 <= (^~({({reg86} <<< $signed(reg96))} ?
                  reg87[(1'h1):(1'h1)] : ({(wire20 ~^ forvar95)} & (!$signed(reg96)))));
              reg91 <= (~(wire14[(4'he):(3'h6)] ?
                  (8'h9c) : $signed((^~(~reg97)))));
              reg92 = $unsigned(wire16);
              reg93 = (^~(($signed(wire14[(1'h0):(1'h0)]) ?
                      $unsigned((~|reg85)) : {((8'hb2) ? wire16 : (8'hb0)),
                          (wire23 ? reg83 : wire15)}) ?
                  $signed(forvar80) : $signed(reg89[(4'hb):(1'h1)])));
            end
          else
            begin
              reg89 <= wire14[(1'h1):(1'h1)];
              reg91 <= wire17[(4'ha):(1'h1)];
              reg94 <= $signed((wire16[(2'h2):(1'h1)] ?
                  ($unsigned((8'had)) ?
                      forvar79[(4'hc):(4'h8)] : $signed((reg86 ?
                          reg98 : reg96))) : (((forvar80 ? forvar93 : wire15) ?
                          forvar84[(2'h2):(2'h2)] : ((7'h44) ?
                              (8'ha5) : reg93)) ?
                      ($unsigned(wire13) <= $unsigned((8'ha9))) : ($unsigned(wire75) & {reg100}))));
              reg95 <= reg96[(4'h8):(1'h1)];
            end
          for (forvar96 = (1'h0); (forvar96 < (2'h3)); forvar96 = (forvar96 + (1'h1)))
            begin
              reg97 <= (8'hb8);
              reg100 <= reg91[(3'h4):(2'h2)];
            end
          reg101 <= (+reg100);
          for (forvar102 = (1'h0); (forvar102 < (2'h3)); forvar102 = (forvar102 + (1'h1)))
            begin
              reg103 = (~&$unsigned($signed(($unsigned((8'ha1)) + $signed(reg87)))));
              reg104 = reg100[(4'h9):(3'h7)];
              reg105 <= forvar84;
              reg106 = reg94;
            end
        end
      for (forvar107 = (1'h0); (forvar107 < (2'h3)); forvar107 = (forvar107 + (1'h1)))
        begin
          for (forvar108 = (1'h0); (forvar108 < (2'h2)); forvar108 = (forvar108 + (1'h1)))
            begin
              reg109 = forvar96[(2'h3):(1'h1)];
              reg110 = ($unsigned((^reg99[(2'h2):(1'h0)])) ?
                  ((7'h42) << $signed(reg87)) : reg88);
              reg111 = ($unsigned(reg103[(3'h6):(1'h1)]) ?
                  reg83[(2'h2):(2'h2)] : {reg99[(2'h2):(1'h1)]});
              reg112 = wire18;
            end
          for (forvar113 = (1'h0); (forvar113 < (2'h2)); forvar113 = (forvar113 + (1'h1)))
            begin
              reg114 <= reg87[(3'h4):(2'h3)];
              reg115 <= forvar113;
              reg116 <= $unsigned(forvar80);
              reg117 = ($signed((~|wire13)) ^ $unsigned($signed(((reg83 <= reg92) ?
                  wire78[(4'h8):(3'h4)] : reg85[(2'h2):(1'h1)]))));
            end
        end
      if ($signed($unsigned(((+{reg86}) < wire15[(5'h14):(4'hd)]))))
        begin
          for (forvar118 = (1'h0); (forvar118 < (3'h4)); forvar118 = (forvar118 + (1'h1)))
            begin
              reg119 <= ((($unsigned((reg81 ^~ forvar95)) + (8'ha4)) ?
                  (~&$signed(forvar93[(2'h3):(1'h1)])) : (((forvar93 ?
                          wire20 : (8'hae)) ?
                      forvar102 : wire17[(3'h7):(3'h6)]) * (((8'ha3) ?
                      forvar108 : wire13) & (reg111 ?
                      wire14 : forvar93)))) > reg96[(4'h8):(1'h0)]);
              reg120 <= $unsigned(wire16);
              reg121 <= $unsigned(((reg81[(2'h2):(1'h1)] ?
                      ({wire14, forvar80} ?
                          (reg85 ?
                              wire17 : (8'haa)) : $signed(reg92)) : $unsigned((forvar93 ?
                          (8'hb5) : reg103))) ?
                  (reg91 <<< $unsigned($unsigned(forvar107))) : $signed(reg85)));
              reg122 <= wire15;
            end
          for (forvar123 = (1'h0); (forvar123 < (1'h1)); forvar123 = (forvar123 + (1'h1)))
            begin
              reg124 <= $unsigned($unsigned($signed((~|(reg96 ^~ (8'hb5))))));
              reg125 <= $unsigned(((^~reg101[(2'h2):(2'h2)]) < reg120));
            end
          for (forvar126 = (1'h0); (forvar126 < (3'h4)); forvar126 = (forvar126 + (1'h1)))
            begin
              reg127 <= reg87[(2'h3):(2'h3)];
              reg128 <= (reg94[(1'h1):(1'h0)] + (({reg104} && (!(reg125 - reg122))) - ((!{reg91,
                      reg109}) ?
                  $unsigned(((8'hac) & reg93)) : $signed((^(8'h9f))))));
              reg129 <= reg112;
              reg130 <= reg94[(3'h5):(3'h5)];
            end
          for (forvar131 = (1'h0); (forvar131 < (2'h3)); forvar131 = (forvar131 + (1'h1)))
            begin
              reg132 <= $unsigned((!((&$unsigned(reg114)) ?
                  $unsigned((~reg112)) : $signed($signed(reg124)))));
              reg133 <= reg101[(4'h8):(4'h8)];
              reg134 <= ($signed(wire18[(5'h15):(3'h5)]) ?
                  $unsigned(wire21) : {($unsigned((!reg128)) ?
                          $signed($signed(wire18)) : ((|reg119) + reg97)),
                      $unsigned($unsigned($signed(forvar79)))});
            end
        end
      else
        begin
          reg118 = reg128;
        end
    end
  module135 #() modinst192 (wire191, clk, reg119, wire77, wire22, wire20);
  assign wire193 = (^(~&($signed(wire13[(3'h4):(1'h0)]) ?
                       {{reg86}, (reg86 ? wire13 : (8'hb5))} : reg129)));
  assign wire194 = ((reg100[(3'h6):(1'h0)] ?
                           $signed(wire193[(4'hb):(3'h5)]) : wire15) ?
                       (reg116[(2'h3):(2'h2)] == reg114[(1'h1):(1'h1)]) : ((((reg128 ?
                               reg127 : wire13) >>> reg87[(2'h3):(1'h0)]) | $signed((reg105 ?
                               wire18 : wire17))) ?
                           reg133 : (~&((wire15 == wire78) >>> (reg116 >= (7'h41))))));
  assign wire195 = (~&(&{wire15[(4'ha):(1'h1)],
                       $signed(reg85[(1'h0):(1'h0)])}));
  assign wire196 = reg122;
  assign wire197 = ((8'ha7) <<< reg128);
  assign wire198 = (8'hb8);
  assign wire199 = $unsigned(reg133);
  assign wire200 = wire23;
  assign wire201 = $unsigned((-{$signed({reg127}),
                       $unsigned((wire196 ? reg114 : reg116))}));
  assign wire202 = ((({reg128[(2'h3):(1'h1)]} ?
                           (((8'ha7) ?
                               wire15 : reg132) ^~ $unsigned(wire191)) : wire193) ?
                       (~|$unsigned($unsigned(reg124))) : wire19[(4'hd):(4'h9)]) != $signed($signed(wire194[(1'h1):(1'h1)])));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module135  (y, clk, wire139, wire138, wire137, wire136);
  output wire [(32'h27b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h10):(1'h0)] wire139;
  input wire [(4'h8):(1'h0)] wire138;
  input wire [(2'h3):(1'h0)] wire137;
  input wire signed [(3'h7):(1'h0)] wire136;
  wire [(3'h6):(1'h0)] wire190;
  wire [(4'he):(1'h0)] wire189;
  wire [(4'hc):(1'h0)] wire151;
  wire [(5'h13):(1'h0)] wire150;
  wire [(5'h10):(1'h0)] wire148;
  wire [(4'ha):(1'h0)] wire147;
  wire signed [(4'hd):(1'h0)] wire146;
  wire signed [(2'h3):(1'h0)] wire145;
  wire signed [(4'hd):(1'h0)] wire144;
  wire [(5'h10):(1'h0)] wire143;
  wire signed [(4'hb):(1'h0)] wire142;
  wire signed [(4'he):(1'h0)] wire141;
  wire [(3'h5):(1'h0)] wire140;
  reg [(4'hf):(1'h0)] reg188 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg187 = (1'h0);
  reg signed [(4'he):(1'h0)] reg186 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg185 = (1'h0);
  reg [(5'h13):(1'h0)] reg183 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg181 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg180 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg175 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg173 = (1'h0);
  reg [(5'h12):(1'h0)] reg172 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg171 = (1'h0);
  reg [(2'h2):(1'h0)] reg167 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg166 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg161 = (1'h0);
  reg [(5'h14):(1'h0)] reg157 = (1'h0);
  reg [(3'h4):(1'h0)] reg155 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg152 = (1'h0);
  reg [(5'h11):(1'h0)] reg149 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg184 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar182 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar179 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg178 = (1'h0);
  reg [(3'h5):(1'h0)] reg177 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg176 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar174 = (1'h0);
  reg [(5'h10):(1'h0)] reg170 = (1'h0);
  reg [(4'h9):(1'h0)] reg169 = (1'h0);
  reg [(5'h15):(1'h0)] reg168 = (1'h0);
  reg [(4'h8):(1'h0)] forvar165 = (1'h0);
  reg [(4'h8):(1'h0)] forvar164 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg163 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg162 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg160 = (1'h0);
  reg [(5'h12):(1'h0)] forvar159 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg158 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar156 = (1'h0);
  reg [(5'h10):(1'h0)] forvar154 = (1'h0);
  reg [(5'h10):(1'h0)] forvar153 = (1'h0);
  assign y = {wire190,
                 wire189,
                 wire151,
                 wire150,
                 wire148,
                 wire147,
                 wire146,
                 wire145,
                 wire144,
                 wire143,
                 wire142,
                 wire141,
                 wire140,
                 reg188,
                 reg187,
                 reg186,
                 reg185,
                 reg183,
                 reg181,
                 reg180,
                 reg175,
                 reg173,
                 reg172,
                 reg171,
                 reg167,
                 reg166,
                 reg161,
                 reg157,
                 reg155,
                 reg152,
                 reg149,
                 reg184,
                 forvar182,
                 forvar179,
                 reg178,
                 reg177,
                 reg176,
                 forvar174,
                 reg170,
                 reg169,
                 reg168,
                 forvar165,
                 forvar164,
                 reg163,
                 reg162,
                 reg160,
                 forvar159,
                 reg158,
                 forvar156,
                 forvar154,
                 forvar153,
                 (1'h0)};
  assign wire140 = $signed(((~^$unsigned((~wire139))) ?
                       {{wire136[(3'h4):(3'h4)]}} : $unsigned($signed(wire137))));
  assign wire141 = ((8'hb2) || ($unsigned(wire136[(3'h7):(2'h2)]) && (^~$unsigned({(8'hb0)}))));
  assign wire142 = (^$signed($unsigned($signed((wire139 ?
                       (8'ha8) : wire141)))));
  assign wire143 = wire138;
  assign wire144 = ($unsigned(({(wire141 == wire138)} <<< ((wire142 || wire137) ?
                           (+wire143) : wire139[(4'ha):(3'h4)]))) ?
                       wire137 : ($signed((&$signed(wire143))) >> {wire139,
                           $signed((wire142 ^~ wire141))}));
  assign wire145 = $unsigned((^{(~(wire137 ? (8'ha7) : wire144)), (^(8'hb5))}));
  assign wire146 = wire139;
  assign wire147 = wire140[(2'h3):(1'h1)];
  assign wire148 = $unsigned(wire144[(3'h4):(2'h3)]);
  always
    @(posedge clk) begin
      reg149 <= wire141;
    end
  assign wire150 = (wire147 * $unsigned(($signed((8'hb1)) ?
                       ((wire147 ? wire146 : wire146) ?
                           $signed(wire147) : (wire147 ^ wire147)) : $signed({wire148,
                           wire145}))));
  assign wire151 = wire140;
  always
    @(posedge clk) begin
      reg152 <= (~$signed((&$unsigned((7'h42)))));
      for (forvar153 = (1'h0); (forvar153 < (1'h0)); forvar153 = (forvar153 + (1'h1)))
        begin
          for (forvar154 = (1'h0); (forvar154 < (1'h0)); forvar154 = (forvar154 + (1'h1)))
            begin
              reg155 <= wire136[(3'h7):(3'h5)];
            end
          for (forvar156 = (1'h0); (forvar156 < (2'h3)); forvar156 = (forvar156 + (1'h1)))
            begin
              reg157 <= $unsigned($signed(((^~{wire141}) ^~ wire144[(4'h9):(2'h3)])));
              reg158 = wire147;
            end
          for (forvar159 = (1'h0); (forvar159 < (3'h4)); forvar159 = (forvar159 + (1'h1)))
            begin
              reg160 = ({(^(~^(forvar153 | wire143))),
                      $unsigned($unsigned(((8'had) + wire136)))} ?
                  $unsigned(((&reg149) ?
                      reg152 : (wire147[(1'h1):(1'h1)] ?
                          (wire141 >>> forvar153) : wire151))) : (~|(($signed(reg152) ?
                      $unsigned(wire143) : ((8'ha6) ?
                          wire143 : wire139)) ^~ wire145)));
              reg161 <= $unsigned((reg149[(2'h3):(2'h2)] ?
                  {wire141[(1'h0):(1'h0)],
                      {$signed((8'hac))}} : wire145[(2'h2):(1'h1)]));
              reg162 = (~{$unsigned((&wire139))});
              reg163 = ($signed($unsigned(reg160)) ?
                  (($unsigned($signed(wire147)) ?
                          $signed(wire150) : forvar156[(2'h2):(1'h1)]) ?
                      $unsigned({wire148,
                          (reg162 ?
                              reg152 : wire144)}) : (~|$signed(wire148[(1'h1):(1'h1)]))) : $unsigned($unsigned((reg152 && (wire138 ?
                      (8'hb1) : reg157)))));
            end
        end
      for (forvar164 = (1'h0); (forvar164 < (2'h3)); forvar164 = (forvar164 + (1'h1)))
        begin
          for (forvar165 = (1'h0); (forvar165 < (1'h1)); forvar165 = (forvar165 + (1'h1)))
            begin
              reg166 <= $unsigned((wire138[(2'h3):(1'h0)] + {wire142[(1'h0):(1'h0)]}));
              reg167 <= $signed($unsigned($signed($unsigned(((8'h9d) ?
                  wire148 : reg158)))));
              reg168 = $unsigned((($signed((~^(8'hb9))) ?
                  {(reg161 ? forvar156 : reg162)} : ((~^forvar164) ?
                      ((8'hb9) <<< wire143) : ((8'hb1) ?
                          reg167 : wire138))) >= ((-$unsigned((8'ha4))) <<< (reg166[(2'h2):(1'h0)] ?
                  (reg157 == reg158) : forvar159))));
            end
          if (($unsigned((((forvar154 ? wire146 : (8'h9e)) < (wire140 ?
                  (8'ha2) : (8'hae))) ?
              ($unsigned(reg161) != (reg155 >> (8'ha2))) : $signed(reg149))) << (forvar153 ?
              $signed(wire140) : $signed($unsigned(reg168[(5'h13):(5'h12)])))))
            begin
              reg169 = {($signed(($unsigned(wire143) ?
                      {wire150, wire139} : (wire150 ?
                          reg163 : forvar154))) || (({reg160, reg166} ?
                      wire144[(3'h5):(2'h3)] : $signed(wire148)) << $signed((reg168 * wire143)))),
                  ((((~&forvar165) ? forvar154 : reg157) < ($signed(reg152) ?
                          $unsigned((8'hb7)) : $unsigned((8'hbe)))) ?
                      {$signed(forvar159[(4'ha):(4'h9)]),
                          (forvar159 | $unsigned(reg168))} : (8'hae))};
              reg170 = $signed(wire151[(3'h5):(3'h5)]);
            end
          else
            begin
              reg169 = (((8'hb6) ?
                  reg152 : (+((wire144 ?
                      reg167 : (8'ha3)) <= $signed((8'hb5))))) * $unsigned((~^(reg158[(1'h0):(1'h0)] ?
                  forvar156 : (wire140 ? reg170 : (8'hb5))))));
              reg170 = {forvar164[(2'h2):(2'h2)], wire138};
              reg171 <= {$signed($unsigned((!$unsigned(wire141)))), wire146};
              reg172 <= ((|reg170) ?
                  forvar154 : (forvar153[(1'h0):(1'h0)] * reg168[(1'h1):(1'h0)]));
            end
          reg173 <= wire144;
          for (forvar174 = (1'h0); (forvar174 < (1'h1)); forvar174 = (forvar174 + (1'h1)))
            begin
              reg175 <= wire146;
              reg176 = $unsigned((8'hab));
              reg177 = ($unsigned(wire148) >= reg162[(4'he):(3'h6)]);
              reg178 = {((+$signed((~reg170))) ?
                      ({$unsigned((8'hbc))} ?
                          (reg172[(5'h12):(4'ha)] ?
                              (forvar165 ^~ wire139) : ((8'h9c) - reg175)) : (((8'ha5) ?
                                  wire146 : wire143) ?
                              $unsigned(reg157) : $unsigned(wire139))) : {$signed((reg162 ?
                              reg173 : reg172))})};
            end
        end
      for (forvar179 = (1'h0); (forvar179 < (1'h1)); forvar179 = (forvar179 + (1'h1)))
        begin
          reg180 <= reg163;
          reg181 <= reg177[(2'h3):(1'h1)];
          for (forvar182 = (1'h0); (forvar182 < (1'h1)); forvar182 = (forvar182 + (1'h1)))
            begin
              reg183 <= (~(forvar179[(3'h4):(2'h2)] | $unsigned($unsigned($signed((8'hb8))))));
              reg184 = {reg163};
              reg185 <= $signed((-({(reg183 <<< reg167)} ?
                  wire138 : (&((8'haf) ? reg171 : wire143)))));
              reg186 <= {(reg168[(5'h10):(4'h8)] < (((forvar159 > forvar174) & $unsigned(reg161)) <= (!(wire144 ?
                      reg161 : reg157))))};
            end
        end
    end
  always
    @(posedge clk) begin
      reg187 <= {{((!{wire141, reg152}) - $unsigned((reg166 ?
                  reg183 : wire151)))},
          $signed((!((reg161 <= reg166) || reg157)))};
      reg188 <= (~&$unsigned(reg180[(1'h1):(1'h0)]));
    end
  assign wire189 = ((^~$unsigned($unsigned((reg172 ?
                       reg187 : wire151)))) >= (~&$unsigned((reg171[(2'h3):(2'h2)] * (reg152 && reg152)))));
  assign wire190 = $signed(reg183);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module24  (y, clk, wire28, wire27, wire26, wire25);
  output wire [(32'h230):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h10):(1'h0)] wire28;
  input wire [(4'h9):(1'h0)] wire27;
  input wire [(4'hd):(1'h0)] wire26;
  input wire [(5'h15):(1'h0)] wire25;
  wire signed [(4'hf):(1'h0)] wire74;
  wire [(3'h6):(1'h0)] wire73;
  wire [(3'h5):(1'h0)] wire34;
  wire signed [(4'hb):(1'h0)] wire33;
  wire [(3'h5):(1'h0)] wire32;
  wire signed [(4'hc):(1'h0)] wire31;
  wire [(5'h15):(1'h0)] wire30;
  wire signed [(5'h15):(1'h0)] wire29;
  reg signed [(3'h6):(1'h0)] reg72 = (1'h0);
  reg [(2'h2):(1'h0)] reg67 = (1'h0);
  reg [(5'h11):(1'h0)] reg66 = (1'h0);
  reg [(4'he):(1'h0)] reg63 = (1'h0);
  reg [(5'h12):(1'h0)] reg62 = (1'h0);
  reg [(5'h14):(1'h0)] reg58 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg56 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg50 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg44 = (1'h0);
  reg [(5'h11):(1'h0)] reg42 = (1'h0);
  reg [(3'h6):(1'h0)] reg37 = (1'h0);
  reg [(4'hd):(1'h0)] forvar71 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar70 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg69 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg68 = (1'h0);
  reg [(5'h15):(1'h0)] forvar65 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg64 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar61 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg60 = (1'h0);
  reg [(5'h11):(1'h0)] forvar59 = (1'h0);
  reg [(5'h14):(1'h0)] reg57 = (1'h0);
  reg [(4'h8):(1'h0)] reg55 = (1'h0);
  reg [(4'hd):(1'h0)] reg54 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar53 = (1'h0);
  reg [(5'h14):(1'h0)] reg52 = (1'h0);
  reg [(4'hf):(1'h0)] reg51 = (1'h0);
  reg [(3'h4):(1'h0)] forvar49 = (1'h0);
  reg [(4'hb):(1'h0)] forvar48 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg47 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg46 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar45 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg43 = (1'h0);
  reg [(5'h11):(1'h0)] reg41 = (1'h0);
  reg [(3'h5):(1'h0)] reg40 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar39 = (1'h0);
  reg [(5'h15):(1'h0)] reg38 = (1'h0);
  reg [(5'h13):(1'h0)] forvar36 = (1'h0);
  reg [(5'h15):(1'h0)] forvar35 = (1'h0);
  assign y = {wire74,
                 wire73,
                 wire34,
                 wire33,
                 wire32,
                 wire31,
                 wire30,
                 wire29,
                 reg72,
                 reg67,
                 reg66,
                 reg63,
                 reg62,
                 reg58,
                 reg56,
                 reg50,
                 reg44,
                 reg42,
                 reg37,
                 forvar71,
                 forvar70,
                 reg69,
                 reg68,
                 forvar65,
                 reg64,
                 forvar61,
                 reg60,
                 forvar59,
                 reg57,
                 reg55,
                 reg54,
                 forvar53,
                 reg52,
                 reg51,
                 forvar49,
                 forvar48,
                 reg47,
                 reg46,
                 forvar45,
                 reg43,
                 reg41,
                 reg40,
                 forvar39,
                 reg38,
                 forvar36,
                 forvar35,
                 (1'h0)};
  assign wire29 = (wire27[(1'h1):(1'h0)] & $unsigned(wire27[(3'h4):(1'h0)]));
  assign wire30 = wire27[(2'h2):(1'h0)];
  assign wire31 = wire28;
  assign wire32 = wire25[(5'h10):(5'h10)];
  assign wire33 = ((8'hba) ?
                      wire30[(4'hd):(4'hc)] : $signed($signed((!wire30[(4'ha):(1'h1)]))));
  assign wire34 = {((~|wire31[(3'h5):(1'h0)]) >>> $signed((wire31[(3'h4):(2'h2)] ~^ (wire28 * wire33)))),
                      $unsigned(wire30)};
  always
    @(posedge clk) begin
      for (forvar35 = (1'h0); (forvar35 < (1'h1)); forvar35 = (forvar35 + (1'h1)))
        begin
          for (forvar36 = (1'h0); (forvar36 < (2'h3)); forvar36 = (forvar36 + (1'h1)))
            begin
              reg37 <= (wire34[(3'h4):(1'h0)] | (($unsigned((forvar36 ?
                          wire25 : wire33)) ?
                      {$signed(wire30), wire30} : (!(wire34 ?
                          wire33 : wire31))) ?
                  wire26 : (forvar35[(4'h9):(3'h4)] ?
                      $unsigned((wire32 ? wire33 : wire29)) : wire30)));
              reg38 = {$signed((8'ha1)), wire29[(5'h11):(5'h11)]};
            end
          for (forvar39 = (1'h0); (forvar39 < (2'h3)); forvar39 = (forvar39 + (1'h1)))
            begin
              reg40 = ({($unsigned((wire30 <= wire29)) - {{wire25}})} - $unsigned($unsigned(forvar39[(4'ha):(2'h2)])));
              reg41 = (^$signed(wire27[(3'h5):(1'h0)]));
              reg42 <= (&$signed($signed($unsigned(wire27[(2'h3):(1'h1)]))));
            end
          reg43 = forvar36;
          reg44 <= (~^((&wire25) ? wire25[(2'h3):(2'h2)] : forvar36));
          for (forvar45 = (1'h0); (forvar45 < (2'h3)); forvar45 = (forvar45 + (1'h1)))
            begin
              reg46 = wire25;
              reg47 = (|$signed(($signed($unsigned(wire25)) ?
                  {reg40, forvar39} : ((forvar36 ?
                      forvar45 : reg44) || (wire25 - reg44)))));
            end
        end
      for (forvar48 = (1'h0); (forvar48 < (1'h1)); forvar48 = (forvar48 + (1'h1)))
        begin
          for (forvar49 = (1'h0); (forvar49 < (1'h1)); forvar49 = (forvar49 + (1'h1)))
            begin
              reg50 <= (!((($unsigned(forvar36) ^~ forvar36[(4'h9):(3'h6)]) - wire30) ?
                  $signed(((+wire30) < (wire33 <<< wire29))) : wire33[(4'h9):(2'h3)]));
              reg51 = (!($unsigned($signed((reg38 == wire32))) ?
                  $unsigned((~^wire28)) : $unsigned($signed(wire30))));
            end
          reg52 = forvar49;
          for (forvar53 = (1'h0); (forvar53 < (1'h1)); forvar53 = (forvar53 + (1'h1)))
            begin
              reg54 = wire29[(3'h6):(1'h0)];
              reg55 = {$signed({(((8'hb5) ^~ reg41) >> (+reg40)),
                      $unsigned({reg44, (8'ha8)})})};
              reg56 <= $unsigned((wire29 && ($signed(wire32[(2'h2):(2'h2)]) || wire31)));
              reg57 = (~(-$signed(reg38)));
              reg58 <= {$signed(forvar35)};
            end
          for (forvar59 = (1'h0); (forvar59 < (1'h1)); forvar59 = (forvar59 + (1'h1)))
            begin
              reg60 = reg54;
            end
        end
      for (forvar61 = (1'h0); (forvar61 < (1'h0)); forvar61 = (forvar61 + (1'h1)))
        begin
          reg62 <= {$unsigned((forvar45 ? {((8'ha2) < reg40)} : wire26))};
          reg63 <= $signed($signed(((~^reg54) <<< ($signed(reg55) ?
              reg62[(4'he):(1'h1)] : ((8'hbf) >= reg58)))));
          reg64 = $signed(reg58);
          for (forvar65 = (1'h0); (forvar65 < (1'h0)); forvar65 = (forvar65 + (1'h1)))
            begin
              reg66 <= (7'h42);
              reg67 <= ($unsigned(reg38[(5'h12):(1'h0)]) ?
                  ($unsigned((+reg43[(3'h7):(3'h4)])) ?
                      $unsigned((-(reg40 + forvar61))) : reg40[(1'h0):(1'h0)]) : {((~|$unsigned((8'hb4))) ?
                          (-(~&forvar35)) : (reg52[(3'h7):(1'h0)] != $unsigned(forvar65))),
                      ({{wire31, forvar65},
                          $signed(forvar59)} ~^ $unsigned((+wire28)))});
              reg68 = (~^(~$unsigned(reg63[(4'hd):(3'h6)])));
            end
          reg69 = $unsigned((|$unsigned(((forvar36 != reg40) >> {(8'h9d),
              wire25}))));
        end
      for (forvar70 = (1'h0); (forvar70 < (1'h0)); forvar70 = (forvar70 + (1'h1)))
        begin
          for (forvar71 = (1'h0); (forvar71 < (1'h1)); forvar71 = (forvar71 + (1'h1)))
            begin
              reg72 <= (|(((^(reg52 >= (8'ha6))) ?
                      reg69[(2'h3):(2'h3)] : $signed((reg47 | (8'hbb)))) ?
                  (reg62[(3'h6):(3'h4)] ?
                      reg43 : ({wire25,
                          reg38} != (reg47 >= reg47))) : $signed((8'ha8))));
            end
        end
    end
  assign wire73 = wire29;
  assign wire74 = (($signed($unsigned((reg44 ? wire73 : wire33))) ?
                      wire27[(2'h3):(1'h1)] : (wire28 & (reg62 >> wire30[(4'hf):(3'h7)]))) > (|$signed(wire25)));
endmodule