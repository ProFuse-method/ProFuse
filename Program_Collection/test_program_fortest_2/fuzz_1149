(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param364 = (8'haf), 
parameter param365 = (param364 | (({(8'hab)} ? (param364 ? (param364 ? param364 : (8'hbb)) : param364) : (~&((7'h44) ? param364 : param364))) >= (~&(8'ha0)))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1bf):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h15):(1'h0)] wire3;
  input wire signed [(5'h15):(1'h0)] wire2;
  input wire [(5'h15):(1'h0)] wire1;
  input wire signed [(5'h15):(1'h0)] wire0;
  wire signed [(5'h15):(1'h0)] wire327;
  wire signed [(5'h15):(1'h0)] wire302;
  wire signed [(5'h15):(1'h0)] wire329;
  wire signed [(2'h3):(1'h0)] wire331;
  wire [(2'h3):(1'h0)] wire332;
  wire [(5'h15):(1'h0)] wire333;
  wire [(4'he):(1'h0)] wire334;
  wire [(4'hc):(1'h0)] wire335;
  wire signed [(4'he):(1'h0)] wire357;
  wire signed [(5'h15):(1'h0)] wire358;
  wire [(4'hf):(1'h0)] wire359;
  wire signed [(4'ha):(1'h0)] wire360;
  wire signed [(3'h5):(1'h0)] wire361;
  wire signed [(4'he):(1'h0)] wire362;
  reg [(4'hf):(1'h0)] reg354 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg349 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg348 = (1'h0);
  reg [(5'h11):(1'h0)] reg347 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg346 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg343 = (1'h0);
  reg [(5'h15):(1'h0)] reg342 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg341 = (1'h0);
  reg [(4'he):(1'h0)] reg356 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar355 = (1'h0);
  reg [(2'h2):(1'h0)] reg353 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar352 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg351 = (1'h0);
  reg [(4'he):(1'h0)] forvar350 = (1'h0);
  reg [(5'h15):(1'h0)] forvar345 = (1'h0);
  reg [(5'h10):(1'h0)] forvar344 = (1'h0);
  reg [(2'h2):(1'h0)] reg340 = (1'h0);
  reg [(4'ha):(1'h0)] reg339 = (1'h0);
  reg [(4'ha):(1'h0)] forvar338 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar337 = (1'h0);
  assign y = {wire327,
                 wire302,
                 wire329,
                 wire331,
                 wire332,
                 wire333,
                 wire334,
                 wire335,
                 wire357,
                 wire358,
                 wire359,
                 wire360,
                 wire361,
                 wire362,
                 reg354,
                 reg349,
                 reg348,
                 reg347,
                 reg346,
                 reg343,
                 reg342,
                 reg341,
                 reg356,
                 forvar355,
                 reg353,
                 forvar352,
                 reg351,
                 forvar350,
                 forvar345,
                 forvar344,
                 reg340,
                 reg339,
                 forvar338,
                 forvar337,
                 (1'h0)};
  module4 #() modinst303 (wire302, clk, wire0, wire1, wire2, wire3);
  module304 #() modinst328 (wire327, clk, wire1, wire302, wire3, wire2, wire0);
  module9 #() modinst330 (wire329, clk, wire2, wire3, wire327, wire0);
  assign wire331 = {((((~|wire327) >>> (wire0 ? wire3 : wire302)) ?
                           wire327[(4'hf):(4'h9)] : (wire3[(5'h11):(4'ha)] ?
                               (wire0 <= wire3) : (wire3 + wire2))) > wire3[(3'h6):(3'h5)]),
                       $unsigned($unsigned($signed((wire2 ? wire0 : wire2))))};
  assign wire332 = ($unsigned($signed($unsigned((~|wire329)))) ?
                       $unsigned(((wire327 ? wire327 : (wire302 * wire2)) ?
                           (+(wire1 != wire329)) : $unsigned({wire0}))) : wire1);
  assign wire333 = ($signed((~(wire329 ?
                           wire329[(5'h13):(4'h8)] : $signed(wire331)))) ?
                       (|(~{{wire0},
                           (wire2 ? wire3 : (8'hab))})) : (wire327 && ((8'hb7) ?
                           (wire0 ?
                               (wire329 <= wire327) : $unsigned(wire3)) : {(&wire1),
                               ((8'ha9) <<< wire327)})));
  assign wire334 = (&wire0);
  module151 #() modinst336 (wire335, clk, wire332, wire329, wire327, wire1);
  always
    @(posedge clk) begin
      for (forvar337 = (1'h0); (forvar337 < (1'h1)); forvar337 = (forvar337 + (1'h1)))
        begin
          for (forvar338 = (1'h0); (forvar338 < (2'h2)); forvar338 = (forvar338 + (1'h1)))
            begin
              reg339 = $unsigned(forvar338);
              reg340 = (~^((+$signed({wire0})) << $signed($signed((wire2 ?
                  wire331 : wire2)))));
              reg341 <= wire335;
              reg342 <= $unsigned({(forvar338[(4'h9):(4'h9)] == {forvar338[(4'h8):(3'h6)]}),
                  (reg341 >> ({reg340, forvar337} ?
                      (wire302 ? forvar337 : wire1) : wire1[(5'h12):(3'h6)]))});
              reg343 <= ((-$signed(({reg340, wire335} ?
                      $unsigned(reg340) : (forvar338 >>> wire2)))) ?
                  (!$unsigned(wire331[(2'h3):(1'h1)])) : (~^(8'hb0)));
            end
        end
      for (forvar344 = (1'h0); (forvar344 < (2'h2)); forvar344 = (forvar344 + (1'h1)))
        begin
          for (forvar345 = (1'h0); (forvar345 < (1'h0)); forvar345 = (forvar345 + (1'h1)))
            begin
              reg346 <= wire2;
              reg347 <= (-(forvar344[(4'h8):(3'h4)] || wire0));
              reg348 <= (|$unsigned($signed((|(8'hbd)))));
              reg349 <= $signed(wire0[(1'h0):(1'h0)]);
            end
          for (forvar350 = (1'h0); (forvar350 < (2'h2)); forvar350 = (forvar350 + (1'h1)))
            begin
              reg351 = $signed(($unsigned($unsigned($signed(forvar345))) ?
                  $signed($signed($signed(wire3))) : (~&$signed((wire332 >>> wire0)))));
            end
          for (forvar352 = (1'h0); (forvar352 < (2'h3)); forvar352 = (forvar352 + (1'h1)))
            begin
              reg353 = (($unsigned({$unsigned(forvar352), $signed(wire302)}) ?
                      (reg351 ^ ((forvar344 + wire3) + (-wire2))) : (|(~&forvar345))) ?
                  $signed((((wire332 ? wire1 : wire2) ?
                          reg342[(2'h3):(1'h0)] : (reg342 ? (8'ha8) : reg346)) ?
                      ((wire2 == (8'hac)) ~^ ((8'hbc) ?
                          forvar338 : wire331)) : wire3)) : forvar344[(2'h3):(2'h3)]);
            end
          reg354 <= (-$unsigned(wire2[(1'h0):(1'h0)]));
          for (forvar355 = (1'h0); (forvar355 < (2'h3)); forvar355 = (forvar355 + (1'h1)))
            begin
              reg356 = {(reg342 ?
                      {$signed(reg354[(2'h3):(2'h3)]),
                          wire3[(3'h5):(1'h0)]} : (~^(8'hab))),
                  ($signed((~(-reg340))) ?
                      (({wire302, reg343} ?
                          wire3[(2'h3):(1'h1)] : (forvar344 == wire1)) == reg347[(1'h1):(1'h0)]) : (reg346[(1'h0):(1'h0)] - $signed((wire334 << wire1))))};
            end
        end
    end
  assign wire357 = (8'hbc);
  assign wire358 = $unsigned(wire329);
  assign wire359 = reg343;
  assign wire360 = (~&wire327);
  assign wire361 = (reg347 ?
                       $signed(reg349[(5'h10):(4'ha)]) : (~^$signed(((wire302 ?
                               wire327 : reg343) ?
                           reg348 : reg343[(3'h7):(2'h2)]))));
  module304 #() modinst363 (.wire309(wire3), .y(wire362), .wire308(wire358), .wire307(wire360), .clk(clk), .wire305(reg341), .wire306(reg342));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module304
#(parameter param326 = ((~&(8'h9c)) ^~ ((!(|(|(8'hb6)))) || ((8'hb1) ? (~^((8'hab) << (8'hb7))) : (!(~^(8'h9f)))))))
(y, clk, wire309, wire308, wire307, wire306, wire305);
  output wire [(32'h36):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h9):(1'h0)] wire309;
  input wire signed [(5'h15):(1'h0)] wire308;
  input wire signed [(4'ha):(1'h0)] wire307;
  input wire [(5'h15):(1'h0)] wire306;
  input wire signed [(5'h15):(1'h0)] wire305;
  wire signed [(4'hd):(1'h0)] wire325;
  wire [(5'h11):(1'h0)] wire324;
  wire [(2'h2):(1'h0)] wire322;
  wire [(5'h15):(1'h0)] wire310;
  assign y = {wire325, wire324, wire322, wire310, (1'h0)};
  assign wire310 = ((($signed($unsigned(wire308)) - $unsigned((wire307 ^~ (8'hbd)))) << $signed(((|(8'ha4)) ?
                           $signed(wire309) : (~|(8'ha2))))) ?
                       (~^$signed({(+wire306)})) : ($unsigned((-$signed(wire305))) - $unsigned(((|wire308) ?
                           $unsigned(wire306) : (wire306 + wire309)))));
  module311 #() modinst323 (wire322, clk, wire306, wire305, wire310, wire308);
  assign wire324 = (&{({$unsigned(wire310),
                           wire309[(2'h3):(2'h2)]} | wire306[(3'h6):(3'h5)])});
  assign wire325 = (wire305 >>> $unsigned((((wire322 ? wire310 : (8'haf)) ?
                           {wire305} : {wire322, (8'had)}) ?
                       wire324[(4'hf):(3'h5)] : wire308)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module4
#(parameter param301 = (^~(((~|((8'hbf) ? (8'hbb) : (8'ha0))) ? (^~((8'ha3) ? (8'hb4) : (7'h43))) : (^~((8'hbb) << (8'hab)))) + (8'ha1))))
(y, clk, wire8, wire7, wire6, wire5);
  output wire [(32'hdc):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h6):(1'h0)] wire8;
  input wire signed [(5'h15):(1'h0)] wire7;
  input wire signed [(5'h15):(1'h0)] wire6;
  input wire signed [(5'h12):(1'h0)] wire5;
  wire signed [(4'he):(1'h0)] wire300;
  wire signed [(5'h13):(1'h0)] wire299;
  wire [(4'h8):(1'h0)] wire298;
  wire signed [(4'hc):(1'h0)] wire297;
  wire signed [(4'hb):(1'h0)] wire296;
  wire [(3'h5):(1'h0)] wire295;
  wire signed [(4'hd):(1'h0)] wire294;
  wire [(5'h10):(1'h0)] wire293;
  wire [(5'h10):(1'h0)] wire292;
  wire signed [(4'ha):(1'h0)] wire291;
  wire signed [(4'hf):(1'h0)] wire289;
  wire [(5'h15):(1'h0)] wire150;
  wire signed [(5'h11):(1'h0)] wire149;
  wire [(4'hd):(1'h0)] wire148;
  wire [(2'h3):(1'h0)] wire147;
  wire signed [(3'h5):(1'h0)] wire146;
  wire signed [(5'h15):(1'h0)] wire144;
  assign y = {wire300,
                 wire299,
                 wire298,
                 wire297,
                 wire296,
                 wire295,
                 wire294,
                 wire293,
                 wire292,
                 wire291,
                 wire289,
                 wire150,
                 wire149,
                 wire148,
                 wire147,
                 wire146,
                 wire144,
                 (1'h0)};
  module9 #() modinst145 (wire144, clk, wire5, wire6, wire7, wire8);
  assign wire146 = ($signed(wire144[(4'hc):(4'h9)]) != ($signed(($unsigned(wire144) << $unsigned(wire7))) ?
                       wire6[(5'h12):(2'h3)] : {(-wire7[(3'h6):(3'h4)]),
                           $signed($signed(wire5))}));
  assign wire147 = wire8;
  assign wire148 = (~|$unsigned(wire6[(4'h8):(3'h5)]));
  assign wire149 = $unsigned({(wire6[(4'he):(3'h7)] >>> $unsigned(wire148[(4'ha):(3'h7)])),
                       $signed(wire5[(4'h8):(3'h4)])});
  assign wire150 = $unsigned({($signed({wire146, wire148}) ?
                           $signed((wire147 && wire148)) : wire146)});
  module151 #() modinst290 (.wire152(wire5), .wire153(wire7), .wire155(wire144), .y(wire289), .clk(clk), .wire154(wire6));
  assign wire291 = (wire147[(1'h1):(1'h1)] ?
                       $unsigned({(&(wire148 ?
                               wire8 : wire289))}) : $signed(wire289));
  assign wire292 = wire6;
  assign wire293 = wire292;
  assign wire294 = $signed(((&$signed($unsigned(wire289))) >= {wire147[(2'h2):(1'h0)]}));
  assign wire295 = $signed(wire7);
  assign wire296 = wire148;
  assign wire297 = $unsigned(($unsigned((~wire6)) ?
                       ((8'hbd) ?
                           (8'ha5) : $unsigned($unsigned(wire291))) : wire5));
  assign wire298 = $unsigned((!wire147));
  assign wire299 = (^~{(~|{(wire297 ^ wire5)})});
  assign wire300 = ($unsigned($signed($signed((~&(7'h40))))) ?
                       wire294[(4'hb):(2'h3)] : wire293[(4'hf):(4'he)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module151  (y, clk, wire155, wire154, wire153, wire152);
  output wire [(32'h691):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h3):(1'h0)] wire155;
  input wire [(3'h4):(1'h0)] wire154;
  input wire [(5'h15):(1'h0)] wire153;
  input wire [(5'h12):(1'h0)] wire152;
  wire signed [(5'h14):(1'h0)] wire191;
  wire signed [(5'h13):(1'h0)] wire190;
  wire [(4'hf):(1'h0)] wire189;
  wire [(4'hc):(1'h0)] wire165;
  wire signed [(4'h8):(1'h0)] wire164;
  wire signed [(5'h15):(1'h0)] wire163;
  wire [(5'h13):(1'h0)] wire162;
  wire signed [(4'h8):(1'h0)] wire161;
  wire signed [(3'h5):(1'h0)] wire160;
  wire [(4'hd):(1'h0)] wire159;
  wire signed [(3'h5):(1'h0)] wire158;
  wire signed [(5'h14):(1'h0)] wire157;
  wire [(3'h7):(1'h0)] wire156;
  reg [(5'h10):(1'h0)] reg268 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg263 = (1'h0);
  reg [(4'h9):(1'h0)] reg288 = (1'h0);
  reg [(4'hd):(1'h0)] reg284 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg281 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg279 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg278 = (1'h0);
  reg [(3'h4):(1'h0)] reg277 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg276 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg272 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg270 = (1'h0);
  reg [(3'h5):(1'h0)] reg269 = (1'h0);
  reg [(4'h9):(1'h0)] reg267 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg265 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg264 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg262 = (1'h0);
  reg [(2'h2):(1'h0)] reg259 = (1'h0);
  reg [(5'h13):(1'h0)] reg257 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg252 = (1'h0);
  reg [(4'hc):(1'h0)] reg250 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg249 = (1'h0);
  reg [(5'h13):(1'h0)] reg248 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg247 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg246 = (1'h0);
  reg [(5'h12):(1'h0)] reg245 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg240 = (1'h0);
  reg [(4'hd):(1'h0)] reg237 = (1'h0);
  reg [(5'h15):(1'h0)] reg234 = (1'h0);
  reg [(5'h11):(1'h0)] reg233 = (1'h0);
  reg [(2'h2):(1'h0)] reg231 = (1'h0);
  reg [(4'he):(1'h0)] reg230 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg229 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg228 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg226 = (1'h0);
  reg signed [(4'he):(1'h0)] reg224 = (1'h0);
  reg [(4'hf):(1'h0)] reg222 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg219 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg218 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg217 = (1'h0);
  reg [(4'he):(1'h0)] reg215 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg210 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg209 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg206 = (1'h0);
  reg [(5'h11):(1'h0)] reg203 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg200 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg199 = (1'h0);
  reg [(4'ha):(1'h0)] reg198 = (1'h0);
  reg [(5'h15):(1'h0)] reg180 = (1'h0);
  reg [(2'h3):(1'h0)] reg178 = (1'h0);
  reg [(3'h6):(1'h0)] reg176 = (1'h0);
  reg [(5'h14):(1'h0)] reg175 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg173 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg172 = (1'h0);
  reg [(4'hb):(1'h0)] reg170 = (1'h0);
  reg [(4'h9):(1'h0)] reg169 = (1'h0);
  reg [(4'h9):(1'h0)] reg167 = (1'h0);
  reg [(5'h12):(1'h0)] forvar281 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg280 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg287 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg286 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg285 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg283 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg282 = (1'h0);
  reg [(3'h4):(1'h0)] forvar280 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg275 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar274 = (1'h0);
  reg [(2'h2):(1'h0)] reg273 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg271 = (1'h0);
  reg [(5'h12):(1'h0)] forvar268 = (1'h0);
  reg [(3'h5):(1'h0)] reg266 = (1'h0);
  reg [(2'h3):(1'h0)] forvar263 = (1'h0);
  reg [(4'ha):(1'h0)] reg261 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar260 = (1'h0);
  reg [(5'h12):(1'h0)] forvar258 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg256 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg255 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar254 = (1'h0);
  reg [(5'h15):(1'h0)] reg253 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar251 = (1'h0);
  reg [(2'h3):(1'h0)] forvar244 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar243 = (1'h0);
  reg [(3'h4):(1'h0)] reg242 = (1'h0);
  reg [(5'h14):(1'h0)] reg241 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar238 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar236 = (1'h0);
  reg [(4'he):(1'h0)] reg232 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar228 = (1'h0);
  reg [(3'h6):(1'h0)] reg239 = (1'h0);
  reg [(3'h7):(1'h0)] reg238 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg236 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg235 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar232 = (1'h0);
  reg [(4'ha):(1'h0)] reg227 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg225 = (1'h0);
  reg [(4'hc):(1'h0)] forvar223 = (1'h0);
  reg [(5'h12):(1'h0)] forvar221 = (1'h0);
  reg [(4'h8):(1'h0)] forvar220 = (1'h0);
  reg [(5'h12):(1'h0)] forvar216 = (1'h0);
  reg [(2'h2):(1'h0)] reg214 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg213 = (1'h0);
  reg [(5'h15):(1'h0)] reg212 = (1'h0);
  reg [(3'h7):(1'h0)] forvar211 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar208 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg207 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg205 = (1'h0);
  reg [(4'h9):(1'h0)] reg204 = (1'h0);
  reg [(3'h4):(1'h0)] forvar202 = (1'h0);
  reg [(4'hb):(1'h0)] forvar201 = (1'h0);
  reg signed [(4'he):(1'h0)] reg197 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg196 = (1'h0);
  reg signed [(4'hf):(1'h0)] forvar195 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg194 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar193 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg192 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg188 = (1'h0);
  reg [(4'he):(1'h0)] reg187 = (1'h0);
  reg [(5'h13):(1'h0)] reg186 = (1'h0);
  reg [(4'hb):(1'h0)] forvar185 = (1'h0);
  reg [(5'h10):(1'h0)] reg184 = (1'h0);
  reg [(5'h11):(1'h0)] forvar183 = (1'h0);
  reg [(4'ha):(1'h0)] reg182 = (1'h0);
  reg [(5'h11):(1'h0)] reg181 = (1'h0);
  reg [(5'h15):(1'h0)] forvar179 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg177 = (1'h0);
  reg [(4'h8):(1'h0)] forvar174 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg171 = (1'h0);
  reg [(3'h4):(1'h0)] forvar168 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar166 = (1'h0);
  assign y = {wire191,
                 wire190,
                 wire189,
                 wire165,
                 wire164,
                 wire163,
                 wire162,
                 wire161,
                 wire160,
                 wire159,
                 wire158,
                 wire157,
                 wire156,
                 reg268,
                 reg263,
                 reg288,
                 reg284,
                 reg281,
                 reg279,
                 reg278,
                 reg277,
                 reg276,
                 reg272,
                 reg270,
                 reg269,
                 reg267,
                 reg265,
                 reg264,
                 reg262,
                 reg259,
                 reg257,
                 reg252,
                 reg250,
                 reg249,
                 reg248,
                 reg247,
                 reg246,
                 reg245,
                 reg240,
                 reg237,
                 reg234,
                 reg233,
                 reg231,
                 reg230,
                 reg229,
                 reg228,
                 reg226,
                 reg224,
                 reg222,
                 reg219,
                 reg218,
                 reg217,
                 reg215,
                 reg210,
                 reg209,
                 reg206,
                 reg203,
                 reg200,
                 reg199,
                 reg198,
                 reg180,
                 reg178,
                 reg176,
                 reg175,
                 reg173,
                 reg172,
                 reg170,
                 reg169,
                 reg167,
                 forvar281,
                 reg280,
                 reg287,
                 reg286,
                 reg285,
                 reg283,
                 reg282,
                 forvar280,
                 reg275,
                 forvar274,
                 reg273,
                 reg271,
                 forvar268,
                 reg266,
                 forvar263,
                 reg261,
                 forvar260,
                 forvar258,
                 reg256,
                 reg255,
                 forvar254,
                 reg253,
                 forvar251,
                 forvar244,
                 forvar243,
                 reg242,
                 reg241,
                 forvar238,
                 forvar236,
                 reg232,
                 forvar228,
                 reg239,
                 reg238,
                 reg236,
                 reg235,
                 forvar232,
                 reg227,
                 reg225,
                 forvar223,
                 forvar221,
                 forvar220,
                 forvar216,
                 reg214,
                 reg213,
                 reg212,
                 forvar211,
                 forvar208,
                 reg207,
                 reg205,
                 reg204,
                 forvar202,
                 forvar201,
                 reg197,
                 reg196,
                 forvar195,
                 reg194,
                 forvar193,
                 reg192,
                 reg188,
                 reg187,
                 reg186,
                 forvar185,
                 reg184,
                 forvar183,
                 reg182,
                 reg181,
                 forvar179,
                 reg177,
                 forvar174,
                 reg171,
                 forvar168,
                 forvar166,
                 (1'h0)};
  assign wire156 = ($signed($unsigned((wire155[(2'h3):(1'h1)] ?
                           (wire153 ? (8'ha9) : wire153) : (~(7'h40))))) ?
                       (~^{(^{wire153, wire152}),
                           {$signed(wire155),
                               $signed(wire154)}}) : wire153[(5'h14):(3'h4)]);
  assign wire157 = $unsigned((^(wire154[(2'h2):(1'h1)] ?
                       $unsigned((wire152 + wire156)) : $unsigned(wire152[(5'h10):(3'h5)]))));
  assign wire158 = $unsigned(wire152[(4'ha):(4'h9)]);
  assign wire159 = $signed(wire156[(1'h1):(1'h1)]);
  assign wire160 = $signed(wire156[(2'h2):(2'h2)]);
  assign wire161 = {(~^(($signed(wire158) * wire154[(1'h1):(1'h1)]) * (~|wire158)))};
  assign wire162 = (+wire155);
  assign wire163 = (((|(|$signed((8'hb2)))) + $signed(wire161)) || $signed(wire154));
  assign wire164 = wire159[(2'h3):(1'h1)];
  assign wire165 = (wire164[(3'h5):(3'h5)] <<< {wire156[(2'h2):(1'h1)]});
  always
    @(posedge clk) begin
      for (forvar166 = (1'h0); (forvar166 < (2'h3)); forvar166 = (forvar166 + (1'h1)))
        begin
          reg167 <= wire161;
        end
      for (forvar168 = (1'h0); (forvar168 < (1'h1)); forvar168 = (forvar168 + (1'h1)))
        begin
          if (reg167[(3'h6):(2'h3)])
            begin
              reg169 <= ((-$signed((+(reg167 && (8'hb4))))) ?
                  {wire153[(4'hb):(4'h8)],
                      wire156[(3'h4):(2'h3)]} : $signed((8'h9d)));
              reg170 <= (forvar166 ?
                  (($unsigned((wire156 < wire155)) || $signed((wire157 & reg169))) << wire152) : ($signed(wire165[(1'h1):(1'h0)]) ^~ wire158[(1'h0):(1'h0)]));
              reg171 = {wire154[(1'h0):(1'h0)]};
              reg172 <= wire164[(2'h3):(1'h1)];
              reg173 <= reg167[(3'h7):(3'h6)];
            end
          else
            begin
              reg171 = (+wire152);
              reg172 <= wire152[(3'h7):(1'h1)];
            end
          for (forvar174 = (1'h0); (forvar174 < (1'h0)); forvar174 = (forvar174 + (1'h1)))
            begin
              reg175 <= ($unsigned($signed(((7'h40) == (~|forvar174)))) * $unsigned((~^(8'ha1))));
              reg176 <= $signed(($unsigned(($signed((8'haa)) || $signed(wire156))) ?
                  ((8'h9d) ?
                      ($unsigned(wire157) ?
                          (forvar166 ? reg175 : reg170) : (wire154 ?
                              (8'ha5) : wire158)) : (!wire163)) : $unsigned($signed((wire157 * reg171)))));
              reg177 = (-wire157);
              reg178 <= ((8'haa) - ($signed(forvar174[(3'h7):(2'h2)]) == (wire158[(1'h1):(1'h1)] <= $signed($signed(wire165)))));
            end
          for (forvar179 = (1'h0); (forvar179 < (2'h2)); forvar179 = (forvar179 + (1'h1)))
            begin
              reg180 <= ((|$unsigned(forvar174[(2'h3):(2'h2)])) ?
                  reg178 : $unsigned((|reg172)));
              reg181 = (|(((+(~wire155)) > $unsigned((forvar168 ?
                  wire163 : (8'hbc)))) <<< ($unsigned((+reg169)) ?
                  $unsigned($unsigned(wire159)) : $unsigned(reg175[(5'h14):(5'h13)]))));
              reg182 = $unsigned({$signed($unsigned((8'h9f))),
                  wire165[(3'h5):(2'h2)]});
            end
        end
      for (forvar183 = (1'h0); (forvar183 < (3'h4)); forvar183 = (forvar183 + (1'h1)))
        begin
          reg184 = $signed((+forvar179[(5'h12):(4'hb)]));
          for (forvar185 = (1'h0); (forvar185 < (1'h1)); forvar185 = (forvar185 + (1'h1)))
            begin
              reg186 = forvar168;
              reg187 = ($unsigned({($unsigned(reg172) == reg182[(1'h1):(1'h1)])}) || $unsigned((~|reg170[(4'h9):(3'h5)])));
              reg188 = (({$unsigned($signed(reg171)),
                  (((8'hbf) != reg182) << {wire162,
                      reg182})} | ((!$unsigned((8'ha3))) >= $signed((wire162 + forvar168)))) > wire159);
            end
        end
    end
  assign wire189 = ((($signed(reg178) ?
                           (wire152[(2'h3):(2'h2)] - (wire165 ^ wire162)) : $signed(wire162)) ~^ ($unsigned(wire162) >> $unsigned({wire156,
                           reg170}))) ?
                       (reg172[(1'h1):(1'h1)] ^ $signed(((wire154 ^ wire153) ?
                           reg178[(2'h3):(2'h3)] : wire165))) : wire157);
  assign wire190 = $unsigned(reg180[(3'h7):(3'h7)]);
  assign wire191 = $signed(reg176[(3'h5):(2'h3)]);
  always
    @(posedge clk) begin
      reg192 = ((8'ha8) ^~ $signed(reg173));
      for (forvar193 = (1'h0); (forvar193 < (2'h3)); forvar193 = (forvar193 + (1'h1)))
        begin
          reg194 = (+(-reg176));
          for (forvar195 = (1'h0); (forvar195 < (1'h1)); forvar195 = (forvar195 + (1'h1)))
            begin
              reg196 = ($signed($unsigned((~&(reg194 ?
                  wire160 : reg192)))) & $signed({forvar195[(2'h2):(2'h2)]}));
              reg197 = ($signed(reg170[(2'h2):(1'h1)]) >= ($signed({wire160[(3'h4):(1'h1)]}) >= ($unsigned((reg173 && reg178)) ?
                  ({reg196} ?
                      {wire156} : wire156[(3'h6):(3'h4)]) : ($signed(wire162) <= (^wire160)))));
              reg198 <= wire190;
              reg199 <= {reg170};
              reg200 <= wire153;
            end
        end
      for (forvar201 = (1'h0); (forvar201 < (3'h4)); forvar201 = (forvar201 + (1'h1)))
        begin
          for (forvar202 = (1'h0); (forvar202 < (2'h3)); forvar202 = (forvar202 + (1'h1)))
            begin
              reg203 <= {(^~$unsigned((+(8'ha7)))),
                  $signed(reg198[(4'ha):(2'h3)])};
              reg204 = reg199[(3'h6):(1'h0)];
              reg205 = (!(reg204 + $signed($unsigned(wire154[(3'h4):(2'h2)]))));
              reg206 <= (-$signed(((+(wire159 || wire164)) * reg175)));
            end
          reg207 = reg192[(3'h6):(2'h3)];
          for (forvar208 = (1'h0); (forvar208 < (3'h4)); forvar208 = (forvar208 + (1'h1)))
            begin
              reg209 <= reg169[(1'h0):(1'h0)];
              reg210 <= wire154;
            end
          for (forvar211 = (1'h0); (forvar211 < (3'h4)); forvar211 = (forvar211 + (1'h1)))
            begin
              reg212 = reg192[(2'h2):(1'h1)];
              reg213 = forvar211;
              reg214 = reg172;
              reg215 <= $unsigned($unsigned(wire156[(3'h4):(3'h4)]));
            end
          for (forvar216 = (1'h0); (forvar216 < (1'h0)); forvar216 = (forvar216 + (1'h1)))
            begin
              reg217 <= (~|($signed(((reg180 != wire191) == $signed(reg204))) == $signed((^~reg215))));
              reg218 <= ((^wire191) - (7'h40));
              reg219 <= (8'hac);
            end
        end
      for (forvar220 = (1'h0); (forvar220 < (2'h3)); forvar220 = (forvar220 + (1'h1)))
        begin
          for (forvar221 = (1'h0); (forvar221 < (1'h0)); forvar221 = (forvar221 + (1'h1)))
            begin
              reg222 <= ($unsigned(wire190[(5'h12):(3'h6)]) ?
                  {(^~$signed((reg170 ? wire157 : reg207))),
                      reg176} : $signed((-$unsigned((-wire154)))));
            end
          for (forvar223 = (1'h0); (forvar223 < (3'h4)); forvar223 = (forvar223 + (1'h1)))
            begin
              reg224 <= wire157;
              reg225 = reg224[(2'h2):(1'h1)];
              reg226 <= $signed((wire156 ?
                  $signed($unsigned((^reg178))) : reg199[(2'h3):(2'h2)]));
              reg227 = $unsigned((~&{{(^reg192)}}));
            end
        end
      if ({((&{(8'hb4), wire159}) ?
              reg175[(4'ha):(3'h5)] : ((reg219[(1'h1):(1'h1)] ^~ (wire153 & reg196)) ?
                  (|(-forvar211)) : $signed(forvar220))),
          (8'hb8)})
        begin
          if (reg199[(4'hb):(3'h4)])
            begin
              reg228 <= $unsigned(($unsigned(reg217[(1'h1):(1'h0)]) ^~ (8'ha8)));
              reg229 <= ($signed((~|reg204[(3'h5):(3'h5)])) ^~ reg194[(1'h0):(1'h0)]);
              reg230 <= reg205[(2'h2):(2'h2)];
              reg231 <= $unsigned((reg180 ?
                  (&((reg169 & (8'haa)) >>> {reg226})) : (~^reg222)));
            end
          else
            begin
              reg228 <= reg176;
            end
          for (forvar232 = (1'h0); (forvar232 < (1'h1)); forvar232 = (forvar232 + (1'h1)))
            begin
              reg233 <= {((((wire160 ?
                              reg176 : forvar195) && $unsigned((8'hb6))) ?
                          (^(-wire159)) : reg230) ?
                      (^forvar216) : wire156)};
              reg234 <= reg178;
              reg235 = (-$signed(wire156[(3'h7):(2'h3)]));
              reg236 = reg222;
            end
          reg237 <= forvar232[(3'h5):(3'h5)];
          reg238 = reg225[(4'hd):(2'h2)];
          reg239 = $unsigned(($signed(($unsigned((8'hb8)) ?
              (reg170 < reg227) : $unsigned(reg236))) && $signed(wire152)));
        end
      else
        begin
          for (forvar228 = (1'h0); (forvar228 < (3'h4)); forvar228 = (forvar228 + (1'h1)))
            begin
              reg232 = forvar221;
              reg235 = ($signed((-$signed(reg235))) ?
                  ({($signed(reg180) | (reg206 ?
                          reg217 : reg217))} + (~&{(forvar193 ?
                          wire164 : reg218),
                      (!(8'haa))})) : (^~$unsigned(reg209[(4'he):(4'hd)])));
            end
          for (forvar236 = (1'h0); (forvar236 < (1'h0)); forvar236 = (forvar236 + (1'h1)))
            begin
              reg237 <= {($signed($unsigned((^~reg237))) << $unsigned($signed((-wire159)))),
                  $unsigned((($signed(reg167) ?
                          (forvar232 ? reg215 : reg217) : ((8'had) || reg175)) ?
                      (wire164[(1'h0):(1'h0)] ?
                          $unsigned(wire164) : (reg238 ?
                              wire160 : wire157)) : $unsigned(wire152[(3'h6):(2'h2)])))};
            end
          for (forvar238 = (1'h0); (forvar238 < (3'h4)); forvar238 = (forvar238 + (1'h1)))
            begin
              reg240 <= (~&($signed((&(~^reg167))) ?
                  wire155 : (&($signed(wire154) ?
                      forvar221 : (wire153 ~^ reg203)))));
              reg241 = reg215[(4'hb):(4'hb)];
              reg242 = forvar232[(2'h2):(2'h2)];
            end
        end
    end
  always
    @(posedge clk) begin
      for (forvar243 = (1'h0); (forvar243 < (1'h1)); forvar243 = (forvar243 + (1'h1)))
        begin
          for (forvar244 = (1'h0); (forvar244 < (1'h1)); forvar244 = (forvar244 + (1'h1)))
            begin
              reg245 <= $signed((((|reg170) ?
                      $signed($signed(reg209)) : reg170[(1'h0):(1'h0)]) ?
                  $signed((^~reg226)) : {((reg231 ^~ reg176) ?
                          $signed((7'h40)) : forvar244),
                      $unsigned($signed(reg233))}));
              reg246 <= wire154[(3'h4):(1'h0)];
              reg247 <= reg229;
              reg248 <= ({(-$signed((reg240 ? reg240 : reg167)))} ?
                  wire153 : $unsigned(({(reg217 & (8'hb9)),
                          (reg200 + (8'hb7))} ?
                      (reg233 ?
                          (wire153 - reg198) : $signed(reg215)) : (8'hba))));
              reg249 <= $signed({wire190,
                  (reg199[(4'h9):(1'h1)] ?
                      ($unsigned((8'hb9)) << ((8'hb7) != wire162)) : {(!(7'h44))})});
            end
          reg250 <= reg172[(3'h5):(2'h3)];
          for (forvar251 = (1'h0); (forvar251 < (1'h1)); forvar251 = (forvar251 + (1'h1)))
            begin
              reg252 <= wire159[(4'hd):(2'h3)];
              reg253 = ($unsigned((^(^$unsigned(reg217)))) ?
                  $signed(((wire153[(3'h5):(2'h3)] ?
                          (^reg206) : ((7'h40) ? reg180 : (8'h9f))) ?
                      (|(reg203 ? reg222 : (8'hb0))) : ($signed((8'hbc)) ?
                          (reg209 > wire155) : (wire154 ?
                              wire165 : reg217)))) : $unsigned(reg231[(1'h0):(1'h0)]));
            end
          for (forvar254 = (1'h0); (forvar254 < (1'h0)); forvar254 = (forvar254 + (1'h1)))
            begin
              reg255 = $signed(($signed(reg219) ?
                  $signed(wire152[(4'ha):(3'h7)]) : {$unsigned((8'hbf)),
                      ((reg249 ^~ reg200) && reg178[(2'h3):(1'h1)])}));
              reg256 = reg237;
              reg257 <= (|$unsigned((^(reg218 ?
                  wire165 : ((8'haf) > wire154)))));
            end
        end
      for (forvar258 = (1'h0); (forvar258 < (1'h1)); forvar258 = (forvar258 + (1'h1)))
        begin
          reg259 <= $unsigned($unsigned((((reg170 ?
                  wire153 : reg215) || forvar254[(3'h7):(1'h0)]) ?
              $signed((^(8'hac))) : reg200[(3'h5):(3'h4)])));
        end
      for (forvar260 = (1'h0); (forvar260 < (3'h4)); forvar260 = (forvar260 + (1'h1)))
        begin
          reg261 = reg219;
        end
      reg262 <= $unsigned((|(wire165[(1'h1):(1'h0)] >>> (^~reg249))));
    end
  always
    @(posedge clk) begin
      if ((8'hb9))
        begin
          for (forvar263 = (1'h0); (forvar263 < (3'h4)); forvar263 = (forvar263 + (1'h1)))
            begin
              reg264 <= $signed(reg170[(3'h4):(1'h1)]);
              reg265 <= (((+{{(8'ha6),
                      wire163}}) >= $unsigned(reg231)) <= {($signed(reg199[(2'h3):(1'h1)]) == $unsigned($unsigned(wire152)))});
              reg266 = (8'ha5);
              reg267 <= $signed((reg240 && $unsigned((reg247[(4'h8):(1'h1)] == reg175[(3'h7):(3'h6)]))));
            end
          for (forvar268 = (1'h0); (forvar268 < (1'h1)); forvar268 = (forvar268 + (1'h1)))
            begin
              reg269 <= (8'hbc);
              reg270 <= wire189[(1'h0):(1'h0)];
              reg271 = (~^(&(~{wire159[(3'h5):(1'h1)],
                  (reg167 ? (8'hbb) : reg247)})));
              reg272 <= wire153;
              reg273 = $unsigned((reg267[(1'h1):(1'h1)] ?
                  $signed(reg175) : ($unsigned(wire164[(1'h0):(1'h0)]) <<< reg226[(3'h7):(1'h0)])));
            end
          for (forvar274 = (1'h0); (forvar274 < (2'h3)); forvar274 = (forvar274 + (1'h1)))
            begin
              reg275 = $unsigned(reg215);
              reg276 <= reg275[(3'h5):(3'h5)];
              reg277 <= wire156;
              reg278 <= $signed((8'ha0));
              reg279 <= (8'h9e);
            end
          for (forvar280 = (1'h0); (forvar280 < (2'h2)); forvar280 = (forvar280 + (1'h1)))
            begin
              reg281 <= {(reg180[(5'h10):(2'h2)] >> (~$unsigned(wire191[(4'hd):(4'hd)]))),
                  $signed($unsigned($unsigned(reg271)))};
            end
          if ($signed(({$signed(reg169[(3'h5):(1'h0)])} <= wire163)))
            begin
              reg282 = (((8'h9d) ?
                  $unsigned({$signed(reg262)}) : $signed((!reg215))) + $signed($unsigned($signed((!reg269)))));
              reg283 = reg175;
            end
          else
            begin
              reg284 <= ((((wire155 ? ((8'hac) != reg203) : (reg224 - reg269)) ?
                      $signed((|wire157)) : (wire162 ?
                          $signed(reg264) : (+reg273))) ?
                  $signed(($unsigned(reg257) == (reg199 <<< (8'ha4)))) : (reg203 <<< (+reg237[(1'h0):(1'h0)]))) >> ($unsigned(((reg267 != reg210) | (8'hb9))) ?
                  reg259 : reg246[(4'ha):(3'h7)]));
              reg285 = reg278[(2'h2):(2'h2)];
              reg286 = $signed(($unsigned(reg215[(4'h8):(3'h7)]) && (~&$signed((+reg172)))));
              reg287 = ((&$unsigned(wire159[(2'h3):(2'h3)])) ?
                  $unsigned((reg275 ?
                      reg283 : ($signed(reg269) ~^ (reg226 ?
                          (8'ha3) : reg219)))) : (8'hb5));
              reg288 <= (wire158 ?
                  {($unsigned($signed(reg267)) ?
                          $unsigned((+reg233)) : ((reg262 ? reg245 : reg277) ?
                              (~reg230) : $signed(reg281))),
                      (8'hb6)} : (reg270 ? reg278[(4'h8):(4'h8)] : reg172));
            end
        end
      else
        begin
          reg263 <= $unsigned(reg278[(3'h7):(2'h2)]);
          reg266 = reg275[(3'h7):(3'h4)];
          if ($signed(((((reg264 && wire165) << wire157[(2'h2):(2'h2)]) ?
                  ($signed((8'hba)) ?
                      $unsigned(reg209) : ((8'ha7) ?
                          wire160 : reg175)) : ((reg275 ? reg285 : reg267) ?
                      $unsigned(reg199) : (wire157 * wire157))) ?
              {$signed({(8'ha3)}), reg178} : (~^((wire189 ?
                  wire161 : (8'hb2)) ~^ (wire154 + (8'hba)))))))
            begin
              reg267 <= reg270[(4'he):(3'h7)];
              reg268 <= (reg264[(2'h2):(2'h2)] | reg248[(4'hf):(4'hd)]);
              reg269 <= $signed((($signed(reg275[(3'h7):(1'h0)]) ?
                      reg233[(4'hb):(4'h8)] : (|(reg248 ? reg249 : reg279))) ?
                  $signed(((reg268 ~^ reg285) != (reg263 ?
                      reg278 : wire159))) : ($unsigned((forvar263 - reg206)) ?
                      wire164 : {(reg226 > reg218), {wire155, reg252}})));
            end
          else
            begin
              reg271 = reg277[(1'h0):(1'h0)];
              reg272 <= reg270;
              reg273 = (^~$signed($unsigned(($unsigned(reg276) * (reg215 != reg286)))));
            end
          for (forvar274 = (1'h0); (forvar274 < (1'h1)); forvar274 = (forvar274 + (1'h1)))
            begin
              reg275 = (reg284 ~^ ((-$unsigned((reg287 * reg259))) ^~ (^{$signed((8'hb0)),
                  (~reg288)})));
              reg276 <= reg215[(4'hb):(3'h7)];
              reg277 <= (+reg218[(4'h9):(3'h6)]);
              reg280 = ($signed($unsigned(((reg218 ^ reg268) ?
                      reg273 : ((8'hab) >= reg206)))) ?
                  (reg178[(2'h2):(1'h1)] ?
                      ((8'h9e) ?
                          wire161[(2'h3):(2'h3)] : ((!wire157) ?
                              $signed(reg268) : reg233)) : ($unsigned((^~(8'h9f))) << ((reg237 ?
                          reg265 : reg269) >= (|wire160)))) : (((forvar280[(2'h3):(2'h3)] ?
                      reg178[(2'h2):(1'h1)] : (!(8'hac))) >= reg286[(2'h3):(1'h0)]) ^~ (reg286 | wire163)));
            end
          for (forvar281 = (1'h0); (forvar281 < (2'h2)); forvar281 = (forvar281 + (1'h1)))
            begin
              reg284 <= $signed((~|$unsigned(($signed((8'hb1)) >>> (reg230 ?
                  (8'hb5) : reg180)))));
              reg288 <= (-(|((reg250 ?
                  $unsigned(reg279) : $signed(reg283)) & ({reg200,
                  reg266} != (wire163 & reg248)))));
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param142 = (({({(8'hbd)} && ((8'ha7) ? (8'hbc) : (8'had)))} & (~&(((8'ha0) ? (8'haf) : (8'ha7)) ? ((8'hb3) << (7'h42)) : (&(8'hbe))))) & (~|{(((7'h40) | (8'hb1)) ? ((7'h41) & (8'ha4)) : ((8'hb6) ? (7'h41) : (8'hb8))), (((8'hb6) == (8'ha6)) ? ((7'h43) ? (8'ha6) : (8'haa)) : ((8'hb8) < (8'ha7)))})), 
parameter param143 = ((-(^~(param142 - (param142 ? param142 : (8'ha0))))) ^ (((8'ha5) <= (-(param142 | param142))) ? (((param142 >= param142) ? param142 : {param142, param142}) ~^ param142) : (~&param142))))
(y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h5a4):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire13;
  input wire signed [(5'h15):(1'h0)] wire12;
  input wire signed [(2'h3):(1'h0)] wire11;
  input wire [(3'h6):(1'h0)] wire10;
  wire [(4'hc):(1'h0)] wire141;
  wire signed [(5'h10):(1'h0)] wire140;
  wire [(5'h14):(1'h0)] wire137;
  wire signed [(3'h5):(1'h0)] wire128;
  wire signed [(4'h9):(1'h0)] wire127;
  wire [(5'h14):(1'h0)] wire125;
  wire signed [(5'h11):(1'h0)] wire45;
  reg signed [(4'hd):(1'h0)] reg139 = (1'h0);
  reg [(4'ha):(1'h0)] reg135 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg134 = (1'h0);
  reg [(5'h15):(1'h0)] reg129 = (1'h0);
  reg [(4'h8):(1'h0)] reg123 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg121 = (1'h0);
  reg [(4'hc):(1'h0)] reg114 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg113 = (1'h0);
  reg [(5'h10):(1'h0)] reg112 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg111 = (1'h0);
  reg signed [(4'he):(1'h0)] reg107 = (1'h0);
  reg [(5'h13):(1'h0)] reg103 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg99 = (1'h0);
  reg [(3'h7):(1'h0)] reg90 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg95 = (1'h0);
  reg [(5'h15):(1'h0)] reg94 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg92 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg89 = (1'h0);
  reg [(4'hf):(1'h0)] reg87 = (1'h0);
  reg [(3'h6):(1'h0)] reg86 = (1'h0);
  reg [(5'h12):(1'h0)] reg83 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg82 = (1'h0);
  reg [(4'hd):(1'h0)] reg78 = (1'h0);
  reg [(4'h9):(1'h0)] reg75 = (1'h0);
  reg [(4'he):(1'h0)] reg70 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg67 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg65 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg62 = (1'h0);
  reg [(5'h10):(1'h0)] reg60 = (1'h0);
  reg [(5'h11):(1'h0)] reg56 = (1'h0);
  reg [(2'h2):(1'h0)] reg55 = (1'h0);
  reg [(4'hc):(1'h0)] reg51 = (1'h0);
  reg [(4'ha):(1'h0)] reg50 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg44 = (1'h0);
  reg [(3'h7):(1'h0)] reg41 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg40 = (1'h0);
  reg [(3'h6):(1'h0)] reg38 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg35 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg34 = (1'h0);
  reg [(4'hd):(1'h0)] reg31 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg24 = (1'h0);
  reg [(4'hf):(1'h0)] reg20 = (1'h0);
  reg [(4'h8):(1'h0)] reg18 = (1'h0);
  reg [(5'h15):(1'h0)] reg17 = (1'h0);
  reg [(5'h13):(1'h0)] reg15 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg138 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg136 = (1'h0);
  reg signed [(4'he):(1'h0)] reg133 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg132 = (1'h0);
  reg [(2'h3):(1'h0)] forvar131 = (1'h0);
  reg [(2'h3):(1'h0)] forvar130 = (1'h0);
  reg [(5'h15):(1'h0)] reg126 = (1'h0);
  reg [(3'h7):(1'h0)] reg124 = (1'h0);
  reg [(4'hb):(1'h0)] reg122 = (1'h0);
  reg [(3'h4):(1'h0)] forvar120 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg119 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg118 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar117 = (1'h0);
  reg [(4'ha):(1'h0)] forvar116 = (1'h0);
  reg [(3'h6):(1'h0)] reg115 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar110 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg109 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg108 = (1'h0);
  reg [(5'h14):(1'h0)] reg106 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg105 = (1'h0);
  reg [(5'h11):(1'h0)] forvar104 = (1'h0);
  reg [(5'h14):(1'h0)] reg102 = (1'h0);
  reg [(4'hb):(1'h0)] reg101 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg100 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar98 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar97 = (1'h0);
  reg [(5'h13):(1'h0)] reg96 = (1'h0);
  reg [(4'ha):(1'h0)] reg93 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar88 = (1'h0);
  reg [(3'h6):(1'h0)] forvar93 = (1'h0);
  reg [(3'h5):(1'h0)] reg91 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar90 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg88 = (1'h0);
  reg [(3'h6):(1'h0)] forvar85 = (1'h0);
  reg [(4'ha):(1'h0)] reg84 = (1'h0);
  reg [(4'hc):(1'h0)] reg81 = (1'h0);
  reg [(3'h4):(1'h0)] reg80 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar79 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg77 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar76 = (1'h0);
  reg [(3'h6):(1'h0)] reg74 = (1'h0);
  reg [(3'h6):(1'h0)] reg73 = (1'h0);
  reg [(4'h9):(1'h0)] reg72 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar71 = (1'h0);
  reg [(3'h5):(1'h0)] forvar69 = (1'h0);
  reg [(5'h15):(1'h0)] reg68 = (1'h0);
  reg signed [(4'he):(1'h0)] reg66 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar64 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar63 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg61 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg59 = (1'h0);
  reg [(5'h11):(1'h0)] reg58 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar57 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg54 = (1'h0);
  reg [(4'hc):(1'h0)] reg53 = (1'h0);
  reg [(2'h2):(1'h0)] forvar52 = (1'h0);
  reg [(3'h6):(1'h0)] forvar49 = (1'h0);
  reg [(4'hf):(1'h0)] reg48 = (1'h0);
  reg [(4'h9):(1'h0)] forvar47 = (1'h0);
  reg [(5'h11):(1'h0)] forvar46 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg43 = (1'h0);
  reg [(4'hd):(1'h0)] reg42 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar39 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg37 = (1'h0);
  reg [(5'h10):(1'h0)] reg36 = (1'h0);
  reg [(2'h3):(1'h0)] forvar33 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg32 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg30 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg29 = (1'h0);
  reg signed [(4'he):(1'h0)] reg28 = (1'h0);
  reg [(4'h9):(1'h0)] reg27 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar26 = (1'h0);
  reg [(3'h4):(1'h0)] forvar25 = (1'h0);
  reg [(4'hc):(1'h0)] reg23 = (1'h0);
  reg [(4'hf):(1'h0)] reg22 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg21 = (1'h0);
  reg [(3'h5):(1'h0)] forvar19 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar16 = (1'h0);
  reg [(2'h3):(1'h0)] forvar14 = (1'h0);
  assign y = {wire141,
                 wire140,
                 wire137,
                 wire128,
                 wire127,
                 wire125,
                 wire45,
                 reg139,
                 reg135,
                 reg134,
                 reg129,
                 reg123,
                 reg121,
                 reg114,
                 reg113,
                 reg112,
                 reg111,
                 reg107,
                 reg103,
                 reg99,
                 reg90,
                 reg95,
                 reg94,
                 reg92,
                 reg89,
                 reg87,
                 reg86,
                 reg83,
                 reg82,
                 reg78,
                 reg75,
                 reg70,
                 reg67,
                 reg65,
                 reg62,
                 reg60,
                 reg56,
                 reg55,
                 reg51,
                 reg50,
                 reg44,
                 reg41,
                 reg40,
                 reg38,
                 reg35,
                 reg34,
                 reg31,
                 reg24,
                 reg20,
                 reg18,
                 reg17,
                 reg15,
                 reg138,
                 reg136,
                 reg133,
                 reg132,
                 forvar131,
                 forvar130,
                 reg126,
                 reg124,
                 reg122,
                 forvar120,
                 reg119,
                 reg118,
                 forvar117,
                 forvar116,
                 reg115,
                 forvar110,
                 reg109,
                 reg108,
                 reg106,
                 reg105,
                 forvar104,
                 reg102,
                 reg101,
                 reg100,
                 forvar98,
                 forvar97,
                 reg96,
                 reg93,
                 forvar88,
                 forvar93,
                 reg91,
                 forvar90,
                 reg88,
                 forvar85,
                 reg84,
                 reg81,
                 reg80,
                 forvar79,
                 reg77,
                 forvar76,
                 reg74,
                 reg73,
                 reg72,
                 forvar71,
                 forvar69,
                 reg68,
                 reg66,
                 forvar64,
                 forvar63,
                 reg61,
                 reg59,
                 reg58,
                 forvar57,
                 reg54,
                 reg53,
                 forvar52,
                 forvar49,
                 reg48,
                 forvar47,
                 forvar46,
                 reg43,
                 reg42,
                 forvar39,
                 reg37,
                 reg36,
                 forvar33,
                 reg32,
                 reg30,
                 reg29,
                 reg28,
                 reg27,
                 forvar26,
                 forvar25,
                 reg23,
                 reg22,
                 reg21,
                 forvar19,
                 forvar16,
                 forvar14,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar14 = (1'h0); (forvar14 < (1'h0)); forvar14 = (forvar14 + (1'h1)))
        begin
          reg15 <= $signed((wire13[(3'h6):(2'h2)] ?
              $signed(wire10[(1'h0):(1'h0)]) : wire13));
          for (forvar16 = (1'h0); (forvar16 < (2'h2)); forvar16 = (forvar16 + (1'h1)))
            begin
              reg17 <= ((&({$unsigned(forvar14), (-forvar16)} ?
                      wire10[(2'h3):(1'h0)] : $unsigned((reg15 <<< wire10)))) ?
                  (wire11 != $signed(wire13[(3'h7):(2'h3)])) : forvar16);
              reg18 <= (&(-forvar14[(2'h3):(1'h0)]));
            end
          for (forvar19 = (1'h0); (forvar19 < (1'h1)); forvar19 = (forvar19 + (1'h1)))
            begin
              reg20 <= wire13[(3'h4):(2'h3)];
              reg21 = ($signed(reg17) || ($signed((-(8'ha5))) >> (~|$signed((^~reg17)))));
              reg22 = (wire12 ?
                  (+(wire11 ?
                      {$unsigned((8'hbb))} : (wire13[(3'h4):(2'h2)] ?
                          ((7'h43) ?
                              forvar14 : (8'hb7)) : reg17[(4'he):(1'h0)]))) : (&$unsigned({$signed(wire12),
                      (7'h44)})));
            end
          reg23 = (($signed($signed($signed(reg17))) <<< (-(reg20 ?
                  $unsigned(wire12) : {wire10}))) ?
              wire11 : $unsigned(((reg18 & (reg20 != forvar14)) || (^~(~|(8'hb9))))));
        end
      reg24 <= $signed((forvar19[(1'h0):(1'h0)] >= reg21));
      for (forvar25 = (1'h0); (forvar25 < (2'h3)); forvar25 = (forvar25 + (1'h1)))
        begin
          for (forvar26 = (1'h0); (forvar26 < (1'h0)); forvar26 = (forvar26 + (1'h1)))
            begin
              reg27 = (&wire11);
              reg28 = reg27[(1'h0):(1'h0)];
              reg29 = reg22;
              reg30 = ((reg22 && {($signed(reg21) ?
                          (~|(8'ha0)) : reg23[(2'h2):(2'h2)]),
                      {reg29, (^~reg15)}}) ?
                  (($unsigned((!wire12)) ?
                      reg27[(2'h3):(1'h0)] : ($unsigned((8'ha8)) > reg17)) + $signed(forvar16)) : (~&reg20[(1'h0):(1'h0)]));
              reg31 <= $unsigned($signed($signed(forvar19[(2'h3):(1'h1)])));
            end
          reg32 = forvar14[(2'h2):(2'h2)];
          for (forvar33 = (1'h0); (forvar33 < (2'h2)); forvar33 = (forvar33 + (1'h1)))
            begin
              reg34 <= $unsigned($unsigned(reg17[(4'he):(4'h8)]));
              reg35 <= $unsigned(({(~forvar14[(1'h1):(1'h1)])} ?
                  $signed($unsigned((8'h9c))) : $signed((^~reg23))));
              reg36 = $signed(wire12);
              reg37 = $signed(forvar19);
              reg38 <= $unsigned({reg20[(4'h9):(3'h7)],
                  $signed($unsigned((8'ha5)))});
            end
          for (forvar39 = (1'h0); (forvar39 < (1'h0)); forvar39 = (forvar39 + (1'h1)))
            begin
              reg40 <= ((^((~$unsigned(reg17)) ?
                  (~&(wire10 ?
                      reg15 : reg20)) : (7'h42))) & reg22[(3'h4):(3'h4)]);
              reg41 <= (reg32 <= $signed((forvar33 ?
                  (~$unsigned(forvar19)) : ((forvar19 >> (8'had)) ?
                      forvar14 : (!reg15)))));
              reg42 = (8'hb6);
              reg43 = {((forvar39[(2'h2):(1'h0)] <<< ($signed(reg42) ?
                      $unsigned(reg24) : (reg15 ?
                          (7'h42) : reg31))) >> $signed($unsigned({(8'hb5),
                      reg17}))),
                  (~^$signed(($signed(reg15) - (~|forvar33))))};
              reg44 <= $unsigned(forvar14);
            end
        end
    end
  assign wire45 = $signed($unsigned($unsigned((8'ha0))));
  always
    @(posedge clk) begin
      for (forvar46 = (1'h0); (forvar46 < (3'h4)); forvar46 = (forvar46 + (1'h1)))
        begin
          for (forvar47 = (1'h0); (forvar47 < (1'h0)); forvar47 = (forvar47 + (1'h1)))
            begin
              reg48 = ((~|((8'hb7) && $unsigned((wire13 == wire10)))) >> reg38[(3'h6):(1'h0)]);
            end
          for (forvar49 = (1'h0); (forvar49 < (2'h2)); forvar49 = (forvar49 + (1'h1)))
            begin
              reg50 <= $signed((((|{(8'ha4)}) ?
                      $signed((^reg35)) : reg38[(1'h0):(1'h0)]) ?
                  ($signed((~reg41)) ?
                      ((!(8'ha9)) ?
                          $unsigned(wire10) : (wire13 ?
                              reg35 : (8'hb0))) : (+{reg20})) : (8'ha9)));
            end
          reg51 <= ($signed(reg18[(4'h8):(2'h2)]) ~^ reg18);
          for (forvar52 = (1'h0); (forvar52 < (1'h1)); forvar52 = (forvar52 + (1'h1)))
            begin
              reg53 = (reg44[(1'h0):(1'h0)] ?
                  (reg48[(3'h7):(3'h7)] ?
                      $signed({reg18[(3'h6):(3'h4)]}) : reg34) : (reg35[(1'h0):(1'h0)] >>> forvar49[(1'h0):(1'h0)]));
              reg54 = {$signed((($unsigned(reg41) ?
                      (reg24 && wire45) : $signed(reg15)) ~^ reg38))};
              reg55 <= wire11;
              reg56 <= $unsigned({reg54[(4'h8):(3'h6)],
                  (reg18 >> (&forvar52))});
            end
          for (forvar57 = (1'h0); (forvar57 < (1'h1)); forvar57 = (forvar57 + (1'h1)))
            begin
              reg58 = reg44;
              reg59 = $unsigned($signed($unsigned((&(8'hbd)))));
              reg60 <= reg18;
              reg61 = wire12[(4'he):(4'hd)];
              reg62 <= $unsigned(reg40[(3'h4):(2'h2)]);
            end
        end
    end
  always
    @(posedge clk) begin
      for (forvar63 = (1'h0); (forvar63 < (1'h0)); forvar63 = (forvar63 + (1'h1)))
        begin
          for (forvar64 = (1'h0); (forvar64 < (2'h3)); forvar64 = (forvar64 + (1'h1)))
            begin
              reg65 <= $unsigned((~&{((reg40 ? wire45 : (8'hbc)) ?
                      (forvar63 ? (8'ha0) : reg31) : ((8'h9e) == reg15))}));
              reg66 = $signed((($unsigned((reg24 << reg15)) >= wire13) ?
                  (reg17 < reg62[(3'h5):(2'h3)]) : $unsigned((8'h9f))));
              reg67 <= (&reg55);
              reg68 = ($unsigned((^~reg50[(1'h0):(1'h0)])) ?
                  (^wire12) : (8'h9c));
            end
        end
      for (forvar69 = (1'h0); (forvar69 < (1'h1)); forvar69 = (forvar69 + (1'h1)))
        begin
          reg70 <= (7'h40);
          for (forvar71 = (1'h0); (forvar71 < (1'h0)); forvar71 = (forvar71 + (1'h1)))
            begin
              reg72 = ((^$unsigned((~^(-wire12)))) ?
                  reg40 : wire12[(4'h9):(3'h4)]);
              reg73 = reg72;
              reg74 = (~|(reg50[(1'h0):(1'h0)] - $unsigned($signed(reg55[(1'h0):(1'h0)]))));
              reg75 <= reg67;
            end
          for (forvar76 = (1'h0); (forvar76 < (2'h2)); forvar76 = (forvar76 + (1'h1)))
            begin
              reg77 = $signed($signed($signed((!(wire13 ? reg66 : forvar69)))));
              reg78 <= $unsigned({(~&reg74)});
            end
          for (forvar79 = (1'h0); (forvar79 < (2'h3)); forvar79 = (forvar79 + (1'h1)))
            begin
              reg80 = reg17;
              reg81 = $signed(reg31[(4'h8):(4'h8)]);
              reg82 <= $unsigned((reg38[(2'h2):(1'h1)] >> {(|reg35)}));
              reg83 <= $signed($signed(((^~reg73) - $unsigned(reg68[(3'h7):(2'h3)]))));
              reg84 = reg38[(1'h1):(1'h1)];
            end
        end
      if ((^(((~&{reg80}) ? reg35[(1'h1):(1'h0)] : reg18[(1'h0):(1'h0)]) ?
          ($signed($signed(reg55)) ?
              reg18 : (forvar76 ? $signed(reg82) : reg20)) : $signed(reg24))))
        begin
          for (forvar85 = (1'h0); (forvar85 < (2'h2)); forvar85 = (forvar85 + (1'h1)))
            begin
              reg86 <= reg68[(4'hc):(3'h6)];
              reg87 <= ($unsigned($unsigned($unsigned((reg68 >> reg82)))) ?
                  $signed({$unsigned(reg56),
                      $unsigned($unsigned((8'ha1)))}) : forvar79[(1'h1):(1'h1)]);
              reg88 = (-({(^(reg67 >>> (8'hbe)))} ?
                  reg38[(3'h5):(3'h5)] : {$unsigned($unsigned(reg60))}));
              reg89 <= reg78[(4'ha):(1'h0)];
            end
          for (forvar90 = (1'h0); (forvar90 < (1'h1)); forvar90 = (forvar90 + (1'h1)))
            begin
              reg91 = (^~forvar76);
            end
          reg92 <= (reg38[(1'h0):(1'h0)] > (^~$unsigned((8'hbe))));
          for (forvar93 = (1'h0); (forvar93 < (1'h0)); forvar93 = (forvar93 + (1'h1)))
            begin
              reg94 <= reg77;
              reg95 <= ((reg70[(3'h4):(2'h3)] ?
                      reg15[(5'h12):(5'h12)] : (8'ha6)) ?
                  $unsigned((8'ha2)) : reg73[(3'h6):(1'h1)]);
            end
        end
      else
        begin
          for (forvar85 = (1'h0); (forvar85 < (2'h3)); forvar85 = (forvar85 + (1'h1)))
            begin
              reg86 <= (^~(+{reg92[(4'h9):(3'h6)], (~(forvar85 <<< (8'hbf)))}));
              reg87 <= (&$unsigned(wire11[(2'h3):(1'h0)]));
            end
          for (forvar88 = (1'h0); (forvar88 < (1'h0)); forvar88 = (forvar88 + (1'h1)))
            begin
              reg89 <= $unsigned(($signed((+{reg70})) & $unsigned((reg95[(4'hb):(4'h8)] ?
                  $signed((8'hb9)) : {(7'h41)}))));
              reg90 <= reg40;
              reg91 = forvar76[(4'ha):(3'h5)];
              reg93 = reg34;
            end
          reg96 = reg94;
        end
      for (forvar97 = (1'h0); (forvar97 < (3'h4)); forvar97 = (forvar97 + (1'h1)))
        begin
          for (forvar98 = (1'h0); (forvar98 < (1'h0)); forvar98 = (forvar98 + (1'h1)))
            begin
              reg99 <= $signed($signed((|$unsigned($signed(reg66)))));
              reg100 = $unsigned($unsigned($signed(((&forvar63) > (reg68 ?
                  reg68 : reg56)))));
              reg101 = (~&reg67[(4'hc):(2'h2)]);
              reg102 = {$signed((+($signed(reg17) - $unsigned((8'hb9)))))};
            end
          reg103 <= reg68[(2'h3):(1'h1)];
          for (forvar104 = (1'h0); (forvar104 < (2'h3)); forvar104 = (forvar104 + (1'h1)))
            begin
              reg105 = $unsigned(((reg77 ?
                  {(forvar88 ? (8'ha2) : reg65),
                      (~^reg103)} : $signed((^reg82))) >>> reg100));
              reg106 = reg70;
              reg107 <= (-forvar64[(1'h0):(1'h0)]);
              reg108 = ($unsigned((8'haa)) ?
                  ({$unsigned((reg78 ?
                          wire12 : reg101))} - $signed(reg103)) : forvar71[(4'hd):(4'hc)]);
              reg109 = reg83;
            end
          for (forvar110 = (1'h0); (forvar110 < (1'h1)); forvar110 = (forvar110 + (1'h1)))
            begin
              reg111 <= (forvar76[(3'h4):(2'h2)] <= ($signed($signed($signed((8'h9e)))) & (&$signed({reg51,
                  reg91}))));
              reg112 <= ($unsigned(((^~forvar79[(4'hd):(4'ha)]) ~^ (reg72[(2'h3):(2'h2)] || $signed(reg50)))) + forvar71[(4'h8):(4'h8)]);
              reg113 <= ((~|reg68) ~^ (~^((8'hac) <<< (forvar76 ?
                  (8'hbf) : (&(8'hbc))))));
              reg114 <= (reg108 ?
                  (7'h44) : (reg81 ?
                      forvar71 : (+((reg68 >> reg88) >> wire12[(5'h14):(4'hf)]))));
              reg115 = $signed($signed(reg20[(3'h6):(3'h5)]));
            end
        end
      for (forvar116 = (1'h0); (forvar116 < (1'h0)); forvar116 = (forvar116 + (1'h1)))
        begin
          for (forvar117 = (1'h0); (forvar117 < (3'h4)); forvar117 = (forvar117 + (1'h1)))
            begin
              reg118 = $unsigned(reg82[(3'h6):(2'h3)]);
              reg119 = $unsigned(forvar71);
            end
          for (forvar120 = (1'h0); (forvar120 < (1'h1)); forvar120 = (forvar120 + (1'h1)))
            begin
              reg121 <= (reg115 ?
                  $signed(((reg38 ?
                          (reg83 >= reg81) : (reg89 ? reg90 : reg66)) ?
                      (~^{forvar79}) : $signed($unsigned(reg81)))) : reg78);
              reg122 = reg80;
              reg123 <= $signed((7'h42));
            end
          reg124 = {reg51[(3'h6):(1'h1)]};
        end
    end
  assign wire125 = $unsigned($unsigned((reg123[(2'h3):(1'h1)] > ((reg111 ?
                       reg15 : reg18) >>> (reg18 ? reg15 : reg103)))));
  always
    @(posedge clk) begin
      reg126 = $unsigned(($signed($unsigned($unsigned(wire45))) ~^ reg112));
    end
  assign wire127 = (8'ha3);
  assign wire128 = wire12[(3'h4):(2'h2)];
  always
    @(posedge clk) begin
      reg129 <= $unsigned((reg112[(2'h2):(1'h1)] == reg112[(3'h5):(2'h2)]));
      for (forvar130 = (1'h0); (forvar130 < (2'h3)); forvar130 = (forvar130 + (1'h1)))
        begin
          for (forvar131 = (1'h0); (forvar131 < (1'h1)); forvar131 = (forvar131 + (1'h1)))
            begin
              reg132 = wire125;
              reg133 = (((8'hb9) ?
                      $unsigned(reg65[(3'h7):(2'h2)]) : reg51[(4'hc):(3'h4)]) ?
                  $signed($unsigned(((&(8'hac)) ?
                      $unsigned(reg44) : (reg86 <<< reg18)))) : $unsigned((reg112[(2'h3):(2'h3)] != ($signed(reg50) > (reg132 ?
                      reg89 : reg60)))));
              reg134 <= (+$signed(wire11));
            end
          reg135 <= (reg132 >> $signed($signed($signed($signed(reg35)))));
          reg136 = {$signed($signed($unsigned({wire13, reg111})))};
        end
    end
  assign wire137 = reg112;
  always
    @(posedge clk) begin
      reg138 = wire10;
      reg139 <= ((|((-wire127) * ({reg24} >>> (reg41 ?
          reg38 : reg38)))) || $unsigned((wire127 ?
          (^{reg123}) : reg24[(2'h3):(2'h3)])));
    end
  assign wire140 = (reg135[(3'h6):(2'h3)] ^~ (^(-$signed($unsigned(reg113)))));
  assign wire141 = reg112[(2'h3):(2'h3)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module311  (y, clk, wire315, wire314, wire313, wire312);
  output wire [(32'h54):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hf):(1'h0)] wire315;
  input wire signed [(5'h15):(1'h0)] wire314;
  input wire signed [(5'h15):(1'h0)] wire313;
  input wire [(5'h15):(1'h0)] wire312;
  wire [(5'h14):(1'h0)] wire321;
  wire [(3'h6):(1'h0)] wire320;
  wire signed [(5'h10):(1'h0)] wire319;
  wire [(5'h11):(1'h0)] wire318;
  wire signed [(5'h13):(1'h0)] wire317;
  wire [(3'h5):(1'h0)] wire316;
  assign y = {wire321, wire320, wire319, wire318, wire317, wire316, (1'h0)};
  assign wire316 = {(&(($signed(wire312) << $unsigned((8'ha5))) ?
                           ((wire314 ? (8'ha7) : (8'ha7)) ?
                               $signed((8'ha3)) : (wire312 ?
                                   (8'ha5) : wire315)) : wire314))};
  assign wire317 = ({$signed($unsigned((^wire316))), (-(~&(-wire314)))} ?
                       wire316[(3'h5):(3'h4)] : $signed($signed(wire314[(5'h12):(4'ha)])));
  assign wire318 = ((^~$signed({$unsigned(wire312)})) ?
                       $unsigned((($unsigned(wire315) && wire312) > (8'hb5))) : (wire313 ?
                           (^~($unsigned((8'h9e)) | wire316)) : $signed({wire312[(5'h11):(1'h0)]})));
  assign wire319 = $unsigned(($signed($signed(wire318[(4'he):(3'h5)])) ?
                       ($unsigned($unsigned(wire314)) ?
                           $signed((^~wire316)) : wire312) : $signed(wire313[(3'h5):(2'h3)])));
  assign wire320 = wire317[(3'h5):(1'h0)];
  assign wire321 = ($unsigned(wire319[(4'h9):(3'h4)]) ?
                       ((wire317[(3'h4):(1'h0)] ^ ($unsigned(wire315) ?
                           ((8'hb7) >>> wire317) : $unsigned(wire320))) >= $signed((7'h41))) : $signed($signed(((~wire319) ~^ (~|wire319)))));
endmodule