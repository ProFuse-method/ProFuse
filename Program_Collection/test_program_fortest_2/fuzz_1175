(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3ec):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hb):(1'h0)] wire3;
  input wire signed [(4'he):(1'h0)] wire2;
  input wire signed [(5'h15):(1'h0)] wire1;
  input wire [(3'h7):(1'h0)] wire0;
  wire [(3'h5):(1'h0)] wire5;
  wire signed [(4'hd):(1'h0)] wire4;
  reg signed [(4'he):(1'h0)] reg88 = (1'h0);
  reg [(5'h13):(1'h0)] reg86 = (1'h0);
  reg [(4'hf):(1'h0)] reg83 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg82 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg81 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg80 = (1'h0);
  reg [(3'h7):(1'h0)] reg79 = (1'h0);
  reg [(3'h6):(1'h0)] reg77 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg75 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg74 = (1'h0);
  reg [(4'hc):(1'h0)] reg73 = (1'h0);
  reg [(3'h4):(1'h0)] reg72 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg65 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg63 = (1'h0);
  reg [(4'hf):(1'h0)] reg62 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg60 = (1'h0);
  reg [(5'h14):(1'h0)] reg56 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg54 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg53 = (1'h0);
  reg [(5'h15):(1'h0)] reg50 = (1'h0);
  reg [(2'h2):(1'h0)] reg51 = (1'h0);
  reg [(5'h10):(1'h0)] reg49 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg48 = (1'h0);
  reg [(4'hb):(1'h0)] reg44 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg39 = (1'h0);
  reg [(5'h10):(1'h0)] reg38 = (1'h0);
  reg [(5'h10):(1'h0)] reg36 = (1'h0);
  reg [(5'h14):(1'h0)] reg33 = (1'h0);
  reg [(5'h14):(1'h0)] reg31 = (1'h0);
  reg [(5'h11):(1'h0)] reg29 = (1'h0);
  reg [(2'h3):(1'h0)] reg27 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg24 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg22 = (1'h0);
  reg signed [(4'he):(1'h0)] reg18 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg13 = (1'h0);
  reg [(4'he):(1'h0)] reg11 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg10 = (1'h0);
  reg [(5'h14):(1'h0)] reg9 = (1'h0);
  reg [(3'h6):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg87 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg85 = (1'h0);
  reg [(4'hb):(1'h0)] forvar84 = (1'h0);
  reg [(4'hf):(1'h0)] forvar78 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg76 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar71 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar70 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg69 = (1'h0);
  reg [(2'h3):(1'h0)] reg68 = (1'h0);
  reg [(3'h6):(1'h0)] reg67 = (1'h0);
  reg [(4'hb):(1'h0)] forvar66 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar64 = (1'h0);
  reg [(2'h2):(1'h0)] reg61 = (1'h0);
  reg signed [(4'he):(1'h0)] reg59 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar58 = (1'h0);
  reg [(5'h11):(1'h0)] forvar57 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg55 = (1'h0);
  reg [(4'h9):(1'h0)] reg52 = (1'h0);
  reg [(3'h4):(1'h0)] forvar49 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg45 = (1'h0);
  reg [(2'h3):(1'h0)] forvar50 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg47 = (1'h0);
  reg [(2'h3):(1'h0)] reg46 = (1'h0);
  reg [(3'h5):(1'h0)] forvar45 = (1'h0);
  reg [(3'h7):(1'h0)] reg43 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg42 = (1'h0);
  reg [(5'h13):(1'h0)] forvar41 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg40 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar37 = (1'h0);
  reg [(5'h15):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg34 = (1'h0);
  reg [(4'hc):(1'h0)] forvar32 = (1'h0);
  reg [(5'h15):(1'h0)] reg30 = (1'h0);
  reg [(4'h9):(1'h0)] forvar28 = (1'h0);
  reg [(3'h4):(1'h0)] forvar26 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg25 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg23 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg21 = (1'h0);
  reg [(4'h8):(1'h0)] forvar20 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar19 = (1'h0);
  reg [(5'h14):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar15 = (1'h0);
  reg [(5'h10):(1'h0)] reg14 = (1'h0);
  reg [(2'h3):(1'h0)] forvar12 = (1'h0);
  reg [(5'h14):(1'h0)] forvar8 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar6 = (1'h0);
  assign y = {wire5,
                 wire4,
                 reg88,
                 reg86,
                 reg83,
                 reg82,
                 reg81,
                 reg80,
                 reg79,
                 reg77,
                 reg75,
                 reg74,
                 reg73,
                 reg72,
                 reg65,
                 reg63,
                 reg62,
                 reg60,
                 reg56,
                 reg54,
                 reg53,
                 reg50,
                 reg51,
                 reg49,
                 reg48,
                 reg44,
                 reg39,
                 reg38,
                 reg36,
                 reg33,
                 reg31,
                 reg29,
                 reg27,
                 reg24,
                 reg22,
                 reg18,
                 reg16,
                 reg13,
                 reg11,
                 reg10,
                 reg9,
                 reg7,
                 reg87,
                 reg85,
                 forvar84,
                 forvar78,
                 reg76,
                 forvar71,
                 forvar70,
                 reg69,
                 reg68,
                 reg67,
                 forvar66,
                 forvar64,
                 reg61,
                 reg59,
                 forvar58,
                 forvar57,
                 reg55,
                 reg52,
                 forvar49,
                 reg45,
                 forvar50,
                 reg47,
                 reg46,
                 forvar45,
                 reg43,
                 reg42,
                 forvar41,
                 reg40,
                 forvar37,
                 reg35,
                 reg34,
                 forvar32,
                 reg30,
                 forvar28,
                 forvar26,
                 reg25,
                 reg23,
                 reg21,
                 forvar20,
                 forvar19,
                 reg17,
                 forvar15,
                 reg14,
                 forvar12,
                 forvar8,
                 forvar6,
                 (1'h0)};
  assign wire4 = (^~$signed((+((~|wire1) ~^ (wire2 ? wire3 : wire0)))));
  assign wire5 = (-(wire1 && $signed($unsigned((!wire4)))));
  always
    @(posedge clk) begin
      for (forvar6 = (1'h0); (forvar6 < (2'h2)); forvar6 = (forvar6 + (1'h1)))
        begin
          reg7 <= wire0;
          for (forvar8 = (1'h0); (forvar8 < (1'h0)); forvar8 = (forvar8 + (1'h1)))
            begin
              reg9 <= $unsigned(wire3);
              reg10 <= (~^$unsigned((8'hbb)));
            end
          reg11 <= ((|reg7) + $unsigned($signed({(-wire5), forvar8})));
          for (forvar12 = (1'h0); (forvar12 < (1'h1)); forvar12 = (forvar12 + (1'h1)))
            begin
              reg13 <= reg11;
              reg14 = {$signed(((reg11[(3'h4):(1'h0)] ?
                          $unsigned(reg9) : wire0) ?
                      wire4[(2'h2):(1'h1)] : $signed($unsigned(wire3))))};
            end
          for (forvar15 = (1'h0); (forvar15 < (1'h1)); forvar15 = (forvar15 + (1'h1)))
            begin
              reg16 <= ($signed(wire1[(3'h5):(3'h4)]) >> (wire4[(3'h5):(1'h1)] >= reg14[(2'h3):(2'h3)]));
              reg17 = forvar8;
            end
        end
      reg18 <= ((forvar15[(3'h4):(1'h1)] && reg13[(3'h4):(3'h4)]) ?
          ($signed({$signed(reg14)}) ?
              (~&{reg11[(3'h4):(2'h3)]}) : (reg17 || $unsigned({wire5,
                  (8'hbc)}))) : (($unsigned(reg13) ?
              wire0[(2'h3):(2'h2)] : (&$signed(wire4))) ^~ $signed(({(8'hb4)} ?
              wire0[(3'h5):(3'h5)] : (forvar6 ? wire0 : reg11)))));
    end
  always
    @(posedge clk) begin
      for (forvar19 = (1'h0); (forvar19 < (2'h2)); forvar19 = (forvar19 + (1'h1)))
        begin
          for (forvar20 = (1'h0); (forvar20 < (2'h3)); forvar20 = (forvar20 + (1'h1)))
            begin
              reg21 = $signed({wire3[(3'h6):(3'h4)],
                  $signed($signed((reg10 ? reg11 : reg11)))});
              reg22 <= ($signed({$signed(reg18[(4'hd):(4'ha)])}) >>> $signed(($unsigned($unsigned(wire2)) ?
                  {$unsigned((8'hb2)), (^(8'hbe))} : reg7)));
              reg23 = (reg11[(4'he):(2'h2)] ^ (|(reg18[(4'hb):(4'hb)] ?
                  (|reg21[(4'hd):(3'h4)]) : $signed($signed((8'hb7))))));
              reg24 <= wire0[(1'h0):(1'h0)];
            end
          reg25 = reg7[(2'h3):(2'h2)];
          for (forvar26 = (1'h0); (forvar26 < (2'h2)); forvar26 = (forvar26 + (1'h1)))
            begin
              reg27 <= $signed(wire3[(4'ha):(4'h8)]);
            end
        end
      for (forvar28 = (1'h0); (forvar28 < (3'h4)); forvar28 = (forvar28 + (1'h1)))
        begin
          reg29 <= $signed($signed((reg22 != (reg25[(4'h9):(1'h1)] ?
              (wire4 ? reg18 : reg22) : $unsigned(wire5)))));
          reg30 = (((!$unsigned(reg27)) ^~ {(reg24[(5'h10):(3'h4)] >>> {(8'hb4),
                  (8'ha8)}),
              reg18[(1'h1):(1'h0)]}) || $signed(forvar19[(2'h3):(2'h2)]));
          reg31 <= wire4;
          for (forvar32 = (1'h0); (forvar32 < (3'h4)); forvar32 = (forvar32 + (1'h1)))
            begin
              reg33 <= $unsigned(($signed((-wire1)) ?
                  forvar32[(4'hb):(1'h1)] : (~&((reg21 ? (8'hbc) : reg25) ?
                      wire1 : (8'hbd)))));
              reg34 = $unsigned(((reg13 ?
                      {(^~reg21)} : $signed((forvar26 != forvar28))) ?
                  $signed((forvar20[(1'h0):(1'h0)] ^~ (reg25 && (8'haf)))) : reg29[(1'h0):(1'h0)]));
              reg35 = ((8'haf) ? forvar32[(1'h1):(1'h0)] : wire3);
              reg36 <= ((8'hb9) ?
                  $unsigned(forvar20[(1'h1):(1'h1)]) : ((((8'haf) ?
                          $unsigned(reg16) : (wire1 >>> forvar28)) || (8'hae)) ?
                      reg18[(3'h6):(3'h6)] : wire3));
            end
          for (forvar37 = (1'h0); (forvar37 < (2'h3)); forvar37 = (forvar37 + (1'h1)))
            begin
              reg38 <= $unsigned(reg23);
              reg39 <= $signed({$unsigned($unsigned(reg27)),
                  (^forvar19[(3'h4):(1'h0)])});
              reg40 = (($unsigned(forvar37[(1'h0):(1'h0)]) >> $unsigned(forvar28)) ?
                  $signed($unsigned($unsigned({reg25}))) : ({(|(forvar19 ?
                          wire1 : reg35)),
                      wire0[(1'h0):(1'h0)]} << ((~(reg13 << (8'ha0))) ?
                      reg22 : ($signed(reg22) ? (reg18 > reg16) : reg9))));
            end
        end
      if ((((^~$unsigned((reg38 ? wire1 : forvar37))) == $signed((|(reg21 ?
              (8'ha2) : reg29)))) ?
          reg11 : forvar19[(4'h9):(2'h2)]))
        begin
          for (forvar41 = (1'h0); (forvar41 < (1'h0)); forvar41 = (forvar41 + (1'h1)))
            begin
              reg42 = $unsigned($unsigned((wire5 ^ (reg16[(3'h7):(1'h0)] << wire0))));
              reg43 = (~|((|(wire2 ?
                      reg29[(1'h0):(1'h0)] : (reg42 ~^ (8'hae)))) ?
                  reg11 : (+reg38)));
              reg44 <= ($signed((8'hb9)) ?
                  $unsigned($signed($signed($signed(reg22)))) : (~(~&wire3)));
            end
          for (forvar45 = (1'h0); (forvar45 < (2'h3)); forvar45 = (forvar45 + (1'h1)))
            begin
              reg46 = {reg24[(5'h12):(5'h12)],
                  $unsigned((|reg35[(4'hb):(2'h2)]))};
              reg47 = reg18[(1'h0):(1'h0)];
              reg48 <= forvar32;
              reg49 <= (~$unsigned($signed((reg31 ?
                  reg21 : wire4[(3'h4):(2'h3)]))));
            end
          for (forvar50 = (1'h0); (forvar50 < (2'h2)); forvar50 = (forvar50 + (1'h1)))
            begin
              reg51 <= $signed(($unsigned(((reg25 && (7'h42)) ?
                      reg9 : (reg24 || reg27))) ?
                  $unsigned($signed($signed(reg31))) : reg13));
            end
        end
      else
        begin
          for (forvar41 = (1'h0); (forvar41 < (1'h0)); forvar41 = (forvar41 + (1'h1)))
            begin
              reg42 = ((|$signed($signed($signed(reg9)))) ?
                  reg30[(2'h3):(2'h2)] : (~reg18[(4'hc):(3'h4)]));
              reg43 = $unsigned(forvar19[(4'hd):(2'h3)]);
              reg45 = ((((forvar41[(1'h0):(1'h0)] && reg43[(3'h5):(1'h1)]) && reg47[(3'h6):(3'h5)]) || reg23[(4'ha):(2'h3)]) && $signed((reg30 ?
                  reg40[(3'h5):(1'h0)] : (8'hbd))));
              reg48 <= reg48;
            end
          for (forvar49 = (1'h0); (forvar49 < (1'h1)); forvar49 = (forvar49 + (1'h1)))
            begin
              reg50 <= reg10;
              reg52 = reg10[(4'h9):(2'h2)];
            end
          reg53 <= reg31;
          if (reg22[(4'he):(4'he)])
            begin
              reg54 <= ($unsigned(((reg49[(3'h4):(2'h2)] << reg35) ?
                  (((7'h42) | reg27) ?
                      (reg39 ?
                          (7'h43) : reg13) : {(8'hba)}) : (reg45[(2'h3):(2'h3)] ?
                      (~|forvar37) : $signed(forvar45)))) + reg39[(2'h3):(1'h1)]);
              reg55 = (!(8'hb2));
            end
          else
            begin
              reg54 <= {{{reg30[(3'h5):(2'h3)], (reg38 + $signed(reg23))},
                      $signed((-reg46[(2'h3):(1'h1)]))}};
              reg55 = $unsigned($signed((forvar19[(4'h9):(3'h6)] < $signed((~forvar45)))));
              reg56 <= reg53[(4'hb):(4'h9)];
            end
        end
      for (forvar57 = (1'h0); (forvar57 < (2'h2)); forvar57 = (forvar57 + (1'h1)))
        begin
          for (forvar58 = (1'h0); (forvar58 < (1'h1)); forvar58 = (forvar58 + (1'h1)))
            begin
              reg59 = forvar50;
              reg60 <= (+$unsigned(reg48));
              reg61 = $unsigned($unsigned($unsigned(reg21[(4'hc):(3'h5)])));
              reg62 <= (+(|(^(8'hba))));
              reg63 <= $unsigned(reg59[(1'h1):(1'h0)]);
            end
          for (forvar64 = (1'h0); (forvar64 < (2'h3)); forvar64 = (forvar64 + (1'h1)))
            begin
              reg65 <= reg47;
            end
          for (forvar66 = (1'h0); (forvar66 < (3'h4)); forvar66 = (forvar66 + (1'h1)))
            begin
              reg67 = $signed(((forvar20 ?
                  ({reg36, wire5} || (~&reg29)) : ($signed((8'hbd)) ?
                      reg40[(1'h1):(1'h1)] : (reg54 != reg48))) | reg61[(2'h2):(1'h0)]));
              reg68 = ($unsigned(((reg59[(4'h9):(2'h2)] < $signed((8'hbc))) == reg16[(3'h4):(1'h0)])) ?
                  $unsigned({$signed($unsigned(forvar50)),
                      (^$unsigned(reg50))}) : (reg51 ?
                      ($signed(reg44[(4'hb):(2'h2)]) ?
                          (reg60 ?
                              reg38 : $signed(reg7)) : $signed(reg31)) : $signed(forvar45)));
            end
          reg69 = (wire5[(3'h5):(3'h5)] ?
              forvar57[(4'hf):(4'hb)] : $unsigned($unsigned($unsigned((+reg67)))));
        end
      for (forvar70 = (1'h0); (forvar70 < (1'h0)); forvar70 = (forvar70 + (1'h1)))
        begin
          for (forvar71 = (1'h0); (forvar71 < (1'h1)); forvar71 = (forvar71 + (1'h1)))
            begin
              reg72 <= ((^reg61) ?
                  ($signed(reg36[(4'hd):(4'h9)]) ?
                      $signed(reg62[(4'hc):(4'hb)]) : (reg53 >> (|$unsigned(reg38)))) : reg31[(4'hf):(3'h4)]);
              reg73 <= (~|($signed((((8'h9e) ? wire2 : reg29) ?
                      forvar49 : ((8'hbc) ? wire2 : forvar64))) ?
                  (|((7'h40) ?
                      (forvar41 ?
                          reg60 : reg13) : forvar57)) : (($signed(reg18) - $unsigned(reg63)) ?
                      reg9 : $signed(reg47[(1'h1):(1'h0)]))));
              reg74 <= $signed({reg45[(2'h3):(2'h3)], (!$signed((^~reg9)))});
              reg75 <= (|(($unsigned({reg18,
                  reg52}) << forvar41) >> $signed({$unsigned(reg63)})));
              reg76 = forvar57[(1'h0):(1'h0)];
            end
          reg77 <= $signed(reg36);
          for (forvar78 = (1'h0); (forvar78 < (2'h2)); forvar78 = (forvar78 + (1'h1)))
            begin
              reg79 <= $unsigned(reg72);
              reg80 <= $unsigned({($signed({(8'hb3),
                      reg22}) <<< ($signed(reg72) <<< {reg25, reg18})),
                  {$unsigned(wire2[(4'hd):(2'h3)]),
                      ($unsigned(reg22) ?
                          $signed(forvar28) : $signed(reg74))}});
              reg81 <= ({$unsigned($signed(reg53[(3'h7):(3'h5)]))} & (&((&(reg9 ?
                      reg62 : reg77)) ?
                  $signed(forvar37[(1'h0):(1'h0)]) : (-(reg46 ?
                      (8'hb8) : reg67)))));
              reg82 <= $unsigned(((8'ha4) ?
                  (^~$signed(reg52)) : $signed((((8'ha2) ~^ reg34) ?
                      (-forvar37) : forvar58[(1'h1):(1'h1)]))));
            end
          reg83 <= forvar49;
          for (forvar84 = (1'h0); (forvar84 < (2'h2)); forvar84 = (forvar84 + (1'h1)))
            begin
              reg85 = (reg35[(2'h3):(2'h2)] ?
                  reg82[(3'h4):(2'h2)] : (((forvar19 ?
                          $unsigned(wire4) : reg65[(3'h7):(1'h0)]) >>> $unsigned(((8'hbc) > reg49))) ?
                      ((8'ha5) <= $unsigned(reg65)) : $signed(reg55[(5'h10):(5'h10)])));
              reg86 <= {{(((reg34 ? (8'ha0) : reg85) ?
                          (reg76 << reg34) : (reg48 ?
                              reg56 : reg31)) == $signed({reg69})),
                      $unsigned(($signed((8'hb8)) + reg24))},
                  $signed(reg79)};
              reg87 = $signed(wire1);
              reg88 <= reg63;
            end
        end
    end
endmodule