(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param47 = ((^((^{(8'hbd)}) ? (((8'ha6) >>> (8'hb6)) <<< ((8'hbc) <<< (8'hba))) : {(+(8'hbe))})) ? ((^(~((8'hb9) ? (8'h9e) : (8'h9f)))) >>> (((~&(8'hb7)) ? ((8'haf) - (8'h9c)) : ((7'h41) ~^ (8'hb9))) >> (~(-(8'ha8))))) : (8'h9c)))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h1e6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire3;
  input wire signed [(4'h9):(1'h0)] wire2;
  input wire signed [(3'h4):(1'h0)] wire1;
  input wire signed [(4'hb):(1'h0)] wire0;
  wire signed [(5'h11):(1'h0)] wire37;
  wire signed [(4'hd):(1'h0)] wire36;
  wire [(5'h10):(1'h0)] wire35;
  wire [(4'hf):(1'h0)] wire34;
  wire [(4'ha):(1'h0)] wire30;
  wire signed [(3'h5):(1'h0)] wire29;
  wire [(4'hd):(1'h0)] wire28;
  wire signed [(4'h8):(1'h0)] wire27;
  wire [(4'hb):(1'h0)] wire26;
  wire [(4'he):(1'h0)] wire25;
  wire [(4'hf):(1'h0)] wire24;
  wire signed [(4'hc):(1'h0)] wire23;
  wire signed [(3'h5):(1'h0)] wire22;
  wire signed [(2'h3):(1'h0)] wire8;
  wire signed [(5'h12):(1'h0)] wire7;
  wire [(5'h13):(1'h0)] wire6;
  wire signed [(5'h15):(1'h0)] wire5;
  wire signed [(5'h10):(1'h0)] wire4;
  reg [(3'h6):(1'h0)] reg45 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg43 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg39 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg33 = (1'h0);
  reg [(5'h12):(1'h0)] reg31 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg20 = (1'h0);
  reg [(3'h4):(1'h0)] reg15 = (1'h0);
  reg [(4'ha):(1'h0)] reg14 = (1'h0);
  reg [(2'h3):(1'h0)] reg12 = (1'h0);
  reg [(4'ha):(1'h0)] reg11 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg46 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg44 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg42 = (1'h0);
  reg [(3'h5):(1'h0)] forvar41 = (1'h0);
  reg [(2'h3):(1'h0)] forvar40 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg38 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar32 = (1'h0);
  reg [(4'ha):(1'h0)] reg21 = (1'h0);
  reg [(3'h7):(1'h0)] reg19 = (1'h0);
  reg [(5'h15):(1'h0)] reg18 = (1'h0);
  reg [(2'h3):(1'h0)] reg17 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar16 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar13 = (1'h0);
  reg [(5'h15):(1'h0)] forvar10 = (1'h0);
  reg [(5'h10):(1'h0)] forvar9 = (1'h0);
  assign y = {wire37,
                 wire36,
                 wire35,
                 wire34,
                 wire30,
                 wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire23,
                 wire22,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg45,
                 reg43,
                 reg39,
                 reg33,
                 reg31,
                 reg20,
                 reg15,
                 reg14,
                 reg12,
                 reg11,
                 reg46,
                 reg44,
                 reg42,
                 forvar41,
                 forvar40,
                 reg38,
                 forvar32,
                 reg21,
                 reg19,
                 reg18,
                 reg17,
                 forvar16,
                 forvar13,
                 forvar10,
                 forvar9,
                 (1'h0)};
  assign wire4 = $unsigned((wire1[(1'h0):(1'h0)] ?
                     (&($unsigned(wire0) ?
                         wire1 : (&wire3))) : ((wire2[(1'h0):(1'h0)] ?
                         (wire1 > wire3) : (wire1 >>> (8'h9f))) & wire0[(1'h0):(1'h0)])));
  assign wire5 = $unsigned($unsigned(wire2[(3'h6):(3'h6)]));
  assign wire6 = (wire4[(4'hd):(1'h1)] ~^ $signed(wire5[(5'h12):(4'hd)]));
  assign wire7 = {(-wire6[(4'hd):(3'h7)])};
  assign wire8 = $signed((wire2[(3'h6):(1'h1)] ?
                     wire5[(3'h5):(2'h3)] : $unsigned(wire1)));
  always
    @(posedge clk) begin
      for (forvar9 = (1'h0); (forvar9 < (1'h1)); forvar9 = (forvar9 + (1'h1)))
        begin
          for (forvar10 = (1'h0); (forvar10 < (2'h3)); forvar10 = (forvar10 + (1'h1)))
            begin
              reg11 <= ({$unsigned((|((8'hae) >> (8'hac)))),
                  (wire2[(2'h2):(1'h1)] ?
                      (-$signed(forvar9)) : (^(~&wire8)))} >>> wire2);
              reg12 <= $signed($signed($unsigned(reg11)));
            end
          for (forvar13 = (1'h0); (forvar13 < (2'h2)); forvar13 = (forvar13 + (1'h1)))
            begin
              reg14 <= (wire1[(1'h0):(1'h0)] ?
                  $unsigned($unsigned($unsigned($unsigned(wire6)))) : ($signed((wire0[(3'h4):(1'h0)] < (wire8 ?
                      (8'ha5) : wire0))) ^ ($unsigned(wire3) == (wire0 ?
                      (forvar10 ? wire4 : forvar13) : $signed(wire8)))));
            end
          reg15 <= wire5[(1'h0):(1'h0)];
          for (forvar16 = (1'h0); (forvar16 < (1'h0)); forvar16 = (forvar16 + (1'h1)))
            begin
              reg17 = {({{wire8}} ?
                      ((wire5[(4'ha):(4'ha)] <<< (8'hbc)) ?
                          wire8 : (wire6 ?
                              (wire1 <<< (8'h9e)) : $unsigned(wire7))) : (($signed(wire6) << $signed(wire5)) ^~ $signed($signed(reg14)))),
                  ((~&($signed(forvar16) || (&wire8))) ?
                      wire8 : ((wire1 >> $unsigned(wire8)) ?
                          {(~^forvar10),
                              $signed(wire4)} : forvar13[(2'h2):(2'h2)]))};
              reg18 = $signed($unsigned(wire8));
              reg19 = ($unsigned($unsigned((reg15 ?
                  wire1[(2'h3):(1'h1)] : $signed(wire6)))) == (-$signed(forvar13)));
              reg20 <= (~^$unsigned(reg19));
              reg21 = (~&reg12);
            end
        end
    end
  assign wire22 = {$signed(((wire3[(3'h4):(2'h2)] ?
                          {wire6,
                              wire6} : $signed(wire4)) & wire2[(2'h2):(2'h2)])),
                      $signed($unsigned(wire0[(4'hb):(2'h2)]))};
  assign wire23 = $signed($signed((wire22[(1'h1):(1'h1)] ?
                      ($signed(wire1) ?
                          (wire7 ?
                              wire5 : (8'hbc)) : $signed(wire3)) : $signed($unsigned(wire22)))));
  assign wire24 = reg20[(4'h9):(3'h6)];
  assign wire25 = ($unsigned(((8'hb6) != (wire7 ?
                          ((8'hbb) ? wire23 : reg20) : reg14))) ?
                      wire7[(3'h4):(2'h3)] : (wire8[(1'h0):(1'h0)] ?
                          wire7 : (~(!(~|wire1)))));
  assign wire26 = (!(~^{wire24, $signed((wire22 != wire4))}));
  assign wire27 = wire0;
  assign wire28 = $unsigned($unsigned($unsigned(wire8[(2'h2):(1'h1)])));
  assign wire29 = {(!((wire24[(4'h9):(2'h3)] ?
                          {wire27} : (~|wire25)) ^~ ($signed(wire8) ?
                          $unsigned(wire7) : (wire28 ? wire26 : wire5))))};
  assign wire30 = ((wire2 || ((~&(wire23 + wire8)) >= $signed(reg15[(2'h3):(2'h2)]))) ?
                      wire25[(4'he):(2'h2)] : (reg20[(5'h12):(4'he)] >> $signed((!(wire26 ?
                          wire2 : wire4)))));
  always
    @(posedge clk) begin
      reg31 <= ((&($unsigned({wire8, wire8}) ^~ ($signed(wire3) ?
          ((8'hb6) <<< wire3) : (wire25 * (8'h9d))))) >= $unsigned((!{((7'h42) ?
              reg12 : wire24),
          $unsigned(wire29)})));
      for (forvar32 = (1'h0); (forvar32 < (1'h1)); forvar32 = (forvar32 + (1'h1)))
        begin
          reg33 <= wire8;
        end
    end
  assign wire34 = wire24;
  assign wire35 = ($unsigned(wire34[(4'h8):(3'h4)]) < reg14[(4'h9):(2'h2)]);
  assign wire36 = $signed((^~wire7));
  assign wire37 = $signed($signed($signed(({reg31, reg12} ?
                      (reg31 ? wire2 : wire8) : {(8'hb0), wire4}))));
  always
    @(posedge clk) begin
      reg38 = (&$unsigned(($signed(wire5) << ((wire4 << wire35) ?
          wire1 : $unsigned(wire5)))));
    end
  always
    @(posedge clk) begin
      reg39 <= $unsigned(wire0[(3'h4):(2'h2)]);
      for (forvar40 = (1'h0); (forvar40 < (2'h3)); forvar40 = (forvar40 + (1'h1)))
        begin
          for (forvar41 = (1'h0); (forvar41 < (1'h0)); forvar41 = (forvar41 + (1'h1)))
            begin
              reg42 = $unsigned(wire5);
              reg43 <= (|($unsigned(((reg12 ? wire4 : wire27) != (wire34 ?
                  wire0 : forvar40))) <= (~{(reg42 ? wire3 : wire29),
                  (^~wire28)})));
              reg44 = reg42;
              reg45 <= ((wire8[(2'h2):(1'h0)] ?
                      $signed(wire2[(1'h0):(1'h0)]) : ($signed(wire4) - (&$signed(wire34)))) ?
                  {$signed(wire35[(4'hc):(4'ha)]),
                      (+$signed($unsigned((8'had))))} : (reg42 ?
                      $signed(wire2) : $unsigned((wire37[(4'he):(4'h9)] - (^~forvar40)))));
              reg46 = reg43;
            end
        end
    end
endmodule