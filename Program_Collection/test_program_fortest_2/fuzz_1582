(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param15 = ((+(-((~(8'hb8)) ^ (|(8'ha2))))) >= ((^(((7'h41) || (8'ha6)) ^ ((8'ha6) ? (8'haf) : (8'hb0)))) ? ((~(!(7'h43))) == (((8'had) - (8'h9e)) * ((8'hbb) <<< (8'haf)))) : {(~|{(8'ha4), (8'ha9)})})))
(y, clk, wire4, wire3, wire2, wire1, wire0);
  output wire [(32'h7c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire4;
  input wire signed [(3'h5):(1'h0)] wire3;
  input wire [(4'ha):(1'h0)] wire2;
  input wire signed [(3'h6):(1'h0)] wire1;
  input wire [(4'hd):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire14;
  wire signed [(5'h12):(1'h0)] wire10;
  wire signed [(4'hc):(1'h0)] wire9;
  wire [(5'h10):(1'h0)] wire6;
  wire [(5'h11):(1'h0)] wire5;
  reg [(4'h8):(1'h0)] reg13 = (1'h0);
  reg [(4'he):(1'h0)] reg7 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar12 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg11 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg8 = (1'h0);
  assign y = {wire14,
                 wire10,
                 wire9,
                 wire6,
                 wire5,
                 reg13,
                 reg7,
                 forvar12,
                 reg11,
                 reg8,
                 (1'h0)};
  assign wire5 = "1Zqp2";
  assign wire6 = wire5;
  always
    @(posedge clk) begin
      reg7 <= wire1;
      reg8 = $unsigned((~&(wire4[(2'h2):(2'h2)] != ((wire4 <= wire4) ?
          (wire1 ? reg7 : wire6) : wire6))));
    end
  assign wire9 = wire4;
  assign wire10 = $signed(wire1);
  always
    @(posedge clk) begin
      reg11 = "qfStqL";
      for (forvar12 = (1'h0); (forvar12 < (2'h2)); forvar12 = (forvar12 + (1'h1)))
        begin
          if ($unsigned($unsigned({({wire6} ? {wire9} : (wire6 >> wire9)),
              reg7})))
            begin
              reg13 <= "Hye80iYa1";
            end
          else
            begin
              reg13 <= (~|$unsigned((!$signed({(8'h9f), reg13}))));
            end
        end
    end
  assign wire14 = {wire5[(1'h0):(1'h0)]};
endmodule