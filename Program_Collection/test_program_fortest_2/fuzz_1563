(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param27 = {(({((8'h9e) ^~ (8'h9e))} ? {((8'ha1) ? (8'h9f) : (8'ha7)), (~^(8'ha5))} : ((!(8'ha9)) & (&(8'h9c)))) ? (~&(((8'ha9) << (8'ha3)) <= (-(8'ha7)))) : ({{(8'haf), (8'haa)}} ? ((-(7'h42)) ? ((8'hbd) ? (8'ha7) : (7'h43)) : {(8'hab)}) : (^((8'ha3) ? (8'haf) : (8'haf)))))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'had):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h10):(1'h0)] wire3;
  input wire [(4'hc):(1'h0)] wire2;
  input wire signed [(5'h11):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire0;
  wire [(4'h8):(1'h0)] wire26;
  wire [(3'h6):(1'h0)] wire25;
  wire [(2'h2):(1'h0)] wire24;
  wire [(4'ha):(1'h0)] wire23;
  reg signed [(4'ha):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg21 = (1'h0);
  reg [(2'h3):(1'h0)] reg20 = (1'h0);
  reg [(3'h6):(1'h0)] reg19 = (1'h0);
  reg [(4'he):(1'h0)] reg18 = (1'h0);
  reg [(3'h4):(1'h0)] reg5 = (1'h0);
  reg [(2'h2):(1'h0)] reg15 = (1'h0);
  reg [(4'he):(1'h0)] reg14 = (1'h0);
  reg [(4'ha):(1'h0)] reg13 = (1'h0);
  reg [(3'h7):(1'h0)] reg12 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg11 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg9 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg7 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg6 = (1'h0);
  reg [(2'h3):(1'h0)] reg4 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg17 = (1'h0);
  reg [(4'ha):(1'h0)] forvar16 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg10 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg8 = (1'h0);
  reg [(4'hb):(1'h0)] forvar5 = (1'h0);
  assign y = {wire26,
                 wire25,
                 wire24,
                 wire23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg5,
                 reg15,
                 reg14,
                 reg13,
                 reg12,
                 reg11,
                 reg9,
                 reg7,
                 reg6,
                 reg4,
                 reg17,
                 forvar16,
                 reg10,
                 reg8,
                 forvar5,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (wire2[(2'h2):(1'h0)])
        begin
          reg4 <= $unsigned((($unsigned((wire0 ? wire2 : wire0)) ?
                  wire1 : wire0) ?
              $unsigned($unsigned("KU6svci4doLZe4M")) : wire2));
          for (forvar5 = (1'h0); (forvar5 < (2'h2)); forvar5 = (forvar5 + (1'h1)))
            begin
              reg6 <= "cfuhwG7F";
              reg7 <= $unsigned(wire2[(2'h3):(1'h0)]);
            end
          if (wire3[(4'h8):(3'h7)])
            begin
              reg8 = (-"JWz");
              reg9 <= "feKpwJc878hZXGkqH";
            end
          else
            begin
              reg9 <= (+(|(((forvar5 == reg7) >= (8'h9d)) ?
                  wire1[(4'ha):(1'h1)] : reg8)));
            end
          reg10 = (+$unsigned({(reg7 == {(8'hb2)})}));
          if ({"aRSrZkg0ATZigZSFBK"})
            begin
              reg11 <= (~$signed($signed("KU8aNEe")));
            end
          else
            begin
              reg11 <= "m5ZWy81dJC2F";
              reg12 <= wire3;
              reg13 <= ((((8'ha7) ?
                  $unsigned((wire1 ?
                      reg7 : (8'hb8))) : reg7) + $signed($unsigned((~|(8'ha0))))) * $signed((reg8[(2'h3):(1'h0)] ?
                  ((reg6 ?
                      (8'ha6) : reg6) | (wire2 - forvar5)) : $signed((reg7 == reg6)))));
              reg14 <= (-"GV");
              reg15 <= (8'h9f);
            end
        end
      else
        begin
          reg4 <= reg7[(2'h3):(1'h1)];
          reg5 <= ((|reg4[(2'h2):(1'h0)]) ?
              ($signed(((wire3 ? reg14 : reg8) ?
                  $unsigned(wire2) : reg12)) * (|((reg12 + reg14) * {(8'hb5)}))) : $signed((reg9[(1'h0):(1'h0)] | reg10[(3'h5):(3'h4)])));
        end
      for (forvar16 = (1'h0); (forvar16 < (2'h2)); forvar16 = (forvar16 + (1'h1)))
        begin
          if ({{($unsigned(reg10[(2'h3):(2'h2)]) ?
                      (-forvar16) : $unsigned((forvar5 ? (8'hb0) : (8'hb9))))}})
            begin
              reg17 = (reg13[(3'h6):(2'h3)] >>> ((+$signed($unsigned(reg5))) ?
                  ("oe4zidT76EQb8kdOIGH" != $signed("4gaNI")) : "qiiUE"));
              reg18 <= "2FBbQWpiE";
            end
          else
            begin
              reg18 <= {(~|reg7[(1'h1):(1'h1)])};
            end
          reg19 <= reg5;
          reg20 <= {reg14, reg6[(3'h5):(1'h1)]};
        end
      reg21 <= (($signed(reg20[(2'h3):(1'h0)]) == ((~"kV9ESGowaXgb") > (wire0[(2'h2):(2'h2)] ?
              (wire1 - reg5) : {reg8}))) ?
          reg7[(3'h4):(2'h3)] : (("6wxA0LR97" <<< ($signed(reg9) ?
              (reg17 + reg13) : ((7'h42) ?
                  reg15 : forvar5))) > "m8xiASv4vAwxqdH8pzK"));
      reg22 <= ("EhEgAC" < $unsigned((reg19 ?
          ($unsigned(reg6) ^ (^reg18)) : $signed(reg11[(1'h0):(1'h0)]))));
    end
  assign wire23 = (8'hba);
  assign wire24 = ("" <= (|{"ZAmyXwU39BH7Yy43tHps", $signed((&reg15))}));
  assign wire25 = (($signed((8'hb8)) ^~ "ws") ?
                      $unsigned(wire3) : (^~(~|"yCNyI")));
  assign wire26 = ($unsigned($signed($signed(wire25[(1'h0):(1'h0)]))) ?
                      (^"0KI") : "3U7K954VeeoeOE");
endmodule