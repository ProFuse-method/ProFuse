(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h3fb):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire3;
  input wire [(5'h11):(1'h0)] wire2;
  input wire [(5'h11):(1'h0)] wire1;
  input wire [(5'h15):(1'h0)] wire0;
  wire signed [(3'h7):(1'h0)] wire125;
  wire [(2'h2):(1'h0)] wire124;
  wire signed [(3'h6):(1'h0)] wire123;
  wire signed [(3'h6):(1'h0)] wire122;
  wire signed [(4'hc):(1'h0)] wire45;
  wire signed [(5'h13):(1'h0)] wire43;
  wire signed [(5'h13):(1'h0)] wire8;
  wire signed [(3'h4):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire6;
  wire [(4'hc):(1'h0)] wire5;
  wire signed [(5'h11):(1'h0)] wire4;
  reg signed [(5'h12):(1'h0)] reg121 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg120 = (1'h0);
  reg [(5'h10):(1'h0)] reg119 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg117 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg115 = (1'h0);
  reg [(3'h7):(1'h0)] reg109 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg105 = (1'h0);
  reg [(3'h4):(1'h0)] reg100 = (1'h0);
  reg [(4'he):(1'h0)] reg98 = (1'h0);
  reg [(4'he):(1'h0)] reg96 = (1'h0);
  reg [(4'hd):(1'h0)] reg95 = (1'h0);
  reg [(4'hb):(1'h0)] reg93 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg92 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg87 = (1'h0);
  reg [(5'h11):(1'h0)] reg85 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg83 = (1'h0);
  reg signed [(4'he):(1'h0)] reg81 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg80 = (1'h0);
  reg [(3'h5):(1'h0)] reg79 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg77 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg75 = (1'h0);
  reg [(3'h7):(1'h0)] reg74 = (1'h0);
  reg [(5'h11):(1'h0)] reg71 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg70 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg68 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg65 = (1'h0);
  reg [(5'h13):(1'h0)] reg63 = (1'h0);
  reg [(4'hc):(1'h0)] reg62 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg61 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg57 = (1'h0);
  reg [(5'h11):(1'h0)] reg56 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg53 = (1'h0);
  reg [(4'h9):(1'h0)] reg52 = (1'h0);
  reg [(4'h8):(1'h0)] reg51 = (1'h0);
  reg [(4'he):(1'h0)] reg47 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg46 = (1'h0);
  reg [(5'h11):(1'h0)] forvar118 = (1'h0);
  reg [(2'h3):(1'h0)] forvar116 = (1'h0);
  reg [(2'h3):(1'h0)] reg114 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg113 = (1'h0);
  reg [(3'h6):(1'h0)] reg112 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg111 = (1'h0);
  reg [(3'h7):(1'h0)] forvar110 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar108 = (1'h0);
  reg [(4'h8):(1'h0)] reg107 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg106 = (1'h0);
  reg [(4'hf):(1'h0)] reg104 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg103 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar102 = (1'h0);
  reg [(3'h6):(1'h0)] forvar101 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg99 = (1'h0);
  reg [(4'h8):(1'h0)] forvar97 = (1'h0);
  reg [(4'hc):(1'h0)] forvar94 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg91 = (1'h0);
  reg [(4'hb):(1'h0)] reg90 = (1'h0);
  reg [(2'h2):(1'h0)] forvar89 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar88 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar86 = (1'h0);
  reg [(4'hb):(1'h0)] reg84 = (1'h0);
  reg [(4'h9):(1'h0)] reg82 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar78 = (1'h0);
  reg [(3'h7):(1'h0)] reg76 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg73 = (1'h0);
  reg [(4'ha):(1'h0)] forvar72 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar69 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg67 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar66 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar64 = (1'h0);
  reg [(2'h3):(1'h0)] reg60 = (1'h0);
  reg [(5'h13):(1'h0)] reg59 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar58 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar55 = (1'h0);
  reg [(5'h12):(1'h0)] forvar54 = (1'h0);
  reg [(5'h14):(1'h0)] forvar50 = (1'h0);
  reg [(5'h13):(1'h0)] forvar49 = (1'h0);
  reg [(5'h10):(1'h0)] reg48 = (1'h0);
  assign y = {wire125,
                 wire124,
                 wire123,
                 wire122,
                 wire45,
                 wire43,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg121,
                 reg120,
                 reg119,
                 reg117,
                 reg115,
                 reg109,
                 reg105,
                 reg100,
                 reg98,
                 reg96,
                 reg95,
                 reg93,
                 reg92,
                 reg87,
                 reg85,
                 reg83,
                 reg81,
                 reg80,
                 reg79,
                 reg77,
                 reg75,
                 reg74,
                 reg71,
                 reg70,
                 reg68,
                 reg65,
                 reg63,
                 reg62,
                 reg61,
                 reg57,
                 reg56,
                 reg53,
                 reg52,
                 reg51,
                 reg47,
                 reg46,
                 forvar118,
                 forvar116,
                 reg114,
                 reg113,
                 reg112,
                 reg111,
                 forvar110,
                 forvar108,
                 reg107,
                 reg106,
                 reg104,
                 reg103,
                 forvar102,
                 forvar101,
                 reg99,
                 forvar97,
                 forvar94,
                 reg91,
                 reg90,
                 forvar89,
                 forvar88,
                 forvar86,
                 reg84,
                 reg82,
                 forvar78,
                 reg76,
                 reg73,
                 forvar72,
                 forvar69,
                 reg67,
                 forvar66,
                 forvar64,
                 reg60,
                 reg59,
                 forvar58,
                 forvar55,
                 forvar54,
                 forvar50,
                 forvar49,
                 reg48,
                 (1'h0)};
  assign wire4 = $signed($signed(((8'hb2) ?
                     $signed($unsigned(wire1)) : (|(~&wire2)))));
  assign wire5 = ((($unsigned($unsigned(wire3)) ? (~^(^wire4)) : wire1) ?
                     ((((8'had) <= (8'ha5)) >= wire0[(4'ha):(4'h9)]) ?
                         ((&wire3) ?
                             (wire3 ?
                                 wire4 : wire1) : ((8'hb7) < wire2)) : ($signed(wire3) ?
                             (!wire3) : (~&wire2))) : ($unsigned(wire1) ?
                         (wire2 >= $unsigned((8'ha9))) : (((8'hae) ?
                             wire0 : wire3) | wire4[(2'h2):(2'h2)]))) | wire2);
  assign wire6 = wire4;
  assign wire7 = ($signed({($unsigned(wire1) ?
                         {wire6} : (wire6 && wire2))}) ~^ $signed($signed($unsigned($unsigned(wire3)))));
  assign wire8 = ((wire2[(4'hd):(3'h5)] ?
                     (!wire4[(2'h3):(1'h1)]) : wire7[(2'h2):(2'h2)]) <<< $signed((wire5 ^~ wire0[(4'hb):(3'h7)])));
  module9 #() modinst44 (.wire11(wire2), .clk(clk), .wire13(wire4), .wire10(wire0), .y(wire43), .wire12(wire6));
  assign wire45 = (wire0[(4'h9):(3'h5)] >> $unsigned(wire4[(1'h0):(1'h0)]));
  always
    @(posedge clk) begin
      reg46 <= ((~^(((~(7'h42)) ?
              (-wire7) : ((8'ha8) ?
                  wire5 : (8'ha1))) == $signed($signed(wire4)))) ?
          wire43 : (^~((wire6[(4'h8):(3'h4)] ^~ (wire3 >> wire5)) ?
              wire8[(4'h9):(3'h4)] : $unsigned((wire8 ? wire2 : wire5)))));
      reg47 <= $unsigned((~&(~|wire3)));
      reg48 = ((8'hbb) << $signed($signed((!reg46[(4'hd):(3'h4)]))));
      for (forvar49 = (1'h0); (forvar49 < (1'h1)); forvar49 = (forvar49 + (1'h1)))
        begin
          for (forvar50 = (1'h0); (forvar50 < (1'h1)); forvar50 = (forvar50 + (1'h1)))
            begin
              reg51 <= wire6[(1'h1):(1'h1)];
              reg52 <= $unsigned(({(wire6 ? $unsigned(wire6) : (|wire6))} ?
                  (forvar49 ?
                      wire45 : $signed(((8'ha5) >>> (8'hba)))) : (|reg47)));
              reg53 <= (~{(8'had)});
            end
        end
    end
  always
    @(posedge clk) begin
      for (forvar54 = (1'h0); (forvar54 < (3'h4)); forvar54 = (forvar54 + (1'h1)))
        begin
          for (forvar55 = (1'h0); (forvar55 < (1'h0)); forvar55 = (forvar55 + (1'h1)))
            begin
              reg56 <= (((8'hb0) ?
                  wire43[(4'hf):(2'h2)] : $signed(wire6)) ^~ ($signed(($signed(reg46) >> reg52)) > $signed(({reg51,
                      forvar55} ?
                  (8'h9e) : (forvar54 ? wire6 : (8'h9c))))));
              reg57 <= reg46;
            end
          for (forvar58 = (1'h0); (forvar58 < (2'h2)); forvar58 = (forvar58 + (1'h1)))
            begin
              reg59 = $unsigned((^(~&wire2[(1'h1):(1'h1)])));
              reg60 = ({wire43, wire6} ? $signed(wire2) : reg46);
              reg61 <= (~^wire43);
              reg62 <= (8'hbb);
              reg63 <= ({(^$signed(wire5)),
                      (wire2[(5'h11):(5'h10)] - $signed(reg51))} ?
                  (((((8'ha9) ? wire3 : wire5) << (forvar55 ? reg60 : reg56)) ?
                          wire0[(4'hf):(4'hb)] : forvar54[(3'h7):(3'h5)]) ?
                      ((forvar58 ^~ forvar54[(1'h1):(1'h1)]) != $signed(wire6)) : wire45[(3'h4):(1'h1)]) : (!(wire1 << $signed(reg56))));
            end
          for (forvar64 = (1'h0); (forvar64 < (1'h1)); forvar64 = (forvar64 + (1'h1)))
            begin
              reg65 <= reg56[(1'h0):(1'h0)];
            end
          for (forvar66 = (1'h0); (forvar66 < (1'h1)); forvar66 = (forvar66 + (1'h1)))
            begin
              reg67 = wire43;
              reg68 <= reg67[(1'h0):(1'h0)];
            end
        end
      for (forvar69 = (1'h0); (forvar69 < (1'h0)); forvar69 = (forvar69 + (1'h1)))
        begin
          if (((~&reg46[(3'h6):(3'h5)]) - wire2))
            begin
              reg70 <= {forvar69[(2'h3):(2'h3)]};
            end
          else
            begin
              reg70 <= (^~$unsigned(($unsigned((reg59 ? (7'h44) : wire3)) ?
                  (forvar58 ?
                      (8'h9f) : (reg47 < reg62)) : wire3[(1'h0):(1'h0)])));
              reg71 <= $signed((wire3 ?
                  $unsigned(($unsigned(reg56) | $unsigned(reg59))) : $unsigned($unsigned($signed(reg63)))));
            end
          for (forvar72 = (1'h0); (forvar72 < (1'h0)); forvar72 = (forvar72 + (1'h1)))
            begin
              reg73 = (((-$signed($signed(wire4))) == {(~|(8'h9c))}) * $signed((~^{(8'h9d)})));
              reg74 <= $signed(((~|$unsigned($unsigned(reg62))) ?
                  (reg73 ?
                      (reg68[(4'hc):(4'hc)] ?
                          (^~reg60) : $signed(reg61)) : {$signed((8'ha5)),
                          $signed(wire3)}) : $signed(reg71[(4'hc):(4'ha)])));
              reg75 <= ({((^(&wire45)) ? (+wire8) : (8'hb0))} ?
                  (8'hae) : $unsigned(($unsigned((reg67 ?
                      wire8 : (8'haa))) ^ {$signed(wire7)})));
              reg76 = $unsigned((forvar54 ?
                  (reg65[(4'hb):(4'ha)] <<< reg52[(3'h4):(1'h0)]) : (8'ha4)));
              reg77 <= $signed($unsigned((&$unsigned(forvar64[(4'hc):(2'h3)]))));
            end
          for (forvar78 = (1'h0); (forvar78 < (1'h0)); forvar78 = (forvar78 + (1'h1)))
            begin
              reg79 <= (^~$signed(wire1));
              reg80 <= $signed($unsigned($unsigned(reg57[(3'h5):(3'h5)])));
              reg81 <= ((reg70 ?
                      {$signed((forvar55 - wire6))} : {(~|(^reg47))}) ?
                  wire4[(2'h2):(1'h0)] : (reg68 ?
                      $unsigned(reg63[(4'he):(2'h2)]) : ((-(reg65 ^~ forvar72)) ?
                          ($unsigned(forvar64) || $unsigned(reg59)) : reg52[(1'h0):(1'h0)])));
              reg82 = (wire45[(4'ha):(3'h7)] ~^ ($unsigned((~^(forvar58 ?
                      (8'ha7) : wire7))) ?
                  reg46[(5'h11):(5'h10)] : ((~^$unsigned(reg67)) != $signed($signed(reg75)))));
              reg83 <= reg56;
            end
          reg84 = $signed((+(forvar55 ?
              $signed((7'h40)) : ((reg60 ?
                  reg68 : (8'hbb)) >> $unsigned(reg80)))));
          reg85 <= forvar66[(2'h2):(1'h0)];
        end
    end
  always
    @(posedge clk) begin
      for (forvar86 = (1'h0); (forvar86 < (1'h0)); forvar86 = (forvar86 + (1'h1)))
        begin
          reg87 <= ((wire7[(3'h4):(1'h1)] ?
                  (8'hbc) : ($signed((wire43 | reg70)) >= ($unsigned(wire45) ?
                      (reg57 ? reg85 : reg81) : $unsigned(wire43)))) ?
              wire5[(3'h6):(3'h6)] : $signed(($signed(reg62[(2'h3):(1'h1)]) <= $signed((~reg51)))));
        end
      for (forvar88 = (1'h0); (forvar88 < (3'h4)); forvar88 = (forvar88 + (1'h1)))
        begin
          for (forvar89 = (1'h0); (forvar89 < (1'h1)); forvar89 = (forvar89 + (1'h1)))
            begin
              reg90 = (~|reg81[(3'h5):(1'h1)]);
              reg91 = (~&(7'h40));
              reg92 <= $signed((reg70 >> {(!wire1), reg46}));
              reg93 <= {(($unsigned((reg90 >= reg90)) * $unsigned(reg46)) ?
                      reg80 : (~{(reg83 ? forvar86 : reg62), {reg92, reg57}}))};
            end
          for (forvar94 = (1'h0); (forvar94 < (3'h4)); forvar94 = (forvar94 + (1'h1)))
            begin
              reg95 <= (!wire7);
              reg96 <= (wire7 * (^($unsigned(forvar88[(2'h3):(2'h3)]) || {(reg93 ?
                      (8'hb3) : wire4)})));
            end
          for (forvar97 = (1'h0); (forvar97 < (1'h0)); forvar97 = (forvar97 + (1'h1)))
            begin
              reg98 <= {($unsigned({$unsigned(forvar89),
                      reg68[(3'h6):(3'h6)]}) | reg96),
                  ((reg90 ^~ $signed($signed(wire45))) ?
                      {$unsigned((&reg96)),
                          $unsigned($unsigned(reg96))} : forvar97)};
              reg99 = $unsigned($unsigned({$signed((wire45 ? reg63 : reg75)),
                  (reg74[(1'h1):(1'h1)] ?
                      (reg68 ? reg71 : wire2) : $unsigned(wire45))}));
            end
        end
      reg100 <= reg91[(3'h5):(1'h0)];
      for (forvar101 = (1'h0); (forvar101 < (1'h1)); forvar101 = (forvar101 + (1'h1)))
        begin
          for (forvar102 = (1'h0); (forvar102 < (2'h3)); forvar102 = (forvar102 + (1'h1)))
            begin
              reg103 = $unsigned((&($unsigned($unsigned(forvar101)) ?
                  wire6[(2'h2):(1'h1)] : reg87)));
              reg104 = (~$unsigned(reg80[(1'h0):(1'h0)]));
              reg105 <= (forvar94[(1'h0):(1'h0)] ?
                  $unsigned($unsigned(wire45[(4'hc):(4'h8)])) : $signed(reg68));
              reg106 = {wire43[(4'hb):(4'hb)],
                  {(~|{$signed(forvar97), (forvar97 >> reg46)})}};
              reg107 = ($unsigned(reg98[(1'h0):(1'h0)]) != $unsigned($unsigned($signed((~reg85)))));
            end
          for (forvar108 = (1'h0); (forvar108 < (2'h3)); forvar108 = (forvar108 + (1'h1)))
            begin
              reg109 <= reg93[(1'h0):(1'h0)];
            end
          for (forvar110 = (1'h0); (forvar110 < (1'h1)); forvar110 = (forvar110 + (1'h1)))
            begin
              reg111 = (|((&(&reg61)) ?
                  (((reg98 < reg68) | (reg100 ^~ reg104)) ?
                      (+(8'had)) : $signed($unsigned((8'hae)))) : $signed(($signed(reg53) + (forvar101 - (8'h9e))))));
              reg112 = wire6;
              reg113 = $signed($signed(wire43));
              reg114 = (($unsigned($signed({reg81,
                  reg85})) >>> (reg70[(3'h4):(2'h3)] ?
                  forvar94[(4'ha):(4'ha)] : ((8'hb9) ?
                      (|reg98) : $unsigned((8'hac))))) >> {$unsigned((((8'ha6) + forvar108) ?
                      {forvar108} : (-(8'ha3)))),
                  reg105[(3'h7):(1'h0)]});
              reg115 <= $signed((^$unsigned((!(+reg106)))));
            end
          for (forvar116 = (1'h0); (forvar116 < (2'h3)); forvar116 = (forvar116 + (1'h1)))
            begin
              reg117 <= {($signed((~&((7'h40) + (8'hb5)))) ?
                      ((~&(reg52 ? wire8 : wire3)) ?
                          {$unsigned(reg61),
                              reg112} : (8'hb8)) : wire43[(4'hb):(4'h9)]),
                  ((wire5 ?
                      $signed((wire0 * reg103)) : reg71[(3'h6):(2'h3)]) > $signed(reg65[(4'hd):(3'h4)]))};
            end
          for (forvar118 = (1'h0); (forvar118 < (3'h4)); forvar118 = (forvar118 + (1'h1)))
            begin
              reg119 <= forvar89[(2'h2):(2'h2)];
              reg120 <= (~&$signed((|forvar97[(3'h5):(3'h5)])));
              reg121 <= $signed(({{reg81[(2'h3):(2'h3)]}} > reg99[(3'h5):(2'h3)]));
            end
        end
    end
  assign wire122 = reg121[(3'h7):(2'h2)];
  assign wire123 = (reg77 >= wire0);
  assign wire124 = $signed($unsigned($signed($unsigned({(8'hb2), reg93}))));
  assign wire125 = $signed((reg77 & reg70[(1'h0):(1'h0)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module9
#(parameter param42 = {((+((&(8'ha5)) * ((8'hb1) == (8'ha6)))) ? {{((8'hb3) * (7'h40))}} : (((~|(8'ha2)) >>> ((8'hb6) != (8'hb6))) ? (~(!(8'hb2))) : {((8'hb6) ? (8'hac) : (8'hb0))}))})
(y, clk, wire13, wire12, wire11, wire10);
  output wire [(32'h15e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h11):(1'h0)] wire13;
  input wire [(3'h4):(1'h0)] wire12;
  input wire [(2'h2):(1'h0)] wire11;
  input wire signed [(5'h13):(1'h0)] wire10;
  wire [(5'h13):(1'h0)] wire41;
  wire signed [(2'h3):(1'h0)] wire40;
  wire [(5'h11):(1'h0)] wire15;
  wire signed [(5'h14):(1'h0)] wire14;
  reg [(3'h6):(1'h0)] reg39 = (1'h0);
  reg [(4'h8):(1'h0)] reg38 = (1'h0);
  reg [(4'hd):(1'h0)] reg37 = (1'h0);
  reg [(4'ha):(1'h0)] reg34 = (1'h0);
  reg [(4'ha):(1'h0)] reg31 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg29 = (1'h0);
  reg [(3'h7):(1'h0)] reg28 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg25 = (1'h0);
  reg [(5'h13):(1'h0)] reg22 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg19 = (1'h0);
  reg [(5'h10):(1'h0)] reg18 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar36 = (1'h0);
  reg [(4'hd):(1'h0)] reg35 = (1'h0);
  reg [(2'h2):(1'h0)] reg33 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg32 = (1'h0);
  reg [(4'he):(1'h0)] forvar30 = (1'h0);
  reg [(3'h7):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar26 = (1'h0);
  reg [(5'h15):(1'h0)] reg26 = (1'h0);
  reg [(5'h15):(1'h0)] reg24 = (1'h0);
  reg [(5'h10):(1'h0)] forvar23 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar21 = (1'h0);
  reg [(4'h9):(1'h0)] reg20 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar17 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar16 = (1'h0);
  assign y = {wire41,
                 wire40,
                 wire15,
                 wire14,
                 reg39,
                 reg38,
                 reg37,
                 reg34,
                 reg31,
                 reg29,
                 reg28,
                 reg25,
                 reg22,
                 reg19,
                 reg18,
                 forvar36,
                 reg35,
                 reg33,
                 reg32,
                 forvar30,
                 reg27,
                 forvar26,
                 reg26,
                 reg24,
                 forvar23,
                 forvar21,
                 reg20,
                 forvar17,
                 forvar16,
                 (1'h0)};
  assign wire14 = wire13;
  assign wire15 = $signed(wire12);
  always
    @(posedge clk) begin
      for (forvar16 = (1'h0); (forvar16 < (1'h1)); forvar16 = (forvar16 + (1'h1)))
        begin
          for (forvar17 = (1'h0); (forvar17 < (1'h0)); forvar17 = (forvar17 + (1'h1)))
            begin
              reg18 <= {(((8'hb4) ?
                          {(8'hbe), $unsigned(wire12)} : ($unsigned(wire10) ?
                              (+wire12) : (forvar17 ? (8'hb3) : (8'ha5)))) ?
                      ((~|(wire10 ? wire13 : wire12)) ?
                          $signed((^wire10)) : ({wire14, wire12} ?
                              wire10[(3'h5):(3'h5)] : wire15)) : forvar17),
                  (^~$unsigned((forvar17 * ((8'ha3) * wire10))))};
              reg19 <= ((wire12[(2'h3):(1'h1)] + ($signed((~|(8'ha2))) ?
                  {{reg18, wire15}} : {forvar17})) & $unsigned((({forvar17,
                          forvar16} ?
                      $signed(forvar17) : wire11) ?
                  wire10 : ((forvar17 ? (8'hac) : wire14) ?
                      (~|wire14) : $signed(wire12)))));
            end
          reg20 = {(8'hae), ((^~forvar17) << reg19)};
          for (forvar21 = (1'h0); (forvar21 < (3'h4)); forvar21 = (forvar21 + (1'h1)))
            begin
              reg22 <= forvar16;
            end
          for (forvar23 = (1'h0); (forvar23 < (2'h3)); forvar23 = (forvar23 + (1'h1)))
            begin
              reg24 = {$signed($unsigned(reg18))};
            end
        end
      reg25 <= (~|$signed(($signed($signed(wire13)) ?
          $signed(forvar17[(1'h1):(1'h0)]) : (+$unsigned(forvar17)))));
      if ($signed(reg25))
        begin
          reg26 = (~(wire13 ? (8'hb4) : wire10));
        end
      else
        begin
          for (forvar26 = (1'h0); (forvar26 < (3'h4)); forvar26 = (forvar26 + (1'h1)))
            begin
              reg27 = $unsigned($signed($signed(wire13)));
              reg28 <= wire14[(2'h2):(2'h2)];
              reg29 <= $signed($unsigned(((^reg19) && $unsigned(((8'hba) >>> (8'hb1))))));
            end
          for (forvar30 = (1'h0); (forvar30 < (3'h4)); forvar30 = (forvar30 + (1'h1)))
            begin
              reg31 <= (~&(($unsigned(((8'hb3) ? (8'hb0) : reg19)) - (8'hb6)) ?
                  $signed(((|reg24) >>> (7'h41))) : (8'hbe)));
              reg32 = {forvar16, (&(|reg22[(4'ha):(4'ha)]))};
              reg33 = reg29[(3'h7):(3'h5)];
              reg34 <= wire11;
              reg35 = reg28;
            end
          for (forvar36 = (1'h0); (forvar36 < (1'h0)); forvar36 = (forvar36 + (1'h1)))
            begin
              reg37 <= reg25;
              reg38 <= $signed($unsigned({(reg31[(4'h9):(1'h0)] ?
                      {forvar30, forvar16} : (+wire13))}));
              reg39 <= {$unsigned($signed(reg18[(3'h7):(3'h4)]))};
            end
        end
    end
  assign wire40 = {((((&reg39) << (reg29 >>> reg37)) ?
                          ((-reg31) <<< $unsigned(reg31)) : {(^~reg38)}) + wire12[(2'h3):(1'h0)]),
                      reg29[(3'h4):(3'h4)]};
  assign wire41 = ({(~&wire40[(2'h2):(1'h0)])} <<< reg19[(3'h6):(3'h6)]);
endmodule