(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param60 = (|((~^{(~&(8'h9d))}) ^ ({{(7'h41), (8'hb8)}} || {((8'haa) & (8'hae))}))), 
parameter param61 = param60)
(y, clk, wire0, wire1, wire2, wire3);
  output wire [(32'h14b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h14):(1'h0)] wire0;
  input wire signed [(5'h15):(1'h0)] wire1;
  input wire signed [(2'h3):(1'h0)] wire2;
  input wire [(4'he):(1'h0)] wire3;
  wire [(4'hc):(1'h0)] wire4;
  wire [(4'hd):(1'h0)] wire5;
  wire signed [(3'h6):(1'h0)] wire6;
  wire signed [(4'h9):(1'h0)] wire7;
  wire signed [(4'hd):(1'h0)] wire37;
  reg [(3'h4):(1'h0)] reg59 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg58 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg56 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg53 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg48 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg47 = (1'h0);
  reg [(3'h5):(1'h0)] reg45 = (1'h0);
  reg [(5'h12):(1'h0)] reg44 = (1'h0);
  reg [(5'h15):(1'h0)] reg43 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg42 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg41 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg40 = (1'h0);
  reg [(5'h13):(1'h0)] reg57 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg55 = (1'h0);
  reg [(4'hd):(1'h0)] forvar54 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg52 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg51 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg50 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar49 = (1'h0);
  reg [(4'hb):(1'h0)] reg46 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg39 = (1'h0);
  assign y = {wire4,
                 wire5,
                 wire6,
                 wire7,
                 wire37,
                 reg59,
                 reg58,
                 reg56,
                 reg53,
                 reg48,
                 reg47,
                 reg45,
                 reg44,
                 reg43,
                 reg42,
                 reg41,
                 reg40,
                 reg57,
                 reg55,
                 forvar54,
                 reg52,
                 reg51,
                 reg50,
                 forvar49,
                 reg46,
                 reg39,
                 (1'h0)};
  assign wire4 = (7'h41);
  assign wire5 = $unsigned((!{$signed((^wire0)), (wire2 ? (8'hbc) : "6a2i")}));
  assign wire6 = ((^$signed(wire2)) ^ ({((wire3 * wire5) ?
                         (!(8'hac)) : wire3[(2'h3):(1'h1)])} || {(~^wire0[(5'h10):(3'h7)]),
                     $unsigned((wire5 != wire4))}));
  assign wire7 = $signed((wire4 ~^ ($unsigned(wire4) ?
                     "yB5r" : (wire5 << (wire4 ? wire2 : wire1)))));
  module8 #() modinst38 (wire37, clk, wire3, wire4, wire6, wire5, wire1);
  always
    @(posedge clk) begin
      reg39 = (-wire5[(1'h0):(1'h0)]);
      reg40 <= $signed((wire5 <<< $signed({(~^wire1)})));
      reg41 <= {wire3[(4'h9):(3'h7)],
          (-(wire0 ? {(wire6 ^~ wire0)} : "WkMu6A"))};
      reg42 <= (^wire1);
      reg43 <= "";
    end
  always
    @(posedge clk) begin
      if (wire1)
        begin
          reg44 <= (reg40 != $unsigned(("W2T54" | "BPebKg")));
          reg45 <= (~&($signed(($signed(wire1) ?
                  (wire37 * reg41) : $unsigned(wire2))) ?
              ($unsigned({wire37, reg42}) ?
                  {"k20DS",
                      $signed(reg43)} : wire0) : (~|wire0[(3'h6):(3'h4)])));
        end
      else
        begin
          reg46 = $signed((wire3[(2'h2):(2'h2)] > "gJn"));
          reg47 <= "Zq5LBICY6h";
          reg48 <= wire5;
          for (forvar49 = (1'h0); (forvar49 < (2'h2)); forvar49 = (forvar49 + (1'h1)))
            begin
              reg50 = $signed($signed((($unsigned((8'ha3)) > (wire1 ?
                  reg44 : (8'h9d))) ^ wire4)));
            end
          reg51 = $unsigned(reg44);
        end
      reg52 = ((reg40 | $unsigned(reg44[(4'hd):(2'h2)])) || $unsigned("skIds80XGyZX0zvXXxdI"));
      reg53 <= wire2[(1'h0):(1'h0)];
      for (forvar54 = (1'h0); (forvar54 < (3'h4)); forvar54 = (forvar54 + (1'h1)))
        begin
          if ("eOaF6OWCsSZ3YOwJr63")
            begin
              reg55 = $unsigned(reg41);
              reg56 <= (~$signed($unsigned(reg48)));
              reg57 = reg44;
              reg58 <= {forvar49[(3'h7):(3'h6)]};
              reg59 <= (8'hb1);
            end
          else
            begin
              reg56 <= {reg41};
              reg58 <= reg52;
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module8  (y, clk, wire13, wire12, wire11, wire10, wire9);
  output wire [(32'hea):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'he):(1'h0)] wire13;
  input wire signed [(4'hc):(1'h0)] wire12;
  input wire signed [(3'h6):(1'h0)] wire11;
  input wire signed [(4'h8):(1'h0)] wire10;
  input wire signed [(5'h15):(1'h0)] wire9;
  wire [(4'h8):(1'h0)] wire36;
  wire signed [(4'he):(1'h0)] wire35;
  wire signed [(3'h7):(1'h0)] wire34;
  reg signed [(3'h4):(1'h0)] reg33 = (1'h0);
  reg [(3'h4):(1'h0)] reg32 = (1'h0);
  reg [(4'hf):(1'h0)] reg31 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg30 = (1'h0);
  reg [(4'h9):(1'h0)] reg29 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg27 = (1'h0);
  reg [(5'h15):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg23 = (1'h0);
  reg [(4'h9):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg21 = (1'h0);
  reg [(4'he):(1'h0)] reg20 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg19 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg18 = (1'h0);
  reg [(4'hb):(1'h0)] reg17 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg15 = (1'h0);
  reg [(2'h2):(1'h0)] reg28 = (1'h0);
  reg [(4'hf):(1'h0)] reg26 = (1'h0);
  reg [(5'h11):(1'h0)] reg24 = (1'h0);
  reg [(4'he):(1'h0)] reg16 = (1'h0);
  reg [(2'h3):(1'h0)] reg14 = (1'h0);
  assign y = {wire36,
                 wire35,
                 wire34,
                 reg33,
                 reg32,
                 reg31,
                 reg30,
                 reg29,
                 reg27,
                 reg25,
                 reg23,
                 reg22,
                 reg21,
                 reg20,
                 reg19,
                 reg18,
                 reg17,
                 reg15,
                 reg28,
                 reg26,
                 reg24,
                 reg16,
                 reg14,
                 (1'h0)};
  always
    @(posedge clk) begin
      reg14 = (wire9 && wire10);
      reg15 <= $signed("pnwRGYMqaXfWn8");
      if ((-(("afFqRkWC0uwJ8SIb" ?
              $unsigned($unsigned(reg14)) : (^$signed((8'hba)))) ?
          $unsigned(({wire11, wire11} | reg14[(1'h0):(1'h0)])) : "OxZvNXV")))
        begin
          reg16 = wire10;
          reg17 <= ($signed((({reg14} || wire13[(4'hc):(2'h3)]) ?
              {$unsigned(wire12)} : wire9)) + $unsigned(reg14[(1'h0):(1'h0)]));
          if (({"R0kCGdY9iJKOlq3n2", $signed(($unsigned(wire12) && "q"))} ?
              $unsigned(("XBv4w" ?
                  $signed((reg14 >>> wire11)) : ($signed(wire13) < ((8'h9c) ?
                      (8'hbc) : wire13)))) : (8'hb1)))
            begin
              reg18 <= "L9ei";
              reg19 <= "SVeIQzCUG9JPxOY";
            end
          else
            begin
              reg18 <= ($signed("0miYLC80epSzUEf4i4X") ~^ wire13);
              reg19 <= (wire10[(3'h6):(3'h4)] ?
                  $signed(({(~|wire13),
                      "VltABqUOf9A"} >>> "3TlD2eGbRH")) : $unsigned(""));
              reg20 <= wire13[(4'hb):(3'h6)];
              reg21 <= ((~|reg19) ? (^wire9) : ((8'hbb) ? wire9 : (7'h44)));
              reg22 <= $signed(($unsigned((7'h41)) ?
                  reg18[(1'h1):(1'h0)] : (8'hb6)));
            end
          reg23 <= "Br";
        end
      else
        begin
          if (wire12)
            begin
              reg17 <= ($signed($unsigned((reg18[(1'h1):(1'h0)] ?
                      reg14 : reg14[(1'h0):(1'h0)]))) ?
                  {(reg22[(1'h1):(1'h0)] ?
                          reg18[(2'h2):(1'h0)] : $unsigned($signed(wire11)))} : $unsigned(reg21[(1'h0):(1'h0)]));
              reg18 <= (reg20 ?
                  {wire13, wire9[(1'h0):(1'h0)]} : (((+"i1XocoCdrFcaaz") ?
                          reg18[(2'h2):(1'h0)] : reg16) ?
                      reg21 : (($unsigned(wire9) ?
                          (|(8'hbe)) : {reg15}) << $unsigned($unsigned(reg22)))));
              reg19 <= "wBNLtzUATINNWNNc6I3y";
              reg24 = reg17;
              reg25 <= $signed($signed(reg24[(1'h0):(1'h0)]));
            end
          else
            begin
              reg17 <= $unsigned(((~&($unsigned(reg22) ~^ ((8'hb4) ~^ (8'ha6)))) ?
                  ({reg20} * ((8'h9e) ?
                      ((8'ha2) || wire10) : (+wire9))) : wire11[(3'h6):(2'h2)]));
              reg18 <= $signed($signed(reg24[(2'h3):(1'h0)]));
            end
          if ((reg25[(3'h6):(1'h1)] ?
              $unsigned((~^$unsigned($unsigned(reg24)))) : reg14[(2'h2):(2'h2)]))
            begin
              reg26 = (((((wire11 ? wire11 : reg22) ?
                      $unsigned((8'h9f)) : $unsigned(reg20)) <<< ("lssF0vpGgrKmq6U" ^~ $signed(wire10))) >>> (~&reg16)) ?
                  $unsigned(((~(reg19 | reg19)) & $unsigned("SQEv"))) : {{(~"")}});
              reg27 <= (($signed("dXlJVlxKFOW1z1qpge") ?
                  "nrSyy9PsOG588d" : {$unsigned($unsigned(reg17)),
                      "kkT2gugbMBYcYv3"}) >>> reg19);
              reg28 = ($unsigned({(^(8'hae))}) ?
                  $signed("JfwuTP") : wire11[(3'h5):(3'h4)]);
            end
          else
            begin
              reg27 <= (!"");
              reg29 <= wire9[(3'h7):(1'h0)];
              reg30 <= (reg24 ?
                  reg28[(1'h0):(1'h0)] : $unsigned($unsigned(($unsigned(reg26) || $unsigned((8'ha6))))));
              reg31 <= reg14[(1'h0):(1'h0)];
            end
        end
      reg32 <= $signed(("gM2" ~^ "SVTSvoQ5aMCu"));
      reg33 <= (~&$unsigned(((-((8'hbc) ?
          wire10 : reg25)) || $signed($signed(reg32)))));
    end
  assign wire34 = ({$signed(wire12),
                      reg23[(1'h0):(1'h0)]} - ((reg31[(2'h2):(1'h1)] ?
                          reg27[(3'h4):(3'h4)] : $signed((reg18 ?
                              (8'haf) : reg21))) ?
                      reg32 : "CgW23e"));
  assign wire35 = ($signed((reg21 & reg33[(3'h4):(3'h4)])) ?
                      (|(((wire11 ?
                          wire34 : wire34) | $signed((7'h44))) >= "HyS87cLsXcxwrhPC")) : $signed(("LQu6R57F7tbLM" || ({wire10,
                          reg31} < reg22[(3'h5):(2'h3)]))));
  assign wire36 = ("8ZS4ES" ?
                      reg30[(3'h5):(1'h0)] : (reg25[(3'h4):(1'h1)] * ($signed((reg30 == reg30)) ~^ (~|(reg25 ^ reg23)))));
endmodule