(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param33 = (!((((^~(8'hbb)) | (!(8'hb7))) ? {(|(8'hae)), (|(8'ha0))} : (~((8'hb2) != (7'h42)))) ? ((|((8'ha6) ? (8'haf) : (8'haf))) ? (((8'hbd) ? (7'h42) : (8'ha5)) ? (~(8'ha0)) : ((8'h9c) ? (8'ha0) : (8'h9d))) : (~&{(8'ha9), (8'hb4)})) : (({(8'haa), (8'hb1)} ? ((8'hb6) ? (7'h44) : (8'ha8)) : (!(8'ha9))) ? (8'ha8) : ((8'ha1) ? ((8'hbf) ? (8'hb2) : (8'hb1)) : {(8'hbe), (8'hbc)})))), 
parameter param34 = (-param33))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h174):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire3;
  input wire [(5'h14):(1'h0)] wire2;
  input wire signed [(4'he):(1'h0)] wire1;
  input wire [(5'h11):(1'h0)] wire0;
  wire [(5'h10):(1'h0)] wire32;
  wire signed [(4'h8):(1'h0)] wire10;
  wire signed [(5'h13):(1'h0)] wire9;
  wire [(4'he):(1'h0)] wire8;
  wire signed [(5'h12):(1'h0)] wire7;
  wire [(4'h8):(1'h0)] wire6;
  wire [(4'h9):(1'h0)] wire5;
  wire signed [(4'h8):(1'h0)] wire4;
  reg signed [(3'h6):(1'h0)] reg31 = (1'h0);
  reg [(4'h8):(1'h0)] reg30 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg29 = (1'h0);
  reg [(3'h4):(1'h0)] reg27 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg26 = (1'h0);
  reg [(4'h8):(1'h0)] reg24 = (1'h0);
  reg [(5'h10):(1'h0)] reg21 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg19 = (1'h0);
  reg [(4'h8):(1'h0)] reg18 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg16 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg14 = (1'h0);
  reg [(4'he):(1'h0)] reg11 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg12 = (1'h0);
  reg [(5'h11):(1'h0)] reg28 = (1'h0);
  reg signed [(3'h6):(1'h0)] forvar23 = (1'h0);
  reg [(3'h4):(1'h0)] reg20 = (1'h0);
  reg [(3'h6):(1'h0)] reg25 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg23 = (1'h0);
  reg [(5'h13):(1'h0)] reg22 = (1'h0);
  reg [(4'ha):(1'h0)] forvar20 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg17 = (1'h0);
  reg [(3'h7):(1'h0)] reg15 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg13 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar11 = (1'h0);
  assign y = {wire32,
                 wire10,
                 wire9,
                 wire8,
                 wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg31,
                 reg30,
                 reg29,
                 reg27,
                 reg26,
                 reg24,
                 reg21,
                 reg19,
                 reg18,
                 reg16,
                 reg14,
                 reg11,
                 reg12,
                 reg28,
                 forvar23,
                 reg20,
                 reg25,
                 reg23,
                 reg22,
                 forvar20,
                 reg17,
                 reg15,
                 reg13,
                 forvar11,
                 (1'h0)};
  assign wire4 = "gKJc4e1";
  assign wire5 = "wfPnoAf";
  assign wire6 = wire5[(1'h0):(1'h0)];
  assign wire7 = (8'hb0);
  assign wire8 = $unsigned(($signed((!((8'hbc) ?
                     (8'had) : wire6))) == {$unsigned($unsigned(wire1)),
                     $unsigned(((8'ha1) ? (8'hb2) : wire7))}));
  assign wire9 = $signed((8'had));
  assign wire10 = wire2;
  always
    @(posedge clk) begin
      if ((8'hb8))
        begin
          for (forvar11 = (1'h0); (forvar11 < (1'h1)); forvar11 = (forvar11 + (1'h1)))
            begin
              reg12 <= ({wire3,
                  $unsigned(wire3[(3'h4):(2'h2)])} ^~ (^"FW18c8p1h"));
            end
        end
      else
        begin
          reg11 <= wire4;
          reg13 = "WDml4qoREth7bHl";
          if ((({"hRryhiO9Fwsm0v", wire3[(2'h3):(1'h1)]} ?
              wire7[(4'h8):(3'h5)] : "tfWk") * ((+wire5) ?
              $signed(wire6) : (&wire7))))
            begin
              reg14 <= ((wire9[(4'h9):(3'h4)] >>> $signed({$unsigned(wire3),
                      (wire0 <= wire10)})) ?
                  {wire4, "hGNZ3lfoYul"} : ((~|wire5[(3'h4):(2'h3)]) ?
                      $unsigned(((wire3 > wire4) << $unsigned(wire8))) : $signed((wire5 ~^ ((8'ha5) << wire9)))));
              reg15 = $unsigned((8'hbe));
              reg16 <= "";
              reg17 = wire4[(2'h3):(2'h2)];
            end
          else
            begin
              reg14 <= wire5[(4'h8):(1'h0)];
              reg16 <= wire4[(3'h5):(3'h5)];
              reg18 <= (^~wire2);
              reg19 <= $signed((-$signed(({wire4, reg15} ^ $signed(reg16)))));
            end
        end
      if (($unsigned(($unsigned($signed(wire4)) >> (reg12[(1'h0):(1'h0)] || (~|reg13)))) ?
          wire4[(3'h5):(2'h2)] : $signed(("oV" ?
              (reg18[(2'h2):(2'h2)] ?
                  (~^wire4) : (^~wire8)) : {reg18[(1'h1):(1'h1)],
                  (wire4 ? wire5 : reg12)}))))
        begin
          for (forvar20 = (1'h0); (forvar20 < (3'h4)); forvar20 = (forvar20 + (1'h1)))
            begin
              reg21 <= "iATpv";
              reg22 = reg15;
              reg23 = wire4;
            end
          reg24 <= $signed({$unsigned(reg12[(1'h0):(1'h0)]), reg18});
          reg25 = reg13[(1'h1):(1'h0)];
        end
      else
        begin
          reg20 = $unsigned($signed(($unsigned(((8'hbd) > reg11)) ?
              $unsigned((reg23 * (8'hac))) : $signed($unsigned((8'hb9))))));
          reg22 = ({$signed($unsigned({reg20}))} && (^~(8'ha0)));
          for (forvar23 = (1'h0); (forvar23 < (1'h0)); forvar23 = (forvar23 + (1'h1)))
            begin
              reg24 <= {("" ?
                      $signed("oAsBMVa49k4D8hTd") : (forvar23[(2'h2):(1'h1)] - $unsigned((^forvar20))))};
              reg26 <= $signed(reg15[(3'h7):(3'h4)]);
              reg27 <= ($signed({$signed($signed(wire6)), reg17}) ?
                  ($unsigned({(^wire2)}) ?
                      $signed(wire7) : ("l" ?
                          $signed(((8'haa) >> reg26)) : (~(wire10 ?
                              reg13 : reg14)))) : {$signed((reg18[(1'h0):(1'h0)] ^ wire4[(4'h8):(3'h6)]))});
            end
          if ({(($unsigned($signed(wire5)) ?
                  $unsigned(reg12) : reg11[(1'h0):(1'h0)]) < "")})
            begin
              reg28 = reg26;
            end
          else
            begin
              reg29 <= ((~&{(&(reg26 <= wire8))}) <= "KgJbLusYl");
              reg30 <= (($unsigned("ygdNwxK71GOErYcS") == $unsigned((^wire3))) * ($unsigned("AsUqUU6Yl0sornIT") - ($signed((wire9 ?
                      reg18 : reg16)) ?
                  reg18[(3'h7):(1'h1)] : $signed($signed(wire7)))));
            end
        end
      reg31 <= (~&(~|$signed(wire0)));
    end
  assign wire32 = ($unsigned(($unsigned($unsigned(wire0)) + ({reg18} ?
                          (^wire1) : "lbUo"))) ?
                      wire9 : {"bqgvgvv", (^~(+""))});
endmodule