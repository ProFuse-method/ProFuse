(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param30 = (^~{({((8'ha1) > (8'hac)), (-(8'h9d))} ? {(~^(8'ha2))} : {{(8'hb7), (8'hba)}, (|(8'ha4))})}))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h7e):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'he):(1'h0)] wire3;
  input wire signed [(4'hc):(1'h0)] wire2;
  input wire [(5'h10):(1'h0)] wire1;
  input wire signed [(5'h10):(1'h0)] wire0;
  wire [(3'h4):(1'h0)] wire29;
  wire [(4'hb):(1'h0)] wire28;
  wire signed [(4'hc):(1'h0)] wire27;
  wire [(4'hc):(1'h0)] wire26;
  wire signed [(5'h14):(1'h0)] wire25;
  wire [(3'h4):(1'h0)] wire24;
  wire signed [(5'h12):(1'h0)] wire22;
  wire [(5'h13):(1'h0)] wire20;
  wire [(5'h15):(1'h0)] wire4;
  reg signed [(3'h4):(1'h0)] reg23 = (1'h0);
  assign y = {wire29,
                 wire28,
                 wire27,
                 wire26,
                 wire25,
                 wire24,
                 wire22,
                 wire20,
                 wire4,
                 reg23,
                 (1'h0)};
  assign wire4 = ((!(~&$signed($unsigned(wire3)))) ?
                     wire0 : (wire2 && (8'hba)));
  module5 #() modinst21 (.wire9(wire2), .y(wire20), .clk(clk), .wire8(wire1), .wire7(wire0), .wire6(wire3));
  assign wire22 = "V9WIWeGQBZ42Xm";
  always
    @(posedge clk) begin
      reg23 <= (($signed($signed((wire3 ? wire3 : wire0))) ?
              $unsigned(wire4) : ((~|{wire0}) ?
                  $unsigned($unsigned(wire2)) : (~^"Qc2LhZ"))) ?
          $unsigned((~^"38")) : $unsigned(wire1[(3'h5):(2'h3)]));
    end
  assign wire24 = (~&(^~$signed((wire0 ? {wire22} : (|wire22)))));
  assign wire25 = (wire1 == wire20);
  assign wire26 = ("OTJ" <<< "kOk2tL");
  assign wire27 = $unsigned(wire1[(3'h7):(2'h3)]);
  assign wire28 = (-wire3);
  assign wire29 = ((~|(-(7'h44))) > "yn");
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module5
#(parameter param19 = (&{((~&((8'hb9) < (8'ha8))) | {(-(8'hbf))})}))
(y, clk, wire9, wire8, wire7, wire6);
  output wire [(32'h7c):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(2'h2):(1'h0)] wire9;
  input wire [(5'h10):(1'h0)] wire8;
  input wire [(5'h10):(1'h0)] wire7;
  input wire [(3'h5):(1'h0)] wire6;
  wire [(5'h14):(1'h0)] wire14;
  wire [(5'h11):(1'h0)] wire13;
  wire signed [(3'h7):(1'h0)] wire12;
  wire signed [(5'h10):(1'h0)] wire11;
  wire signed [(4'h8):(1'h0)] wire10;
  reg signed [(5'h15):(1'h0)] reg18 = (1'h0);
  reg [(5'h10):(1'h0)] reg16 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar17 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg15 = (1'h0);
  assign y = {wire14,
                 wire13,
                 wire12,
                 wire11,
                 wire10,
                 reg18,
                 reg16,
                 forvar17,
                 reg15,
                 (1'h0)};
  assign wire10 = (($unsigned(wire7[(2'h3):(2'h3)]) ?
                      ($unsigned({wire9, wire6}) ^~ wire7) : {"XP",
                          {$signed(wire6)}}) > wire9);
  assign wire11 = ((|("" ?
                          (wire7[(2'h3):(1'h1)] > $signed(wire7)) : wire8[(4'hb):(4'hb)])) ?
                      $unsigned(wire6[(2'h3):(1'h1)]) : wire9);
  assign wire12 = $signed(("Fuvp" >= ("qcx" & $unsigned($unsigned(wire6)))));
  assign wire13 = $unsigned(wire12[(1'h1):(1'h1)]);
  assign wire14 = "tyuINAf";
  always
    @(posedge clk) begin
      if ($signed((wire10 ^ (!"6zDSq5"))))
        begin
          reg15 = (wire12 << wire12);
        end
      else
        begin
          reg16 <= $unsigned(wire7[(3'h6):(2'h3)]);
        end
      for (forvar17 = (1'h0); (forvar17 < (2'h3)); forvar17 = (forvar17 + (1'h1)))
        begin
          reg18 <= wire12[(1'h0):(1'h0)];
        end
    end
endmodule