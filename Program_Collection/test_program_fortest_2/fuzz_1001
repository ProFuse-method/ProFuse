(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param374 = {(((((8'ha5) ~^ (8'haf)) != ((8'hb2) ? (8'hb3) : (8'ha2))) && (((7'h40) ? (8'hba) : (7'h44)) ? {(8'hb9), (8'hb3)} : ((7'h42) <= (8'hbe)))) || ((((8'hab) >= (8'haa)) && ((7'h44) ? (8'ha9) : (8'haf))) >> (|{(8'hb6), (8'hb6)}))), ((~(((7'h44) >>> (7'h43)) || (^~(8'hbd)))) ? (|((+(8'hb7)) < ((8'ha6) <<< (8'hba)))) : (~|(8'hb1)))})
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'h340):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hd):(1'h0)] wire3;
  input wire signed [(4'h8):(1'h0)] wire2;
  input wire [(5'h15):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire0;
  wire signed [(4'he):(1'h0)] wire366;
  wire [(2'h3):(1'h0)] wire75;
  wire signed [(3'h7):(1'h0)] wire74;
  wire signed [(5'h10):(1'h0)] wire73;
  wire [(2'h2):(1'h0)] wire72;
  wire [(2'h2):(1'h0)] wire71;
  wire signed [(3'h7):(1'h0)] wire70;
  wire [(5'h11):(1'h0)] wire368;
  wire signed [(4'h9):(1'h0)] wire369;
  wire signed [(4'ha):(1'h0)] wire371;
  wire [(5'h11):(1'h0)] wire372;
  reg signed [(5'h13):(1'h0)] reg5 = (1'h0);
  reg [(3'h6):(1'h0)] reg7 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg8 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg9 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg10 = (1'h0);
  reg [(2'h2):(1'h0)] reg11 = (1'h0);
  reg [(4'ha):(1'h0)] reg12 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg13 = (1'h0);
  reg [(3'h5):(1'h0)] reg16 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg18 = (1'h0);
  reg [(4'hb):(1'h0)] reg19 = (1'h0);
  reg [(5'h12):(1'h0)] reg20 = (1'h0);
  reg [(4'hf):(1'h0)] reg22 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg24 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg25 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg26 = (1'h0);
  reg [(4'hf):(1'h0)] reg31 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg32 = (1'h0);
  reg [(3'h6):(1'h0)] reg33 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg38 = (1'h0);
  reg [(5'h13):(1'h0)] reg40 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg41 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg43 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg47 = (1'h0);
  reg [(5'h11):(1'h0)] reg52 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg53 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg56 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg58 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg59 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg61 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg62 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg63 = (1'h0);
  reg [(4'h8):(1'h0)] reg66 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg67 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg68 = (1'h0);
  reg [(5'h14):(1'h0)] reg69 = (1'h0);
  reg [(2'h3):(1'h0)] forvar65 = (1'h0);
  reg [(5'h15):(1'h0)] forvar64 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar60 = (1'h0);
  reg [(4'h9):(1'h0)] forvar57 = (1'h0);
  reg [(5'h14):(1'h0)] reg55 = (1'h0);
  reg [(3'h6):(1'h0)] forvar54 = (1'h0);
  reg [(5'h11):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar50 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg49 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg48 = (1'h0);
  reg [(2'h3):(1'h0)] forvar46 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar45 = (1'h0);
  reg [(2'h2):(1'h0)] reg44 = (1'h0);
  reg [(4'hd):(1'h0)] reg42 = (1'h0);
  reg signed [(2'h2):(1'h0)] forvar39 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg37 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg36 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg35 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar34 = (1'h0);
  reg [(3'h7):(1'h0)] reg30 = (1'h0);
  reg [(3'h5):(1'h0)] forvar29 = (1'h0);
  reg [(4'hd):(1'h0)] reg28 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar27 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar23 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg21 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar17 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg15 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar14 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar6 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar4 = (1'h0);
  assign y = {wire366,
                 wire75,
                 wire74,
                 wire73,
                 wire72,
                 wire71,
                 wire70,
                 wire368,
                 wire369,
                 wire371,
                 wire372,
                 reg5,
                 reg7,
                 reg8,
                 reg9,
                 reg10,
                 reg11,
                 reg12,
                 reg13,
                 reg16,
                 reg18,
                 reg19,
                 reg20,
                 reg22,
                 reg24,
                 reg25,
                 reg26,
                 reg31,
                 reg32,
                 reg33,
                 reg38,
                 reg40,
                 reg41,
                 reg43,
                 reg47,
                 reg52,
                 reg53,
                 reg56,
                 reg58,
                 reg59,
                 reg61,
                 reg62,
                 reg63,
                 reg66,
                 reg67,
                 reg68,
                 reg69,
                 forvar65,
                 forvar64,
                 forvar60,
                 forvar57,
                 reg55,
                 forvar54,
                 reg51,
                 forvar50,
                 reg49,
                 reg48,
                 forvar46,
                 forvar45,
                 reg44,
                 reg42,
                 forvar39,
                 reg37,
                 reg36,
                 reg35,
                 forvar34,
                 reg30,
                 forvar29,
                 reg28,
                 forvar27,
                 forvar23,
                 reg21,
                 forvar17,
                 reg15,
                 forvar14,
                 forvar6,
                 forvar4,
                 (1'h0)};
  always
    @(posedge clk) begin
      if (((wire0 | $signed($signed(((8'hb8) * wire3)))) ~^ $signed(($signed($unsigned(wire3)) ?
          (~&wire2[(4'h8):(1'h1)]) : wire3[(4'hd):(4'ha)]))))
        begin
          for (forvar4 = (1'h0); (forvar4 < (3'h4)); forvar4 = (forvar4 + (1'h1)))
            begin
              reg5 <= ((8'hbe) ?
                  wire2 : (^~(wire2[(4'h8):(1'h1)] ?
                      (wire3[(4'hd):(3'h6)] ?
                          wire0[(2'h2):(1'h0)] : wire2[(3'h6):(2'h2)]) : ($unsigned(wire0) ?
                          forvar4[(1'h1):(1'h0)] : (^wire2)))));
            end
          for (forvar6 = (1'h0); (forvar6 < (1'h1)); forvar6 = (forvar6 + (1'h1)))
            begin
              reg7 <= (!$signed(reg5));
              reg8 <= (($signed($unsigned((reg5 ? wire0 : wire0))) ?
                      $unsigned(wire0) : (^~reg7[(2'h3):(2'h3)])) ?
                  {forvar4[(2'h3):(1'h1)],
                      ((wire3[(4'ha):(4'ha)] <<< $signed(wire1)) ?
                          (-$unsigned(forvar4)) : {(wire0 ?
                                  forvar4 : (8'hb9))})} : $unsigned((~$unsigned($signed(forvar6)))));
              reg9 <= ($signed({forvar4}) ? wire2[(1'h0):(1'h0)] : wire3);
              reg10 <= (reg5 ?
                  $unsigned((((|(8'hb2)) ?
                      (&wire0) : ((8'hbf) > reg9)) == reg8)) : ({$unsigned((8'ha8)),
                          (~|(wire2 == wire0))} ?
                      $unsigned((&(reg5 <<< wire0))) : $unsigned(({wire2} ?
                          wire3 : wire1))));
            end
          reg11 <= wire1;
        end
      else
        begin
          for (forvar4 = (1'h0); (forvar4 < (1'h0)); forvar4 = (forvar4 + (1'h1)))
            begin
              reg5 <= ({(reg11[(1'h0):(1'h0)] ?
                          reg10 : {(~&reg11), {wire2, forvar6}})} ?
                  $unsigned((-($unsigned(reg11) ?
                      $signed(reg5) : $signed(forvar6)))) : forvar4);
            end
        end
      reg12 <= $signed(($signed(wire3) >> ($unsigned((reg11 ?
          (8'hb4) : reg9)) && wire1)));
      reg13 <= $signed($unsigned((($signed(reg8) ^ (!reg5)) ^ reg8[(2'h3):(1'h0)])));
    end
  always
    @(posedge clk) begin
      for (forvar14 = (1'h0); (forvar14 < (2'h2)); forvar14 = (forvar14 + (1'h1)))
        begin
          reg15 = reg5[(2'h3):(1'h0)];
          reg16 <= ((|{((wire1 ? reg13 : reg13) == $unsigned((8'hb8)))}) ?
              $unsigned(wire0[(3'h7):(3'h7)]) : $unsigned((reg5 ?
                  ((wire1 == reg10) > (!(8'hb6))) : reg10)));
          for (forvar17 = (1'h0); (forvar17 < (1'h0)); forvar17 = (forvar17 + (1'h1)))
            begin
              reg18 <= (~&(((reg10 ? (~^reg5) : $signed(reg16)) ?
                      ((forvar14 ?
                          reg9 : wire1) & (8'hbd)) : $unsigned((reg11 | reg9))) ?
                  {(reg13 && (reg12 < reg9))} : (8'haf)));
              reg19 <= reg16[(1'h0):(1'h0)];
              reg20 <= reg12;
              reg21 = $unsigned($signed(((8'h9f) ?
                  {(~(8'hb6)),
                      $unsigned(reg8)} : $signed(reg13[(3'h4):(2'h2)]))));
            end
          reg22 <= (reg18[(4'h9):(3'h6)] << (8'hbd));
          for (forvar23 = (1'h0); (forvar23 < (2'h3)); forvar23 = (forvar23 + (1'h1)))
            begin
              reg24 <= (7'h43);
              reg25 <= $signed($signed((($signed(reg15) - $unsigned((8'hb7))) ?
                  $signed((^reg5)) : {wire0})));
            end
        end
    end
  always
    @(posedge clk) begin
      reg26 <= (($unsigned(($signed(reg13) ? $unsigned(reg5) : reg5)) ?
              $signed($unsigned(reg20[(2'h2):(2'h2)])) : (+{(wire0 ?
                      reg24 : (8'hbd))})) ?
          (($signed(((8'ha0) ?
              reg22 : reg24)) - reg12) >>> (!reg7)) : (($signed((reg22 != reg9)) ?
              $unsigned({wire1}) : $signed($signed(wire1))) | $signed(wire3)));
      for (forvar27 = (1'h0); (forvar27 < (1'h1)); forvar27 = (forvar27 + (1'h1)))
        begin
          reg28 = reg20[(2'h2):(1'h0)];
          for (forvar29 = (1'h0); (forvar29 < (2'h3)); forvar29 = (forvar29 + (1'h1)))
            begin
              reg30 = ((~$unsigned((-(~|wire2)))) ?
                  reg19[(1'h0):(1'h0)] : reg24[(3'h5):(1'h1)]);
              reg31 <= ($unsigned({$unsigned((~&(8'hbd)))}) >>> $unsigned($unsigned($signed((reg7 ?
                  reg5 : reg13)))));
              reg32 <= $signed(($signed((|(-reg24))) ~^ wire0));
              reg33 <= ((reg5 ?
                      (wire2 ?
                          reg30[(2'h2):(2'h2)] : $unsigned($unsigned(reg16))) : $unsigned(reg26[(2'h2):(1'h0)])) ?
                  forvar27 : (8'haf));
            end
          for (forvar34 = (1'h0); (forvar34 < (2'h2)); forvar34 = (forvar34 + (1'h1)))
            begin
              reg35 = ($unsigned($unsigned(((~&reg32) ?
                  reg25 : $unsigned(reg20)))) ^~ {{((reg28 ?
                          forvar27 : reg12) - reg8[(1'h1):(1'h0)])}});
              reg36 = (({((reg9 ? forvar29 : reg9) == wire3)} ?
                  reg31 : ((|{reg5,
                      reg30}) >> $signed((reg9 || reg11)))) * reg10);
              reg37 = reg25;
              reg38 <= {(^~((!reg5[(2'h2):(2'h2)]) ?
                      (8'hb1) : reg30[(2'h2):(1'h0)])),
                  (8'hac)};
            end
          for (forvar39 = (1'h0); (forvar39 < (1'h0)); forvar39 = (forvar39 + (1'h1)))
            begin
              reg40 <= (reg22[(2'h3):(1'h0)] <<< (!reg7[(1'h0):(1'h0)]));
              reg41 <= (reg28 + (~^(-((!wire3) & (reg33 * reg10)))));
              reg42 = (~&reg10[(3'h5):(1'h1)]);
              reg43 <= (~&((reg40 ?
                  (reg31 ?
                      $signed(wire0) : (wire2 ?
                          forvar39 : reg35)) : ($signed((8'hb1)) ?
                      (wire0 ? reg41 : reg37) : (~reg19))) | (($signed(reg37) ?
                  $signed(reg33) : wire2) <= ($unsigned(reg22) ?
                  $unsigned(reg13) : $signed(reg7)))));
              reg44 = {((|$signed({reg28, reg28})) ^ (~^reg25[(3'h4):(2'h3)]))};
            end
        end
      for (forvar45 = (1'h0); (forvar45 < (1'h0)); forvar45 = (forvar45 + (1'h1)))
        begin
          for (forvar46 = (1'h0); (forvar46 < (1'h1)); forvar46 = (forvar46 + (1'h1)))
            begin
              reg47 <= ($unsigned(({reg24[(3'h6):(1'h1)]} ?
                      (reg24[(2'h3):(1'h1)] << forvar27) : forvar46)) ?
                  forvar27 : (wire2 ? (~^$unsigned((8'ha7))) : forvar45));
              reg48 = reg8;
              reg49 = reg47[(4'he):(4'hd)];
            end
          for (forvar50 = (1'h0); (forvar50 < (2'h2)); forvar50 = (forvar50 + (1'h1)))
            begin
              reg51 = (8'hba);
              reg52 <= {wire0, $unsigned($signed($signed({reg19})))};
              reg53 <= reg37[(4'he):(1'h1)];
            end
          for (forvar54 = (1'h0); (forvar54 < (1'h0)); forvar54 = (forvar54 + (1'h1)))
            begin
              reg55 = reg43[(1'h1):(1'h0)];
              reg56 <= $signed((({$signed(reg35)} + (~reg28)) ?
                  $signed(forvar54[(1'h1):(1'h1)]) : (|$unsigned((|forvar29)))));
            end
        end
      for (forvar57 = (1'h0); (forvar57 < (2'h2)); forvar57 = (forvar57 + (1'h1)))
        begin
          reg58 <= (($unsigned(forvar45[(1'h0):(1'h0)]) == {$unsigned($signed(reg32)),
              $unsigned(reg51[(4'hd):(4'hd)])}) > (~|$unsigned(($unsigned(reg13) ~^ reg22))));
          reg59 <= {{($signed(((8'h9e) ? reg31 : forvar50)) ?
                      (~$unsigned(forvar27)) : $unsigned($unsigned(reg52)))},
              (+reg5)};
          for (forvar60 = (1'h0); (forvar60 < (2'h3)); forvar60 = (forvar60 + (1'h1)))
            begin
              reg61 <= reg26[(1'h0):(1'h0)];
              reg62 <= reg53;
              reg63 <= (8'hb0);
            end
        end
      for (forvar64 = (1'h0); (forvar64 < (2'h3)); forvar64 = (forvar64 + (1'h1)))
        begin
          for (forvar65 = (1'h0); (forvar65 < (3'h4)); forvar65 = (forvar65 + (1'h1)))
            begin
              reg66 <= $signed({reg55[(4'h9):(2'h3)]});
              reg67 <= reg11;
              reg68 <= {(8'hae)};
              reg69 = reg42[(4'hc):(2'h3)];
            end
        end
    end
  assign wire70 = reg25[(2'h2):(1'h0)];
  assign wire71 = reg13;
  assign wire72 = $signed(reg19);
  assign wire73 = $unsigned((+wire71));
  assign wire74 = $signed((((~|wire71) < reg22) != $unsigned($signed(wire70[(3'h5):(2'h3)]))));
  assign wire75 = {reg33[(2'h2):(1'h0)]};
  module76 #() modinst367 (.wire79(wire73), .wire81(reg18), .y(wire366), .wire78(reg24), .clk(clk), .wire80(reg40), .wire77(reg52));
  assign wire368 = $signed(($signed(reg47[(2'h2):(2'h2)]) - ($unsigned((reg62 ?
                           reg13 : (8'hb5))) ?
                       ((reg67 ~^ reg12) >= $unsigned(reg53)) : (reg24[(4'h9):(4'h9)] ?
                           (8'hba) : (reg59 ? wire2 : reg18)))));
  module298 #() modinst370 (.y(wire369), .wire301(reg47), .wire300(wire1), .clk(clk), .wire299(reg19), .wire303(wire70), .wire302(reg5));
  assign wire371 = $unsigned($signed($signed({reg40[(5'h12):(5'h12)]})));
  module298 #() modinst373 (.clk(clk), .y(wire372), .wire301(reg18), .wire302(reg59), .wire303(wire74), .wire299(reg8), .wire300(reg67));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module76
#(parameter param365 = ({((~&((8'hba) - (8'haf))) ? ({(8'hbb)} > ((8'ha3) ? (8'h9e) : (8'hb9))) : (8'hac))} ? {((((8'h9d) & (8'h9f)) << ((8'ha8) ? (8'ha6) : (8'h9d))) <= (((8'haa) ? (8'ha1) : (8'hbf)) ? ((8'hae) != (8'h9d)) : (8'hb5)))} : (&((((8'ha0) | (8'ha7)) ? (-(8'ha4)) : ((8'hb0) ? (8'hac) : (8'hba))) ? ((-(8'hbb)) && (|(8'hbf))) : (((8'hab) ? (8'ha7) : (8'hab)) ? (^(7'h43)) : ((8'h9e) ? (8'hbf) : (8'hbb)))))))
(y, clk, wire77, wire78, wire79, wire80, wire81);
  output wire [(32'h1a6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h11):(1'h0)] wire77;
  input wire signed [(5'h11):(1'h0)] wire78;
  input wire [(5'h10):(1'h0)] wire79;
  input wire [(5'h13):(1'h0)] wire80;
  input wire [(4'h9):(1'h0)] wire81;
  wire signed [(3'h6):(1'h0)] wire364;
  wire [(5'h12):(1'h0)] wire363;
  wire [(5'h10):(1'h0)] wire361;
  wire [(5'h14):(1'h0)] wire297;
  wire signed [(3'h4):(1'h0)] wire296;
  wire [(4'hd):(1'h0)] wire295;
  wire [(3'h4):(1'h0)] wire294;
  wire signed [(4'ha):(1'h0)] wire293;
  wire signed [(4'he):(1'h0)] wire292;
  wire [(5'h12):(1'h0)] wire291;
  wire [(4'hf):(1'h0)] wire290;
  wire [(5'h15):(1'h0)] wire289;
  wire [(4'hc):(1'h0)] wire223;
  wire signed [(5'h11):(1'h0)] wire156;
  wire signed [(5'h14):(1'h0)] wire154;
  wire signed [(5'h15):(1'h0)] wire82;
  wire [(5'h13):(1'h0)] wire83;
  wire [(4'hb):(1'h0)] wire119;
  wire [(5'h15):(1'h0)] wire287;
  reg signed [(3'h7):(1'h0)] reg169 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg170 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg168 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg167 = (1'h0);
  reg [(4'h9):(1'h0)] forvar166 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg165 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar164 = (1'h0);
  reg [(5'h12):(1'h0)] forvar163 = (1'h0);
  reg [(3'h4):(1'h0)] reg162 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg161 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg160 = (1'h0);
  reg [(3'h4):(1'h0)] reg159 = (1'h0);
  reg [(4'hd):(1'h0)] forvar158 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar157 = (1'h0);
  assign y = {wire364,
                 wire363,
                 wire361,
                 wire297,
                 wire296,
                 wire295,
                 wire294,
                 wire293,
                 wire292,
                 wire291,
                 wire290,
                 wire289,
                 wire223,
                 wire156,
                 wire154,
                 wire82,
                 wire83,
                 wire119,
                 wire287,
                 reg169,
                 reg170,
                 reg168,
                 reg167,
                 forvar166,
                 reg165,
                 forvar164,
                 forvar163,
                 reg162,
                 reg161,
                 reg160,
                 reg159,
                 forvar158,
                 forvar157,
                 (1'h0)};
  assign wire82 = $unsigned((~wire81));
  assign wire83 = {$unsigned($unsigned($unsigned(wire80))),
                      {$unsigned(($signed(wire78) ? (~&wire82) : (|wire79))),
                          $signed(wire77)}};
  module84 #() modinst120 (.wire87(wire82), .wire89(wire79), .y(wire119), .wire86(wire83), .wire88(wire80), .wire85(wire78), .clk(clk));
  module121 #() modinst155 (.y(wire154), .wire123(wire81), .wire122(wire119), .wire125(wire77), .clk(clk), .wire124(wire78));
  assign wire156 = wire81;
  always
    @(posedge clk) begin
      for (forvar157 = (1'h0); (forvar157 < (1'h0)); forvar157 = (forvar157 + (1'h1)))
        begin
          for (forvar158 = (1'h0); (forvar158 < (3'h4)); forvar158 = (forvar158 + (1'h1)))
            begin
              reg159 = $signed($signed(wire156));
              reg160 = reg159;
            end
          reg161 = ($unsigned(reg159[(3'h4):(2'h3)]) & (^(wire83[(4'ha):(4'ha)] * {wire78[(4'hd):(3'h5)],
              (reg159 == (8'hba))})));
        end
      reg162 = ((wire79[(3'h4):(1'h0)] ?
              $signed({$unsigned(reg159), (-wire154)}) : $signed(({reg160} ?
                  wire83 : (forvar158 ? reg160 : reg160)))) ?
          (~{wire79,
              (+((8'h9d) > wire77))}) : (reg160[(1'h1):(1'h1)] * (~|$unsigned($unsigned(wire82)))));
      for (forvar163 = (1'h0); (forvar163 < (1'h0)); forvar163 = (forvar163 + (1'h1)))
        begin
          for (forvar164 = (1'h0); (forvar164 < (3'h4)); forvar164 = (forvar164 + (1'h1)))
            begin
              reg165 = $signed(wire154);
            end
          for (forvar166 = (1'h0); (forvar166 < (2'h3)); forvar166 = (forvar166 + (1'h1)))
            begin
              reg167 = wire81;
              reg168 = ((~&reg161[(3'h5):(2'h2)]) ?
                  {$unsigned((|(~&reg165))),
                      ((wire156[(1'h0):(1'h0)] ?
                          wire78[(4'h8):(3'h5)] : {forvar158,
                              reg161}) * ((~^forvar157) ?
                          wire83 : (&forvar164)))} : $signed(((-(!(8'hbc))) ?
                      $unsigned($signed(forvar157)) : reg161)));
              reg169 <= (~&$unsigned($signed($unsigned($signed(reg168)))));
              reg170 = $signed($unsigned($unsigned(((reg160 ?
                      reg160 : wire119) ?
                  reg161[(2'h3):(1'h1)] : (wire79 ^ wire83)))));
            end
        end
    end
  module171 #() modinst224 (.y(wire223), .wire175(wire81), .wire172(wire78), .wire174(wire82), .clk(clk), .wire176(wire156), .wire173(wire154));
  module225 #() modinst288 (.wire228(wire79), .y(wire287), .wire226(wire154), .clk(clk), .wire229(wire156), .wire230(wire83), .wire227(wire77));
  assign wire289 = wire81;
  assign wire290 = $signed($unsigned((^($unsigned(wire77) | wire77))));
  assign wire291 = wire79;
  assign wire292 = wire83;
  assign wire293 = $unsigned(wire287);
  assign wire294 = ((wire223 ~^ $unsigned($unsigned((wire83 ?
                       wire293 : wire79)))) - ((^(-wire78)) ^~ ((((8'haf) ?
                           wire119 : wire119) ?
                       wire223[(4'h8):(2'h2)] : $signed(wire154)) <= wire79[(4'hf):(3'h5)])));
  assign wire295 = $signed(wire294[(2'h2):(1'h1)]);
  assign wire296 = {$unsigned(wire77[(2'h3):(2'h2)]), wire223};
  assign wire297 = ({wire293} ? wire289 : (^~(^$unsigned($unsigned((8'had))))));
  module298 #() modinst362 (wire361, clk, reg169, wire80, wire82, wire287, wire223);
  assign wire363 = (|(&(|(wire361[(4'hf):(2'h3)] <<< {wire80, wire119}))));
  assign wire364 = wire295;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module298
#(parameter param360 = (((((&(8'had)) ? ((8'haf) ? (7'h40) : (8'hbf)) : (~|(8'ha1))) != (~|((8'h9f) ? (8'ha1) : (8'hbd)))) ? ((-((7'h40) ? (8'h9f) : (8'ha8))) >= ((~|(8'hb6)) ? (^(8'hac)) : (-(8'hb3)))) : (((8'ha0) && (!(8'ha7))) - ((^(8'hb6)) ? (~&(8'ha0)) : {(8'hb7)}))) ? (+(8'ha7)) : ((!(((8'hb1) ? (8'ha4) : (8'hb6)) >> ((8'haa) ? (8'haf) : (8'hbd)))) * (+{(+(8'hae)), ((8'hb8) ? (8'hb6) : (8'hbf))}))))
(y, clk, wire303, wire302, wire301, wire300, wire299);
  output wire [(32'h2da):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h7):(1'h0)] wire303;
  input wire signed [(5'h13):(1'h0)] wire302;
  input wire signed [(3'h7):(1'h0)] wire301;
  input wire signed [(2'h3):(1'h0)] wire300;
  input wire signed [(4'hb):(1'h0)] wire299;
  wire [(5'h10):(1'h0)] wire359;
  wire signed [(5'h15):(1'h0)] wire358;
  wire [(2'h3):(1'h0)] wire357;
  wire [(4'ha):(1'h0)] wire356;
  wire [(3'h5):(1'h0)] wire355;
  wire [(5'h14):(1'h0)] wire354;
  wire signed [(4'ha):(1'h0)] wire353;
  wire [(5'h14):(1'h0)] wire352;
  wire signed [(5'h12):(1'h0)] wire351;
  wire signed [(4'hb):(1'h0)] wire350;
  reg [(4'hf):(1'h0)] reg349 = (1'h0);
  reg [(4'h9):(1'h0)] reg348 = (1'h0);
  reg [(4'h8):(1'h0)] reg346 = (1'h0);
  reg [(5'h12):(1'h0)] reg345 = (1'h0);
  reg [(5'h14):(1'h0)] reg341 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg340 = (1'h0);
  reg [(4'hf):(1'h0)] reg337 = (1'h0);
  reg [(3'h7):(1'h0)] reg335 = (1'h0);
  reg [(4'he):(1'h0)] reg333 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg330 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg329 = (1'h0);
  reg [(3'h4):(1'h0)] reg326 = (1'h0);
  reg [(4'h9):(1'h0)] reg325 = (1'h0);
  reg [(3'h7):(1'h0)] reg324 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg323 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg322 = (1'h0);
  reg [(5'h14):(1'h0)] reg319 = (1'h0);
  reg signed [(4'he):(1'h0)] reg318 = (1'h0);
  reg [(3'h5):(1'h0)] reg315 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg313 = (1'h0);
  reg [(4'hf):(1'h0)] reg307 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg347 = (1'h0);
  reg [(4'hf):(1'h0)] forvar344 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar343 = (1'h0);
  reg [(5'h11):(1'h0)] reg342 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar339 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar338 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg336 = (1'h0);
  reg [(4'hc):(1'h0)] reg334 = (1'h0);
  reg [(4'hd):(1'h0)] reg332 = (1'h0);
  reg [(5'h14):(1'h0)] forvar331 = (1'h0);
  reg [(4'he):(1'h0)] reg328 = (1'h0);
  reg [(5'h10):(1'h0)] forvar327 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar321 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar320 = (1'h0);
  reg [(2'h3):(1'h0)] reg317 = (1'h0);
  reg [(4'hd):(1'h0)] forvar316 = (1'h0);
  reg [(4'hd):(1'h0)] reg314 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg312 = (1'h0);
  reg [(4'hc):(1'h0)] reg311 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar310 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg309 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar308 = (1'h0);
  reg [(4'ha):(1'h0)] reg306 = (1'h0);
  reg [(5'h12):(1'h0)] forvar305 = (1'h0);
  reg [(4'hd):(1'h0)] forvar304 = (1'h0);
  assign y = {wire359,
                 wire358,
                 wire357,
                 wire356,
                 wire355,
                 wire354,
                 wire353,
                 wire352,
                 wire351,
                 wire350,
                 reg349,
                 reg348,
                 reg346,
                 reg345,
                 reg341,
                 reg340,
                 reg337,
                 reg335,
                 reg333,
                 reg330,
                 reg329,
                 reg326,
                 reg325,
                 reg324,
                 reg323,
                 reg322,
                 reg319,
                 reg318,
                 reg315,
                 reg313,
                 reg307,
                 reg347,
                 forvar344,
                 forvar343,
                 reg342,
                 forvar339,
                 forvar338,
                 reg336,
                 reg334,
                 reg332,
                 forvar331,
                 reg328,
                 forvar327,
                 forvar321,
                 forvar320,
                 reg317,
                 forvar316,
                 reg314,
                 reg312,
                 reg311,
                 forvar310,
                 reg309,
                 forvar308,
                 reg306,
                 forvar305,
                 forvar304,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar304 = (1'h0); (forvar304 < (3'h4)); forvar304 = (forvar304 + (1'h1)))
        begin
          for (forvar305 = (1'h0); (forvar305 < (3'h4)); forvar305 = (forvar305 + (1'h1)))
            begin
              reg306 = wire303;
              reg307 <= {(wire299 >>> ({wire303[(1'h0):(1'h0)],
                      (forvar305 < forvar304)} <<< (wire299 ?
                      (-wire303) : wire301)))};
            end
          for (forvar308 = (1'h0); (forvar308 < (1'h1)); forvar308 = (forvar308 + (1'h1)))
            begin
              reg309 = (((wire299 ?
                  $signed(wire300[(2'h3):(2'h3)]) : ((-reg307) ?
                      wire302 : ((8'hb1) ?
                          wire303 : (8'ha6)))) + (!wire303)) << $unsigned(wire302[(3'h6):(2'h3)]));
            end
          for (forvar310 = (1'h0); (forvar310 < (1'h1)); forvar310 = (forvar310 + (1'h1)))
            begin
              reg311 = $unsigned((reg307 ?
                  (~^forvar308[(4'h9):(3'h5)]) : forvar308));
              reg312 = forvar304;
              reg313 <= ($signed((!({(8'hac)} ?
                  forvar305 : ((7'h43) << forvar310)))) >= reg312[(2'h2):(1'h1)]);
              reg314 = (wire303[(2'h2):(1'h0)] ?
                  wire300[(1'h0):(1'h0)] : $unsigned(reg307));
              reg315 <= reg314;
            end
          for (forvar316 = (1'h0); (forvar316 < (1'h1)); forvar316 = (forvar316 + (1'h1)))
            begin
              reg317 = ((forvar308 ?
                  (wire299[(4'h8):(4'h8)] + (8'hb1)) : (reg314 != $signed($unsigned(reg313)))) != ($unsigned($signed({wire303})) + wire301[(3'h6):(3'h5)]));
              reg318 <= (|$signed({$signed({reg315, forvar308})}));
              reg319 <= (~forvar316);
            end
        end
      for (forvar320 = (1'h0); (forvar320 < (2'h2)); forvar320 = (forvar320 + (1'h1)))
        begin
          for (forvar321 = (1'h0); (forvar321 < (1'h0)); forvar321 = (forvar321 + (1'h1)))
            begin
              reg322 <= (~{reg311[(1'h0):(1'h0)]});
              reg323 <= (((reg319 ?
                      (reg314 ^ wire301[(2'h3):(1'h1)]) : {$signed(reg317)}) != $unsigned((&$unsigned(wire301)))) ?
                  ((&(~$signed(forvar310))) ~^ wire302[(4'hf):(2'h2)]) : {forvar308[(1'h1):(1'h0)]});
              reg324 <= forvar304;
              reg325 <= (!(reg324[(3'h4):(1'h0)] ^~ ($unsigned(((8'h9d) > reg311)) > $signed((~&forvar316)))));
            end
          reg326 <= reg324[(3'h7):(3'h5)];
          for (forvar327 = (1'h0); (forvar327 < (1'h1)); forvar327 = (forvar327 + (1'h1)))
            begin
              reg328 = ({$unsigned(($unsigned(reg307) || (^~forvar320))),
                  $unsigned(reg318)} * $signed({reg323[(2'h3):(1'h0)]}));
              reg329 <= wire300[(1'h1):(1'h1)];
              reg330 <= forvar305[(3'h5):(2'h3)];
            end
        end
      for (forvar331 = (1'h0); (forvar331 < (3'h4)); forvar331 = (forvar331 + (1'h1)))
        begin
          reg332 = $signed($unsigned(((7'h44) * $signed((forvar310 < reg328)))));
          if ($unsigned(forvar320[(2'h2):(1'h0)]))
            begin
              reg333 <= {{({(forvar305 ^~ forvar308)} || $unsigned(reg306)),
                      (+{(wire303 && reg329)})},
                  reg330};
              reg334 = (reg324[(2'h3):(2'h3)] >> (({(reg325 ?
                          reg317 : reg322)} != (!forvar316[(1'h1):(1'h0)])) ?
                  ($signed(reg306[(2'h3):(1'h0)]) || (~&reg318)) : (+$unsigned(reg312[(4'hb):(4'h8)]))));
              reg335 <= $unsigned((|$signed((~&reg318[(4'hc):(3'h5)]))));
              reg336 = ({$unsigned((+{(8'hb1), forvar320}))} ?
                  $signed($unsigned(({(8'haf)} ?
                      $unsigned(reg329) : (reg319 ?
                          reg330 : reg335)))) : reg313[(1'h1):(1'h0)]);
            end
          else
            begin
              reg334 = reg332[(4'hc):(1'h0)];
              reg336 = ($unsigned((-$signed((~^reg313)))) >> reg318[(3'h6):(3'h4)]);
              reg337 <= (^({($signed((8'hb8)) ?
                          $unsigned(reg332) : $signed(reg330))} ?
                  forvar308 : (8'hb8)));
            end
        end
      for (forvar338 = (1'h0); (forvar338 < (2'h2)); forvar338 = (forvar338 + (1'h1)))
        begin
          for (forvar339 = (1'h0); (forvar339 < (2'h2)); forvar339 = (forvar339 + (1'h1)))
            begin
              reg340 <= $signed(forvar310[(4'hd):(2'h3)]);
            end
          reg341 <= ((((((8'hb6) ?
                  reg324 : reg322) ^~ {forvar339}) >> (reg312 || (~^forvar305))) ?
              reg328 : ($signed((forvar338 ? reg334 : reg323)) ?
                  $signed($unsigned((8'hae))) : $unsigned(reg325))) ^~ (~$unsigned(((forvar327 ~^ wire303) ~^ (reg318 ?
              wire299 : forvar310)))));
          reg342 = $signed(reg309);
        end
      for (forvar343 = (1'h0); (forvar343 < (2'h3)); forvar343 = (forvar343 + (1'h1)))
        begin
          for (forvar344 = (1'h0); (forvar344 < (3'h4)); forvar344 = (forvar344 + (1'h1)))
            begin
              reg345 <= ($signed($unsigned((wire302[(5'h11):(4'hc)] ?
                  (!forvar308) : reg318[(1'h1):(1'h0)]))) << reg312[(4'hb):(3'h4)]);
              reg346 <= $unsigned(forvar344);
              reg347 = $signed(reg333);
              reg348 <= $signed((($signed({reg333}) ^ reg346[(3'h4):(2'h3)]) ?
                  $unsigned($unsigned(forvar316)) : (!forvar308[(4'h9):(3'h6)])));
            end
          reg349 <= forvar339[(2'h3):(1'h1)];
        end
    end
  assign wire350 = (reg322 << $signed({reg333[(3'h5):(2'h3)],
                       reg313[(3'h7):(3'h6)]}));
  assign wire351 = {($signed(reg324) && reg337[(4'hd):(2'h3)])};
  assign wire352 = wire302[(1'h0):(1'h0)];
  assign wire353 = $unsigned(reg349);
  assign wire354 = $signed(reg337[(4'hc):(4'ha)]);
  assign wire355 = wire300;
  assign wire356 = reg329;
  assign wire357 = $signed((8'hbb));
  assign wire358 = $signed(reg348[(4'h8):(1'h1)]);
  assign wire359 = reg313[(3'h6):(2'h2)];
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module225
#(parameter param286 = (((({(8'hb5), (7'h43)} - {(8'haf)}) || {((8'hba) ? (8'hbb) : (8'ha7))}) ? (((!(7'h40)) <<< (~^(8'ha1))) ^ (((8'hb6) | (8'ha3)) ? (~&(8'hbd)) : ((8'hb7) ? (8'hae) : (8'hae)))) : (~|(!{(8'ha9), (8'ha8)}))) ? ((((8'hba) ^~ ((8'ha0) ? (8'hb5) : (8'hb3))) ? (((8'hbc) != (8'hb5)) ? (7'h44) : (~|(7'h43))) : (~^(~(7'h44)))) << {((~&(7'h41)) ? {(8'ha4), (8'hb2)} : (|(8'hba))), (|(8'hba))}) : (({(~^(8'h9e)), ((8'h9e) ? (8'hba) : (8'hbe))} == {(~(8'h9e)), {(8'had)}}) ? (|(8'haf)) : (^(|((8'ha9) ? (7'h43) : (8'ha4)))))))
(y, clk, wire230, wire229, wire228, wire227, wire226);
  output wire [(32'h2a1):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(2'h2):(1'h0)] wire230;
  input wire [(3'h5):(1'h0)] wire229;
  input wire [(4'he):(1'h0)] wire228;
  input wire signed [(5'h11):(1'h0)] wire227;
  input wire [(2'h3):(1'h0)] wire226;
  wire [(4'hb):(1'h0)] wire285;
  wire [(4'hf):(1'h0)] wire284;
  wire [(5'h15):(1'h0)] wire278;
  wire [(2'h3):(1'h0)] wire277;
  wire [(4'ha):(1'h0)] wire276;
  wire [(4'hc):(1'h0)] wire275;
  wire [(3'h5):(1'h0)] wire274;
  wire signed [(2'h3):(1'h0)] wire273;
  wire signed [(5'h12):(1'h0)] wire233;
  wire signed [(4'hd):(1'h0)] wire232;
  wire [(5'h12):(1'h0)] wire231;
  reg [(4'h9):(1'h0)] reg283 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg282 = (1'h0);
  reg [(4'h8):(1'h0)] reg272 = (1'h0);
  reg [(5'h11):(1'h0)] reg271 = (1'h0);
  reg [(4'hf):(1'h0)] reg270 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg269 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg268 = (1'h0);
  reg [(4'hf):(1'h0)] reg266 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg265 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg264 = (1'h0);
  reg [(4'hb):(1'h0)] reg262 = (1'h0);
  reg signed [(4'he):(1'h0)] reg259 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg258 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg257 = (1'h0);
  reg [(4'h8):(1'h0)] reg256 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg255 = (1'h0);
  reg [(4'hb):(1'h0)] reg254 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg250 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg249 = (1'h0);
  reg [(4'h8):(1'h0)] reg248 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg246 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg245 = (1'h0);
  reg [(4'he):(1'h0)] reg244 = (1'h0);
  reg [(4'hc):(1'h0)] reg242 = (1'h0);
  reg [(4'h9):(1'h0)] reg241 = (1'h0);
  reg [(5'h10):(1'h0)] reg240 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg238 = (1'h0);
  reg [(4'hd):(1'h0)] reg237 = (1'h0);
  reg [(3'h4):(1'h0)] reg236 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg281 = (1'h0);
  reg signed [(4'ha):(1'h0)] forvar280 = (1'h0);
  reg [(5'h12):(1'h0)] forvar279 = (1'h0);
  reg [(2'h3):(1'h0)] reg261 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar267 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar263 = (1'h0);
  reg [(4'hd):(1'h0)] forvar261 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg260 = (1'h0);
  reg [(5'h14):(1'h0)] forvar253 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar252 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg251 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar247 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg243 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg239 = (1'h0);
  reg [(4'h8):(1'h0)] forvar235 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar234 = (1'h0);
  assign y = {wire285,
                 wire284,
                 wire278,
                 wire277,
                 wire276,
                 wire275,
                 wire274,
                 wire273,
                 wire233,
                 wire232,
                 wire231,
                 reg283,
                 reg282,
                 reg272,
                 reg271,
                 reg270,
                 reg269,
                 reg268,
                 reg266,
                 reg265,
                 reg264,
                 reg262,
                 reg259,
                 reg258,
                 reg257,
                 reg256,
                 reg255,
                 reg254,
                 reg250,
                 reg249,
                 reg248,
                 reg246,
                 reg245,
                 reg244,
                 reg242,
                 reg241,
                 reg240,
                 reg238,
                 reg237,
                 reg236,
                 reg281,
                 forvar280,
                 forvar279,
                 reg261,
                 forvar267,
                 forvar263,
                 forvar261,
                 reg260,
                 forvar253,
                 forvar252,
                 reg251,
                 forvar247,
                 reg243,
                 reg239,
                 forvar235,
                 forvar234,
                 (1'h0)};
  assign wire231 = wire227;
  assign wire232 = $signed(($signed($unsigned((wire231 <<< wire230))) ?
                       (~$signed((wire228 && wire227))) : (^~wire228)));
  assign wire233 = (($signed($signed($unsigned(wire232))) < $unsigned(wire226[(1'h0):(1'h0)])) ?
                       wire231[(4'hd):(1'h0)] : wire226);
  always
    @(posedge clk) begin
      for (forvar234 = (1'h0); (forvar234 < (2'h2)); forvar234 = (forvar234 + (1'h1)))
        begin
          for (forvar235 = (1'h0); (forvar235 < (1'h1)); forvar235 = (forvar235 + (1'h1)))
            begin
              reg236 <= wire233;
              reg237 <= wire226;
              reg238 <= $signed(wire229[(2'h3):(1'h1)]);
              reg239 = ((-(forvar235[(3'h4):(3'h4)] ?
                  ($signed(forvar234) ?
                      $unsigned((8'hb2)) : $unsigned(wire233)) : (~&{wire229}))) & ((wire229 ?
                  wire232 : forvar235[(2'h3):(2'h3)]) ^~ (({forvar234,
                          wire233} ?
                      $signed(wire229) : reg238[(4'h8):(3'h6)]) ?
                  ((wire227 ? wire233 : reg236) ?
                      (^~reg238) : (!reg237)) : ((+reg236) ?
                      (&wire231) : wire228[(2'h2):(2'h2)]))));
            end
          reg240 <= wire230;
          if ((wire231[(4'he):(4'he)] ?
              {reg238} : {(wire227[(4'hf):(3'h5)] <= wire227[(5'h11):(5'h10)]),
                  ({reg239, wire228[(4'ha):(3'h7)]} ?
                      ((forvar235 ? wire229 : wire231) ?
                          $signed(wire231) : {wire232}) : (-((7'h40) > wire230)))}))
            begin
              reg241 <= reg237;
              reg242 <= (^~{$signed((^{(8'hb9), wire226}))});
              reg243 = wire227;
              reg244 <= ($unsigned($unsigned((~|(wire230 >= reg241)))) ?
                  $unsigned((~reg243[(4'hd):(1'h1)])) : $signed(({(reg238 ?
                          reg236 : forvar235),
                      (^reg243)} || ($unsigned(wire232) != {wire232,
                      forvar235}))));
              reg245 <= wire233;
            end
          else
            begin
              reg243 = reg239;
              reg244 <= ((((~(&(8'ha0))) << $unsigned({wire228,
                      forvar235})) ^ reg238) ?
                  wire229 : $unsigned($unsigned(wire229[(2'h2):(1'h1)])));
              reg245 <= reg237[(4'hc):(1'h1)];
              reg246 <= ((wire228[(4'he):(4'hd)] + (8'h9d)) + forvar235);
            end
          for (forvar247 = (1'h0); (forvar247 < (1'h0)); forvar247 = (forvar247 + (1'h1)))
            begin
              reg248 <= ((~&(((wire229 ?
                  wire233 : reg239) | reg241[(3'h5):(1'h0)]) ^ wire229)) < ($unsigned(($signed(reg237) <= (reg240 ?
                  reg245 : wire231))) & (~^$signed((forvar234 ~^ wire227)))));
              reg249 <= (reg246 ?
                  $signed($unsigned($signed({wire230}))) : ($unsigned((&wire231[(3'h4):(3'h4)])) ?
                      (((forvar234 ? wire228 : reg242) != wire227) ?
                          wire228 : (&(wire226 ?
                              reg238 : wire227))) : {$signed($unsigned(reg236))}));
              reg250 <= $signed((reg241[(3'h5):(1'h1)] ?
                  $unsigned((~|$unsigned(wire232))) : $unsigned(wire231)));
              reg251 = (~&(($signed(((8'ha9) ? reg245 : reg236)) ?
                      ($signed(reg249) ?
                          $unsigned(reg243) : reg237[(2'h2):(1'h0)]) : (^forvar247)) ?
                  reg250 : reg237[(2'h3):(1'h1)]));
            end
        end
      for (forvar252 = (1'h0); (forvar252 < (1'h0)); forvar252 = (forvar252 + (1'h1)))
        begin
          for (forvar253 = (1'h0); (forvar253 < (2'h3)); forvar253 = (forvar253 + (1'h1)))
            begin
              reg254 <= {$signed(reg249[(1'h1):(1'h0)]),
                  $signed((reg245 ?
                      ((reg244 ? wire232 : wire228) ?
                          (reg240 << reg250) : (~&reg241)) : ((7'h41) ?
                          $unsigned(reg251) : (wire233 & forvar234))))};
              reg255 <= ((!$unsigned($signed(((8'hb2) >= reg239)))) < reg254[(2'h2):(1'h0)]);
              reg256 <= reg242;
            end
          if ({{($signed($unsigned(forvar252)) << $signed(wire228[(2'h2):(1'h0)])),
                  forvar253},
              (!forvar235)})
            begin
              reg257 <= reg244;
              reg258 <= reg241;
            end
          else
            begin
              reg257 <= $unsigned(({$unsigned(wire226),
                  $unsigned((~|forvar234))} < ({(~reg258)} ?
                  reg240 : reg251[(3'h4):(3'h4)])));
              reg258 <= (-(7'h44));
              reg259 <= reg238[(2'h3):(2'h2)];
              reg260 = (|$signed(wire230[(1'h1):(1'h1)]));
            end
        end
      if ((($signed($signed((forvar252 ? (8'haa) : reg246))) ?
              $signed($signed((wire233 >> wire226))) : ((&(+reg254)) ?
                  (^~(forvar247 * reg254)) : forvar253)) ?
          reg251 : (|(^~($unsigned(reg256) > forvar234)))))
        begin
          for (forvar261 = (1'h0); (forvar261 < (2'h3)); forvar261 = (forvar261 + (1'h1)))
            begin
              reg262 <= (-(8'hb6));
            end
          for (forvar263 = (1'h0); (forvar263 < (1'h0)); forvar263 = (forvar263 + (1'h1)))
            begin
              reg264 <= $unsigned(wire231);
              reg265 <= reg254[(3'h4):(1'h0)];
              reg266 <= $signed((&$signed($signed((|reg257)))));
            end
          for (forvar267 = (1'h0); (forvar267 < (3'h4)); forvar267 = (forvar267 + (1'h1)))
            begin
              reg268 <= {wire231};
              reg269 <= wire233[(4'h9):(3'h7)];
              reg270 <= $signed((-(forvar235[(4'h8):(3'h6)] ^~ forvar253[(5'h14):(5'h14)])));
            end
          reg271 <= {(!(wire230 ?
                  ($unsigned((8'hb4)) == $signed(wire230)) : wire228[(4'h9):(4'h8)])),
              (($signed($unsigned(reg264)) - $signed((8'hbf))) >= $unsigned($signed(reg260)))};
        end
      else
        begin
          reg261 = {(8'ha1), reg271};
        end
      reg272 <= reg245;
    end
  assign wire273 = (8'hb5);
  assign wire274 = (((|$unsigned((^~(8'had)))) - ((reg240 ?
                           reg255 : reg262) << (~^{reg262}))) ?
                       ((((8'hb9) ~^ reg238) & (~^(~^reg248))) <<< $signed((~^(^~wire273)))) : (wire226[(1'h0):(1'h0)] > ($unsigned({reg272,
                           reg238}) + (8'ha1))));
  assign wire275 = reg270;
  assign wire276 = $signed(reg262);
  assign wire277 = (|$signed({{$signed((8'hbb)), reg265[(4'h9):(2'h2)]},
                       (+(reg271 ? wire229 : (8'hbf)))}));
  assign wire278 = ($unsigned((^(~&reg271))) <<< reg259[(2'h3):(1'h0)]);
  always
    @(posedge clk) begin
      for (forvar279 = (1'h0); (forvar279 < (3'h4)); forvar279 = (forvar279 + (1'h1)))
        begin
          for (forvar280 = (1'h0); (forvar280 < (3'h4)); forvar280 = (forvar280 + (1'h1)))
            begin
              reg281 = reg255[(2'h3):(1'h1)];
              reg282 <= forvar279[(3'h6):(2'h2)];
              reg283 <= {(reg255 <= $unsigned($unsigned((~|reg250)))),
                  ($signed((~|(~wire227))) > reg259[(2'h3):(1'h0)])};
            end
        end
    end
  assign wire284 = (&reg283);
  assign wire285 = reg242;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module171
#(parameter param221 = ((((((8'haa) ? (8'hb6) : (8'had)) == ((7'h44) != (7'h41))) ? ({(8'h9f)} ? {(7'h43), (8'had)} : (-(8'hb9))) : (((8'ha9) - (8'hab)) - ((8'ha0) ? (8'hbc) : (8'h9f)))) > ((((8'hbd) || (8'hbc)) << ((8'h9f) ? (8'hbe) : (8'ha7))) ~^ (^~{(8'h9d), (8'hb2)}))) < {(((^(8'ha3)) ^~ {(7'h40)}) || ((&(8'ha1)) - {(8'hbe)}))}), 
parameter param222 = (!(((param221 ? param221 : (param221 ? param221 : param221)) << ((param221 < param221) ? {param221} : param221)) == ((+(param221 ? param221 : param221)) ~^ ((param221 || param221) >> (param221 ? param221 : param221))))))
(y, clk, wire176, wire175, wire174, wire173, wire172);
  output wire [(32'h1b6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(5'h11):(1'h0)] wire176;
  input wire signed [(3'h6):(1'h0)] wire175;
  input wire signed [(5'h15):(1'h0)] wire174;
  input wire [(5'h13):(1'h0)] wire173;
  input wire [(4'hc):(1'h0)] wire172;
  wire [(2'h3):(1'h0)] wire220;
  wire [(4'h8):(1'h0)] wire219;
  wire [(3'h4):(1'h0)] wire218;
  wire [(4'hc):(1'h0)] wire217;
  wire [(3'h5):(1'h0)] wire216;
  wire [(3'h5):(1'h0)] wire215;
  wire [(4'hc):(1'h0)] wire214;
  wire [(5'h12):(1'h0)] wire213;
  wire signed [(4'hb):(1'h0)] wire212;
  wire signed [(3'h5):(1'h0)] wire185;
  wire [(5'h15):(1'h0)] wire184;
  wire signed [(4'h8):(1'h0)] wire183;
  wire signed [(5'h10):(1'h0)] wire182;
  wire signed [(3'h7):(1'h0)] wire181;
  wire signed [(4'h9):(1'h0)] wire180;
  wire [(4'hb):(1'h0)] wire179;
  wire [(5'h14):(1'h0)] wire178;
  wire signed [(5'h15):(1'h0)] wire177;
  reg signed [(3'h5):(1'h0)] reg211 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg210 = (1'h0);
  reg [(3'h4):(1'h0)] reg208 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg206 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg204 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg203 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg200 = (1'h0);
  reg [(3'h5):(1'h0)] reg195 = (1'h0);
  reg [(4'hd):(1'h0)] reg193 = (1'h0);
  reg [(5'h14):(1'h0)] reg192 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg188 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg209 = (1'h0);
  reg [(5'h13):(1'h0)] reg207 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg205 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar202 = (1'h0);
  reg [(4'h9):(1'h0)] reg201 = (1'h0);
  reg [(3'h4):(1'h0)] forvar199 = (1'h0);
  reg [(3'h7):(1'h0)] reg198 = (1'h0);
  reg [(5'h15):(1'h0)] reg197 = (1'h0);
  reg [(4'ha):(1'h0)] reg196 = (1'h0);
  reg [(2'h2):(1'h0)] forvar194 = (1'h0);
  reg signed [(4'he):(1'h0)] reg191 = (1'h0);
  reg signed [(4'he):(1'h0)] reg190 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar189 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar187 = (1'h0);
  reg [(5'h11):(1'h0)] forvar186 = (1'h0);
  assign y = {wire220,
                 wire219,
                 wire218,
                 wire217,
                 wire216,
                 wire215,
                 wire214,
                 wire213,
                 wire212,
                 wire185,
                 wire184,
                 wire183,
                 wire182,
                 wire181,
                 wire180,
                 wire179,
                 wire178,
                 wire177,
                 reg211,
                 reg210,
                 reg208,
                 reg206,
                 reg204,
                 reg203,
                 reg200,
                 reg195,
                 reg193,
                 reg192,
                 reg188,
                 reg209,
                 reg207,
                 reg205,
                 forvar202,
                 reg201,
                 forvar199,
                 reg198,
                 reg197,
                 reg196,
                 forvar194,
                 reg191,
                 reg190,
                 forvar189,
                 forvar187,
                 forvar186,
                 (1'h0)};
  assign wire177 = $unsigned(wire173);
  assign wire178 = wire175[(1'h0):(1'h0)];
  assign wire179 = wire174[(2'h2):(1'h0)];
  assign wire180 = $unsigned(wire175);
  assign wire181 = ((wire178 ?
                       $signed(wire178) : $signed((wire177[(4'ha):(2'h2)] <<< (wire173 * wire176)))) > $unsigned(($signed((wire175 ?
                           wire172 : wire172)) ?
                       $signed(wire173[(5'h12):(3'h4)]) : wire172[(2'h3):(1'h1)])));
  assign wire182 = $signed((~|wire178));
  assign wire183 = $signed(wire177[(4'h9):(1'h0)]);
  assign wire184 = ((~($signed({(8'hbd)}) ^ wire181[(2'h2):(1'h0)])) ?
                       (~&$unsigned(((wire177 ?
                           wire175 : wire176) == $signed(wire175)))) : wire174);
  assign wire185 = $unsigned($unsigned($signed({wire174, $signed((8'hb5))})));
  always
    @(posedge clk) begin
      for (forvar186 = (1'h0); (forvar186 < (1'h1)); forvar186 = (forvar186 + (1'h1)))
        begin
          for (forvar187 = (1'h0); (forvar187 < (1'h0)); forvar187 = (forvar187 + (1'h1)))
            begin
              reg188 <= wire178;
            end
          for (forvar189 = (1'h0); (forvar189 < (1'h0)); forvar189 = (forvar189 + (1'h1)))
            begin
              reg190 = (^~$signed(((forvar187 ?
                      forvar187 : (wire175 ? wire179 : forvar186)) ?
                  $unsigned({wire180}) : wire181[(3'h5):(1'h1)])));
              reg191 = wire177;
              reg192 <= wire183;
              reg193 <= wire174[(4'hc):(3'h6)];
            end
          for (forvar194 = (1'h0); (forvar194 < (3'h4)); forvar194 = (forvar194 + (1'h1)))
            begin
              reg195 <= ($signed(((+((7'h40) ? wire175 : (8'hbc))) ?
                  wire183 : $unsigned(reg190))) ~^ forvar189);
              reg196 = $unsigned($unsigned($signed((wire183 >> $unsigned(wire184)))));
              reg197 = $unsigned(wire174[(4'hb):(4'h8)]);
              reg198 = reg193;
            end
          for (forvar199 = (1'h0); (forvar199 < (2'h2)); forvar199 = (forvar199 + (1'h1)))
            begin
              reg200 <= wire173;
              reg201 = reg190[(3'h7):(3'h4)];
            end
        end
      for (forvar202 = (1'h0); (forvar202 < (1'h0)); forvar202 = (forvar202 + (1'h1)))
        begin
          if ($signed(($signed(({forvar189,
              reg190} < $unsigned(reg198))) <<< reg201[(1'h0):(1'h0)])))
            begin
              reg203 <= $unsigned(forvar194[(2'h2):(2'h2)]);
              reg204 <= {($unsigned((-((8'hb1) ^ (8'ha1)))) == ($signed({forvar199,
                          (8'hb3)}) ?
                      $unsigned($signed(wire185)) : $unsigned(wire184[(3'h6):(2'h2)])))};
            end
          else
            begin
              reg203 <= $unsigned(((|($unsigned(wire185) >> forvar194[(2'h2):(1'h0)])) == (reg195[(2'h2):(2'h2)] <<< $unsigned((~|(8'hbd))))));
              reg205 = (8'hb7);
              reg206 <= (wire181 ?
                  $unsigned((-($unsigned(wire175) >>> $signed(reg188)))) : (8'hb7));
              reg207 = wire185;
              reg208 <= $signed($unsigned((((wire172 ? (8'hbb) : forvar186) ?
                  ((8'haf) + wire177) : $signed((8'ha9))) | (^~$signed(forvar194)))));
            end
        end
      reg209 = $unsigned(($signed({reg196}) ?
          ($unsigned($unsigned((8'hb4))) ?
              wire173[(3'h7):(3'h4)] : {wire176[(4'hc):(3'h7)],
                  $signed((8'hbd))}) : $unsigned((&(&wire172)))));
      reg210 <= reg193[(3'h5):(2'h2)];
      reg211 <= wire176[(4'hd):(1'h0)];
    end
  assign wire212 = (|reg208);
  assign wire213 = wire179;
  assign wire214 = (wire177[(5'h14):(4'hb)] ?
                       wire213 : {$unsigned($signed($unsigned(wire172)))});
  assign wire215 = wire180;
  assign wire216 = $unsigned($signed({$signed({reg195, wire173})}));
  assign wire217 = reg204[(2'h2):(1'h0)];
  assign wire218 = (8'hbe);
  assign wire219 = ($unsigned(wire213) ^~ (&$unsigned($signed(wire178[(4'hf):(4'he)]))));
  assign wire220 = (~|($unsigned((wire173[(4'hd):(3'h7)] ?
                       $signed(wire173) : reg188)) || reg204));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module121
#(parameter param153 = {(!(|({(8'h9e)} >> ((8'hb7) <<< (8'ha5)))))})
(y, clk, wire125, wire124, wire123, wire122);
  output wire [(32'h116):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h9):(1'h0)] wire125;
  input wire [(3'h4):(1'h0)] wire124;
  input wire signed [(3'h6):(1'h0)] wire123;
  input wire [(3'h5):(1'h0)] wire122;
  wire [(3'h4):(1'h0)] wire152;
  wire [(2'h2):(1'h0)] wire151;
  wire [(4'he):(1'h0)] wire150;
  wire signed [(4'ha):(1'h0)] wire149;
  wire signed [(3'h5):(1'h0)] wire148;
  wire [(5'h12):(1'h0)] wire147;
  wire [(2'h2):(1'h0)] wire146;
  wire signed [(4'hc):(1'h0)] wire145;
  wire signed [(3'h5):(1'h0)] wire144;
  wire [(5'h12):(1'h0)] wire143;
  wire [(3'h4):(1'h0)] wire142;
  wire [(4'hf):(1'h0)] wire141;
  wire [(4'ha):(1'h0)] wire140;
  wire [(5'h11):(1'h0)] wire139;
  wire signed [(3'h4):(1'h0)] wire138;
  wire signed [(5'h13):(1'h0)] wire137;
  wire [(5'h10):(1'h0)] wire136;
  wire [(5'h10):(1'h0)] wire135;
  wire [(2'h2):(1'h0)] wire134;
  wire signed [(4'hd):(1'h0)] wire133;
  wire [(3'h6):(1'h0)] wire132;
  wire signed [(4'hf):(1'h0)] wire131;
  reg signed [(5'h11):(1'h0)] reg130 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg129 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg128 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg127 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar126 = (1'h0);
  assign y = {wire152,
                 wire151,
                 wire150,
                 wire149,
                 wire148,
                 wire147,
                 wire146,
                 wire145,
                 wire144,
                 wire143,
                 wire142,
                 wire141,
                 wire140,
                 wire139,
                 wire138,
                 wire137,
                 wire136,
                 wire135,
                 wire134,
                 wire133,
                 wire132,
                 wire131,
                 reg130,
                 reg129,
                 reg128,
                 reg127,
                 forvar126,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar126 = (1'h0); (forvar126 < (3'h4)); forvar126 = (forvar126 + (1'h1)))
        begin
          reg127 <= (8'hb2);
          reg128 <= ($signed(wire122[(1'h1):(1'h1)]) == ($signed((wire122[(2'h2):(1'h1)] <<< $signed(wire123))) >>> $unsigned((wire124[(1'h1):(1'h0)] ?
              (!wire125) : $signed((8'hab))))));
        end
      reg129 <= $signed(((~(~|$unsigned(wire123))) == (wire125[(3'h5):(1'h0)] ?
          $signed($unsigned(wire123)) : {(wire122 ? reg127 : wire124)})));
      reg130 <= $unsigned({(wire123[(3'h4):(1'h1)] ~^ $signed(reg129))});
    end
  assign wire131 = (($signed(wire125) ?
                       reg128[(1'h1):(1'h1)] : (!({reg127, reg127} + (wire122 ?
                           reg130 : reg130)))) & reg129[(2'h3):(2'h3)]);
  assign wire132 = (((wire122 || wire131) == (($signed(reg127) ?
                           $unsigned(reg128) : $unsigned(wire122)) == reg129)) ?
                       $signed((~^((reg130 ?
                           wire124 : reg129) >= wire122))) : (!(((!wire123) ^ reg127) + $signed((wire125 >> wire131)))));
  assign wire133 = ((((reg128 <<< reg129) ?
                       (!$signed(wire123)) : (~wire131)) ^ ((wire125[(3'h6):(1'h0)] == (^wire132)) == {wire122})) >= (reg127[(3'h6):(3'h4)] >>> $signed((reg129 | $unsigned(reg127)))));
  assign wire134 = wire132[(3'h5):(1'h0)];
  assign wire135 = ($unsigned($unsigned((-(wire133 ?
                       wire133 : reg127)))) * {(+reg130[(4'he):(4'hb)]),
                       wire122});
  assign wire136 = wire134[(2'h2):(2'h2)];
  assign wire137 = (wire135[(5'h10):(4'h9)] || $signed(wire136));
  assign wire138 = {$signed(({wire125} | (((8'had) ?
                           wire133 : (8'ha1)) & {reg130, wire132})))};
  assign wire139 = (wire123 ?
                       (8'ha5) : $unsigned($unsigned($unsigned((wire134 ?
                           wire138 : (8'hb1))))));
  assign wire140 = (wire134[(2'h2):(1'h0)] && $unsigned($signed(reg130)));
  assign wire141 = $unsigned(wire139[(5'h10):(1'h0)]);
  assign wire142 = $unsigned(wire136[(2'h2):(1'h1)]);
  assign wire143 = ({(((|reg128) ?
                           (reg128 ?
                               wire141 : wire134) : wire138[(1'h0):(1'h0)]) | (~(|wire141))),
                       $unsigned($signed((reg127 == wire138)))} + wire123[(3'h5):(2'h2)]);
  assign wire144 = (|(((wire140 ^~ $signed(wire124)) ?
                       (+{wire133}) : ((wire142 == wire124) ?
                           (wire125 >>> (8'ha6)) : (wire139 ?
                               (8'ha5) : reg127))) && wire138[(2'h3):(1'h1)]));
  assign wire145 = {{(+$unsigned($signed(wire122)))}, wire142};
  assign wire146 = ($signed((8'h9e)) <= (wire139 & wire136[(4'ha):(3'h6)]));
  assign wire147 = wire136[(4'hc):(2'h3)];
  assign wire148 = (~^$signed(wire125[(4'h9):(3'h6)]));
  assign wire149 = $unsigned($unsigned(($signed((~^wire144)) << $unsigned($signed(wire146)))));
  assign wire150 = $unsigned($signed(wire148));
  assign wire151 = (^wire145);
  assign wire152 = wire147;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module84
#(parameter param118 = (((8'hb7) | {((8'h9f) && (8'haf))}) - (~^(({(8'hb2)} >> (|(8'ha4))) * (((8'hb1) << (8'hb0)) || ((7'h44) ? (8'hbd) : (8'ha0)))))))
(y, clk, wire89, wire88, wire87, wire86, wire85);
  output wire [(32'h163):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h10):(1'h0)] wire89;
  input wire signed [(2'h3):(1'h0)] wire88;
  input wire [(3'h5):(1'h0)] wire87;
  input wire signed [(4'hd):(1'h0)] wire86;
  input wire [(5'h11):(1'h0)] wire85;
  wire [(4'ha):(1'h0)] wire102;
  wire [(3'h7):(1'h0)] wire101;
  wire signed [(4'hf):(1'h0)] wire100;
  wire signed [(4'h9):(1'h0)] wire99;
  wire [(4'he):(1'h0)] wire98;
  wire [(5'h13):(1'h0)] wire97;
  wire [(4'hd):(1'h0)] wire96;
  wire signed [(5'h11):(1'h0)] wire95;
  wire [(5'h12):(1'h0)] wire94;
  wire [(4'h8):(1'h0)] wire93;
  wire signed [(5'h13):(1'h0)] wire92;
  wire [(4'he):(1'h0)] wire91;
  wire signed [(4'h9):(1'h0)] wire90;
  reg [(4'hc):(1'h0)] reg115 = (1'h0);
  reg [(4'ha):(1'h0)] reg113 = (1'h0);
  reg [(5'h14):(1'h0)] reg111 = (1'h0);
  reg [(5'h11):(1'h0)] reg109 = (1'h0);
  reg [(5'h14):(1'h0)] reg108 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg107 = (1'h0);
  reg [(4'hd):(1'h0)] reg117 = (1'h0);
  reg [(4'hf):(1'h0)] forvar116 = (1'h0);
  reg signed [(4'h8):(1'h0)] reg114 = (1'h0);
  reg [(5'h12):(1'h0)] forvar112 = (1'h0);
  reg signed [(4'he):(1'h0)] reg110 = (1'h0);
  reg [(3'h7):(1'h0)] forvar106 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg105 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar104 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar103 = (1'h0);
  assign y = {wire102,
                 wire101,
                 wire100,
                 wire99,
                 wire98,
                 wire97,
                 wire96,
                 wire95,
                 wire94,
                 wire93,
                 wire92,
                 wire91,
                 wire90,
                 reg115,
                 reg113,
                 reg111,
                 reg109,
                 reg108,
                 reg107,
                 reg117,
                 forvar116,
                 reg114,
                 forvar112,
                 reg110,
                 forvar106,
                 reg105,
                 forvar104,
                 forvar103,
                 (1'h0)};
  assign wire90 = wire88[(2'h3):(1'h0)];
  assign wire91 = $unsigned(($unsigned(((^~wire89) + wire86[(1'h0):(1'h0)])) ^ $unsigned(wire88[(2'h2):(2'h2)])));
  assign wire92 = wire87;
  assign wire93 = (|wire87);
  assign wire94 = (-wire88);
  assign wire95 = wire85[(4'hd):(4'hd)];
  assign wire96 = (^(($unsigned($signed(wire90)) ?
                          ((wire88 ? wire87 : wire86) ?
                              (|wire92) : (wire87 >> wire90)) : (8'hbd)) ?
                      (wire93 ?
                          $signed($signed(wire95)) : $unsigned((wire87 ^ wire94))) : wire88[(2'h2):(1'h1)]));
  assign wire97 = wire88;
  assign wire98 = wire89;
  assign wire99 = wire89;
  assign wire100 = (^~(~{wire91[(2'h2):(2'h2)]}));
  assign wire101 = wire86;
  assign wire102 = wire98[(1'h1):(1'h1)];
  always
    @(posedge clk) begin
      for (forvar103 = (1'h0); (forvar103 < (1'h0)); forvar103 = (forvar103 + (1'h1)))
        begin
          for (forvar104 = (1'h0); (forvar104 < (2'h3)); forvar104 = (forvar104 + (1'h1)))
            begin
              reg105 = $signed(wire94[(5'h10):(4'h9)]);
            end
          for (forvar106 = (1'h0); (forvar106 < (1'h0)); forvar106 = (forvar106 + (1'h1)))
            begin
              reg107 <= (($unsigned(({wire100, wire88} + {reg105, wire98})) ?
                  $signed(((|wire89) > wire92)) : (~|((!wire98) ?
                      forvar104[(2'h3):(1'h0)] : (reg105 ?
                          wire90 : wire97)))) - (wire93 ?
                  $signed(((8'hbd) ?
                      $signed(wire87) : (~&wire91))) : $signed((!wire101))));
              reg108 <= wire97[(5'h10):(4'hb)];
              reg109 <= $unsigned(((-wire93) + (!{$unsigned(wire86)})));
              reg110 = wire96;
              reg111 <= {$unsigned((|$signed(((7'h43) ? wire88 : reg108))))};
            end
          for (forvar112 = (1'h0); (forvar112 < (3'h4)); forvar112 = (forvar112 + (1'h1)))
            begin
              reg113 <= (-wire102[(4'h8):(1'h1)]);
              reg114 = ((wire97 ?
                      wire93[(3'h5):(2'h2)] : ((&$unsigned(reg113)) ?
                          $signed((~&wire101)) : forvar103[(3'h7):(3'h6)])) ?
                  ((wire90 ?
                          (wire101 ?
                              reg113 : (-forvar112)) : reg113[(2'h3):(2'h2)]) ?
                      (wire93[(2'h3):(2'h2)] ?
                          ($signed(wire91) ?
                              reg105 : $unsigned(wire99)) : $unsigned((wire91 - wire92))) : wire101[(3'h7):(3'h5)]) : (wire92[(5'h11):(1'h1)] ?
                      $unsigned(forvar106[(3'h6):(2'h3)]) : {{(wire99 ?
                                  (8'hb8) : reg109),
                              (~forvar104)}}));
            end
          reg115 <= reg107;
          for (forvar116 = (1'h0); (forvar116 < (2'h2)); forvar116 = (forvar116 + (1'h1)))
            begin
              reg117 = $signed(((reg115 ?
                      $unsigned((wire90 ? wire92 : wire97)) : wire102) ?
                  forvar116[(4'ha):(4'h9)] : forvar104));
            end
        end
    end
endmodule