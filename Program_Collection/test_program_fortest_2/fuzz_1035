(* use_dsp48="no" *) (* use_dsp="no" *) module top  (y, clk, wire0, wire1, wire2, wire3, wire4);
  output wire [(32'h2c6):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'he):(1'h0)] wire0;
  input wire [(5'h10):(1'h0)] wire1;
  input wire [(3'h6):(1'h0)] wire2;
  input wire [(4'hd):(1'h0)] wire3;
  input wire [(4'h9):(1'h0)] wire4;
  wire [(5'h11):(1'h0)] wire258;
  wire [(4'hb):(1'h0)] wire257;
  wire [(3'h5):(1'h0)] wire256;
  wire [(5'h10):(1'h0)] wire5;
  wire [(5'h10):(1'h0)] wire54;
  wire signed [(5'h12):(1'h0)] wire251;
  wire [(4'hb):(1'h0)] wire253;
  wire signed [(3'h4):(1'h0)] wire254;
  reg [(3'h4):(1'h0)] reg52 = (1'h0);
  reg [(2'h2):(1'h0)] reg51 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg50 = (1'h0);
  reg [(4'h8):(1'h0)] reg46 = (1'h0);
  reg [(2'h3):(1'h0)] reg45 = (1'h0);
  reg [(4'hb):(1'h0)] reg43 = (1'h0);
  reg signed [(4'he):(1'h0)] reg42 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg41 = (1'h0);
  reg [(2'h2):(1'h0)] reg34 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg32 = (1'h0);
  reg [(5'h13):(1'h0)] reg29 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg27 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg25 = (1'h0);
  reg [(5'h14):(1'h0)] reg22 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg21 = (1'h0);
  reg [(5'h10):(1'h0)] reg18 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg16 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg13 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg53 = (1'h0);
  reg [(3'h7):(1'h0)] reg49 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar48 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg47 = (1'h0);
  reg [(5'h15):(1'h0)] forvar44 = (1'h0);
  reg [(3'h5):(1'h0)] reg40 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar39 = (1'h0);
  reg [(2'h2):(1'h0)] forvar38 = (1'h0);
  reg [(4'hc):(1'h0)] reg37 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg36 = (1'h0);
  reg [(5'h13):(1'h0)] forvar35 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg33 = (1'h0);
  reg [(5'h13):(1'h0)] reg31 = (1'h0);
  reg [(4'ha):(1'h0)] reg30 = (1'h0);
  reg [(4'ha):(1'h0)] reg28 = (1'h0);
  reg [(5'h12):(1'h0)] forvar26 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar24 = (1'h0);
  reg [(4'hd):(1'h0)] forvar23 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg20 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg19 = (1'h0);
  reg [(5'h13):(1'h0)] forvar17 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg15 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg14 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar12 = (1'h0);
  reg [(4'hd):(1'h0)] reg11 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg10 = (1'h0);
  reg [(4'h9):(1'h0)] reg9 = (1'h0);
  reg [(4'he):(1'h0)] reg8 = (1'h0);
  reg [(4'hb):(1'h0)] forvar7 = (1'h0);
  reg [(5'h14):(1'h0)] forvar6 = (1'h0);
  assign y = {wire258,
                 wire257,
                 wire256,
                 wire5,
                 wire54,
                 wire251,
                 wire253,
                 wire254,
                 reg52,
                 reg51,
                 reg50,
                 reg46,
                 reg45,
                 reg43,
                 reg42,
                 reg41,
                 reg34,
                 reg32,
                 reg29,
                 reg27,
                 reg25,
                 reg22,
                 reg21,
                 reg18,
                 reg16,
                 reg13,
                 reg53,
                 reg49,
                 forvar48,
                 reg47,
                 forvar44,
                 reg40,
                 forvar39,
                 forvar38,
                 reg37,
                 reg36,
                 forvar35,
                 reg33,
                 reg31,
                 reg30,
                 reg28,
                 forvar26,
                 forvar24,
                 forvar23,
                 reg20,
                 reg19,
                 forvar17,
                 reg15,
                 reg14,
                 forvar12,
                 reg11,
                 reg10,
                 reg9,
                 reg8,
                 forvar7,
                 forvar6,
                 (1'h0)};
  assign wire5 = wire4[(4'h9):(2'h2)];
  always
    @(posedge clk) begin
      for (forvar6 = (1'h0); (forvar6 < (2'h2)); forvar6 = (forvar6 + (1'h1)))
        begin
          for (forvar7 = (1'h0); (forvar7 < (1'h1)); forvar7 = (forvar7 + (1'h1)))
            begin
              reg8 = wire4;
              reg9 = ($unsigned(((reg8[(4'h8):(2'h3)] ?
                          (wire2 ? wire2 : forvar7) : $unsigned(wire4)) ?
                      wire4[(4'h8):(3'h7)] : wire0[(3'h4):(1'h1)])) ?
                  wire0[(3'h7):(1'h0)] : $unsigned($signed((^$unsigned(wire5)))));
              reg10 = wire1;
              reg11 = wire1[(5'h10):(2'h3)];
            end
          for (forvar12 = (1'h0); (forvar12 < (1'h1)); forvar12 = (forvar12 + (1'h1)))
            begin
              reg13 <= {wire1, reg8[(4'hc):(4'hc)]};
              reg14 = (~^wire1[(3'h4):(3'h4)]);
              reg15 = $unsigned(wire1);
              reg16 <= (($signed((wire1 * {wire1,
                  (8'had)})) <= wire0[(2'h2):(1'h0)]) >>> ($unsigned((-$unsigned((8'h9e)))) ?
                  (+$unsigned(reg15[(4'h8):(3'h4)])) : $signed(wire0)));
            end
          for (forvar17 = (1'h0); (forvar17 < (2'h3)); forvar17 = (forvar17 + (1'h1)))
            begin
              reg18 <= (reg15 - $unsigned($signed($signed((wire0 ?
                  reg15 : reg15)))));
              reg19 = $signed((&$signed({wire4})));
              reg20 = reg9;
              reg21 <= {{(~&reg19)}};
              reg22 <= $unsigned((~$signed(((reg19 ^~ (8'h9c)) != ((8'hb3) >= reg14)))));
            end
        end
      for (forvar23 = (1'h0); (forvar23 < (2'h3)); forvar23 = (forvar23 + (1'h1)))
        begin
          for (forvar24 = (1'h0); (forvar24 < (2'h3)); forvar24 = (forvar24 + (1'h1)))
            begin
              reg25 <= $signed((reg8 * $signed(forvar12[(1'h0):(1'h0)])));
            end
          for (forvar26 = (1'h0); (forvar26 < (1'h0)); forvar26 = (forvar26 + (1'h1)))
            begin
              reg27 <= (&((8'ha3) ?
                  $unsigned(forvar7[(3'h4):(3'h4)]) : wire4[(3'h4):(2'h2)]));
              reg28 = (8'hb7);
              reg29 <= (+$signed((forvar12[(2'h2):(2'h2)] < ({reg19} >>> $unsigned(forvar6)))));
            end
          if ((|{($unsigned({forvar26, reg15}) ?
                  (&(^forvar24)) : {$unsigned(reg9)})}))
            begin
              reg30 = ($unsigned({((reg11 ~^ reg27) ?
                      ((7'h44) ^~ reg27) : (8'haf)),
                  ($signed(reg20) >> (reg11 ? reg27 : forvar26))}) < reg11);
              reg31 = (-(-reg16));
              reg32 <= (($signed($unsigned((~|reg9))) && reg20[(4'h9):(4'h9)]) <<< $unsigned((8'ha1)));
              reg33 = reg19[(1'h1):(1'h0)];
            end
          else
            begin
              reg32 <= forvar6[(5'h13):(4'he)];
              reg34 <= {(-wire5[(4'hf):(4'h9)]),
                  $signed(((~^(reg8 ?
                      reg33 : forvar6)) ^ (reg19[(4'h8):(1'h0)] > ((8'hab) & reg8))))};
            end
          for (forvar35 = (1'h0); (forvar35 < (2'h2)); forvar35 = (forvar35 + (1'h1)))
            begin
              reg36 = {reg18, wire0};
              reg37 = (wire3[(4'h8):(3'h6)] ?
                  (~(~$unsigned($unsigned(reg11)))) : (((reg28 + (wire1 ^ reg28)) >>> (!reg28[(3'h4):(2'h2)])) ^~ (~^wire0)));
            end
        end
      for (forvar38 = (1'h0); (forvar38 < (1'h0)); forvar38 = (forvar38 + (1'h1)))
        begin
          for (forvar39 = (1'h0); (forvar39 < (2'h2)); forvar39 = (forvar39 + (1'h1)))
            begin
              reg40 = reg25[(1'h1):(1'h0)];
              reg41 <= (!$signed((~|reg8)));
              reg42 <= ((~|(8'hb8)) ?
                  $unsigned(reg11[(1'h1):(1'h1)]) : ({reg19} ?
                      forvar24 : $signed($unsigned($unsigned(reg14)))));
            end
          reg43 <= (reg11 ? reg33[(1'h1):(1'h1)] : $unsigned(reg29));
          for (forvar44 = (1'h0); (forvar44 < (2'h3)); forvar44 = (forvar44 + (1'h1)))
            begin
              reg45 <= (^($unsigned(((wire2 ?
                      reg18 : reg13) >= ((8'ha6) ^~ reg43))) ?
                  ({reg29[(4'hb):(3'h6)],
                      reg33} >> wire0) : reg27[(2'h3):(2'h3)]));
              reg46 <= reg41[(2'h3):(2'h3)];
              reg47 = (reg8 && ((reg33 - wire2) <<< reg13[(2'h2):(1'h0)]));
            end
          for (forvar48 = (1'h0); (forvar48 < (1'h0)); forvar48 = (forvar48 + (1'h1)))
            begin
              reg49 = (|($unsigned(forvar39[(2'h2):(1'h0)]) ~^ (wire4[(2'h3):(2'h2)] >>> wire1)));
              reg50 <= reg25[(3'h5):(3'h5)];
              reg51 <= ({((reg45 ?
                          forvar7 : forvar44[(3'h7):(2'h2)]) ^~ $signed($unsigned(reg33))),
                      ((|(-reg21)) ? (~^wire0) : forvar39)} ?
                  (reg29[(4'h8):(3'h4)] >> forvar12) : ((^forvar39[(4'he):(2'h3)]) ?
                      {{{reg10},
                              reg16}} : ((8'hb9) && ((-wire4) - (forvar44 & (8'hb4))))));
              reg52 <= $unsigned(((~forvar44) < $signed((~&(wire2 ?
                  reg29 : reg34)))));
              reg53 = ((!(~|$signed(reg18[(1'h1):(1'h1)]))) > $signed((8'hbc)));
            end
        end
    end
  assign wire54 = reg18[(3'h6):(2'h3)];
  module55 #() modinst252 (.wire60(wire0), .clk(clk), .wire56(reg18), .wire58(reg21), .wire57(reg27), .y(wire251), .wire59(wire5));
  assign wire253 = $signed((~|((7'h43) < (~^$unsigned(reg25)))));
  module83 #() modinst255 (.wire87(reg18), .clk(clk), .y(wire254), .wire84(reg42), .wire85(wire1), .wire86(reg43));
  assign wire256 = (~&(8'hbe));
  assign wire257 = $unsigned($signed(((!$unsigned(reg51)) ?
                       $signed({wire2}) : {$signed(reg45), wire3})));
  assign wire258 = (wire0[(1'h1):(1'h1)] ?
                       (($unsigned((~^wire1)) ?
                               (reg25[(4'h9):(3'h6)] ?
                                   {reg41} : (reg42 ?
                                       reg13 : reg50)) : ((reg52 ?
                                   (8'h9c) : reg41) && (~&(8'hbf)))) ?
                           wire254[(3'h4):(3'h4)] : $unsigned({(~&reg52)})) : $unsigned((^reg21)));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module55
#(parameter param249 = (^~{(^~(((8'ha9) + (7'h40)) ? (~(8'hb9)) : (~&(7'h41))))}), 
parameter param250 = (param249 ? param249 : ((~&((8'hba) ^~ (!param249))) < (^~(~&(param249 ? param249 : param249))))))
(y, clk, wire56, wire57, wire58, wire59, wire60);
  output wire [(32'h1c3):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h10):(1'h0)] wire56;
  input wire [(4'h8):(1'h0)] wire57;
  input wire [(4'hf):(1'h0)] wire58;
  input wire [(3'h7):(1'h0)] wire59;
  input wire [(4'he):(1'h0)] wire60;
  wire [(3'h6):(1'h0)] wire248;
  wire [(5'h11):(1'h0)] wire247;
  wire signed [(3'h7):(1'h0)] wire246;
  wire [(4'hf):(1'h0)] wire245;
  wire signed [(4'hf):(1'h0)] wire108;
  wire [(5'h11):(1'h0)] wire81;
  wire signed [(4'hf):(1'h0)] wire82;
  wire [(5'h11):(1'h0)] wire96;
  wire signed [(4'h8):(1'h0)] wire157;
  wire [(4'hc):(1'h0)] wire159;
  wire signed [(4'he):(1'h0)] wire160;
  wire signed [(2'h2):(1'h0)] wire161;
  wire signed [(5'h13):(1'h0)] wire162;
  wire [(3'h5):(1'h0)] wire243;
  reg signed [(5'h13):(1'h0)] reg62 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg65 = (1'h0);
  reg [(4'hd):(1'h0)] reg67 = (1'h0);
  reg [(5'h12):(1'h0)] reg69 = (1'h0);
  reg [(5'h14):(1'h0)] reg71 = (1'h0);
  reg [(5'h14):(1'h0)] reg74 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg78 = (1'h0);
  reg [(4'hb):(1'h0)] reg79 = (1'h0);
  reg [(4'ha):(1'h0)] reg80 = (1'h0);
  reg [(4'h9):(1'h0)] reg77 = (1'h0);
  reg [(3'h7):(1'h0)] forvar76 = (1'h0);
  reg [(4'h8):(1'h0)] reg75 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar73 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg72 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar70 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg68 = (1'h0);
  reg [(4'hc):(1'h0)] forvar66 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar64 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar63 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar61 = (1'h0);
  assign y = {wire248,
                 wire247,
                 wire246,
                 wire245,
                 wire108,
                 wire81,
                 wire82,
                 wire96,
                 wire157,
                 wire159,
                 wire160,
                 wire161,
                 wire162,
                 wire243,
                 reg62,
                 reg65,
                 reg67,
                 reg69,
                 reg71,
                 reg74,
                 reg78,
                 reg79,
                 reg80,
                 reg77,
                 forvar76,
                 reg75,
                 forvar73,
                 reg72,
                 forvar70,
                 reg68,
                 forvar66,
                 forvar64,
                 forvar63,
                 forvar61,
                 (1'h0)};
  always
    @(posedge clk) begin
      for (forvar61 = (1'h0); (forvar61 < (1'h0)); forvar61 = (forvar61 + (1'h1)))
        begin
          reg62 <= $unsigned((~&wire60[(1'h0):(1'h0)]));
        end
      for (forvar63 = (1'h0); (forvar63 < (1'h1)); forvar63 = (forvar63 + (1'h1)))
        begin
          for (forvar64 = (1'h0); (forvar64 < (1'h0)); forvar64 = (forvar64 + (1'h1)))
            begin
              reg65 <= ({(($unsigned(wire59) ?
                          $signed(wire59) : wire60[(1'h1):(1'h0)]) ^ $unsigned((wire58 ?
                          reg62 : forvar64)))} ?
                  $unsigned(wire58[(3'h6):(2'h3)]) : ({forvar64[(4'hb):(3'h7)],
                      (7'h41)} | wire60));
            end
          for (forvar66 = (1'h0); (forvar66 < (2'h2)); forvar66 = (forvar66 + (1'h1)))
            begin
              reg67 <= (!(^(~&$unsigned({forvar61}))));
              reg68 = (^~{$signed(forvar66[(4'ha):(1'h1)])});
              reg69 <= (($signed(({forvar64} ^~ $signed(forvar64))) ^~ {((wire59 ^~ reg65) ?
                      wire56[(1'h0):(1'h0)] : (-(8'hba)))}) < $signed((forvar66 ?
                  $signed((^forvar66)) : {(reg67 >= reg68),
                      (forvar61 ^ reg62)})));
            end
        end
      for (forvar70 = (1'h0); (forvar70 < (2'h2)); forvar70 = (forvar70 + (1'h1)))
        begin
          reg71 <= reg65[(1'h0):(1'h0)];
          reg72 = reg67;
        end
      for (forvar73 = (1'h0); (forvar73 < (1'h1)); forvar73 = (forvar73 + (1'h1)))
        begin
          reg74 <= wire56;
          reg75 = forvar63;
          for (forvar76 = (1'h0); (forvar76 < (2'h3)); forvar76 = (forvar76 + (1'h1)))
            begin
              reg77 = $unsigned($signed($signed($signed(reg68))));
              reg78 <= (forvar73[(4'he):(4'h8)] ?
                  ({$unsigned((reg71 | reg74)),
                          (reg67 ~^ wire60[(1'h0):(1'h0)])} ?
                      (~wire56) : $unsigned(wire58)) : {(forvar76[(2'h3):(2'h3)] + $signed(reg69))});
              reg79 <= ($unsigned($unsigned(((~^(8'hba)) ~^ (~^forvar73)))) ?
                  ((({(8'hbf)} ?
                              $unsigned(reg72) : ((8'ha9) ?
                                  forvar61 : forvar70)) ?
                          ((~reg67) * (~^wire57)) : wire59[(3'h7):(3'h6)]) ?
                      reg65 : $unsigned($unsigned(reg75))) : (~&$signed((^(&reg77)))));
            end
        end
      reg80 <= ($signed((~^$signed(reg67[(4'h8):(2'h2)]))) | (wire57 ?
          ($signed((forvar76 ? reg67 : reg67)) && (reg65 ?
              (wire57 <= forvar73) : forvar70)) : $unsigned(reg75)));
    end
  assign wire81 = $unsigned($signed((~&($unsigned(wire57) > (wire57 <= reg78)))));
  assign wire82 = reg79;
  module83 #() modinst97 (.clk(clk), .wire84(reg74), .wire86(reg69), .y(wire96), .wire85(reg67), .wire87(wire57));
  module98 #() modinst109 (.y(wire108), .wire102(wire56), .wire100(wire60), .wire103(wire81), .wire101(reg80), .clk(clk), .wire99(reg67));
  module110 #() modinst158 (wire157, clk, wire58, reg80, wire56, reg78);
  assign wire159 = $signed($unsigned(wire82));
  assign wire160 = ((-wire59[(3'h4):(2'h2)]) ?
                       reg78[(3'h4):(2'h2)] : ((wire108 ?
                           $signed((8'h9f)) : $signed((reg80 ?
                               reg74 : wire157))) ~^ $signed(((~wire81) << wire81[(4'h8):(2'h2)]))));
  assign wire161 = (~^($unsigned((!wire96[(4'hd):(1'h1)])) ?
                       ((8'hb5) ?
                           wire56[(3'h4):(3'h4)] : {(&(8'hbe)),
                               ((8'haf) == reg79)}) : (^~(!(reg67 ?
                           reg67 : wire160)))));
  assign wire162 = reg62[(1'h1):(1'h1)];
  module163 #() modinst244 (wire243, clk, wire157, reg69, wire96, wire82, reg65);
  assign wire245 = ((((~|((8'hbf) ? reg65 : wire82)) >= ($signed(wire82) ?
                           (+wire60) : (wire161 ? reg69 : (8'haa)))) ?
                       reg69[(5'h10):(3'h6)] : reg79) >> ((8'hae) ?
                       {reg80,
                           ((wire81 ?
                               wire159 : (8'hbb)) - $signed(reg69))} : (^~wire108)));
  assign wire246 = {wire162, wire58[(2'h2):(1'h0)]};
  assign wire247 = $unsigned({(~^$unsigned($signed(reg67))),
                       ((wire82 ? ((8'h9f) << reg67) : $unsigned(wire108)) ?
                           (wire81 ~^ (wire57 != wire59)) : (reg79 ?
                               (reg67 ?
                                   wire82 : wire246) : reg67[(2'h3):(1'h0)]))});
  assign wire248 = reg71;
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module163  (y, clk, wire168, wire167, wire166, wire165, wire164);
  output wire [(32'h332):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(4'h8):(1'h0)] wire168;
  input wire signed [(5'h12):(1'h0)] wire167;
  input wire signed [(4'h8):(1'h0)] wire166;
  input wire signed [(4'hf):(1'h0)] wire165;
  input wire [(4'ha):(1'h0)] wire164;
  wire signed [(5'h10):(1'h0)] wire242;
  wire signed [(5'h15):(1'h0)] wire241;
  wire signed [(3'h6):(1'h0)] wire240;
  wire [(4'ha):(1'h0)] wire235;
  wire [(4'he):(1'h0)] wire234;
  wire [(4'hc):(1'h0)] wire213;
  wire [(4'h8):(1'h0)] wire212;
  wire signed [(3'h4):(1'h0)] wire211;
  wire [(3'h6):(1'h0)] wire210;
  wire [(4'he):(1'h0)] wire196;
  wire signed [(5'h12):(1'h0)] wire171;
  wire signed [(4'he):(1'h0)] wire170;
  wire [(5'h10):(1'h0)] wire169;
  reg signed [(2'h3):(1'h0)] reg238 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg232 = (1'h0);
  reg [(2'h2):(1'h0)] reg231 = (1'h0);
  reg [(3'h5):(1'h0)] reg229 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg228 = (1'h0);
  reg [(3'h5):(1'h0)] reg227 = (1'h0);
  reg [(4'he):(1'h0)] reg222 = (1'h0);
  reg [(5'h14):(1'h0)] reg220 = (1'h0);
  reg [(3'h6):(1'h0)] reg218 = (1'h0);
  reg [(3'h4):(1'h0)] reg209 = (1'h0);
  reg [(5'h13):(1'h0)] reg207 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg206 = (1'h0);
  reg [(5'h10):(1'h0)] reg205 = (1'h0);
  reg [(5'h14):(1'h0)] reg204 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg202 = (1'h0);
  reg [(4'hd):(1'h0)] reg198 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg194 = (1'h0);
  reg [(2'h3):(1'h0)] reg193 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg189 = (1'h0);
  reg [(4'hf):(1'h0)] reg188 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg186 = (1'h0);
  reg [(4'ha):(1'h0)] reg185 = (1'h0);
  reg [(3'h4):(1'h0)] reg183 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg181 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg178 = (1'h0);
  reg [(3'h5):(1'h0)] reg176 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg239 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg237 = (1'h0);
  reg [(5'h12):(1'h0)] forvar236 = (1'h0);
  reg [(4'h8):(1'h0)] reg233 = (1'h0);
  reg [(4'he):(1'h0)] forvar230 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg226 = (1'h0);
  reg [(2'h3):(1'h0)] reg225 = (1'h0);
  reg signed [(5'h15):(1'h0)] forvar224 = (1'h0);
  reg signed [(3'h4):(1'h0)] forvar223 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar221 = (1'h0);
  reg [(5'h15):(1'h0)] reg219 = (1'h0);
  reg signed [(2'h3):(1'h0)] forvar217 = (1'h0);
  reg [(4'ha):(1'h0)] reg216 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar215 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg214 = (1'h0);
  reg [(4'h8):(1'h0)] forvar208 = (1'h0);
  reg [(4'hc):(1'h0)] reg203 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar201 = (1'h0);
  reg [(4'h9):(1'h0)] reg200 = (1'h0);
  reg [(5'h14):(1'h0)] forvar199 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar197 = (1'h0);
  reg [(4'hc):(1'h0)] reg195 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg192 = (1'h0);
  reg [(4'hd):(1'h0)] reg191 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar190 = (1'h0);
  reg [(5'h14):(1'h0)] forvar187 = (1'h0);
  reg [(2'h2):(1'h0)] forvar184 = (1'h0);
  reg [(3'h4):(1'h0)] reg182 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar180 = (1'h0);
  reg signed [(4'hd):(1'h0)] forvar179 = (1'h0);
  reg [(4'hb):(1'h0)] reg177 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar175 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar174 = (1'h0);
  reg [(4'hb):(1'h0)] reg173 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg172 = (1'h0);
  assign y = {wire242,
                 wire241,
                 wire240,
                 wire235,
                 wire234,
                 wire213,
                 wire212,
                 wire211,
                 wire210,
                 wire196,
                 wire171,
                 wire170,
                 wire169,
                 reg238,
                 reg232,
                 reg231,
                 reg229,
                 reg228,
                 reg227,
                 reg222,
                 reg220,
                 reg218,
                 reg209,
                 reg207,
                 reg206,
                 reg205,
                 reg204,
                 reg202,
                 reg198,
                 reg194,
                 reg193,
                 reg189,
                 reg188,
                 reg186,
                 reg185,
                 reg183,
                 reg181,
                 reg178,
                 reg176,
                 reg239,
                 reg237,
                 forvar236,
                 reg233,
                 forvar230,
                 reg226,
                 reg225,
                 forvar224,
                 forvar223,
                 forvar221,
                 reg219,
                 forvar217,
                 reg216,
                 forvar215,
                 reg214,
                 forvar208,
                 reg203,
                 forvar201,
                 reg200,
                 forvar199,
                 forvar197,
                 reg195,
                 reg192,
                 reg191,
                 forvar190,
                 forvar187,
                 forvar184,
                 reg182,
                 forvar180,
                 forvar179,
                 reg177,
                 forvar175,
                 forvar174,
                 reg173,
                 reg172,
                 (1'h0)};
  assign wire169 = wire167[(4'hc):(4'h8)];
  assign wire170 = wire169[(1'h0):(1'h0)];
  assign wire171 = wire166[(4'h8):(3'h4)];
  always
    @(posedge clk) begin
      reg172 = (~&(wire170[(3'h6):(1'h1)] ?
          wire171 : ($signed((wire167 ?
              wire168 : wire171)) >= ($signed(wire165) <= (wire171 >= wire171)))));
      reg173 = (~|((($signed(wire171) > (wire164 * (8'hbc))) ^~ reg172[(5'h12):(4'hd)]) >= (~^wire165[(3'h4):(1'h0)])));
      for (forvar174 = (1'h0); (forvar174 < (2'h3)); forvar174 = (forvar174 + (1'h1)))
        begin
          for (forvar175 = (1'h0); (forvar175 < (2'h3)); forvar175 = (forvar175 + (1'h1)))
            begin
              reg176 <= (|(^~forvar175[(2'h2):(2'h2)]));
              reg177 = $signed($signed($signed(wire166[(3'h4):(1'h0)])));
              reg178 <= $unsigned($signed($signed($unsigned((wire168 ?
                  wire166 : reg172)))));
            end
        end
      for (forvar179 = (1'h0); (forvar179 < (3'h4)); forvar179 = (forvar179 + (1'h1)))
        begin
          for (forvar180 = (1'h0); (forvar180 < (1'h0)); forvar180 = (forvar180 + (1'h1)))
            begin
              reg181 <= wire168[(2'h3):(1'h1)];
              reg182 = (|(8'hba));
              reg183 <= reg182[(3'h4):(2'h2)];
            end
          for (forvar184 = (1'h0); (forvar184 < (1'h0)); forvar184 = (forvar184 + (1'h1)))
            begin
              reg185 <= $unsigned($signed((8'hb1)));
              reg186 <= wire166[(3'h5):(1'h1)];
            end
          for (forvar187 = (1'h0); (forvar187 < (1'h0)); forvar187 = (forvar187 + (1'h1)))
            begin
              reg188 <= forvar179;
              reg189 <= wire167[(5'h12):(3'h7)];
            end
          for (forvar190 = (1'h0); (forvar190 < (1'h1)); forvar190 = (forvar190 + (1'h1)))
            begin
              reg191 = $unsigned(wire169[(3'h4):(1'h1)]);
              reg192 = forvar190[(4'ha):(1'h0)];
              reg193 <= $unsigned((8'h9d));
              reg194 <= (8'hac);
              reg195 = $unsigned($unsigned(forvar175));
            end
        end
    end
  assign wire196 = (reg186 ~^ ($signed(reg188[(4'ha):(4'h8)]) | ((~^reg185[(4'h9):(2'h2)]) ?
                       (~wire167[(4'hb):(3'h7)]) : (reg193 << $signed(wire169)))));
  always
    @(posedge clk) begin
      for (forvar197 = (1'h0); (forvar197 < (2'h3)); forvar197 = (forvar197 + (1'h1)))
        begin
          reg198 <= (^~wire167);
          for (forvar199 = (1'h0); (forvar199 < (2'h2)); forvar199 = (forvar199 + (1'h1)))
            begin
              reg200 = reg188[(4'hc):(1'h1)];
            end
          for (forvar201 = (1'h0); (forvar201 < (2'h2)); forvar201 = (forvar201 + (1'h1)))
            begin
              reg202 <= (wire167[(2'h2):(1'h0)] ?
                  wire169[(4'h8):(3'h5)] : (~&$signed(wire196)));
              reg203 = reg202;
              reg204 <= (-(-$unsigned($unsigned((forvar201 - reg203)))));
              reg205 <= forvar201;
              reg206 <= $signed(wire171);
            end
          reg207 <= (^~wire164[(3'h6):(3'h5)]);
          for (forvar208 = (1'h0); (forvar208 < (2'h2)); forvar208 = (forvar208 + (1'h1)))
            begin
              reg209 <= $unsigned(($signed(($signed(reg178) && (8'hae))) & (({wire167,
                      reg202} ?
                  {(8'hb0), wire169} : $unsigned(reg206)) >> forvar208)));
            end
        end
    end
  assign wire210 = (wire166 ?
                       $unsigned(reg204) : ((reg181 ?
                           ((reg183 >= reg178) >> $signed(wire170)) : {(wire164 | wire164),
                               (reg185 * (8'hb7))}) || $signed(((^~wire169) ?
                           (reg189 ? wire196 : wire196) : reg188))));
  assign wire211 = {$signed((^$signed(wire170[(4'ha):(1'h0)]))), reg185};
  assign wire212 = ((-($signed($unsigned(wire168)) ?
                       (reg188[(4'hb):(4'h9)] <<< $unsigned(reg185)) : $unsigned((-wire164)))) != (($unsigned((reg204 ?
                           reg181 : wire196)) & $signed(((8'ha1) - reg188))) ?
                       $signed($unsigned((wire196 ?
                           reg183 : reg183))) : {wire196}));
  assign wire213 = ($unsigned((^~(^~(reg207 ~^ (8'hbd))))) ?
                       ({wire166[(3'h5):(3'h4)]} * $signed((^(wire171 ?
                           wire170 : reg193)))) : $signed($unsigned(((wire212 ?
                               (8'hb8) : (8'haf)) ?
                           (~^reg193) : {(8'hb0)}))));
  always
    @(posedge clk) begin
      reg214 = ($unsigned($signed(((reg183 ? reg209 : (8'hb1)) ?
          (wire168 ?
              reg178 : wire164) : (^reg188)))) < $unsigned($signed(($unsigned(reg189) & (wire168 >>> wire166)))));
      for (forvar215 = (1'h0); (forvar215 < (2'h3)); forvar215 = (forvar215 + (1'h1)))
        begin
          reg216 = reg186;
          for (forvar217 = (1'h0); (forvar217 < (1'h1)); forvar217 = (forvar217 + (1'h1)))
            begin
              reg218 <= {reg216};
              reg219 = $signed($unsigned((reg207 != wire168[(2'h2):(1'h1)])));
              reg220 <= $unsigned((|reg193));
            end
          for (forvar221 = (1'h0); (forvar221 < (3'h4)); forvar221 = (forvar221 + (1'h1)))
            begin
              reg222 <= {(($unsigned((wire213 ^ reg198)) ?
                      ((wire212 | reg188) ?
                          ((8'haf) ^ reg216) : wire213[(1'h0):(1'h0)]) : ($unsigned(reg214) >= (forvar215 ?
                          reg188 : reg219))) & (8'hb5))};
            end
        end
      for (forvar223 = (1'h0); (forvar223 < (3'h4)); forvar223 = (forvar223 + (1'h1)))
        begin
          for (forvar224 = (1'h0); (forvar224 < (3'h4)); forvar224 = (forvar224 + (1'h1)))
            begin
              reg225 = forvar224[(3'h4):(2'h2)];
              reg226 = wire170[(3'h5):(1'h0)];
              reg227 <= $unsigned(reg198);
              reg228 <= $signed((reg220[(2'h2):(1'h0)] >= reg186));
              reg229 <= forvar217;
            end
          for (forvar230 = (1'h0); (forvar230 < (1'h0)); forvar230 = (forvar230 + (1'h1)))
            begin
              reg231 <= (~^forvar223[(2'h3):(2'h3)]);
              reg232 <= (^~reg202);
            end
        end
      reg233 = reg181;
    end
  assign wire234 = (8'ha7);
  assign wire235 = reg183[(2'h2):(1'h0)];
  always
    @(posedge clk) begin
      for (forvar236 = (1'h0); (forvar236 < (1'h0)); forvar236 = (forvar236 + (1'h1)))
        begin
          reg237 = (((~|{wire171[(4'hd):(4'hd)],
                  (wire167 >= (8'ha9))}) ^~ (^~forvar236)) ?
              reg229[(2'h3):(1'h0)] : (reg220 >> {(reg222[(4'h8):(3'h7)] || $signed((7'h43))),
                  wire169}));
          reg238 <= $unsigned({$unsigned($signed((reg185 ? reg193 : reg181))),
              (^~wire170[(2'h3):(1'h1)])});
        end
      reg239 = ((+($signed(reg202) ?
              reg188[(4'hf):(4'h9)] : $unsigned((reg181 ? reg209 : wire164)))) ?
          $unsigned($signed(reg186)) : $signed($signed(reg176[(3'h5):(1'h0)])));
    end
  assign wire240 = $signed(reg218[(3'h4):(1'h0)]);
  assign wire241 = reg176;
  assign wire242 = $signed(reg188[(3'h5):(2'h3)]);
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module110  (y, clk, wire114, wire113, wire112, wire111);
  output wire [(32'h1cd):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire114;
  input wire [(4'h9):(1'h0)] wire113;
  input wire signed [(4'he):(1'h0)] wire112;
  input wire [(2'h3):(1'h0)] wire111;
  wire signed [(4'h8):(1'h0)] wire132;
  wire signed [(4'ha):(1'h0)] wire131;
  wire signed [(5'h10):(1'h0)] wire130;
  wire signed [(4'h8):(1'h0)] wire129;
  wire signed [(4'ha):(1'h0)] wire128;
  wire [(3'h4):(1'h0)] wire127;
  wire signed [(3'h4):(1'h0)] wire126;
  wire signed [(5'h10):(1'h0)] wire125;
  wire [(3'h5):(1'h0)] wire124;
  wire [(4'ha):(1'h0)] wire123;
  wire [(5'h12):(1'h0)] wire122;
  wire signed [(2'h3):(1'h0)] wire121;
  wire [(4'he):(1'h0)] wire120;
  wire signed [(4'h9):(1'h0)] wire119;
  wire signed [(4'hc):(1'h0)] wire118;
  wire signed [(3'h5):(1'h0)] wire117;
  wire signed [(3'h6):(1'h0)] wire116;
  wire signed [(4'ha):(1'h0)] wire115;
  reg [(4'h8):(1'h0)] reg150 = (1'h0);
  reg [(3'h4):(1'h0)] reg148 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg145 = (1'h0);
  reg [(5'h14):(1'h0)] reg142 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg136 = (1'h0);
  reg [(2'h3):(1'h0)] reg156 = (1'h0);
  reg [(3'h4):(1'h0)] reg155 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg154 = (1'h0);
  reg [(5'h10):(1'h0)] reg153 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar152 = (1'h0);
  reg [(4'hd):(1'h0)] reg151 = (1'h0);
  reg signed [(4'he):(1'h0)] forvar149 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg147 = (1'h0);
  reg [(5'h15):(1'h0)] reg146 = (1'h0);
  reg [(3'h5):(1'h0)] reg144 = (1'h0);
  reg signed [(5'h11):(1'h0)] forvar143 = (1'h0);
  reg [(5'h10):(1'h0)] forvar141 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar140 = (1'h0);
  reg [(5'h15):(1'h0)] reg139 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg138 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg137 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg135 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar134 = (1'h0);
  reg [(4'hd):(1'h0)] forvar133 = (1'h0);
  assign y = {wire132,
                 wire131,
                 wire130,
                 wire129,
                 wire128,
                 wire127,
                 wire126,
                 wire125,
                 wire124,
                 wire123,
                 wire122,
                 wire121,
                 wire120,
                 wire119,
                 wire118,
                 wire117,
                 wire116,
                 wire115,
                 reg150,
                 reg148,
                 reg145,
                 reg142,
                 reg136,
                 reg156,
                 reg155,
                 reg154,
                 reg153,
                 forvar152,
                 reg151,
                 forvar149,
                 reg147,
                 reg146,
                 reg144,
                 forvar143,
                 forvar141,
                 forvar140,
                 reg139,
                 reg138,
                 reg137,
                 reg135,
                 forvar134,
                 forvar133,
                 (1'h0)};
  assign wire115 = $unsigned($unsigned(wire112[(4'h8):(3'h4)]));
  assign wire116 = $unsigned((~&wire113[(2'h3):(2'h3)]));
  assign wire117 = (^~wire115);
  assign wire118 = (~($unsigned(((8'haa) ^ $unsigned((8'hbb)))) ?
                       $unsigned((wire114 ?
                           $signed(wire117) : wire117[(2'h3):(1'h1)])) : ($signed($signed(wire115)) >>> $unsigned(wire111[(1'h1):(1'h1)]))));
  assign wire119 = $signed($unsigned($unsigned(($unsigned((7'h44)) ?
                       (!wire118) : (wire114 ? wire112 : wire113)))));
  assign wire120 = wire114;
  assign wire121 = wire114;
  assign wire122 = {(+wire113)};
  assign wire123 = $signed(wire121[(1'h1):(1'h1)]);
  assign wire124 = wire111[(2'h3):(2'h2)];
  assign wire125 = (|(wire114[(2'h3):(1'h1)] ?
                       wire124 : $signed(({wire122,
                           wire112} <<< (wire118 == wire117)))));
  assign wire126 = $signed({wire124,
                       $signed($unsigned(wire118[(4'hc):(1'h1)]))});
  assign wire127 = wire114[(1'h1):(1'h1)];
  assign wire128 = wire111[(2'h2):(2'h2)];
  assign wire129 = (wire113 <<< $unsigned((8'hac)));
  assign wire130 = ({$unsigned({((7'h43) >>> (8'hb8))})} ?
                       ((wire112 ^~ $signed(wire123)) ?
                           ($signed(wire126) ~^ $signed($signed((8'hab)))) : (~^(^(8'ha6)))) : $signed($unsigned(({wire118} & {wire115}))));
  assign wire131 = $signed(wire118[(2'h2):(1'h1)]);
  assign wire132 = wire115[(2'h2):(1'h0)];
  always
    @(posedge clk) begin
      for (forvar133 = (1'h0); (forvar133 < (3'h4)); forvar133 = (forvar133 + (1'h1)))
        begin
          for (forvar134 = (1'h0); (forvar134 < (1'h0)); forvar134 = (forvar134 + (1'h1)))
            begin
              reg135 = wire113;
              reg136 <= ({wire127[(2'h2):(1'h1)],
                  ($unsigned((~^wire122)) ?
                      ($unsigned(wire130) - {wire115,
                          wire123}) : reg135)} || $unsigned(wire127));
              reg137 = wire128[(4'h9):(1'h0)];
              reg138 = $unsigned($unsigned(wire126));
            end
        end
      reg139 = wire132;
      for (forvar140 = (1'h0); (forvar140 < (3'h4)); forvar140 = (forvar140 + (1'h1)))
        begin
          for (forvar141 = (1'h0); (forvar141 < (2'h2)); forvar141 = (forvar141 + (1'h1)))
            begin
              reg142 <= ((!(8'ha4)) ?
                  $signed(wire125[(4'hc):(4'h9)]) : ($unsigned({(wire112 ?
                          wire126 : wire117)}) ^ wire111[(2'h2):(1'h0)]));
            end
          for (forvar143 = (1'h0); (forvar143 < (2'h2)); forvar143 = (forvar143 + (1'h1)))
            begin
              reg144 = (~^(wire128 ?
                  (({wire111} + (&wire122)) ?
                      ((wire125 | wire116) ?
                          wire125 : wire132) : wire117[(3'h5):(2'h2)]) : wire117));
              reg145 <= $unsigned(((($unsigned(wire114) * $signed(wire117)) | ((^wire115) ^~ wire132[(2'h3):(1'h0)])) ?
                  {$signed((reg138 ?
                          wire132 : wire115))} : ((^~(wire116 * wire120)) ?
                      reg137[(5'h10):(3'h4)] : reg144)));
              reg146 = $unsigned((wire127[(1'h1):(1'h0)] <<< ($signed(((8'h9c) ?
                  (8'hb4) : wire132)) ^~ $unsigned((wire115 <<< (8'ha1))))));
              reg147 = $unsigned(((~($signed(reg136) && wire113)) ?
                  $unsigned((reg135[(1'h1):(1'h0)] <<< (reg144 ?
                      wire121 : wire119))) : $unsigned(reg145[(3'h6):(3'h4)])));
              reg148 <= $unsigned($unsigned(wire111[(2'h3):(1'h0)]));
            end
          for (forvar149 = (1'h0); (forvar149 < (2'h2)); forvar149 = (forvar149 + (1'h1)))
            begin
              reg150 <= (^(((-wire125[(4'h9):(1'h1)]) ?
                      (~|(wire124 != forvar143)) : $unsigned((-wire116))) ?
                  $signed($unsigned(wire113)) : ($signed($signed((8'hb5))) * (^~wire124[(2'h2):(2'h2)]))));
              reg151 = $signed({(((!reg137) ?
                          $unsigned(wire130) : forvar143[(4'hd):(4'h8)]) ?
                      (wire130[(4'hf):(2'h3)] ?
                          ((8'haf) ?
                              wire128 : wire118) : ((8'ha8) > reg135)) : wire130[(4'hf):(4'h8)]),
                  (8'hb8)});
            end
          for (forvar152 = (1'h0); (forvar152 < (1'h0)); forvar152 = (forvar152 + (1'h1)))
            begin
              reg153 = ((wire126[(2'h3):(1'h0)] ?
                      (!(reg139[(4'ha):(2'h2)] * $unsigned(wire130))) : (((~^reg135) << (+wire116)) + $signed($signed(reg137)))) ?
                  (wire129[(4'h8):(1'h1)] ?
                      $unsigned($signed({forvar149})) : ($unsigned(wire131[(4'ha):(1'h1)]) >>> ((&forvar149) ?
                          (wire115 && reg145) : reg151))) : $unsigned($signed($unsigned($signed(reg139)))));
              reg154 = wire130;
              reg155 = ($signed((8'hb4)) ?
                  ((wire115 ^~ reg153) ?
                      (((!(8'haf)) <<< (~(8'ha4))) >>> ((reg139 + wire119) ?
                          wire113[(4'h9):(3'h6)] : (forvar149 ?
                              forvar134 : wire129))) : reg151[(3'h7):(3'h5)]) : reg142[(3'h6):(3'h6)]);
              reg156 = ($unsigned(((~&wire124[(1'h1):(1'h0)]) ?
                  (|$signed(reg153)) : {((8'haf) <<< wire116)})) != {(wire127[(2'h2):(2'h2)] ?
                      ({reg135, wire114} > (wire111 | reg154)) : ((&(7'h44)) ?
                          (forvar152 < reg148) : (wire112 ^ reg154)))});
            end
        end
    end
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module98  (y, clk, wire103, wire102, wire101, wire100, wire99);
  output wire [(32'h44):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(5'h11):(1'h0)] wire103;
  input wire signed [(4'hc):(1'h0)] wire102;
  input wire [(2'h2):(1'h0)] wire101;
  input wire signed [(4'he):(1'h0)] wire100;
  input wire [(3'h6):(1'h0)] wire99;
  wire signed [(5'h14):(1'h0)] wire107;
  wire signed [(5'h10):(1'h0)] wire106;
  wire signed [(5'h13):(1'h0)] wire105;
  wire signed [(4'hc):(1'h0)] wire104;
  assign y = {wire107, wire106, wire105, wire104, (1'h0)};
  assign wire104 = wire99;
  assign wire105 = {(wire103 ?
                           wire101 : ({(-wire101)} ?
                               $signed((wire102 != wire103)) : $unsigned((wire102 <<< wire103))))};
  assign wire106 = wire102;
  assign wire107 = $unsigned(({$unsigned({(7'h42)})} ?
                       $signed((^~wire102)) : ($unsigned((wire105 * wire99)) << (8'ha1))));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module83  (y, clk, wire87, wire86, wire85, wire84);
  output wire [(32'h72):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'h8):(1'h0)] wire87;
  input wire signed [(3'h5):(1'h0)] wire86;
  input wire signed [(4'hd):(1'h0)] wire85;
  input wire signed [(4'hb):(1'h0)] wire84;
  wire signed [(4'ha):(1'h0)] wire95;
  wire [(4'hb):(1'h0)] wire94;
  wire [(5'h15):(1'h0)] wire93;
  wire signed [(4'hd):(1'h0)] wire92;
  wire signed [(4'h9):(1'h0)] wire91;
  wire [(5'h13):(1'h0)] wire90;
  wire signed [(4'he):(1'h0)] wire89;
  wire signed [(5'h10):(1'h0)] wire88;
  assign y = {wire95,
                 wire94,
                 wire93,
                 wire92,
                 wire91,
                 wire90,
                 wire89,
                 wire88,
                 (1'h0)};
  assign wire88 = ((wire84[(3'h7):(3'h5)] == wire87[(1'h0):(1'h0)]) ?
                      ((&$signed($unsigned(wire86))) ?
                          wire85[(1'h0):(1'h0)] : (8'hac)) : (~^$unsigned(((wire85 ~^ wire85) >= {wire86}))));
  assign wire89 = (wire86[(3'h4):(3'h4)] ?
                      ((wire88 < wire88[(5'h10):(4'hc)]) - wire86[(3'h5):(3'h4)]) : $signed((~&$unsigned({wire88,
                          wire88}))));
  assign wire90 = ((~^(&($signed(wire85) ? wire84 : wire89))) ?
                      (($signed(wire87) + wire86) ?
                          $signed($unsigned(wire88[(4'ha):(1'h1)])) : $signed((^(~&wire84)))) : (wire84[(4'h9):(3'h6)] << wire88));
  assign wire91 = $unsigned($unsigned(wire84[(4'hb):(3'h6)]));
  assign wire92 = $signed((+(wire84[(4'h9):(3'h7)] << $unsigned(wire86[(3'h5):(3'h4)]))));
  assign wire93 = $signed((&(-(+(wire91 ? wire92 : wire88)))));
  assign wire94 = {$unsigned((($signed(wire93) > (8'haa)) != {wire88[(5'h10):(4'he)],
                          $unsigned(wire90)}))};
  assign wire95 = $unsigned((|{wire90[(1'h0):(1'h0)],
                      $signed(((8'hbe) ? (8'hbc) : wire94))}));
endmodule