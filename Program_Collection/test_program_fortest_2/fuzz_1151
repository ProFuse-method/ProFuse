(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param17 = {((-(((8'ha1) >= (8'h9f)) ? ((8'ha6) && (8'hae)) : ((8'ha1) ~^ (8'hb0)))) && (((^(8'hba)) ? (^(8'ha6)) : (~^(8'hb8))) == {(~^(8'hbf))}))}, 
parameter param18 = (~|(^~((&{(8'hb6), param17}) ? (8'hbd) : ((param17 - param17) ? param17 : (param17 ? param17 : param17))))))
(y, clk, wire3, wire2, wire1, wire0);
  output wire [(32'hbe):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'hc):(1'h0)] wire3;
  input wire signed [(5'h11):(1'h0)] wire2;
  input wire signed [(5'h10):(1'h0)] wire1;
  input wire signed [(3'h5):(1'h0)] wire0;
  wire [(4'hf):(1'h0)] wire7;
  wire signed [(5'h13):(1'h0)] wire6;
  wire [(5'h13):(1'h0)] wire5;
  wire signed [(5'h11):(1'h0)] wire4;
  reg signed [(5'h11):(1'h0)] reg16 = (1'h0);
  reg [(4'hf):(1'h0)] reg11 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg15 = (1'h0);
  reg [(3'h7):(1'h0)] forvar14 = (1'h0);
  reg signed [(5'h14):(1'h0)] reg13 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg12 = (1'h0);
  reg [(5'h14):(1'h0)] forvar10 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar9 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg8 = (1'h0);
  assign y = {wire7,
                 wire6,
                 wire5,
                 wire4,
                 reg16,
                 reg11,
                 reg15,
                 forvar14,
                 reg13,
                 reg12,
                 forvar10,
                 forvar9,
                 reg8,
                 (1'h0)};
  assign wire4 = $unsigned($unsigned($unsigned(($signed(wire2) + (-wire1)))));
  assign wire5 = ((($unsigned($unsigned((8'h9c))) || $signed((wire4 == wire2))) ?
                     $signed(((wire4 <= (8'h9f)) ?
                         {wire2} : wire4)) : ({wire0[(2'h2):(1'h1)],
                         wire0[(2'h2):(1'h0)]} != wire0)) < wire3);
  assign wire6 = (^~(~wire5));
  assign wire7 = wire0;
  always
    @(posedge clk) begin
      reg8 = (~^(8'ha9));
      for (forvar9 = (1'h0); (forvar9 < (3'h4)); forvar9 = (forvar9 + (1'h1)))
        begin
          for (forvar10 = (1'h0); (forvar10 < (1'h1)); forvar10 = (forvar10 + (1'h1)))
            begin
              reg11 <= (^($unsigned((~$unsigned(wire2))) ?
                  forvar10[(5'h10):(4'hc)] : (+(^~(wire4 ? wire1 : wire3)))));
              reg12 = (((&(~&(wire5 ? reg8 : wire6))) ?
                      (-($signed(wire6) ? wire7 : {(8'ha1), reg8})) : wire5) ?
                  ($signed(reg11) - $unsigned((-$unsigned(wire7)))) : ($signed($signed($unsigned(wire5))) >= forvar9[(4'h9):(3'h5)]));
            end
          reg13 = wire6[(4'h9):(2'h2)];
          for (forvar14 = (1'h0); (forvar14 < (3'h4)); forvar14 = (forvar14 + (1'h1)))
            begin
              reg15 = ((~wire3) >> forvar10[(3'h4):(1'h1)]);
              reg16 <= (!{wire7[(3'h6):(3'h4)]});
            end
        end
    end
endmodule