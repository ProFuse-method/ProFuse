(* use_dsp48="no" *) (* use_dsp="no" *) module top
#(parameter param190 = ((~&((((8'haa) ? (8'ha6) : (7'h42)) ? (^(8'hb8)) : (~^(8'hb3))) ? {{(8'ha7)}} : {((8'ha2) * (8'hbc)), ((7'h40) ^~ (8'hab))})) ? (-(({(8'hb6), (8'hb1)} ? ((8'hab) ? (8'ha2) : (8'h9d)) : ((8'hb3) != (8'ha2))) - (((7'h44) ~^ (8'hb0)) ? ((8'hae) || (8'hb8)) : (!(8'ha6))))) : {((^~((8'h9c) ? (8'hae) : (8'ha4))) ? (((8'h9d) ? (7'h40) : (8'hb5)) ? (^(8'h9f)) : (~(8'hb7))) : {(8'ha7)}), ((^(~(8'hac))) ? (~&((8'hb6) ^~ (8'hb6))) : (((8'ha2) >= (8'had)) ? ((7'h40) || (8'hb5)) : ((7'h41) == (8'hbc))))}))
(y, clk, wire0, wire1, wire2, wire3, wire4);
  output wire [(32'h301):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(4'ha):(1'h0)] wire0;
  input wire signed [(5'h13):(1'h0)] wire1;
  input wire [(4'hb):(1'h0)] wire2;
  input wire [(5'h15):(1'h0)] wire3;
  input wire signed [(3'h6):(1'h0)] wire4;
  wire signed [(3'h5):(1'h0)] wire189;
  wire [(4'ha):(1'h0)] wire188;
  wire signed [(3'h6):(1'h0)] wire5;
  wire [(4'h9):(1'h0)] wire6;
  wire signed [(5'h10):(1'h0)] wire7;
  wire signed [(4'h9):(1'h0)] wire8;
  wire signed [(4'he):(1'h0)] wire29;
  wire [(5'h11):(1'h0)] wire30;
  wire signed [(2'h2):(1'h0)] wire51;
  wire [(3'h4):(1'h0)] wire61;
  wire signed [(3'h7):(1'h0)] wire62;
  wire [(2'h3):(1'h0)] wire63;
  wire [(5'h12):(1'h0)] wire64;
  wire [(4'hf):(1'h0)] wire65;
  wire signed [(3'h4):(1'h0)] wire66;
  wire signed [(4'hb):(1'h0)] wire67;
  wire [(3'h7):(1'h0)] wire68;
  wire signed [(5'h10):(1'h0)] wire69;
  wire [(4'he):(1'h0)] wire186;
  reg signed [(5'h13):(1'h0)] reg11 = (1'h0);
  reg [(5'h14):(1'h0)] reg12 = (1'h0);
  reg [(5'h14):(1'h0)] reg14 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg16 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg17 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg18 = (1'h0);
  reg [(5'h11):(1'h0)] reg20 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg23 = (1'h0);
  reg [(3'h7):(1'h0)] reg25 = (1'h0);
  reg [(2'h3):(1'h0)] reg26 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg27 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg28 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg37 = (1'h0);
  reg [(3'h7):(1'h0)] reg38 = (1'h0);
  reg [(3'h6):(1'h0)] reg40 = (1'h0);
  reg [(4'hb):(1'h0)] reg43 = (1'h0);
  reg [(5'h13):(1'h0)] reg44 = (1'h0);
  reg [(5'h11):(1'h0)] reg45 = (1'h0);
  reg [(5'h11):(1'h0)] reg47 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg48 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg49 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg55 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg56 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg57 = (1'h0);
  reg [(5'h11):(1'h0)] reg60 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg59 = (1'h0);
  reg [(4'hc):(1'h0)] forvar58 = (1'h0);
  reg [(2'h3):(1'h0)] reg54 = (1'h0);
  reg [(5'h13):(1'h0)] forvar53 = (1'h0);
  reg [(4'he):(1'h0)] forvar52 = (1'h0);
  reg signed [(2'h3):(1'h0)] reg50 = (1'h0);
  reg [(4'h9):(1'h0)] forvar46 = (1'h0);
  reg [(5'h12):(1'h0)] forvar42 = (1'h0);
  reg [(5'h12):(1'h0)] forvar41 = (1'h0);
  reg [(3'h4):(1'h0)] reg39 = (1'h0);
  reg [(4'hd):(1'h0)] reg36 = (1'h0);
  reg [(4'he):(1'h0)] forvar35 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar34 = (1'h0);
  reg signed [(4'hc):(1'h0)] reg33 = (1'h0);
  reg [(3'h5):(1'h0)] forvar32 = (1'h0);
  reg [(3'h5):(1'h0)] reg31 = (1'h0);
  reg [(4'hc):(1'h0)] forvar24 = (1'h0);
  reg [(4'hd):(1'h0)] reg22 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar21 = (1'h0);
  reg [(4'hb):(1'h0)] reg19 = (1'h0);
  reg [(5'h15):(1'h0)] forvar15 = (1'h0);
  reg signed [(4'he):(1'h0)] reg13 = (1'h0);
  reg signed [(4'hb):(1'h0)] forvar10 = (1'h0);
  reg [(3'h6):(1'h0)] forvar9 = (1'h0);
  assign y = {wire189,
                 wire188,
                 wire5,
                 wire6,
                 wire7,
                 wire8,
                 wire29,
                 wire30,
                 wire51,
                 wire61,
                 wire62,
                 wire63,
                 wire64,
                 wire65,
                 wire66,
                 wire67,
                 wire68,
                 wire69,
                 wire186,
                 reg11,
                 reg12,
                 reg14,
                 reg16,
                 reg17,
                 reg18,
                 reg20,
                 reg23,
                 reg25,
                 reg26,
                 reg27,
                 reg28,
                 reg37,
                 reg38,
                 reg40,
                 reg43,
                 reg44,
                 reg45,
                 reg47,
                 reg48,
                 reg49,
                 reg55,
                 reg56,
                 reg57,
                 reg60,
                 reg59,
                 forvar58,
                 reg54,
                 forvar53,
                 forvar52,
                 reg50,
                 forvar46,
                 forvar42,
                 forvar41,
                 reg39,
                 reg36,
                 forvar35,
                 forvar34,
                 reg33,
                 forvar32,
                 reg31,
                 forvar24,
                 reg22,
                 forvar21,
                 reg19,
                 forvar15,
                 reg13,
                 forvar10,
                 forvar9,
                 (1'h0)};
  assign wire5 = ($signed((((wire4 && (8'hbd)) || $unsigned(wire4)) ?
                         wire0 : wire3)) ?
                     ($unsigned(wire4[(3'h5):(3'h4)]) <<< (wire4[(2'h2):(1'h1)] ?
                         wire2 : (~$unsigned(wire0)))) : ((-$signed(((8'hb3) ?
                         wire4 : (8'h9d)))) - wire4));
  assign wire6 = $signed($unsigned(wire4));
  assign wire7 = wire0;
  assign wire8 = wire3;
  always
    @(posedge clk) begin
      for (forvar9 = (1'h0); (forvar9 < (1'h0)); forvar9 = (forvar9 + (1'h1)))
        begin
          for (forvar10 = (1'h0); (forvar10 < (3'h4)); forvar10 = (forvar10 + (1'h1)))
            begin
              reg11 <= $signed({{$signed(forvar9[(3'h4):(1'h0)]),
                      $unsigned(wire7[(4'he):(4'hd)])}});
              reg12 <= forvar9[(3'h4):(2'h3)];
              reg13 = $signed(((|wire6[(3'h7):(3'h4)]) ^~ $signed($unsigned((8'h9c)))));
              reg14 <= (wire3 == ($signed((|(wire7 ?
                  (8'hab) : wire0))) == ((~|$signed(wire4)) * forvar9[(2'h2):(1'h0)])));
            end
          for (forvar15 = (1'h0); (forvar15 < (2'h2)); forvar15 = (forvar15 + (1'h1)))
            begin
              reg16 <= reg11[(1'h1):(1'h1)];
              reg17 <= {$signed((!$unsigned($unsigned(wire4))))};
              reg18 <= $signed((~&$unsigned(wire8)));
              reg19 = ($signed(wire6[(2'h2):(2'h2)]) ?
                  $signed($signed(((reg16 << reg13) ?
                      wire2 : (wire2 ?
                          reg11 : reg14)))) : $signed($signed((wire3[(4'h9):(4'h9)] || reg14[(2'h3):(2'h3)]))));
            end
          reg20 <= reg19[(4'ha):(3'h4)];
          for (forvar21 = (1'h0); (forvar21 < (3'h4)); forvar21 = (forvar21 + (1'h1)))
            begin
              reg22 = ($signed({$signed(wire6),
                      ((forvar10 ? wire5 : reg12) ?
                          wire5[(2'h3):(2'h2)] : (reg20 >> reg13))}) ?
                  ({wire8[(3'h4):(2'h2)], $signed((reg19 != wire7))} ?
                      ({reg20[(2'h3):(1'h1)],
                          (reg13 + wire5)} != ($unsigned(reg16) ^~ forvar9)) : $unsigned((&wire5))) : $signed(reg17[(3'h4):(1'h0)]));
              reg23 <= ((7'h41) << (-(+$unsigned($unsigned(wire6)))));
            end
          for (forvar24 = (1'h0); (forvar24 < (2'h2)); forvar24 = (forvar24 + (1'h1)))
            begin
              reg25 <= wire2[(2'h3):(2'h2)];
              reg26 <= $signed(reg20[(1'h1):(1'h0)]);
              reg27 <= $signed({($unsigned((~^wire3)) ?
                      $signed((wire6 ^~ reg26)) : reg20[(4'he):(1'h0)]),
                  reg16[(3'h5):(3'h4)]});
              reg28 <= $unsigned($signed(wire3[(1'h0):(1'h0)]));
            end
        end
    end
  assign wire29 = $signed($signed($unsigned($unsigned(reg23[(2'h2):(2'h2)]))));
  assign wire30 = $unsigned((8'hb4));
  always
    @(posedge clk) begin
      reg31 = ($signed({{(wire30 ? reg28 : (7'h42)), $unsigned((8'hb0))},
              (8'hbc)}) ?
          wire5 : $unsigned(reg14[(5'h12):(3'h5)]));
      for (forvar32 = (1'h0); (forvar32 < (1'h0)); forvar32 = (forvar32 + (1'h1)))
        begin
          reg33 = $signed(((+((wire6 < wire5) ?
                  (wire29 << reg31) : (wire2 ? reg18 : reg17))) ?
              (wire8 * reg20) : (~&reg28[(2'h3):(1'h1)])));
        end
    end
  always
    @(posedge clk) begin
      for (forvar34 = (1'h0); (forvar34 < (3'h4)); forvar34 = (forvar34 + (1'h1)))
        begin
          for (forvar35 = (1'h0); (forvar35 < (1'h1)); forvar35 = (forvar35 + (1'h1)))
            begin
              reg36 = $unsigned((reg20 || (+$signed(((8'hbd) <<< wire2)))));
              reg37 <= (+reg18);
              reg38 <= $signed(((reg27 ?
                      (wire30[(4'hb):(2'h2)] ?
                          ((8'hb8) + reg37) : wire1[(4'hc):(3'h4)]) : $signed(wire4[(3'h5):(1'h0)])) ?
                  (^~{reg17[(3'h6):(2'h2)],
                      (reg14 && wire7)}) : ($signed((!wire7)) ^ $unsigned((reg37 ?
                      wire0 : reg25)))));
              reg39 = ((reg26[(2'h2):(1'h1)] > (8'hb9)) ?
                  wire8 : ((reg25 ?
                          wire8 : (wire3[(4'h8):(3'h6)] << (reg11 ?
                              reg27 : reg38))) ?
                      $unsigned($signed($unsigned(reg28))) : (({wire0} && reg37) >= ((wire5 + wire1) ?
                          $unsigned(wire0) : $unsigned((8'ha5))))));
            end
        end
      reg40 <= $signed((-($signed(wire7[(2'h3):(2'h3)]) ?
          ($signed(wire6) - (&(8'hab))) : ((~^(8'had)) ?
              ((8'hbc) ? wire2 : wire5) : $signed(reg25)))));
      for (forvar41 = (1'h0); (forvar41 < (1'h0)); forvar41 = (forvar41 + (1'h1)))
        begin
          for (forvar42 = (1'h0); (forvar42 < (2'h3)); forvar42 = (forvar42 + (1'h1)))
            begin
              reg43 <= (+($unsigned(($unsigned(reg38) ?
                  (reg17 ?
                      (8'ha8) : forvar41) : $signed(reg17))) - $unsigned($unsigned(((8'h9c) ?
                  wire29 : wire8)))));
              reg44 <= reg11[(3'h5):(2'h2)];
              reg45 <= $signed(reg40[(3'h6):(3'h5)]);
            end
          for (forvar46 = (1'h0); (forvar46 < (3'h4)); forvar46 = (forvar46 + (1'h1)))
            begin
              reg47 <= (~&$unsigned($unsigned(reg45[(4'ha):(1'h0)])));
              reg48 <= (($unsigned((forvar46[(4'h8):(3'h7)] <= $signed((8'ha9)))) >>> reg11[(4'h8):(3'h7)]) ?
                  ($signed(reg14[(4'hb):(1'h1)]) >> (reg11[(4'hb):(4'hb)] ?
                      $signed({reg40}) : reg36[(3'h4):(2'h3)])) : $unsigned(reg12[(5'h11):(4'he)]));
              reg49 <= $unsigned(wire0[(4'ha):(1'h0)]);
              reg50 = $unsigned($unsigned($unsigned($signed($signed((8'hbf))))));
            end
        end
    end
  assign wire51 = reg43[(1'h0):(1'h0)];
  always
    @(posedge clk) begin
      for (forvar52 = (1'h0); (forvar52 < (1'h1)); forvar52 = (forvar52 + (1'h1)))
        begin
          for (forvar53 = (1'h0); (forvar53 < (2'h2)); forvar53 = (forvar53 + (1'h1)))
            begin
              reg54 = (+(forvar53 - (reg28[(3'h7):(1'h0)] >> ((reg14 - (8'ha2)) ?
                  $signed(wire30) : wire1))));
              reg55 <= ((8'ha2) ?
                  ($signed(({(8'hb6), reg48} << ((8'hb3) ^~ wire0))) ?
                      {(-$unsigned((7'h44))),
                          reg37[(2'h3):(2'h2)]} : {reg26[(1'h0):(1'h0)]}) : (~|((~|wire8) < $unsigned($signed(reg18)))));
              reg56 <= ($unsigned($unsigned($signed((~wire6)))) ?
                  (((~$unsigned(reg23)) ?
                          (reg43 && reg45) : $signed((~^wire5))) ?
                      ($unsigned($unsigned(reg12)) || (wire6[(4'h8):(1'h0)] << $unsigned(wire29))) : $signed($unsigned(reg25))) : (wire3 ^~ reg55[(3'h4):(2'h2)]));
            end
          reg57 <= $unsigned(({$signed(reg55[(3'h4):(3'h4)])} >> $signed(reg55[(2'h2):(1'h1)])));
          for (forvar58 = (1'h0); (forvar58 < (1'h0)); forvar58 = (forvar58 + (1'h1)))
            begin
              reg59 = wire3[(5'h13):(1'h1)];
              reg60 = {$unsigned($unsigned(reg43[(3'h6):(2'h3)]))};
            end
        end
    end
  assign wire61 = (reg16 << reg49);
  assign wire62 = reg20[(1'h1):(1'h1)];
  assign wire63 = ((reg25[(2'h3):(2'h3)] && reg16[(3'h5):(3'h4)]) ?
                      reg48 : $signed((~|reg44[(5'h12):(5'h10)])));
  assign wire64 = reg49;
  assign wire65 = wire1[(4'h8):(3'h7)];
  assign wire66 = reg11[(4'hf):(4'ha)];
  assign wire67 = wire62;
  assign wire68 = $unsigned((~^($unsigned(wire30[(4'hc):(4'h8)]) - ($signed(reg25) ?
                      $unsigned(reg49) : $unsigned(reg17)))));
  assign wire69 = ((wire67 | $signed($unsigned(reg14))) + (&$signed($signed(reg25))));
  module70 #() modinst187 (.clk(clk), .y(wire186), .wire73(wire69), .wire72(wire29), .wire71(wire64), .wire74(reg20));
  assign wire188 = (reg28 ^ wire1);
  assign wire189 = $unsigned($signed(reg37));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module70
#(parameter param184 = {(^{(((8'hbe) >> (8'hb5)) >> (-(8'hab)))})}, 
parameter param185 = (((({param184} ^ param184) <<< {(^~param184), param184}) >= ((!(!param184)) | ((param184 ? (8'ha5) : (7'h41)) - param184))) ? param184 : {(!param184), (^(((8'ha8) <<< param184) ~^ {param184}))}))
(y, clk, wire74, wire73, wire72, wire71);
  output wire [(32'h362):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire signed [(3'h4):(1'h0)] wire74;
  input wire [(4'hb):(1'h0)] wire73;
  input wire signed [(4'h8):(1'h0)] wire72;
  input wire signed [(5'h12):(1'h0)] wire71;
  wire [(5'h15):(1'h0)] wire183;
  wire signed [(5'h15):(1'h0)] wire182;
  wire signed [(3'h6):(1'h0)] wire181;
  wire [(4'hd):(1'h0)] wire180;
  wire [(5'h15):(1'h0)] wire155;
  wire [(2'h3):(1'h0)] wire121;
  wire [(2'h2):(1'h0)] wire120;
  wire [(4'ha):(1'h0)] wire119;
  wire [(5'h11):(1'h0)] wire118;
  wire [(2'h2):(1'h0)] wire117;
  wire [(4'h9):(1'h0)] wire116;
  wire signed [(5'h10):(1'h0)] wire114;
  wire [(3'h6):(1'h0)] wire77;
  wire [(5'h15):(1'h0)] wire76;
  wire [(3'h4):(1'h0)] wire75;
  reg signed [(4'h8):(1'h0)] reg178 = (1'h0);
  reg [(5'h13):(1'h0)] reg175 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg172 = (1'h0);
  reg [(4'hb):(1'h0)] reg163 = (1'h0);
  reg [(5'h10):(1'h0)] reg158 = (1'h0);
  reg [(3'h5):(1'h0)] reg153 = (1'h0);
  reg [(3'h7):(1'h0)] reg151 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg149 = (1'h0);
  reg signed [(5'h15):(1'h0)] reg148 = (1'h0);
  reg [(4'hf):(1'h0)] reg146 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg145 = (1'h0);
  reg [(4'h8):(1'h0)] reg144 = (1'h0);
  reg signed [(4'hd):(1'h0)] reg143 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg142 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg140 = (1'h0);
  reg [(5'h15):(1'h0)] reg135 = (1'h0);
  reg [(2'h3):(1'h0)] reg134 = (1'h0);
  reg [(4'hc):(1'h0)] reg131 = (1'h0);
  reg [(5'h12):(1'h0)] reg126 = (1'h0);
  reg signed [(5'h11):(1'h0)] reg122 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg179 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg177 = (1'h0);
  reg signed [(3'h6):(1'h0)] reg176 = (1'h0);
  reg [(4'hb):(1'h0)] forvar174 = (1'h0);
  reg [(2'h3):(1'h0)] forvar173 = (1'h0);
  reg signed [(5'h10):(1'h0)] reg171 = (1'h0);
  reg signed [(3'h4):(1'h0)] reg170 = (1'h0);
  reg [(5'h15):(1'h0)] forvar169 = (1'h0);
  reg [(3'h7):(1'h0)] reg168 = (1'h0);
  reg signed [(4'he):(1'h0)] reg167 = (1'h0);
  reg signed [(5'h14):(1'h0)] forvar166 = (1'h0);
  reg [(3'h4):(1'h0)] forvar165 = (1'h0);
  reg [(5'h15):(1'h0)] reg164 = (1'h0);
  reg [(4'hc):(1'h0)] reg162 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar161 = (1'h0);
  reg [(4'hf):(1'h0)] forvar160 = (1'h0);
  reg signed [(2'h2):(1'h0)] reg159 = (1'h0);
  reg signed [(4'hc):(1'h0)] forvar157 = (1'h0);
  reg [(4'hd):(1'h0)] forvar156 = (1'h0);
  reg [(4'h9):(1'h0)] reg154 = (1'h0);
  reg [(4'hc):(1'h0)] forvar152 = (1'h0);
  reg [(3'h6):(1'h0)] reg150 = (1'h0);
  reg [(5'h14):(1'h0)] reg147 = (1'h0);
  reg signed [(5'h12):(1'h0)] forvar141 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg139 = (1'h0);
  reg [(5'h10):(1'h0)] forvar138 = (1'h0);
  reg signed [(4'h8):(1'h0)] forvar137 = (1'h0);
  reg signed [(4'h9):(1'h0)] reg136 = (1'h0);
  reg [(4'hf):(1'h0)] forvar133 = (1'h0);
  reg [(4'hb):(1'h0)] reg132 = (1'h0);
  reg signed [(5'h13):(1'h0)] reg130 = (1'h0);
  reg [(2'h3):(1'h0)] forvar129 = (1'h0);
  reg signed [(5'h13):(1'h0)] forvar128 = (1'h0);
  reg [(4'he):(1'h0)] reg127 = (1'h0);
  reg [(3'h7):(1'h0)] forvar125 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar124 = (1'h0);
  reg [(5'h11):(1'h0)] reg123 = (1'h0);
  assign y = {wire183,
                 wire182,
                 wire181,
                 wire180,
                 wire155,
                 wire121,
                 wire120,
                 wire119,
                 wire118,
                 wire117,
                 wire116,
                 wire114,
                 wire77,
                 wire76,
                 wire75,
                 reg178,
                 reg175,
                 reg172,
                 reg163,
                 reg158,
                 reg153,
                 reg151,
                 reg149,
                 reg148,
                 reg146,
                 reg145,
                 reg144,
                 reg143,
                 reg142,
                 reg140,
                 reg135,
                 reg134,
                 reg131,
                 reg126,
                 reg122,
                 reg179,
                 reg177,
                 reg176,
                 forvar174,
                 forvar173,
                 reg171,
                 reg170,
                 forvar169,
                 reg168,
                 reg167,
                 forvar166,
                 forvar165,
                 reg164,
                 reg162,
                 forvar161,
                 forvar160,
                 reg159,
                 forvar157,
                 forvar156,
                 reg154,
                 forvar152,
                 reg150,
                 reg147,
                 forvar141,
                 reg139,
                 forvar138,
                 forvar137,
                 reg136,
                 forvar133,
                 reg132,
                 reg130,
                 forvar129,
                 forvar128,
                 reg127,
                 forvar125,
                 forvar124,
                 reg123,
                 (1'h0)};
  assign wire75 = wire72;
  assign wire76 = wire74;
  assign wire77 = wire71;
  module78 #() modinst115 (.wire80(wire72), .clk(clk), .wire81(wire73), .wire79(wire76), .y(wire114), .wire82(wire74));
  assign wire116 = wire76[(5'h13):(1'h1)];
  assign wire117 = $signed((wire74[(1'h0):(1'h0)] ?
                       (~&((wire72 ? wire77 : wire76) ?
                           (+wire116) : $unsigned(wire116))) : wire74));
  assign wire118 = ($signed(($signed(((8'ha4) + wire114)) <<< ($unsigned(wire76) ?
                       (|wire76) : $signed(wire117)))) >> $unsigned(($unsigned(wire71[(4'h8):(3'h7)]) <<< ($signed(wire72) ~^ wire72))));
  assign wire119 = (~^($unsigned(((wire75 ? wire75 : wire73) != (wire76 ?
                           (8'hbe) : wire72))) ?
                       wire77[(2'h2):(2'h2)] : wire74[(2'h3):(2'h3)]));
  assign wire120 = ($signed(($unsigned({wire119, (7'h41)}) ?
                           wire75 : $unsigned((wire114 << (8'hbf))))) ?
                       (wire76 == ($unsigned($unsigned(wire119)) ?
                           (+$signed(wire71)) : wire74)) : $unsigned(wire116[(3'h4):(2'h3)]));
  assign wire121 = (^~$signed((wire117[(1'h1):(1'h1)] || (((7'h40) ?
                       (8'hbc) : wire75) && wire76))));
  always
    @(posedge clk) begin
      reg122 <= $signed($unsigned(wire117[(1'h1):(1'h0)]));
      reg123 = $unsigned(({(((8'haa) ? wire117 : wire77) && wire75)} ?
          (8'had) : (wire117[(1'h1):(1'h1)] | {$unsigned(wire116)})));
      for (forvar124 = (1'h0); (forvar124 < (2'h2)); forvar124 = (forvar124 + (1'h1)))
        begin
          for (forvar125 = (1'h0); (forvar125 < (2'h3)); forvar125 = (forvar125 + (1'h1)))
            begin
              reg126 <= (wire75 ?
                  forvar125[(3'h4):(2'h3)] : wire77[(3'h4):(2'h3)]);
              reg127 = $unsigned((~$signed(wire75[(2'h2):(1'h1)])));
            end
        end
      for (forvar128 = (1'h0); (forvar128 < (3'h4)); forvar128 = (forvar128 + (1'h1)))
        begin
          for (forvar129 = (1'h0); (forvar129 < (3'h4)); forvar129 = (forvar129 + (1'h1)))
            begin
              reg130 = (forvar124 >>> forvar125);
              reg131 <= (~|($signed(wire114[(4'hf):(1'h1)]) ^~ $signed($unsigned($unsigned(wire120)))));
              reg132 = ($unsigned(($signed($unsigned(wire120)) - {reg126[(1'h0):(1'h0)],
                  (|(8'hbe))})) & wire120);
            end
          for (forvar133 = (1'h0); (forvar133 < (1'h1)); forvar133 = (forvar133 + (1'h1)))
            begin
              reg134 <= $unsigned(reg132[(4'ha):(4'h8)]);
            end
          reg135 <= (({($signed((7'h44)) ?
                  (^reg126) : {wire74})} << reg126[(5'h10):(4'hf)]) == (~|$signed(wire74[(1'h1):(1'h0)])));
          reg136 = (reg131 ?
              ((8'h9f) ?
                  ((&(~^wire73)) ?
                      reg126[(4'hb):(4'hb)] : forvar129) : {((~&(8'h9d)) ?
                          reg131 : (~^(8'h9c)))}) : wire72);
        end
      for (forvar137 = (1'h0); (forvar137 < (3'h4)); forvar137 = (forvar137 + (1'h1)))
        begin
          for (forvar138 = (1'h0); (forvar138 < (1'h1)); forvar138 = (forvar138 + (1'h1)))
            begin
              reg139 = forvar124;
              reg140 <= (wire77 >>> $signed(reg139[(3'h6):(2'h3)]));
            end
          for (forvar141 = (1'h0); (forvar141 < (2'h3)); forvar141 = (forvar141 + (1'h1)))
            begin
              reg142 <= {$signed(((+(wire75 ?
                      forvar138 : wire74)) <<< (&reg140))),
                  (~&($signed((reg135 ? reg122 : reg140)) ?
                      forvar129 : $signed((~forvar138))))};
              reg143 <= wire117[(1'h1):(1'h1)];
              reg144 <= ((!(forvar129[(1'h0):(1'h0)] ^ $unsigned({(8'hb3),
                      reg139}))) ?
                  wire73[(3'h7):(3'h4)] : reg130[(3'h7):(3'h4)]);
            end
          if ((!{$signed(((reg144 ^ wire77) << (!forvar141)))}))
            begin
              reg145 <= (8'hba);
              reg146 <= wire114[(5'h10):(3'h5)];
            end
          else
            begin
              reg147 = ((((forvar133 ? wire117 : $unsigned(wire114)) ?
                      (~wire77) : $unsigned(((8'ha9) ?
                          reg134 : wire116))) && (8'ha1)) ?
                  ((forvar128[(1'h1):(1'h0)] ?
                          reg136 : $unsigned(wire75[(3'h4):(3'h4)])) ?
                      $unsigned((&(forvar124 ?
                          forvar141 : forvar133))) : $signed((wire72[(2'h2):(1'h1)] ^ (!forvar125)))) : ($signed($unsigned(reg145[(4'ha):(3'h6)])) + $signed($signed($unsigned(wire119)))));
              reg148 <= (^~(((~(reg142 ? reg134 : (8'hbe))) ?
                      ($unsigned(reg144) - forvar125) : $unsigned((reg142 ?
                          forvar125 : reg131))) ?
                  (~^(~((8'hbb) > reg123))) : (($signed(reg122) ?
                          reg143[(4'hc):(2'h2)] : (~reg126)) ?
                      {$signed(wire121)} : $signed((-reg126)))));
              reg149 <= ($signed({$signed((reg127 ? reg142 : reg132)),
                  {reg122, (forvar124 ? reg130 : reg134)}}) ~^ ((-reg139) ?
                  (reg142 ? reg147[(3'h4):(2'h3)] : wire121) : reg130));
              reg150 = $unsigned({$signed(forvar138)});
            end
          reg151 <= (!({$signed((wire120 * wire71))} == reg144[(3'h7):(2'h2)]));
          for (forvar152 = (1'h0); (forvar152 < (2'h2)); forvar152 = (forvar152 + (1'h1)))
            begin
              reg153 <= wire118;
              reg154 = (8'hb8);
            end
        end
    end
  assign wire155 = (~reg144);
  always
    @(posedge clk) begin
      for (forvar156 = (1'h0); (forvar156 < (3'h4)); forvar156 = (forvar156 + (1'h1)))
        begin
          for (forvar157 = (1'h0); (forvar157 < (3'h4)); forvar157 = (forvar157 + (1'h1)))
            begin
              reg158 <= $signed((wire155 ?
                  wire155[(4'hb):(4'ha)] : $unsigned((wire74[(1'h1):(1'h0)] && wire77[(1'h0):(1'h0)]))));
              reg159 = {{(~wire118[(4'hb):(3'h6)])},
                  $signed($unsigned($signed((~|(8'hb7)))))};
            end
        end
      for (forvar160 = (1'h0); (forvar160 < (2'h2)); forvar160 = (forvar160 + (1'h1)))
        begin
          for (forvar161 = (1'h0); (forvar161 < (3'h4)); forvar161 = (forvar161 + (1'h1)))
            begin
              reg162 = ($unsigned(reg153[(2'h2):(1'h0)]) ^~ $signed($unsigned((~|$signed(reg140)))));
              reg163 <= ((((~forvar157[(3'h6):(2'h2)]) & (wire116[(3'h4):(1'h0)] | (reg158 >>> (7'h44)))) & {(^(wire155 ?
                          (8'ha3) : wire74))}) ?
                  $signed($unsigned($unsigned((wire76 <<< reg126)))) : (reg122[(3'h6):(2'h2)] ?
                      (forvar160[(3'h5):(1'h1)] ?
                          $unsigned((-wire71)) : $unsigned($signed((8'ha4)))) : (reg134 >= wire71)));
              reg164 = $unsigned((wire155 >>> $unsigned($unsigned($signed(wire121)))));
            end
        end
      for (forvar165 = (1'h0); (forvar165 < (2'h2)); forvar165 = (forvar165 + (1'h1)))
        begin
          for (forvar166 = (1'h0); (forvar166 < (3'h4)); forvar166 = (forvar166 + (1'h1)))
            begin
              reg167 = wire116;
              reg168 = ($unsigned((forvar166 ?
                      reg142[(4'h8):(2'h2)] : reg146)) ?
                  (((~&$signed((8'h9d))) ?
                      wire71 : (wire114[(4'h9):(3'h5)] ?
                          $unsigned(reg135) : wire121)) >= (({(8'hab),
                          forvar157} ?
                      reg159 : (reg145 != reg122)) >> ($unsigned(reg151) ?
                      (wire119 ? (8'hae) : reg134) : (reg164 ?
                          reg158 : reg134)))) : $unsigned(wire118[(1'h1):(1'h0)]));
            end
          for (forvar169 = (1'h0); (forvar169 < (2'h2)); forvar169 = (forvar169 + (1'h1)))
            begin
              reg170 = ((~^(({wire73, wire117} ?
                      (wire114 ?
                          (8'hba) : forvar169) : reg143[(4'ha):(1'h0)]) << ($signed(reg131) ?
                      reg142[(1'h0):(1'h0)] : $unsigned(forvar156)))) ?
                  (($signed(((8'hae) ? reg142 : wire117)) ?
                      ($unsigned((8'ha3)) - (wire118 >> forvar157)) : {wire71[(4'hd):(4'h8)]}) >> reg164) : $unsigned((wire119 ?
                      reg159 : ($unsigned(forvar169) ?
                          (!reg164) : {wire117}))));
              reg171 = $unsigned(wire119);
            end
          reg172 <= (~$unsigned($unsigned($unsigned((+wire118)))));
        end
      for (forvar173 = (1'h0); (forvar173 < (2'h2)); forvar173 = (forvar173 + (1'h1)))
        begin
          for (forvar174 = (1'h0); (forvar174 < (3'h4)); forvar174 = (forvar174 + (1'h1)))
            begin
              reg175 <= ($signed((forvar169[(5'h13):(3'h7)] ?
                      reg170 : (reg144[(1'h0):(1'h0)] == $unsigned(wire117)))) ?
                  {reg167,
                      $unsigned((~&(^~wire71)))} : {($signed(wire116[(4'h8):(3'h6)]) && $signed((reg149 ?
                          wire114 : (8'hbe)))),
                      $signed((~^(reg148 << reg151)))});
              reg176 = (({(!$signed(reg168))} >> reg126) | $signed($signed(reg126[(1'h1):(1'h1)])));
              reg177 = ($signed((~&wire118[(1'h1):(1'h0)])) ^ $unsigned(wire74));
              reg178 <= ((($signed((-wire117)) * {$signed(reg158),
                      reg170[(1'h1):(1'h1)]}) ?
                  ($unsigned((reg149 ? wire75 : (8'ha5))) ?
                      (~|$signed(reg164)) : ((|reg175) ?
                          (wire119 ? reg131 : reg131) : {reg149,
                              wire114})) : $signed(((reg148 ?
                      reg131 : wire117) <<< reg153))) ^~ ((((~&(8'hab)) ?
                          reg151[(1'h0):(1'h0)] : {wire72}) ?
                      reg134 : ((forvar174 ? wire119 : (7'h43)) ?
                          (^reg148) : $unsigned(forvar161))) ?
                  ($signed(wire72) && wire121) : ((~|(+(8'hbb))) ?
                      ($signed(forvar161) > (8'h9e)) : $unsigned(reg167))));
            end
        end
      reg179 = (((-$signed((wire121 || forvar160))) << $unsigned(wire75)) ^ $unsigned($signed($unsigned(reg122))));
    end
  assign wire180 = (|wire75);
  assign wire181 = wire117;
  assign wire182 = ((+wire180[(1'h0):(1'h0)]) + ({wire181[(3'h4):(3'h4)],
                           ($unsigned(wire121) & reg158)} ?
                       ($signed($unsigned(reg145)) ?
                           ((&reg131) ~^ (reg143 | reg145)) : ($unsigned(wire121) << {(8'hb8)})) : reg144));
  assign wire183 = (wire77 * (~|reg149[(3'h7):(3'h7)]));
endmodule

(* use_dsp48="no" *) (* use_dsp="no" *) module module78
#(parameter param113 = (((~&(^~{(7'h42), (8'hb2)})) ^~ {{{(8'had)}, (8'had)}, {((8'ha4) + (8'ha2)), (+(7'h41))}}) >> ((((&(8'had)) && {(8'hb9), (7'h43)}) < (((8'hae) ? (7'h40) : (7'h43)) != {(7'h41)})) || ((((8'hb1) ? (8'hac) : (8'ha8)) ? ((8'hb8) ? (8'hb9) : (8'haa)) : ((8'hac) ? (8'hbd) : (8'hb5))) > (^~((8'hbc) >= (7'h40)))))))
(y, clk, wire82, wire81, wire80, wire79);
  output wire [(32'h17b):(32'h0)] y;
  input wire [(1'h0):(1'h0)] clk;
  input wire [(3'h4):(1'h0)] wire82;
  input wire [(2'h2):(1'h0)] wire81;
  input wire [(2'h3):(1'h0)] wire80;
  input wire [(5'h15):(1'h0)] wire79;
  wire [(5'h13):(1'h0)] wire112;
  wire [(3'h7):(1'h0)] wire83;
  reg signed [(4'ha):(1'h0)] reg111 = (1'h0);
  reg [(5'h13):(1'h0)] reg110 = (1'h0);
  reg [(5'h11):(1'h0)] reg107 = (1'h0);
  reg [(4'ha):(1'h0)] reg100 = (1'h0);
  reg [(4'ha):(1'h0)] reg96 = (1'h0);
  reg [(5'h14):(1'h0)] reg94 = (1'h0);
  reg [(5'h14):(1'h0)] reg92 = (1'h0);
  reg signed [(4'hf):(1'h0)] reg89 = (1'h0);
  reg [(4'hf):(1'h0)] reg86 = (1'h0);
  reg [(3'h4):(1'h0)] reg109 = (1'h0);
  reg [(5'h12):(1'h0)] reg108 = (1'h0);
  reg signed [(4'h9):(1'h0)] forvar106 = (1'h0);
  reg signed [(3'h5):(1'h0)] reg105 = (1'h0);
  reg [(3'h5):(1'h0)] forvar104 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg103 = (1'h0);
  reg signed [(4'hb):(1'h0)] reg102 = (1'h0);
  reg [(5'h15):(1'h0)] reg101 = (1'h0);
  reg [(4'hd):(1'h0)] reg99 = (1'h0);
  reg [(5'h14):(1'h0)] reg98 = (1'h0);
  reg signed [(3'h7):(1'h0)] forvar97 = (1'h0);
  reg signed [(5'h12):(1'h0)] reg95 = (1'h0);
  reg signed [(3'h7):(1'h0)] reg93 = (1'h0);
  reg signed [(3'h5):(1'h0)] forvar91 = (1'h0);
  reg [(5'h12):(1'h0)] forvar90 = (1'h0);
  reg [(5'h14):(1'h0)] forvar88 = (1'h0);
  reg signed [(4'ha):(1'h0)] reg87 = (1'h0);
  reg signed [(5'h10):(1'h0)] forvar85 = (1'h0);
  reg [(2'h2):(1'h0)] forvar84 = (1'h0);
  assign y = {wire112,
                 wire83,
                 reg111,
                 reg110,
                 reg107,
                 reg100,
                 reg96,
                 reg94,
                 reg92,
                 reg89,
                 reg86,
                 reg109,
                 reg108,
                 forvar106,
                 reg105,
                 forvar104,
                 reg103,
                 reg102,
                 reg101,
                 reg99,
                 reg98,
                 forvar97,
                 reg95,
                 reg93,
                 forvar91,
                 forvar90,
                 forvar88,
                 reg87,
                 forvar85,
                 forvar84,
                 (1'h0)};
  assign wire83 = ((~wire81[(1'h0):(1'h0)]) < $unsigned($unsigned(((wire80 ?
                      wire81 : wire82) == (!wire81)))));
  always
    @(posedge clk) begin
      for (forvar84 = (1'h0); (forvar84 < (2'h2)); forvar84 = (forvar84 + (1'h1)))
        begin
          for (forvar85 = (1'h0); (forvar85 < (3'h4)); forvar85 = (forvar85 + (1'h1)))
            begin
              reg86 <= (8'ha9);
              reg87 = $unsigned($signed((&wire80[(2'h2):(2'h2)])));
            end
        end
    end
  always
    @(posedge clk) begin
      for (forvar88 = (1'h0); (forvar88 < (2'h2)); forvar88 = (forvar88 + (1'h1)))
        begin
          reg89 <= ($signed((+{wire82})) << $signed(wire81));
        end
      for (forvar90 = (1'h0); (forvar90 < (1'h0)); forvar90 = (forvar90 + (1'h1)))
        begin
          for (forvar91 = (1'h0); (forvar91 < (2'h2)); forvar91 = (forvar91 + (1'h1)))
            begin
              reg92 <= wire82;
              reg93 = {{{$unsigned((!reg86)),
                          ($signed(reg86) ?
                              (forvar88 ?
                                  (8'ha9) : wire83) : ((8'haf) ~^ wire83))}}};
              reg94 <= (!((wire79[(4'he):(4'ha)] ?
                      $signed($unsigned(wire81)) : ((wire83 ?
                          forvar90 : wire82) ^~ forvar91)) ?
                  forvar88 : $unsigned(wire80)));
              reg95 = ($unsigned(wire79[(5'h14):(1'h0)]) ?
                  (^~{(^(~^forvar88))}) : (^~(&(+reg93[(3'h4):(3'h4)]))));
              reg96 <= $signed(forvar91);
            end
          for (forvar97 = (1'h0); (forvar97 < (2'h3)); forvar97 = (forvar97 + (1'h1)))
            begin
              reg98 = $unsigned({(forvar91 ?
                      ((reg86 ^ (8'hbd)) >>> $signed(reg92)) : wire79)});
              reg99 = $unsigned(($signed(((forvar90 | wire80) ?
                  (reg93 ? forvar97 : wire83) : (reg94 ?
                      (8'ha0) : wire83))) > forvar91));
              reg100 <= forvar97[(1'h0):(1'h0)];
              reg101 = (reg95 ^~ ((~^((~^forvar88) < reg96[(1'h1):(1'h1)])) ?
                  $signed(($signed(wire80) ^~ (forvar90 ^ wire82))) : (!$unsigned((reg92 ?
                      reg95 : wire79)))));
            end
          reg102 = $unsigned(reg99);
        end
      reg103 = $signed((-$signed({(forvar88 ? (8'ha5) : reg86)})));
      for (forvar104 = (1'h0); (forvar104 < (2'h2)); forvar104 = (forvar104 + (1'h1)))
        begin
          reg105 = ((7'h44) || ($unsigned(($signed(reg94) ?
              reg86[(4'h9):(3'h6)] : (reg103 && (8'haa)))) >> $unsigned($signed($signed(forvar91)))));
          for (forvar106 = (1'h0); (forvar106 < (1'h0)); forvar106 = (forvar106 + (1'h1)))
            begin
              reg107 <= $signed(((((7'h44) ? reg102 : $signed(forvar97)) ?
                      reg105 : $signed((reg100 < wire81))) ?
                  ($unsigned((wire83 ? forvar88 : reg103)) ?
                      (+(+reg93)) : (8'ha1)) : {(reg100 ?
                          $unsigned((8'h9d)) : $signed(forvar104)),
                      (reg94 && wire80)}));
              reg108 = $signed((forvar90[(4'he):(3'h5)] ?
                  $signed(forvar106) : forvar88[(5'h12):(4'hd)]));
              reg109 = $signed((&(+({wire83} ?
                  reg94[(4'he):(3'h6)] : {reg98, (8'haa)}))));
              reg110 <= (!forvar91[(1'h1):(1'h0)]);
            end
        end
      reg111 <= (+({((reg108 >> forvar104) == forvar91)} ^~ (~^(^(reg101 || reg109)))));
    end
  assign wire112 = (8'hb0);
endmodule